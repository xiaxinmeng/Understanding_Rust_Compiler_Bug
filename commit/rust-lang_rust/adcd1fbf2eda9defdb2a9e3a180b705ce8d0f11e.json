{"sha": "adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "node_id": "C_kwDOAAsO6NoAKGFkY2QxZmJmMmVkYTlkZWZkYjJhOWUzYTE4MGI3MDVjZThkMGYxMWU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-09-13T11:21:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-13T11:21:31Z"}, "message": "Rollup merge of #101700 - compiler-errors:deletion-span, r=davidtwco\n\nA `SubstitutionPart` is not considered a deletion if it replaces nothing with nothing\n\nFixes #101689", "tree": {"sha": "0e724c9484c96a8ce4c56177adbff2b608d4f935", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e724c9484c96a8ce4c56177adbff2b608d4f935"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjIGe7CRBK7hj4Ov3rIwAAxH8IAC1OZX6R2o+55STycLd4CYqV\n5VO4vi6HZm5+v5+S5vBOYDNlNdt49DXo22bgWQJUcyVKNO4Fl/fcA6HcKw5aUyeN\nzZp10cRd8yH9HNr3eOPm67WJLyl5pUYYGwXFpL0Hx1v7e0AyFfh0HtZmh4TO0oBI\nE6w716p8V3giTynOK092SQNAfneE9XubKauL5nmmW8N7hWVLNcoEsa8B+lNxaWFh\njPFxc4+xyt5eO3ymYUFL1X152r42dUZ8m5e5ketzCuUZhJ47P5MZV1Pjkm/uVOE3\nIpbzoJdGZqWy4FexmD/+zs+8//jMqy6RyUGxgUuAKqWmEIMaSK0TgczPD0PJbXU=\n=qfwp\n-----END PGP SIGNATURE-----\n", "payload": "tree 0e724c9484c96a8ce4c56177adbff2b608d4f935\nparent d5b86d5ee912407aef6af3a152a94bde70bacb7a\nparent cd962e66cf2c3b48a4a54884c475e27e44ddf260\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1663068091 +0530\ncommitter GitHub <noreply@github.com> 1663068091 +0530\n\nRollup merge of #101700 - compiler-errors:deletion-span, r=davidtwco\n\nA `SubstitutionPart` is not considered a deletion if it replaces nothing with nothing\n\nFixes #101689\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "html_url": "https://github.com/rust-lang/rust/commit/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5b86d5ee912407aef6af3a152a94bde70bacb7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5b86d5ee912407aef6af3a152a94bde70bacb7a", "html_url": "https://github.com/rust-lang/rust/commit/d5b86d5ee912407aef6af3a152a94bde70bacb7a"}, {"sha": "cd962e66cf2c3b48a4a54884c475e27e44ddf260", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd962e66cf2c3b48a4a54884c475e27e44ddf260", "html_url": "https://github.com/rust-lang/rust/commit/cd962e66cf2c3b48a4a54884c475e27e44ddf260"}], "stats": {"total": 379, "additions": 159, "deletions": 220}, "files": [{"sha": "66fbb8f1213e0a9b633a2eb4377bd640b731f627", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -1704,7 +1704,7 @@ impl EmitterWriter {\n         {\n             notice_capitalization |= only_capitalization;\n \n-            let has_deletion = parts.iter().any(|p| p.is_deletion());\n+            let has_deletion = parts.iter().any(|p| p.is_deletion(sm));\n             let is_multiline = complete.lines().count() > 1;\n \n             if let Some(span) = span.primary_span() {\n@@ -1880,16 +1880,23 @@ impl EmitterWriter {\n                     let span_start_pos = sm.lookup_char_pos(part.span.lo()).col_display;\n                     let span_end_pos = sm.lookup_char_pos(part.span.hi()).col_display;\n \n+                    // If this addition is _only_ whitespace, then don't trim it,\n+                    // or else we're just not rendering anything.\n+                    let is_whitespace_addition = part.snippet.trim().is_empty();\n+\n                     // Do not underline the leading...\n-                    let start = part.snippet.len().saturating_sub(part.snippet.trim_start().len());\n+                    let start = if is_whitespace_addition {\n+                        0\n+                    } else {\n+                        part.snippet.len().saturating_sub(part.snippet.trim_start().len())\n+                    };\n                     // ...or trailing spaces. Account for substitutions containing unicode\n                     // characters.\n-                    let sub_len: usize = part\n-                        .snippet\n-                        .trim()\n-                        .chars()\n-                        .map(|ch| unicode_width::UnicodeWidthChar::width(ch).unwrap_or(1))\n-                        .sum();\n+                    let sub_len: usize =\n+                        if is_whitespace_addition { &part.snippet } else { part.snippet.trim() }\n+                            .chars()\n+                            .map(|ch| unicode_width::UnicodeWidthChar::width(ch).unwrap_or(1))\n+                            .sum();\n \n                     let offset: isize = offsets\n                         .iter()\n@@ -2130,7 +2137,7 @@ impl EmitterWriter {\n     }\n }\n \n-#[derive(Clone, Copy)]\n+#[derive(Clone, Copy, Debug)]\n enum DisplaySuggestion {\n     Underline,\n     Diff,"}, {"sha": "888128f3f74e7e78e4060800b72ae16baac1bb9b", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -150,21 +150,20 @@ pub struct SubstitutionHighlight {\n \n impl SubstitutionPart {\n     pub fn is_addition(&self, sm: &SourceMap) -> bool {\n-        !self.snippet.is_empty()\n-            && sm\n-                .span_to_snippet(self.span)\n-                .map_or(self.span.is_empty(), |snippet| snippet.trim().is_empty())\n+        !self.snippet.is_empty() && !self.replaces_meaningful_content(sm)\n     }\n \n-    pub fn is_deletion(&self) -> bool {\n-        self.snippet.trim().is_empty()\n+    pub fn is_deletion(&self, sm: &SourceMap) -> bool {\n+        self.snippet.trim().is_empty() && self.replaces_meaningful_content(sm)\n     }\n \n     pub fn is_replacement(&self, sm: &SourceMap) -> bool {\n-        !self.snippet.is_empty()\n-            && sm\n-                .span_to_snippet(self.span)\n-                .map_or(!self.span.is_empty(), |snippet| !snippet.trim().is_empty())\n+        !self.snippet.is_empty() && self.replaces_meaningful_content(sm)\n+    }\n+\n+    fn replaces_meaningful_content(&self, sm: &SourceMap) -> bool {\n+        sm.span_to_snippet(self.span)\n+            .map_or(!self.span.is_empty(), |snippet| !snippet.trim().is_empty())\n     }\n }\n "}, {"sha": "e7db68693c068e5b99862db61b976dd42fc67f44", "filename": "src/test/ui/dyn-keyword/dyn-2018-edition-lint.stderr", "status": "modified", "additions": 14, "deletions": 21, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2018-edition-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2018-edition-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2018-edition-lint.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -13,9 +13,8 @@ LL | #[deny(bare_trait_objects)]\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n-LL + fn function(x: &dyn SomeTrait, y: Box<SomeTrait>) {\n-   |\n+LL | fn function(x: &dyn SomeTrait, y: Box<SomeTrait>) {\n+   |                 +++\n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/dyn-2018-edition-lint.rs:4:35\n@@ -27,9 +26,8 @@ LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n-LL + fn function(x: &SomeTrait, y: Box<dyn SomeTrait>) {\n-   |\n+LL | fn function(x: &SomeTrait, y: Box<dyn SomeTrait>) {\n+   |                                   +++\n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/dyn-2018-edition-lint.rs:17:14\n@@ -41,9 +39,8 @@ LL |     let _x: &SomeTrait = todo!();\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL -     let _x: &SomeTrait = todo!();\n-LL +     let _x: &dyn SomeTrait = todo!();\n-   |\n+LL |     let _x: &dyn SomeTrait = todo!();\n+   |              +++\n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/dyn-2018-edition-lint.rs:4:17\n@@ -55,9 +52,8 @@ LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n-LL + fn function(x: &dyn SomeTrait, y: Box<SomeTrait>) {\n-   |\n+LL | fn function(x: &dyn SomeTrait, y: Box<SomeTrait>) {\n+   |                 +++\n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/dyn-2018-edition-lint.rs:4:17\n@@ -69,9 +65,8 @@ LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n-LL + fn function(x: &dyn SomeTrait, y: Box<SomeTrait>) {\n-   |\n+LL | fn function(x: &dyn SomeTrait, y: Box<SomeTrait>) {\n+   |                 +++\n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/dyn-2018-edition-lint.rs:4:35\n@@ -83,9 +78,8 @@ LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n-LL + fn function(x: &SomeTrait, y: Box<dyn SomeTrait>) {\n-   |\n+LL | fn function(x: &SomeTrait, y: Box<dyn SomeTrait>) {\n+   |                                   +++\n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/dyn-2018-edition-lint.rs:4:35\n@@ -97,9 +91,8 @@ LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n-LL + fn function(x: &SomeTrait, y: Box<dyn SomeTrait>) {\n-   |\n+LL | fn function(x: &SomeTrait, y: Box<dyn SomeTrait>) {\n+   |                                   +++\n \n error: aborting due to 7 previous errors\n "}, {"sha": "08ee77116f0b8795541e9388a2e0236d1bf1148a", "filename": "src/test/ui/dyn-keyword/dyn-2021-edition-error.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2021-edition-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2021-edition-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-2021-edition-error.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -6,9 +6,8 @@ LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL - fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n-LL + fn function(x: &dyn SomeTrait, y: Box<SomeTrait>) {\n-   |\n+LL | fn function(x: &dyn SomeTrait, y: Box<SomeTrait>) {\n+   |                 +++\n \n error[E0782]: trait objects must include the `dyn` keyword\n   --> $DIR/dyn-2021-edition-error.rs:3:35\n@@ -18,9 +17,8 @@ LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL - fn function(x: &SomeTrait, y: Box<SomeTrait>) {\n-LL + fn function(x: &SomeTrait, y: Box<dyn SomeTrait>) {\n-   |\n+LL | fn function(x: &SomeTrait, y: Box<dyn SomeTrait>) {\n+   |                                   +++\n \n error: aborting due to 2 previous errors\n "}, {"sha": "261c2d5742f407f037aa7cfa576029628fff1132", "filename": "src/test/ui/dyn-keyword/dyn-angle-brackets.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-angle-brackets.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-angle-brackets.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-keyword%2Fdyn-angle-brackets.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -13,9 +13,8 @@ LL | #![deny(bare_trait_objects)]\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL -         <fmt::Debug>::fmt(self, f)\n-LL +         <dyn fmt::Debug>::fmt(self, f)\n-   |\n+LL |         <dyn fmt::Debug>::fmt(self, f)\n+   |          +++\n \n error: aborting due to previous error\n "}, {"sha": "8f40922732486bf4ecd74d4cf3248cb1fc32c3e8", "filename": "src/test/ui/impl-trait/generic-with-implicit-hrtb-without-dyn.edition2021.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fimpl-trait%2Fgeneric-with-implicit-hrtb-without-dyn.edition2021.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fimpl-trait%2Fgeneric-with-implicit-hrtb-without-dyn.edition2021.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fgeneric-with-implicit-hrtb-without-dyn.edition2021.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -6,9 +6,8 @@ LL | fn ice() -> impl AsRef<Fn(&())> {\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL - fn ice() -> impl AsRef<Fn(&())> {\n-LL + fn ice() -> impl AsRef<dyn Fn(&())> {\n-   |\n+LL | fn ice() -> impl AsRef<dyn Fn(&())> {\n+   |                        +++\n \n error[E0277]: the trait bound `(): AsRef<(dyn for<'r> Fn(&'r ()) + 'static)>` is not satisfied\n   --> $DIR/generic-with-implicit-hrtb-without-dyn.rs:6:13"}, {"sha": "b26c1834d84a3a44ce80eff0583bf4693ba6b825", "filename": "src/test/ui/issues/issue-86756.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fissues%2Fissue-86756.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fissues%2Fissue-86756.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-86756.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -25,9 +25,8 @@ LL |     eq::<dyn, Foo>\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL -     eq::<dyn, Foo>\n-LL +     eq::<dyn, dyn Foo>\n-   |\n+LL |     eq::<dyn, dyn Foo>\n+   |               +++\n \n error[E0107]: missing generics for trait `Foo`\n   --> $DIR/issue-86756.rs:5:15"}, {"sha": "94d81c3aa71b5ffc0fd6c9aa4b7cd6ea86aab295", "filename": "src/test/ui/lint/force-warn/allowed-group-warn-by-default-lint.stderr", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fallowed-group-warn-by-default-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fallowed-group-warn-by-default-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fallowed-group-warn-by-default-lint.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -9,9 +9,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/allowed-group-warn-by-default-lint.rs:10:25\n@@ -23,9 +22,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/allowed-group-warn-by-default-lint.rs:10:25\n@@ -37,9 +35,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: 3 warnings emitted\n "}, {"sha": "7f0fd8530e2cc27c352256f504a234a8394b7c07", "filename": "src/test/ui/lint/force-warn/cap-lints-allow.stderr", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fcap-lints-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fcap-lints-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fcap-lints-allow.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -9,9 +9,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/cap-lints-allow.rs:8:25\n@@ -23,9 +22,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/cap-lints-allow.rs:8:25\n@@ -37,9 +35,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: 3 warnings emitted\n "}, {"sha": "eb2bca7b84d717e1eaa6c58720521e9a04b5de59", "filename": "src/test/ui/lint/force-warn/lint-group-allowed-cli-warn-by-default-lint.stderr", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-cli-warn-by-default-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-cli-warn-by-default-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-cli-warn-by-default-lint.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -9,9 +9,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-cli-warn-by-default-lint.rs:8:25\n@@ -23,9 +22,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-cli-warn-by-default-lint.rs:8:25\n@@ -37,9 +35,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: 3 warnings emitted\n "}, {"sha": "ed01937a57b15ab5305b5003c28f381c6af44f8e", "filename": "src/test/ui/lint/force-warn/lint-group-allowed-lint-group.stderr", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-lint-group.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-lint-group.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-lint-group.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -9,9 +9,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-lint-group.rs:10:25\n@@ -23,9 +22,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-lint-group.rs:10:25\n@@ -37,9 +35,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: 3 warnings emitted\n "}, {"sha": "8db7c12757b03e341ff16894bac19dc3a10cd0f0", "filename": "src/test/ui/lint/force-warn/lint-group-allowed-warn-by-default-lint.stderr", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-warn-by-default-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-warn-by-default-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Flint-group-allowed-warn-by-default-lint.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -9,9 +9,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-warn-by-default-lint.rs:10:25\n@@ -23,9 +22,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/lint-group-allowed-warn-by-default-lint.rs:10:25\n@@ -37,9 +35,8 @@ LL | pub fn function(_x: Box<SomeTrait>) {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub fn function(_x: Box<SomeTrait>) {}\n-LL + pub fn function(_x: Box<dyn SomeTrait>) {}\n-   |\n+LL | pub fn function(_x: Box<dyn SomeTrait>) {}\n+   |                         +++\n \n warning: 3 warnings emitted\n "}, {"sha": "ae55ae06714319e745a22c3eee947e62683b5a7b", "filename": "src/test/ui/parser/increment-notfixed.stderr", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fparser%2Fincrement-notfixed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fparser%2Fincrement-notfixed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fincrement-notfixed.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -8,9 +8,8 @@ help: use `+= 1` instead\n    |\n LL |     { let tmp = i; i += 1; tmp };\n    |     +++++++++++  ~~~~~~~~~~~~~~~\n-LL -     i++;\n-LL +     i += 1;\n-   |\n+LL |     i += 1;\n+   |       ~~~~\n \n error: Rust has no postfix increment operator\n   --> $DIR/increment-notfixed.rs:17:12\n@@ -24,9 +23,8 @@ help: use `+= 1` instead\n    |\n LL |     while { let tmp = i; i += 1; tmp } < 5 {\n    |           +++++++++++  ~~~~~~~~~~~~~~~\n-LL -     while i++ < 5 {\n-LL +     while i += 1 < 5 {\n-   |\n+LL |     while i += 1 < 5 {\n+   |             ~~~~\n \n error: Rust has no postfix increment operator\n   --> $DIR/increment-notfixed.rs:25:8\n@@ -38,9 +36,8 @@ help: use `+= 1` instead\n    |\n LL |     { let tmp_ = tmp; tmp += 1; tmp_ };\n    |     ++++++++++++    ~~~~~~~~~~~~~~~~~~\n-LL -     tmp++;\n-LL +     tmp += 1;\n-   |\n+LL |     tmp += 1;\n+   |         ~~~~\n \n error: Rust has no postfix increment operator\n   --> $DIR/increment-notfixed.rs:31:14\n@@ -54,9 +51,8 @@ help: use `+= 1` instead\n    |\n LL |     while { let tmp_ = tmp; tmp += 1; tmp_ } < 5 {\n    |           ++++++++++++    ~~~~~~~~~~~~~~~~~~\n-LL -     while tmp++ < 5 {\n-LL +     while tmp += 1 < 5 {\n-   |\n+LL |     while tmp += 1 < 5 {\n+   |               ~~~~\n \n error: Rust has no postfix increment operator\n   --> $DIR/increment-notfixed.rs:39:16\n@@ -68,9 +64,8 @@ help: use `+= 1` instead\n    |\n LL |     { let tmp = foo.bar.qux; foo.bar.qux += 1; tmp };\n    |     +++++++++++            ~~~~~~~~~~~~~~~~~~~~~~~~~\n-LL -     foo.bar.qux++;\n-LL +     foo.bar.qux += 1;\n-   |\n+LL |     foo.bar.qux += 1;\n+   |                 ~~~~\n \n error: Rust has no postfix increment operator\n   --> $DIR/increment-notfixed.rs:49:10\n@@ -82,9 +77,8 @@ help: use `+= 1` instead\n    |\n LL |     { let tmp = s.tmp; s.tmp += 1; tmp };\n    |     +++++++++++      ~~~~~~~~~~~~~~~~~~~\n-LL -     s.tmp++;\n-LL +     s.tmp += 1;\n-   |\n+LL |     s.tmp += 1;\n+   |           ~~~~\n \n error: Rust has no prefix increment operator\n   --> $DIR/increment-notfixed.rs:56:5"}, {"sha": "823f75bfac86f52b8441622a9b40f22b31b20bf3", "filename": "src/test/ui/parser/trait-object-trait-parens.stderr", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -27,9 +27,8 @@ LL |     let _: Box<(Obj) + (?Sized) + (for<'a> Trait<'a>)>;\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL -     let _: Box<(Obj) + (?Sized) + (for<'a> Trait<'a>)>;\n-LL +     let _: Box<dyn (Obj) + (?Sized) + (for<'a> Trait<'a>)>;\n-   |\n+LL |     let _: Box<dyn (Obj) + (?Sized) + (for<'a> Trait<'a>)>;\n+   |                +++\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-object-trait-parens.rs:8:35\n@@ -52,9 +51,8 @@ LL |     let _: Box<?Sized + (for<'a> Trait<'a>) + (Obj)>;\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL -     let _: Box<?Sized + (for<'a> Trait<'a>) + (Obj)>;\n-LL +     let _: Box<dyn ?Sized + (for<'a> Trait<'a>) + (Obj)>;\n-   |\n+LL |     let _: Box<dyn ?Sized + (for<'a> Trait<'a>) + (Obj)>;\n+   |                +++\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-object-trait-parens.rs:13:47\n@@ -77,9 +75,8 @@ LL |     let _: Box<for<'a> Trait<'a> + (Obj) + (?Sized)>;\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL -     let _: Box<for<'a> Trait<'a> + (Obj) + (?Sized)>;\n-LL +     let _: Box<dyn for<'a> Trait<'a> + (Obj) + (?Sized)>;\n-   |\n+LL |     let _: Box<dyn for<'a> Trait<'a> + (Obj) + (?Sized)>;\n+   |                +++\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-object-trait-parens.rs:18:36"}, {"sha": "c6bc082cf18db6cd87e4c683684986e7019162e0", "filename": "src/test/ui/rust-2021/reserved-prefixes-migration.stderr", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Frust-2021%2Freserved-prefixes-migration.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Frust-2021%2Freserved-prefixes-migration.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Freserved-prefixes-migration.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -13,9 +13,8 @@ LL | #![warn(rust_2021_prefixes_incompatible_syntax)]\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/reserving-syntax.html>\n help: insert whitespace here to avoid this being parsed as a prefix in Rust 2021\n    |\n-LL -     m2!(z\"hey\");\n-LL +     m2!(z \"hey\");\n-   |\n+LL |     m2!(z \"hey\");\n+   |          +\n \n warning: prefix `prefix` is unknown\n   --> $DIR/reserved-prefixes-migration.rs:19:9\n@@ -27,9 +26,8 @@ LL |     m2!(prefix\"hey\");\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/reserving-syntax.html>\n help: insert whitespace here to avoid this being parsed as a prefix in Rust 2021\n    |\n-LL -     m2!(prefix\"hey\");\n-LL +     m2!(prefix \"hey\");\n-   |\n+LL |     m2!(prefix \"hey\");\n+   |               +\n \n warning: prefix `hey` is unknown\n   --> $DIR/reserved-prefixes-migration.rs:22:9\n@@ -41,9 +39,8 @@ LL |     m3!(hey#123);\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/reserving-syntax.html>\n help: insert whitespace here to avoid this being parsed as a prefix in Rust 2021\n    |\n-LL -     m3!(hey#123);\n-LL +     m3!(hey #123);\n-   |\n+LL |     m3!(hey #123);\n+   |            +\n \n warning: prefix `hey` is unknown\n   --> $DIR/reserved-prefixes-migration.rs:25:9\n@@ -55,9 +52,8 @@ LL |     m3!(hey#hey);\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/reserving-syntax.html>\n help: insert whitespace here to avoid this being parsed as a prefix in Rust 2021\n    |\n-LL -     m3!(hey#hey);\n-LL +     m3!(hey #hey);\n-   |\n+LL |     m3!(hey #hey);\n+   |            +\n \n warning: prefix `kind` is unknown\n   --> $DIR/reserved-prefixes-migration.rs:35:14\n@@ -69,9 +65,8 @@ LL |     #name = #kind#value\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/reserving-syntax.html>\n help: insert whitespace here to avoid this being parsed as a prefix in Rust 2021\n    |\n-LL -     #name = #kind#value\n-LL +     #name = #kind #value\n-   |\n+LL |     #name = #kind #value\n+   |                  +\n \n warning: 5 warnings emitted\n "}, {"sha": "807d6d98bd3c3f82c1bdb282ce8c7ea9b81f3c97", "filename": "src/test/ui/rust-2021/reserved-prefixes.stderr", "status": "modified", "additions": 18, "deletions": 27, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Frust-2021%2Freserved-prefixes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Frust-2021%2Freserved-prefixes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Freserved-prefixes.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -7,9 +7,8 @@ LL |     demo3!(foo#bar);\n    = note: prefixed identifiers and literals are reserved since Rust 2021\n help: consider inserting whitespace here\n    |\n-LL -     demo3!(foo#bar);\n-LL +     demo3!(foo #bar);\n-   |\n+LL |     demo3!(foo #bar);\n+   |               +\n \n error: prefix `foo` is unknown\n   --> $DIR/reserved-prefixes.rs:17:12\n@@ -20,9 +19,8 @@ LL |     demo2!(foo\"bar\");\n    = note: prefixed identifiers and literals are reserved since Rust 2021\n help: consider inserting whitespace here\n    |\n-LL -     demo2!(foo\"bar\");\n-LL +     demo2!(foo \"bar\");\n-   |\n+LL |     demo2!(foo \"bar\");\n+   |               +\n \n error: prefix `foo` is unknown\n   --> $DIR/reserved-prefixes.rs:18:12\n@@ -33,9 +31,8 @@ LL |     demo2!(foo'b');\n    = note: prefixed identifiers and literals are reserved since Rust 2021\n help: consider inserting whitespace here\n    |\n-LL -     demo2!(foo'b');\n-LL +     demo2!(foo 'b');\n-   |\n+LL |     demo2!(foo 'b');\n+   |               +\n \n error: prefix `foo` is unknown\n   --> $DIR/reserved-prefixes.rs:20:12\n@@ -46,9 +43,8 @@ LL |     demo2!(foo'b);\n    = note: prefixed identifiers and literals are reserved since Rust 2021\n help: consider inserting whitespace here\n    |\n-LL -     demo2!(foo'b);\n-LL +     demo2!(foo 'b);\n-   |\n+LL |     demo2!(foo 'b);\n+   |               +\n \n error: prefix `foo` is unknown\n   --> $DIR/reserved-prefixes.rs:21:12\n@@ -59,9 +55,8 @@ LL |     demo3!(foo# bar);\n    = note: prefixed identifiers and literals are reserved since Rust 2021\n help: consider inserting whitespace here\n    |\n-LL -     demo3!(foo# bar);\n-LL +     demo3!(foo # bar);\n-   |\n+LL |     demo3!(foo # bar);\n+   |               +\n \n error: prefix `foo` is unknown\n   --> $DIR/reserved-prefixes.rs:22:12\n@@ -72,9 +67,8 @@ LL |     demo4!(foo#! bar);\n    = note: prefixed identifiers and literals are reserved since Rust 2021\n help: consider inserting whitespace here\n    |\n-LL -     demo4!(foo#! bar);\n-LL +     demo4!(foo #! bar);\n-   |\n+LL |     demo4!(foo #! bar);\n+   |               +\n \n error: prefix `foo` is unknown\n   --> $DIR/reserved-prefixes.rs:23:12\n@@ -85,9 +79,8 @@ LL |     demo4!(foo## bar);\n    = note: prefixed identifiers and literals are reserved since Rust 2021\n help: consider inserting whitespace here\n    |\n-LL -     demo4!(foo## bar);\n-LL +     demo4!(foo ## bar);\n-   |\n+LL |     demo4!(foo ## bar);\n+   |               +\n \n error: prefix `foo` is unknown\n   --> $DIR/reserved-prefixes.rs:25:12\n@@ -98,9 +91,8 @@ LL |     demo4!(foo#bar#);\n    = note: prefixed identifiers and literals are reserved since Rust 2021\n help: consider inserting whitespace here\n    |\n-LL -     demo4!(foo#bar#);\n-LL +     demo4!(foo #bar#);\n-   |\n+LL |     demo4!(foo #bar#);\n+   |               +\n \n error: prefix `bar` is unknown\n   --> $DIR/reserved-prefixes.rs:25:16\n@@ -111,9 +103,8 @@ LL |     demo4!(foo#bar#);\n    = note: prefixed identifiers and literals are reserved since Rust 2021\n help: consider inserting whitespace here\n    |\n-LL -     demo4!(foo#bar#);\n-LL +     demo4!(foo#bar #);\n-   |\n+LL |     demo4!(foo#bar #);\n+   |                   +\n \n error: aborting due to 9 previous errors\n "}, {"sha": "a788cab6e4e8e0be742fe0a5cf3fd4a6ef8c61bf", "filename": "src/test/ui/suggestions/issue-61963.stderr", "status": "modified", "additions": 14, "deletions": 21, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61963.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61963.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61963.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -13,9 +13,8 @@ LL | #![deny(bare_trait_objects)]\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL -     bar: Box<Bar>,\n-LL +     bar: Box<dyn Bar>,\n-   |\n+LL |     bar: Box<dyn Bar>,\n+   |              +++\n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/issue-61963.rs:18:1\n@@ -27,9 +26,8 @@ LL | pub struct Foo {\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub struct Foo {\n-LL + dyn pub struct Foo {\n-   |\n+LL | dyn pub struct Foo {\n+   | +++\n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/issue-61963.rs:28:14\n@@ -41,9 +39,8 @@ LL |     bar: Box<Bar>,\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL -     bar: Box<Bar>,\n-LL +     bar: Box<dyn Bar>,\n-   |\n+LL |     bar: Box<dyn Bar>,\n+   |              +++\n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/issue-61963.rs:28:14\n@@ -55,9 +52,8 @@ LL |     bar: Box<Bar>,\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL -     bar: Box<Bar>,\n-LL +     bar: Box<dyn Bar>,\n-   |\n+LL |     bar: Box<dyn Bar>,\n+   |              +++\n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/issue-61963.rs:18:1\n@@ -69,9 +65,8 @@ LL | pub struct Foo {\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub struct Foo {\n-LL + dyn pub struct Foo {\n-   |\n+LL | dyn pub struct Foo {\n+   | +++\n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/issue-61963.rs:18:1\n@@ -83,9 +78,8 @@ LL | pub struct Foo {\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub struct Foo {\n-LL + dyn pub struct Foo {\n-   |\n+LL | dyn pub struct Foo {\n+   | +++\n \n error: trait objects without an explicit `dyn` are deprecated\n   --> $DIR/issue-61963.rs:18:1\n@@ -97,9 +91,8 @@ LL | pub struct Foo {\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - pub struct Foo {\n-LL + dyn pub struct Foo {\n-   |\n+LL | dyn pub struct Foo {\n+   | +++\n \n error: aborting due to 7 previous errors\n "}, {"sha": "398caa98b84db8ac4467bdaa8894e18ba2349496", "filename": "src/test/ui/suggestions/suggest-blanket-impl-local-trait.stderr", "status": "modified", "additions": 14, "deletions": 21, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-blanket-impl-local-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-blanket-impl-local-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-blanket-impl-local-trait.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -6,9 +6,8 @@ LL | impl LocalTraitTwo for LocalTraitOne {}\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL - impl LocalTraitTwo for LocalTraitOne {}\n-LL + impl LocalTraitTwo for dyn LocalTraitOne {}\n-   |\n+LL | impl LocalTraitTwo for dyn LocalTraitOne {}\n+   |                        +++\n help: alternatively use a blanket implementation to implement `LocalTraitTwo` for all types that also implement `LocalTraitOne`\n    |\n LL | impl<T: LocalTraitOne> LocalTraitTwo for T {}\n@@ -22,9 +21,8 @@ LL | impl fmt::Display for LocalTraitOne {\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL - impl fmt::Display for LocalTraitOne {\n-LL + impl fmt::Display for dyn LocalTraitOne {\n-   |\n+LL | impl fmt::Display for dyn LocalTraitOne {\n+   |                       +++\n \n error[E0782]: trait objects must include the `dyn` keyword\n   --> $DIR/suggest-blanket-impl-local-trait.rs:26:23\n@@ -34,9 +32,8 @@ LL | impl fmt::Display for LocalTraitTwo + Send {\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL - impl fmt::Display for LocalTraitTwo + Send {\n-LL + impl fmt::Display for dyn LocalTraitTwo + Send {\n-   |\n+LL | impl fmt::Display for dyn LocalTraitTwo + Send {\n+   |                       +++\n \n error[E0782]: trait objects must include the `dyn` keyword\n   --> $DIR/suggest-blanket-impl-local-trait.rs:34:24\n@@ -46,9 +43,8 @@ LL | impl LocalTraitOne for fmt::Display {}\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL - impl LocalTraitOne for fmt::Display {}\n-LL + impl LocalTraitOne for dyn fmt::Display {}\n-   |\n+LL | impl LocalTraitOne for dyn fmt::Display {}\n+   |                        +++\n help: alternatively use a blanket implementation to implement `LocalTraitOne` for all types that also implement `fmt::Display`\n    |\n LL | impl<T: fmt::Display> LocalTraitOne for T {}\n@@ -62,9 +58,8 @@ LL | impl LocalTraitOne for fmt::Display + Send {}\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL - impl LocalTraitOne for fmt::Display + Send {}\n-LL + impl LocalTraitOne for dyn fmt::Display + Send {}\n-   |\n+LL | impl LocalTraitOne for dyn fmt::Display + Send {}\n+   |                        +++\n help: alternatively use a blanket implementation to implement `LocalTraitOne` for all types that also implement `fmt::Display + Send`\n    |\n LL | impl<T: fmt::Display + Send> LocalTraitOne for T {}\n@@ -78,9 +73,8 @@ LL | impl<E> GenericTrait<E> for LocalTraitOne {}\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL - impl<E> GenericTrait<E> for LocalTraitOne {}\n-LL + impl<E> GenericTrait<E> for dyn LocalTraitOne {}\n-   |\n+LL | impl<E> GenericTrait<E> for dyn LocalTraitOne {}\n+   |                             +++\n help: alternatively use a blanket implementation to implement `GenericTrait<E>` for all types that also implement `LocalTraitOne`\n    |\n LL | impl<E, T: LocalTraitOne> GenericTrait<E> for T {}\n@@ -94,9 +88,8 @@ LL | impl<T, E> GenericTraitTwo<E> for GenericTrait<T> {}\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL - impl<T, E> GenericTraitTwo<E> for GenericTrait<T> {}\n-LL + impl<T, E> GenericTraitTwo<E> for dyn GenericTrait<T> {}\n-   |\n+LL | impl<T, E> GenericTraitTwo<E> for dyn GenericTrait<T> {}\n+   |                                   +++\n help: alternatively use a blanket implementation to implement `GenericTraitTwo<E>` for all types that also implement `GenericTrait<T>`\n    |\n LL | impl<T, E, U: GenericTrait<T>> GenericTraitTwo<E> for U {}"}, {"sha": "87e7164362091f724aa68467856f6c507f0c2adf", "filename": "src/test/ui/suggestions/suggest-swapping-self-ty-and-trait-edition-2021.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-swapping-self-ty-and-trait-edition-2021.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-swapping-self-ty-and-trait-edition-2021.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-swapping-self-ty-and-trait-edition-2021.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -39,9 +39,8 @@ LL | impl<'a, T> Struct<T> for Trait<'a, T> {}\n    |\n help: add `dyn` keyword before this trait\n    |\n-LL - impl<'a, T> Struct<T> for Trait<'a, T> {}\n-LL + impl<'a, T> Struct<T> for dyn Trait<'a, T> {}\n-   |\n+LL | impl<'a, T> Struct<T> for dyn Trait<'a, T> {}\n+   |                           +++\n \n error: aborting due to 4 previous errors\n "}, {"sha": "f716e6c17e22da4670b146faec60a626a3e5b8a6", "filename": "src/test/ui/suggestions/suggest-swapping-self-ty-and-trait.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-swapping-self-ty-and-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-swapping-self-ty-and-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-swapping-self-ty-and-trait.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -42,9 +42,8 @@ LL | impl<'a, T> Struct<T> for Trait<'a, T> {}\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - impl<'a, T> Struct<T> for Trait<'a, T> {}\n-LL + impl<'a, T> Struct<T> for dyn Trait<'a, T> {}\n-   |\n+LL | impl<'a, T> Struct<T> for dyn Trait<'a, T> {}\n+   |                           +++\n \n error: aborting due to 3 previous errors; 1 warning emitted\n "}, {"sha": "1c52629daa4834649ed179ef70b5873edbd93c27", "filename": "src/test/ui/traits/bound/not-on-bare-trait.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Ftraits%2Fbound%2Fnot-on-bare-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e/src%2Ftest%2Fui%2Ftraits%2Fbound%2Fnot-on-bare-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fbound%2Fnot-on-bare-trait.stderr?ref=adcd1fbf2eda9defdb2a9e3a180b705ce8d0f11e", "patch": "@@ -9,9 +9,8 @@ LL | fn foo(_x: Foo + Send) {\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n help: use `dyn`\n    |\n-LL - fn foo(_x: Foo + Send) {\n-LL + fn foo(_x: dyn Foo + Send) {\n-   |\n+LL | fn foo(_x: dyn Foo + Send) {\n+   |            +++\n \n error[E0277]: the size for values of type `(dyn Foo + Send + 'static)` cannot be known at compilation time\n   --> $DIR/not-on-bare-trait.rs:7:8"}]}