{"sha": "62c245281c9e988cf5eb7cffa15f0dd2ce3b54cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYzI0NTI4MWM5ZTk4OGNmNWViN2NmZmExNWYwZGQyY2UzYjU0Y2Y=", "commit": {"author": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2017-06-15T11:24:08Z"}, "committer": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2017-06-15T11:24:08Z"}, "message": "Ensure that disable-doc builds don't depend on doc targets", "tree": {"sha": "6fcbae9810a2f12dec6f40d147f95ed3aea9cdbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fcbae9810a2f12dec6f40d147f95ed3aea9cdbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62c245281c9e988cf5eb7cffa15f0dd2ce3b54cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62c245281c9e988cf5eb7cffa15f0dd2ce3b54cf", "html_url": "https://github.com/rust-lang/rust/commit/62c245281c9e988cf5eb7cffa15f0dd2ce3b54cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62c245281c9e988cf5eb7cffa15f0dd2ce3b54cf/comments", "author": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e40ef964fe491b19c22dfb8dd36d1eab14223c36", "url": "https://api.github.com/repos/rust-lang/rust/commits/e40ef964fe491b19c22dfb8dd36d1eab14223c36", "html_url": "https://github.com/rust-lang/rust/commit/e40ef964fe491b19c22dfb8dd36d1eab14223c36"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "ca829cc56683ffbec3830727e3ce8b7ea317d52a", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/62c245281c9e988cf5eb7cffa15f0dd2ce3b54cf/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c245281c9e988cf5eb7cffa15f0dd2ce3b54cf/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=62c245281c9e988cf5eb7cffa15f0dd2ce3b54cf", "patch": "@@ -1407,13 +1407,20 @@ mod tests {\n     fn build(args: &[&str],\n              extra_host: &[&str],\n              extra_target: &[&str]) -> Build {\n+        build_(args, extra_host, extra_target, true)\n+    }\n+\n+    fn build_(args: &[&str],\n+              extra_host: &[&str],\n+              extra_target: &[&str],\n+              docs: bool) -> Build {\n         let mut args = args.iter().map(|s| s.to_string()).collect::<Vec<_>>();\n         args.push(\"--build\".to_string());\n         args.push(\"A\".to_string());\n         let flags = Flags::parse(&args);\n \n         let mut config = Config::default();\n-        config.docs = true;\n+        config.docs = docs;\n         config.build = \"A\".to_string();\n         config.host = vec![config.build.clone()];\n         config.host.extend(extra_host.iter().map(|s| s.to_string()));\n@@ -1768,4 +1775,22 @@ mod tests {\n         assert!(!plan.iter().any(|s| s.name.contains(\"tidy\")));\n         assert!(plan.iter().any(|s| s.name.contains(\"valgrind\")));\n     }\n+\n+    #[test]\n+    fn test_disable_docs() {\n+        let build = build_(&[\"test\"], &[], &[], false);\n+        let rules = super::build_rules(&build);\n+        let plan = rules.plan();\n+        println!(\"rules: {:#?}\", plan);\n+        assert!(!plan.iter().any(|s| {\n+            s.name.contains(\"doc-\") || s.name.contains(\"default:doc\")\n+        }));\n+        // none of the dependencies should be a doc rule either\n+        assert!(!plan.iter().any(|s| {\n+            rules.rules[s.name].deps.iter().any(|dep| {\n+                let dep = dep(&rules.sbuild.name(s.name));\n+                dep.name.contains(\"doc-\") || dep.name.contains(\"default:doc\")\n+            })\n+        }));\n+    }\n }"}]}