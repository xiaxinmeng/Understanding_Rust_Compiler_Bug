{"sha": "4e976262a1598fa48cd08fa0e429f05299d1ae3e", "node_id": "C_kwDOAAsO6NoAKDRlOTc2MjYyYTE1OThmYTQ4Y2QwOGZhMGU0MjlmMDUyOTlkMWFlM2U", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-12T02:00:37Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-24T17:53:35Z"}, "message": "Call them constants instead of types", "tree": {"sha": "765187cd924729ed3dc049bc2dedf670deac2860", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/765187cd924729ed3dc049bc2dedf670deac2860"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e976262a1598fa48cd08fa0e429f05299d1ae3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e976262a1598fa48cd08fa0e429f05299d1ae3e", "html_url": "https://github.com/rust-lang/rust/commit/4e976262a1598fa48cd08fa0e429f05299d1ae3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e976262a1598fa48cd08fa0e429f05299d1ae3e/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a24f08ba43166cfee86d868b3fe8612aec6faca", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a24f08ba43166cfee86d868b3fe8612aec6faca", "html_url": "https://github.com/rust-lang/rust/commit/4a24f08ba43166cfee86d868b3fe8612aec6faca"}], "stats": {"total": 89, "additions": 47, "deletions": 42}, "files": [{"sha": "16cffb45f0f064431b394764f52b5add8bb04940", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4e976262a1598fa48cd08fa0e429f05299d1ae3e/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e976262a1598fa48cd08fa0e429f05299d1ae3e/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=4e976262a1598fa48cd08fa0e429f05299d1ae3e", "patch": "@@ -1588,9 +1588,14 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                             Mismatch::Variable(infer::ExpectedFound { expected, found }),\n                         )\n                     }\n+                    ValuePairs::Terms(infer::ExpectedFound {\n+                        expected: ty::Term::Const(_),\n+                        found: ty::Term::Const(_),\n+                    }) => (false, Mismatch::Fixed(\"constant\")),\n                     ValuePairs::TraitRefs(_) | ValuePairs::PolyTraitRefs(_) => {\n                         (false, Mismatch::Fixed(\"trait\"))\n                     }\n+                    ValuePairs::Regions(_) => (false, Mismatch::Fixed(\"lifetime\")),\n                     _ => (false, Mismatch::Fixed(\"type\")),\n                 };\n                 let vals = match self.values_str(values) {"}, {"sha": "61b3551182c905e141716decd33b4d1dec7065aa", "filename": "src/test/ui/const-generics/defaults/generic-expr-default-concrete.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fgeneric-expr-default-concrete.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fgeneric-expr-default-concrete.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fgeneric-expr-default-concrete.stderr?ref=4e976262a1598fa48cd08fa0e429f05299d1ae3e", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     Foo::<10, 12>\n    |     ^^^^^^^^^^^^^ expected `11`, found `12`\n    |\n-   = note: expected type `11`\n-              found type `12`\n+   = note: expected constant `11`\n+              found constant `12`\n \n error: aborting due to previous error\n "}, {"sha": "e83f89a60333fd131b4cf46577a6882c7beab2f4", "filename": "src/test/ui/const-generics/defaults/generic-expr-default-mismatched-types.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fgeneric-expr-default-mismatched-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fgeneric-expr-default-mismatched-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fgeneric-expr-default-mismatched-types.stderr?ref=4e976262a1598fa48cd08fa0e429f05299d1ae3e", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     Foo::<N, { N + 2 }>\n    |     ^^^^^^^^^^^^^^^^^^^ expected `{ N + 1 }`, found `{ N + 2 }`\n    |\n-   = note: expected type `{ N + 1 }`\n-              found type `{ N + 2 }`\n+   = note: expected constant `{ N + 1 }`\n+              found constant `{ N + 2 }`\n \n error: aborting due to previous error\n "}, {"sha": "9e1297d5ee4bf2e5d7156d3f489560e38cff76b9", "filename": "src/test/ui/const-generics/generic_const_exprs/abstract-const-as-cast-3.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fabstract-const-as-cast-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fabstract-const-as-cast-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fabstract-const-as-cast-3.stderr?ref=4e976262a1598fa48cd08fa0e429f05299d1ae3e", "patch": "@@ -22,8 +22,8 @@ error[E0308]: mismatched types\n LL |     assert_impl::<HasCastInTraitImpl<{ N + 1 }, { N as u128 }>>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `{ N as u128 }`, found `{ O as u128 }`\n    |\n-   = note: expected type `{ N as u128 }`\n-              found type `{ O as u128 }`\n+   = note: expected constant `{ N as u128 }`\n+              found constant `{ O as u128 }`\n \n error: unconstrained generic constant\n   --> $DIR/abstract-const-as-cast-3.rs:20:19\n@@ -49,26 +49,26 @@ error[E0308]: mismatched types\n LL |     assert_impl::<HasCastInTraitImpl<{ N + 1 }, { N as _ }>>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `{ N as _ }`, found `{ O as u128 }`\n    |\n-   = note: expected type `{ N as _ }`\n-              found type `{ O as u128 }`\n+   = note: expected constant `{ N as _ }`\n+              found constant `{ O as u128 }`\n \n error[E0308]: mismatched types\n   --> $DIR/abstract-const-as-cast-3.rs:23:5\n    |\n LL |     assert_impl::<HasCastInTraitImpl<13, { 12 as u128 }>>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `12`, found `13`\n    |\n-   = note: expected type `12`\n-              found type `13`\n+   = note: expected constant `12`\n+              found constant `13`\n \n error[E0308]: mismatched types\n   --> $DIR/abstract-const-as-cast-3.rs:25:5\n    |\n LL |     assert_impl::<HasCastInTraitImpl<14, 13>>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `13`, found `14`\n    |\n-   = note: expected type `13`\n-              found type `14`\n+   = note: expected constant `13`\n+              found constant `14`\n \n error: unconstrained generic constant\n   --> $DIR/abstract-const-as-cast-3.rs:35:19\n@@ -94,8 +94,8 @@ error[E0308]: mismatched types\n LL |     assert_impl::<HasCastInTraitImpl<{ N + 1 }, { N as u128 }>>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `{ N as u128 }`, found `{ O as u128 }`\n    |\n-   = note: expected type `{ N as u128 }`\n-              found type `{ O as u128 }`\n+   = note: expected constant `{ N as u128 }`\n+              found constant `{ O as u128 }`\n \n error: unconstrained generic constant\n   --> $DIR/abstract-const-as-cast-3.rs:38:19\n@@ -121,26 +121,26 @@ error[E0308]: mismatched types\n LL |     assert_impl::<HasCastInTraitImpl<{ N + 1 }, { N as _ }>>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `{ N as _ }`, found `{ O as u128 }`\n    |\n-   = note: expected type `{ N as _ }`\n-              found type `{ O as u128 }`\n+   = note: expected constant `{ N as _ }`\n+              found constant `{ O as u128 }`\n \n error[E0308]: mismatched types\n   --> $DIR/abstract-const-as-cast-3.rs:41:5\n    |\n LL |     assert_impl::<HasCastInTraitImpl<13, { 12 as u128 }>>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `12`, found `13`\n    |\n-   = note: expected type `12`\n-              found type `13`\n+   = note: expected constant `12`\n+              found constant `13`\n \n error[E0308]: mismatched types\n   --> $DIR/abstract-const-as-cast-3.rs:43:5\n    |\n LL |     assert_impl::<HasCastInTraitImpl<14, 13>>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `13`, found `14`\n    |\n-   = note: expected type `13`\n-              found type `14`\n+   = note: expected constant `13`\n+              found constant `14`\n \n error: aborting due to 12 previous errors\n "}, {"sha": "83a2f3740b14600ba06552c46f23977654c61d53", "filename": "src/test/ui/const-generics/generic_const_exprs/different-fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fdifferent-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fdifferent-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fdifferent-fn.stderr?ref=4e976262a1598fa48cd08fa0e429f05299d1ae3e", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     [0; size_of::<Foo<T>>()]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ expected `size_of::<T>()`, found `size_of::<Foo<T>>()`\n    |\n-   = note: expected type `size_of::<T>()`\n-              found type `size_of::<Foo<T>>()`\n+   = note: expected constant `size_of::<T>()`\n+              found constant `size_of::<Foo<T>>()`\n \n error: unconstrained generic constant\n   --> $DIR/different-fn.rs:10:9"}, {"sha": "0742db398c9c4fd17b6cb8694edf9eb89f87cd06", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-62504.full.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-62504.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-62504.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-62504.full.stderr?ref=4e976262a1598fa48cd08fa0e429f05299d1ae3e", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |         ArrayHolder([0; Self::SIZE])\n    |                     ^^^^^^^^^^^^^^^ expected `X`, found `Self::SIZE`\n    |\n-   = note: expected type `X`\n-              found type `Self::SIZE`\n+   = note: expected constant `X`\n+              found constant `Self::SIZE`\n \n error: unconstrained generic constant\n   --> $DIR/issue-62504.rs:18:25"}, {"sha": "38dfa65e4091ff8fcd847515d17a0a5ca8caea2e", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-72819-generic-in-const-eval.full.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-72819-generic-in-const-eval.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-72819-generic-in-const-eval.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-72819-generic-in-const-eval.full.stderr?ref=4e976262a1598fa48cd08fa0e429f05299d1ae3e", "patch": "@@ -4,17 +4,17 @@ error[E0308]: mismatched types\n LL |     let x: Arr<{usize::MAX}> = Arr {};\n    |            ^^^^^^^^^^^^^^^^^ expected `false`, found `true`\n    |\n-   = note: expected type `false`\n-              found type `true`\n+   = note: expected constant `false`\n+              found constant `true`\n \n error[E0308]: mismatched types\n   --> $DIR/issue-72819-generic-in-const-eval.rs:20:32\n    |\n LL |     let x: Arr<{usize::MAX}> = Arr {};\n    |                                ^^^ expected `false`, found `true`\n    |\n-   = note: expected type `false`\n-              found type `true`\n+   = note: expected constant `false`\n+              found constant `true`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "b693023f125a4565d8006e3c8677fb83d5b14eba", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-83765.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-83765.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-83765.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-83765.stderr?ref=4e976262a1598fa48cd08fa0e429f05299d1ae3e", "patch": "@@ -4,8 +4,8 @@ error[E0308]: method not compatible with trait\n LL |     fn size(&self) -> [usize; DIM] {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Self::DIM`, found `DIM`\n    |\n-   = note: expected type `Self::DIM`\n-              found type `DIM`\n+   = note: expected constant `Self::DIM`\n+              found constant `DIM`\n \n error: unconstrained generic constant\n   --> $DIR/issue-83765.rs:32:24\n@@ -26,8 +26,8 @@ error[E0308]: mismatched types\n LL |         self.reference.size()\n    |         ^^^^^^^^^^^^^^^^^^^^^ expected `DIM`, found `Self::DIM`\n    |\n-   = note: expected type `DIM`\n-              found type `Self::DIM`\n+   = note: expected constant `DIM`\n+              found constant `Self::DIM`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "09bcb0860b71bee07e498a54e9d79682ef86519a", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-85848.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-85848.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-85848.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-85848.stderr?ref=4e976262a1598fa48cd08fa0e429f05299d1ae3e", "patch": "@@ -54,8 +54,8 @@ error[E0308]: mismatched types\n LL |     writes_to_specific_path(&cap);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `true`, found `{ contains::<T, U>() }`\n    |\n-   = note: expected type `true`\n-              found type `{ contains::<T, U>() }`\n+   = note: expected constant `true`\n+              found constant `{ contains::<T, U>() }`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "3d1f90271f9a3862a3e7396992f435a09cb83fa9", "filename": "src/test/ui/const-generics/issues/issue-73260.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-73260.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-73260.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-73260.stderr?ref=4e976262a1598fa48cd08fa0e429f05299d1ae3e", "patch": "@@ -4,17 +4,17 @@ error[E0308]: mismatched types\n LL |     let x: Arr<{usize::MAX}> = Arr {};\n    |            ^^^^^^^^^^^^^^^^^ expected `false`, found `true`\n    |\n-   = note: expected type `false`\n-              found type `true`\n+   = note: expected constant `false`\n+              found constant `true`\n \n error[E0308]: mismatched types\n   --> $DIR/issue-73260.rs:16:32\n    |\n LL |     let x: Arr<{usize::MAX}> = Arr {};\n    |                                ^^^ expected `false`, found `true`\n    |\n-   = note: expected type `false`\n-              found type `true`\n+   = note: expected constant `false`\n+              found constant `true`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "344b2c56310644e544378f4774d533ffd4e539ce", "filename": "src/test/ui/const-generics/issues/issue-79674.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-79674.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-79674.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-79674.stderr?ref=4e976262a1598fa48cd08fa0e429f05299d1ae3e", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     requires_distinct(\"str\", 12);\n    |     ^^^^^^^^^^^^^^^^^ expected `true`, found `false`\n    |\n-   = note: expected type `true`\n-              found type `false`\n+   = note: expected constant `true`\n+              found constant `false`\n \n error: aborting due to previous error\n "}, {"sha": "b6a22df74369a3ebc849e884d4f0ebd6869fae0b", "filename": "src/test/ui/const-generics/types-mismatch-const-args.full.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e976262a1598fa48cd08fa0e429f05299d1ae3e/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftypes-mismatch-const-args.full.stderr?ref=4e976262a1598fa48cd08fa0e429f05299d1ae3e", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     let _: A<'a, u32, {2u32}, {3u32}> = A::<'a, u32, {2u32 + 2u32}, {3u32}> { data: PhantomData };\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `2`, found `4`\n    |\n-   = note: expected type `2`\n-              found type `4`\n+   = note: expected constant `2`\n+              found constant `4`\n \n error[E0308]: mismatched types\n   --> $DIR/types-mismatch-const-args.rs:16:41"}]}