{"sha": "3dbe0cebd876572d7ff692041a825ed4b0a4316a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYmUwY2ViZDg3NjU3MmQ3ZmY2OTIwNDFhODI1ZWQ0YjBhNDMxNmE=", "commit": {"author": {"name": "robojumper", "email": "robojumper@gmail.com", "date": "2021-07-18T10:29:21Z"}, "committer": {"name": "robojumper", "email": "robojumper@gmail.com", "date": "2021-07-18T10:29:21Z"}, "message": "Fix implicit Sized relaxation when attempting to relax other, unsupported trait", "tree": {"sha": "ee4639b9d4392f52fff7b63c12d902ec7efd4732", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee4639b9d4392f52fff7b63c12d902ec7efd4732"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dbe0cebd876572d7ff692041a825ed4b0a4316a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dbe0cebd876572d7ff692041a825ed4b0a4316a", "html_url": "https://github.com/rust-lang/rust/commit/3dbe0cebd876572d7ff692041a825ed4b0a4316a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dbe0cebd876572d7ff692041a825ed4b0a4316a/comments", "author": {"login": "robojumper", "id": 14299449, "node_id": "MDQ6VXNlcjE0Mjk5NDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14299449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robojumper", "html_url": "https://github.com/robojumper", "followers_url": "https://api.github.com/users/robojumper/followers", "following_url": "https://api.github.com/users/robojumper/following{/other_user}", "gists_url": "https://api.github.com/users/robojumper/gists{/gist_id}", "starred_url": "https://api.github.com/users/robojumper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robojumper/subscriptions", "organizations_url": "https://api.github.com/users/robojumper/orgs", "repos_url": "https://api.github.com/users/robojumper/repos", "events_url": "https://api.github.com/users/robojumper/events{/privacy}", "received_events_url": "https://api.github.com/users/robojumper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "robojumper", "id": 14299449, "node_id": "MDQ6VXNlcjE0Mjk5NDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14299449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robojumper", "html_url": "https://github.com/robojumper", "followers_url": "https://api.github.com/users/robojumper/followers", "following_url": "https://api.github.com/users/robojumper/following{/other_user}", "gists_url": "https://api.github.com/users/robojumper/gists{/gist_id}", "starred_url": "https://api.github.com/users/robojumper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robojumper/subscriptions", "organizations_url": "https://api.github.com/users/robojumper/orgs", "repos_url": "https://api.github.com/users/robojumper/repos", "events_url": "https://api.github.com/users/robojumper/events{/privacy}", "received_events_url": "https://api.github.com/users/robojumper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4156473bca0cf1991383cd3643e1a6d23e38957f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4156473bca0cf1991383cd3643e1a6d23e38957f", "html_url": "https://github.com/rust-lang/rust/commit/4156473bca0cf1991383cd3643e1a6d23e38957f"}], "stats": {"total": 40, "additions": 16, "deletions": 24}, "files": [{"sha": "f55e274ef8ea3f4a039c5e27696a0777e76aa794", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3dbe0cebd876572d7ff692041a825ed4b0a4316a/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dbe0cebd876572d7ff692041a825ed4b0a4316a/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=3dbe0cebd876572d7ff692041a825ed4b0a4316a", "patch": "@@ -838,6 +838,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                              this does nothing because the given bound is not \\\n                              a default; only `?Sized` is supported\",\n                         );\n+                        return false;\n                     }\n                 }\n             }"}, {"sha": "a80a64a2f87eed2f5beb3cc925f164912b770531", "filename": "src/test/ui/issues/issue-87199.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3dbe0cebd876572d7ff692041a825ed4b0a4316a/src%2Ftest%2Fui%2Fissues%2Fissue-87199.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dbe0cebd876572d7ff692041a825ed4b0a4316a/src%2Ftest%2Fui%2Fissues%2Fissue-87199.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-87199.rs?ref=3dbe0cebd876572d7ff692041a825ed4b0a4316a", "patch": "@@ -7,15 +7,14 @@\n // Check that these function definitions only emit warnings, not errors\n fn arg<T: ?Send>(_: T) {}\n //~^ warning: default bound relaxed for a type parameter, but this does nothing\n-//~^^ the size for values of type `T`\n fn ref_arg<T: ?Send>(_: &T) {}\n //~^ warning: default bound relaxed for a type parameter, but this does nothing\n fn ret() -> impl Iterator<Item = ()> + ?Send { std::iter::empty() }\n //~^ warning: default bound relaxed for a type parameter, but this does nothing\n-//~^^ the size for values of type `impl Iterator+?Sized` cannot be known\n \n // Check that there's no `?Sized` relaxation!\n fn main() {\n     ref_arg::<i32>(&5);\n     ref_arg::<[i32]>(&[5]);\n+    //~^ the size for values of type `[i32]` cannot be known\n }"}, {"sha": "e3a8e82a09fd694c042ba133f7b15717ea5e8112", "filename": "src/test/ui/issues/issue-87199.stderr", "status": "modified", "additions": 14, "deletions": 22, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/3dbe0cebd876572d7ff692041a825ed4b0a4316a/src%2Ftest%2Fui%2Fissues%2Fissue-87199.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3dbe0cebd876572d7ff692041a825ed4b0a4316a/src%2Ftest%2Fui%2Fissues%2Fissue-87199.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-87199.stderr?ref=3dbe0cebd876572d7ff692041a825ed4b0a4316a", "patch": "@@ -5,40 +5,32 @@ LL | fn arg<T: ?Send>(_: T) {}\n    |        ^\n \n warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported\n-  --> $DIR/issue-87199.rs:11:12\n+  --> $DIR/issue-87199.rs:10:12\n    |\n LL | fn ref_arg<T: ?Send>(_: &T) {}\n    |            ^\n \n warning: default bound relaxed for a type parameter, but this does nothing because the given bound is not a default; only `?Sized` is supported\n-  --> $DIR/issue-87199.rs:13:13\n+  --> $DIR/issue-87199.rs:12:13\n    |\n LL | fn ret() -> impl Iterator<Item = ()> + ?Send { std::iter::empty() }\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0277]: the size for values of type `impl Iterator+?Sized` cannot be known at compilation time\n-  --> $DIR/issue-87199.rs:13:13\n+error[E0277]: the size for values of type `[i32]` cannot be known at compilation time\n+  --> $DIR/issue-87199.rs:18:22\n    |\n-LL | fn ret() -> impl Iterator<Item = ()> + ?Send { std::iter::empty() }\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n-   |\n-   = help: the trait `Sized` is not implemented for `impl Iterator+?Sized`\n-   = note: the return type of a function must have a statically known size\n-\n-error[E0277]: the size for values of type `T` cannot be known at compilation time\n-  --> $DIR/issue-87199.rs:8:18\n-   |\n-LL | fn arg<T: ?Send>(_: T) {}\n-   |        -         ^ doesn't have a size known at compile-time\n-   |        |\n-   |        this type parameter needs to be `std::marker::Sized`\n+LL | fn ref_arg<T: ?Send>(_: &T) {}\n+   |            - required by this bound in `ref_arg`\n+...\n+LL |     ref_arg::<[i32]>(&[5]);\n+   |                      ^^^^ doesn't have a size known at compile-time\n    |\n-   = help: unsized fn params are gated as an unstable feature\n-help: function arguments must have a statically known size, borrowed types always have a known size\n+   = help: the trait `Sized` is not implemented for `[i32]`\n+help: consider relaxing the implicit `Sized` restriction\n    |\n-LL | fn arg<T: ?Send>(_: &T) {}\n-   |                     ^\n+LL | fn ref_arg<T: ?Send + ?Sized>(_: &T) {}\n+   |                     ^^^^^^^^\n \n-error: aborting due to 2 previous errors; 3 warnings emitted\n+error: aborting due to previous error; 3 warnings emitted\n \n For more information about this error, try `rustc --explain E0277`."}]}