{"sha": "18a5b90242218df7abd6473cbee456a9dcfd32a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4YTViOTAyNDIyMThkZjdhYmQ2NDczY2JlZTQ1NmE5ZGNmZDMyYTA=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-05-12T09:13:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-12T09:13:37Z"}, "message": "Merge pull request #2712 from rust-lang-nursery/oli-obk-patch-1\n\nDeprecate plugin-clippy", "tree": {"sha": "6b7f4d685d8e92ef4ba698d118edcfa553fcd462", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b7f4d685d8e92ef4ba698d118edcfa553fcd462"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18a5b90242218df7abd6473cbee456a9dcfd32a0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa9rBBCRBK7hj4Ov3rIwAAdHIIAA2AgxuiZTl3hiv7xbPoT+SO\ne+5/KuHz+KkSXroiVS+2FDKvEehRSymw65+HoraeaH8I8DNb/4rfEb4gxxWLhbSy\nMySGgsUlE728kt1FQoCiqJJj+nwIvbPa6aP5VIdGGPLWG7SenKOSetjAmi6PTT3X\nAF4MNftzQsdpPUXV9fpL5nBgOYJZ4tm95jvk0meLDkGf3rDNgJdoxsLxONFrceJn\ntGl9KD7LetwzoUHR/Oyn0ypyQDq5HYlaCJfCXGu+4LYejYU5y1uF5XI3OLVwZIG4\n3jA87pyXZXhmojG+xuvMZP+ZnqVr7qTn/U6XOkBj8Btl0F/45uSLRX5EY6sTsGA=\n=PBDs\n-----END PGP SIGNATURE-----\n", "payload": "tree 6b7f4d685d8e92ef4ba698d118edcfa553fcd462\nparent 553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb\nparent fd8a1d20ccad8a2dd7b95a9a9a6fe94048a74d5f\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1526116417 +0200\ncommitter GitHub <noreply@github.com> 1526116417 +0200\n\nMerge pull request #2712 from rust-lang-nursery/oli-obk-patch-1\n\nDeprecate plugin-clippy"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18a5b90242218df7abd6473cbee456a9dcfd32a0", "html_url": "https://github.com/rust-lang/rust/commit/18a5b90242218df7abd6473cbee456a9dcfd32a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18a5b90242218df7abd6473cbee456a9dcfd32a0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb", "html_url": "https://github.com/rust-lang/rust/commit/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb"}, {"sha": "fd8a1d20ccad8a2dd7b95a9a9a6fe94048a74d5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd8a1d20ccad8a2dd7b95a9a9a6fe94048a74d5f", "html_url": "https://github.com/rust-lang/rust/commit/fd8a1d20ccad8a2dd7b95a9a9a6fe94048a74d5f"}], "stats": {"total": 252, "additions": 39, "deletions": 213}, "files": [{"sha": "b62ccbd93d3571d1a5b00fbc2bbb18b6f56b2ac0", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -152,13 +152,7 @@ Therefore you should use `tests/ui/update-all-references.sh` (after running\n Manually testing against an example file is useful if you have added some\n `println!`s and test suite output becomes unreadable.  To try clippy with your\n local modifications, run `cargo run --bin clippy-driver -- -L ./target/debug input.rs` from the\n-working copy root. Your test file, here `input.rs`, needs to have clippy\n-enabled as a plugin:\n-\n-```rust\n-#![feature(plugin)]\n-#![plugin(clippy)]\n-```\n+working copy root.\n \n ### How Clippy works\n "}, {"sha": "9472156ec987f1d116546847734cddd802ad76cd", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 92, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -71,47 +71,9 @@ similar crates.\n SYSROOT=/path/to/rustc/sysroot cargo install clippy\n ```\n \n-### Optional dependency\n-\n-In some cases you might want to include clippy in your project directly, as an\n-optional dependency. To do this, just modify `Cargo.toml`:\n-\n-```toml\n-[dependencies]\n-clippy = { version = \"*\", optional = true }\n-```\n-\n-And, in your `main.rs` or `lib.rs`, add these lines:\n-\n-```rust\n-#![cfg_attr(feature=\"clippy\", feature(plugin))]\n-#![cfg_attr(feature=\"clippy\", plugin(clippy))]\n-```\n-\n-Then build by enabling the feature: `cargo +nightly build --features \"clippy\"`.\n-\n-Instead of adding the `cfg_attr` attributes you can also run clippy on demand:\n-`cargo rustc --features clippy -- -Z no-trans -Z extra-plugins=clippy`\n-(the `-Z no trans`, while not necessary, will stop the compilation process after\n-typechecking (and lints) have completed, which can significantly reduce the runtime).\n-\n-Alternatively, to only run clippy when testing:\n-\n-```toml\n-[dev-dependencies]\n-clippy = { version = \"*\" }\n-```\n-\n-and add to `main.rs` or  `lib.rs`:\n-\n-```\n-#![cfg_attr(test, feature(plugin))]\n-#![cfg_attr(test, plugin(clippy))]\n-```\n-\n ### Running clippy from the command line without installing it\n \n-To have cargo compile your crate with clippy without clippy installation and without needing `#![plugin(clippy)]`\n+To have cargo compile your crate with clippy without clippy installation\n in your code, you can use:\n \n ```terminal\n@@ -121,53 +83,6 @@ cargo run --bin cargo-clippy --manifest-path=path_to_clippys_Cargo.toml\n *[Note](https://github.com/rust-lang-nursery/rust-clippy/wiki#a-word-of-warning):*\n Be sure that clippy was compiled with the same version of rustc that cargo invokes here!\n \n-### As a Compiler Plugin\n-\n-*Note:* This is not a recommended installation method.\n-\n-Since stable Rust is backwards compatible, you should be able to\n-compile your stable programs with nightly Rust with clippy plugged in to\n-circumvent this.\n-\n-Add in your `Cargo.toml`:\n-\n-```toml\n-[dependencies]\n-clippy = \"*\"\n-```\n-\n-You then need to add `#![feature(plugin)]` and `#![plugin(clippy)]` to the top\n-of your crate entry point (`main.rs` or `lib.rs`).\n-\n-Sample `main.rs`:\n-\n-```rust\n-#![feature(plugin)]\n-\n-#![plugin(clippy)]\n-\n-\n-fn main(){\n-    let x = Some(1u8);\n-    match x {\n-        Some(y) => println!(\"{:?}\", y),\n-        _ => ()\n-    }\n-}\n-```\n-\n-Produces this warning:\n-\n-```terminal\n-src/main.rs:8:5: 11:6 warning: you seem to be trying to use match for destructuring a single type. Consider using `if let`, #[warn(single_match)] on by default\n-src/main.rs:8     match x {\n-src/main.rs:9         Some(y) => println!(\"{:?}\", y),\n-src/main.rs:10         _ => ()\n-src/main.rs:11     }\n-src/main.rs:8:5: 11:6 help: Try\n-if let Some(y) = x { println!(\"{:?}\", y) }\n-```\n-\n ## Configuration\n \n Some lints can be configured in a TOML file named with `clippy.toml` or `.clippy.toml`. It contains basic `variable = value` mapping eg.\n@@ -180,12 +95,6 @@ cyclomatic-complexity-threshold = 30\n See the [list of lints](https://rust-lang-nursery.github.io/rust-clippy/master/index.html) for more information about which lints can be configured and the\n meaning of the variables.\n \n-You can also specify the path to the configuration file with:\n-\n-```rust\n-#![plugin(clippy(conf_file=\"path/to/clippy's/configuration\"))]\n-```\n-\n To deactivate the \u201cfor further information visit *lint-link*\u201d message you can\n define the `CLIPPY_DISABLE_DOCS_LINKS` environment variable.\n "}, {"sha": "e69323255e8d6e2697467aeb47e6d70648d0a83d", "filename": "src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -14,10 +14,11 @@ extern crate clippy_lints;\n pub fn plugin_registrar(reg: &mut Registry) {\n     reg.sess.lint_store.with_read_lock(|lint_store| {\n         for (lint, _, _) in lint_store.get_lint_groups() {\n+            reg.sess\n+                .struct_warn(\"the clippy plugin is being deprecated, please use cargo clippy or rls with the clippy feature\")\n+                .emit();\n             if lint == \"clippy\" {\n-                reg.sess\n-                    .struct_warn(\"running cargo clippy on a crate that also imports the clippy plugin\")\n-                    .emit();\n+                // cargo clippy run on a crate that also uses the plugin\n                 return;\n             }\n         }"}, {"sha": "10a7d3e72d7d509143f4ab003c3548f4fee1cca3", "filename": "tests/conf_whitelisted.rs", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fconf_whitelisted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fconf_whitelisted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconf_whitelisted.rs?ref=553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb", "patch": "@@ -1,2 +0,0 @@\n-#![feature(plugin)]\n-#![plugin(clippy(conf_file = \"./auxiliary/conf_whitelisted.toml\"))]"}, {"sha": "1539d3c61bc42cb53524e57dc20fdd69b247f67d", "filename": "tests/run-pass/cc_seme.rs", "status": "renamed", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fcc_seme.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fcc_seme.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fcc_seme.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,6 +1,3 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n-\n #[allow(dead_code)]\n enum Baz {\n     One,\n@@ -12,7 +9,9 @@ struct Test {\n     b: Baz,\n }\n \n-fn main() {\n+fn main() { }\n+\n+pub fn foo() {\n     use Baz::*;\n     let x = Test { t: Some(0), b: One };\n ", "previous_filename": "tests/cc_seme.rs"}, {"sha": "914153c64fff9364720ff4643ed5ae5888d66ddf", "filename": "tests/run-pass/ice_exacte_size.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fice_exacte_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fice_exacte_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice_exacte_size.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,5 +1,3 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n #![deny(clippy)]\n \n #[allow(dead_code)]\n@@ -15,3 +13,5 @@ impl Iterator for Foo {\n }\n \n impl ExactSizeIterator for Foo {}\n+\n+fn main() {}", "previous_filename": "tests/ice_exacte_size.rs"}, {"sha": "79df259eadbd5dafc7fcf964774aee99b8123c01", "filename": "tests/run-pass/issue-825.rs", "status": "renamed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fissue-825.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fissue-825.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-825.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,5 +1,3 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n #![allow(warnings)]\n \n // this should compile in a reasonable amount of time", "previous_filename": "tests/issue-825.rs"}, {"sha": "2b916c025d31586f94e010359740c733eac52310", "filename": "tests/run-pass/mut_mut_macro.rs", "status": "renamed", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fmut_mut_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fmut_mut_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmut_mut_macro.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,12 +1,11 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n #![deny(mut_mut, zero_ptr, cmp_nan)]\n #![allow(dead_code)]\n \n-#[macro_use]\n-extern crate lazy_static;\n+// compiletest + extern crates doesn't work together\n+//#[macro_use]\n+//extern crate lazy_static;\n \n-use std::collections::HashMap;\n+//use std::collections::HashMap;\n \n // ensure that we don't suggest `is_nan` and `is_null` inside constants\n // FIXME: once const fn is stable, suggest these functions again in constants\n@@ -17,6 +16,7 @@ static mut BUH: bool = 42.0 < std::f32::NAN;\n \n #[allow(unused_variables, unused_mut)]\n fn main() {\n+    /*\n     lazy_static! {\n         static ref MUT_MAP : HashMap<usize, &'static str> = {\n             let mut m = HashMap::new();\n@@ -26,6 +26,7 @@ fn main() {\n         static ref MUT_COUNT : usize = MUT_MAP.len();\n     }\n     assert_eq!(*MUT_COUNT, 1);\n+    */\n     // FIXME: don't lint in array length, requires `check_body`\n     //let _ = [\"\"; (42.0 < std::f32::NAN) as usize];\n }", "previous_filename": "tests/mut_mut_macro.rs"}, {"sha": "c9c77257c0ecf2d238962c87075a341c9ca1e962", "filename": "tests/run-pass/used_underscore_binding_macro.rs", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fused_underscore_binding_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fused_underscore_binding_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fused_underscore_binding_macro.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[macro_use]\n extern crate serde_derive;\n@@ -16,3 +16,5 @@ struct MacroAttributesTest {\n fn macro_attributes_test() {\n     let _ = MacroAttributesTest { _foo: 0 };\n }\n+\n+fn main() {}", "previous_filename": "tests/used_underscore_binding_macro.rs"}, {"sha": "9f87de20baff36866965bccd7c4ef87774789645", "filename": "tests/run-pass/whitelist/clippy.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fwhitelist%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fwhitelist%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fwhitelist%2Fclippy.toml?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "previous_filename": "tests/auxiliary/conf_whitelisted.toml"}, {"sha": "f328e4d9d04c31d0d70d16d21a07d1613be9d577", "filename": "tests/run-pass/whitelist/conf_whitelisted.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fwhitelist%2Fconf_whitelisted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Frun-pass%2Fwhitelist%2Fconf_whitelisted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fwhitelist%2Fconf_whitelisted.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -0,0 +1 @@\n+fn main() {}"}, {"sha": "823e01a33b96172e13855c6c023599f2852e71f9", "filename": "tests/ui/bad_toml/clippy.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fbad_toml%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fbad_toml%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbad_toml%2Fclippy.toml?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "previous_filename": "tests/ui/conf_bad_toml.toml"}, {"sha": "325688ac7daa9a041077bb7172c4a2f949d5da12", "filename": "tests/ui/bad_toml/conf_bad_toml.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fbad_toml%2Fconf_bad_toml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fbad_toml%2Fconf_bad_toml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbad_toml%2Fconf_bad_toml.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: error reading Clippy's configuration file\n \n \n-#![plugin(clippy(conf_file=\"../ui/conf_bad_toml.toml\"))]\n+\n \n fn main() {}", "previous_filename": "tests/ui/conf_bad_toml.rs"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/bad_toml/conf_bad_toml.stderr", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fbad_toml%2Fconf_bad_toml.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fbad_toml%2Fconf_bad_toml.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbad_toml%2Fconf_bad_toml.stderr?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0"}, {"sha": "168675394d7f45124940fcfa3433aab378c1fbd8", "filename": "tests/ui/bad_toml_type/clippy.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fbad_toml_type%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fbad_toml_type%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbad_toml_type%2Fclippy.toml?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "previous_filename": "tests/ui/conf_bad_type.toml"}, {"sha": "f97f5802b1330cd94fcdf8eea5d761ddbf1caa45", "filename": "tests/ui/bad_toml_type/conf_bad_type.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fbad_toml_type%2Fconf_bad_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fbad_toml_type%2Fconf_bad_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbad_toml_type%2Fconf_bad_type.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: error reading Clippy's configuration file: `blacklisted-names` is expected to be a `Vec < String >` but is a `integer`\n \n \n-#![plugin(clippy(conf_file=\"../ui/conf_bad_type.toml\"))]\n+\n \n fn main() {}", "previous_filename": "tests/ui/conf_bad_type.rs"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/bad_toml_type/conf_bad_type.stderr", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fbad_toml_type%2Fconf_bad_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fbad_toml_type%2Fconf_bad_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbad_toml_type%2Fconf_bad_type.stderr?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0"}, {"sha": "b988fdb13853bdf3f78b002a1df6509ac0174ca0", "filename": "tests/ui/conf_bad_arg.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_bad_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_bad_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_arg.rs?ref=553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb", "patch": "@@ -1,6 +0,0 @@\n-// error-pattern: `conf_file` must be a named value\n-\n-\n-#![plugin(clippy(conf_file))]\n-\n-fn main() {}"}, {"sha": "094b7d49cb55321b21ea4129529bc0d792a7a383", "filename": "tests/ui/conf_bad_arg.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_bad_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_bad_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_arg.stderr?ref=553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb", "patch": "@@ -1,11 +0,0 @@\n-error[E0658]: compiler plugins are experimental and possibly buggy (see issue #29597)\n- --> $DIR/conf_bad_arg.rs:4:1\n-  |\n-4 | #![plugin(clippy(conf_file))]\n-  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-  |\n-  = help: add #![feature(plugin)] to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "640b1c5e6101bc09b74b8120a4a006a8f94e1f29", "filename": "tests/ui/conf_bad_toml.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_bad_toml.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_bad_toml.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_toml.stderr?ref=553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb", "patch": "@@ -1,11 +0,0 @@\n-error[E0658]: compiler plugins are experimental and possibly buggy (see issue #29597)\n- --> $DIR/conf_bad_toml.rs:4:1\n-  |\n-4 | #![plugin(clippy(conf_file=\"../ui/conf_bad_toml.toml\"))]\n-  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-  |\n-  = help: add #![feature(plugin)] to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "f92b52ec03248824448ae34a53705a39a8579c94", "filename": "tests/ui/conf_bad_type.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_bad_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_bad_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_type.stderr?ref=553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb", "patch": "@@ -1,11 +0,0 @@\n-error[E0658]: compiler plugins are experimental and possibly buggy (see issue #29597)\n- --> $DIR/conf_bad_type.rs:4:1\n-  |\n-4 | #![plugin(clippy(conf_file=\"../ui/conf_bad_type.toml\"))]\n-  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-  |\n-  = help: add #![feature(plugin)] to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "214226ac2f9646740e4ce54fc667c64ddc08ddc5", "filename": "tests/ui/conf_french_blacklisted_name.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_french_blacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_french_blacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_french_blacklisted_name.stderr?ref=553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb", "patch": "@@ -1,11 +0,0 @@\n-error[E0658]: compiler plugins are experimental and possibly buggy (see issue #29597)\n- --> $DIR/conf_french_blacklisted_name.rs:2:1\n-  |\n-2 | #![plugin(clippy(conf_file=\"../auxiliary/conf_french_blacklisted_name.toml\"))]\n-  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-  |\n-  = help: add #![feature(plugin)] to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "8d1f01358fc8f5b93699a41df350cc3dd87ff5b1", "filename": "tests/ui/conf_path_non_string.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_path_non_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_path_non_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_path_non_string.rs?ref=553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb", "patch": "@@ -1,5 +0,0 @@\n-#![feature(attr_literals)]\n-\n-#![plugin(clippy(conf_file=42))]\n-\n-fn main() {}"}, {"sha": "10b007b0de0f4ed3fa96158adaa0b327fb9dbe3e", "filename": "tests/ui/conf_path_non_string.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_path_non_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_path_non_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_path_non_string.stderr?ref=553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb", "patch": "@@ -1,11 +0,0 @@\n-error[E0658]: compiler plugins are experimental and possibly buggy (see issue #29597)\n- --> $DIR/conf_path_non_string.rs:3:1\n-  |\n-3 | #![plugin(clippy(conf_file=42))]\n-  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-  |\n-  = help: add #![feature(plugin)] to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "d7ac055c5174c5520ccf10d7806ddaf82934a7b0", "filename": "tests/ui/conf_unknown_key.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb/tests%2Fui%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_unknown_key.stderr?ref=553b90b0b7bbeb7ca4236db53cf2f2b31cf09aeb", "patch": "@@ -1,11 +0,0 @@\n-error[E0658]: compiler plugins are experimental and possibly buggy (see issue #29597)\n- --> $DIR/conf_unknown_key.rs:4:1\n-  |\n-4 | #![plugin(clippy(conf_file=\"../auxiliary/conf_unknown_key.toml\"))]\n-  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-  |\n-  = help: add #![feature(plugin)] to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "1afae69c1860fe4b4f564307d3081c1b1b8a07f5", "filename": "tests/ui/cyclomatic_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fcyclomatic_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fcyclomatic_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin, custom_attribute)]\n+#![feature(custom_attribute)]\n \n #![allow(clippy)]\n #![warn(cyclomatic_complexity)]"}, {"sha": "f3895c7e3abdff75f814e3eab2b24a83505509af", "filename": "tests/ui/cyclomatic_complexity_attr_used.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fcyclomatic_complexity_attr_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fcyclomatic_complexity_attr_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity_attr_used.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin, custom_attribute)]\n+#![feature(custom_attribute)]\n \n #![warn(cyclomatic_complexity)]\n #![warn(unused)]"}, {"sha": "b89a2f1bcaffae2c1e9f599ae3392bd6bccfc648", "filename": "tests/ui/diverging_sub_expression.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fdiverging_sub_expression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fdiverging_sub_expression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiverging_sub_expression.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin, never_type)]\n+#![feature(never_type)]\n \n #![warn(diverging_sub_expression)]\n #![allow(match_same_arms, logic_bug)]"}, {"sha": "a4fab5735e21083ca07fbad86c553df8d6dd1096", "filename": "tests/ui/dlist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdlist.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin, alloc)]\n+#![feature(alloc)]\n #![feature(associated_type_defaults)]\n \n "}, {"sha": "222c76c25b76344361b8b9a6e1a5d0afbf559b09", "filename": "tests/ui/enum_variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_variants.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin, non_ascii_idents)]\n+#![feature(non_ascii_idents)]\n \n #![warn(clippy, pub_enum_variant_names)]\n "}, {"sha": "7a888f0191411463658e17f63d6e704c41f6c26e", "filename": "tests/ui/escape_analysis.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fescape_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fescape_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fescape_analysis.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin, box_syntax)]\n+#![feature(box_syntax)]\n \n #![allow(warnings, clippy)]\n "}, {"sha": "25b6555715fd6ff338b65648997df909c280427c", "filename": "tests/ui/excessive_precision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fexcessive_precision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fexcessive_precision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexcessive_precision.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin, custom_attribute)]\n+#![feature(custom_attribute)]\n #![warn(excessive_precision)]\n #![allow(print_literal)]\n "}, {"sha": "ce776d4d91c923b0f41a87d03c5c0c7172492be8", "filename": "tests/ui/for_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin, custom_attribute)]\n+#![feature(custom_attribute)]\n \n \n use std::collections::*;"}, {"sha": "658ae18466f717a39699bd55091a518a3ee20a97", "filename": "tests/ui/mut_mut.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mut.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -4,8 +4,8 @@\n #![allow(unused, no_effect, unnecessary_operation)]\n #![warn(mut_mut)]\n \n-//#![plugin(regex_macros)]\n-//extern crate regex;\n+\n+\n \n fn fun(x : &mut &mut u32) -> bool {\n     **x > 0"}, {"sha": "c06c9f9e962201a5a05c7cc46e3a81e6ed6fbe15", "filename": "tests/ui/new_without_default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin, const_fn)]\n+#![feature(const_fn)]\n \n \n #![allow(dead_code)]"}, {"sha": "54028cd8b2b69ea1cfac0e986c451c5c1cc1e485", "filename": "tests/ui/no_effect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin, box_syntax)]\n+#![feature(box_syntax)]\n \n \n #![warn(no_effect, unnecessary_operation)]"}, {"sha": "6abe5a3bbc2737feba84d51919176142eb8c7fd4", "filename": "tests/ui/toml_blacklist/clippy.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftoml_blacklist%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftoml_blacklist%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoml_blacklist%2Fclippy.toml?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "previous_filename": "tests/auxiliary/conf_french_blacklisted_name.toml"}, {"sha": "1f1a8ee91a1827b7f8a8fdaeaa10a27446e51e03", "filename": "tests/ui/toml_blacklist/conf_french_blacklisted_name.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftoml_blacklist%2Fconf_french_blacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftoml_blacklist%2Fconf_french_blacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoml_blacklist%2Fconf_french_blacklisted_name.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,5 +1,5 @@\n \n-#![plugin(clippy(conf_file=\"../auxiliary/conf_french_blacklisted_name.toml\"))]\n+\n \n #![allow(dead_code)]\n #![allow(single_match)]", "previous_filename": "tests/ui/conf_french_blacklisted_name.rs"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/toml_blacklist/conf_french_blacklisted_name.stderr", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0"}, {"sha": "554b87cc50be176bd8cb1920fbc26b11d0e557a0", "filename": "tests/ui/toml_unknown_key/clippy.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftoml_unknown_key%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftoml_unknown_key%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoml_unknown_key%2Fclippy.toml?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "previous_filename": "tests/auxiliary/conf_unknown_key.toml"}, {"sha": "bfa804558bbd07e911cf25d2b3446dee9c879552", "filename": "tests/ui/toml_unknown_key/conf_unknown_key.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftoml_unknown_key%2Fconf_unknown_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftoml_unknown_key%2Fconf_unknown_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoml_unknown_key%2Fconf_unknown_key.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: error reading Clippy's configuration file: unknown key `foobar`\n \n \n-#![plugin(clippy(conf_file=\"../auxiliary/conf_unknown_key.toml\"))]\n+\n \n fn main() {}", "previous_filename": "tests/ui/conf_unknown_key.rs"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/toml_unknown_key/conf_unknown_key.stderr", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoml_unknown_key%2Fconf_unknown_key.stderr?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0"}, {"sha": "d915a0bed0903edb931100b126ed8add90de8024", "filename": "tests/ui/trailing_zeros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftrailing_zeros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a5b90242218df7abd6473cbee456a9dcfd32a0/tests%2Fui%2Ftrailing_zeros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrailing_zeros.rs?ref=18a5b90242218df7abd6473cbee456a9dcfd32a0", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin, custom_attribute, stmt_expr_attributes)]\n+#![feature(custom_attribute, stmt_expr_attributes)]\n \n #![allow(unused_parens)]\n "}]}