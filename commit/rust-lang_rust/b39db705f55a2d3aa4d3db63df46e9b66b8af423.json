{"sha": "b39db705f55a2d3aa4d3db63df46e9b66b8af423", "node_id": "C_kwDOAAsO6NoAKGIzOWRiNzA1ZjU1YTJkM2FhNGQzZGI2M2RmNDZlOWI2NmI4YWY0MjM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-27T06:46:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-27T06:46:53Z"}, "message": "Rollup merge of #109633 - GuillaumeGomez:fix-go-to-only-setting, r=notriddle\n\nFix \"Directly go to item in search if there is only one result\" setting\n\nPart of #66181.\n\nThe setting was actually broken, so I fixed it when I added the GUI test.\n\nr? `@notriddle`", "tree": {"sha": "cbeb8d7371ba8927c6ce39c9fab20b5990bdad99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbeb8d7371ba8927c6ce39c9fab20b5990bdad99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b39db705f55a2d3aa4d3db63df46e9b66b8af423", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkITvdCRBK7hj4Ov3rIwAAsNYIACCA1ctjVAR049rcCl67J+uS\n9p795RF6eAq1Q6w6iYi1Zx4Q1mhopEkoHWGENCA8iwZYgwZ+qAXnoYqYDMiL/qHi\nGsbLhom5wkWm5QlLnIEGXni3H59tj1z3e8uuNCg1HPAD5Gc9K5Utf6RrPXqWAOsS\nWLS5pFELBMIk5rtA7gon+njNe6cfXIt/pLYmqA7e/ghMC3G6LOspalDWAv2c77gd\nmE93Nad6LCm7luh6xQlkXc1oxTWjygEG9zN7kdKPHjOYoxGIZ9p00qtBxkmmcoFQ\ngjePErSdNooFyahwKk28aw2iKJ0hIJO8lxHHM8hbPZ2vsZYMppq3oxWQs1YUDvQ=\n=EfTu\n-----END PGP SIGNATURE-----\n", "payload": "tree cbeb8d7371ba8927c6ce39c9fab20b5990bdad99\nparent 04b8523c46f9b5e43c5be0fdcae8fef843166b3f\nparent bc9eec04b7e9713e7d0bde0ad4f8bfc8574082a6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679899613 +0200\ncommitter GitHub <noreply@github.com> 1679899613 +0200\n\nRollup merge of #109633 - GuillaumeGomez:fix-go-to-only-setting, r=notriddle\n\nFix \"Directly go to item in search if there is only one result\" setting\n\nPart of #66181.\n\nThe setting was actually broken, so I fixed it when I added the GUI test.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b39db705f55a2d3aa4d3db63df46e9b66b8af423", "html_url": "https://github.com/rust-lang/rust/commit/b39db705f55a2d3aa4d3db63df46e9b66b8af423", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b39db705f55a2d3aa4d3db63df46e9b66b8af423/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04b8523c46f9b5e43c5be0fdcae8fef843166b3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/04b8523c46f9b5e43c5be0fdcae8fef843166b3f", "html_url": "https://github.com/rust-lang/rust/commit/04b8523c46f9b5e43c5be0fdcae8fef843166b3f"}, {"sha": "bc9eec04b7e9713e7d0bde0ad4f8bfc8574082a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc9eec04b7e9713e7d0bde0ad4f8bfc8574082a6", "html_url": "https://github.com/rust-lang/rust/commit/bc9eec04b7e9713e7d0bde0ad4f8bfc8574082a6"}], "stats": {"total": 69, "additions": 64, "deletions": 5}, "files": [{"sha": "c081578b8d4bb75c8338d80b7ebd7503b04a54de", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b39db705f55a2d3aa4d3db63df46e9b66b8af423/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/b39db705f55a2d3aa4d3db63df46e9b66b8af423/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=b39db705f55a2d3aa4d3db63df46e9b66b8af423", "patch": "@@ -1946,11 +1946,7 @@ function initSearch(rawSearchIndex) {\n     function showResults(results, go_to_first, filterCrates) {\n         const search = searchState.outputElement();\n         if (go_to_first || (results.others.length === 1\n-            && getSettingValue(\"go-to-only-result\") === \"true\"\n-            // By default, the search DOM element is \"empty\" (meaning it has no children not\n-            // text content). Once a search has been run, it won't be empty, even if you press\n-            // ESC or empty the search input (which also \"cancels\" the search).\n-            && (!search.firstChild || search.firstChild.innerText !== searchState.loadingText))\n+            && getSettingValue(\"go-to-only-result\") === \"true\")\n         ) {\n             const elem = document.createElement(\"a\");\n             elem.href = results.others[0].href;"}, {"sha": "3811011a64e6f70f977710080fe6ab569a526905", "filename": "tests/rustdoc-gui/setting-go-to-only-result.goml", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/b39db705f55a2d3aa4d3db63df46e9b66b8af423/tests%2Frustdoc-gui%2Fsetting-go-to-only-result.goml", "raw_url": "https://github.com/rust-lang/rust/raw/b39db705f55a2d3aa4d3db63df46e9b66b8af423/tests%2Frustdoc-gui%2Fsetting-go-to-only-result.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsetting-go-to-only-result.goml?ref=b39db705f55a2d3aa4d3db63df46e9b66b8af423", "patch": "@@ -0,0 +1,63 @@\n+// Checks that the setting \"Directly go to item in search if there is only one result \" is working as expected.\n+\n+define-function: (\n+    \"check-setting\",\n+    (storage_value, setting_attribute_value),\n+    block {\n+        assert-local-storage: {\"rustdoc-go-to-only-result\": |storage_value|}\n+        click: \"#settings-menu\"\n+        wait-for: \"#settings\"\n+        assert-property: (\"#go-to-only-result\", {\"checked\": |setting_attribute_value|})\n+    }\n+)\n+\n+goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html\"\n+\n+call-function: (\"check-setting\", {\n+    \"storage_value\": null,\n+    \"setting_attribute_value\": \"false\",\n+})\n+\n+// By default, the search doesn't automatically go to the page if there is only one result.\n+goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html?search=HasALongTraitWithParams\"\n+// It will timeout if the setting isn't working.\n+wait-for: \"#search\"\n+assert-document-property: ({\"URL\": \"/lib2/index.html\"}, CONTAINS)\n+\n+// Now we change its value.\n+click: \"#settings-menu\"\n+wait-for: \"#settings\"\n+click: \"#go-to-only-result\"\n+assert-local-storage: {\"rustdoc-go-to-only-result\": \"true\"}\n+\n+goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html\"\n+// We enter it into the search.\n+write: (\".search-input\", \"HasALongTraitWithParams\")\n+wait-for-document-property: {\"title\": \"HasALongTraitWithParams in lib2 - Rust\"}\n+assert-document-property: ({\"URL\": \"/lib2/struct.HasALongTraitWithParams.html\"}, ENDS_WITH)\n+\n+// We try again to see if it goes to the only result\n+goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html?search=HasALongTraitWithParams\"\n+wait-for-document-property: {\"title\": \"HasALongTraitWithParams in lib2 - Rust\"}\n+assert-document-property: ({\"URL\": \"/lib2/struct.HasALongTraitWithParams.html\"}, ENDS_WITH)\n+\n+// We check the settings\n+call-function: (\"check-setting\", {\n+    \"storage_value\": \"true\",\n+    \"setting_attribute_value\": \"true\",\n+})\n+\n+// And now we re-disable the setting.\n+click: \"#go-to-only-result\"\n+assert-local-storage: {\"rustdoc-go-to-only-result\": \"false\"}\n+\n+goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html?search=HasALongTraitWithParams\"\n+// It will timeout if the setting isn't working.\n+wait-for: \"#search\"\n+assert-document-property: ({\"URL\": \"/lib2/index.html\"}, CONTAINS)\n+\n+// And we check everything is back the way it was before.\n+call-function: (\"check-setting\", {\n+    \"storage_value\": \"false\",\n+    \"setting_attribute_value\": \"false\",\n+})"}]}