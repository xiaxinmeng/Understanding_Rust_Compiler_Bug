{"sha": "f18b255bced2dfedc437ea3d54465e4f42b1938a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxOGIyNTViY2VkMmRmZWRjNDM3ZWEzZDU0NDY1ZTRmNDJiMTkzOGE=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-05T13:24:40Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-13T22:03:45Z"}, "message": "libcore: use unboxed closures in the `finally` module", "tree": {"sha": "934a29c0250a9baecb1b47675539a2d003b0983e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/934a29c0250a9baecb1b47675539a2d003b0983e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f18b255bced2dfedc437ea3d54465e4f42b1938a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f18b255bced2dfedc437ea3d54465e4f42b1938a", "html_url": "https://github.com/rust-lang/rust/commit/f18b255bced2dfedc437ea3d54465e4f42b1938a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f18b255bced2dfedc437ea3d54465e4f42b1938a/comments", "author": null, "committer": null, "parents": [{"sha": "e2a362f9bbf94eedca42eceea2929e4d96f4eeee", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2a362f9bbf94eedca42eceea2929e4d96f4eeee", "html_url": "https://github.com/rust-lang/rust/commit/e2a362f9bbf94eedca42eceea2929e4d96f4eeee"}], "stats": {"total": 35, "additions": 12, "deletions": 23}, "files": [{"sha": "db76ce35cad385df770a86172fa3804da354d084", "filename": "src/libcore/finally.rs", "status": "modified", "additions": 12, "deletions": 23, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f18b255bced2dfedc437ea3d54465e4f42b1938a/src%2Flibcore%2Ffinally.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f18b255bced2dfedc437ea3d54465e4f42b1938a/src%2Flibcore%2Ffinally.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffinally.rs?ref=f18b255bced2dfedc437ea3d54465e4f42b1938a", "patch": "@@ -30,29 +30,19 @@\n \n #![experimental]\n \n-use ops::Drop;\n+use ops::{Drop, FnMut, FnOnce};\n \n /// A trait for executing a destructor unconditionally after a block of code,\n /// regardless of whether the blocked fails.\n pub trait Finally<T> {\n     /// Executes this object, unconditionally running `dtor` after this block of\n     /// code has run.\n-    fn finally(&mut self, dtor: ||) -> T;\n+    fn finally<F>(&mut self, dtor: F) -> T where F: FnMut();\n }\n \n-impl<'a,T> Finally<T> for ||: 'a -> T {\n-    fn finally(&mut self, dtor: ||) -> T {\n-        try_finally(&mut (), self,\n-                    |_, f| (*f)(),\n-                    |_| dtor())\n-    }\n-}\n-\n-impl<T> Finally<T> for fn() -> T {\n-    fn finally(&mut self, dtor: ||) -> T {\n-        try_finally(&mut (), (),\n-                    |_, _| (*self)(),\n-                    |_| dtor())\n+impl<T, F> Finally<T> for F where F: FnMut() -> T {\n+    fn finally<G>(&mut self, mut dtor: G) -> T where G: FnMut() {\n+        try_finally(&mut (), self, |_, f| (*f)(), |_| dtor())\n     }\n }\n \n@@ -86,25 +76,24 @@ impl<T> Finally<T> for fn() -> T {\n ///         // use state.buffer, state.len to cleanup\n ///     })\n /// ```\n-pub fn try_finally<T,U,R>(mutate: &mut T,\n-                          drop: U,\n-                          try_fn: |&mut T, U| -> R,\n-                          finally_fn: |&mut T|)\n-                          -> R {\n+pub fn try_finally<T, U, R, F, G>(mutate: &mut T, drop: U, try_fn: F, finally_fn: G) -> R where\n+    F: FnOnce(&mut T, U) -> R,\n+    G: FnMut(&mut T),\n+{\n     let f = Finallyalizer {\n         mutate: mutate,\n         dtor: finally_fn,\n     };\n     try_fn(&mut *f.mutate, drop)\n }\n \n-struct Finallyalizer<'a,A:'a> {\n+struct Finallyalizer<'a, A:'a, F> where F: FnMut(&mut A) {\n     mutate: &'a mut A,\n-    dtor: |&mut A|: 'a\n+    dtor: F,\n }\n \n #[unsafe_destructor]\n-impl<'a,A> Drop for Finallyalizer<'a,A> {\n+impl<'a, A, F> Drop for Finallyalizer<'a, A, F> where F: FnMut(&mut A) {\n     #[inline]\n     fn drop(&mut self) {\n         (self.dtor)(self.mutate);"}]}