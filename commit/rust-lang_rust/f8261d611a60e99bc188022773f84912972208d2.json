{"sha": "f8261d611a60e99bc188022773f84912972208d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MjYxZDYxMWE2MGU5OWJjMTg4MDIyNzczZjg0OTEyOTcyMjA4ZDI=", "commit": {"author": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2019-01-08T22:38:51Z"}, "committer": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2019-01-08T22:38:51Z"}, "message": "Fix typo defenition -> definition", "tree": {"sha": "b3a471d775959f00679e0775cd5d56252dec38fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3a471d775959f00679e0775cd5d56252dec38fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8261d611a60e99bc188022773f84912972208d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8261d611a60e99bc188022773f84912972208d2", "html_url": "https://github.com/rust-lang/rust/commit/f8261d611a60e99bc188022773f84912972208d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8261d611a60e99bc188022773f84912972208d2/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46f74e33ca53a7897e9020d3de75cc76a6b89d79", "url": "https://api.github.com/repos/rust-lang/rust/commits/46f74e33ca53a7897e9020d3de75cc76a6b89d79", "html_url": "https://github.com/rust-lang/rust/commit/46f74e33ca53a7897e9020d3de75cc76a6b89d79"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "343d06a5b22318b1b0d63cbfe74dec6b3ce181ef", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=f8261d611a60e99bc188022773f84912972208d2", "patch": "@@ -75,8 +75,8 @@ impl Module {\n     }\n \n     /// Returns a node which defines this module. That is, a file or a `mod foo {}` with items.\n-    pub fn defenition_source(&self, db: &impl HirDatabase) -> Cancelable<(FileId, ModuleSource)> {\n-        self.defenition_source_impl(db)\n+    pub fn definition_source(&self, db: &impl HirDatabase) -> Cancelable<(FileId, ModuleSource)> {\n+        self.definition_source_impl(db)\n     }\n     /// Returns a node which declares this module, either a `mod foo;` or a `mod foo {}`.\n     /// `None` for the crate root."}, {"sha": "1cb408cff6c947e22c2025bd0e467506665c9196", "filename": "crates/ra_hir/src/code_model_impl/module.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Fmodule.rs?ref=f8261d611a60e99bc188022773f84912972208d2", "patch": "@@ -37,7 +37,7 @@ impl Module {\n         Ok(Some(link.name(&module_tree).clone()))\n     }\n \n-    pub fn defenition_source_impl(\n+    pub fn definition_source_impl(\n         &self,\n         db: &impl HirDatabase,\n     ) -> Cancelable<(FileId, ModuleSource)> {"}, {"sha": "0fbbdc8eb50f48971dd035c213d75f36db763750", "filename": "crates/ra_hir/src/impl_block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs?ref=f8261d611a60e99bc188022773f84912972208d2", "patch": "@@ -150,7 +150,7 @@ impl ModuleImplBlocks {\n     }\n \n     fn collect(&mut self, db: &impl HirDatabase, module: Module) -> Cancelable<()> {\n-        let (file_id, module_source) = module.defenition_source(db)?;\n+        let (file_id, module_source) = module.definition_source(db)?;\n         let node = match &module_source {\n             ModuleSource::SourceFile(node) => node.syntax(),\n             ModuleSource::Module(node) => node.syntax(),"}, {"sha": "770a0fdf27010757cb9fb4c36cb267e5bdd50729", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=f8261d611a60e99bc188022773f84912972208d2", "patch": "@@ -20,7 +20,7 @@ pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) ->\n     }\n \n     let module_scope = module.scope(ctx.db)?;\n-    let (file_id, _) = module.defenition_source(ctx.db)?;\n+    let (file_id, _) = module.definition_source(ctx.db)?;\n     module_scope\n         .entries()\n         .filter(|(_name, res)| {"}, {"sha": "0d524b6f1daedc9cdd89b66ea4db908496a3e4f1", "filename": "crates/ra_ide_api/src/goto_definition.rs", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs?ref=f8261d611a60e99bc188022773f84912972208d2", "patch": "@@ -6,22 +6,22 @@ use ra_syntax::{\n \n use crate::{FilePosition, NavigationTarget, db::RootDatabase};\n \n-pub(crate) fn goto_defenition(\n+pub(crate) fn goto_definition(\n     db: &RootDatabase,\n     position: FilePosition,\n ) -> Cancelable<Option<Vec<NavigationTarget>>> {\n     let file = db.source_file(position.file_id);\n     let syntax = file.syntax();\n     if let Some(name_ref) = find_node_at_offset::<ast::NameRef>(syntax, position.offset) {\n-        return Ok(Some(reference_defenition(db, position.file_id, name_ref)?));\n+        return Ok(Some(reference_definition(db, position.file_id, name_ref)?));\n     }\n     if let Some(name) = find_node_at_offset::<ast::Name>(syntax, position.offset) {\n-        return name_defenition(db, position.file_id, name);\n+        return name_definition(db, position.file_id, name);\n     }\n     Ok(None)\n }\n \n-pub(crate) fn reference_defenition(\n+pub(crate) fn reference_definition(\n     db: &RootDatabase,\n     file_id: FileId,\n     name_ref: &ast::NameRef,\n@@ -51,7 +51,7 @@ pub(crate) fn reference_defenition(\n     Ok(navs)\n }\n \n-fn name_defenition(\n+fn name_definition(\n     db: &RootDatabase,\n     file_id: FileId,\n     name: &ast::Name,\n@@ -61,7 +61,7 @@ fn name_defenition(\n             if let Some(child_module) =\n                 hir::source_binder::module_from_declaration(db, file_id, module)?\n             {\n-                let (file_id, _) = child_module.defenition_source(db)?;\n+                let (file_id, _) = child_module.definition_source(db)?;\n                 let name = match child_module.name(db)? {\n                     Some(name) => name.to_string().into(),\n                     None => \"\".into(),\n@@ -86,7 +86,7 @@ mod tests {\n     use crate::mock_analysis::analysis_and_position;\n \n     #[test]\n-    fn goto_defenition_works_in_items() {\n+    fn goto_definition_works_in_items() {\n         let (analysis, pos) = analysis_and_position(\n             \"\n             //- /lib.rs\n@@ -95,7 +95,7 @@ mod tests {\n             \",\n         );\n \n-        let symbols = analysis.goto_defenition(pos).unwrap().unwrap();\n+        let symbols = analysis.goto_definition(pos).unwrap().unwrap();\n         assert_eq_dbg(\n             r#\"[NavigationTarget { file_id: FileId(1), name: \"Foo\",\n                                    kind: STRUCT_DEF, range: [0; 11),\n@@ -105,7 +105,7 @@ mod tests {\n     }\n \n     #[test]\n-    fn goto_defenition_works_for_module_declaration() {\n+    fn goto_definition_works_for_module_declaration() {\n         let (analysis, pos) = analysis_and_position(\n             \"\n             //- /lib.rs\n@@ -115,7 +115,7 @@ mod tests {\n         \",\n         );\n \n-        let symbols = analysis.goto_defenition(pos).unwrap().unwrap();\n+        let symbols = analysis.goto_definition(pos).unwrap().unwrap();\n         assert_eq_dbg(\n             r#\"[NavigationTarget { file_id: FileId(2), name: \"foo\", kind: MODULE, range: [0; 0), ptr: None }]\"#,\n             &symbols,\n@@ -130,7 +130,7 @@ mod tests {\n         \",\n         );\n \n-        let symbols = analysis.goto_defenition(pos).unwrap().unwrap();\n+        let symbols = analysis.goto_definition(pos).unwrap().unwrap();\n         assert_eq_dbg(\n             r#\"[NavigationTarget { file_id: FileId(2), name: \"foo\", kind: MODULE, range: [0; 0), ptr: None }]\"#,\n             &symbols,", "previous_filename": "crates/ra_ide_api/src/goto_defenition.rs"}, {"sha": "41309e7562ffa640b89bafcfcf90e495509271b4", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=f8261d611a60e99bc188022773f84912972208d2", "patch": "@@ -16,7 +16,7 @@ pub(crate) fn hover(\n \n     let mut range = None;\n     if let Some(name_ref) = find_node_at_offset::<ast::NameRef>(file.syntax(), position.offset) {\n-        let navs = crate::goto_defenition::reference_defenition(db, position.file_id, name_ref)?;\n+        let navs = crate::goto_definition::reference_definition(db, position.file_id, name_ref)?;\n         for nav in navs {\n             res.extend(doc_text_for(db, nav)?)\n         }"}, {"sha": "762731268929f10a107467e8bf5bc2d4fcb25e65", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=f8261d611a60e99bc188022773f84912972208d2", "patch": "@@ -20,7 +20,7 @@ macro_rules! ctry {\n \n mod completion;\n mod db;\n-mod goto_defenition;\n+mod goto_definition;\n mod imp;\n pub mod mock_analysis;\n mod runnables;\n@@ -399,11 +399,11 @@ impl Analysis {\n             .collect();\n         Ok(res)\n     }\n-    pub fn goto_defenition(\n+    pub fn goto_definition(\n         &self,\n         position: FilePosition,\n     ) -> Cancelable<Option<Vec<NavigationTarget>>> {\n-        goto_defenition::goto_defenition(&*self.db, position)\n+        goto_definition::goto_definition(&*self.db, position)\n     }\n     /// Finds all usages of the reference at point.\n     pub fn find_all_refs(&self, position: FilePosition) -> Cancelable<Vec<(FileId, TextRange)>> {"}, {"sha": "069e7f932d14f760a426163d1dfaf1bf15ac1628", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8261d611a60e99bc188022773f84912972208d2/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=f8261d611a60e99bc188022773f84912972208d2", "patch": "@@ -213,7 +213,7 @@ pub fn handle_goto_definition(\n     params: req::TextDocumentPositionParams,\n ) -> Result<Option<req::GotoDefinitionResponse>> {\n     let position = params.try_conv_with(&world)?;\n-    let navs = match world.analysis().goto_defenition(position)? {\n+    let navs = match world.analysis().goto_definition(position)? {\n         None => return Ok(None),\n         Some(it) => it,\n     };"}]}