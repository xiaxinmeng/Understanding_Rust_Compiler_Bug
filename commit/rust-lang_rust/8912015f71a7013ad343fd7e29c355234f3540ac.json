{"sha": "8912015f71a7013ad343fd7e29c355234f3540ac", "node_id": "C_kwDOAAsO6NoAKDg5MTIwMTVmNzFhNzAxM2FkMzQzZmQ3ZTI5YzM1NTIzNGYzNTQwYWM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-01T20:26:31Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-02T22:07:57Z"}, "message": "No const equate in new solver", "tree": {"sha": "9a4149c809520d7d1101bd1f2aed2ac9d0488cc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a4149c809520d7d1101bd1f2aed2ac9d0488cc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8912015f71a7013ad343fd7e29c355234f3540ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8912015f71a7013ad343fd7e29c355234f3540ac", "html_url": "https://github.com/rust-lang/rust/commit/8912015f71a7013ad343fd7e29c355234f3540ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8912015f71a7013ad343fd7e29c355234f3540ac/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c1473ca7042ab42489e11f3a1b97d7ecd39aa49", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c1473ca7042ab42489e11f3a1b97d7ecd39aa49", "html_url": "https://github.com/rust-lang/rust/commit/2c1473ca7042ab42489e11f3a1b97d7ecd39aa49"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "bc93b9e99ad44f8056c08409b7ca0de045ecab01", "filename": "compiler/rustc_trait_selection/src/solve/eval_ctxt.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8912015f71a7013ad343fd7e29c355234f3540ac/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Feval_ctxt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8912015f71a7013ad343fd7e29c355234f3540ac/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Feval_ctxt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Feval_ctxt.rs?ref=8912015f71a7013ad343fd7e29c355234f3540ac", "patch": "@@ -322,10 +322,13 @@ impl<'a, 'tcx> EvalCtxt<'a, 'tcx> {\n                 ty::PredicateKind::Ambiguous => {\n                     self.evaluate_added_goals_and_make_canonical_response(Certainty::AMBIGUOUS)\n                 }\n-                // FIXME: implement these predicates :)\n-                ty::PredicateKind::ConstEvaluatable(_) | ty::PredicateKind::ConstEquate(_, _) => {\n+                // FIXME: implement this predicate :)\n+                ty::PredicateKind::ConstEvaluatable(_) => {\n                     self.evaluate_added_goals_and_make_canonical_response(Certainty::Yes)\n                 }\n+                ty::PredicateKind::ConstEquate(_, _) => {\n+                    bug!(\"ConstEquate should not be emitted when `-Ztrait-solver=next` is active\")\n+                }\n                 ty::PredicateKind::TypeWellFormedFromEnv(..) => {\n                     bug!(\"TypeWellFormedFromEnv is only used for Chalk\")\n                 }"}, {"sha": "212327448c874d97c0070df51ed576b92cebbac8", "filename": "compiler/rustc_trait_selection/src/solve/fulfill.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8912015f71a7013ad343fd7e29c355234f3540ac/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8912015f71a7013ad343fd7e29c355234f3540ac/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ffulfill.rs?ref=8912015f71a7013ad343fd7e29c355234f3540ac", "patch": "@@ -118,16 +118,6 @@ impl<'tcx> TraitEngine<'tcx> for FulfillmentCtxt<'tcx> {\n                                         TypeError::Sorts(expected_found),\n                                     )\n                                 }\n-                                ty::PredicateKind::ConstEquate(a, b) => {\n-                                    let (a, b) = infcx.instantiate_binder_with_placeholders(\n-                                        goal.predicate.kind().rebind((a, b)),\n-                                    );\n-                                    let expected_found = ExpectedFound::new(true, a, b);\n-                                    FulfillmentErrorCode::CodeConstEquateError(\n-                                        expected_found,\n-                                        TypeError::ConstMismatch(expected_found),\n-                                    )\n-                                }\n                                 ty::PredicateKind::Clause(_)\n                                 | ty::PredicateKind::WellFormed(_)\n                                 | ty::PredicateKind::ObjectSafe(_)\n@@ -138,7 +128,8 @@ impl<'tcx> TraitEngine<'tcx> for FulfillmentCtxt<'tcx> {\n                                         SelectionError::Unimplemented,\n                                     )\n                                 }\n-                                ty::PredicateKind::TypeWellFormedFromEnv(_) => {\n+                                ty::PredicateKind::ConstEquate(..)\n+                                | ty::PredicateKind::TypeWellFormedFromEnv(_) => {\n                                     bug!(\"unexpected goal: {goal:?}\")\n                                 }\n                             },"}]}