{"sha": "7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7", "node_id": "C_kwDOAAsO6NoAKDdjZGIyM2I5OGE1OGE0ZTczYWIxZTRjYTVlM2JiN2QwNDY0NWJkZDc", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-05-17T20:10:36Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-05-20T13:20:27Z"}, "message": "don't skip inference for type in `offset_of!`", "tree": {"sha": "39a5ca1cfd00c064f1901e4d886308ff201d0146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39a5ca1cfd00c064f1901e4d886308ff201d0146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7", "html_url": "https://github.com/rust-lang/rust/commit/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/comments", "author": null, "committer": null, "parents": [{"sha": "6d1bf733d6d2501fa4f8dd99c7d9a97e2d23d284", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d1bf733d6d2501fa4f8dd99c7d9a97e2d23d284", "html_url": "https://github.com/rust-lang/rust/commit/6d1bf733d6d2501fa4f8dd99c7d9a97e2d23d284"}], "stats": {"total": 58, "additions": 42, "deletions": 16}, "files": [{"sha": "a4c6dd4332a6029904bd1093250a67f095a129cc", "filename": "compiler/rustc_hir_typeck/src/writeback.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/compiler%2Frustc_hir_typeck%2Fsrc%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/compiler%2Frustc_hir_typeck%2Fsrc%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fwriteback.rs?ref=7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7", "patch": "@@ -692,15 +692,7 @@ impl<'cx, 'tcx> WritebackCx<'cx, 'tcx> {\n             fcx_typeck_results.offset_of_data().items_in_stable_order()\n         {\n             let hir_id = hir::HirId { owner: common_hir_owner, local_id };\n-\n-            if cfg!(debug_assertions) && container.has_infer() {\n-                span_bug!(\n-                    hir_id.to_span(self.fcx.tcx),\n-                    \"writeback: `{:?}` has inference variables\",\n-                    container\n-                );\n-            };\n-\n+            let container = self.resolve(container, &hir_id);\n             self.typeck_results.offset_of_data_mut().insert(hir_id, (container, indices.clone()));\n         }\n     }"}, {"sha": "c385b00692ff4530fd5f71539234c5f02d5fa5b2", "filename": "compiler/rustc_mir_build/src/build/expr/as_rvalue.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7", "patch": "@@ -481,10 +481,9 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                 }))))\n             }\n \n-            ExprKind::OffsetOf { container, fields } => block.and(Rvalue::NullaryOp(\n-                NullOp::OffsetOf(fields),\n-                this.tcx.erase_regions(container),\n-            )),\n+            ExprKind::OffsetOf { container, fields } => {\n+                block.and(Rvalue::NullaryOp(NullOp::OffsetOf(fields), container))\n+            }\n \n             ExprKind::Literal { .. }\n             | ExprKind::NamedConst { .. }"}, {"sha": "aee9c89b59544f0a7b051e28c2fa8a9e860186a3", "filename": "library/core/tests/mem.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/library%2Fcore%2Ftests%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/library%2Fcore%2Ftests%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fmem.rs?ref=7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7", "patch": "@@ -394,13 +394,18 @@ fn offset_of() {\n         z: T\n     }\n \n+    trait Trait {}\n+\n     // Ensure that this type of generics works\n     fn offs_of_z<T>() -> usize {\n         offset_of!(Generic<T>, z)\n     }\n \n     assert_eq!(offset_of!(Generic<u8>, z), 8);\n     assert_eq!(offs_of_z::<u8>(), 8);\n+\n+    // Ensure that it works with the implicit lifetime in `Box<dyn Trait + '_>`.\n+    assert_eq!(offset_of!(Generic<Box<dyn Trait>>, z), 8);\n }\n \n #[test]"}, {"sha": "31de45bc7567fdd223c9f7d983ea237357a1b1a8", "filename": "tests/ui/offset-of/offset-of-arg-count.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/tests%2Fui%2Foffset-of%2Foffset-of-arg-count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/tests%2Fui%2Foffset-of%2Foffset-of-arg-count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-arg-count.rs?ref=7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7", "patch": "@@ -13,7 +13,7 @@ fn main() {\n     offset_of!(S, f..); //~ ERROR no rules expected the token\n     offset_of!(S, f..,); //~ ERROR no rules expected the token\n     offset_of!(Lt<'static>, bar); // issue #111657\n-\n+    offset_of!(Lt<'_>, bar); // issue #111678\n }\n \n struct S { f: u8, }"}, {"sha": "3b8dc0b84a46092a18b26cad61224235b0a0cb9b", "filename": "tests/ui/offset-of/offset-of-dst-field.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.rs?ref=7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7", "patch": "@@ -41,6 +41,7 @@ fn main() {\n fn delta() {\n     offset_of!(Delta<Alpha>, z); //~ ERROR the size for values of type\n     offset_of!(Delta<Extern>, z); //~ ERROR the size for values of type\n+    offset_of!(Delta<dyn Trait>, z); //~ ERROR the size for values of type\n }\n \n fn generic_with_maybe_sized<T: ?Sized>() -> usize {"}, {"sha": "128c783d5dd2d766c154ab865c52c827097b7c3e", "filename": "tests/ui/offset-of/offset-of-dst-field.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-dst-field.stderr?ref=7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7", "patch": "@@ -34,6 +34,15 @@ LL |     offset_of!(Delta<Extern>, z);\n    = help: the trait `Sized` is not implemented for `Extern`\n    = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time\n+  --> $DIR/offset-of-dst-field.rs:44:5\n+   |\n+LL |     offset_of!(Delta<dyn Trait>, z);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `dyn Trait`\n+   = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n   --> $DIR/offset-of-dst-field.rs:42:5\n    |\n@@ -49,7 +58,7 @@ LL | struct Alpha {\n    = note: this error originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: the size for values of type `T` cannot be known at compilation time\n-  --> $DIR/offset-of-dst-field.rs:47:5\n+  --> $DIR/offset-of-dst-field.rs:48:5\n    |\n LL | fn generic_with_maybe_sized<T: ?Sized>() -> usize {\n    |                             - this type parameter needs to be `std::marker::Sized`\n@@ -63,6 +72,6 @@ LL - fn generic_with_maybe_sized<T: ?Sized>() -> usize {\n LL + fn generic_with_maybe_sized<T>() -> usize {\n    |\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 7 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "ba87574eae047a3c90f9dce643f30bb173f2b9a5", "filename": "tests/ui/offset-of/offset-of-inference.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/tests%2Fui%2Foffset-of%2Foffset-of-inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/tests%2Fui%2Foffset-of%2Foffset-of-inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-inference.rs?ref=7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7", "patch": "@@ -0,0 +1,11 @@\n+// Test that inference types in `offset_of!` don't ICE.\n+\n+#![feature(offset_of)]\n+\n+struct Foo<T> {\n+    x: T,\n+}\n+\n+fn main() {\n+    let _ = core::mem::offset_of!(Foo<_>, x); //~ ERROR: type annotations needed\n+}"}, {"sha": "2a520f6f906940746037d996e37f7cb81c3e0e0c", "filename": "tests/ui/offset-of/offset-of-inference.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/tests%2Fui%2Foffset-of%2Foffset-of-inference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7/tests%2Fui%2Foffset-of%2Foffset-of-inference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foffset-of%2Foffset-of-inference.stderr?ref=7cdb23b98a58a4e73ab1e4ca5e3bb7d04645bdd7", "patch": "@@ -0,0 +1,9 @@\n+error[E0282]: type annotations needed\n+  --> $DIR/offset-of-inference.rs:10:35\n+   |\n+LL |     let _ = core::mem::offset_of!(Foo<_>, x);\n+   |                                   ^^^^^^ cannot infer type\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0282`."}]}