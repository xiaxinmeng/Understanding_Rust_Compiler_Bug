{"sha": "e18a250139200d40390e46797bb93564108b2d6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxOGEyNTAxMzkyMDBkNDAzOTBlNDY3OTdiYjkzNTY0MTA4YjJkNmY=", "commit": {"author": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-10T11:38:17Z"}, "committer": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T15:22:32Z"}, "message": "clean tests/ui/absurd-extreme-comparisons.rs\n\nCleaning the empty lines for clarity.", "tree": {"sha": "301ee10c4e8b58feb2ecb6a244da765bb04126eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/301ee10c4e8b58feb2ecb6a244da765bb04126eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e18a250139200d40390e46797bb93564108b2d6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e18a250139200d40390e46797bb93564108b2d6f", "html_url": "https://github.com/rust-lang/rust/commit/e18a250139200d40390e46797bb93564108b2d6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e18a250139200d40390e46797bb93564108b2d6f/comments", "author": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f94763c69a59ce81c16be88c4b21819c638b387", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f94763c69a59ce81c16be88c4b21819c638b387", "html_url": "https://github.com/rust-lang/rust/commit/5f94763c69a59ce81c16be88c4b21819c638b387"}], "stats": {"total": 113, "additions": 36, "deletions": 77}, "files": [{"sha": "4bd1aa35dc9c849b0f95d07af6233f90e5cd78b9", "filename": "tests/ui/absurd-extreme-comparisons.rs", "status": "modified", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/e18a250139200d40390e46797bb93564108b2d6f/tests%2Fui%2Fabsurd-extreme-comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e18a250139200d40390e46797bb93564108b2d6f/tests%2Fui%2Fabsurd-extreme-comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.rs?ref=e18a250139200d40390e46797bb93564108b2d6f", "patch": "@@ -6,68 +6,27 @@\n \n fn main() {\n     const Z: u32 = 0;\n-\n     let u: u32 = 42;\n-\n     u <= 0;\n-\n-\n     u <= Z;\n-\n-\n     u < Z;\n-\n-\n     Z >= u;\n-\n-\n     Z > u;\n-\n-\n     u > std::u32::MAX;\n-\n-\n     u >= std::u32::MAX;\n-\n-\n     std::u32::MAX < u;\n-\n-\n     std::u32::MAX <= u;\n-\n-\n-\n     1-1 > u;\n-\n-\n     u >= !0;\n-\n-\n     u <= 12 - 2*6;\n-\n-\n-\n     let i: i8 = 0;\n     i < -127 - 1;\n-\n-\n     std::i8::MAX >= i;\n-\n-\n     3-7 < std::i32::MIN;\n-\n-\n-\n     let b = false;\n     b >= true;\n-\n-\n     false > b;\n-\n-\n-\n     u > 0; // ok\n-\n     // this is handled by unit_cmp\n     () < {};\n }"}, {"sha": "25fabf0aafd98fc1e407eaa519e24dbd51412e8c", "filename": "tests/ui/absurd-extreme-comparisons.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/e18a250139200d40390e46797bb93564108b2d6f/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e18a250139200d40390e46797bb93564108b2d6f/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.stderr?ref=e18a250139200d40390e46797bb93564108b2d6f", "patch": "@@ -1,7 +1,7 @@\n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:12:5\n+  --> $DIR/absurd-extreme-comparisons.rs:10:5\n    |\n-12 |     u <= 0;\n+10 |     u <= 0;\n    |     ^^^^^^\n    |\n note: lint level defined here\n@@ -12,137 +12,137 @@ note: lint level defined here\n    = help: because 0 is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == 0 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:15:5\n+  --> $DIR/absurd-extreme-comparisons.rs:11:5\n    |\n-15 |     u <= Z;\n+11 |     u <= Z;\n    |     ^^^^^^\n    |\n    = help: because Z is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == Z instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:18:5\n+  --> $DIR/absurd-extreme-comparisons.rs:12:5\n    |\n-18 |     u < Z;\n+12 |     u < Z;\n    |     ^^^^^\n    |\n    = help: because Z is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:21:5\n+  --> $DIR/absurd-extreme-comparisons.rs:13:5\n    |\n-21 |     Z >= u;\n+13 |     Z >= u;\n    |     ^^^^^^\n    |\n    = help: because Z is the minimum value for this type, the case where the two sides are not equal never occurs, consider using Z == u instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:24:5\n+  --> $DIR/absurd-extreme-comparisons.rs:14:5\n    |\n-24 |     Z > u;\n+14 |     Z > u;\n    |     ^^^^^\n    |\n    = help: because Z is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:27:5\n+  --> $DIR/absurd-extreme-comparisons.rs:15:5\n    |\n-27 |     u > std::u32::MAX;\n+15 |     u > std::u32::MAX;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:30:5\n+  --> $DIR/absurd-extreme-comparisons.rs:16:5\n    |\n-30 |     u >= std::u32::MAX;\n+16 |     u >= std::u32::MAX;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, the case where the two sides are not equal never occurs, consider using u == std::u32::MAX instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:33:5\n+  --> $DIR/absurd-extreme-comparisons.rs:17:5\n    |\n-33 |     std::u32::MAX < u;\n+17 |     std::u32::MAX < u;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:36:5\n+  --> $DIR/absurd-extreme-comparisons.rs:18:5\n    |\n-36 |     std::u32::MAX <= u;\n+18 |     std::u32::MAX <= u;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, the case where the two sides are not equal never occurs, consider using std::u32::MAX == u instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:40:5\n+  --> $DIR/absurd-extreme-comparisons.rs:19:5\n    |\n-40 |     1-1 > u;\n+19 |     1-1 > u;\n    |     ^^^^^^^\n    |\n    = help: because 1-1 is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:43:5\n+  --> $DIR/absurd-extreme-comparisons.rs:20:5\n    |\n-43 |     u >= !0;\n+20 |     u >= !0;\n    |     ^^^^^^^\n    |\n    = help: because !0 is the maximum value for this type, the case where the two sides are not equal never occurs, consider using u == !0 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:46:5\n+  --> $DIR/absurd-extreme-comparisons.rs:21:5\n    |\n-46 |     u <= 12 - 2*6;\n+21 |     u <= 12 - 2*6;\n    |     ^^^^^^^^^^^^^\n    |\n    = help: because 12 - 2*6 is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == 12 - 2*6 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:51:5\n+  --> $DIR/absurd-extreme-comparisons.rs:23:5\n    |\n-51 |     i < -127 - 1;\n+23 |     i < -127 - 1;\n    |     ^^^^^^^^^^^^\n    |\n    = help: because -127 - 1 is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:54:5\n+  --> $DIR/absurd-extreme-comparisons.rs:24:5\n    |\n-54 |     std::i8::MAX >= i;\n+24 |     std::i8::MAX >= i;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::i8::MAX is the maximum value for this type, this comparison is always true\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:57:5\n+  --> $DIR/absurd-extreme-comparisons.rs:25:5\n    |\n-57 |     3-7 < std::i32::MIN;\n+25 |     3-7 < std::i32::MIN;\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::i32::MIN is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:62:5\n+  --> $DIR/absurd-extreme-comparisons.rs:27:5\n    |\n-62 |     b >= true;\n+27 |     b >= true;\n    |     ^^^^^^^^^\n    |\n    = help: because true is the maximum value for this type, the case where the two sides are not equal never occurs, consider using b == true instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:65:5\n+  --> $DIR/absurd-extreme-comparisons.rs:28:5\n    |\n-65 |     false > b;\n+28 |     false > b;\n    |     ^^^^^^^^^\n    |\n    = help: because false is the minimum value for this type, this comparison is always false\n \n warning: <-comparison of unit values detected. This will always be false\n-  --> $DIR/absurd-extreme-comparisons.rs:72:5\n+  --> $DIR/absurd-extreme-comparisons.rs:31:5\n    |\n-72 |     () < {};\n+31 |     () < {};\n    |     ^^^^^^^\n    |\n    = note: #[warn(unit_cmp)] on by default"}]}