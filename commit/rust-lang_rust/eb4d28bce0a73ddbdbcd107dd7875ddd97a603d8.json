{"sha": "eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNGQyOGJjZTBhNzNkZGJkYmNkMTA3ZGQ3ODc1ZGRkOTdhNjAzZDg=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-06-30T18:31:00Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-06-30T18:31:00Z"}, "message": "Bless mir-opt tests", "tree": {"sha": "14fa3264bef8b0eeb3155b9d0acbcf1e0de1df2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14fa3264bef8b0eeb3155b9d0acbcf1e0de1df2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8", "html_url": "https://github.com/rust-lang/rust/commit/eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca8678b23e5f49c65da1e0d2aa01d3fa0d5178e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca8678b23e5f49c65da1e0d2aa01d3fa0d5178e9", "html_url": "https://github.com/rust-lang/rust/commit/ca8678b23e5f49c65da1e0d2aa01d3fa0d5178e9"}], "stats": {"total": 60, "additions": 44, "deletions": 16}, "files": [{"sha": "2e8cfaea937d7c619e99848800f95456cb0a27e0", "filename": "src/test/mir-opt/no-drop-for-inactive-variant/rustc.unwrap.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8/src%2Ftest%2Fmir-opt%2Fno-drop-for-inactive-variant%2Frustc.unwrap.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8/src%2Ftest%2Fmir-opt%2Fno-drop-for-inactive-variant%2Frustc.unwrap.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fno-drop-for-inactive-variant%2Frustc.unwrap.SimplifyCfg-elaborate-drops.after.mir?ref=eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8", "patch": "@@ -8,22 +8,19 @@ fn unwrap(_1: std::option::Option<T>) -> T {\n     let mut _4: !;                       // in scope 0 at $SRC_DIR/libstd/macros.rs:LL:COL\n     let mut _5: isize;                   // in scope 0 at $DIR/no-drop-for-inactive-variant.rs:12:1: 12:2\n     let mut _6: isize;                   // in scope 0 at $DIR/no-drop-for-inactive-variant.rs:12:1: 12:2\n+    let mut _7: isize;                   // in scope 0 at $DIR/no-drop-for-inactive-variant.rs:12:1: 12:2\n     scope 1 {\n         debug x => _3;                   // in scope 1 at $DIR/no-drop-for-inactive-variant.rs:9:14: 9:15\n     }\n \n     bb0: {\n         _2 = discriminant(_1);           // scope 0 at $DIR/no-drop-for-inactive-variant.rs:9:9: 9:16\n-        switchInt(move _2) -> [0_isize: bb2, 1_isize: bb4, otherwise: bb3]; // scope 0 at $DIR/no-drop-for-inactive-variant.rs:9:9: 9:16\n+        switchInt(move _2) -> [0_isize: bb1, 1_isize: bb3, otherwise: bb2]; // scope 0 at $DIR/no-drop-for-inactive-variant.rs:9:9: 9:16\n     }\n \n-    bb1 (cleanup): {\n-        resume;                          // scope 0 at $DIR/no-drop-for-inactive-variant.rs:7:1: 12:2\n-    }\n-\n-    bb2: {\n+    bb1: {\n         StorageLive(_4);                 // scope 0 at $SRC_DIR/libstd/macros.rs:LL:COL\n-        const std::rt::begin_panic::<&str>(const \"explicit panic\") -> bb5; // scope 0 at $SRC_DIR/libstd/macros.rs:LL:COL\n+        const std::rt::begin_panic::<&str>(const \"explicit panic\") -> bb4; // scope 0 at $SRC_DIR/libstd/macros.rs:LL:COL\n                                          // ty::Const\n                                          // + ty: fn(&str) -> ! {std::rt::begin_panic::<&str>}\n                                          // + val: Value(Scalar(<ZST>))\n@@ -38,20 +35,21 @@ fn unwrap(_1: std::option::Option<T>) -> T {\n                                          // + literal: Const { ty: &str, val: Value(Slice { data: Allocation { bytes: [101, 120, 112, 108, 105, 99, 105, 116, 32, 112, 97, 110, 105, 99], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [16383], len: Size { raw: 14 } }, size: Size { raw: 14 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 14 }) }\n     }\n \n-    bb3: {\n+    bb2: {\n         unreachable;                     // scope 0 at $DIR/no-drop-for-inactive-variant.rs:8:11: 8:14\n     }\n \n-    bb4: {\n+    bb3: {\n         StorageLive(_3);                 // scope 0 at $DIR/no-drop-for-inactive-variant.rs:9:14: 9:15\n         _3 = move ((_1 as Some).0: T);   // scope 0 at $DIR/no-drop-for-inactive-variant.rs:9:14: 9:15\n         _0 = move _3;                    // scope 1 at $DIR/no-drop-for-inactive-variant.rs:9:20: 9:21\n         StorageDead(_3);                 // scope 0 at $DIR/no-drop-for-inactive-variant.rs:9:21: 9:22\n-        _5 = discriminant(_1);           // scope 0 at $DIR/no-drop-for-inactive-variant.rs:12:1: 12:2\n+        _6 = discriminant(_1);           // scope 0 at $DIR/no-drop-for-inactive-variant.rs:12:1: 12:2\n         return;                          // scope 0 at $DIR/no-drop-for-inactive-variant.rs:12:2: 12:2\n     }\n \n-    bb5 (cleanup): {\n-        drop(_1) -> bb1;                 // scope 0 at $DIR/no-drop-for-inactive-variant.rs:12:1: 12:2\n+    bb4 (cleanup): {\n+        _5 = discriminant(_1);           // scope 0 at $DIR/no-drop-for-inactive-variant.rs:12:1: 12:2\n+        resume;                          // scope 0 at $DIR/no-drop-for-inactive-variant.rs:7:1: 12:2\n     }\n }"}, {"sha": "01df5a2fce051217b4f3d33d22d60b8060b1a690", "filename": "src/test/mir-opt/simplify-locals-removes-unused-discriminant-reads/32bit/rustc.map.SimplifyLocals.diff", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8/src%2Ftest%2Fmir-opt%2Fsimplify-locals-removes-unused-discriminant-reads%2F32bit%2Frustc.map.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8/src%2Ftest%2Fmir-opt%2Fsimplify-locals-removes-unused-discriminant-reads%2F32bit%2Frustc.map.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-locals-removes-unused-discriminant-reads%2F32bit%2Frustc.map.SimplifyLocals.diff?ref=eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8", "patch": "@@ -7,13 +7,28 @@\n       let mut _2: isize;                   // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n       let _3: std::boxed::Box<()>;         // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:4:14: 4:15\n -     let mut _4: std::boxed::Box<()>;     // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:4:25: 4:26\n--     let mut _5: isize;                   // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:1: 6:2\n+-     let mut _5: bool;                    // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:1: 6:2\n -     let mut _6: isize;                   // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:1: 6:2\n+-     let mut _7: isize;                   // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:1: 6:2\n       scope 1 {\n           debug x => _3;                   // in scope 1 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:4:14: 4:15\n       }\n   \n       bb0: {\n+-         _5 = const false;                // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n+-                                          // ty::Const\n+-                                          // + ty: bool\n+-                                          // + val: Value(Scalar(0x00))\n+-                                          // mir::Constant\n+-                                          // + span: $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n+-                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n+-         _5 = const true;                 // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n+-                                          // ty::Const\n+-                                          // + ty: bool\n+-                                          // + val: Value(Scalar(0x01))\n+-                                          // mir::Constant\n+-                                          // + span: $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n+-                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }\n           _2 = discriminant(_1);           // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n           switchInt(move _2) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n       }\n@@ -35,7 +50,7 @@\n       }\n   \n       bb3: {\n--         _5 = discriminant(_1);           // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:1: 6:2\n+-         _6 = discriminant(_1);           // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:1: 6:2\n           return;                          // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:2: 6:2\n       }\n   }"}, {"sha": "e46b3067fc46738e1baeed8837b2d6c8a7b2ce01", "filename": "src/test/mir-opt/simplify-locals-removes-unused-discriminant-reads/64bit/rustc.map.SimplifyLocals.diff", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8/src%2Ftest%2Fmir-opt%2Fsimplify-locals-removes-unused-discriminant-reads%2F64bit%2Frustc.map.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8/src%2Ftest%2Fmir-opt%2Fsimplify-locals-removes-unused-discriminant-reads%2F64bit%2Frustc.map.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-locals-removes-unused-discriminant-reads%2F64bit%2Frustc.map.SimplifyLocals.diff?ref=eb4d28bce0a73ddbdbcd107dd7875ddd97a603d8", "patch": "@@ -7,13 +7,28 @@\n       let mut _2: isize;                   // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n       let _3: std::boxed::Box<()>;         // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:4:14: 4:15\n -     let mut _4: std::boxed::Box<()>;     // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:4:25: 4:26\n--     let mut _5: isize;                   // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:1: 6:2\n+-     let mut _5: bool;                    // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:1: 6:2\n -     let mut _6: isize;                   // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:1: 6:2\n+-     let mut _7: isize;                   // in scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:1: 6:2\n       scope 1 {\n           debug x => _3;                   // in scope 1 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:4:14: 4:15\n       }\n   \n       bb0: {\n+-         _5 = const false;                // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n+-                                          // ty::Const\n+-                                          // + ty: bool\n+-                                          // + val: Value(Scalar(0x00))\n+-                                          // mir::Constant\n+-                                          // + span: $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n+-                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n+-         _5 = const true;                 // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n+-                                          // ty::Const\n+-                                          // + ty: bool\n+-                                          // + val: Value(Scalar(0x01))\n+-                                          // mir::Constant\n+-                                          // + span: $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n+-                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }\n           _2 = discriminant(_1);           // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n           switchInt(move _2) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:3:9: 3:13\n       }\n@@ -35,7 +50,7 @@\n       }\n   \n       bb3: {\n--         _5 = discriminant(_1);           // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:1: 6:2\n+-         _6 = discriminant(_1);           // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:1: 6:2\n           return;                          // scope 0 at $DIR/simplify-locals-removes-unused-discriminant-reads.rs:6:2: 6:2\n       }\n   }"}]}