{"sha": "2cf7c29675583b8362a9116397b297f6fc872678", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjZjdjMjk2NzU1ODNiODM2MmE5MTE2Mzk3YjI5N2Y2ZmM4NzI2Nzg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-04T09:08:58Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-04T09:08:58Z"}, "message": "avoid using nightly features", "tree": {"sha": "1488d46fe004c18192260f20358737938bf9af01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1488d46fe004c18192260f20358737938bf9af01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cf7c29675583b8362a9116397b297f6fc872678", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cf7c29675583b8362a9116397b297f6fc872678", "html_url": "https://github.com/rust-lang/rust/commit/2cf7c29675583b8362a9116397b297f6fc872678", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cf7c29675583b8362a9116397b297f6fc872678/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a675fd6f2e2fb623985fa87987a9c9ec22543279", "url": "https://api.github.com/repos/rust-lang/rust/commits/a675fd6f2e2fb623985fa87987a9c9ec22543279", "html_url": "https://github.com/rust-lang/rust/commit/a675fd6f2e2fb623985fa87987a9c9ec22543279"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "373c72f9843c414001993713c5dbbbf3ba54fe5e", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2cf7c29675583b8362a9116397b297f6fc872678/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cf7c29675583b8362a9116397b297f6fc872678/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=2cf7c29675583b8362a9116397b297f6fc872678", "patch": "@@ -4,7 +4,6 @@\n //! via `x.py dist hash-and-sign`; the cmdline arguments are set up\n //! by rustbuild (in `src/bootstrap/dist.rs`).\n \n-#![feature(try_blocks)]\n #![deny(warnings)]\n \n use toml;\n@@ -381,10 +380,9 @@ impl Builder {\n     /// If a tool does not pass its tests, don't ship it.\n     /// Right now, we do this only for Miri.\n     fn check_toolstate(&mut self) {\n-        let toolstates: Option<HashMap<String, String>> = try {\n-            let toolstates = File::open(self.input.join(\"toolstates-linux.json\")).ok()?;\n-            serde_json::from_reader(&toolstates).ok()?\n-        };\n+        let toolstates: Option<HashMap<String, String>> =\n+            File::open(self.input.join(\"toolstates-linux.json\")).ok()\n+                .and_then(|f| serde_json::from_reader(&f).ok());\n         let toolstates = toolstates.unwrap_or_else(|| {\n             println!(\"WARNING: `toolstates-linux.json` missing; assuming all tools failed\");\n             HashMap::default() // Use empty map if anything went wrong."}]}