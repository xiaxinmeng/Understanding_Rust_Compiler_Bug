{"sha": "b87b22e53caa405ac318c8b4c70d89fd6ffd0be8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4N2IyMmU1M2NhYTQwNWFjMzE4YzhiNGM3MGQ4OWZkNmZmZDBiZTg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-05T23:07:20Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-06T00:49:23Z"}, "message": "Rollup merge of #52031 - RalfJung:arc, r=sfackler\n\nStrenghten synchronization in `Arc::is_unique`\n\nPreviously, `is_unique` would not synchronize at all with a `drop` that returned\nearly because it was not the last reference, leading to a data race.\n\nFixes #51780\n\nUnfortunately I have no idea how to add a test for this.\n\nCc @jhjourdan", "tree": {"sha": "09016d1a774f8a6a80b1ea76329d736b6dbe27a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09016d1a774f8a6a80b1ea76329d736b6dbe27a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b87b22e53caa405ac318c8b4c70d89fd6ffd0be8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAls+vJMACgkQ/vbIBR0O\nATxe7Q//e26UKTj3fYBKlbCtK6M1z7+0VicRFDTIVf8p7IQ/7L4WH/AXhugbpKZA\nJE+MQZaukGtwEge6PL8o650d7YmPUQ9/CKo8XvcQpNxwVkCJickKS7nYBhgslRTl\nvOuKwMqaRxd3t3Y95xE4UnYqU+7Qg0rY2LTcLeuJI4Qq+xzYWrWtuOrsNaX7YlAO\nLUtgKeJ1nhQR3/lum1AQwPCh3jzBLzFd/zqi9gUM9QoxDeG5wag3gYV/T94/tm+2\nEUieaRPPCJyyXJ8BXXwWGZAqgVynassm7R2Js+GtRnJAZ3dpdd27fauj1dxu2CWL\n8ydahC07KBj3tOCrMIDMNtbn73ggdQwS+pPXultT7g/8xwGM4bwma5Knr/4nA5/N\n2JGRCcMhPjyuBfScNj5q7TIzrF/xKgqzWJh7akEUHf9n2CdKwmP6GK+ydfgCC3Y/\nB48dJ02n+Sgfp8KYVpeBt/pDy6zUHhdqbfkCMW3yJaXh0aqrWcQvwOQ13ElQDT58\nbByOiun49smbk8EH335pFK6LWD8VBT3LjLeQ0sJlPP8Y/oCh09hVwbe34iZk03i/\njn12PHr+nAXe5MuPDxHbvV8wjTPp4e0rtG75URlMwrlQ4ezaYZYVGq726Hg0/ddl\nJx4YeIJzyeLnfoHb2TwYZ3R6/Ew6SgZU0Eoz7A8xu7zABAPgFgM=\n=FzyD\n-----END PGP SIGNATURE-----", "payload": "tree 09016d1a774f8a6a80b1ea76329d736b6dbe27a6\nparent 7ce7bf0e37195ac17844267aad1f347d66c8ab4c\nparent f96c2468695911222ba7557ce04af0dd8fbb6df2\nauthor kennytm <kennytm@gmail.com> 1530832040 +0800\ncommitter kennytm <kennytm@gmail.com> 1530838163 +0800\n\nRollup merge of #52031 - RalfJung:arc, r=sfackler\n\nStrenghten synchronization in `Arc::is_unique`\n\nPreviously, `is_unique` would not synchronize at all with a `drop` that returned\nearly because it was not the last reference, leading to a data race.\n\nFixes #51780\n\nUnfortunately I have no idea how to add a test for this.\n\nCc @jhjourdan\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b87b22e53caa405ac318c8b4c70d89fd6ffd0be8", "html_url": "https://github.com/rust-lang/rust/commit/b87b22e53caa405ac318c8b4c70d89fd6ffd0be8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b87b22e53caa405ac318c8b4c70d89fd6ffd0be8/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ce7bf0e37195ac17844267aad1f347d66c8ab4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ce7bf0e37195ac17844267aad1f347d66c8ab4c", "html_url": "https://github.com/rust-lang/rust/commit/7ce7bf0e37195ac17844267aad1f347d66c8ab4c"}, {"sha": "f96c2468695911222ba7557ce04af0dd8fbb6df2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f96c2468695911222ba7557ce04af0dd8fbb6df2", "html_url": "https://github.com/rust-lang/rust/commit/f96c2468695911222ba7557ce04af0dd8fbb6df2"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "4244b09b18f9cb5d5a821205ebf3138f8459399e", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b87b22e53caa405ac318c8b4c70d89fd6ffd0be8/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b87b22e53caa405ac318c8b4c70d89fd6ffd0be8/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=b87b22e53caa405ac318c8b4c70d89fd6ffd0be8", "patch": "@@ -886,13 +886,14 @@ impl<T: ?Sized> Arc<T> {\n         // holder.\n         //\n         // The acquire label here ensures a happens-before relationship with any\n-        // writes to `strong` prior to decrements of the `weak` count (via drop,\n-        // which uses Release).\n+        // writes to `strong` (in particular in `Weak::upgrade`) prior to decrements\n+        // of the `weak` count (via `Weak::drop`, which uses release).  If the upgraded\n+        // weak ref was never dropped, the CAS here will fail so we do not care to synchronize.\n         if self.inner().weak.compare_exchange(1, usize::MAX, Acquire, Relaxed).is_ok() {\n-            // Due to the previous acquire read, this will observe any writes to\n-            // `strong` that were due to upgrading weak pointers; only strong\n-            // clones remain, which require that the strong count is > 1 anyway.\n-            let unique = self.inner().strong.load(Relaxed) == 1;\n+            // This needs to be an `Acquire` to synchronize with the decrement of the `strong`\n+            // counter in `drop` -- the only access that happens when any but the last reference\n+            // is being dropped.\n+            let unique = self.inner().strong.load(Acquire) == 1;\n \n             // The release write here synchronizes with a read in `downgrade`,\n             // effectively preventing the above read of `strong` from happening"}]}