{"sha": "ab8a947fa0e8f8397ad9c831741e6429fbed2c0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiOGE5NDdmYTBlOGY4Mzk3YWQ5YzgzMTc0MWU2NDI5ZmJlZDJjMGI=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-11-08T22:57:02Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-11-12T19:21:57Z"}, "message": "Move `static_assert!` into librustc_data_structures.\n\nThis means it can be used by more crates.", "tree": {"sha": "7bbcaea5d39b040288b9493b2b75e57e3cb1f3ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bbcaea5d39b040288b9493b2b75e57e3cb1f3ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab8a947fa0e8f8397ad9c831741e6429fbed2c0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8a947fa0e8f8397ad9c831741e6429fbed2c0b", "html_url": "https://github.com/rust-lang/rust/commit/ab8a947fa0e8f8397ad9c831741e6429fbed2c0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab8a947fa0e8f8397ad9c831741e6429fbed2c0b/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a2ca1a6f18aa93d3120761f614ec2d39b4cb1ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a2ca1a6f18aa93d3120761f614ec2d39b4cb1ac", "html_url": "https://github.com/rust-lang/rust/commit/5a2ca1a6f18aa93d3120761f614ec2d39b4cb1ac"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "781a0fa3f663a97fc1a3b7d86691c11faa195ad0", "filename": "src/librustc/macros.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ab8a947fa0e8f8397ad9c831741e6429fbed2c0b/src%2Flibrustc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8a947fa0e8f8397ad9c831741e6429fbed2c0b/src%2Flibrustc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmacros.rs?ref=ab8a947fa0e8f8397ad9c831741e6429fbed2c0b", "patch": "@@ -62,16 +62,6 @@ macro_rules! span_bug {\n     })\n }\n \n-#[macro_export]\n-macro_rules! static_assert {\n-    ($name:ident: $test:expr) => {\n-        // Use the bool to access an array such that if the bool is false, the access\n-        // is out-of-bounds.\n-        #[allow(dead_code)]\n-        static $name: () = [()][!$test as usize];\n-    }\n-}\n-\n #[macro_export]\n macro_rules! __impl_stable_hash_field {\n     ($field:ident, $ctx:expr, $hasher:expr) => ($field.hash_stable($ctx, $hasher));"}, {"sha": "135abebdacb7acacb4499d1bc0c1176a2decf11f", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab8a947fa0e8f8397ad9c831741e6429fbed2c0b/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8a947fa0e8f8397ad9c831741e6429fbed2c0b/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=ab8a947fa0e8f8397ad9c831741e6429fbed2c0b", "patch": "@@ -57,6 +57,7 @@ extern crate rustc_cratesio_shim;\n \n pub use rustc_serialize::hex::ToHex;\n \n+pub mod macros;\n pub mod svh;\n pub mod base_n;\n pub mod bit_set;"}, {"sha": "3cc91b0e93f0430b23b956e191fa1875cb0b8abc", "filename": "src/librustc_data_structures/macros.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ab8a947fa0e8f8397ad9c831741e6429fbed2c0b/src%2Flibrustc_data_structures%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8a947fa0e8f8397ad9c831741e6429fbed2c0b/src%2Flibrustc_data_structures%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fmacros.rs?ref=ab8a947fa0e8f8397ad9c831741e6429fbed2c0b", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+/// A simple static assertion macro. The first argument should be a unique\n+/// ALL_CAPS identifier that describes the condition.\n+#[macro_export]\n+macro_rules! static_assert {\n+    ($name:ident: $test:expr) => {\n+        // Use the bool to access an array such that if the bool is false, the access\n+        // is out-of-bounds.\n+        #[allow(dead_code)]\n+        static $name: () = [()][!$test as usize];\n+    }\n+}"}]}