{"sha": "d2782ab1c1ec0b9f2ac2131859a9ee880f97bc12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNzgyYWIxYzFlYzBiOWYyYWMyMTMxODU5YTllZTg4MGY5N2JjMTI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-19T08:27:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-19T08:27:27Z"}, "message": "Merge #2312\n\n2312: Fixed string literal quoting r=matklad a=edwin0cheng\n\nIt fixed a bug which `quote!` should return a literal escaped instead of original string. \n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "6ee965ff6e6bfbf879ed442e6ca9b70e01388d5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ee965ff6e6bfbf879ed442e6ca9b70e01388d5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2782ab1c1ec0b9f2ac2131859a9ee880f97bc12", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd06dvCRBK7hj4Ov3rIwAAdHIIADKB4sgt4OiDlCyYkZmPHD5I\nskmw6UN7UQVvlYiWixVuOcKi8ovZ+W1bXHRwDKPZUA7h4ZbsawUn639VEL/P04+k\nWionwCEcfZ0DyDfy0dtdK/C9kfnkU6ss4kxZKuW9SP4n6aG82tXSA5cCUZS8eTrQ\n+VrQNqh7crv9AIgXsh9mIIehpZbwPy2+ph5/mOQUf8rMdf8W6oVqgY6glSlc+dAr\nkVVjNVmGJBT8Zv1FTEfUf7NBYGe6rz0bDnXsEwW5Tmfe3UGP2Fs287m9JyGMk0jz\nfgrkkOgOStzK2rTI9UEc5ZkWiQsI60fpW+wVlf8S1c98JfnNLKSkkken21tqBFU=\n=MnOt\n-----END PGP SIGNATURE-----\n", "payload": "tree 6ee965ff6e6bfbf879ed442e6ca9b70e01388d5c\nparent c3e61d7e8e48115b9b864ec8cdb4652a37e68cd6\nparent f24bba74d02a14552693a8d4b11b74bb8ffa93db\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1574152047 +0000\ncommitter GitHub <noreply@github.com> 1574152047 +0000\n\nMerge #2312\n\n2312: Fixed string literal quoting r=matklad a=edwin0cheng\n\nIt fixed a bug which `quote!` should return a literal escaped instead of original string. \n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2782ab1c1ec0b9f2ac2131859a9ee880f97bc12", "html_url": "https://github.com/rust-lang/rust/commit/d2782ab1c1ec0b9f2ac2131859a9ee880f97bc12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2782ab1c1ec0b9f2ac2131859a9ee880f97bc12/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3e61d7e8e48115b9b864ec8cdb4652a37e68cd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3e61d7e8e48115b9b864ec8cdb4652a37e68cd6", "html_url": "https://github.com/rust-lang/rust/commit/c3e61d7e8e48115b9b864ec8cdb4652a37e68cd6"}, {"sha": "f24bba74d02a14552693a8d4b11b74bb8ffa93db", "url": "https://api.github.com/repos/rust-lang/rust/commits/f24bba74d02a14552693a8d4b11b74bb8ffa93db", "html_url": "https://github.com/rust-lang/rust/commit/f24bba74d02a14552693a8d4b11b74bb8ffa93db"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "65a35e52fa4d799a88a43ef0e4bdbfb03580c57a", "filename": "crates/ra_hir_expand/src/quote.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d2782ab1c1ec0b9f2ac2131859a9ee880f97bc12/crates%2Fra_hir_expand%2Fsrc%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2782ab1c1ec0b9f2ac2131859a9ee880f97bc12/crates%2Fra_hir_expand%2Fsrc%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fquote.rs?ref=d2782ab1c1ec0b9f2ac2131859a9ee880f97bc12", "patch": "@@ -172,12 +172,12 @@ impl_to_to_tokentrees! {\n     u32 => self { tt::Literal{text: self.to_string().into()} };\n     usize => self { tt::Literal{text: self.to_string().into()}};\n     i32 => self { tt::Literal{text: self.to_string().into()}};\n-    &str => self { tt::Literal{text: self.to_string().into()}};\n-    String => self { tt::Literal{text: self.into()}};\n     tt::Leaf => self { self };\n     tt::Literal => self { self };\n     tt::Ident => self { self };\n-    tt::Punct => self { self }\n+    tt::Punct => self { self };\n+    &str => self { tt::Literal{text: format!(\"{:?}\", self.escape_default().to_string()).into()}};\n+    String => self { tt::Literal{text: format!(\"{:?}\", self.escape_default().to_string()).into()}}\n }\n \n #[cfg(test)]\n@@ -200,7 +200,7 @@ mod tests {\n         let a = 20;\n         assert_eq!(quote!(#a).to_string(), \"20\");\n         let s: String = \"hello\".into();\n-        assert_eq!(quote!(#s).to_string(), \"hello\");\n+        assert_eq!(quote!(#s).to_string(), \"\\\"hello\\\"\");\n     }\n \n     fn mk_ident(name: &str) -> tt::Ident {"}]}