{"sha": "d19b64fb54391b64ce99981577c67c93ac2a9ffa", "node_id": "C_kwDOAAsO6NoAKGQxOWI2NGZiNTQzOTFiNjRjZTk5OTgxNTc3YzY3YzkzYWMyYTlmZmE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-20T23:19:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-20T23:19:19Z"}, "message": "Auto merge of #109999 - m-ou-se:flatten-format-args, r=oli-obk\n\nEnable flatten-format-args by default.\n\nPart of https://github.com/rust-lang/rust/issues/99012.\n\nThis enables the `flatten-format-args` feature that was added by https://github.com/rust-lang/rust/pull/106824:\n\n> This change inlines string literals, integer literals and nested format_args!() into format_args!() during ast lowering, making all of the following pairs result in equivalent hir:\n>\n> ```rust\n> println!(\"Hello, {}!\", \"World\");\n> println!(\"Hello, World!\");\n> ```\n>\n> ```rust\n> println!(\"[info] {}\", format_args!(\"error\"));\n> println!(\"[info] error\");\n> ```\n>\n> ```rust\n> println!(\"[{}] {}\", status, format_args!(\"error: {}\", msg));\n> println!(\"[{}] error: {}\", status, msg);\n> ```\n>\n> ```rust\n> println!(\"{} + {} = {}\", 1, 2, 1 + 2);\n> println!(\"1 + 2 = {}\", 1 + 2);\n> ```\n>\n> And so on.\n>\n> This is useful for macros. E.g. a `log::info!()` macro could just pass the tokens from the user directly into a `format_args!()` that gets efficiently flattened/inlined into a `format_args!(\"info: {}\")`.\n>\n> It also means that `dbg!(x)` will have its file, line, and expression name inlined:\n>\n> ```rust\n> eprintln!(\"[{}:{}] {} = {:#?}\", file!(), line!(), stringify!(x), x); // before\n> eprintln!(\"[example.rs:1] x = {:#?}\", x); // after\n> ```\n>\n> Which can be nice in some cases, but also means a lot more unique static strings than before if dbg!() is used a lot.\n\nThis is mostly an optimization, except that it will be visible through [`fmt::Arguments::as_str()`](https://doc.rust-lang.org/nightly/std/fmt/struct.Arguments.html#method.as_str).\n\nIn https://github.com/rust-lang/rust/pull/106823, there was already a libs-api FCP about the documentation of `fmt::Arguments::as_str()` to allow it to give `Some` rather than `None` depending on optimizations like this. That was just a documentation update though. This PR is the one that actually makes the user visible change:\n\n```rust\nassert_eq!(format_args!(\"abc\").as_str(), Some(\"abc\")); // Unchanged.\nassert_eq!(format_args!(\"ab{}\", \"c\").as_str(), Some(\"abc\")); // Was `None` before!\n```", "tree": {"sha": "81d8728fa2e0d17c652a3857ad1b65f5de822415", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81d8728fa2e0d17c652a3857ad1b65f5de822415"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d19b64fb54391b64ce99981577c67c93ac2a9ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d19b64fb54391b64ce99981577c67c93ac2a9ffa", "html_url": "https://github.com/rust-lang/rust/commit/d19b64fb54391b64ce99981577c67c93ac2a9ffa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d19b64fb54391b64ce99981577c67c93ac2a9ffa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bdcc62cb0362869f0e7b43a6ae4f96b953d3cbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bdcc62cb0362869f0e7b43a6ae4f96b953d3cbc", "html_url": "https://github.com/rust-lang/rust/commit/8bdcc62cb0362869f0e7b43a6ae4f96b953d3cbc"}, {"sha": "2cd5ce08ba2a52da052c8372737245eb6c3c78bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cd5ce08ba2a52da052c8372737245eb6c3c78bd", "html_url": "https://github.com/rust-lang/rust/commit/2cd5ce08ba2a52da052c8372737245eb6c3c78bd"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "f5d44d239e0346f41e3bc138ea169a50998efdbd", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d19b64fb54391b64ce99981577c67c93ac2a9ffa/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19b64fb54391b64ce99981577c67c93ac2a9ffa/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=d19b64fb54391b64ce99981577c67c93ac2a9ffa", "patch": "@@ -747,7 +747,7 @@ fn test_unstable_options_tracking_hash() {\n     tracked!(emit_thin_lto, false);\n     tracked!(export_executable_symbols, true);\n     tracked!(fewer_names, Some(true));\n-    tracked!(flatten_format_args, true);\n+    tracked!(flatten_format_args, false);\n     tracked!(force_unstable_if_unmarked, true);\n     tracked!(fuel, Some((\"abc\".to_string(), 99)));\n     tracked!(function_sections, Some(false));"}, {"sha": "8e8ad72ec8a3f0e8c85a85169911d01890a4dff2", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d19b64fb54391b64ce99981577c67c93ac2a9ffa/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19b64fb54391b64ce99981577c67c93ac2a9ffa/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=d19b64fb54391b64ce99981577c67c93ac2a9ffa", "patch": "@@ -1452,9 +1452,9 @@ options! {\n     fewer_names: Option<bool> = (None, parse_opt_bool, [TRACKED],\n         \"reduce memory use by retaining fewer names within compilation artifacts (LLVM-IR) \\\n         (default: no)\"),\n-    flatten_format_args: bool = (false, parse_bool, [TRACKED],\n+    flatten_format_args: bool = (true, parse_bool, [TRACKED],\n         \"flatten nested format_args!() and literals into a simplified format_args!() call \\\n-        (default: no)\"),\n+        (default: yes)\"),\n     force_unstable_if_unmarked: bool = (false, parse_bool, [TRACKED],\n         \"force all crates to be `rustc_private` unstable (default: no)\"),\n     fuel: Option<(String, u64)> = (None, parse_optimization_fuel, [TRACKED],"}, {"sha": "205905d50913557f721e264dc365d23a464d728a", "filename": "src/tools/clippy/src/driver.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d19b64fb54391b64ce99981577c67c93ac2a9ffa/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19b64fb54391b64ce99981577c67c93ac2a9ffa/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs?ref=d19b64fb54391b64ce99981577c67c93ac2a9ffa", "patch": "@@ -160,6 +160,9 @@ impl rustc_driver::Callbacks for ClippyCallbacks {\n         // MIR passes can be enabled / disabled separately, we should figure out, what passes to\n         // use for Clippy.\n         config.opts.unstable_opts.mir_opt_level = Some(0);\n+\n+        // Disable flattening and inlining of format_args!(), so the HIR matches with the AST.\n+        config.opts.unstable_opts.flatten_format_args = false;\n     }\n }\n "}]}