{"sha": "ac84af24dbdb2b18c548e772ba7427bb7e91f9ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjODRhZjI0ZGJkYjJiMThjNTQ4ZTc3MmJhNzQyN2JiN2U5MWY5ZWQ=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-03-03T04:26:14Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-03-03T06:28:20Z"}, "message": "privacy: walk associated types in trait impls", "tree": {"sha": "5a19bfc8396554ad4fa17cdcdf1bd9f833e5f306", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a19bfc8396554ad4fa17cdcdf1bd9f833e5f306"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac84af24dbdb2b18c548e772ba7427bb7e91f9ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac84af24dbdb2b18c548e772ba7427bb7e91f9ed", "html_url": "https://github.com/rust-lang/rust/commit/ac84af24dbdb2b18c548e772ba7427bb7e91f9ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac84af24dbdb2b18c548e772ba7427bb7e91f9ed/comments", "author": null, "committer": null, "parents": [{"sha": "b4c965ee803a4521d8b4575f634e036f93e408f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4c965ee803a4521d8b4575f634e036f93e408f3", "html_url": "https://github.com/rust-lang/rust/commit/b4c965ee803a4521d8b4575f634e036f93e408f3"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "ab3b56c31b62a93d70d5147e23478e8ac8d6167c", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ac84af24dbdb2b18c548e772ba7427bb7e91f9ed/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac84af24dbdb2b18c548e772ba7427bb7e91f9ed/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=ac84af24dbdb2b18c548e772ba7427bb7e91f9ed", "patch": "@@ -1376,10 +1376,11 @@ impl<'a, 'tcx, 'v> Visitor<'v> for VisiblePrivateTypesVisitor<'a, 'tcx> {\n                             }\n                         }\n                         Some(ref tr) => {\n-                            // Any private types in a trait impl fall into two\n+                            // Any private types in a trait impl fall into three\n                             // categories.\n                             // 1. mentioned in the trait definition\n                             // 2. mentioned in the type params/generics\n+                            // 3. mentioned in the associated types of the impl\n                             //\n                             // Those in 1. can only occur if the trait is in\n                             // this crate and will've been warned about on the\n@@ -1389,6 +1390,16 @@ impl<'a, 'tcx, 'v> Visitor<'v> for VisiblePrivateTypesVisitor<'a, 'tcx> {\n                             // Those in 2. are warned via walk_generics and this\n                             // call here.\n                             visit::walk_path(self, &tr.path);\n+\n+                            // Those in 3. are warned with this call.\n+                            for impl_item in impl_items {\n+                                match *impl_item {\n+                                    ast::MethodImplItem(..) => {},\n+                                    ast::TypeImplItem(ref typedef) => {\n+                                        self.visit_ty(&typedef.typ);\n+                                    }\n+                                }\n+                            }\n                         }\n                     }\n                 } else if trait_ref.is_none() && self_is_public_path {"}, {"sha": "f4536ceb8ed69c3570a5bb2310a20a13048f3955", "filename": "src/test/compile-fail/issue-22912.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/ac84af24dbdb2b18c548e772ba7427bb7e91f9ed/src%2Ftest%2Fcompile-fail%2Fissue-22912.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac84af24dbdb2b18c548e772ba7427bb7e91f9ed/src%2Ftest%2Fcompile-fail%2Fissue-22912.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-22912.rs?ref=ac84af24dbdb2b18c548e772ba7427bb7e91f9ed", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct PublicType;\n+struct PrivateType;\n+\n+pub trait PublicTrait {\n+    type Item;\n+}\n+\n+trait PrivateTrait {\n+    type Item;\n+}\n+\n+impl PublicTrait for PublicType {\n+    type Item = PrivateType;  //~ ERROR private type in exported type signature\n+}\n+\n+// OK\n+impl PublicTrait for PrivateType {\n+    type Item = PrivateType;\n+}\n+\n+// OK\n+impl PrivateTrait for PublicType {\n+    type Item = PrivateType;\n+}\n+\n+// OK\n+impl PrivateTrait for PrivateType {\n+    type Item = PrivateType;\n+}\n+\n+fn main() {}"}]}