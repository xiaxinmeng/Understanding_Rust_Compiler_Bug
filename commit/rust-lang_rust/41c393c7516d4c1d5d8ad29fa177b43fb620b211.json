{"sha": "41c393c7516d4c1d5d8ad29fa177b43fb620b211", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxYzM5M2M3NTE2ZDRjMWQ1ZDhhZDI5ZmExNzdiNDNmYjYyMGIyMTE=", "commit": {"author": {"name": "Ingvar Stepanyan", "email": "me@rreverser.com", "date": "2018-01-28T19:08:09Z"}, "committer": {"name": "Ingvar Stepanyan", "email": "me@rreverser.com", "date": "2018-02-04T11:53:10Z"}, "message": "Keep delimiter as part of macro args list", "tree": {"sha": "64f96a96a9397c82ec102d696a6fd810fcf57cdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64f96a96a9397c82ec102d696a6fd810fcf57cdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41c393c7516d4c1d5d8ad29fa177b43fb620b211", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41c393c7516d4c1d5d8ad29fa177b43fb620b211", "html_url": "https://github.com/rust-lang/rust/commit/41c393c7516d4c1d5d8ad29fa177b43fb620b211", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41c393c7516d4c1d5d8ad29fa177b43fb620b211/comments", "author": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fef3e03d3eec5057943fe9773463e1f7b408dac2", "url": "https://api.github.com/repos/rust-lang/rust/commits/fef3e03d3eec5057943fe9773463e1f7b408dac2", "html_url": "https://github.com/rust-lang/rust/commit/fef3e03d3eec5057943fe9773463e1f7b408dac2"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "10f03e95c2f467c61360edbf30e84347b5316126", "filename": "src/macros.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41c393c7516d4c1d5d8ad29fa177b43fb620b211/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c393c7516d4c1d5d8ad29fa177b43fb620b211/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=41c393c7516d4c1d5d8ad29fa177b43fb620b211", "patch": "@@ -324,7 +324,7 @@ pub fn rewrite_macro_def(\n             return snippet;\n         }\n \n-        let args = format!(\"({})\", format_macro_args(branch.args)?);\n+        let args = format_macro_args(branch.args)?;\n \n         if multi_branch_style {\n             result += \"\\n\";\n@@ -758,10 +758,12 @@ impl MacroParser {\n \n     // `(` ... `)` `=>` `{` ... `}`\n     fn parse_branch(&mut self) -> Option<MacroBranch> {\n-        let (args_paren_kind, args) = match self.toks.next()? {\n+        let tok = self.toks.next()?;\n+        let args_paren_kind = match tok {\n             TokenTree::Token(..) => return None,\n-            TokenTree::Delimited(_, ref d) => (d.delim, d.tts.clone()),\n+            TokenTree::Delimited(_, ref d) => d.delim,\n         };\n+        let args = tok.joint().into();\n         match self.toks.next()? {\n             TokenTree::Token(_, Token::FatArrow) => {}\n             _ => return None,"}]}