{"sha": "bf3be09ee800de4ec98dfeea5088639e1c538813", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmM2JlMDllZTgwMGRlNGVjOThkZmVlYTUwODg2MzllMWM1Mzg4MTM=", "commit": {"author": {"name": "J. Ryan Stinnett", "email": "jryans@gmail.com", "date": "2020-11-12T03:40:15Z"}, "committer": {"name": "J. Ryan Stinnett", "email": "jryans@gmail.com", "date": "2020-11-12T03:40:15Z"}, "message": "Fix timeout conversion", "tree": {"sha": "5c313045e58dae9a0a993f6cb06b492ba90ef663", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c313045e58dae9a0a993f6cb06b492ba90ef663"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf3be09ee800de4ec98dfeea5088639e1c538813", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf3be09ee800de4ec98dfeea5088639e1c538813", "html_url": "https://github.com/rust-lang/rust/commit/bf3be09ee800de4ec98dfeea5088639e1c538813", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf3be09ee800de4ec98dfeea5088639e1c538813/comments", "author": {"login": "jryans", "id": 279572, "node_id": "MDQ6VXNlcjI3OTU3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/279572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jryans", "html_url": "https://github.com/jryans", "followers_url": "https://api.github.com/users/jryans/followers", "following_url": "https://api.github.com/users/jryans/following{/other_user}", "gists_url": "https://api.github.com/users/jryans/gists{/gist_id}", "starred_url": "https://api.github.com/users/jryans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jryans/subscriptions", "organizations_url": "https://api.github.com/users/jryans/orgs", "repos_url": "https://api.github.com/users/jryans/repos", "events_url": "https://api.github.com/users/jryans/events{/privacy}", "received_events_url": "https://api.github.com/users/jryans/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jryans", "id": 279572, "node_id": "MDQ6VXNlcjI3OTU3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/279572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jryans", "html_url": "https://github.com/jryans", "followers_url": "https://api.github.com/users/jryans/followers", "following_url": "https://api.github.com/users/jryans/following{/other_user}", "gists_url": "https://api.github.com/users/jryans/gists{/gist_id}", "starred_url": "https://api.github.com/users/jryans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jryans/subscriptions", "organizations_url": "https://api.github.com/users/jryans/orgs", "repos_url": "https://api.github.com/users/jryans/repos", "events_url": "https://api.github.com/users/jryans/events{/privacy}", "received_events_url": "https://api.github.com/users/jryans/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "951576051bafe03cd6ea36707e4ed8b25355fb58", "url": "https://api.github.com/repos/rust-lang/rust/commits/951576051bafe03cd6ea36707e4ed8b25355fb58", "html_url": "https://github.com/rust-lang/rust/commit/951576051bafe03cd6ea36707e4ed8b25355fb58"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "42ddc1d514ec756e90ca526f879ff25fc0f81025", "filename": "library/std/src/sys/unix/futex.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf3be09ee800de4ec98dfeea5088639e1c538813/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf3be09ee800de4ec98dfeea5088639e1c538813/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs?ref=bf3be09ee800de4ec98dfeea5088639e1c538813", "patch": "@@ -42,14 +42,13 @@ pub fn futex_wait(futex: &AtomicI32, expected: i32, timeout: Option<Duration>) {\n         ) -> libc::c_int;\n     }\n \n-    let timeout_ms = timeout.map(|d| d.as_millis());\n     unsafe {\n         emscripten_futex_wait(\n             futex as *const AtomicI32,\n             // `val` is declared unsigned to match the Emscripten headers, but since it's used as\n             // an opaque value, we can ignore the meaning of signed vs. unsigned and cast here.\n             expected as libc::c_uint,\n-            timeout_ms.map_or(crate::f64::INFINITY, |d| d as libc::c_double),\n+            timeout.map_or(crate::f64::INFINITY, |d| d.as_secs_f64() * 1000.0),\n         );\n     }\n }"}]}