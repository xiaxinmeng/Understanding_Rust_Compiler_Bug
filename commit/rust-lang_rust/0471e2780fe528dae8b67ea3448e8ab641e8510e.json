{"sha": "0471e2780fe528dae8b67ea3448e8ab641e8510e", "node_id": "C_kwDOAAsO6NoAKDA0NzFlMjc4MGZlNTI4ZGFlOGI2N2VhMzQ0OGU4YWI2NDFlODUxMGU", "commit": {"author": {"name": "Yiming Lei", "email": "yiming.lei@futurewei.com", "date": "2022-08-09T18:27:04Z"}, "committer": {"name": "Yiming Lei", "email": "yiming.lei@futurewei.com", "date": "2022-08-15T20:31:14Z"}, "message": "when there are 3 or more return statements in the loop\nemit the first 3 errors and duplicated diagnostic information\nusing take of iterator for the first third return\n\tmodified:   compiler/rustc_typeck/src/check/coercion.rs\n\tnew file:   src/test/ui/typeck/issue-100285.rs\n\tnew file:   src/test/ui/typeck/issue-100285.stderr", "tree": {"sha": "f466caa13f7b78fc8728e91e03d1538f7b4466da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f466caa13f7b78fc8728e91e03d1538f7b4466da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0471e2780fe528dae8b67ea3448e8ab641e8510e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0471e2780fe528dae8b67ea3448e8ab641e8510e", "html_url": "https://github.com/rust-lang/rust/commit/0471e2780fe528dae8b67ea3448e8ab641e8510e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0471e2780fe528dae8b67ea3448e8ab641e8510e/comments", "author": null, "committer": null, "parents": [{"sha": "6d3f1beae1720055e5a30f4dbe7a9e7fb810c65e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d3f1beae1720055e5a30f4dbe7a9e7fb810c65e", "html_url": "https://github.com/rust-lang/rust/commit/6d3f1beae1720055e5a30f4dbe7a9e7fb810c65e"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "cc400e1ed75c740beedf78b3e4be9c821870dac9", "filename": "compiler/rustc_typeck/src/check/coercion.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0471e2780fe528dae8b67ea3448e8ab641e8510e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0471e2780fe528dae8b67ea3448e8ab641e8510e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs?ref=0471e2780fe528dae8b67ea3448e8ab641e8510e", "patch": "@@ -1590,7 +1590,9 @@ impl<'tcx, 'exprs, E: AsCoercionSite> CoerceMany<'tcx, 'exprs, E> {\n         let hir::ExprKind::Loop(_, _, _, loop_span) = expr.kind else { return;};\n         let mut span: MultiSpan = vec![loop_span].into();\n         span.push_span_label(loop_span, \"this might have zero elements to iterate on\");\n-        for ret_expr in ret_exprs {\n+        const MAXITER: usize = 3;\n+        let iter = ret_exprs.iter().take(MAXITER);\n+        for ret_expr in iter {\n             span.push_span_label(\n                 ret_expr.span,\n                 \"if the loop doesn't execute, this value would never get returned\",\n@@ -1600,6 +1602,12 @@ impl<'tcx, 'exprs, E: AsCoercionSite> CoerceMany<'tcx, 'exprs, E> {\n             span,\n             \"the function expects a value to always be returned, but loops might run zero times\",\n         );\n+        if MAXITER < ret_exprs.len() {\n+            err.note(&format!(\n+                \"if the loop doesn't execute, {} other values would never get returned\",\n+                ret_exprs.len() - MAXITER\n+            ));\n+        }\n         err.help(\n             \"return a value for the case when the loop has zero elements to iterate on, or \\\n            consider changing the return type to account for that possibility\","}, {"sha": "e206469b85f55d54867b43424b70997e3db278d2", "filename": "src/test/ui/typeck/issue-100285.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0471e2780fe528dae8b67ea3448e8ab641e8510e/src%2Ftest%2Fui%2Ftypeck%2Fissue-100285.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0471e2780fe528dae8b67ea3448e8ab641e8510e/src%2Ftest%2Fui%2Ftypeck%2Fissue-100285.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-100285.rs?ref=0471e2780fe528dae8b67ea3448e8ab641e8510e", "patch": "@@ -0,0 +1,22 @@\n+fn foo(n: i32) -> i32 {\n+    for i in 0..0 {\n+    //~^ ERROR: mismatched types [E0308]\n+       if n < 0 {\n+        return i;\n+        } else if n < 10 {\n+          return 1;\n+        } else if n < 20 {\n+          return 2;\n+        } else if n < 30 {\n+          return 3;\n+        } else if n < 40 {\n+          return 4;\n+        } else {\n+          return 5;\n+        }\n+\n+    }\n+    //~| help: return a value for the case when the loop has zero elements to iterate on, or consider changing the return type to account for that possibility\n+}\n+\n+fn main() {}"}, {"sha": "42c64b03918c503fe5cfa8952b00405c7e1b615b", "filename": "src/test/ui/typeck/issue-100285.stderr", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0471e2780fe528dae8b67ea3448e8ab641e8510e/src%2Ftest%2Fui%2Ftypeck%2Fissue-100285.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0471e2780fe528dae8b67ea3448e8ab641e8510e/src%2Ftest%2Fui%2Ftypeck%2Fissue-100285.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-100285.stderr?ref=0471e2780fe528dae8b67ea3448e8ab641e8510e", "patch": "@@ -0,0 +1,34 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-100285.rs:2:5\n+   |\n+LL |   fn foo(n: i32) -> i32 {\n+   |                     --- expected `i32` because of return type\n+LL | /     for i in 0..0 {\n+LL | |\n+LL | |        if n < 0 {\n+LL | |         return i;\n+...  |\n+LL | |\n+LL | |     }\n+   | |_____^ expected `i32`, found `()`\n+   |\n+note: the function expects a value to always be returned, but loops might run zero times\n+  --> $DIR/issue-100285.rs:2:5\n+   |\n+LL |     for i in 0..0 {\n+   |     ^^^^^^^^^^^^^ this might have zero elements to iterate on\n+...\n+LL |         return i;\n+   |         -------- if the loop doesn't execute, this value would never get returned\n+LL |         } else if n < 10 {\n+LL |           return 1;\n+   |           -------- if the loop doesn't execute, this value would never get returned\n+LL |         } else if n < 20 {\n+LL |           return 2;\n+   |           -------- if the loop doesn't execute, this value would never get returned\n+   = note: if the loop doesn't execute, 3 other values would never get returned\n+   = help: return a value for the case when the loop has zero elements to iterate on, or consider changing the return type to account for that possibility\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}