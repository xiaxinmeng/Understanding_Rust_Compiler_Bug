{"sha": "62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3", "node_id": "C_kwDOAAsO6NoAKDYyYTcxMmE4YmJiMjlhNWQyZjRlODJiNzRkMWVlNWFhMDQ5MGE1YTM", "commit": {"author": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2023-05-27T20:19:09Z"}, "committer": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2023-06-13T13:48:55Z"}, "message": "Hide suggestion to wrap function in unsafe block", "tree": {"sha": "c8e5267b5a1e3752544164a20b15ff3d7d67d5b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8e5267b5a1e3752544164a20b15ff3d7d67d5b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIYEABYIAC4WIQSil6aeYAADwGp0ncHG9XSMbdFgewUCZIhzyRAcZ2l0QG5lbW8x\nNTcuY29tAAoJEMb1dIxt0WB7Zf0A+gJAuXTnfLRGWNnMgBc/1mD7ezHLI5iQ5jp1\nB4FIXFj/AQD7xtsVT/Bja5UCPpdMQO51BcN6sNgHO/XnzsyTyJirBw==\n=5KaR\n-----END PGP SIGNATURE-----", "payload": "tree c8e5267b5a1e3752544164a20b15ff3d7d67d5b3\nparent aca61b2c07f2f7b644ca000385473af9de2d5f77\nauthor Wim Looman <git@nemo157.com> 1685218749 +0200\ncommitter Wim Looman <git@nemo157.com> 1686664135 +0200\n\nHide suggestion to wrap function in unsafe block\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3", "html_url": "https://github.com/rust-lang/rust/commit/62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3/comments", "author": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aca61b2c07f2f7b644ca000385473af9de2d5f77", "url": "https://api.github.com/repos/rust-lang/rust/commits/aca61b2c07f2f7b644ca000385473af9de2d5f77", "html_url": "https://github.com/rust-lang/rust/commit/aca61b2c07f2f7b644ca000385473af9de2d5f77"}], "stats": {"total": 39, "additions": 1, "deletions": 38}, "files": [{"sha": "6570da51bcc6ffcb16b36d5d8d4b50b708c93913", "filename": "compiler/rustc_mir_transform/src/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3/compiler%2Frustc_mir_transform%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3/compiler%2Frustc_mir_transform%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Ferrors.rs?ref=62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3", "patch": "@@ -147,7 +147,7 @@ impl<'a> DecorateLint<'a, ()> for UnsafeOpInUnsafeFn {\n         diag.note(self.details.note());\n \n         if let Some((start, end)) = self.suggest_unsafe_block {\n-            diag.multipart_suggestion_verbose(\n+            diag.tool_only_multipart_suggestion(\n                 crate::fluent_generated::mir_transform_suggestion,\n                 vec![(start, \" unsafe {\".into()), (end, \"}\".into())],\n                 Applicability::MaybeIncorrect,"}, {"sha": "6f005fe895848ff4e1124733ee09e26fa5b40274", "filename": "tests/ui/unsafe/rfc-2585-unsafe_op_in_unsafe_fn.mir.stderr", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3/tests%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3/tests%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.mir.stderr?ref=62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3", "patch": "@@ -10,14 +10,6 @@ note: the lint level is defined here\n    |\n LL | #![deny(unsafe_op_in_unsafe_fn)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n-help: consider wrapping the function body in an unsafe block\n-   |\n-LL ~ unsafe fn deny_level() { unsafe {\n-LL |     unsf();\n- ...\n-LL |\n-LL ~ }}\n-   |\n \n error: dereference of raw pointer is unsafe and requires unsafe block (error E0133)\n   --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:15:5\n@@ -60,14 +52,6 @@ note: the lint level is defined here\n LL | #[deny(warnings)]\n    |        ^^^^^^^^\n    = note: `#[deny(unsafe_op_in_unsafe_fn)]` implied by `#[deny(warnings)]`\n-help: consider wrapping the function body in an unsafe block\n-   |\n-LL ~ unsafe fn warning_level() { unsafe {\n-LL |     unsf();\n- ...\n-LL |\n-LL ~ }}\n-   |\n \n error: dereference of raw pointer is unsafe and requires unsafe block (error E0133)\n   --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:31:5"}, {"sha": "b22c5b74b5610def06ec89c3c8f31083bf13e741", "filename": "tests/ui/unsafe/wrapping-unsafe-block-sugg.stderr", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3/tests%2Fui%2Funsafe%2Fwrapping-unsafe-block-sugg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3/tests%2Fui%2Funsafe%2Fwrapping-unsafe-block-sugg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe%2Fwrapping-unsafe-block-sugg.stderr?ref=62a712a8bbb29a5d2f4e82b74d1ee5aa0490a5a3", "patch": "@@ -10,13 +10,6 @@ note: the lint level is defined here\n    |\n LL | #![deny(unsafe_op_in_unsafe_fn)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n-help: consider wrapping the function body in an unsafe block\n-   |\n-LL ~ pub unsafe fn foo() { unsafe {\n-LL |     unsf();\n-LL |     unsf();\n-LL ~ }}\n-   |\n \n error: call to unsafe function is unsafe and requires unsafe block (error E0133)\n   --> $DIR/wrapping-unsafe-block-sugg.rs:9:5\n@@ -33,13 +26,6 @@ LL |     let y = *x;\n    |             ^^ dereference of raw pointer\n    |\n    = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n-help: consider wrapping the function body in an unsafe block\n-   |\n-LL ~ pub unsafe fn bar(x: *const i32) -> i32 { unsafe {\n-LL |     let y = *x;\n-LL |     y + *x\n-LL ~ }}\n-   |\n \n error: dereference of raw pointer is unsafe and requires unsafe block (error E0133)\n   --> $DIR/wrapping-unsafe-block-sugg.rs:14:9\n@@ -56,13 +42,6 @@ LL |     let y = BAZ;\n    |             ^^^ use of mutable static\n    |\n    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n-help: consider wrapping the function body in an unsafe block\n-   |\n-LL ~ pub unsafe fn baz() -> i32 { unsafe {\n-LL |     let y = BAZ;\n-LL |     y + BAZ\n-LL ~ }}\n-   |\n \n error: use of mutable static is unsafe and requires unsafe block (error E0133)\n   --> $DIR/wrapping-unsafe-block-sugg.rs:20:9"}]}