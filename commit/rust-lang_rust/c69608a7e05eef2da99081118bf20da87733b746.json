{"sha": "c69608a7e05eef2da99081118bf20da87733b746", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2OTYwOGE3ZTA1ZWVmMmRhOTkwODExMThiZjIwZGE4NzczM2I3NDY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-25T06:47:50Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-25T06:50:46Z"}, "message": "Allow the last elem in chain to overflow", "tree": {"sha": "4b09931f60c585f09ab04b444d9d5ae366b993b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b09931f60c585f09ab04b444d9d5ae366b993b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c69608a7e05eef2da99081118bf20da87733b746", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c69608a7e05eef2da99081118bf20da87733b746", "html_url": "https://github.com/rust-lang/rust/commit/c69608a7e05eef2da99081118bf20da87733b746", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c69608a7e05eef2da99081118bf20da87733b746/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d6e385f098930a572fd6ddfae972f2ada076002", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d6e385f098930a572fd6ddfae972f2ada076002", "html_url": "https://github.com/rust-lang/rust/commit/4d6e385f098930a572fd6ddfae972f2ada076002"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "e5450aa687e46e4666ea73ac0fa97f07324c41f7", "filename": "src/chains.rs", "status": "modified", "additions": 45, "deletions": 3, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/c69608a7e05eef2da99081118bf20da87733b746/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c69608a7e05eef2da99081118bf20da87733b746/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=c69608a7e05eef2da99081118bf20da87733b746", "patch": "@@ -83,6 +83,7 @@ use expr::rewrite_call;\n use config::IndentStyle;\n use macros::convert_try_mac;\n \n+use std::cmp::min;\n use std::iter;\n use syntax::{ast, ptr};\n use syntax::codemap::{mk_sp, Span};\n@@ -173,14 +174,15 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n                                     .collect::<Option<Vec<_>>>());\n \n     // Total of all items excluding the last.\n-    let almost_total = rewrites[..rewrites.len() - (1 + trailing_try_num)]\n+    let last_non_try_index = rewrites.len() - (1 + trailing_try_num);\n+    let almost_total = rewrites[..last_non_try_index]\n         .iter()\n         .fold(0, |a, b| a + first_line_width(b)) + parent_rewrite.len();\n     let one_line_len = rewrites.iter().fold(0, |a, r| a + first_line_width(r)) +\n                        parent_rewrite.len();\n \n-    let veto_single_line = if one_line_len > context.config.chain_one_line_max() ||\n-                              one_line_len > shape.width {\n+    let one_line_budget = min(shape.width, context.config.chain_one_line_max());\n+    let veto_single_line = if one_line_len > one_line_budget {\n         if rewrites.len() > 1 {\n             true\n         } else if rewrites.len() == 1 {\n@@ -227,6 +229,25 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n         }\n     }\n \n+    // Try overflowing the last element if we are using block indent.\n+    if !fits_single_line && context.config.fn_call_style() == IndentStyle::Block {\n+        let (init, last) = rewrites.split_at_mut(last_non_try_index);\n+        let almost_single_line = init.iter().all(|s| !s.contains('\\n'));\n+        if almost_single_line {\n+            let overflow_shape = Shape {\n+                width: one_line_budget,\n+                ..parent_shape\n+            };\n+            fits_single_line = rewrite_last_child_with_overflow(context,\n+                                                                &subexpr_list[trailing_try_num],\n+                                                                overflow_shape,\n+                                                                total_span,\n+                                                                almost_total,\n+                                                                one_line_budget,\n+                                                                &mut last[0]);\n+        }\n+    }\n+\n     let connector = if fits_single_line && !parent_rewrite_contains_newline {\n         // Yay, we can put everything on one line.\n         String::new()\n@@ -266,6 +287,27 @@ fn chain_only_try(exprs: &[ast::Expr]) -> bool {\n                      })\n }\n \n+// Try to rewrite and replace the last non-try child. Return `true` if\n+// replacing succeeds.\n+fn rewrite_last_child_with_overflow(context: &RewriteContext,\n+                                    expr: &ast::Expr,\n+                                    shape: Shape,\n+                                    span: Span,\n+                                    almost_total: usize,\n+                                    one_line_budget: usize,\n+                                    last_child: &mut String)\n+                                    -> bool {\n+    if let Some(shape) = shape.shrink_left(almost_total) {\n+        if let Some(ref mut rw) = rewrite_chain_subexpr(expr, span, context, shape) {\n+            if almost_total + first_line_width(rw) <= one_line_budget {\n+                ::std::mem::swap(last_child, rw);\n+                return true;\n+            }\n+        }\n+    }\n+    false\n+}\n+\n pub fn rewrite_try(expr: &ast::Expr,\n                    try_count: usize,\n                    context: &RewriteContext,"}, {"sha": "c4fa4aa5f4c97f688fd090bee9c09731c797b45d", "filename": "tests/source/configs-fn_call_style-block.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c69608a7e05eef2da99081118bf20da87733b746/tests%2Fsource%2Fconfigs-fn_call_style-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c69608a7e05eef2da99081118bf20da87733b746/tests%2Fsource%2Fconfigs-fn_call_style-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_call_style-block.rs?ref=c69608a7e05eef2da99081118bf20da87733b746", "patch": "@@ -5,6 +5,9 @@ fn main() {\n     lorem(\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\");\n     // #1501\n     let hyper = Arc::new(Client::with_connector(HttpsConnector::new(TlsClient::new())));\n+\n+    // chain\n+    let x = yooooooooooooo.fooooooooooooooo.baaaaaaaaaaaaar(hello, world);\n }\n \n // #1521"}, {"sha": "2b2dbef7c616a30bc16261e838ef1b36aabd331d", "filename": "tests/target/configs-fn_call_style-block.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c69608a7e05eef2da99081118bf20da87733b746/tests%2Ftarget%2Fconfigs-fn_call_style-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c69608a7e05eef2da99081118bf20da87733b746/tests%2Ftarget%2Fconfigs-fn_call_style-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_style-block.rs?ref=c69608a7e05eef2da99081118bf20da87733b746", "patch": "@@ -16,6 +16,12 @@ fn main() {\n     let hyper = Arc::new(Client::with_connector(\n         HttpsConnector::new(TlsClient::new()),\n     ));\n+\n+    // chain\n+    let x = yooooooooooooo.fooooooooooooooo.baaaaaaaaaaaaar(\n+        hello,\n+        world,\n+    );\n }\n \n // #1521"}]}