{"sha": "5a36b0dba1d7a350bba04b1abf256f057b3d1079", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMzZiMGRiYTFkN2EzNTBiYmEwNGIxYWJmMjU2ZjA1N2IzZDEwNzk=", "commit": {"author": {"name": "ksqsf", "email": "i@ksqsf.moe", "date": "2019-07-31T17:09:07Z"}, "committer": {"name": "ksqsf", "email": "i@ksqsf.moe", "date": "2019-07-31T17:09:07Z"}, "message": "Make these methods public", "tree": {"sha": "2c541f8f5e0b92f25cee23a85b1291e485c680b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c541f8f5e0b92f25cee23a85b1291e485c680b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a36b0dba1d7a350bba04b1abf256f057b3d1079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a36b0dba1d7a350bba04b1abf256f057b3d1079", "html_url": "https://github.com/rust-lang/rust/commit/5a36b0dba1d7a350bba04b1abf256f057b3d1079", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a36b0dba1d7a350bba04b1abf256f057b3d1079/comments", "author": {"login": "ksqsf", "id": 23358293, "node_id": "MDQ6VXNlcjIzMzU4Mjkz", "avatar_url": "https://avatars.githubusercontent.com/u/23358293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ksqsf", "html_url": "https://github.com/ksqsf", "followers_url": "https://api.github.com/users/ksqsf/followers", "following_url": "https://api.github.com/users/ksqsf/following{/other_user}", "gists_url": "https://api.github.com/users/ksqsf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ksqsf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ksqsf/subscriptions", "organizations_url": "https://api.github.com/users/ksqsf/orgs", "repos_url": "https://api.github.com/users/ksqsf/repos", "events_url": "https://api.github.com/users/ksqsf/events{/privacy}", "received_events_url": "https://api.github.com/users/ksqsf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ksqsf", "id": 23358293, "node_id": "MDQ6VXNlcjIzMzU4Mjkz", "avatar_url": "https://avatars.githubusercontent.com/u/23358293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ksqsf", "html_url": "https://github.com/ksqsf", "followers_url": "https://api.github.com/users/ksqsf/followers", "following_url": "https://api.github.com/users/ksqsf/following{/other_user}", "gists_url": "https://api.github.com/users/ksqsf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ksqsf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ksqsf/subscriptions", "organizations_url": "https://api.github.com/users/ksqsf/orgs", "repos_url": "https://api.github.com/users/ksqsf/repos", "events_url": "https://api.github.com/users/ksqsf/events{/privacy}", "received_events_url": "https://api.github.com/users/ksqsf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c784720f3a2d0b66142da3c9a9fd6039f5d3a036", "url": "https://api.github.com/repos/rust-lang/rust/commits/c784720f3a2d0b66142da3c9a9fd6039f5d3a036", "html_url": "https://github.com/rust-lang/rust/commit/c784720f3a2d0b66142da3c9a9fd6039f5d3a036"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "77cb447b95460c8e1bc53ad83cd9c74e8ede6a3c", "filename": "src/libcore/result.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5a36b0dba1d7a350bba04b1abf256f057b3d1079/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a36b0dba1d7a350bba04b1abf256f057b3d1079/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=5a36b0dba1d7a350bba04b1abf256f057b3d1079", "patch": "@@ -835,7 +835,7 @@ impl<T: Copy, E> Result<&T, E> {\n     /// assert_eq!(copied, Ok(12));\n     /// ```\n     #[unstable(feature = \"result_copied\", reason = \"newly added\", issue = \"63168\")]\n-    fn copied(self) -> Result<T, E> {\n+    pub fn copied(self) -> Result<T, E> {\n         self.map(|&t| t)\n     }\n }\n@@ -855,7 +855,7 @@ impl<T: Copy, E> Result<&mut T, E> {\n     /// assert_eq!(copied, Ok(12));\n     /// ```\n     #[unstable(feature = \"result_copied\", reason = \"newly added\", issue = \"63168\")]\n-    fn copied(self) -> Result<T, E> {\n+    pub fn copied(self) -> Result<T, E> {\n         self.map(|&mut t| t)\n     }\n }\n@@ -875,7 +875,7 @@ impl<T, E: Copy> Result<T, &E> {\n     /// assert_eq!(copied, Err(12));\n     /// ```\n     #[unstable(feature = \"result_copied\", reason = \"newly added\", issue = \"63168\")]\n-    fn copied_err(self) -> Result<T, E> {\n+    pub fn copied_err(self) -> Result<T, E> {\n         self.map_err(|&e| e)\n     }\n }\n@@ -895,7 +895,7 @@ impl<T, E: Copy> Result<T, &mut E> {\n     /// assert_eq!(cloned, Err(12));\n     /// ```\n     #[unstable(feature = \"result_copied\", reason = \"newly added\", issue = \"63168\")]\n-    fn copied_err(self) -> Result<T, E> {\n+    pub fn copied_err(self) -> Result<T, E> {\n         self.map_err(|&mut e| e)\n     }\n }\n@@ -915,7 +915,7 @@ impl<T: Clone, E> Result<&T, E> {\n     /// assert_eq!(cloned, Ok(12));\n     /// ```\n     #[unstable(feature = \"result_cloned\", reason = \"newly added\", issue = \"63168\")]\n-    fn cloned(self) -> Result<T, E> {\n+    pub fn cloned(self) -> Result<T, E> {\n         self.map(|t| t.clone())\n     }\n }\n@@ -935,7 +935,7 @@ impl<T: Clone, E> Result<&mut T, E> {\n     /// assert_eq!(cloned, Ok(12));\n     /// ```\n     #[unstable(feature = \"result_cloned\", reason = \"newly added\", issue = \"63168\")]\n-    fn cloned(self) -> Result<T, E> {\n+    pub fn cloned(self) -> Result<T, E> {\n         self.map(|t| t.clone())\n     }\n }\n@@ -955,7 +955,7 @@ impl<T, E: Clone> Result<T, &E> {\n     /// assert_eq!(cloned, Err(12));\n     /// ```\n     #[unstable(feature = \"result_cloned\", reason = \"newly added\", issue = \"63168\")]\n-    fn cloned_err(self) -> Result<T, E> {\n+    pub fn cloned_err(self) -> Result<T, E> {\n         self.map_err(|e| e.clone())\n     }\n }\n@@ -975,7 +975,7 @@ impl<T, E: Clone> Result<T, &mut E> {\n     /// assert_eq!(cloned, Err(12));\n     /// ```\n     #[unstable(feature = \"result_cloned\", reason = \"newly added\", issue = \"63168\")]\n-    fn cloned_err(self) -> Result<T, E> {\n+    pub fn cloned_err(self) -> Result<T, E> {\n         self.map_err(|e| e.clone())\n     }\n }"}]}