{"sha": "c4ca49aebd3a25c080cdc8efa64586637b90c90b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0Y2E0OWFlYmQzYTI1YzA4MGNkYzhlZmE2NDU4NjYzN2I5MGM5MGI=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-10T23:21:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-10T23:21:21Z"}, "message": "Rollup merge of #55819 - pnkfelix:issue-55810-must-typeck-pats-eagerly, r=oli-obk\n\nTypecheck patterns of all match arms first, so we get types for bindings\n\nFix eventually (after backport to beta) the issue #55810", "tree": {"sha": "e569477a420f0ea2e8e0fe1f94b57f73df77eb72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e569477a420f0ea2e8e0fe1f94b57f73df77eb72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4ca49aebd3a25c080cdc8efa64586637b90c90b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb52fxCRBK7hj4Ov3rIwAAdHIIAEhMBhl93k+Cad+PV6MOEsw1\n3s8ICCmOwpCDKGNGPvLVXH7LD6XDpOrKgBNQ819xmd8VhssvMmeHJc5XK9cYSFIh\nPKtptosM2lfsetVW3g99IguHHLRhUM2Wt92Qe5rF0PfKkE9fpKvTAeWpuLlal0x5\ngKUmSZjbGHLWvv5rHHTNIR3GNewkFSk9xZPhEdmA3s4cKTf8Gcj43OFx60mMUeo7\n3drj8D5RHLUmMOH6juVrwvPJwPLjVUljhb25Aav0mqIRN1KXPva+bkcnVVL3U3gC\n8aaNwKEaKdJUsZPqmkiYNpMVJfdOWvP5pDOevv8baVasbfl5AFKClYgALqcy9Pc=\n=OOq7\n-----END PGP SIGNATURE-----\n", "payload": "tree e569477a420f0ea2e8e0fe1f94b57f73df77eb72\nparent e8a3934599bbb2dbd285c6259cac71f70c1ec3e6\nparent 5f91373c778da7d28306d0faba590a22612c281b\nauthor Pietro Albini <pietro@pietroalbini.org> 1541892081 +0100\ncommitter GitHub <noreply@github.com> 1541892081 +0100\n\nRollup merge of #55819 - pnkfelix:issue-55810-must-typeck-pats-eagerly, r=oli-obk\n\nTypecheck patterns of all match arms first, so we get types for bindings\n\nFix eventually (after backport to beta) the issue #55810\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4ca49aebd3a25c080cdc8efa64586637b90c90b", "html_url": "https://github.com/rust-lang/rust/commit/c4ca49aebd3a25c080cdc8efa64586637b90c90b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4ca49aebd3a25c080cdc8efa64586637b90c90b/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8a3934599bbb2dbd285c6259cac71f70c1ec3e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6", "html_url": "https://github.com/rust-lang/rust/commit/e8a3934599bbb2dbd285c6259cac71f70c1ec3e6"}, {"sha": "5f91373c778da7d28306d0faba590a22612c281b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f91373c778da7d28306d0faba590a22612c281b", "html_url": "https://github.com/rust-lang/rust/commit/5f91373c778da7d28306d0faba590a22612c281b"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "a477df6ae2d568e4d296876c7a9fd0c91a442612", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c4ca49aebd3a25c080cdc8efa64586637b90c90b/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4ca49aebd3a25c080cdc8efa64586637b90c90b/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=c4ca49aebd3a25c080cdc8efa64586637b90c90b", "patch": "@@ -626,9 +626,9 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n         let discrim_diverges = self.diverges.get();\n         self.diverges.set(Diverges::Maybe);\n \n-        // Typecheck the patterns first, so that we get types for all the\n-        // bindings.\n-        let all_arm_pats_diverge = arms.iter().map(|arm| {\n+        // rust-lang/rust#55810: Typecheck patterns first (via eager\n+        // collection into `Vec`), so we get types for all bindings.\n+        let all_arm_pats_diverge: Vec<_> = arms.iter().map(|arm| {\n             let mut all_pats_diverge = Diverges::WarnedAlways;\n             for p in &arm.pats {\n                 self.diverges.set(Diverges::Maybe);\n@@ -644,7 +644,7 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                 Diverges::Maybe => Diverges::Maybe,\n                 Diverges::Always | Diverges::WarnedAlways => Diverges::WarnedAlways,\n             }\n-        });\n+        }).collect();\n \n         // Now typecheck the blocks.\n         //"}, {"sha": "9eed80ad886e0c876a3d14e08031382e7404dec3", "filename": "src/test/ui/typeck/issue-55810-must-typeck-match-pats-before-guards.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c4ca49aebd3a25c080cdc8efa64586637b90c90b/src%2Ftest%2Fui%2Ftypeck%2Fissue-55810-must-typeck-match-pats-before-guards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4ca49aebd3a25c080cdc8efa64586637b90c90b/src%2Ftest%2Fui%2Ftypeck%2Fissue-55810-must-typeck-match-pats-before-guards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-55810-must-typeck-match-pats-before-guards.rs?ref=c4ca49aebd3a25c080cdc8efa64586637b90c90b", "patch": "@@ -0,0 +1,23 @@\n+// compile-pass\n+\n+// rust-lang/rust#55810: types for a binding in a match arm can be\n+// inferred from arms that come later in the match.\n+\n+struct S;\n+\n+impl S {\n+    fn method(&self) -> bool {\n+        unimplemented!()\n+    }\n+}\n+\n+fn get<T>() -> T {\n+    unimplemented!()\n+}\n+\n+fn main() {\n+    match get() {\n+        x if x.method() => {}\n+        &S => {}\n+    }\n+}"}]}