{"sha": "b45f21d38e7e127d257c6299b9da00fdc57476b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0NWYyMWQzOGU3ZTEyN2QyNTdjNjI5OWI5ZGEwMGZkYzU3NDc2Yjk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-30T01:50:47Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-30T01:50:47Z"}, "message": "move UnstableFeatures -> rustc_feature", "tree": {"sha": "a7aac4b045a399f96f3d9c5d7d86b97d72a78138", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7aac4b045a399f96f3d9c5d7d86b97d72a78138"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b45f21d38e7e127d257c6299b9da00fdc57476b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b45f21d38e7e127d257c6299b9da00fdc57476b9", "html_url": "https://github.com/rust-lang/rust/commit/b45f21d38e7e127d257c6299b9da00fdc57476b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b45f21d38e7e127d257c6299b9da00fdc57476b9/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db89679ebce6ed3b9bcb3f5cea430084b40a3a1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/db89679ebce6ed3b9bcb3f5cea430084b40a3a1f", "html_url": "https://github.com/rust-lang/rust/commit/db89679ebce6ed3b9bcb3f5cea430084b40a3a1f"}], "stats": {"total": 107, "additions": 52, "deletions": 55}, "files": [{"sha": "fbfae721bbe91e218b0434aaf115564805bb992d", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -7,6 +7,7 @@ use crate::session::{early_error, early_warn, Session};\n use crate::session::search_paths::SearchPath;\n \n use rustc_data_structures::fx::FxHashSet;\n+use rustc_feature::UnstableFeatures;\n \n use rustc_target::spec::{LinkerFlavor, MergeFunctions, PanicStrategy, RelroLevel};\n use rustc_target::spec::{Target, TargetTriple};\n@@ -16,7 +17,6 @@ use syntax::ast;\n use syntax::source_map::{FileName, FilePathMapping};\n use syntax::edition::{Edition, EDITION_NAME_LIST, DEFAULT_EDITION};\n use syntax::symbol::{sym, Symbol};\n-use syntax::feature_gate::UnstableFeatures;\n \n use errors::emitter::HumanReadableErrorType;\n use errors::{ColorConfig, FatalError, Handler};\n@@ -2701,7 +2701,7 @@ pub fn parse_crate_types_from_list(list_list: Vec<String>) -> Result<Vec<CrateTy\n \n pub mod nightly_options {\n     use getopts;\n-    use syntax::feature_gate::UnstableFeatures;\n+    use rustc_feature::UnstableFeatures;\n     use super::{ErrorOutputType, OptionStability, RustcOptGroup};\n     use crate::session::early_error;\n \n@@ -2850,9 +2850,9 @@ mod dep_tracking {\n     use super::{CrateType, DebugInfo, ErrorOutputType, OptLevel, OutputTypes,\n                 Passes, Sanitizer, LtoCli, LinkerPluginLto, SwitchWithOptPath,\n                 SymbolManglingVersion};\n+    use rustc_feature::UnstableFeatures;\n     use rustc_target::spec::{MergeFunctions, PanicStrategy, RelroLevel, TargetTriple};\n     use syntax::edition::Edition;\n-    use syntax::feature_gate::UnstableFeatures;\n \n     pub trait DepTrackingHash {\n         fn hash(&self, hasher: &mut DefaultHasher, error_format: ErrorOutputType);"}, {"sha": "acc221f0657c9470aad7f4f5c60240e651ad966e", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -30,6 +30,7 @@ extern crate libc;\n #[macro_use] extern crate rustc;\n extern crate rustc_target;\n #[macro_use] extern crate rustc_data_structures;\n+extern crate rustc_feature;\n extern crate rustc_index;\n extern crate rustc_incremental;\n extern crate rustc_codegen_utils;"}, {"sha": "7bff9e69dd52e3a4c55432c31a85776d23a1fb80", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -6,7 +6,7 @@ use rustc::session::config::PrintRequest;\n use rustc_target::spec::{MergeFunctions, PanicStrategy};\n use libc::c_int;\n use std::ffi::CString;\n-use syntax::feature_gate::UnstableFeatures;\n+use rustc_feature::UnstableFeatures;\n use syntax::symbol::sym;\n \n use std::str;"}, {"sha": "073e117f6db1d4b29c5221614835f4ef8dc1dad2", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -44,8 +44,7 @@ use errors::{PResult, registry::Registry};\n use rustc_interface::interface;\n use rustc_interface::util::get_codegen_sysroot;\n use rustc_data_structures::sync::SeqCst;\n-use rustc_feature::find_gated_cfg;\n-\n+use rustc_feature::{find_gated_cfg, UnstableFeatures};\n use rustc_serialize::json::ToJson;\n \n use std::borrow::Cow;\n@@ -62,8 +61,7 @@ use std::str;\n use std::time::Instant;\n \n use syntax::ast;\n-use syntax::source_map::FileLoader;\n-use syntax::feature_gate::UnstableFeatures;\n+use syntax_pos::source_map::FileLoader;\n use syntax_pos::symbol::sym;\n use syntax_pos::FileName;\n "}, {"sha": "e8ed1f377e569918f59fc993294d5723de825b5f", "filename": "src/librustc_feature/lib.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustc_feature%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustc_feature%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_feature%2Flib.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -65,6 +65,40 @@ pub enum Stability {\n     Deprecated(&'static str, Option<&'static str>),\n }\n \n+#[derive(Clone, Copy, Hash)]\n+pub enum UnstableFeatures {\n+    /// Hard errors for unstable features are active, as on beta/stable channels.\n+    Disallow,\n+    /// Allow features to be activated, as on nightly.\n+    Allow,\n+    /// Errors are bypassed for bootstrapping. This is required any time\n+    /// during the build that feature-related lints are set to warn or above\n+    /// because the build turns on warnings-as-errors and uses lots of unstable\n+    /// features. As a result, this is always required for building Rust itself.\n+    Cheat\n+}\n+\n+impl UnstableFeatures {\n+    pub fn from_environment() -> UnstableFeatures {\n+        // `true` if this is a feature-staged build, i.e., on the beta or stable channel.\n+        let disable_unstable_features = option_env!(\"CFG_DISABLE_UNSTABLE_FEATURES\").is_some();\n+        // `true` if we should enable unstable features for bootstrapping.\n+        let bootstrap = std::env::var(\"RUSTC_BOOTSTRAP\").is_ok();\n+        match (disable_unstable_features, bootstrap) {\n+            (_, true) => UnstableFeatures::Cheat,\n+            (true, _) => UnstableFeatures::Disallow,\n+            (false, _) => UnstableFeatures::Allow\n+        }\n+    }\n+\n+    pub fn is_nightly_build(&self) -> bool {\n+        match *self {\n+            UnstableFeatures::Allow | UnstableFeatures::Cheat => true,\n+            UnstableFeatures::Disallow => false,\n+        }\n+    }\n+}\n+\n pub use accepted::ACCEPTED_FEATURES;\n pub use active::{ACTIVE_FEATURES, Features, INCOMPLETE_FEATURES};\n pub use removed::{REMOVED_FEATURES, STABLE_REMOVED_FEATURES};"}, {"sha": "9e03896d980f37a9f37de072044c1d8f9e8c987d", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -12,12 +12,12 @@ use rustc::session::DiagnosticOutput;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_interface::interface;\n use rustc_driver::abort_on_err;\n+use rustc_feature::UnstableFeatures;\n use rustc_resolve as resolve;\n \n use syntax::ast::CRATE_NODE_ID;\n use syntax::source_map;\n use syntax::attr;\n-use syntax::feature_gate::UnstableFeatures;\n use errors::json::JsonEmitter;\n use syntax::symbol::sym;\n use syntax_pos::DUMMY_SP;"}, {"sha": "7945850ef08ac84cc69b5da597218893b52ff9dc", "filename": "src/librustdoc/externalfiles.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustdoc%2Fexternalfiles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustdoc%2Fexternalfiles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fexternalfiles.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -2,7 +2,7 @@ use std::fs;\n use std::path::Path;\n use std::str;\n use errors;\n-use crate::syntax::feature_gate::UnstableFeatures;\n+use rustc_feature::UnstableFeatures;\n use crate::syntax::edition::Edition;\n use crate::html::markdown::{IdMap, ErrorCodes, Markdown, Playground};\n "}, {"sha": "b5c1a77a3874209c585e19b8c60fc3fc58aaacfd", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -45,7 +45,6 @@ use errors;\n use serialize::json::{ToJson, Json, as_json};\n use syntax::ast;\n use syntax::edition::Edition;\n-use syntax::feature_gate::UnstableFeatures;\n use syntax::print::pprust;\n use syntax::source_map::FileName;\n use syntax::symbol::{Symbol, sym};\n@@ -56,6 +55,7 @@ use rustc::middle::stability;\n use rustc::hir;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_data_structures::flock;\n+use rustc_feature::UnstableFeatures;\n \n use crate::clean::{self, AttributesExt, Deprecation, GetDefId, SelfTy, Mutability};\n use crate::config::RenderOptions;"}, {"sha": "7dc3df23a6d16cd73d0335fb6f1765b354994d4a", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -6,7 +6,7 @@ use errors;\n use testing;\n use syntax::edition::Edition;\n use syntax::source_map::DUMMY_SP;\n-use syntax::feature_gate::UnstableFeatures;\n+use rustc_feature::UnstableFeatures;\n \n use crate::externalfiles::{LoadStringError, load_string};\n use crate::config::{Options, RenderOptions};"}, {"sha": "3c021ae7465236c195c15276ab4f93523bdac4be", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -5,10 +5,10 @@ use rustc::hir;\n use rustc::lint as lint;\n use rustc::ty;\n use rustc_resolve::ParentScope;\n+use rustc_feature::UnstableFeatures;\n use syntax;\n use syntax::ast::{self, Ident};\n use syntax_expand::base::SyntaxExtensionKind;\n-use syntax::feature_gate::UnstableFeatures;\n use syntax::symbol::Symbol;\n use syntax_pos::DUMMY_SP;\n "}, {"sha": "cf5fb06fa5698b6cb0f718fb4a697c14223115ca", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -1,4 +1,5 @@\n use rustc_data_structures::sync::Lrc;\n+use rustc_feature::UnstableFeatures;\n use rustc_interface::interface;\n use rustc_target::spec::TargetTriple;\n use rustc::hir;\n@@ -9,7 +10,6 @@ use syntax::ast;\n use syntax::with_globals;\n use syntax::source_map::SourceMap;\n use syntax::edition::Edition;\n-use syntax::feature_gate::UnstableFeatures;\n use std::env;\n use std::io::{self, Write};\n use std::panic;"}, {"sha": "141b324baa8eae3f3eaed99f69011846c6670b80", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 2, "deletions": 38, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -1,6 +1,6 @@\n-use rustc_feature::{ACCEPTED_FEATURES, ACTIVE_FEATURES, Features, Feature, State as FeatureState};\n-use rustc_feature::{REMOVED_FEATURES, STABLE_REMOVED_FEATURES};\n+use rustc_feature::{ACCEPTED_FEATURES, ACTIVE_FEATURES, REMOVED_FEATURES, STABLE_REMOVED_FEATURES};\n use rustc_feature::{AttributeGate, BUILTIN_ATTRIBUTE_MAP};\n+use rustc_feature::{Features, Feature, State as FeatureState, UnstableFeatures};\n \n use crate::ast::{self, AssocTyConstraint, AssocTyConstraintKind, NodeId};\n use crate::ast::{GenericParam, GenericParamKind, PatKind, RangeEnd, VariantData};\n@@ -18,8 +18,6 @@ use log::debug;\n \n use rustc_error_codes::*;\n \n-\n-use std::env;\n use std::num::NonZeroU32;\n \n macro_rules! gate_feature_fn {\n@@ -880,40 +878,6 @@ pub fn check_crate(krate: &ast::Crate,\n     visit::walk_crate(&mut visitor, krate);\n }\n \n-#[derive(Clone, Copy, Hash)]\n-pub enum UnstableFeatures {\n-    /// Hard errors for unstable features are active, as on beta/stable channels.\n-    Disallow,\n-    /// Allow features to be activated, as on nightly.\n-    Allow,\n-    /// Errors are bypassed for bootstrapping. This is required any time\n-    /// during the build that feature-related lints are set to warn or above\n-    /// because the build turns on warnings-as-errors and uses lots of unstable\n-    /// features. As a result, this is always required for building Rust itself.\n-    Cheat\n-}\n-\n-impl UnstableFeatures {\n-    pub fn from_environment() -> UnstableFeatures {\n-        // `true` if this is a feature-staged build, i.e., on the beta or stable channel.\n-        let disable_unstable_features = option_env!(\"CFG_DISABLE_UNSTABLE_FEATURES\").is_some();\n-        // `true` if we should enable unstable features for bootstrapping.\n-        let bootstrap = env::var(\"RUSTC_BOOTSTRAP\").is_ok();\n-        match (disable_unstable_features, bootstrap) {\n-            (_, true) => UnstableFeatures::Cheat,\n-            (true, _) => UnstableFeatures::Disallow,\n-            (false, _) => UnstableFeatures::Allow\n-        }\n-    }\n-\n-    pub fn is_nightly_build(&self) -> bool {\n-        match *self {\n-            UnstableFeatures::Allow | UnstableFeatures::Cheat => true,\n-            UnstableFeatures::Disallow => false,\n-        }\n-    }\n-}\n-\n fn maybe_stage_features(span_handler: &Handler, krate: &ast::Crate, unstable: UnstableFeatures) {\n     if !unstable.is_nightly_build() {\n         for attr in krate.attrs.iter().filter(|attr| attr.check_name(sym::feature)) {"}, {"sha": "c2d887c9267818356ed50e3b9f7fbf986bb7c868", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -96,7 +96,7 @@ pub mod feature_gate {\n     mod check;\n     pub use check::{\n         check_crate, check_attribute, get_features, feature_err, emit_feature_err,\n-        GateIssue, UnstableFeatures,\n+        GateIssue,\n     };\n }\n pub mod mut_visit;"}, {"sha": "aa9217c1b69a846f574e49337d2c1e173038638b", "filename": "src/libsyntax/sess.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibsyntax%2Fsess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b45f21d38e7e127d257c6299b9da00fdc57476b9/src%2Flibsyntax%2Fsess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsess.rs?ref=b45f21d38e7e127d257c6299b9da00fdc57476b9", "patch": "@@ -3,15 +3,15 @@\n \n use crate::ast::{CrateConfig, NodeId};\n use crate::early_buffered_lints::{BufferedEarlyLint, BufferedEarlyLintId};\n-use crate::source_map::{SourceMap, FilePathMapping};\n-use crate::feature_gate::UnstableFeatures;\n \n use errors::{Applicability, emitter::SilentEmitter, Handler, ColorConfig, DiagnosticBuilder};\n use rustc_data_structures::fx::{FxHashSet, FxHashMap};\n use rustc_data_structures::sync::{Lrc, Lock, Once};\n+use rustc_feature::UnstableFeatures;\n use syntax_pos::{Symbol, Span, MultiSpan};\n use syntax_pos::edition::Edition;\n use syntax_pos::hygiene::ExpnId;\n+use syntax_pos::source_map::{SourceMap, FilePathMapping};\n \n use std::path::PathBuf;\n use std::str;"}]}