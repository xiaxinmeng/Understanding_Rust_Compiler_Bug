{"sha": "4e01157969eb5726f08fa31a898108654d813fdd", "node_id": "C_kwDOAAsO6NoAKDRlMDExNTc5NjllYjU3MjZmMDhmYTMxYTg5ODEwODY1NGQ4MTNmZGQ", "commit": {"author": {"name": "bdbai", "email": "bdbaiapp@163.com", "date": "2021-09-22T23:29:52Z"}, "committer": {"name": "bdbai", "email": "bdbaiapp@163.com", "date": "2021-09-22T23:29:52Z"}, "message": "Reason safety for unsafe blocks for uwp stdin", "tree": {"sha": "8bc19404619aa6931d27a532b562b49841be114c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bc19404619aa6931d27a532b562b49841be114c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e01157969eb5726f08fa31a898108654d813fdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e01157969eb5726f08fa31a898108654d813fdd", "html_url": "https://github.com/rust-lang/rust/commit/4e01157969eb5726f08fa31a898108654d813fdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e01157969eb5726f08fa31a898108654d813fdd/comments", "author": {"login": "bdbai", "id": 5270106, "node_id": "MDQ6VXNlcjUyNzAxMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5270106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdbai", "html_url": "https://github.com/bdbai", "followers_url": "https://api.github.com/users/bdbai/followers", "following_url": "https://api.github.com/users/bdbai/following{/other_user}", "gists_url": "https://api.github.com/users/bdbai/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdbai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdbai/subscriptions", "organizations_url": "https://api.github.com/users/bdbai/orgs", "repos_url": "https://api.github.com/users/bdbai/repos", "events_url": "https://api.github.com/users/bdbai/events{/privacy}", "received_events_url": "https://api.github.com/users/bdbai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bdbai", "id": 5270106, "node_id": "MDQ6VXNlcjUyNzAxMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5270106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdbai", "html_url": "https://github.com/bdbai", "followers_url": "https://api.github.com/users/bdbai/followers", "following_url": "https://api.github.com/users/bdbai/following{/other_user}", "gists_url": "https://api.github.com/users/bdbai/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdbai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdbai/subscriptions", "organizations_url": "https://api.github.com/users/bdbai/orgs", "repos_url": "https://api.github.com/users/bdbai/repos", "events_url": "https://api.github.com/users/bdbai/events{/privacy}", "received_events_url": "https://api.github.com/users/bdbai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8ac6d471e074e15e0ecd44744735503c2eaf1dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8ac6d471e074e15e0ecd44744735503c2eaf1dd", "html_url": "https://github.com/rust-lang/rust/commit/a8ac6d471e074e15e0ecd44744735503c2eaf1dd"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "32550f796ec64d8ba818caf51d00c18100e3041a", "filename": "library/std/src/sys/windows/stdio_uwp.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e01157969eb5726f08fa31a898108654d813fdd/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio_uwp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e01157969eb5726f08fa31a898108654d813fdd/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio_uwp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio_uwp.rs?ref=4e01157969eb5726f08fa31a898108654d813fdd", "patch": "@@ -26,6 +26,7 @@ pub fn get_handle(handle_id: c::DWORD) -> io::Result<c::HANDLE> {\n \n fn write(handle_id: c::DWORD, data: &[u8]) -> io::Result<usize> {\n     let handle = get_handle(handle_id)?;\n+    // SAFETY: The handle returned from `get_handle` must be valid and non-null.\n     let handle = unsafe { Handle::from_raw_handle(handle) };\n     ManuallyDrop::new(handle).write(data)\n }\n@@ -39,6 +40,7 @@ impl Stdin {\n impl io::Read for Stdin {\n     fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {\n         let handle = get_handle(c::STD_INPUT_HANDLE)?;\n+        // SAFETY: The handle returned from `get_handle` must be valid and non-null.\n         let handle = unsafe { Handle::from_raw_handle(handle) };\n         ManuallyDrop::new(handle).read(buf)\n     }"}]}