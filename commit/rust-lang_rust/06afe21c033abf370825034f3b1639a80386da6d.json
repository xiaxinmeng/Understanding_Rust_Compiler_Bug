{"sha": "06afe21c033abf370825034f3b1639a80386da6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2YWZlMjFjMDMzYWJmMzcwODI1MDM0ZjNiMTYzOWE4MDM4NmRhNmQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-25T01:23:54Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-25T01:24:35Z"}, "message": "rustc: Cache normalized types", "tree": {"sha": "020b2efa8222a15c552b6b30205124435650490b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/020b2efa8222a15c552b6b30205124435650490b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06afe21c033abf370825034f3b1639a80386da6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06afe21c033abf370825034f3b1639a80386da6d", "html_url": "https://github.com/rust-lang/rust/commit/06afe21c033abf370825034f3b1639a80386da6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06afe21c033abf370825034f3b1639a80386da6d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e909e387d1b71a8b813433ce834384ffb13fedf", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e909e387d1b71a8b813433ce834384ffb13fedf", "html_url": "https://github.com/rust-lang/rust/commit/6e909e387d1b71a8b813433ce834384ffb13fedf"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "7f459da156175125b8dd143ffed7f1ecb925bb5c", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/06afe21c033abf370825034f3b1639a80386da6d/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06afe21c033abf370825034f3b1639a80386da6d/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=06afe21c033abf370825034f3b1639a80386da6d", "patch": "@@ -227,7 +227,8 @@ type ctxt =\n       iface_method_cache: hashmap<def_id, @[method]>,\n       ty_param_bounds: hashmap<ast::node_id, param_bounds>,\n       inferred_modes: hashmap<ast::node_id, ast::mode>,\n-      borrowings: hashmap<ast::node_id, ()>};\n+      borrowings: hashmap<ast::node_id, ()>,\n+      normalized_cache: hashmap<t, t>};\n \n type t_box = @{struct: sty,\n                id: uint,\n@@ -461,7 +462,8 @@ fn mk_ctxt(s: session::session, dm: resolve::def_map, amap: ast_map::map,\n       iface_method_cache: new_def_hash(),\n       ty_param_bounds: map::int_hash(),\n       inferred_modes: map::int_hash(),\n-      borrowings: map::int_hash()}\n+      borrowings: map::int_hash(),\n+      normalized_cache: new_ty_hash()}\n }\n \n \n@@ -2680,6 +2682,11 @@ fn ty_params_to_tys(tcx: ty::ctxt, tps: [ast::ty_param]) -> [t] {\n Returns an equivalent type with all the typedefs and self regions removed\n \"]\n fn normalize_ty(cx: ctxt, t: t) -> t {\n+    alt cx.normalized_cache.find(t) {\n+      some(t) { ret t; }\n+      none { }\n+    }\n+\n     let t = alt get(t).struct {\n         ty_enum(did, r) {\n             alt r.self_r {\n@@ -2693,7 +2700,9 @@ fn normalize_ty(cx: ctxt, t: t) -> t {\n         _ { t }\n     };\n     let sty = fold_sty(get(t).struct) {|t| normalize_ty(cx, t) };\n-    mk_t(cx, sty)\n+    let t_norm = mk_t(cx, sty);\n+    cx.normalized_cache.insert(t, t_norm);\n+    ret t_norm;\n }\n \n // Local Variables:"}]}