{"sha": "ce3abc5801f94292be9bc5fbe00b52f1ccb28672", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlM2FiYzU4MDFmOTQyOTJiZTliYzVmYmUwMGI1MmYxY2NiMjg2NzI=", "commit": {"author": {"name": "Matthew Dawson", "email": "matthew@mjdsystems.ca", "date": "2017-07-08T03:00:38Z"}, "committer": {"name": "Matthew Dawson", "email": "matthew@mjdsystems.ca", "date": "2017-07-08T03:07:01Z"}, "message": "Fix stage 2 builds with a custom libdir.\n\nWhen copying libstd for the stage 2 compiler, the builder ignores the\nconfigured libdir/libdir_relative configuration parameters.  This causes\nthe compiler to fail to find libstd, which cause any tools built with the\nstage 2 compiler to fail.\n\nTo fix this, make the copy steps of rustbuild aware of the libdir_relative\nparameter when the stage >= 2.  Also update the dist target to be aware of\nthe new location of libstd.", "tree": {"sha": "c1c09989bd4826dc715566c2b84a89e104cdecd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1c09989bd4826dc715566c2b84a89e104cdecd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce3abc5801f94292be9bc5fbe00b52f1ccb28672", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEkRWwpe7qWxgM14Ep+0kv31Jtww0FAllgTFUACgkQ+0kv31Jt\nww3G9w/+KIXP732A5t5Ia+1QgAKbpTlEdSuKs+pB7C52a3ipkIZ2PxwKZf6KuGD+\nM4rQyhVJCmGHIVTw8dgrgWOQMBgIyxFIZDP0lb/B/taDCtQtm+zYm1AJGlqcLDYX\niZu0QGGPtA4fFpiuKP3wkxEcKjiEBNfu1q5ngi+CTuAcEkX3fhBXDr56q3peQw3e\nSzvglzu+v7I1JQx/AhOkdwbFeFj2cWwbFk7QjZp5iBGfU/gXD3Fe1nvNHF/+RxrC\n/7y5O5vrqsI1GDEgNMG6tx1JEq5fb25HrCE2pneCuqNDunTxRts6WjJxbWlORvRp\nmxa3bgi2uOz312BPmumUg3QH5shOXmKRkPzsqfBDk7YjEqrDLo0uvf6B/p+//Xqg\n55CYrZxrFSBHFcYbPZD3yrKZorboPPl6gimxiguZzx4G2GBKPr89LHzF0H5Ll2oJ\nRhFWjki+l/Es3lbjnUDEHLNkjn7ULsKoPAT8A/NcXCAhKpYaT9hSts04b8qOfN0Y\nZTL3tZ5jQ/z9OefLZYB3SKvgldk03c2jxQfHHxuF/gLcP6WEcVDQHbR/YWgipTkk\n+072qzLQ+JBkkImwtE757oNvUf/5tUqAoahdfpW6jn0xAU/4u9Jr4zHXRTBU8dhp\nG+Ep5ZR0IKJv6zbQDyscApF9M511QKWeysSb551B2KodnDzJbr8=\n=XRz2\n-----END PGP SIGNATURE-----", "payload": "tree c1c09989bd4826dc715566c2b84a89e104cdecd5\nparent 9b85e1cfa5aa2aaa4b5df4359a023ad793983ffc\nauthor Matthew Dawson <matthew@mjdsystems.ca> 1499482838 -0400\ncommitter Matthew Dawson <matthew@mjdsystems.ca> 1499483221 -0400\n\nFix stage 2 builds with a custom libdir.\n\nWhen copying libstd for the stage 2 compiler, the builder ignores the\nconfigured libdir/libdir_relative configuration parameters.  This causes\nthe compiler to fail to find libstd, which cause any tools built with the\nstage 2 compiler to fail.\n\nTo fix this, make the copy steps of rustbuild aware of the libdir_relative\nparameter when the stage >= 2.  Also update the dist target to be aware of\nthe new location of libstd.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3abc5801f94292be9bc5fbe00b52f1ccb28672", "html_url": "https://github.com/rust-lang/rust/commit/ce3abc5801f94292be9bc5fbe00b52f1ccb28672", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce3abc5801f94292be9bc5fbe00b52f1ccb28672/comments", "author": {"login": "MJDSys", "id": 2875429, "node_id": "MDQ6VXNlcjI4NzU0Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/2875429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MJDSys", "html_url": "https://github.com/MJDSys", "followers_url": "https://api.github.com/users/MJDSys/followers", "following_url": "https://api.github.com/users/MJDSys/following{/other_user}", "gists_url": "https://api.github.com/users/MJDSys/gists{/gist_id}", "starred_url": "https://api.github.com/users/MJDSys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MJDSys/subscriptions", "organizations_url": "https://api.github.com/users/MJDSys/orgs", "repos_url": "https://api.github.com/users/MJDSys/repos", "events_url": "https://api.github.com/users/MJDSys/events{/privacy}", "received_events_url": "https://api.github.com/users/MJDSys/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MJDSys", "id": 2875429, "node_id": "MDQ6VXNlcjI4NzU0Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/2875429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MJDSys", "html_url": "https://github.com/MJDSys", "followers_url": "https://api.github.com/users/MJDSys/followers", "following_url": "https://api.github.com/users/MJDSys/following{/other_user}", "gists_url": "https://api.github.com/users/MJDSys/gists{/gist_id}", "starred_url": "https://api.github.com/users/MJDSys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MJDSys/subscriptions", "organizations_url": "https://api.github.com/users/MJDSys/orgs", "repos_url": "https://api.github.com/users/MJDSys/repos", "events_url": "https://api.github.com/users/MJDSys/events{/privacy}", "received_events_url": "https://api.github.com/users/MJDSys/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b85e1cfa5aa2aaa4b5df4359a023ad793983ffc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b85e1cfa5aa2aaa4b5df4359a023ad793983ffc", "html_url": "https://github.com/rust-lang/rust/commit/9b85e1cfa5aa2aaa4b5df4359a023ad793983ffc"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "8fae1dd99d8b96e4f6b1e90329ca401be06b1a19", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce3abc5801f94292be9bc5fbe00b52f1ccb28672/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3abc5801f94292be9bc5fbe00b52f1ccb28672/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=ce3abc5801f94292be9bc5fbe00b52f1ccb28672", "patch": "@@ -405,8 +405,9 @@ pub fn std(build: &Build, compiler: &Compiler, target: &str) {\n \n     let dst = image.join(\"lib/rustlib\").join(target);\n     t!(fs::create_dir_all(&dst));\n-    let src = build.sysroot(compiler).join(\"lib/rustlib\");\n-    cp_r(&src.join(target), &dst);\n+    let mut src = build.sysroot_libdir(compiler, target);\n+    src.pop(); // Remove the trailing /lib folder from the sysroot_libdir\n+    cp_r(&src, &dst);\n \n     let mut cmd = rust_installer(build);\n     cmd.arg(\"generate\")"}, {"sha": "032231582ef185889f161b9b2ecc85e904437d7d", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ce3abc5801f94292be9bc5fbe00b52f1ccb28672/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3abc5801f94292be9bc5fbe00b52f1ccb28672/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=ce3abc5801f94292be9bc5fbe00b52f1ccb28672", "patch": "@@ -645,8 +645,14 @@ impl Build {\n     /// Returns the libdir where the standard library and other artifacts are\n     /// found for a compiler's sysroot.\n     fn sysroot_libdir(&self, compiler: &Compiler, target: &str) -> PathBuf {\n-        self.sysroot(compiler).join(\"lib\").join(\"rustlib\")\n-            .join(target).join(\"lib\")\n+        if compiler.stage >= 2 {\n+            if let Some(ref libdir_relative) = self.config.libdir_relative {\n+                return self.sysroot(compiler).join(libdir_relative)\n+                    .join(\"rustlib\").join(target).join(\"lib\")\n+            }\n+        }\n+       self.sysroot(compiler).join(\"lib\").join(\"rustlib\")\n+           .join(target).join(\"lib\")\n     }\n \n     /// Returns the root directory for all output generated in a particular"}]}