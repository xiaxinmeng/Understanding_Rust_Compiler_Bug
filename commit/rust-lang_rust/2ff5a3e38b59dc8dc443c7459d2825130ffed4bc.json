{"sha": "2ff5a3e38b59dc8dc443c7459d2825130ffed4bc", "node_id": "C_kwDOAAsO6NoAKDJmZjVhM2UzOGI1OWRjOGRjNDQzYzc0NTlkMjgyNTEzMGZmZWQ0YmM", "commit": {"author": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2021-12-05T20:55:50Z"}, "committer": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2021-12-05T21:07:27Z"}, "message": "Attach range metadata to alignment loads from vtables\n\n...because alignment is always nonzero.\n\nThis helps eliminate redundant runtime alignment checks, when a DST\nis a field of a struct whose remaining fields have alignment 1.", "tree": {"sha": "c1dcbe6f4c6c35292571a25abfee182a5f3b4217", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1dcbe6f4c6c35292571a25abfee182a5f3b4217"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ff5a3e38b59dc8dc443c7459d2825130ffed4bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ff5a3e38b59dc8dc443c7459d2825130ffed4bc", "html_url": "https://github.com/rust-lang/rust/commit/2ff5a3e38b59dc8dc443c7459d2825130ffed4bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ff5a3e38b59dc8dc443c7459d2825130ffed4bc/comments", "author": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "772d51f887fa407216860bf8ecf3f1a32fb795b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/772d51f887fa407216860bf8ecf3f1a32fb795b4", "html_url": "https://github.com/rust-lang/rust/commit/772d51f887fa407216860bf8ecf3f1a32fb795b4"}], "stats": {"total": 61, "additions": 54, "deletions": 7}, "files": [{"sha": "2c4e6bbe9a5c1b5ea27bba5732f8652f671ab5b4", "filename": "compiler/rustc_codegen_ssa/src/glue.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2ff5a3e38b59dc8dc443c7459d2825130ffed4bc/compiler%2Frustc_codegen_ssa%2Fsrc%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ff5a3e38b59dc8dc443c7459d2825130ffed4bc/compiler%2Frustc_codegen_ssa%2Fsrc%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fglue.rs?ref=2ff5a3e38b59dc8dc443c7459d2825130ffed4bc", "patch": "@@ -6,6 +6,7 @@ use crate::common::IntPredicate;\n use crate::meth;\n use crate::traits::*;\n use rustc_middle::ty::{self, Ty};\n+use rustc_target::abi::WrappingRange;\n \n pub fn size_and_align_of_dst<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     bx: &mut Bx,\n@@ -21,14 +22,17 @@ pub fn size_and_align_of_dst<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     }\n     match t.kind() {\n         ty::Dynamic(..) => {\n-            // load size/align from vtable\n+            // Load size/align from vtable.\n             let vtable = info.unwrap();\n-            (\n-                meth::VirtualIndex::from_index(ty::COMMON_VTABLE_ENTRIES_SIZE)\n-                    .get_usize(bx, vtable),\n-                meth::VirtualIndex::from_index(ty::COMMON_VTABLE_ENTRIES_ALIGN)\n-                    .get_usize(bx, vtable),\n-            )\n+            let size = meth::VirtualIndex::from_index(ty::COMMON_VTABLE_ENTRIES_SIZE)\n+                .get_usize(bx, vtable);\n+            let align = meth::VirtualIndex::from_index(ty::COMMON_VTABLE_ENTRIES_ALIGN)\n+                .get_usize(bx, vtable);\n+\n+            // Alignment is always nonzero.\n+            bx.range_metadata(align, WrappingRange { start: 1, end: !0 });\n+\n+            (size, align)\n         }\n         ty::Slice(_) | ty::Str => {\n             let unit = layout.field(bx, 0);"}, {"sha": "00f82885d65efcc9f347f3483c14e5cb595771cd", "filename": "src/test/codegen/dst-vtable-align-nonzero.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/2ff5a3e38b59dc8dc443c7459d2825130ffed4bc/src%2Ftest%2Fcodegen%2Fdst-vtable-align-nonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ff5a3e38b59dc8dc443c7459d2825130ffed4bc/src%2Ftest%2Fcodegen%2Fdst-vtable-align-nonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fdst-vtable-align-nonzero.rs?ref=2ff5a3e38b59dc8dc443c7459d2825130ffed4bc", "patch": "@@ -0,0 +1,43 @@\n+#![crate_type = \"lib\"]\n+\n+// This test checks that we annotate alignment loads from vtables with nonzero range metadata,\n+// and that this allows LLVM to eliminate redundant `align >= 1` checks.\n+\n+pub trait Trait {\n+    fn f(&self);\n+}\n+\n+pub struct WrapperWithAlign1<T: ?Sized> { x: u8, y: T }\n+\n+pub struct WrapperWithAlign2<T: ?Sized> { x: u16, y: T }\n+\n+pub struct Struct<W: ?Sized> {\n+    _field: i8,\n+    dst: W,\n+}\n+\n+// CHECK-LABEL: @eliminates_runtime_check_when_align_1\n+#[no_mangle]\n+pub fn eliminates_runtime_check_when_align_1(\n+    x: &Struct<WrapperWithAlign1<dyn Trait>>\n+) -> &WrapperWithAlign1<dyn Trait> {\n+    // CHECK: load [[USIZE:i[0-9]+]], {{.+}} !range [[RANGE_META:![0-9]+]]\n+    // CHECK-NOT: icmp\n+    // CHECK-NOT: select\n+    // CHECK: ret\n+    &x.dst\n+}\n+\n+// CHECK-LABEL: @does_not_eliminate_runtime_check_when_align_2\n+#[no_mangle]\n+pub fn does_not_eliminate_runtime_check_when_align_2(\n+    x: &Struct<WrapperWithAlign2<dyn Trait>>\n+) -> &WrapperWithAlign2<dyn Trait> {\n+    // CHECK: [[X0:%[0-9]+]] = load [[USIZE]], {{.+}} !range [[RANGE_META]]\n+    // CHECK: [[X1:%[0-9]+]] = icmp {{.+}} [[X0]]\n+    // CHECK: [[X2:%[0-9]+]] = select {{.+}} [[X1]]\n+    // CHECK: ret\n+    &x.dst\n+}\n+\n+// CHECK: [[RANGE_META]] = !{[[USIZE]] 1, [[USIZE]] 0}"}]}