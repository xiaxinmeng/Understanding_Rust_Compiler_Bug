{"sha": "525966a543a6d03d10393b55a5207678aab8c147", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNTk2NmE1NDNhNmQwM2QxMDM5M2I1NWE1MjA3Njc4YWFiOGMxNDc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-14T01:48:33Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-14T01:48:42Z"}, "message": "Fix a couple bugs in iter_sequence, un-XFAIL vec-drop.rs.", "tree": {"sha": "5fa857473bb94f7e90afe16e4943f7ff32344ae8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fa857473bb94f7e90afe16e4943f7ff32344ae8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/525966a543a6d03d10393b55a5207678aab8c147", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/525966a543a6d03d10393b55a5207678aab8c147", "html_url": "https://github.com/rust-lang/rust/commit/525966a543a6d03d10393b55a5207678aab8c147", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/525966a543a6d03d10393b55a5207678aab8c147/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90807e240fb67529f65fc85a7964c4cc98176678", "url": "https://api.github.com/repos/rust-lang/rust/commits/90807e240fb67529f65fc85a7964c4cc98176678", "html_url": "https://github.com/rust-lang/rust/commit/90807e240fb67529f65fc85a7964c4cc98176678"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "c77b89944543dd1cd1ea82dfc3cba6dcc21b0878", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/525966a543a6d03d10393b55a5207678aab8c147/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/525966a543a6d03d10393b55a5207678aab8c147/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=525966a543a6d03d10393b55a5207678aab8c147", "patch": "@@ -559,6 +559,7 @@ TEST_XFAILS_SELF := $(filter-out \\\n                         uint.rs \\\n                         unit.rs \\\n                         vec.rs \\\n+                        vec-drop.rs \\\n                         vec-in-tup.rs \\\n                         vec-late-init.rs \\\n                         while-and-do-while.rs \\"}, {"sha": "82a5d3fb9160f2de29514b2e61ac9713d84df34d", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/525966a543a6d03d10393b55a5207678aab8c147/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/525966a543a6d03d10393b55a5207678aab8c147/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=525966a543a6d03d10393b55a5207678aab8c147", "patch": "@@ -854,9 +854,14 @@ fn iter_sequence(@block_ctxt cx,\n                                       C_int(abi.vec_elt_data)));\n         auto lenptr = cx.build.GEP(v, vec(C_int(0),\n                                           C_int(abi.vec_elt_fill)));\n+\n+        auto llunit_ty = type_of(cx.fcx.ccx, elt_ty);\n+        auto unit_sz = llvm.LLVMConstIntCast(llvm.LLVMSizeOf(llunit_ty),\n+                                             T_int(), False);\n+\n         auto len = cx.build.Load(lenptr);\n         if (trailing_null) {\n-            len = cx.build.Sub(len, C_int(1));\n+            len = cx.build.Sub(len, unit_sz);\n         }\n \n         auto r = res(cx, C_nil());\n@@ -868,17 +873,26 @@ fn iter_sequence(@block_ctxt cx,\n         cx.build.Br(cond_cx.llbb);\n \n         auto ix = cond_cx.build.Phi(T_int(), vec(C_int(0)), vec(cx.llbb));\n-        auto end_test = cond_cx.build.ICmp(lib.llvm.LLVMIntEQ, ix, len);\n+        auto scaled_ix = cond_cx.build.Phi(T_int(),\n+                                           vec(C_int(0)), vec(cx.llbb));\n+\n+        auto end_test = cond_cx.build.ICmp(lib.llvm.LLVMIntNE,\n+                                           scaled_ix, len);\n         cond_cx.build.CondBr(end_test, body_cx.llbb, next_cx.llbb);\n \n         auto elt = body_cx.build.GEP(p0, vec(C_int(0), ix));\n         auto body_res = f(body_cx,\n                           load_non_structural(body_cx, elt, elt_ty),\n                           elt_ty);\n         auto next_ix = body_res.bcx.build.Add(ix, C_int(1));\n+        auto next_scaled_ix = body_res.bcx.build.Add(scaled_ix, unit_sz);\n+\n         cond_cx.build.AddIncomingToPhi(ix, vec(next_ix),\n                                        vec(body_res.bcx.llbb));\n \n+        cond_cx.build.AddIncomingToPhi(scaled_ix, vec(next_scaled_ix),\n+                                       vec(body_res.bcx.llbb));\n+\n         body_res.bcx.build.Br(cond_cx.llbb);\n         ret res(next_cx, C_nil());\n     }\n@@ -889,7 +903,7 @@ fn iter_sequence(@block_ctxt cx,\n         }\n         case (typeck.ty_str) {\n             auto et = typeck.plain_ty(typeck.ty_machine(common.ty_u8));\n-            ret iter_sequence_body(cx, v, et, f, false);\n+            ret iter_sequence_body(cx, v, et, f, true);\n         }\n         case (_) { fail; }\n     }"}]}