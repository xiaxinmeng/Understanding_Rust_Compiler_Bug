{"sha": "26d8eaefa7c668ff337dde4942c5102de50b0fc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZDhlYWVmYTdjNjY4ZmYzMzdkZGU0OTQyYzUxMDJkZTUwYjBmYzE=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-06-21T21:07:28Z"}, "committer": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-06-21T21:07:28Z"}, "message": "Puts out burning tinderbox (oops, AST nodes don't have def_ids/anns).", "tree": {"sha": "e489da137e47e43d5de3951c3e7c488707b69fb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e489da137e47e43d5de3951c3e7c488707b69fb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26d8eaefa7c668ff337dde4942c5102de50b0fc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26d8eaefa7c668ff337dde4942c5102de50b0fc1", "html_url": "https://github.com/rust-lang/rust/commit/26d8eaefa7c668ff337dde4942c5102de50b0fc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26d8eaefa7c668ff337dde4942c5102de50b0fc1/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84005fadbf8854df069a3caf02c9493866b550be", "url": "https://api.github.com/repos/rust-lang/rust/commits/84005fadbf8854df069a3caf02c9493866b550be", "html_url": "https://github.com/rust-lang/rust/commit/84005fadbf8854df069a3caf02c9493866b550be"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "b66cb7bb455eab84f953c5eade8ccbe82a41186e", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/26d8eaefa7c668ff337dde4942c5102de50b0fc1/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26d8eaefa7c668ff337dde4942c5102de50b0fc1/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=26d8eaefa7c668ff337dde4942c5102de50b0fc1", "patch": "@@ -1734,8 +1734,7 @@ fn parse_anon_obj_field(&parser p) -> ast::anon_obj_field {\n     auto ident = parse_value_ident(p);\n     expect(p, token::EQ);\n     auto expr = parse_expr(p);\n-    ret rec(mut=mut, ty=ty, expr=expr, ident=ident, id=p.next_def_id(), \n-            ann=p.get_ann());\n+    ret rec(mut=mut, ty=ty, expr=expr, ident=ident, id=p.get_id());\n }\n \n fn parse_method(&parser p) -> @ast::method {"}, {"sha": "d6d13bf540c787cb12bf996e484e6d5ebdaec81e", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/26d8eaefa7c668ff337dde4942c5102de50b0fc1/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26d8eaefa7c668ff337dde4942c5102de50b0fc1/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=26d8eaefa7c668ff337dde4942c5102de50b0fc1", "patch": "@@ -6510,7 +6510,7 @@ fn trans_anon_obj(@block_ctxt bcx, &span sp, &ast::anon_obj anon_obj,\n         case (some(?fields)) {\n             additional_fields = fields;\n             for (ast::anon_obj_field f in fields) {\n-                additional_field_tys += [node_ann_type(ccx, f.ann)];\n+                additional_field_tys += [node_id_type(ccx, f.id)];\n                 additional_field_vals += [trans_expr(bcx, f.expr)];\n             }\n         }\n@@ -6526,7 +6526,7 @@ fn trans_anon_obj(@block_ctxt bcx, &span sp, &ast::anon_obj anon_obj,\n             // Translating with_obj returns a ValueRef (pointer to a 2-word\n             // value) wrapped in a result.\n             with_obj_val  = some[result](trans_expr(bcx, e));\n-            with_obj_ty = node_ann_type(ccx, ty::expr_ann(e));\n+            with_obj_ty = ty::expr_ty(ccx.tcx, e);\n         }\n     }\n     // FIXME (part of issue #538): much of the following code is copypasta\n@@ -6552,7 +6552,7 @@ fn trans_anon_obj(@block_ctxt bcx, &span sp, &ast::anon_obj anon_obj,\n     // and all we have is an ast::anon_obj, so we need to roll our own.\n \n     fn anon_obj_field_to_obj_field(&ast::anon_obj_field f) -> ast::obj_field {\n-        ret rec(mut=f.mut, ty=f.ty, ident=f.ident, id=f.id, ann=f.ann);\n+        ret rec(mut=f.mut, ty=f.ty, ident=f.ident, id=f.id);\n     }\n     let ast::_obj wrapper_obj = rec(\n         fields = vec::map(anon_obj_field_to_obj_field, additional_fields),"}]}