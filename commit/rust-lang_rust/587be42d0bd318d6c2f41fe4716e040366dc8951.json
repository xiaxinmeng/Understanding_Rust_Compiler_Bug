{"sha": "587be42d0bd318d6c2f41fe4716e040366dc8951", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4N2JlNDJkMGJkMzE4ZDZjMmY0MWZlNDcxNmUwNDAzNjZkYzg5NTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-01T04:29:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-01T04:29:04Z"}, "message": "Auto merge of #28605 - alexcrichton:link-native-first, r=brson\n\nThis commit swaps the order of linking local native libraries and upstream\r\nnative libraries on the linker command line. Detail of bugs this can cause can\r\nbe found in #28595, and this change also invalidates the test case that was\r\nadded for #12446 which is now considered a bug because the downstream dependency\r\nwould need to declare that it depends on the native library somehow.\r\n\r\nCloses #28595\r\n[breaking-change]", "tree": {"sha": "f029b84fe4e63374038bf89e179f1689ab81bf3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f029b84fe4e63374038bf89e179f1689ab81bf3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/587be42d0bd318d6c2f41fe4716e040366dc8951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/587be42d0bd318d6c2f41fe4716e040366dc8951", "html_url": "https://github.com/rust-lang/rust/commit/587be42d0bd318d6c2f41fe4716e040366dc8951", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/587be42d0bd318d6c2f41fe4716e040366dc8951/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "031dd9c38153558025b3de97d486541b56275002", "url": "https://api.github.com/repos/rust-lang/rust/commits/031dd9c38153558025b3de97d486541b56275002", "html_url": "https://github.com/rust-lang/rust/commit/031dd9c38153558025b3de97d486541b56275002"}, {"sha": "9502df5798f2d7de41fe59927fddd894f7769a73", "url": "https://api.github.com/repos/rust-lang/rust/commits/9502df5798f2d7de41fe59927fddd894f7769a73", "html_url": "https://github.com/rust-lang/rust/commit/9502df5798f2d7de41fe59927fddd894f7769a73"}], "stats": {"total": 121, "additions": 72, "deletions": 49}, "files": [{"sha": "80a831fd207757ebac725058c103bae2ee83ae4c", "filename": "src/liballoc_jemalloc/lib.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Fliballoc_jemalloc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Fliballoc_jemalloc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Flib.rs?ref=587be42d0bd318d6c2f41fe4716e040366dc8951", "patch": "@@ -27,7 +27,19 @@ extern crate libc;\n \n use libc::{c_int, c_void, size_t};\n \n+// Linkage directives to pull in jemalloc and its dependencies.\n+//\n+// On some platforms we need to be sure to link in `pthread` which jemalloc\n+// depends on, and specifically on android we need to also link to libgcc.\n+// Currently jemalloc is compiled with gcc which will generate calls to\n+// intrinsics that are libgcc specific (e.g. those intrinsics aren't present in\n+// libcompiler-rt), so link that in to get that support.\n #[link(name = \"jemalloc\", kind = \"static\")]\n+#[cfg_attr(target_os = \"android\", link(name = \"gcc\"))]\n+#[cfg_attr(all(not(windows),\n+               not(target_os = \"android\"),\n+               not(target_env = \"musl\")),\n+           link(name = \"pthread\"))]\n extern {\n     fn je_mallocx(size: size_t, flags: c_int) -> *mut c_void;\n     fn je_rallocx(ptr: *mut c_void, size: size_t, flags: c_int) -> *mut c_void;\n@@ -37,13 +49,6 @@ extern {\n     fn je_nallocx(size: size_t, flags: c_int) -> size_t;\n }\n \n-// -lpthread needs to occur after -ljemalloc, the earlier argument isn't enough\n-#[cfg(all(not(windows),\n-          not(target_os = \"android\"),\n-          not(target_env = \"musl\")))]\n-#[link(name = \"pthread\")]\n-extern {}\n-\n // The minimum alignment guaranteed by the architecture. This value is used to\n // add fast paths for low alignment values. In practice, the alignment is a\n // constant at the call site and the branch will be optimized out."}, {"sha": "2e18b50a45cfe937d020cedb12a86312a5217e2e", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 14, "deletions": 21, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=587be42d0bd318d6c2f41fe4716e040366dc8951", "patch": "@@ -984,31 +984,24 @@ fn link_args(cmd: &mut Linker,\n     // such:\n     //\n     //  1. The local object that LLVM just generated\n-    //  2. Upstream rust libraries\n-    //  3. Local native libraries\n+    //  2. Local native libraries\n+    //  3. Upstream rust libraries\n     //  4. Upstream native libraries\n     //\n-    // This is generally fairly natural, but some may expect 2 and 3 to be\n-    // swapped. The reason that all native libraries are put last is that it's\n-    // not recommended for a native library to depend on a symbol from a rust\n-    // crate. If this is the case then a staticlib crate is recommended, solving\n-    // the problem.\n+    // The rationale behind this ordering is that those items lower down in the\n+    // list can't depend on items higher up in the list. For example nothing can\n+    // depend on what we just generated (e.g. that'd be a circular dependency).\n+    // Upstream rust libraries are not allowed to depend on our local native\n+    // libraries as that would violate the structure of the DAG, in that\n+    // scenario they are required to link to them as well in a shared fashion.\n     //\n-    // Additionally, it is occasionally the case that upstream rust libraries\n-    // depend on a local native library. In the case of libraries such as\n-    // lua/glfw/etc the name of the library isn't the same across all platforms,\n-    // so only the consumer crate of a library knows the actual name. This means\n-    // that downstream crates will provide the #[link] attribute which upstream\n-    // crates will depend on. Hence local native libraries are after out\n-    // upstream rust crates.\n-    //\n-    // In theory this means that a symbol in an upstream native library will be\n-    // shadowed by a local native library when it wouldn't have been before, but\n-    // this kind of behavior is pretty platform specific and generally not\n-    // recommended anyway, so I don't think we're shooting ourself in the foot\n-    // much with that.\n-    add_upstream_rust_crates(cmd, sess, dylib, tmpdir);\n+    // Note that upstream rust libraries may contain native dependencies as\n+    // well, but they also can't depend on what we just started to add to the\n+    // link line. And finally upstream native libraries can't depend on anything\n+    // in this DAG so far because they're only dylibs and dylibs can only depend\n+    // on other dylibs (e.g. other native deps).\n     add_local_native_libraries(cmd, sess);\n+    add_upstream_rust_crates(cmd, sess, dylib, tmpdir);\n     add_upstream_native_libraries(cmd, sess);\n \n     // # Telling the linker what we're doing"}, {"sha": "c412b0479fb84b32afc2ca6fa0323065b65f216e", "filename": "src/test/run-make/issue-12446/Makefile", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/031dd9c38153558025b3de97d486541b56275002/src%2Ftest%2Frun-make%2Fissue-12446%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/031dd9c38153558025b3de97d486541b56275002/src%2Ftest%2Frun-make%2Fissue-12446%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-12446%2FMakefile?ref=031dd9c38153558025b3de97d486541b56275002", "patch": "@@ -1,6 +0,0 @@\n--include ../tools.mk\n-\n-all: $(call NATIVE_STATICLIB,foo)\n-\t$(RUSTC) foo.rs\n-\t$(RUSTC) bar.rs\n-\t$(call RUN,bar)"}, {"sha": "186a0046e80ac2dc6a9c56a245a247f80946083e", "filename": "src/test/run-make/issue-12446/foo.c", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/031dd9c38153558025b3de97d486541b56275002/src%2Ftest%2Frun-make%2Fissue-12446%2Ffoo.c", "raw_url": "https://github.com/rust-lang/rust/raw/031dd9c38153558025b3de97d486541b56275002/src%2Ftest%2Frun-make%2Fissue-12446%2Ffoo.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-12446%2Ffoo.c?ref=031dd9c38153558025b3de97d486541b56275002", "patch": "@@ -1,2 +0,0 @@\n-// ignore-license\n-void some_c_symbol() {}"}, {"sha": "61e9d0c6547357073437e6e016e6576baa482c8d", "filename": "src/test/run-make/issue-28595/Makefile", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Ftest%2Frun-make%2Fissue-28595%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Ftest%2Frun-make%2Fissue-28595%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-28595%2FMakefile?ref=587be42d0bd318d6c2f41fe4716e040366dc8951", "patch": "@@ -0,0 +1,6 @@\n+-include ../tools.mk\n+\n+all: $(call NATIVE_STATICLIB,a) $(call NATIVE_STATICLIB,b)\n+\t$(RUSTC) a.rs\n+\t$(RUSTC) b.rs\n+\t$(call RUN,b)"}, {"sha": "feacd7bc31377758016e3ef9217733d86e295e21", "filename": "src/test/run-make/issue-28595/a.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Ftest%2Frun-make%2Fissue-28595%2Fa.c", "raw_url": "https://github.com/rust-lang/rust/raw/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Ftest%2Frun-make%2Fissue-28595%2Fa.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-28595%2Fa.c?ref=587be42d0bd318d6c2f41fe4716e040366dc8951", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+void a(void) {}"}, {"sha": "7377a9f3416f84133f7b60d2c4de1d91e48fe6ae", "filename": "src/test/run-make/issue-28595/a.rs", "status": "renamed", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Ftest%2Frun-make%2Fissue-28595%2Fa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Ftest%2Frun-make%2Fissue-28595%2Fa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-28595%2Fa.rs?ref=587be42d0bd318d6c2f41fe4716e040366dc8951", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -10,10 +10,7 @@\n \n #![crate_type = \"rlib\"]\n \n+#[link(name = \"a\", kind = \"static\")]\n extern {\n-    fn some_c_symbol();\n-}\n-\n-pub fn foo() {\n-    unsafe { some_c_symbol() }\n+    pub fn a();\n }", "previous_filename": "src/test/run-make/issue-12446/foo.rs"}, {"sha": "de81fbcaa60953025aefa2bf874d4b384950956d", "filename": "src/test/run-make/issue-28595/b.c", "status": "renamed", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Ftest%2Frun-make%2Fissue-28595%2Fb.c", "raw_url": "https://github.com/rust-lang/rust/raw/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Ftest%2Frun-make%2Fissue-28595%2Fb.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-28595%2Fb.c?ref=587be42d0bd318d6c2f41fe4716e040366dc8951", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,11 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-extern crate foo;\n+extern void a(void);\n \n-#[link(name = \"foo\")]\n-extern {}\n-\n-fn main() {\n-    foo::foo();\n+void b(void) {\n+    a();\n }\n+", "previous_filename": "src/test/run-make/issue-12446/bar.rs"}, {"sha": "37ff346c3f3f3672b20a35a7fc6bf51b3fa5b30f", "filename": "src/test/run-make/issue-28595/b.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Ftest%2Frun-make%2Fissue-28595%2Fb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587be42d0bd318d6c2f41fe4716e040366dc8951/src%2Ftest%2Frun-make%2Fissue-28595%2Fb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-28595%2Fb.rs?ref=587be42d0bd318d6c2f41fe4716e040366dc8951", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate a;\n+\n+#[link(name = \"b\", kind = \"static\")]\n+extern {\n+    pub fn b();\n+}\n+\n+\n+fn main() {\n+    unsafe { b(); }\n+}"}]}