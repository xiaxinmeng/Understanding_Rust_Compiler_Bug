{"sha": "d3b2385d40bfed00533b016e4685974b739c2da1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYjIzODVkNDBiZmVkMDA1MzNiMDE2ZTQ2ODU5NzRiNzM5YzJkYTE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-01-30T00:24:51Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-02-11T22:14:07Z"}, "message": "Move it all into rustc_hir.", "tree": {"sha": "24a7cd29dc3ef0b5233d0bce757f7e3f5601d4ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24a7cd29dc3ef0b5233d0bce757f7e3f5601d4ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3b2385d40bfed00533b016e4685974b739c2da1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3b2385d40bfed00533b016e4685974b739c2da1", "html_url": "https://github.com/rust-lang/rust/commit/d3b2385d40bfed00533b016e4685974b739c2da1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3b2385d40bfed00533b016e4685974b739c2da1/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "443a42a8d3398a4238f5de3e2257476dd6f9bdf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/443a42a8d3398a4238f5de3e2257476dd6f9bdf5", "html_url": "https://github.com/rust-lang/rust/commit/443a42a8d3398a4238f5de3e2257476dd6f9bdf5"}], "stats": {"total": 114, "additions": 20, "deletions": 94}, "files": [{"sha": "ea2dc7f180307ef2c2113357bb07b12e2357acb3", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -3100,7 +3100,6 @@ dependencies = [\n  \"rustc_feature\",\n  \"rustc_hir\",\n  \"rustc_index\",\n- \"rustc_lang_items\",\n  \"rustc_macros\",\n  \"rustc_session\",\n  \"rustc_span\",\n@@ -3620,6 +3619,7 @@ version = \"0.0.0\"\n name = \"rustc_hir\"\n version = \"0.0.0\"\n dependencies = [\n+ \"lazy_static 1.4.0\",\n  \"rustc_ast_pretty\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3699,19 +3699,6 @@ dependencies = [\n  \"winapi 0.3.8\",\n ]\n \n-[[package]]\n-name = \"rustc_lang_items\"\n-version = \"0.0.0\"\n-dependencies = [\n- \"lazy_static 1.4.0\",\n- \"rustc_data_structures\",\n- \"rustc_hir\",\n- \"rustc_macros\",\n- \"rustc_span\",\n- \"serialize\",\n- \"syntax\",\n-]\n-\n [[package]]\n name = \"rustc_lexer\"\n version = \"0.1.0\"\n@@ -3865,7 +3852,6 @@ dependencies = [\n  \"rustc_feature\",\n  \"rustc_hir\",\n  \"rustc_index\",\n- \"rustc_lang_items\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\","}, {"sha": "782c6879ac58fd6945bd2e6c921d13c3f4ca16e5", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -24,7 +24,6 @@ rustc_apfloat = { path = \"../librustc_apfloat\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_hir = { path = \"../librustc_hir\" }\n-rustc_lang_items = { path = \"../librustc_lang_items\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_macros = { path = \"../librustc_macros\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "1a763e43d557dea9520394b670096445794faeb1", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -107,8 +107,6 @@ impl<'ctx> rustc_hir::HashStableContext for StableHashingContext<'ctx> {\n     }\n }\n \n-impl<'ctx> rustc_lang_items::HashStableContext for StableHashingContext<'ctx> {}\n-\n impl<'a> ToStableHashKey<StableHashingContext<'a>> for DefId {\n     type KeyType = DefPathHash;\n "}, {"sha": "d9387767655a1e511024e94e59aeee3541438c2c", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -14,7 +14,7 @@ use crate::ty::{self, TyCtxt};\n use rustc_hir::def_id::DefId;\n use rustc_span::Span;\n \n-pub use rustc_lang_items::{LangItem, LanguageItems};\n+pub use rustc_hir::{LangItem, LanguageItems};\n \n impl<'tcx> TyCtxt<'tcx> {\n     /// Returns the `DefId` for a given `LangItem`."}, {"sha": "c04a6f32215c48b2eca00cbe1fe2d1b6d609619d", "filename": "src/librustc/middle/weak_lang_items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -2,10 +2,10 @@\n \n use crate::ty::TyCtxt;\n use rustc_hir::def_id::DefId;\n-use rustc_lang_items::{lang_items, LangItem};\n+use rustc_hir::{lang_items, LangItem};\n use rustc_target::spec::PanicStrategy;\n \n-pub use rustc_lang_items::weak_lang_items::link_name;\n+pub use rustc_hir::weak_lang_items::link_name;\n \n impl<'tcx> TyCtxt<'tcx> {\n     pub fn is_weak_lang_item(&self, item_def_id: DefId) -> bool {"}, {"sha": "cff6413253202dde7ea183f829048b5dc9033b19", "filename": "src/librustc_hir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2FCargo.toml?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -19,4 +19,5 @@ rustc_span = { path = \"../librustc_span\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n syntax = { path = \"../libsyntax\" }\n+lazy_static = \"1\"\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "c5bad979f54167e2f759f5608419b400581b29b1", "filename": "src/librustc_hir/lang_items.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_hir%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_hir%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Flang_items.rs?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -9,11 +9,11 @@\n \n pub use self::LangItem::*;\n \n+use crate::def_id::DefId;\n use crate::Target;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n-use rustc_hir::def_id::DefId;\n use rustc_macros::HashStable_Generic;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;", "previous_filename": "src/librustc_lang_items/lang_items.rs"}, {"sha": "d958dfc681b00fe0703c2770dbf5ef78807a3033", "filename": "src/librustc_hir/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_hir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_hir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Flib.rs?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -17,9 +17,15 @@ mod hir;\n pub mod hir_id;\n pub mod intravisit;\n pub mod itemlikevisit;\n+pub mod lang_items;\n pub mod pat_util;\n pub mod print;\n mod stable_hash_impls;\n+mod target;\n+pub mod weak_lang_items;\n+\n pub use hir::*;\n pub use hir_id::*;\n+pub use lang_items::{LangItem, LanguageItems};\n pub use stable_hash_impls::HashStableContext;\n+pub use target::{MethodKind, Target};"}, {"sha": "501976fc3cb39cb020f9bbb49c5c343309abaf8e", "filename": "src/librustc_hir/target.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_hir%2Ftarget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_hir%2Ftarget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Ftarget.rs?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -4,8 +4,8 @@\n //! conflicts between multiple such attributes attached to the same\n //! item.\n \n-use rustc_hir as hir;\n-use rustc_hir::{Item, ItemKind, TraitItem, TraitItemKind};\n+use crate::hir;\n+use crate::{Item, ItemKind, TraitItem, TraitItemKind};\n \n use std::fmt::{self, Display};\n ", "previous_filename": "src/librustc_lang_items/target.rs"}, {"sha": "79182caae8c80e2c6346950924f5edad3855b88a", "filename": "src/librustc_hir/weak_lang_items.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_hir%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_hir%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fweak_lang_items.rs?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -1,9 +1,9 @@\n //! Validity checking for weak lang items\n \n+use crate::def_id::DefId;\n use crate::{lang_items, LangItem, LanguageItems};\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_hir::def_id::DefId;\n use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n ", "previous_filename": "src/librustc_lang_items/weak_lang_items.rs"}, {"sha": "eddd4fb81dcc287c36aaf73763bb7280cce3f826", "filename": "src/librustc_lang_items/Cargo.toml", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/443a42a8d3398a4238f5de3e2257476dd6f9bdf5/src%2Flibrustc_lang_items%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/443a42a8d3398a4238f5de3e2257476dd6f9bdf5/src%2Flibrustc_lang_items%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lang_items%2FCargo.toml?ref=443a42a8d3398a4238f5de3e2257476dd6f9bdf5", "patch": "@@ -1,18 +0,0 @@\n-[package]\n-authors = [\"The Rust Project Developers\"]\n-name = \"rustc_lang_items\"\n-version = \"0.0.0\"\n-edition = \"2018\"\n-\n-[lib]\n-name = \"rustc_lang_items\"\n-path = \"lib.rs\"\n-\n-[dependencies]\n-lazy_static = \"1\"\n-rustc_data_structures = { path = \"../librustc_data_structures\" }\n-rustc_hir = { path = \"../librustc_hir\" }\n-rustc_macros = { path = \"../librustc_macros\" }\n-rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n-rustc_span = { path = \"../librustc_span\" }\n-syntax = { path = \"../libsyntax\" }"}, {"sha": "9bcd54b6cbfa1e5839944762596370c3e1614ea5", "filename": "src/librustc_lang_items/lib.rs", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/443a42a8d3398a4238f5de3e2257476dd6f9bdf5/src%2Flibrustc_lang_items%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/443a42a8d3398a4238f5de3e2257476dd6f9bdf5/src%2Flibrustc_lang_items%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lang_items%2Flib.rs?ref=443a42a8d3398a4238f5de3e2257476dd6f9bdf5", "patch": "@@ -1,45 +0,0 @@\n-macro_rules! enum_from_u32 {\n-    ($(#[$attr:meta])* pub enum $name:ident {\n-        $($variant:ident = $e:expr,)*\n-    }) => {\n-        $(#[$attr])*\n-        pub enum $name {\n-            $($variant = $e),*\n-        }\n-\n-        impl $name {\n-            pub fn from_u32(u: u32) -> Option<$name> {\n-                $(if u == $name::$variant as u32 {\n-                    return Some($name::$variant)\n-                })*\n-                None\n-            }\n-        }\n-    };\n-    ($(#[$attr:meta])* pub enum $name:ident {\n-        $($variant:ident,)*\n-    }) => {\n-        $(#[$attr])*\n-        pub enum $name {\n-            $($variant,)*\n-        }\n-\n-        impl $name {\n-            pub fn from_u32(u: u32) -> Option<$name> {\n-                $(if u == $name::$variant as u32 {\n-                    return Some($name::$variant)\n-                })*\n-                None\n-            }\n-        }\n-    }\n-}\n-\n-pub mod lang_items;\n-mod target;\n-pub mod weak_lang_items;\n-\n-pub use lang_items::{LangItem, LanguageItems};\n-pub use target::{MethodKind, Target};\n-\n-pub trait HashStableContext: rustc_hir::HashStableContext {}"}, {"sha": "981ef7f8796d3d58e55870c1f1a502b94d2bbbd7", "filename": "src/librustc_passes/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2FCargo.toml?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -17,7 +17,6 @@ rustc_errors = { path = \"../librustc_errors\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_index = { path = \"../librustc_index\" }\n-rustc_lang_items = { path = \"../librustc_lang_items\" }\n rustc_session = { path = \"../librustc_session\" }\n rustc_target = { path = \"../librustc_target\" }\n syntax = { path = \"../libsyntax\" }"}, {"sha": "d5b0971811ef1747d982a668be4fd7ca8352bdf9", "filename": "src/librustc_passes/check_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_passes%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_passes%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_attr.rs?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -14,7 +14,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::DUMMY_HIR_ID;\n use rustc_hir::{self, HirId, Item, ItemKind, TraitItem};\n-use rustc_lang_items::{MethodKind, Target};\n+use rustc_hir::{MethodKind, Target};\n use rustc_session::lint::builtin::{CONFLICTING_REPR_HINTS, UNUSED_ATTRIBUTES};\n use rustc_span::symbol::sym;\n use rustc_span::Span;"}, {"sha": "5f5acc7fdf8150eddc480f25811f23ca502b8ce5", "filename": "src/librustc_passes/lang_items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_passes%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_passes%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flang_items.rs?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -16,8 +16,8 @@ use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n-use rustc_lang_items::lang_items::{extract, ITEM_REFS};\n-use rustc_lang_items::{LangItem, LanguageItems, Target};\n+use rustc_hir::lang_items::{extract, ITEM_REFS};\n+use rustc_hir::{LangItem, LanguageItems, Target};\n \n use rustc::ty::query::Providers;\n "}, {"sha": "55af437377853a6dbb94ac6f0ccf3119eb0c17c5", "filename": "src/librustc_passes/weak_lang_items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_passes%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b2385d40bfed00533b016e4685974b739c2da1/src%2Flibrustc_passes%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fweak_lang_items.rs?ref=d3b2385d40bfed00533b016e4685974b739c2da1", "patch": "@@ -10,7 +10,7 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n-use rustc_lang_items::weak_lang_items::WEAK_ITEMS_REFS;\n+use rustc_hir::weak_lang_items::WEAK_ITEMS_REFS;\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n \n@@ -95,7 +95,7 @@ impl<'a, 'tcx, 'v> Visitor<'v> for Context<'a, 'tcx> {\n     }\n \n     fn visit_foreign_item(&mut self, i: &hir::ForeignItem<'_>) {\n-        if let Some((lang_item, _)) = rustc_lang_items::lang_items::extract(&i.attrs) {\n+        if let Some((lang_item, _)) = hir::lang_items::extract(&i.attrs) {\n             self.register(lang_item, i.span);\n         }\n         intravisit::walk_foreign_item(self, i)"}]}