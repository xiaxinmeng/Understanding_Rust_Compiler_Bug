{"sha": "342dc21d2ceda92319e11937a553383e3e39d341", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MmRjMjFkMmNlZGE5MjMxOWUxMTkzN2E1NTMzODNlM2UzOWQzNDE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-17T00:44:08Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-17T01:22:14Z"}, "message": "Disconnect ports before draining them. Issue #1155", "tree": {"sha": "90597db8de7b1e1c8d01ff3ed135f8fdcfd24e2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90597db8de7b1e1c8d01ff3ed135f8fdcfd24e2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/342dc21d2ceda92319e11937a553383e3e39d341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/342dc21d2ceda92319e11937a553383e3e39d341", "html_url": "https://github.com/rust-lang/rust/commit/342dc21d2ceda92319e11937a553383e3e39d341", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/342dc21d2ceda92319e11937a553383e3e39d341/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "809ca13bfa79211aebeef3491f1553ee22fde45b", "url": "https://api.github.com/repos/rust-lang/rust/commits/809ca13bfa79211aebeef3491f1553ee22fde45b", "html_url": "https://github.com/rust-lang/rust/commit/809ca13bfa79211aebeef3491f1553ee22fde45b"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "32f01b38f28064ca72c7e601049aabb4a668786b", "filename": "src/lib/comm.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/342dc21d2ceda92319e11937a553383e3e39d341/src%2Flib%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/342dc21d2ceda92319e11937a553383e3e39d341/src%2Flib%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fcomm.rs?ref=342dc21d2ceda92319e11937a553383e3e39d341", "patch": "@@ -45,6 +45,7 @@ native mod rustrt {\n \n     fn new_port(unit_sz: uint) -> *rust_port;\n     fn del_port(po: *rust_port);\n+    fn rust_port_detach(po: *rust_port);\n     fn get_port_id(po: *rust_port) -> port_id;\n     fn rust_port_size(po: *rust_port) -> ctypes::size_t;\n }\n@@ -79,6 +80,9 @@ tag chan<uniq T> {\n }\n \n resource port_ptr<uniq T>(po: *rustrt::rust_port) {\n+    // Once the port is detached it's guaranteed not to receive further\n+    // messages\n+    rustrt::rust_port_detach(po);\n     // Drain the port so that all the still-enqueued items get dropped\n     while rustrt::rust_port_size(po) > 0u {\n         // FIXME: For some reason if we don't assign to something here"}, {"sha": "aed3eda7156d9a2455357c04b2e8b9205979fd13", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/342dc21d2ceda92319e11937a553383e3e39d341/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/342dc21d2ceda92319e11937a553383e3e39d341/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=342dc21d2ceda92319e11937a553383e3e39d341", "patch": "@@ -467,11 +467,24 @@ new_port(size_t unit_sz) {\n     return new (task->kernel, \"rust_port\") rust_port(task, unit_sz);\n }\n \n+extern \"C\" CDECL void\n+rust_port_detach(rust_port *port) {\n+    rust_task *task = rust_scheduler::get_task();\n+    LOG(task, comm, \"rust_port_detach(0x%\" PRIxPTR \")\", (uintptr_t) port);\n+    port->detach();\n+    // FIXME: Busy waiting until we're the only ref\n+    bool done = false;\n+    while (!done) {\n+        scoped_lock with(port->lock);\n+        done = port->ref_count == 1;\n+    }\n+}\n+\n extern \"C\" CDECL void\n del_port(rust_port *port) {\n     rust_task *task = rust_scheduler::get_task();\n     LOG(task, comm, \"del_port(0x%\" PRIxPTR \")\", (uintptr_t) port);\n-    scoped_lock with(task->lock);\n+    A(task->sched, port->ref_count == 1, \"Expected port ref_count == 1\");\n     port->deref();\n }\n "}, {"sha": "30d38369abf85150f684c0672fa834dea1e6d753", "filename": "src/rt/rust_port.cpp", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/342dc21d2ceda92319e11937a553383e3e39d341/src%2Frt%2Frust_port.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/342dc21d2ceda92319e11937a553383e3e39d341/src%2Frt%2Frust_port.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port.cpp?ref=342dc21d2ceda92319e11937a553383e3e39d341", "patch": "@@ -17,10 +17,17 @@ rust_port::rust_port(rust_task *task, size_t unit_sz)\n rust_port::~rust_port() {\n     LOG(task, comm, \"~rust_port 0x%\" PRIxPTR, (uintptr_t) this);\n \n-    task->release_port(id);\n     task->deref();\n }\n \n+void rust_port::detach() {\n+    I(task->sched, !task->lock.lock_held_by_current_thread());\n+    scoped_lock with(task->lock);\n+    {\n+        task->release_port(id);\n+    }\n+}\n+\n void rust_port::send(void *sptr) {\n     I(task->sched, !lock.lock_held_by_current_thread());\n     scoped_lock with(lock);"}, {"sha": "44bd686650dc8ab19f57053296e9b9ea468758f2", "filename": "src/rt/rust_port.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/342dc21d2ceda92319e11937a553383e3e39d341/src%2Frt%2Frust_port.h", "raw_url": "https://github.com/rust-lang/rust/raw/342dc21d2ceda92319e11937a553383e3e39d341/src%2Frt%2Frust_port.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port.h?ref=342dc21d2ceda92319e11937a553383e3e39d341", "patch": "@@ -20,6 +20,7 @@ class rust_port : public kernel_owned<rust_port>, public rust_cond {\n     void send(void *sptr);\n     bool receive(void *dptr);\n     size_t size();\n+    void detach();\n };\n \n //"}, {"sha": "f5751b58bc01ddb59d5be6280317c1d5f348970d", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/342dc21d2ceda92319e11937a553383e3e39d341/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/342dc21d2ceda92319e11937a553383e3e39d341/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=342dc21d2ceda92319e11937a553383e3e39d341", "patch": "@@ -34,6 +34,7 @@ rust_get_stdout\n rust_get_stderr\n rust_str_push\n rust_list_files\n+rust_port_detach\n rust_port_size\n rust_process_wait\n rust_ptr_eq"}, {"sha": "1cf62fa0aea9d7e5f2c90bd4e0557bf68949c4e6", "filename": "src/test/run-pass/task-comm-chan-cleanup4.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/342dc21d2ceda92319e11937a553383e3e39d341/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/342dc21d2ceda92319e11937a553383e3e39d341/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-cleanup4.rs?ref=342dc21d2ceda92319e11937a553383e3e39d341", "patch": "@@ -0,0 +1,27 @@\n+use std;\n+import std::int;\n+import std::comm;\n+import std::task;\n+\n+// We're trying to trigger a race between send and port destruction that\n+// results in the string not being freed\n+\n+fn starship(&&ch: std::comm::chan<str>) {\n+    int::range(0, 10) { |_i|\n+        comm::send(ch, \"pew pew\");\n+    }\n+}\n+\n+fn starbase(&&_args: ()) {\n+    int::range(0, 10) { |_i|\n+        let p = comm::port();\n+        task::spawn(comm::chan(p), starship);\n+        task::yield();\n+    }\n+}\n+\n+fn main() {\n+    int::range(0, 10) { |_i|\n+        task::spawn((), starbase);\n+    }\n+}\n\\ No newline at end of file"}]}