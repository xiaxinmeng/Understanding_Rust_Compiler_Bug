{"sha": "23d3b0ec57e5dde910d0fbb5dc84dcd9c0d62024", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzZDNiMGVjNTdlNWRkZTkxMGQwZmJiNWRjODRkY2Q5YzBkNjIwMjQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-13T23:53:35Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-13T23:53:35Z"}, "message": "rustc: Get ann_to_type_params() on board the ann_to_ty_param_substs_opt_and_ty() train", "tree": {"sha": "d3996916176cc3e031125c1790cb5e15d81e297f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3996916176cc3e031125c1790cb5e15d81e297f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23d3b0ec57e5dde910d0fbb5dc84dcd9c0d62024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23d3b0ec57e5dde910d0fbb5dc84dcd9c0d62024", "html_url": "https://github.com/rust-lang/rust/commit/23d3b0ec57e5dde910d0fbb5dc84dcd9c0d62024", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23d3b0ec57e5dde910d0fbb5dc84dcd9c0d62024/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0739849e9fe9013d87ec6bc7f026143a10079703", "url": "https://api.github.com/repos/rust-lang/rust/commits/0739849e9fe9013d87ec6bc7f026143a10079703", "html_url": "https://github.com/rust-lang/rust/commit/0739849e9fe9013d87ec6bc7f026143a10079703"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "34d62b7dae0305c66095c7b52e0240fc79088715", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/23d3b0ec57e5dde910d0fbb5dc84dcd9c0d62024/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d3b0ec57e5dde910d0fbb5dc84dcd9c0d62024/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=23d3b0ec57e5dde910d0fbb5dc84dcd9c0d62024", "patch": "@@ -1468,6 +1468,12 @@ fn ann_to_type_params(&node_type_table ntt, &ast::ann ann) -> vec[t] {\n     }\n }\n \n+fn ann_has_type_params(&node_type_table ntt, &ast::ann ann) -> bool {\n+    auto tpt = ann_to_ty_param_substs_opt_and_ty(ntt, ann);\n+    ret !option::is_none[vec[t]](tpt._0);\n+}\n+\n+\n // Returns the type of an annotation, with type parameter substitutions\n // performed if applicable.\n fn ann_to_monotype(ctxt cx, &node_type_table ntt, ast::ann a) -> t {\n@@ -1712,13 +1718,7 @@ fn expr_ty_params_and_ty(&ctxt cx, &node_type_table ntt, &@ast::expr expr)\n }\n \n fn expr_has_ty_params(&node_type_table ntt, &@ast::expr expr) -> bool {\n-    // FIXME: Rewrite using complex patterns when they're trustworthy.\n-    alt (expr_ann(expr)) {\n-        case (ast::ann_none(_)) { fail; }\n-        case (ast::ann_type(_, _, ?tps_opt, _)) {\n-            ret !option::is_none[vec[t]](tps_opt);\n-        }\n-    }\n+    ret ann_has_type_params(ntt, expr_ann(expr));\n }\n \n // FIXME: At the moment this works only for call, bind, and path expressions."}]}