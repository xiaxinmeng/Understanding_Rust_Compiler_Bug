{"sha": "66d64babedbe37e94e80e1812f97847def743f4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZDY0YmFiZWRiZTM3ZTk0ZTgwZTE4MTJmOTc4NDdkZWY3NDNmNGQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-23T21:38:47Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-27T16:12:49Z"}, "message": "simplify const_to_allocation_provider because it is used for statics only", "tree": {"sha": "5729915922662f10f5c47259ea7c7d211d7d352a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5729915922662f10f5c47259ea7c7d211d7d352a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66d64babedbe37e94e80e1812f97847def743f4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66d64babedbe37e94e80e1812f97847def743f4d", "html_url": "https://github.com/rust-lang/rust/commit/66d64babedbe37e94e80e1812f97847def743f4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66d64babedbe37e94e80e1812f97847def743f4d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "286fc5caa24520a85907bd2c28414ec387a7e7ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/286fc5caa24520a85907bd2c28414ec387a7e7ca", "html_url": "https://github.com/rust-lang/rust/commit/286fc5caa24520a85907bd2c28414ec387a7e7ca"}], "stats": {"total": 22, "additions": 5, "deletions": 17}, "files": [{"sha": "ec3e46f7067e63ed8911d11ec10d0dca2349faef", "filename": "src/librustc_mir/interpret/const_eval.rs", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/66d64babedbe37e94e80e1812f97847def743f4d/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d64babedbe37e94e80e1812f97847def743f4d/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs?ref=66d64babedbe37e94e80e1812f97847def743f4d", "patch": "@@ -21,7 +21,6 @@ use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n \n use syntax::ast::Mutability;\n use syntax::source_map::Span;\n-use syntax::source_map::DUMMY_SP;\n \n use rustc::mir::interpret::{\n     EvalResult, EvalError, EvalErrorKind, GlobalId,\n@@ -390,30 +389,19 @@ pub fn const_variant_index<'a, 'tcx>(\n }\n \n pub fn const_to_allocation_provider<'a, 'tcx>(\n-    tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+    _tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     val: &'tcx ty::Const<'tcx>,\n ) -> &'tcx Allocation {\n+    // FIXME: This really does not need to be a query.  Instead, we should have a query for statics\n+    // that returns an allocation directly (or an `AllocId`?), after doing a sanity check of the\n+    // value and centralizing error reporting.\n     match val.val {\n         ConstValue::ByRef(_, alloc, offset) => {\n             assert_eq!(offset.bytes(), 0);\n             return alloc;\n         },\n-        _ => ()\n+        _ => bug!(\"const_to_allocation called on non-static\"),\n     }\n-    let result = || -> EvalResult<'tcx, &'tcx Allocation> {\n-        let mut ecx = EvalContext::new(\n-            tcx.at(DUMMY_SP),\n-            ty::ParamEnv::reveal_all(),\n-            CompileTimeEvaluator,\n-            ());\n-        let op = const_to_op(&mut ecx, val)?;\n-        // Make a new allocation, copy things there\n-        let ptr = ecx.allocate(op.layout, MemoryKind::Stack)?;\n-        ecx.copy_op(op, ptr.into())?;\n-        let alloc = ecx.memory.get(ptr.to_ptr()?.alloc_id)?;\n-        Ok(tcx.intern_const_alloc(alloc.clone()))\n-    };\n-    result().expect(\"unable to convert ConstValue to Allocation\")\n }\n \n pub fn const_eval_provider<'a, 'tcx>("}]}