{"sha": "84a43f0e3aa9b76bc9cef952d25b41ed1e5e0a94", "node_id": "C_kwDOAAsO6NoAKDg0YTQzZjBlM2FhOWI3NmJjOWNlZjk1MmQyNWI0MWVkMWU1ZTBhOTQ", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-04-25T07:42:09Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-05-12T10:25:06Z"}, "message": "Rewrite nested `if` conditions into a single match", "tree": {"sha": "be787ce369b20f2900be15cb773e62f1021e10f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be787ce369b20f2900be15cb773e62f1021e10f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84a43f0e3aa9b76bc9cef952d25b41ed1e5e0a94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84a43f0e3aa9b76bc9cef952d25b41ed1e5e0a94", "html_url": "https://github.com/rust-lang/rust/commit/84a43f0e3aa9b76bc9cef952d25b41ed1e5e0a94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84a43f0e3aa9b76bc9cef952d25b41ed1e5e0a94/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31ae7c46bddd917886f88bd3ba38f39cd9b51cd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/31ae7c46bddd917886f88bd3ba38f39cd9b51cd0", "html_url": "https://github.com/rust-lang/rust/commit/31ae7c46bddd917886f88bd3ba38f39cd9b51cd0"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "97e1f69057eaa9ddcf3d383b1ea34d55b659ab74", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/84a43f0e3aa9b76bc9cef952d25b41ed1e5e0a94/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a43f0e3aa9b76bc9cef952d25b41ed1e5e0a94/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=84a43f0e3aa9b76bc9cef952d25b41ed1e5e0a94", "patch": "@@ -473,16 +473,17 @@ impl<'tcx> TyCtxt<'tcx> {\n         let mut seen = GrowableBitSet::default();\n         for arg in substs {\n             match arg.unpack() {\n-                GenericArgKind::Lifetime(lt) => {\n-                    if ignore_regions == CheckRegions::OnlyEarlyBound {\n-                        let ty::ReEarlyBound(p) = lt.kind() else {\n-                            return Err(NotUniqueParam::NotParam(lt.into()))\n-                        };\n+                GenericArgKind::Lifetime(lt) => match (ignore_regions, lt.kind()) {\n+                    (CheckRegions::OnlyEarlyBound, ty::ReEarlyBound(p)) => {\n                         if !seen.insert(p.index) {\n                             return Err(NotUniqueParam::DuplicateParam(lt.into()));\n                         }\n                     }\n-                }\n+                    (CheckRegions::OnlyEarlyBound, _) => {\n+                        return Err(NotUniqueParam::NotParam(lt.into()));\n+                    }\n+                    (CheckRegions::No, _) => {}\n+                },\n                 GenericArgKind::Type(t) => match t.kind() {\n                     ty::Param(p) => {\n                         if !seen.insert(p.index) {"}]}