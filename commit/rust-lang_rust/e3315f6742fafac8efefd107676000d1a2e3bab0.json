{"sha": "e3315f6742fafac8efefd107676000d1a2e3bab0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMzE1ZjY3NDJmYWZhYzhlZmVmZDEwNzY3NjAwMGQxYTJlM2JhYjA=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-10T00:54:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-10T00:54:18Z"}, "message": "Rollup merge of #68976 - ecstatic-morse:const-non-zero, r=dtolnay\n\nMake `num::NonZeroX::new` an unstable `const fn`\n\ncc #53718\n\nThese require `#[feature(const_if_match)]`, meaning they must remain unstable for the time being.", "tree": {"sha": "7aa3f59e333f4808cd344a3fbde2d20939960459", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aa3f59e333f4808cd344a3fbde2d20939960459"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3315f6742fafac8efefd107676000d1a2e3bab0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeQKm6CRBK7hj4Ov3rIwAAdHIIAHX0oeTMw+bVqAy20Vl3HhAn\nzBff2lhpfbqBO9++jVj9n2tryEFHpa682XhcJbAQ6E9HwmESTlwkVBkMxVVNQ614\nwtMSXzvzI56aiQvUeS0DM5xdeQfWqkyLKIv+XsKd9wdnlyau3VNBfgcB5vHeeYCo\nT1w+uTpTq2dgWWWMklsQxb1f5NT3ay1mwSmdoff8skqoxvIC7ekP/u77rTAp0T3a\ncai7PqkIaaHDN2ApmA2t0zKBw7qaoRjo533gUo67O83Q2yKl/e+DUw2QGaTLgQys\nggoao0AN7S4cfcCuahS2Yx8r7d+TaCwcHbqlf5i9BOoZQvtlszn9JdJzA7FFjwk=\n=s+T/\n-----END PGP SIGNATURE-----\n", "payload": "tree 7aa3f59e333f4808cd344a3fbde2d20939960459\nparent b3cfb97d5c03996d5cd01c287ec2aa6760aa529a\nparent 0755c41ae26af20c940a80b3c1f686ab5916e655\nauthor Dylan DPC <dylan.dpc@gmail.com> 1581296058 +0100\ncommitter GitHub <noreply@github.com> 1581296058 +0100\n\nRollup merge of #68976 - ecstatic-morse:const-non-zero, r=dtolnay\n\nMake `num::NonZeroX::new` an unstable `const fn`\n\ncc #53718\n\nThese require `#[feature(const_if_match)]`, meaning they must remain unstable for the time being.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3315f6742fafac8efefd107676000d1a2e3bab0", "html_url": "https://github.com/rust-lang/rust/commit/e3315f6742fafac8efefd107676000d1a2e3bab0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3315f6742fafac8efefd107676000d1a2e3bab0/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3cfb97d5c03996d5cd01c287ec2aa6760aa529a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3cfb97d5c03996d5cd01c287ec2aa6760aa529a", "html_url": "https://github.com/rust-lang/rust/commit/b3cfb97d5c03996d5cd01c287ec2aa6760aa529a"}, {"sha": "0755c41ae26af20c940a80b3c1f686ab5916e655", "url": "https://api.github.com/repos/rust-lang/rust/commits/0755c41ae26af20c940a80b3c1f686ab5916e655", "html_url": "https://github.com/rust-lang/rust/commit/0755c41ae26af20c940a80b3c1f686ab5916e655"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "3ae8f0f7870c1a6bccad5bcbd63eb3d16b34d45f", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3315f6742fafac8efefd107676000d1a2e3bab0/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3315f6742fafac8efefd107676000d1a2e3bab0/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=e3315f6742fafac8efefd107676000d1a2e3bab0", "patch": "@@ -69,8 +69,9 @@ assert_eq!(size_of::<Option<core::num::\", stringify!($Ty), \">>(), size_of::<\", s\n \n                 /// Creates a non-zero if the given value is not zero.\n                 #[$stability]\n+                #[rustc_const_unstable(feature = \"const_nonzero_int_methods\", issue = \"53718\")]\n                 #[inline]\n-                pub fn new(n: $Int) -> Option<Self> {\n+                pub const fn new(n: $Int) -> Option<Self> {\n                     if n != 0 {\n                         // SAFETY: we just checked that there's no `0`\n                         Some(unsafe { Self(n) })"}, {"sha": "2160bad48074dc9117ad9c1ddc2bea2f4a904eaf", "filename": "src/test/ui/consts/const-nonzero.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e3315f6742fafac8efefd107676000d1a2e3bab0/src%2Ftest%2Fui%2Fconsts%2Fconst-nonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3315f6742fafac8efefd107676000d1a2e3bab0/src%2Ftest%2Fui%2Fconsts%2Fconst-nonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-nonzero.rs?ref=e3315f6742fafac8efefd107676000d1a2e3bab0", "patch": "@@ -1,9 +1,18 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// run-pass\n+\n+#![feature(const_nonzero_int_methods)]\n \n use std::num::NonZeroU8;\n \n const X: NonZeroU8 = unsafe { NonZeroU8::new_unchecked(5) };\n const Y: u8 = X.get();\n \n+const ZERO: Option<NonZeroU8> = NonZeroU8::new(0);\n+const ONE: Option<NonZeroU8> = NonZeroU8::new(1);\n+\n fn main() {\n+    assert_eq!(Y, 5);\n+\n+    assert!(ZERO.is_none());\n+    assert_eq!(ONE.unwrap().get(), 1);\n }"}]}