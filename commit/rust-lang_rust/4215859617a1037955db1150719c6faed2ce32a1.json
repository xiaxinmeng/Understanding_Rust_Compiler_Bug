{"sha": "4215859617a1037955db1150719c6faed2ce32a1", "node_id": "C_kwDOAAsO6NoAKDQyMTU4NTk2MTdhMTAzNzk1NWRiMTE1MDcxOWM2ZmFlZDJjZTMyYTE", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2023-06-14T19:57:23Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2023-06-14T20:08:04Z"}, "message": "make const-prop use cached RPO", "tree": {"sha": "8814f44ae17877957d03b53136d54c23cdf49d14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8814f44ae17877957d03b53136d54c23cdf49d14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4215859617a1037955db1150719c6faed2ce32a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4215859617a1037955db1150719c6faed2ce32a1", "html_url": "https://github.com/rust-lang/rust/commit/4215859617a1037955db1150719c6faed2ce32a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4215859617a1037955db1150719c6faed2ce32a1/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "066d38190bb5e086d7ab565bc46d71b49c6d5217", "url": "https://api.github.com/repos/rust-lang/rust/commits/066d38190bb5e086d7ab565bc46d71b49c6d5217", "html_url": "https://github.com/rust-lang/rust/commit/066d38190bb5e086d7ab565bc46d71b49c6d5217"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2f2c7357b006959939c541654357bbf570b96bbc", "filename": "compiler/rustc_mir_transform/src/const_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4215859617a1037955db1150719c6faed2ce32a1/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4215859617a1037955db1150719c6faed2ce32a1/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs?ref=4215859617a1037955db1150719c6faed2ce32a1", "patch": "@@ -118,8 +118,8 @@ impl<'tcx> MirPass<'tcx> for ConstProp {\n \n         // Traverse the body in reverse post-order, to ensure that `FullConstProp` locals are\n         // assigned before being read.\n-        let postorder = body.basic_blocks.postorder().to_vec();\n-        for bb in postorder.into_iter().rev() {\n+        let rpo = body.basic_blocks.reverse_postorder().to_vec();\n+        for bb in rpo {\n             let data = &mut body.basic_blocks.as_mut_preserves_cfg()[bb];\n             optimization_finder.visit_basic_block_data(bb, data);\n         }"}]}