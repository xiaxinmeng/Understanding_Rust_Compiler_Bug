{"sha": "30769598a406a30f05d4b8a72430824708bdc73f", "node_id": "C_kwDOAAsO6NoAKDMwNzY5NTk4YTQwNmEzMGYwNWQ0YjhhNzI0MzA4MjQ3MDhiZGM3M2Y", "commit": {"author": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-21T11:57:36Z"}, "committer": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-21T11:57:36Z"}, "message": "Move version string to RustcInfo, read '.rustc' section only once", "tree": {"sha": "740afe350617537d5e8e163c4fc7663853ca6c50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/740afe350617537d5e8e163c4fc7663853ca6c50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30769598a406a30f05d4b8a72430824708bdc73f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30769598a406a30f05d4b8a72430824708bdc73f", "html_url": "https://github.com/rust-lang/rust/commit/30769598a406a30f05d4b8a72430824708bdc73f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30769598a406a30f05d4b8a72430824708bdc73f/comments", "author": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbaf4daca02991f9b6ee90051248034a461bf91a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbaf4daca02991f9b6ee90051248034a461bf91a", "html_url": "https://github.com/rust-lang/rust/commit/bbaf4daca02991f9b6ee90051248034a461bf91a"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "030531b80d7bb0d7b511a6e1ba00016561a846c9", "filename": "crates/proc-macro-api/src/version.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/30769598a406a30f05d4b8a72430824708bdc73f/crates%2Fproc-macro-api%2Fsrc%2Fversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30769598a406a30f05d4b8a72430824708bdc73f/crates%2Fproc-macro-api%2Fsrc%2Fversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-api%2Fsrc%2Fversion.rs?ref=30769598a406a30f05d4b8a72430824708bdc73f", "patch": "@@ -16,6 +16,8 @@ pub struct RustCInfo {\n     pub channel: String,\n     pub commit: Option<String>,\n     pub date: Option<String>,\n+    // something like \"rustc 1.58.1 (db9d1b20b 2022-01-20)\"\n+    pub version_string: String,\n }\n \n /// Read rustc dylib information\n@@ -68,7 +70,7 @@ pub fn read_dylib_info(dylib_path: &AbsPath) -> io::Result<RustCInfo> {\n     }\n     let version = (version_numbers[0], version_numbers[1], version_numbers[2]);\n \n-    Ok(RustCInfo { version, channel, commit, date })\n+    Ok(RustCInfo { version, channel, commit, date, version_string: ver_str })\n }\n \n /// This is used inside read_version() to locate the \".rustc\" section"}, {"sha": "bcf3f1184cf6515dd8844f54833eb25e5ce0dd71", "filename": "crates/proc-macro-srv/src/abis/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/30769598a406a30f05d4b8a72430824708bdc73f/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30769598a406a30f05d4b8a72430824708bdc73f/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fmod.rs?ref=30769598a406a30f05d4b8a72430824708bdc73f", "patch": "@@ -77,14 +77,13 @@ impl Abi {\n         lib: &Library,\n         symbol_name: String,\n         info: RustCInfo,\n-        #[cfg_attr(not(feature = \"sysroot-abi\"), allow(unused_variables))] version_string: String,\n     ) -> Result<Abi, LoadProcMacroDylibError> {\n         // the sysroot ABI relies on `extern proc_macro` with unstable features,\n         // instead of a snapshot of the proc macro bridge's source code. it's only\n         // enabled if we have an exact version match.\n         #[cfg(feature = \"sysroot-abi\")]\n         {\n-            if version_string == RUSTC_VERSION_STRING {\n+            if info.version_string == RUSTC_VERSION_STRING {\n                 let inner = unsafe { Abi_Sysroot::from_lib(lib, symbol_name) }?;\n                 return Ok(Abi::AbiSysroot(inner));\n             }\n@@ -104,7 +103,7 @@ impl Abi {\n                 } else {\n                     panic!(\n                         \"sysroot ABI mismatch: dylib rustc version (read from .rustc section): {:?} != proc-macro-srv version (read from 'rustc --version'): {:?}\",\n-                        version_string, RUSTC_VERSION_STRING\n+                        info.version_string, RUSTC_VERSION_STRING\n                     );\n                 }\n             }"}, {"sha": "2b6c070fece3f746c0ca48e6c2940e8c801d5ea1", "filename": "crates/proc-macro-srv/src/dylib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/30769598a406a30f05d4b8a72430824708bdc73f/crates%2Fproc-macro-srv%2Fsrc%2Fdylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30769598a406a30f05d4b8a72430824708bdc73f/crates%2Fproc-macro-srv%2Fsrc%2Fdylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fdylib.rs?ref=30769598a406a30f05d4b8a72430824708bdc73f", "patch": "@@ -12,7 +12,7 @@ use libloading::Library;\n use memmap2::Mmap;\n use object::Object;\n use paths::AbsPath;\n-use proc_macro_api::{read_dylib_info, read_version, ProcMacroKind};\n+use proc_macro_api::{read_dylib_info, ProcMacroKind};\n \n use super::abis::Abi;\n \n@@ -122,10 +122,9 @@ impl ProcMacroLibraryLibloading {\n             invalid_data_err(format!(\"expected an absolute path, got {}\", file.display()))\n         })?;\n         let version_info = read_dylib_info(abs_file)?;\n-        let version_string = read_version(abs_file)?;\n \n         let lib = load_library(file).map_err(invalid_data_err)?;\n-        let abi = Abi::from_lib(&lib, symbol_name, version_info, version_string)?;\n+        let abi = Abi::from_lib(&lib, symbol_name, version_info)?;\n         Ok(ProcMacroLibraryLibloading { _lib: lib, abi })\n     }\n }"}]}