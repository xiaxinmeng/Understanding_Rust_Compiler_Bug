{"sha": "1dd11c717922fb38e87644606f9fbc9d29ee4995", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkZDExYzcxNzkyMmZiMzhlODc2NDQ2MDZmOWZiYzlkMjllZTQ5OTU=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-29T03:30:50Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-29T14:05:54Z"}, "message": "core: add LinearMap::with_capacity", "tree": {"sha": "6dae434bc0a7c8f180b8bf103b2c3f38994209fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dae434bc0a7c8f180b8bf103b2c3f38994209fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dd11c717922fb38e87644606f9fbc9d29ee4995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dd11c717922fb38e87644606f9fbc9d29ee4995", "html_url": "https://github.com/rust-lang/rust/commit/1dd11c717922fb38e87644606f9fbc9d29ee4995", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dd11c717922fb38e87644606f9fbc9d29ee4995/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c658fabedcb4d8ca0d8c6e95184bc4ec0ae45aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c658fabedcb4d8ca0d8c6e95184bc4ec0ae45aa", "html_url": "https://github.com/rust-lang/rust/commit/2c658fabedcb4d8ca0d8c6e95184bc4ec0ae45aa"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "d6684b04aa373d4e35e482f0582c0aa3ff4ca564", "filename": "src/libcore/hashmap.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1dd11c717922fb38e87644606f9fbc9d29ee4995/src%2Flibcore%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dd11c717922fb38e87644606f9fbc9d29ee4995/src%2Flibcore%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhashmap.rs?ref=1dd11c717922fb38e87644606f9fbc9d29ee4995", "patch": "@@ -393,10 +393,16 @@ pub mod linear {\n         }\n     }\n \n-    pub impl<K:Hash + IterBytes + Eq,V> LinearMap<K, V> {\n+    pub impl<K: Hash + IterBytes + Eq, V> LinearMap<K, V> {\n         /// Create an empty LinearMap\n         fn new() -> LinearMap<K, V> {\n-            linear_map_with_capacity(INITIAL_CAPACITY)\n+            LinearMap::with_capacity(INITIAL_CAPACITY)\n+        }\n+\n+        /// Create an empty LinearMap with space for at least `n` elements in\n+        /// the hash table.\n+        fn with_capacity(capacity: uint) -> LinearMap<K, V> {\n+            linear_map_with_capacity(capacity)\n         }\n \n         /// Reserve space for at least `n` elements in the hash table.\n@@ -652,7 +658,15 @@ pub mod linear {\n \n     pub impl <T:Hash + IterBytes + Eq> LinearSet<T> {\n         /// Create an empty LinearSet\n-        fn new() -> LinearSet<T> { LinearSet{map: LinearMap::new()} }\n+        fn new() -> LinearSet<T> {\n+            LinearSet::with_capacity(INITIAL_CAPACITY)\n+        }\n+\n+        /// Create an empty LinearSet with space for at least `n` elements in\n+        /// the hash table.\n+        fn with_capacity(capacity: uint) -> LinearSet<T> {\n+            LinearSet { map: LinearMap::with_capacity(capacity) }\n+        }\n \n         /// Reserve space for at least `n` elements in the hash table.\n         fn reserve_at_least(&mut self, n: uint) {"}]}