{"sha": "5afb3d20aa30deb522401cdeef7656539e767fc2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhZmIzZDIwYWEzMGRlYjUyMjQwMWNkZWVmNzY1NjUzOWU3NjdmYzI=", "commit": {"author": {"name": "Birunthan Mohanathas", "email": "birunthan@mohanathas.com", "date": "2013-07-22T18:22:22Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-24T13:45:20Z"}, "message": "Disallow non-comma-delimited arguments to fmt! and bytes!\nCloses #4982.", "tree": {"sha": "dbb7c6e3961d98b827859fa793fcb7f5bb949592", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbb7c6e3961d98b827859fa793fcb7f5bb949592"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5afb3d20aa30deb522401cdeef7656539e767fc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5afb3d20aa30deb522401cdeef7656539e767fc2", "html_url": "https://github.com/rust-lang/rust/commit/5afb3d20aa30deb522401cdeef7656539e767fc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5afb3d20aa30deb522401cdeef7656539e767fc2/comments", "author": {"login": "poiru", "id": 1319028, "node_id": "MDQ6VXNlcjEzMTkwMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1319028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poiru", "html_url": "https://github.com/poiru", "followers_url": "https://api.github.com/users/poiru/followers", "following_url": "https://api.github.com/users/poiru/following{/other_user}", "gists_url": "https://api.github.com/users/poiru/gists{/gist_id}", "starred_url": "https://api.github.com/users/poiru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poiru/subscriptions", "organizations_url": "https://api.github.com/users/poiru/orgs", "repos_url": "https://api.github.com/users/poiru/repos", "events_url": "https://api.github.com/users/poiru/events{/privacy}", "received_events_url": "https://api.github.com/users/poiru/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c88e46d4d569b4fa0dfa995defecbe5cde62650", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c88e46d4d569b4fa0dfa995defecbe5cde62650", "html_url": "https://github.com/rust-lang/rust/commit/6c88e46d4d569b4fa0dfa995defecbe5cde62650"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "fc34e873ef95eb2942d177f038ece87d28cbe0a3", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5afb3d20aa30deb522401cdeef7656539e767fc2/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5afb3d20aa30deb522401cdeef7656539e767fc2/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=5afb3d20aa30deb522401cdeef7656539e767fc2", "patch": "@@ -232,7 +232,7 @@ impl<'self> CheckLoanCtxt<'self> {\n                     self.bccx.span_err(\n                         new_loan.span,\n                         fmt!(\"cannot borrow `%s` as %s because \\\n-                              it is also borrowed as %s\"\n+                              it is also borrowed as %s\",\n                              self.bccx.loan_path_to_str(new_loan.loan_path),\n                              self.bccx.mut_to_str(new_loan.mutbl),\n                              self.bccx.mut_to_str(old_loan.mutbl)));\n@@ -320,7 +320,7 @@ impl<'self> CheckLoanCtxt<'self> {\n         // Otherwise, just a plain error.\n         self.bccx.span_err(\n             expr.span,\n-            fmt!(\"cannot assign to %s %s\"\n+            fmt!(\"cannot assign to %s %s\",\n                  cmt.mutbl.to_user_str(),\n                  self.bccx.cmt_to_str(cmt)));\n         return;"}, {"sha": "a5c8f2a235ed91a0af5e2789b67975c01cb84997", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5afb3d20aa30deb522401cdeef7656539e767fc2/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5afb3d20aa30deb522401cdeef7656539e767fc2/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=5afb3d20aa30deb522401cdeef7656539e767fc2", "patch": "@@ -357,15 +357,16 @@ pub fn get_single_str_from_tts(cx: @ExtCtxt,\n     }\n }\n \n-pub fn get_exprs_from_tts(cx: @ExtCtxt, tts: &[ast::token_tree])\n-                       -> ~[@ast::expr] {\n+pub fn get_exprs_from_tts(cx: @ExtCtxt,\n+                          sp: span,\n+                          tts: &[ast::token_tree]) -> ~[@ast::expr] {\n     let p = parse::new_parser_from_tts(cx.parse_sess(),\n                                        cx.cfg(),\n                                        tts.to_owned());\n     let mut es = ~[];\n     while *p.token != token::EOF {\n-        if es.len() != 0 {\n-            p.eat(&token::COMMA);\n+        if es.len() != 0 && !p.eat(&token::COMMA) {\n+            cx.span_fatal(sp, \"expected token: `,`\");\n         }\n         es.push(p.parse_expr());\n     }"}, {"sha": "2092c45074eb638e4cca2edb184a64dedd952ff9", "filename": "src/libsyntax/ext/bytes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5afb3d20aa30deb522401cdeef7656539e767fc2/src%2Flibsyntax%2Fext%2Fbytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5afb3d20aa30deb522401cdeef7656539e767fc2/src%2Flibsyntax%2Fext%2Fbytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbytes.rs?ref=5afb3d20aa30deb522401cdeef7656539e767fc2", "patch": "@@ -18,7 +18,7 @@ use ext::build::AstBuilder;\n \n pub fn expand_syntax_ext(cx: @ExtCtxt, sp: span, tts: &[ast::token_tree]) -> base::MacResult {\n     // Gather all argument expressions\n-    let exprs = get_exprs_from_tts(cx, tts);\n+    let exprs = get_exprs_from_tts(cx, sp, tts);\n     let mut bytes = ~[];\n \n     for exprs.iter().advance |expr| {"}, {"sha": "737127fcae73d9ee2739440122b16713e851c65d", "filename": "src/libsyntax/ext/fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5afb3d20aa30deb522401cdeef7656539e767fc2/src%2Flibsyntax%2Fext%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5afb3d20aa30deb522401cdeef7656539e767fc2/src%2Flibsyntax%2Fext%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ffmt.rs?ref=5afb3d20aa30deb522401cdeef7656539e767fc2", "patch": "@@ -26,7 +26,7 @@ use parse::token::{str_to_ident};\n \n pub fn expand_syntax_ext(cx: @ExtCtxt, sp: span, tts: &[ast::token_tree])\n     -> base::MacResult {\n-    let args = get_exprs_from_tts(cx, tts);\n+    let args = get_exprs_from_tts(cx, sp, tts);\n     if args.len() == 0 {\n         cx.span_fatal(sp, \"fmt! takes at least 1 argument.\");\n     }"}]}