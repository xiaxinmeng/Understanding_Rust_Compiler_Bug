{"sha": "9138d3bb80e2368062c58fad19cbd02ee65e7197", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMzhkM2JiODBlMjM2ODA2MmM1OGZhZDE5Y2JkMDJlZTY1ZTcxOTc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-03T10:47:07Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-03T10:47:07Z"}, "message": "when Miri tests are not passing, do not add Miri component", "tree": {"sha": "6806f7c7b1457b2798c8129b78ed15bad07caafd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6806f7c7b1457b2798c8129b78ed15bad07caafd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9138d3bb80e2368062c58fad19cbd02ee65e7197", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9138d3bb80e2368062c58fad19cbd02ee65e7197", "html_url": "https://github.com/rust-lang/rust/commit/9138d3bb80e2368062c58fad19cbd02ee65e7197", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9138d3bb80e2368062c58fad19cbd02ee65e7197/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c1b220fd747bf244f04b380e4d4ae005068f706", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c1b220fd747bf244f04b380e4d4ae005068f706", "html_url": "https://github.com/rust-lang/rust/commit/6c1b220fd747bf244f04b380e4d4ae005068f706"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "873f5da0537872ab96b6201b267aef47c70ca812", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9138d3bb80e2368062c58fad19cbd02ee65e7197/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9138d3bb80e2368062c58fad19cbd02ee65e7197/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9138d3bb80e2368062c58fad19cbd02ee65e7197", "patch": "@@ -208,6 +208,7 @@ name = \"build-manifest\"\n version = \"0.1.0\"\n dependencies = [\n  \"serde\",\n+ \"serde_json\",\n  \"toml\",\n ]\n "}, {"sha": "0bbbabd29989ebce3b5c749a1272be2b9bb5d6ff", "filename": "src/tools/build-manifest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9138d3bb80e2368062c58fad19cbd02ee65e7197/src%2Ftools%2Fbuild-manifest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9138d3bb80e2368062c58fad19cbd02ee65e7197/src%2Ftools%2Fbuild-manifest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2FCargo.toml?ref=9138d3bb80e2368062c58fad19cbd02ee65e7197", "patch": "@@ -7,3 +7,4 @@ edition = \"2018\"\n [dependencies]\n toml = \"0.5\"\n serde = { version = \"1.0\", features = [\"derive\"] }\n+serde_json = \"1.0\""}, {"sha": "afe170fe9032b6b91f9cde1091935b550dcb1975", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9138d3bb80e2368062c58fad19cbd02ee65e7197/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9138d3bb80e2368062c58fad19cbd02ee65e7197/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=9138d3bb80e2368062c58fad19cbd02ee65e7197", "patch": "@@ -11,10 +11,11 @@ use serde::Serialize;\n \n use std::collections::BTreeMap;\n use std::env;\n-use std::fs;\n+use std::fs::{self, File};\n use std::io::{self, Read, Write};\n use std::path::{PathBuf, Path};\n use std::process::{Command, Stdio};\n+use std::collections::HashMap;\n \n static HOSTS: &[&str] = &[\n     \"aarch64-unknown-linux-gnu\",\n@@ -366,6 +367,7 @@ impl Builder {\n         self.lldb_git_commit_hash = self.git_commit_hash(\"lldb\", \"x86_64-unknown-linux-gnu\");\n         self.miri_git_commit_hash = self.git_commit_hash(\"miri\", \"x86_64-unknown-linux-gnu\");\n \n+        self.check_toolstate();\n         self.digest_and_sign();\n         let manifest = self.build_manifest();\n         self.write_channel_files(&self.rust_release, &manifest);\n@@ -375,6 +377,22 @@ impl Builder {\n         }\n     }\n \n+    /// If a tool does not pass its tests, don't ship it.\n+    /// Right now, we do this only for Miri.\n+    fn check_toolstate(&mut self) {\n+        // Get the toolstate for this rust revision.\n+        let toolstates = File::open(self.input.join(\"toolstates-linux.json\"))\n+            .expect(\"failed to open toolstates file\");\n+        let toolstates: HashMap<String, String> = serde_json::from_reader(&toolstates)\n+            .expect(\"toolstates file contains malformed JSON\");\n+        // Mark some tools as missing based on toolstate.\n+        if toolstates.get(\"miri\").map(|s| &*s as &str) != Some(\"test-pass\") {\n+            println!(\"Miri tests are not passing, removing component\");\n+            self.miri_version = None;\n+            self.miri_git_commit_hash = None;\n+        }\n+    }\n+\n     /// Hash all files, compute their signatures, and collect the hashes in `self.digests`.\n     fn digest_and_sign(&mut self) {\n         for file in t!(self.input.read_dir()).map(|e| t!(e).path()) {"}]}