{"sha": "434c7da6eae28108bf8717977caa330b20b994e1", "node_id": "C_kwDOAAsO6NoAKDQzNGM3ZGE2ZWFlMjgxMDhiZjg3MTc5NzdjYWEzMzBiMjBiOTk0ZTE", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-02T10:12:24Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-10T08:09:50Z"}, "message": "only expect lb lt for fn calls in mir typeck", "tree": {"sha": "94f478dc5700debf3bec742447244427bb684ae4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94f478dc5700debf3bec742447244427bb684ae4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/434c7da6eae28108bf8717977caa330b20b994e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/434c7da6eae28108bf8717977caa330b20b994e1", "html_url": "https://github.com/rust-lang/rust/commit/434c7da6eae28108bf8717977caa330b20b994e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/434c7da6eae28108bf8717977caa330b20b994e1/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a0cb6ae7d3fd7ec3e3fd9986a5f90b91d03f5a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a0cb6ae7d3fd7ec3e3fd9986a5f90b91d03f5a4", "html_url": "https://github.com/rust-lang/rust/commit/8a0cb6ae7d3fd7ec3e3fd9986a5f90b91d03f5a4"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "e405baf7575dd1c518009555a923df3d7ca387da", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/434c7da6eae28108bf8717977caa330b20b994e1/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/434c7da6eae28108bf8717977caa330b20b994e1/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=434c7da6eae28108bf8717977caa330b20b994e1", "patch": "@@ -20,7 +20,7 @@ use rustc_infer::infer::outlives::env::RegionBoundPairs;\n use rustc_infer::infer::region_constraints::RegionConstraintData;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::{\n-    InferCtxt, InferOk, LateBoundRegionConversionTime, NllRegionVariableOrigin,\n+    InferCtxt, InferOk, LateBoundRegion, LateBoundRegionConversionTime, NllRegionVariableOrigin,\n };\n use rustc_middle::mir::tcx::PlaceTy;\n use rustc_middle::mir::visit::{NonMutatingUseContext, PlaceContext, Visitor};\n@@ -1436,11 +1436,13 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n                         return;\n                     }\n                 };\n-                let (sig, map) = self.infcx.replace_bound_vars_with_fresh_vars(\n-                    term.source_info.span,\n-                    LateBoundRegionConversionTime::FnCall,\n-                    sig,\n-                );\n+                let (sig, map) = tcx.replace_late_bound_regions(sig, |br| {\n+                    self.infcx.next_region_var(LateBoundRegion(\n+                        term.source_info.span,\n+                        br.kind,\n+                        LateBoundRegionConversionTime::FnCall,\n+                    ))\n+                });\n                 debug!(?sig);\n                 let sig = self.normalize(sig, term_location);\n                 self.check_call_dest(body, term, &sig, *destination, target, term_location);"}]}