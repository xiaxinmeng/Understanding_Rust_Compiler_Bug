{"sha": "b9eb606801067ef2994d9667e7f424fb331143ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ZWI2MDY4MDEwNjdlZjI5OTRkOTY2N2U3ZjQyNGZiMzMxMTQzYWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-29T08:40:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-29T08:40:20Z"}, "message": "Auto merge of #25830 - steveklabnik:debug_docs, r=alexcrichton", "tree": {"sha": "9eed3b2477ded2500226005b02a35b09b0826f68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9eed3b2477ded2500226005b02a35b09b0826f68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9eb606801067ef2994d9667e7f424fb331143ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9eb606801067ef2994d9667e7f424fb331143ab", "html_url": "https://github.com/rust-lang/rust/commit/b9eb606801067ef2994d9667e7f424fb331143ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9eb606801067ef2994d9667e7f424fb331143ab/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25fc917c65f7c51fafdab0f023772171f84c7f0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/25fc917c65f7c51fafdab0f023772171f84c7f0a", "html_url": "https://github.com/rust-lang/rust/commit/25fc917c65f7c51fafdab0f023772171f84c7f0a"}, {"sha": "977d40fbfad4e36f1d264396b11b8b06f9ac921d", "url": "https://api.github.com/repos/rust-lang/rust/commits/977d40fbfad4e36f1d264396b11b8b06f9ac921d", "html_url": "https://github.com/rust-lang/rust/commit/977d40fbfad4e36f1d264396b11b8b06f9ac921d"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "ee1cab4076dc5a954864912b4f113f1a0b029314", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/b9eb606801067ef2994d9667e7f424fb331143ab/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9eb606801067ef2994d9667e7f424fb331143ab/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=b9eb606801067ef2994d9667e7f424fb331143ab", "patch": "@@ -269,6 +269,50 @@ impl<'a> Display for Arguments<'a> {\n \n /// Format trait for the `:?` format. Useful for debugging, all types\n /// should implement this.\n+///\n+/// Generally speaking, you should just `derive` a `Debug` implementation.\n+///\n+/// # Examples\n+///\n+/// Deriving an implementation:\n+///\n+/// ```\n+/// #[derive(Debug)]\n+/// struct Point {\n+///     x: i32,\n+///     y: i32,\n+/// }\n+///\n+/// let origin = Point { x: 0, y: 0 };\n+///\n+/// println!(\"The origin is: {:?}\", origin);\n+/// ```\n+///\n+/// Manually implementing:\n+///\n+/// ```\n+/// use std::fmt;\n+///\n+/// struct Point {\n+///     x: i32,\n+///     y: i32,\n+/// }\n+///\n+/// impl fmt::Debug for Point {\n+///     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+///         write!(f, \"({}, {})\", self.x, self.y)\n+///     }\n+/// }\n+///\n+/// let origin = Point { x: 0, y: 0 };\n+///\n+/// println!(\"The origin is: {:?}\", origin);\n+/// ```\n+///\n+/// There are a number of `debug_*` methods on `Formatter` to help you with manual\n+/// implementations, such as [`debug_struct`][debug_struct].\n+///\n+/// [debug_struct]: ../std/fmt/struct.Formatter.html#method.debug_struct\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_on_unimplemented = \"`{Self}` cannot be formatted using `:?`; if it is \\\n                             defined in your crate, add `#[derive(Debug)]` or \\"}]}