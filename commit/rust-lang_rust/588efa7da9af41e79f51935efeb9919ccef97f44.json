{"sha": "588efa7da9af41e79f51935efeb9919ccef97f44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4OGVmYTdkYTlhZjQxZTc5ZjUxOTM1ZWZlYjk5MTljY2VmOTdmNDQ=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-22T12:07:55Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-01-23T01:18:11Z"}, "message": "use a .toml file to list the crates we want to check\n\nAlso sort lint results alphabetically.", "tree": {"sha": "8e49baa835b40bc5128251c15e17275236f9928f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e49baa835b40bc5128251c15e17275236f9928f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/588efa7da9af41e79f51935efeb9919ccef97f44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/588efa7da9af41e79f51935efeb9919ccef97f44", "html_url": "https://github.com/rust-lang/rust/commit/588efa7da9af41e79f51935efeb9919ccef97f44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/588efa7da9af41e79f51935efeb9919ccef97f44/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9fce6d2d0528c9d8cf6390c3e00a3a6099687ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9fce6d2d0528c9d8cf6390c3e00a3a6099687ce", "html_url": "https://github.com/rust-lang/rust/commit/a9fce6d2d0528c9d8cf6390c3e00a3a6099687ce"}], "stats": {"total": 2680, "additions": 1348, "deletions": 1332}, "files": [{"sha": "6c6941837f121302b85554a81452b4acfbd0408c", "filename": "clippy_dev/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/588efa7da9af41e79f51935efeb9919ccef97f44/clippy_dev%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/588efa7da9af41e79f51935efeb9919ccef97f44/clippy_dev%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.toml?ref=588efa7da9af41e79f51935efeb9919ccef97f44", "patch": "@@ -11,8 +11,10 @@ flate2 = \"1.0.19\"\n itertools = \"0.9\"\n opener = \"0.4\"\n regex = \"1\"\n+serde = {version = \"1.0\", features = [\"derive\"]}\n shell-escape = \"0.1\"\n tar = \"0.4.30\"\n+toml = \"0.5\"\n ureq = \"2.0.0-rc3\"\n walkdir = \"2\"\n "}, {"sha": "e69056c9925d5b4125f2d946d1fc7a774154d68f", "filename": "clippy_dev/crater_crates.toml", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/588efa7da9af41e79f51935efeb9919ccef97f44/clippy_dev%2Fcrater_crates.toml", "raw_url": "https://github.com/rust-lang/rust/raw/588efa7da9af41e79f51935efeb9919ccef97f44/clippy_dev%2Fcrater_crates.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fcrater_crates.toml?ref=588efa7da9af41e79f51935efeb9919ccef97f44", "patch": "@@ -0,0 +1,20 @@\n+[crates]\n+# some of these are from cargotest\n+cargo = '0.49.0'\n+iron = '0.6.1'\n+ripgrep = '12.1.1'\n+xsv = '0.13.0'\n+#tokei = '12.0.4'\n+rayon = '1.5.0'\n+serde = '1.0.118'\n+# top 10 crates.io dls\n+bitflags = '1.2.1'\n+libc = '0.2.81'\n+log = '0.4.11'\n+proc-macro2 = '1.0.24'\n+quote = '1.0.7'\n+rand = '0.7.3'\n+rand_core = '0.6.0'\n+regex = '1.3.2'\n+syn = '1.0.54'\n+unicode-xid = '0.2.1'"}, {"sha": "f64ab897906c390dc95bcc7131ece0bc78f5620b", "filename": "clippy_dev/src/crater.rs", "status": "modified", "additions": 30, "deletions": 28, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/588efa7da9af41e79f51935efeb9919ccef97f44/clippy_dev%2Fsrc%2Fcrater.rs", "raw_url": "https://github.com/rust-lang/rust/raw/588efa7da9af41e79f51935efeb9919ccef97f44/clippy_dev%2Fsrc%2Fcrater.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fcrater.rs?ref=588efa7da9af41e79f51935efeb9919ccef97f44", "patch": "@@ -1,16 +1,24 @@\n #![allow(clippy::filter_map)]\n \n use crate::clippy_project_root;\n-use std::path::PathBuf;\n+use serde::{Deserialize, Serialize};\n+use std::collections::HashMap;\n use std::process::Command;\n+use std::{fs::write, path::PathBuf};\n \n // represents an archive we download from crates.io\n-#[derive(Debug)]\n+#[derive(Debug, Serialize, Deserialize, Eq, Hash, PartialEq)]\n struct KrateSource {\n     version: String,\n     name: String,\n }\n \n+// use this to store the crates when interacting with the crates.toml file\n+#[derive(Debug, Serialize, Deserialize)]\n+struct CrateList {\n+    crates: HashMap<String, String>,\n+}\n+\n // represents the extracted sourcecode of a crate\n #[derive(Debug)]\n struct Krate {\n@@ -129,33 +137,25 @@ fn build_clippy() {\n         .expect(\"Failed to build clippy!\");\n }\n \n+// get a list of KrateSources we want to check from a \"crater_crates.toml\" file.\n+fn read_crates() -> Vec<KrateSource> {\n+    let toml_path = PathBuf::from(\"clippy_dev/crater_crates.toml\");\n+    let toml_content: String =\n+        std::fs::read_to_string(&toml_path).unwrap_or_else(|_| panic!(\"Failed to read {}\", toml_path.display()));\n+    let crate_list: CrateList =\n+        toml::from_str(&toml_content).unwrap_or_else(|e| panic!(\"Failed to parse {}: \\n{}\", toml_path.display(), e));\n+    // parse the hashmap of the toml file into a list of crates\n+    crate_list\n+        .crates\n+        .iter()\n+        .map(|(name, version)| KrateSource::new(&name, &version))\n+        .collect()\n+}\n+\n // the main fn\n pub fn run() {\n     let cargo_clippy_path: PathBuf = PathBuf::from(\"target/debug/cargo-clippy\");\n \n-    // crates we want to check:\n-    let krates: Vec<KrateSource> = vec![\n-        // some of these are form cargotest\n-        KrateSource::new(\"cargo\", \"0.49.0\"),\n-        KrateSource::new(\"iron\", \"0.6.1\"),\n-        KrateSource::new(\"ripgrep\", \"12.1.1\"),\n-        //KrateSource::new(\"tokei\", \"12.0.4\"),\n-        KrateSource::new(\"xsv\", \"0.13.0\"),\n-        KrateSource::new(\"serde\", \"1.0.118\"),\n-        KrateSource::new(\"rayon\", \"1.5.0\"),\n-        // top 10 crates.io dls\n-        KrateSource::new(\"rand\", \"0.7.3\"),\n-        KrateSource::new(\"syn\", \"1.0.54\"),\n-        KrateSource::new(\"libc\", \"0.2.81\"),\n-        KrateSource::new(\"quote\", \"1.0.7\"),\n-        KrateSource::new(\"rand_core\", \"0.6.0\"),\n-        KrateSource::new(\"unicode-xid\", \"0.2.1\"),\n-        KrateSource::new(\"proc-macro2\", \"1.0.24\"),\n-        KrateSource::new(\"bitflags\", \"1.2.1\"),\n-        KrateSource::new(\"log\", \"0.4.11\"),\n-        KrateSource::new(\"regex\", \"1.4.2\"),\n-    ];\n-\n     println!(\"Compiling clippy...\");\n     build_clippy();\n     println!(\"Done compiling\");\n@@ -168,15 +168,17 @@ pub fn run() {\n     );\n \n     // download and extract the crates, then run clippy on them and collect clippys warnings\n-    let clippy_lint_results: Vec<Vec<String>> = krates\n+\n+    let clippy_lint_results: Vec<Vec<String>> = read_crates()\n         .into_iter()\n         .map(|krate| krate.download_and_extract())\n         .map(|krate| krate.run_clippy_lints(&cargo_clippy_path))\n         .collect();\n \n-    let all_warnings: Vec<String> = clippy_lint_results.into_iter().flatten().collect();\n+    let mut all_warnings: Vec<String> = clippy_lint_results.into_iter().flatten().collect();\n+    all_warnings.sort();\n \n     // save the text into mini-crater/logs.txt\n     let text = all_warnings.join(\"\");\n-    std::fs::write(\"mini-crater/logs.txt\", text).unwrap();\n+    write(\"mini-crater/logs.txt\", text).unwrap();\n }"}, {"sha": "dfa6450def7f93cbceab24f765484b471a526ede", "filename": "mini-crater/logs.txt", "status": "modified", "additions": 1296, "deletions": 1304, "changes": 2600, "blob_url": "https://github.com/rust-lang/rust/blob/588efa7da9af41e79f51935efeb9919ccef97f44/mini-crater%2Flogs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/588efa7da9af41e79f51935efeb9919ccef97f44/mini-crater%2Flogs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mini-crater%2Flogs.txt?ref=588efa7da9af41e79f51935efeb9919ccef97f44"}]}