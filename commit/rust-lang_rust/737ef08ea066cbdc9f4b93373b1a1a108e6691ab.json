{"sha": "737ef08ea066cbdc9f4b93373b1a1a108e6691ab", "node_id": "C_kwDOAAsO6NoAKDczN2VmMDhlYTA2NmNiZGM5ZjRiOTMzNzNiMWExYTEwOGU2NjkxYWI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-13T23:06:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-13T23:06:14Z"}, "message": "Auto merge of #94832 - jonhoo:default-static, r=Mark-Simulacrum\n\nbootstrap: untangle static-libstdcpp & llvm-tools\n\nPreviously, the static-libstdcpp setting was tied to llvm-tools such\nthat enabling the latter always enabled the latter. This seems\nunfortunate, since it is entirely reasonable for someone to want to\n_not_ statically link stdc++, but _also_ want to build the llvm-tools.\nThis patch therefore separates the two settings such that neither\nimplies the other.\n\nOn its own, that would change the default behavior in a way that's\nlikely to surprise users. Specifically, users who build llvm-tools\n_likely_ want those tools to be statically compiled against libstdc++,\nsince otherwise users with older GLIBCXX will be unable to run the\nvended tools. So, we also flip the default for the `static-libstdcpp`\nsetting such that builds always link statically against libstdc++ by\ndefault, but it's _possible_ to opt out.\n\nSee also #94719.", "tree": {"sha": "9586a01dca3120c02f47131874d31bcb06a2776c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9586a01dca3120c02f47131874d31bcb06a2776c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/737ef08ea066cbdc9f4b93373b1a1a108e6691ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/737ef08ea066cbdc9f4b93373b1a1a108e6691ab", "html_url": "https://github.com/rust-lang/rust/commit/737ef08ea066cbdc9f4b93373b1a1a108e6691ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/737ef08ea066cbdc9f4b93373b1a1a108e6691ab/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e95b10ba4ac4564ed25f7eef143e3182c33b3902", "url": "https://api.github.com/repos/rust-lang/rust/commits/e95b10ba4ac4564ed25f7eef143e3182c33b3902", "html_url": "https://github.com/rust-lang/rust/commit/e95b10ba4ac4564ed25f7eef143e3182c33b3902"}, {"sha": "ca82e6cf18bb0f7765a978229f4899c33c5fdc7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca82e6cf18bb0f7765a978229f4899c33c5fdc7d", "html_url": "https://github.com/rust-lang/rust/commit/ca82e6cf18bb0f7765a978229f4899c33c5fdc7d"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "6e53d9b442f1609ec929f1c021984391d038e879", "filename": "config.toml.example", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/737ef08ea066cbdc9f4b93373b1a1a108e6691ab/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/737ef08ea066cbdc9f4b93373b1a1a108e6691ab/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=737ef08ea066cbdc9f4b93373b1a1a108e6691ab", "patch": "@@ -89,7 +89,7 @@ changelog-seen = 2\n \n # Link libstdc++ statically into the rustc_llvm instead of relying on a\n # dynamic version to be available.\n-#static-libstdcpp = false\n+#static-libstdcpp = true\n \n # Whether to use Ninja to build LLVM. This runs much faster than make.\n #ninja = true"}, {"sha": "9534cc5f4341e3aad4057a4ea2d5c903a4c18cc9", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/737ef08ea066cbdc9f4b93373b1a1a108e6691ab/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737ef08ea066cbdc9f4b93373b1a1a108e6691ab/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=737ef08ea066cbdc9f4b93373b1a1a108e6691ab", "patch": "@@ -645,6 +645,7 @@ impl Config {\n         config.llvm_optimize = true;\n         config.ninja_in_file = true;\n         config.llvm_version_check = true;\n+        config.llvm_static_stdcpp = true;\n         config.backtrace = true;\n         config.rust_optimize = true;\n         config.rust_optimize_tests = true;"}, {"sha": "a810a57feb7bb98b88440d109e1c1b579704226e", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/737ef08ea066cbdc9f4b93373b1a1a108e6691ab/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737ef08ea066cbdc9f4b93373b1a1a108e6691ab/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=737ef08ea066cbdc9f4b93373b1a1a108e6691ab", "patch": "@@ -566,7 +566,7 @@ fn configure_cmake(\n \n     // For distribution we want the LLVM tools to be *statically* linked to libstdc++.\n     // We also do this if the user explicitly requested static libstdc++.\n-    if builder.config.llvm_tools_enabled || builder.config.llvm_static_stdcpp {\n+    if builder.config.llvm_static_stdcpp {\n         if !target.contains(\"msvc\") && !target.contains(\"netbsd\") {\n             if target.contains(\"apple\") {\n                 ldflags.push_all(\"-static-libstdc++\");"}]}