{"sha": "9ab6146afea0119afb1a06afef5fbed5a3efe422", "node_id": "C_kwDOAAsO6NoAKDlhYjYxNDZhZmVhMDExOWFmYjFhMDZhZmVmNWZiZWQ1YTNlZmU0MjI", "commit": {"author": {"name": "tabokie", "email": "xy.tao@outlook.com", "date": "2022-08-02T03:37:44Z"}, "committer": {"name": "tabokie", "email": "xy.tao@outlook.com", "date": "2022-08-02T09:56:20Z"}, "message": "simplify unit type check\n\nSigned-off-by: tabokie <xy.tao@outlook.com>", "tree": {"sha": "d50e7723dd56ad579c901dbd81e706f797b319c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d50e7723dd56ad579c901dbd81e706f797b319c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ab6146afea0119afb1a06afef5fbed5a3efe422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ab6146afea0119afb1a06afef5fbed5a3efe422", "html_url": "https://github.com/rust-lang/rust/commit/9ab6146afea0119afb1a06afef5fbed5a3efe422", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ab6146afea0119afb1a06afef5fbed5a3efe422/comments", "author": {"login": "tabokie", "id": 27005812, "node_id": "MDQ6VXNlcjI3MDA1ODEy", "avatar_url": "https://avatars.githubusercontent.com/u/27005812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tabokie", "html_url": "https://github.com/tabokie", "followers_url": "https://api.github.com/users/tabokie/followers", "following_url": "https://api.github.com/users/tabokie/following{/other_user}", "gists_url": "https://api.github.com/users/tabokie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tabokie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tabokie/subscriptions", "organizations_url": "https://api.github.com/users/tabokie/orgs", "repos_url": "https://api.github.com/users/tabokie/repos", "events_url": "https://api.github.com/users/tabokie/events{/privacy}", "received_events_url": "https://api.github.com/users/tabokie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tabokie", "id": 27005812, "node_id": "MDQ6VXNlcjI3MDA1ODEy", "avatar_url": "https://avatars.githubusercontent.com/u/27005812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tabokie", "html_url": "https://github.com/tabokie", "followers_url": "https://api.github.com/users/tabokie/followers", "following_url": "https://api.github.com/users/tabokie/following{/other_user}", "gists_url": "https://api.github.com/users/tabokie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tabokie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tabokie/subscriptions", "organizations_url": "https://api.github.com/users/tabokie/orgs", "repos_url": "https://api.github.com/users/tabokie/repos", "events_url": "https://api.github.com/users/tabokie/events{/privacy}", "received_events_url": "https://api.github.com/users/tabokie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5a6c95da813ce81d9d4c83d2632379284e0fc06", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5a6c95da813ce81d9d4c83d2632379284e0fc06", "html_url": "https://github.com/rust-lang/rust/commit/a5a6c95da813ce81d9d4c83d2632379284e0fc06"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "6db852c3ffe79a1c6f9234f7f3b3a35cd6af7848", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9ab6146afea0119afb1a06afef5fbed5a3efe422/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ab6146afea0119afb1a06afef5fbed5a3efe422/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=9ab6146afea0119afb1a06afef5fbed5a3efe422", "patch": "@@ -97,11 +97,7 @@ declare_clippy_lint! {\n declare_lint_pass!(MapUnit => [OPTION_MAP_UNIT_FN, RESULT_MAP_UNIT_FN]);\n \n fn is_unit_type(ty: Ty<'_>) -> bool {\n-    match ty.kind() {\n-        ty::Tuple(slice) => slice.is_empty(),\n-        ty::Never => true,\n-        _ => false,\n-    }\n+    ty.is_unit() || ty.is_never()\n }\n \n fn is_unit_function(cx: &LateContext<'_>, expr: &hir::Expr<'_>) -> bool {"}]}