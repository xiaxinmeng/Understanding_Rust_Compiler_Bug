{"sha": "1c82e5ed9cd2611bf80d4de3cc7202258fe2edb9", "node_id": "C_kwDOAAsO6NoAKDFjODJlNWVkOWNkMjYxMWJmODBkNGRlM2NjNzIwMjI1OGZlMmVkYjk", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2022-01-27T00:53:14Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2022-01-27T00:53:14Z"}, "message": "Convert empty tuple to DefaultReturn in ty path", "tree": {"sha": "b843892b4b6af9466d67fe21be3acf76ab336e65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b843892b4b6af9466d67fe21be3acf76ab336e65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c82e5ed9cd2611bf80d4de3cc7202258fe2edb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c82e5ed9cd2611bf80d4de3cc7202258fe2edb9", "html_url": "https://github.com/rust-lang/rust/commit/1c82e5ed9cd2611bf80d4de3cc7202258fe2edb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c82e5ed9cd2611bf80d4de3cc7202258fe2edb9/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f7b7d5f4a1cbe2d63eea95d0ef1af3c2b30fdd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f7b7d5f4a1cbe2d63eea95d0ef1af3c2b30fdd6", "html_url": "https://github.com/rust-lang/rust/commit/2f7b7d5f4a1cbe2d63eea95d0ef1af3c2b30fdd6"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "be83338f675ed3ce6705acf897492b175be2a97c", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1c82e5ed9cd2611bf80d4de3cc7202258fe2edb9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c82e5ed9cd2611bf80d4de3cc7202258fe2edb9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=1c82e5ed9cd2611bf80d4de3cc7202258fe2edb9", "patch": "@@ -895,8 +895,15 @@ fn clean_fn_decl_from_did_and_sig(\n ) -> FnDecl {\n     let mut names = did.map_or(&[] as &[_], |did| cx.tcx.fn_arg_names(did)).iter();\n \n+    // We assume all empty tuples are default return type. This theoretically can discard `-> ()`,\n+    // but shouldn't change any code meaning.\n+    let output = match sig.skip_binder().output().clean(cx) {\n+        Type::Tuple(inner) if inner.len() == 0 => DefaultReturn,\n+        ty => Return(ty),\n+    };\n+\n     FnDecl {\n-        output: Return(sig.skip_binder().output().clean(cx)),\n+        output,\n         c_variadic: sig.skip_binder().c_variadic,\n         inputs: Arguments {\n             values: sig"}]}