{"sha": "3c35da224b36855ea7bd21ed4537eb7b377de082", "node_id": "C_kwDOAAsO6NoAKDNjMzVkYTIyNGIzNjg1NWVhN2JkMjFlZDQ1MzdlYjdiMzc3ZGUwODI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-09T05:58:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-09T05:58:09Z"}, "message": "Rollup merge of #99070 - tamird:update-tracking-issue, r=RalfJung\n\nUpdate integer_atomics tracking issue\n\nUpdates #32976.\nUpdates #99069.\n\nr? ``@RalfJung``", "tree": {"sha": "e69b1dcde4771ac296e6a8b9be50ba1dbce478dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e69b1dcde4771ac296e6a8b9be50ba1dbce478dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c35da224b36855ea7bd21ed4537eb7b377de082", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiyRjxCRBK7hj4Ov3rIwAAL6oIAB879dQzFEL5Ns1xlF17E+RN\nGLPaBkPl2fB26USXw8T7fFdEr93ytaf9ILTrr/1ZKxVF+yw14JVM+r5vhujRkJwm\nhsJMLTYcDK7il3UEgCmyAzOKu3vbyFtdQw/TllnIHievdUVSVZjt6lOx6p5Gp+WA\n+pm2Z0DMMkgrFDViI/ILZ16OTYWzOv2SC4JnPxA+ZIcHxliUkfT+Url/rHeXiiOH\nNQS+kummLBDGOvhbOuk2MyrdouCZSYUVXN/aTFQFQpJ4uGWfHEs9iusKfZFzRghO\neW3dqrtIW64calpIfX5LAl9XkI2gNAkYQOkFf+orDO/fcUKQOj9kKNNoA1yyy0E=\n=J5aI\n-----END PGP SIGNATURE-----\n", "payload": "tree e69b1dcde4771ac296e6a8b9be50ba1dbce478dd\nparent 80a74bf580dc3ca30fd648969227603d4e96be3e\nparent a491d4582dc52bbe5615bb5b493ccbff8bfe4ae9\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1657346289 +0530\ncommitter GitHub <noreply@github.com> 1657346289 +0530\n\nRollup merge of #99070 - tamird:update-tracking-issue, r=RalfJung\n\nUpdate integer_atomics tracking issue\n\nUpdates #32976.\nUpdates #99069.\n\nr? ``@RalfJung``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c35da224b36855ea7bd21ed4537eb7b377de082", "html_url": "https://github.com/rust-lang/rust/commit/3c35da224b36855ea7bd21ed4537eb7b377de082", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c35da224b36855ea7bd21ed4537eb7b377de082/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80a74bf580dc3ca30fd648969227603d4e96be3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/80a74bf580dc3ca30fd648969227603d4e96be3e", "html_url": "https://github.com/rust-lang/rust/commit/80a74bf580dc3ca30fd648969227603d4e96be3e"}, {"sha": "a491d4582dc52bbe5615bb5b493ccbff8bfe4ae9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a491d4582dc52bbe5615bb5b493ccbff8bfe4ae9", "html_url": "https://github.com/rust-lang/rust/commit/a491d4582dc52bbe5615bb5b493ccbff8bfe4ae9"}], "stats": {"total": 80, "additions": 40, "deletions": 40}, "files": [{"sha": "77f437974c2d66527e965c27a36cf0f3aff62546", "filename": "compiler/rustc_codegen_cranelift/patches/0027-sysroot-128bit-atomic-operations.patch", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3c35da224b36855ea7bd21ed4537eb7b377de082/compiler%2Frustc_codegen_cranelift%2Fpatches%2F0027-sysroot-128bit-atomic-operations.patch", "raw_url": "https://github.com/rust-lang/rust/raw/3c35da224b36855ea7bd21ed4537eb7b377de082/compiler%2Frustc_codegen_cranelift%2Fpatches%2F0027-sysroot-128bit-atomic-operations.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fpatches%2F0027-sysroot-128bit-atomic-operations.patch?ref=3c35da224b36855ea7bd21ed4537eb7b377de082", "patch": "@@ -19,7 +19,7 @@ index 092b7cf..158cf71 100644\n  #[stable(feature = \"integer_atomics_stable\", since = \"1.34.0\")]\n  impl RefUnwindSafe for crate::sync::atomic::AtomicI64 {}\n -#[cfg(target_has_atomic_load_store = \"128\")]\n--#[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n+-#[unstable(feature = \"integer_atomics\", issue = \"99069\")]\n -impl RefUnwindSafe for crate::sync::atomic::AtomicI128 {}\n \n  #[cfg(target_has_atomic_load_store = \"ptr\")]\n@@ -29,7 +29,7 @@ index 092b7cf..158cf71 100644\n  #[stable(feature = \"integer_atomics_stable\", since = \"1.34.0\")]\n  impl RefUnwindSafe for crate::sync::atomic::AtomicU64 {}\n -#[cfg(target_has_atomic_load_store = \"128\")]\n--#[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n+-#[unstable(feature = \"integer_atomics\", issue = \"99069\")]\n -impl RefUnwindSafe for crate::sync::atomic::AtomicU128 {}\n \n  #[cfg(target_has_atomic_load_store = \"8\")]\n@@ -46,14 +46,14 @@ index d9de37e..8293fce 100644\n -atomic_int! {\n -    cfg(target_has_atomic = \"128\"),\n -    cfg(target_has_atomic_equal_alignment = \"128\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n -    rustc_const_stable(feature = \"const_integer_atomics\", since = \"1.34.0\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n -    cfg_attr(not(test), rustc_diagnostic_item = \"AtomicI128\"),\n -    \"i128\",\n -    \"#![feature(integer_atomics)]\\n\\n\",\n@@ -66,14 +66,14 @@ index d9de37e..8293fce 100644\n -atomic_int! {\n -    cfg(target_has_atomic = \"128\"),\n -    cfg(target_has_atomic_equal_alignment = \"128\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n -    rustc_const_stable(feature = \"const_integer_atomics\", since = \"1.34.0\"),\n--    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+-    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n -    cfg_attr(not(test), rustc_diagnostic_item = \"AtomicU128\"),\n -    \"u128\",\n -    \"#![feature(integer_atomics)]\\n\\n\","}, {"sha": "9a6153f1253c539f9f081a25adff954cefe1cd9a", "filename": "library/core/src/panic/unwind_safe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c35da224b36855ea7bd21ed4537eb7b377de082/library%2Fcore%2Fsrc%2Fpanic%2Funwind_safe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c35da224b36855ea7bd21ed4537eb7b377de082/library%2Fcore%2Fsrc%2Fpanic%2Funwind_safe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fpanic%2Funwind_safe.rs?ref=3c35da224b36855ea7bd21ed4537eb7b377de082", "patch": "@@ -217,7 +217,7 @@ impl RefUnwindSafe for crate::sync::atomic::AtomicI32 {}\n #[stable(feature = \"integer_atomics_stable\", since = \"1.34.0\")]\n impl RefUnwindSafe for crate::sync::atomic::AtomicI64 {}\n #[cfg(target_has_atomic_load_store = \"128\")]\n-#[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n+#[unstable(feature = \"integer_atomics\", issue = \"99069\")]\n impl RefUnwindSafe for crate::sync::atomic::AtomicI128 {}\n \n #[cfg(target_has_atomic_load_store = \"ptr\")]\n@@ -236,7 +236,7 @@ impl RefUnwindSafe for crate::sync::atomic::AtomicU32 {}\n #[stable(feature = \"integer_atomics_stable\", since = \"1.34.0\")]\n impl RefUnwindSafe for crate::sync::atomic::AtomicU64 {}\n #[cfg(target_has_atomic_load_store = \"128\")]\n-#[unstable(feature = \"integer_atomics\", issue = \"32976\")]\n+#[unstable(feature = \"integer_atomics\", issue = \"99069\")]\n impl RefUnwindSafe for crate::sync::atomic::AtomicU128 {}\n \n #[cfg(target_has_atomic_load_store = \"8\")]"}, {"sha": "b32dcfefacda89893959a37c5da97edd79b509c0", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/3c35da224b36855ea7bd21ed4537eb7b377de082/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c35da224b36855ea7bd21ed4537eb7b377de082/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=3c35da224b36855ea7bd21ed4537eb7b377de082", "patch": "@@ -2692,7 +2692,7 @@ atomic_int! {\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     rustc_const_stable(feature = \"const_integer_atomics\", since = \"1.34.0\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n     cfg_attr(not(test), rustc_diagnostic_item = \"AtomicI8\"),\n     \"i8\",\n     \"\",\n@@ -2712,7 +2712,7 @@ atomic_int! {\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     rustc_const_stable(feature = \"const_integer_atomics\", since = \"1.34.0\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n     cfg_attr(not(test), rustc_diagnostic_item = \"AtomicU8\"),\n     \"u8\",\n     \"\",\n@@ -2732,7 +2732,7 @@ atomic_int! {\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     rustc_const_stable(feature = \"const_integer_atomics\", since = \"1.34.0\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n     cfg_attr(not(test), rustc_diagnostic_item = \"AtomicI16\"),\n     \"i16\",\n     \"\",\n@@ -2752,7 +2752,7 @@ atomic_int! {\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     rustc_const_stable(feature = \"const_integer_atomics\", since = \"1.34.0\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n     cfg_attr(not(test), rustc_diagnostic_item = \"AtomicU16\"),\n     \"u16\",\n     \"\",\n@@ -2772,7 +2772,7 @@ atomic_int! {\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     rustc_const_stable(feature = \"const_integer_atomics\", since = \"1.34.0\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n     cfg_attr(not(test), rustc_diagnostic_item = \"AtomicI32\"),\n     \"i32\",\n     \"\",\n@@ -2792,7 +2792,7 @@ atomic_int! {\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     rustc_const_stable(feature = \"const_integer_atomics\", since = \"1.34.0\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n     cfg_attr(not(test), rustc_diagnostic_item = \"AtomicU32\"),\n     \"u32\",\n     \"\",\n@@ -2812,7 +2812,7 @@ atomic_int! {\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     rustc_const_stable(feature = \"const_integer_atomics\", since = \"1.34.0\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n     cfg_attr(not(test), rustc_diagnostic_item = \"AtomicI64\"),\n     \"i64\",\n     \"\",\n@@ -2832,7 +2832,7 @@ atomic_int! {\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     stable(feature = \"integer_atomics_stable\", since = \"1.34.0\"),\n     rustc_const_stable(feature = \"const_integer_atomics\", since = \"1.34.0\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n     cfg_attr(not(test), rustc_diagnostic_item = \"AtomicU64\"),\n     \"u64\",\n     \"\",\n@@ -2845,14 +2845,14 @@ atomic_int! {\n atomic_int! {\n     cfg(target_has_atomic = \"128\"),\n     cfg(target_has_atomic_equal_alignment = \"128\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n     rustc_const_stable(feature = \"const_integer_atomics\", since = \"1.34.0\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n     cfg_attr(not(test), rustc_diagnostic_item = \"AtomicI128\"),\n     \"i128\",\n     \"#![feature(integer_atomics)]\\n\\n\",\n@@ -2865,14 +2865,14 @@ atomic_int! {\n atomic_int! {\n     cfg(target_has_atomic = \"128\"),\n     cfg(target_has_atomic_equal_alignment = \"128\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n     rustc_const_stable(feature = \"const_integer_atomics\", since = \"1.34.0\"),\n-    unstable(feature = \"integer_atomics\", issue = \"32976\"),\n+    unstable(feature = \"integer_atomics\", issue = \"99069\"),\n     cfg_attr(not(test), rustc_diagnostic_item = \"AtomicU128\"),\n     \"u128\",\n     \"#![feature(integer_atomics)]\\n\\n\","}]}