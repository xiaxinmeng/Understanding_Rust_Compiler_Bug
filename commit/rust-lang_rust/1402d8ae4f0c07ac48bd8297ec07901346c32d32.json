{"sha": "1402d8ae4f0c07ac48bd8297ec07901346c32d32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MDJkOGFlNGYwYzA3YWM0OGJkODI5N2VjMDc5MDEzNDZjMzJkMzI=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-10-02T01:18:37Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-10-02T08:18:37Z"}, "message": "fix a FN where incr exprs with no semicolon at ends", "tree": {"sha": "6f9481760fdaf2ee5e364fa2d59d30d1a80e668e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f9481760fdaf2ee5e364fa2d59d30d1a80e668e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1402d8ae4f0c07ac48bd8297ec07901346c32d32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1402d8ae4f0c07ac48bd8297ec07901346c32d32", "html_url": "https://github.com/rust-lang/rust/commit/1402d8ae4f0c07ac48bd8297ec07901346c32d32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1402d8ae4f0c07ac48bd8297ec07901346c32d32/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94d7b82340792af6e5c9b7c105dca1f2fef1b495", "url": "https://api.github.com/repos/rust-lang/rust/commits/94d7b82340792af6e5c9b7c105dca1f2fef1b495", "html_url": "https://github.com/rust-lang/rust/commit/94d7b82340792af6e5c9b7c105dca1f2fef1b495"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "ea40c2af4f7179b1b1e2e50e77f940f7bdc61bfa", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1402d8ae4f0c07ac48bd8297ec07901346c32d32/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1402d8ae4f0c07ac48bd8297ec07901346c32d32/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=1402d8ae4f0c07ac48bd8297ec07901346c32d32", "patch": "@@ -1014,14 +1014,20 @@ fn get_assignments<'a: 'c, 'tcx: 'c, 'c>(\n         .iter()\n         .filter_map(move |stmt| match stmt.kind {\n             StmtKind::Local(..) | StmtKind::Item(..) => None,\n-            StmtKind::Expr(e) | StmtKind::Semi(e) => if_chain! {\n-                if let ExprKind::AssignOp(_, var, _) = e.kind;\n-                // skip StartKind::Range\n-                if loop_counters.iter().skip(1).any(|counter| Some(counter.id) == var_def_id(cx, var));\n-                then { None } else { Some(e) }\n-            },\n+            StmtKind::Expr(e) | StmtKind::Semi(e) => Some(e),\n         })\n         .chain((*expr).into_iter())\n+        .filter(move |e| {\n+            if let ExprKind::AssignOp(_, place, _) = e.kind {\n+                !loop_counters\n+                    .iter()\n+                    // skip StartKind::Range\n+                    .skip(1)\n+                    .any(|counter| same_var(cx, place, counter.id))\n+            } else {\n+                true\n+            }\n+        })\n         .map(get_assignment)\n }\n "}, {"sha": "70873c9e99447844331f33dcf31bf11a919ee9a1", "filename": "tests/ui/manual_memcpy/with_loop_counters.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1402d8ae4f0c07ac48bd8297ec07901346c32d32/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1402d8ae4f0c07ac48bd8297ec07901346c32d32/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.rs?ref=1402d8ae4f0c07ac48bd8297ec07901346c32d32", "patch": "@@ -59,6 +59,13 @@ pub fn manual_copy_with_counters(src: &[i32], dst: &mut [i32], dst2: &mut [i32])\n         dst[count] = src[i + 2];\n         count += 1;\n     }\n+\n+    // make sure incrementing expressions without semicolons at the end of loops are handled correctly.\n+    let mut count = 0;\n+    for i in 3..src.len() {\n+        dst[i] = src[count];\n+        count += 1\n+    }\n }\n \n fn main() {}"}, {"sha": "598c881b4d6cd487d0840d28970c7eb5ce1d5421", "filename": "tests/ui/manual_memcpy/with_loop_counters.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1402d8ae4f0c07ac48bd8297ec07901346c32d32/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1402d8ae4f0c07ac48bd8297ec07901346c32d32/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr?ref=1402d8ae4f0c07ac48bd8297ec07901346c32d32", "patch": "@@ -89,5 +89,14 @@ LL | |         count += 1;\n LL | |     }\n    | |_____^ help: try replacing the loop by: `dst[(0 << 1)..((1 << 1) + (0 << 1))].clone_from_slice(&src[2..((1 << 1) + 2)]);`\n \n-error: aborting due to 9 previous errors\n+error: it looks like you're manually copying between slices\n+  --> $DIR/with_loop_counters.rs:65:5\n+   |\n+LL | /     for i in 3..src.len() {\n+LL | |         dst[i] = src[count];\n+LL | |         count += 1\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[3..src.len()].clone_from_slice(&src[..(src.len() - 3)]);`\n+\n+error: aborting due to 10 previous errors\n "}]}