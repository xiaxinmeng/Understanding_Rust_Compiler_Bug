{"sha": "1e43aae0ef1dfb4d5ec470990dfedda201ad18ad", "node_id": "C_kwDOAAsO6NoAKDFlNDNhYWUwZWYxZGZiNGQ1ZWM0NzA5OTBkZmVkZGEyMDFhZDE4YWQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-20T23:14:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-20T23:14:14Z"}, "message": "Rollup merge of #96193 - djkoloski:fuchsia_current_exe, r=tmandry\n\n[fuchsia] Add implementation for `current_exe`\n\nThis implementation returns a best attempt at the current exe path. On\nfuchsia, fdio will always use `argv[0]` as the process name and if it is\nnot set then an error will be returned. Because this is not guaranteed\nto be the case, this implementation returns an error if `argv` does not\ncontain any elements.", "tree": {"sha": "107335317bfcd0edc2a8a553b66d5518d39deef5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/107335317bfcd0edc2a8a553b66d5518d39deef5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e43aae0ef1dfb4d5ec470990dfedda201ad18ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiYJPGCRBK7hj4Ov3rIwAAiscIAD62T8Mb41Ut/5+XbCplCQ9h\notKtky4s+3UdamZcZS2fG+sfiWVLI1Bl2jIRNWmgvckfzRHYJIhdW6C5+xIIVzAr\nyLHzsPz/O7GiVgGR2eJSut4dsZCqvdePbMXxJtvsTFSumwAFa8fA96Em+PrZLibH\nRf+j749TXCDqmiy+mieCpcY1sYZrs0GuV630J3I+wpG50hMp3Lp6emCaHR0MZzoV\nJH/wGLEX3IbQOWo1DwRS1disISi3VwCdhSCeddwPyCU3CNssl/VMMEWc59ILoTz9\nIEIW0FE1M8D5e4lGXr0jNVHiMZ/AmXBTg3Q7halNVvFYpoBVlVyHPX2njuCqHUk=\n=IhfT\n-----END PGP SIGNATURE-----\n", "payload": "tree 107335317bfcd0edc2a8a553b66d5518d39deef5\nparent 976c6b2d193148ca9df3a505e55c5ba5da22cd96\nparent eb6b6a877efe765c77700a30cd45f5b1e6365d62\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1650496454 +0200\ncommitter GitHub <noreply@github.com> 1650496454 +0200\n\nRollup merge of #96193 - djkoloski:fuchsia_current_exe, r=tmandry\n\n[fuchsia] Add implementation for `current_exe`\n\nThis implementation returns a best attempt at the current exe path. On\nfuchsia, fdio will always use `argv[0]` as the process name and if it is\nnot set then an error will be returned. Because this is not guaranteed\nto be the case, this implementation returns an error if `argv` does not\ncontain any elements.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e43aae0ef1dfb4d5ec470990dfedda201ad18ad", "html_url": "https://github.com/rust-lang/rust/commit/1e43aae0ef1dfb4d5ec470990dfedda201ad18ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e43aae0ef1dfb4d5ec470990dfedda201ad18ad/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "976c6b2d193148ca9df3a505e55c5ba5da22cd96", "url": "https://api.github.com/repos/rust-lang/rust/commits/976c6b2d193148ca9df3a505e55c5ba5da22cd96", "html_url": "https://github.com/rust-lang/rust/commit/976c6b2d193148ca9df3a505e55c5ba5da22cd96"}, {"sha": "eb6b6a877efe765c77700a30cd45f5b1e6365d62", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb6b6a877efe765c77700a30cd45f5b1e6365d62", "html_url": "https://github.com/rust-lang/rust/commit/eb6b6a877efe765c77700a30cd45f5b1e6365d62"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "92bea9346d8f8ea888515778589c5d42c66d8ea8", "filename": "library/std/src/sys/unix/os.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1e43aae0ef1dfb4d5ec470990dfedda201ad18ad/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e43aae0ef1dfb4d5ec470990dfedda201ad18ad/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos.rs?ref=1e43aae0ef1dfb4d5ec470990dfedda201ad18ad", "patch": "@@ -427,7 +427,7 @@ pub fn current_exe() -> io::Result<PathBuf> {\n     crate::fs::read_to_string(\"sys:exe\").map(PathBuf::from)\n }\n \n-#[cfg(any(target_os = \"fuchsia\", target_os = \"l4re\"))]\n+#[cfg(target_os = \"l4re\")]\n pub fn current_exe() -> io::Result<PathBuf> {\n     use crate::io::ErrorKind;\n     Err(io::const_io_error!(ErrorKind::Unsupported, \"Not yet implemented!\"))\n@@ -451,6 +451,26 @@ pub fn current_exe() -> io::Result<PathBuf> {\n     super::unsupported::unsupported()\n }\n \n+#[cfg(target_os = \"fuchsia\")]\n+pub fn current_exe() -> io::Result<PathBuf> {\n+    use crate::io::ErrorKind;\n+\n+    #[cfg(test)]\n+    use realstd::env;\n+\n+    #[cfg(not(test))]\n+    use crate::env;\n+\n+    let exe_path = env::args().next().ok_or(io::const_io_error!(\n+        ErrorKind::Uncategorized,\n+        \"an executable path was not found because no arguments were provided through argv\"\n+    ))?;\n+    let path = PathBuf::from(exe_path);\n+\n+    // Prepend the current working directory to the path if it's not absolute.\n+    if !path.is_absolute() { getcwd().map(|cwd| cwd.join(path)) } else { Ok(path) }\n+}\n+\n pub struct Env {\n     iter: vec::IntoIter<(OsString, OsString)>,\n }"}]}