{"sha": "de9092438df744895cfc2a2a35fcc577b657cd13", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlOTA5MjQzOGRmNzQ0ODk1Y2ZjMmEyYTM1ZmNjNTc3YjY1N2NkMTM=", "commit": {"author": {"name": "Tim Robinson", "email": "tim.g.robinson@gmail.com", "date": "2020-03-20T22:49:15Z"}, "committer": {"name": "Tim Robinson", "email": "tim.g.robinson@gmail.com", "date": "2020-03-20T22:52:53Z"}, "message": "Update for PR feedback", "tree": {"sha": "b7187315db829de4585a98c2ccb3f98b9aed51a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7187315db829de4585a98c2ccb3f98b9aed51a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de9092438df744895cfc2a2a35fcc577b657cd13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de9092438df744895cfc2a2a35fcc577b657cd13", "html_url": "https://github.com/rust-lang/rust/commit/de9092438df744895cfc2a2a35fcc577b657cd13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de9092438df744895cfc2a2a35fcc577b657cd13/comments", "author": {"login": "1tgr", "id": 91127, "node_id": "MDQ6VXNlcjkxMTI3", "avatar_url": "https://avatars.githubusercontent.com/u/91127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1tgr", "html_url": "https://github.com/1tgr", "followers_url": "https://api.github.com/users/1tgr/followers", "following_url": "https://api.github.com/users/1tgr/following{/other_user}", "gists_url": "https://api.github.com/users/1tgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/1tgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1tgr/subscriptions", "organizations_url": "https://api.github.com/users/1tgr/orgs", "repos_url": "https://api.github.com/users/1tgr/repos", "events_url": "https://api.github.com/users/1tgr/events{/privacy}", "received_events_url": "https://api.github.com/users/1tgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "1tgr", "id": 91127, "node_id": "MDQ6VXNlcjkxMTI3", "avatar_url": "https://avatars.githubusercontent.com/u/91127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1tgr", "html_url": "https://github.com/1tgr", "followers_url": "https://api.github.com/users/1tgr/followers", "following_url": "https://api.github.com/users/1tgr/following{/other_user}", "gists_url": "https://api.github.com/users/1tgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/1tgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1tgr/subscriptions", "organizations_url": "https://api.github.com/users/1tgr/orgs", "repos_url": "https://api.github.com/users/1tgr/repos", "events_url": "https://api.github.com/users/1tgr/events{/privacy}", "received_events_url": "https://api.github.com/users/1tgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52208f3cf3949a4589cbaee69a9cb7d34ee0e9f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/52208f3cf3949a4589cbaee69a9cb7d34ee0e9f2", "html_url": "https://github.com/rust-lang/rust/commit/52208f3cf3949a4589cbaee69a9cb7d34ee0e9f2"}], "stats": {"total": 274, "additions": 189, "deletions": 85}, "files": [{"sha": "b54d0b0c9a13f978eafc2f0ec27665af2ef3a201", "filename": "clippy_lints/src/redundant_pub_crate.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/de9092438df744895cfc2a2a35fcc577b657cd13/clippy_lints%2Fsrc%2Fredundant_pub_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9092438df744895cfc2a2a35fcc577b657cd13/clippy_lints%2Fsrc%2Fredundant_pub_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_pub_crate.rs?ref=de9092438df744895cfc2a2a35fcc577b657cd13", "patch": "@@ -1,4 +1,5 @@\n-use crate::utils::span_lint_and_help;\n+use crate::utils::span_lint_and_then;\n+use rustc_errors::Applicability;\n use rustc_hir::{Item, ItemKind, VisibilityKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n@@ -43,12 +44,20 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RedundantPubCrate {\n         if let VisibilityKind::Crate { .. } = item.vis.node {\n             if !cx.access_levels.is_exported(item.hir_id) {\n                 if let Some(false) = self.is_exported.last() {\n-                    span_lint_and_help(\n+                    let span = item.span.with_hi(item.ident.span.hi());\n+                    span_lint_and_then(\n                         cx,\n                         REDUNDANT_PUB_CRATE,\n-                        item.span,\n+                        span,\n                         &format!(\"pub(crate) {} inside private module\", item.kind.descr()),\n-                        \"consider using `pub` instead of `pub(crate)`\",\n+                        |db| {\n+                            db.span_suggestion(\n+                                item.vis.span,\n+                                \"consider using\",\n+                                \"pub\".to_string(),\n+                                Applicability::MachineApplicable,\n+                            );\n+                        },\n                     )\n                 }\n             }"}, {"sha": "25f2fd061b88ef0a014f078c8752796354766195", "filename": "tests/ui/redundant_pub_crate.fixed", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/de9092438df744895cfc2a2a35fcc577b657cd13/tests%2Fui%2Fredundant_pub_crate.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/de9092438df744895cfc2a2a35fcc577b657cd13/tests%2Fui%2Fredundant_pub_crate.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pub_crate.fixed?ref=de9092438df744895cfc2a2a35fcc577b657cd13", "patch": "@@ -0,0 +1,107 @@\n+// run-rustfix\n+#![allow(dead_code)]\n+#![warn(clippy::redundant_pub_crate)]\n+\n+mod m1 {\n+    fn f() {}\n+    pub fn g() {} // private due to m1\n+    pub fn h() {}\n+\n+    mod m1_1 {\n+        fn f() {}\n+        pub fn g() {} // private due to m1_1 and m1\n+        pub fn h() {}\n+    }\n+\n+    pub mod m1_2 {\n+        // ^ private due to m1\n+        fn f() {}\n+        pub fn g() {} // private due to m1_2 and m1\n+        pub fn h() {}\n+    }\n+\n+    pub mod m1_3 {\n+        fn f() {}\n+        pub fn g() {} // private due to m1\n+        pub fn h() {}\n+    }\n+}\n+\n+pub(crate) mod m2 {\n+    fn f() {}\n+    pub fn g() {} // already crate visible due to m2\n+    pub fn h() {}\n+\n+    mod m2_1 {\n+        fn f() {}\n+        pub fn g() {} // private due to m2_1\n+        pub fn h() {}\n+    }\n+\n+    pub mod m2_2 {\n+        // ^ already crate visible due to m2\n+        fn f() {}\n+        pub fn g() {} // already crate visible due to m2_2 and m2\n+        pub fn h() {}\n+    }\n+\n+    pub mod m2_3 {\n+        fn f() {}\n+        pub fn g() {} // already crate visible due to m2\n+        pub fn h() {}\n+    }\n+}\n+\n+pub mod m3 {\n+    fn f() {}\n+    pub(crate) fn g() {} // ok: m3 is exported\n+    pub fn h() {}\n+\n+    mod m3_1 {\n+        fn f() {}\n+        pub fn g() {} // private due to m3_1\n+        pub fn h() {}\n+    }\n+\n+    pub(crate) mod m3_2 {\n+        // ^ ok\n+        fn f() {}\n+        pub fn g() {} // already crate visible due to m3_2\n+        pub fn h() {}\n+    }\n+\n+    pub mod m3_3 {\n+        fn f() {}\n+        pub(crate) fn g() {} // ok: m3 and m3_3 are exported\n+        pub fn h() {}\n+    }\n+}\n+\n+mod m4 {\n+    fn f() {}\n+    pub fn g() {} // private: not re-exported by `pub use m4::*`\n+    pub fn h() {}\n+\n+    mod m4_1 {\n+        fn f() {}\n+        pub fn g() {} // private due to m4_1\n+        pub fn h() {}\n+    }\n+\n+    pub mod m4_2 {\n+        // ^ private: not re-exported by `pub use m4::*`\n+        fn f() {}\n+        pub fn g() {} // private due to m4_2\n+        pub fn h() {}\n+    }\n+\n+    pub mod m4_3 {\n+        fn f() {}\n+        pub(crate) fn g() {} // ok: m4_3 is re-exported by `pub use m4::*`\n+        pub fn h() {}\n+    }\n+}\n+\n+pub use m4::*;\n+\n+fn main() {}"}, {"sha": "616286b4f39f4fb7f04910d92416e8970f0d7c4c", "filename": "tests/ui/redundant_pub_crate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de9092438df744895cfc2a2a35fcc577b657cd13/tests%2Fui%2Fredundant_pub_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9092438df744895cfc2a2a35fcc577b657cd13/tests%2Fui%2Fredundant_pub_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pub_crate.rs?ref=de9092438df744895cfc2a2a35fcc577b657cd13", "patch": "@@ -1,3 +1,5 @@\n+// run-rustfix\n+#![allow(dead_code)]\n #![warn(clippy::redundant_pub_crate)]\n \n mod m1 {"}, {"sha": "6fccdaa4e20374d16915519368f6d6ec11f10641", "filename": "tests/ui/redundant_pub_crate.stderr", "status": "modified", "additions": 67, "deletions": 81, "changes": 148, "blob_url": "https://github.com/rust-lang/rust/blob/de9092438df744895cfc2a2a35fcc577b657cd13/tests%2Fui%2Fredundant_pub_crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de9092438df744895cfc2a2a35fcc577b657cd13/tests%2Fui%2Fredundant_pub_crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pub_crate.stderr?ref=de9092438df744895cfc2a2a35fcc577b657cd13", "patch": "@@ -1,146 +1,132 @@\n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:5:5\n+  --> $DIR/redundant_pub_crate.rs:7:5\n    |\n LL |     pub(crate) fn g() {} // private due to m1\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |     ----------^^^^^\n+   |     |\n+   |     help: consider using: `pub`\n    |\n    = note: `-D clippy::redundant-pub-crate` implied by `-D warnings`\n-   = help: consider using `pub` instead of `pub(crate)`\n \n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:10:9\n+  --> $DIR/redundant_pub_crate.rs:12:9\n    |\n LL |         pub(crate) fn g() {} // private due to m1_1 and m1\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+   |         ----------^^^^^\n+   |         |\n+   |         help: consider using: `pub`\n \n error: pub(crate) module inside private module\n-  --> $DIR/redundant_pub_crate.rs:14:5\n-   |\n-LL | /     pub(crate) mod m1_2 {\n-LL | |         // ^ private due to m1\n-LL | |         fn f() {}\n-LL | |         pub(crate) fn g() {} // private due to m1_2 and m1\n-LL | |         pub fn h() {}\n-LL | |     }\n-   | |_____^\n+  --> $DIR/redundant_pub_crate.rs:16:5\n    |\n-   = help: consider using `pub` instead of `pub(crate)`\n+LL |     pub(crate) mod m1_2 {\n+   |     ----------^^^^^^^^^\n+   |     |\n+   |     help: consider using: `pub`\n \n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:17:9\n+  --> $DIR/redundant_pub_crate.rs:19:9\n    |\n LL |         pub(crate) fn g() {} // private due to m1_2 and m1\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+   |         ----------^^^^^\n+   |         |\n+   |         help: consider using: `pub`\n \n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:23:9\n+  --> $DIR/redundant_pub_crate.rs:25:9\n    |\n LL |         pub(crate) fn g() {} // private due to m1\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+   |         ----------^^^^^\n+   |         |\n+   |         help: consider using: `pub`\n \n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:30:5\n+  --> $DIR/redundant_pub_crate.rs:32:5\n    |\n LL |     pub(crate) fn g() {} // already crate visible due to m2\n-   |     ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+   |     ----------^^^^^\n+   |     |\n+   |     help: consider using: `pub`\n \n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:35:9\n+  --> $DIR/redundant_pub_crate.rs:37:9\n    |\n LL |         pub(crate) fn g() {} // private due to m2_1\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+   |         ----------^^^^^\n+   |         |\n+   |         help: consider using: `pub`\n \n error: pub(crate) module inside private module\n-  --> $DIR/redundant_pub_crate.rs:39:5\n+  --> $DIR/redundant_pub_crate.rs:41:5\n    |\n-LL | /     pub(crate) mod m2_2 {\n-LL | |         // ^ already crate visible due to m2\n-LL | |         fn f() {}\n-LL | |         pub(crate) fn g() {} // already crate visible due to m2_2 and m2\n-LL | |         pub fn h() {}\n-LL | |     }\n-   | |_____^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+LL |     pub(crate) mod m2_2 {\n+   |     ----------^^^^^^^^^\n+   |     |\n+   |     help: consider using: `pub`\n \n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:42:9\n+  --> $DIR/redundant_pub_crate.rs:44:9\n    |\n LL |         pub(crate) fn g() {} // already crate visible due to m2_2 and m2\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+   |         ----------^^^^^\n+   |         |\n+   |         help: consider using: `pub`\n \n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:48:9\n+  --> $DIR/redundant_pub_crate.rs:50:9\n    |\n LL |         pub(crate) fn g() {} // already crate visible due to m2\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+   |         ----------^^^^^\n+   |         |\n+   |         help: consider using: `pub`\n \n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:60:9\n+  --> $DIR/redundant_pub_crate.rs:62:9\n    |\n LL |         pub(crate) fn g() {} // private due to m3_1\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+   |         ----------^^^^^\n+   |         |\n+   |         help: consider using: `pub`\n \n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:67:9\n+  --> $DIR/redundant_pub_crate.rs:69:9\n    |\n LL |         pub(crate) fn g() {} // already crate visible due to m3_2\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+   |         ----------^^^^^\n+   |         |\n+   |         help: consider using: `pub`\n \n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:80:5\n+  --> $DIR/redundant_pub_crate.rs:82:5\n    |\n LL |     pub(crate) fn g() {} // private: not re-exported by `pub use m4::*`\n-   |     ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+   |     ----------^^^^^\n+   |     |\n+   |     help: consider using: `pub`\n \n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:85:9\n+  --> $DIR/redundant_pub_crate.rs:87:9\n    |\n LL |         pub(crate) fn g() {} // private due to m4_1\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+   |         ----------^^^^^\n+   |         |\n+   |         help: consider using: `pub`\n \n error: pub(crate) module inside private module\n-  --> $DIR/redundant_pub_crate.rs:89:5\n-   |\n-LL | /     pub(crate) mod m4_2 {\n-LL | |         // ^ private: not re-exported by `pub use m4::*`\n-LL | |         fn f() {}\n-LL | |         pub(crate) fn g() {} // private due to m4_2\n-LL | |         pub fn h() {}\n-LL | |     }\n-   | |_____^\n+  --> $DIR/redundant_pub_crate.rs:91:5\n    |\n-   = help: consider using `pub` instead of `pub(crate)`\n+LL |     pub(crate) mod m4_2 {\n+   |     ----------^^^^^^^^^\n+   |     |\n+   |     help: consider using: `pub`\n \n error: pub(crate) function inside private module\n-  --> $DIR/redundant_pub_crate.rs:92:9\n+  --> $DIR/redundant_pub_crate.rs:94:9\n    |\n LL |         pub(crate) fn g() {} // private due to m4_2\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using `pub` instead of `pub(crate)`\n+   |         ----------^^^^^\n+   |         |\n+   |         help: consider using: `pub`\n \n error: aborting due to 16 previous errors\n "}]}