{"sha": "a95dbdef702e4c3a1d6f0801f947eba53cb21a15", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NWRiZGVmNzAyZTRjM2ExZDZmMDgwMWY5NDdlYmE1M2NiMjFhMTU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-26T02:13:20Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-26T02:13:20Z"}, "message": "Cast memcpy args to correct types.", "tree": {"sha": "f65d43f640e620f9fe983cfebd5e834ea53ee635", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f65d43f640e620f9fe983cfebd5e834ea53ee635"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a95dbdef702e4c3a1d6f0801f947eba53cb21a15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a95dbdef702e4c3a1d6f0801f947eba53cb21a15", "html_url": "https://github.com/rust-lang/rust/commit/a95dbdef702e4c3a1d6f0801f947eba53cb21a15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a95dbdef702e4c3a1d6f0801f947eba53cb21a15/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b3182a99d8fc63f464a53e52de9a2a7fa22def8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b3182a99d8fc63f464a53e52de9a2a7fa22def8", "html_url": "https://github.com/rust-lang/rust/commit/9b3182a99d8fc63f464a53e52de9a2a7fa22def8"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "31dadcd14648da1e941e024922bd96036dc62bcb", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a95dbdef702e4c3a1d6f0801f947eba53cb21a15/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a95dbdef702e4c3a1d6f0801f947eba53cb21a15/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=a95dbdef702e4c3a1d6f0801f947eba53cb21a15", "patch": "@@ -637,8 +637,10 @@ fn build_memcpy(@block_ctxt cx,\n     auto memcpy = cx.fcx.ccx.intrinsics.get(\"llvm.memcpy\");\n     auto src_ptr = cx.build.PointerCast(src, T_ptr(T_i8()));\n     auto dst_ptr = cx.build.PointerCast(dst, T_ptr(T_i8()));\n-    auto size = lib.llvm.llvm.LLVMSizeOf(llty);\n-    auto align = lib.llvm.llvm.LLVMAlignOf(llty);\n+    auto size = cx.build.IntCast(lib.llvm.llvm.LLVMSizeOf(llty),\n+                                 T_i32());\n+    auto align = cx.build.IntCast(lib.llvm.llvm.LLVMAlignOf(llty),\n+                                  T_i32());\n     auto volatile = C_integral(0, T_i1());\n     ret res(cx, cx.build.Call(memcpy,\n                               vec(dst_ptr, src_ptr,\n@@ -1670,7 +1672,9 @@ fn declare_intrinsics(ModuleRef llmod) -> hashmap[str,ValueRef] {\n     // FIXME: switch this to 64-bit memcpy when targeting a 64-bit system.\n     let vec[TypeRef] T_memcpy_args = vec(T_ptr(T_i8()),\n                                          T_ptr(T_i8()),\n-                                         T_i32(), T_i32(), T_i1());\n+                                         T_i32(),\n+                                         T_i32(),\n+                                         T_i1());\n     auto trap = decl_cdecl_fn(llmod, \"llvm.trap\",\n                               T_fn(T_trap_args, T_void()));\n     auto memcpy = decl_cdecl_fn(llmod, \"llvm.memcpy\","}]}