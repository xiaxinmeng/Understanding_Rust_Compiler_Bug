{"sha": "f963eb2870f6e2b972cd9d432dc0ece954ab6452", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NjNlYjI4NzBmNmUyYjk3MmNkOWQ0MzJkYzBlY2U5NTRhYjY0NTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-12-18T05:05:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-12-18T05:05:09Z"}, "message": "Auto merge of #30272 - tshepang:doc-drain, r=bluss\n\nSecond sentence actually repeats info from first sentence. \"from start to end\" also feels like it adds nothing.\n\nI also extended Vec::drain example.", "tree": {"sha": "050c1ea6583b1724d4918fb99dd013bc8b7eafce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/050c1ea6583b1724d4918fb99dd013bc8b7eafce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f963eb2870f6e2b972cd9d432dc0ece954ab6452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f963eb2870f6e2b972cd9d432dc0ece954ab6452", "html_url": "https://github.com/rust-lang/rust/commit/f963eb2870f6e2b972cd9d432dc0ece954ab6452", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f963eb2870f6e2b972cd9d432dc0ece954ab6452/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27d551142f9e3cd2fc402555a8f6287dd0fc01ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/27d551142f9e3cd2fc402555a8f6287dd0fc01ac", "html_url": "https://github.com/rust-lang/rust/commit/27d551142f9e3cd2fc402555a8f6287dd0fc01ac"}, {"sha": "46e229661d18c1ab55dc9c739925361f1e2d3477", "url": "https://api.github.com/repos/rust-lang/rust/commits/46e229661d18c1ab55dc9c739925361f1e2d3477", "html_url": "https://github.com/rust-lang/rust/commit/46e229661d18c1ab55dc9c739925361f1e2d3477"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "931092f69242e00b91e399f4b260b33f111ef3a8", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f963eb2870f6e2b972cd9d432dc0ece954ab6452/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f963eb2870f6e2b972cd9d432dc0ece954ab6452/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=f963eb2870f6e2b972cd9d432dc0ece954ab6452", "patch": "@@ -1201,8 +1201,10 @@ impl String {\n     }\n \n     /// Create a draining iterator that removes the specified range in the string\n-    /// and yields the removed chars from start to end. The element range is\n-    /// removed even if the iterator is not consumed until the end.\n+    /// and yields the removed chars.\n+    ///\n+    /// Note: The element range is removed even if the iterator is not\n+    /// consumed until the end.\n     ///\n     /// # Panics\n     ///"}, {"sha": "fc74d1aed23734b989cfa8837579127e99c6bb86", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f963eb2870f6e2b972cd9d432dc0ece954ab6452/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f963eb2870f6e2b972cd9d432dc0ece954ab6452/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=f963eb2870f6e2b972cd9d432dc0ece954ab6452", "patch": "@@ -725,10 +725,12 @@ impl<T> Vec<T> {\n     }\n \n     /// Create a draining iterator that removes the specified range in the vector\n-    /// and yields the removed items from start to end. The element range is\n-    /// removed even if the iterator is not consumed until the end.\n+    /// and yields the removed items.\n     ///\n-    /// Note: It is unspecified how many elements are removed from the vector,\n+    /// Note 1: The element range is removed even if the iterator is not\n+    /// consumed until the end.\n+    ///\n+    /// Note 2: It is unspecified how many elements are removed from the vector,\n     /// if the `Drain` value is leaked.\n     ///\n     /// # Panics\n@@ -739,11 +741,14 @@ impl<T> Vec<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// // Draining using `..` clears the whole vector.\n     /// let mut v = vec![1, 2, 3];\n-    /// let u: Vec<_> = v.drain(..).collect();\n+    /// let u: Vec<_> = v.drain(1..).collect();\n+    /// assert_eq!(v, &[1]);\n+    /// assert_eq!(u, &[2, 3]);\n+    ///\n+    /// // A full range clears the vector\n+    /// v.drain(..);\n     /// assert_eq!(v, &[]);\n-    /// assert_eq!(u, &[1, 2, 3]);\n     /// ```\n     #[stable(feature = \"drain\", since = \"1.6.0\")]\n     pub fn drain<R>(&mut self, range: R) -> Drain<T>"}, {"sha": "73cb410040c4e7f4de12a8dca700ce0058c00081", "filename": "src/libcollections/vec_deque.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f963eb2870f6e2b972cd9d432dc0ece954ab6452/src%2Flibcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f963eb2870f6e2b972cd9d432dc0ece954ab6452/src%2Flibcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec_deque.rs?ref=f963eb2870f6e2b972cd9d432dc0ece954ab6452", "patch": "@@ -763,10 +763,12 @@ impl<T> VecDeque<T> {\n     }\n \n     /// Create a draining iterator that removes the specified range in the\n-    /// `VecDeque` and yields the removed items from start to end. The element\n-    /// range is removed even if the iterator is not consumed until the end.\n+    /// `VecDeque` and yields the removed items.\n     ///\n-    /// Note: It is unspecified how many elements are removed from the deque,\n+    /// Note 1: The element range is removed even if the iterator is not\n+    /// consumed until the end.\n+    ///\n+    /// Note 2: It is unspecified how many elements are removed from the deque,\n     /// if the `Drain` value is not dropped, but the borrow it holds expires\n     /// (eg. due to mem::forget).\n     ///\n@@ -779,11 +781,13 @@ impl<T> VecDeque<T> {\n     ///\n     /// ```\n     /// use std::collections::VecDeque;\n+\n+    /// let mut v: VecDeque<_> = vec![1, 2, 3].into_iter().collect();\n+    /// assert_eq!(vec![3].into_iter().collect::<VecDeque<_>>(), v.drain(2..).collect());\n+    /// assert_eq!(vec![1, 2].into_iter().collect::<VecDeque<_>>(), v);\n     ///\n-    /// // draining using `..` clears the whole deque.\n-    /// let mut v = VecDeque::new();\n-    /// v.push_back(1);\n-    /// assert_eq!(v.drain(..).next(), Some(1));\n+    /// // A full range clears all contents\n+    /// v.drain(..);\n     /// assert!(v.is_empty());\n     /// ```\n     #[inline]"}]}