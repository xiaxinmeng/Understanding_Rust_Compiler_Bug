{"sha": "7f100fff92ab4944f3d49cf7ffdcd91fc3578936", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMTAwZmZmOTJhYjQ5NDRmM2Q0OWNmN2ZmZGNkOTFmYzM1Nzg5MzY=", "commit": {"author": {"name": "Domantas Jadenkus", "email": "djadenkus@gmail.com", "date": "2021-02-13T20:51:48Z"}, "committer": {"name": "Domantas Jadenkus", "email": "djadenkus@gmail.com", "date": "2021-02-13T20:51:48Z"}, "message": "cargo fmt", "tree": {"sha": "5c3de8598d60c9ec74be9f00a3affefa68ab9c04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c3de8598d60c9ec74be9f00a3affefa68ab9c04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f100fff92ab4944f3d49cf7ffdcd91fc3578936", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f100fff92ab4944f3d49cf7ffdcd91fc3578936", "html_url": "https://github.com/rust-lang/rust/commit/7f100fff92ab4944f3d49cf7ffdcd91fc3578936", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f100fff92ab4944f3d49cf7ffdcd91fc3578936/comments", "author": {"login": "jDomantas", "id": 8329015, "node_id": "MDQ6VXNlcjgzMjkwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8329015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jDomantas", "html_url": "https://github.com/jDomantas", "followers_url": "https://api.github.com/users/jDomantas/followers", "following_url": "https://api.github.com/users/jDomantas/following{/other_user}", "gists_url": "https://api.github.com/users/jDomantas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jDomantas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jDomantas/subscriptions", "organizations_url": "https://api.github.com/users/jDomantas/orgs", "repos_url": "https://api.github.com/users/jDomantas/repos", "events_url": "https://api.github.com/users/jDomantas/events{/privacy}", "received_events_url": "https://api.github.com/users/jDomantas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jDomantas", "id": 8329015, "node_id": "MDQ6VXNlcjgzMjkwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8329015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jDomantas", "html_url": "https://github.com/jDomantas", "followers_url": "https://api.github.com/users/jDomantas/followers", "following_url": "https://api.github.com/users/jDomantas/following{/other_user}", "gists_url": "https://api.github.com/users/jDomantas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jDomantas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jDomantas/subscriptions", "organizations_url": "https://api.github.com/users/jDomantas/orgs", "repos_url": "https://api.github.com/users/jDomantas/repos", "events_url": "https://api.github.com/users/jDomantas/events{/privacy}", "received_events_url": "https://api.github.com/users/jDomantas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36e8a55bee478d296f3903eb4b14914914801b38", "url": "https://api.github.com/repos/rust-lang/rust/commits/36e8a55bee478d296f3903eb4b14914914801b38", "html_url": "https://github.com/rust-lang/rust/commit/36e8a55bee478d296f3903eb4b14914914801b38"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "d9388a737829dc55435d4230e07da7ddba6876b2", "filename": "crates/assists/src/handlers/generate_from_impl_for_enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f100fff92ab4944f3d49cf7ffdcd91fc3578936/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f100fff92ab4944f3d49cf7ffdcd91fc3578936/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs?ref=7f100fff92ab4944f3d49cf7ffdcd91fc3578936", "patch": "@@ -3,7 +3,7 @@ use ide_db::RootDatabase;\n use syntax::ast::{self, AstNode, NameOwner};\n use test_utils::mark;\n \n-use crate::{AssistContext, AssistId, AssistKind, Assists, utils::generate_trait_impl_text};\n+use crate::{utils::generate_trait_impl_text, AssistContext, AssistId, AssistKind, Assists};\n \n // Assist: generate_from_impl_for_enum\n //"}, {"sha": "050bcd4e29b374fdf9562b7be80243251fed9f29", "filename": "crates/assists/src/handlers/generate_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f100fff92ab4944f3d49cf7ffdcd91fc3578936/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f100fff92ab4944f3d49cf7ffdcd91fc3578936/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs?ref=7f100fff92ab4944f3d49cf7ffdcd91fc3578936", "patch": "@@ -1,6 +1,6 @@\n use syntax::ast::{self, AstNode, NameOwner};\n \n-use crate::{AssistContext, AssistId, AssistKind, Assists, utils::generate_impl_text};\n+use crate::{utils::generate_impl_text, AssistContext, AssistId, AssistKind, Assists};\n \n // Assist: generate_impl\n //"}, {"sha": "c69bc5cacd404bb8a6d16fa3862616f59fa228d3", "filename": "crates/assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7f100fff92ab4944f3d49cf7ffdcd91fc3578936/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f100fff92ab4944f3d49cf7ffdcd91fc3578936/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=7f100fff92ab4944f3d49cf7ffdcd91fc3578936", "patch": "@@ -1,9 +1,20 @@\n use ide_db::helpers::mod_path_to_ast;\n use ide_db::imports_locator;\n use itertools::Itertools;\n-use syntax::{SyntaxKind::{IDENT, WHITESPACE}, TextSize, ast::{self, AstNode, NameOwner, make}};\n-\n-use crate::{AssistId, AssistKind, assist_context::{AssistBuilder, AssistContext, Assists}, utils::{Cursor, DefaultMethods, add_trait_assoc_items_to_impl, filter_assoc_items, generate_trait_impl_text, render_snippet}};\n+use syntax::{\n+    ast::{self, make, AstNode, NameOwner},\n+    SyntaxKind::{IDENT, WHITESPACE},\n+    TextSize,\n+};\n+\n+use crate::{\n+    assist_context::{AssistBuilder, AssistContext, Assists},\n+    utils::{\n+        add_trait_assoc_items_to_impl, filter_assoc_items, generate_trait_impl_text,\n+        render_snippet, Cursor, DefaultMethods,\n+    },\n+    AssistId, AssistKind,\n+};\n \n // Assist: replace_derive_with_manual_impl\n //\n@@ -105,10 +116,9 @@ fn add_assist(\n             update_attribute(builder, &input, &trait_name, &attr);\n             let trait_path = format!(\"{}\", trait_path);\n             match (ctx.config.snippet_cap, impl_def_with_items) {\n-                (None, _) => builder.insert(\n-                    insert_pos,\n-                    generate_trait_impl_text(adt, &trait_path, \"\"),\n-                ),\n+                (None, _) => {\n+                    builder.insert(insert_pos, generate_trait_impl_text(adt, &trait_path, \"\"))\n+                }\n                 (Some(cap), None) => builder.insert_snippet(\n                     cap,\n                     insert_pos,"}, {"sha": "98c4462bbc34fe03bd3f975f5b5bb93516cde2d0", "filename": "crates/assists/src/utils.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7f100fff92ab4944f3d49cf7ffdcd91fc3578936/crates%2Fassists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f100fff92ab4944f3d49cf7ffdcd91fc3578936/crates%2Fassists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils.rs?ref=7f100fff92ab4944f3d49cf7ffdcd91fc3578936", "patch": "@@ -380,11 +380,8 @@ fn generate_impl_text_inner(adt: &ast::Adt, trait_text: Option<&str>, code: &str\n     let type_params = adt.generic_param_list();\n     let mut buf = String::with_capacity(code.len());\n     buf.push_str(\"\\n\\n\");\n-    adt\n-        .attrs()\n-        .filter(|attr| {\n-            attr.as_simple_call().map(|(name, _arg)| name == \"cfg\").unwrap_or(false)\n-        })\n+    adt.attrs()\n+        .filter(|attr| attr.as_simple_call().map(|(name, _arg)| name == \"cfg\").unwrap_or(false))\n         .for_each(|attr| buf.push_str(format!(\"{}\\n\", attr.to_string()).as_str()));\n     buf.push_str(\"impl\");\n     if let Some(type_params) = &type_params {"}]}