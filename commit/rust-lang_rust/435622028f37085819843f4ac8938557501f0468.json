{"sha": "435622028f37085819843f4ac8938557501f0468", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNTYyMjAyOGYzNzA4NTgxOTg0M2Y0YWM4OTM4NTU3NTAxZjA0Njg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-04T23:31:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-04T23:31:18Z"}, "message": "Auto merge of #24652 - achanda:ip-long, r=alexcrichton", "tree": {"sha": "babc224c6e68a6bade7097f875d9e0cbb74db5d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/babc224c6e68a6bade7097f875d9e0cbb74db5d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/435622028f37085819843f4ac8938557501f0468", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/435622028f37085819843f4ac8938557501f0468", "html_url": "https://github.com/rust-lang/rust/commit/435622028f37085819843f4ac8938557501f0468", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/435622028f37085819843f4ac8938557501f0468/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f49a98431b9a13cec00bb8e601c28e189d7eabbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f49a98431b9a13cec00bb8e601c28e189d7eabbe", "html_url": "https://github.com/rust-lang/rust/commit/f49a98431b9a13cec00bb8e601c28e189d7eabbe"}, {"sha": "285ab0266c7dd540d2d8df202cd1773fcd2fc572", "url": "https://api.github.com/repos/rust-lang/rust/commits/285ab0266c7dd540d2d8df202cd1773fcd2fc572", "html_url": "https://github.com/rust-lang/rust/commit/285ab0266c7dd540d2d8df202cd1773fcd2fc572"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "bdf81d8cd6a1e9d5ced2e37893c422c79f845d7e", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/435622028f37085819843f4ac8938557501f0468/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/435622028f37085819843f4ac8938557501f0468/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=435622028f37085819843f4ac8938557501f0468", "patch": "@@ -174,7 +174,6 @@ impl Ipv4Addr {\n                       ((self.octets()[0] as u16) << 8) | self.octets()[1] as u16,\n                       ((self.octets()[2] as u16) << 8) | self.octets()[3] as u16)\n     }\n-\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -247,6 +246,21 @@ impl FromInner<libc::in_addr> for Ipv4Addr {\n     }\n }\n \n+#[stable(feature = \"ip_u32\", since = \"1.1.0\")]\n+impl From<Ipv4Addr> for u32 {\n+    fn from(ip: Ipv4Addr) -> u32 {\n+        let ip = ip.octets();\n+        ((ip[0] as u32) << 24) + ((ip[1] as u32) << 16) + ((ip[2] as u32) << 8) + (ip[3] as u32)\n+    }\n+}\n+\n+#[stable(feature = \"ip_u32\", since = \"1.1.0\")]\n+impl From<u32> for Ipv4Addr {\n+    fn from(ip: u32) -> Ipv4Addr {\n+        Ipv4Addr::new((ip >> 24) as u8, (ip >> 16) as u8, (ip >> 8) as u8, ip as u8)\n+    }\n+}\n+\n impl Ipv6Addr {\n     /// Creates a new IPv6 address from eight 16-bit segments.\n     ///\n@@ -746,4 +760,16 @@ mod tests {\n         let a = sa4(Ipv4Addr::new(77, 88, 21, 11), 12345);\n         assert_eq!(Ok(vec![a]), tsa(a));\n     }\n+\n+    #[test]\n+    fn test_ipv4_to_int() {\n+        let a = Ipv4Addr::new(127, 0, 0, 1);\n+        assert_eq!(u32::from(a), 2130706433);\n+    }\n+\n+    #[test]\n+    fn test_int_to_ipv4() {\n+        let a = Ipv4Addr::new(127, 0, 0, 1);\n+        assert_eq!(Ipv4Addr::from(2130706433), a);\n+    }\n }"}]}