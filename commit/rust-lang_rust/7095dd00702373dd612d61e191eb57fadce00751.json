{"sha": "7095dd00702373dd612d61e191eb57fadce00751", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwOTVkZDAwNzAyMzczZGQ2MTJkNjFlMTkxZWI1N2ZhZGNlMDA3NTE=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-03T13:19:51Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-03T14:34:05Z"}, "message": "core: merge IteratorPairExt into IteratorExt", "tree": {"sha": "cdfc1d5ba74268a44822015b3591b4184b392225", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdfc1d5ba74268a44822015b3591b4184b392225"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7095dd00702373dd612d61e191eb57fadce00751", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7095dd00702373dd612d61e191eb57fadce00751", "html_url": "https://github.com/rust-lang/rust/commit/7095dd00702373dd612d61e191eb57fadce00751", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7095dd00702373dd612d61e191eb57fadce00751/comments", "author": null, "committer": null, "parents": [{"sha": "6002c13f9bbf2957861a66737df9c9599dcee4be", "url": "https://api.github.com/repos/rust-lang/rust/commits/6002c13f9bbf2957861a66737df9c9599dcee4be", "html_url": "https://github.com/rust-lang/rust/commit/6002c13f9bbf2957861a66737df9c9599dcee4be"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "963377ff6b33061fb32382473a76998e44630c83", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7095dd00702373dd612d61e191eb57fadce00751/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7095dd00702373dd612d61e191eb57fadce00751/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=7095dd00702373dd612d61e191eb57fadce00751", "patch": "@@ -737,20 +737,15 @@ pub trait IteratorExt: Iterator + Sized {\n     fn rev(self) -> Rev<Self> {\n         Rev{iter: self}\n     }\n-}\n-\n-#[unstable = \"trait is unstable\"]\n-impl<I> IteratorExt for I where I: Iterator {}\n \n-/// Extention trait for iterators of pairs.\n-#[unstable = \"newly added trait, likely to be merged with IteratorExt\"]\n-pub trait IteratorPairExt<A, B>: Iterator<Item=(A, B)> + Sized {\n     /// Converts an iterator of pairs into a pair of containers.\n     ///\n     /// Loops through the entire iterator, collecting the first component of\n     /// each item into one new container, and the second component into another.\n-    fn unzip<FromA, FromB>(mut self) -> (FromA, FromB) where\n-        FromA: Default + Extend<A>, FromB: Default + Extend<B>\n+    fn unzip<A, B, FromA, FromB>(mut self) -> (FromA, FromB) where\n+        FromA: Default + Extend<A>,\n+        FromB: Default + Extend<B>,\n+        Self: Iterator<Item=(A, B)>,\n     {\n         struct SizeHint<A>(uint, Option<uint>);\n         impl<A> Iterator for SizeHint<A> {\n@@ -778,7 +773,8 @@ pub trait IteratorPairExt<A, B>: Iterator<Item=(A, B)> + Sized {\n     }\n }\n \n-impl<A, B, I> IteratorPairExt<A, B> for I where I: Iterator<Item=(A, B)> {}\n+#[unstable = \"trait is unstable\"]\n+impl<I> IteratorExt for I where I: Iterator {}\n \n /// A range iterator able to yield elements from both ends\n ///"}, {"sha": "1355825e56dfda209a1d3999c0947362ee249dcb", "filename": "src/libcore/prelude.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7095dd00702373dd612d61e191eb57fadce00751/src%2Flibcore%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7095dd00702373dd612d61e191eb57fadce00751/src%2Flibcore%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprelude.rs?ref=7095dd00702373dd612d61e191eb57fadce00751", "patch": "@@ -44,7 +44,7 @@ pub use cmp::{PartialEq, PartialOrd, Eq, Ord};\n pub use iter::{Extend, IteratorExt};\n pub use iter::{Iterator, DoubleEndedIterator};\n pub use iter::{IteratorCloneExt, CloneIteratorExt};\n-pub use iter::{IteratorOrdExt, ExactSizeIterator, IteratorPairExt};\n+pub use iter::{IteratorOrdExt, ExactSizeIterator};\n pub use option::Option::{mod, Some, None};\n pub use ptr::{PtrExt, MutPtrExt};\n pub use result::Result::{mod, Ok, Err};"}, {"sha": "2d2f3f895d0c1f20b86087f4f896c0972ad83640", "filename": "src/libstd/prelude/v1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7095dd00702373dd612d61e191eb57fadce00751/src%2Flibstd%2Fprelude%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7095dd00702373dd612d61e191eb57fadce00751/src%2Flibstd%2Fprelude%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude%2Fv1.rs?ref=7095dd00702373dd612d61e191eb57fadce00751", "patch": "@@ -30,7 +30,6 @@\n #[stable] #[doc(no_inline)] pub use iter::ExactSizeIterator;\n #[stable] #[doc(no_inline)] pub use iter::{Iterator, IteratorExt, Extend};\n #[stable] #[doc(no_inline)] pub use iter::{IteratorCloneExt, IteratorOrdExt};\n-#[stable] #[doc(no_inline)] pub use iter::IteratorPairExt;\n #[stable] #[doc(no_inline)] pub use option::Option::{mod, Some, None};\n #[stable] #[doc(no_inline)] pub use ptr::{PtrExt, MutPtrExt};\n #[stable] #[doc(no_inline)] pub use result::Result::{mod, Ok, Err};"}]}