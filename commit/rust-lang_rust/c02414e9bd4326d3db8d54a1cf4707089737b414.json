{"sha": "c02414e9bd4326d3db8d54a1cf4707089737b414", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMjQxNGU5YmQ0MzI2ZDNkYjhkNTRhMWNmNDcwNzA4OTczN2I0MTQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-06-19T13:58:40Z"}, "committer": {"name": "ggomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-06-21T13:50:27Z"}, "message": "Fix overflow error in thread::sleep", "tree": {"sha": "2d8b3b7e914b10c3721663762212c0ad30ff815c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d8b3b7e914b10c3721663762212c0ad30ff815c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c02414e9bd4326d3db8d54a1cf4707089737b414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c02414e9bd4326d3db8d54a1cf4707089737b414", "html_url": "https://github.com/rust-lang/rust/commit/c02414e9bd4326d3db8d54a1cf4707089737b414", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c02414e9bd4326d3db8d54a1cf4707089737b414/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3313e50594aeb8e81dbe7bac27addcf41be40f9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3313e50594aeb8e81dbe7bac27addcf41be40f9c", "html_url": "https://github.com/rust-lang/rust/commit/3313e50594aeb8e81dbe7bac27addcf41be40f9c"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "371319a93d2f2440cf117f7b1d18991613fd7040", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c02414e9bd4326d3db8d54a1cf4707089737b414/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02414e9bd4326d3db8d54a1cf4707089737b414/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=c02414e9bd4326d3db8d54a1cf4707089737b414", "patch": "@@ -125,16 +125,25 @@ impl Thread {\n     }\n \n     pub fn sleep(dur: Duration) {\n-        let mut ts = libc::timespec {\n-            tv_sec: dur.as_secs() as libc::time_t,\n-            tv_nsec: dur.subsec_nanos() as libc::c_long,\n-        };\n+        let mut secs = dur.as_secs();\n+        let mut nsecs = dur.subsec_nanos() as libc::c_long;\n \n         // If we're awoken with a signal then the return value will be -1 and\n         // nanosleep will fill in `ts` with the remaining time.\n         unsafe {\n-            while libc::nanosleep(&ts, &mut ts) == -1 {\n-                assert_eq!(os::errno(), libc::EINTR);\n+            while secs > 0 || nsecs > 0 {\n+                let mut ts = libc::timespec {\n+                    tv_sec: cmp::min(libc::time_t::max_value() as u64, secs) as libc::time_t,\n+                    tv_nsec: nsecs,\n+                };\n+                secs -= ts.tv_sec as u64;\n+                if libc::nanosleep(&ts, &mut ts) == -1 {\n+                    assert_eq!(os::errno(), libc::EINTR);\n+                    secs += ts.tv_sec as u64;\n+                    nsecs = ts.tv_nsec;\n+                } else {\n+                    nsecs = 0;\n+                }\n             }\n         }\n     }"}, {"sha": "8b06b02f3cba5fe791ae812c91c206d81d28011b", "filename": "src/test/run-pass/sleep.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c02414e9bd4326d3db8d54a1cf4707089737b414/src%2Ftest%2Frun-pass%2Fsleep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02414e9bd4326d3db8d54a1cf4707089737b414/src%2Ftest%2Frun-pass%2Fsleep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsleep.rs?ref=c02414e9bd4326d3db8d54a1cf4707089737b414", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::thread::{self, sleep};\n+use std::time::Duration;\n+use std::sync::{Arc, Mutex};\n+use std::u64;\n+\n+fn main() {\n+    let finished = Arc::new(Mutex::new(false));\n+    let t_finished = finished.clone();\n+    thread::spawn(move || {\n+        sleep(Duration::new(u64::MAX, 0));\n+        *t_finished.lock().unwrap() = true;\n+    });\n+    sleep(Duration::from_millis(100));\n+    assert_eq!(*finished.lock().unwrap(), false);\n+}"}]}