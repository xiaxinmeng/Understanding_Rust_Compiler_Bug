{"sha": "c392832195ec9e900fe38cb76de7bf1e8e98df46", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzOTI4MzIxOTVlYzllOTAwZmUzOGNiNzZkZTdiZjFlOGU5OGRmNDY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-05T10:46:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-05T10:46:51Z"}, "message": "Rollup merge of #59690 - xfix:patch-17, r=cramertj\n\nMark unix::ffi::OsStrExt methods as inline\n\nThis is a small change, but I found it surprising it's not inlined looking at the assembly.", "tree": {"sha": "568b5431b5c595b2dc0220fbe88b7fe9c65c8086", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/568b5431b5c595b2dc0220fbe88b7fe9c65c8086"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c392832195ec9e900fe38cb76de7bf1e8e98df46", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcpzIbCRBK7hj4Ov3rIwAAdHIIAFLJLXO9R6FlVt9kAMAp+5eT\n1qblonaVyi9r9CarVVL3N7JEUtJ8ho//v1jBlgXZjeohNgbSkJc8bCk/7F9wwuP7\n6DRHPOWqjDFtvBkODOR/fc1h1H/yJud3u/y844Gel4yu4hh8iibWnVJX3pfXqllP\nFTTpgJ/5Qcz9tcajADmm0A0skyup8Ij13RFeU6vXPdeJLDFlIxy/jUWDx4CwrdqN\naCa1Azo/VlPyBML/aRXLc1lkZHMqnPwhGdYKOhPF0Gv8QqBtzk12AxiIFhTIAson\nkEwdR0n8eulxP2XNUR/BSNr/rD/f8kRySqmNUVcIn33HwB25doBz3hK7W5DjDew=\n=P4zm\n-----END PGP SIGNATURE-----\n", "payload": "tree 568b5431b5c595b2dc0220fbe88b7fe9c65c8086\nparent 2e7be1ed6c1e3fec7b4aac6550f94694f5c43ae9\nparent a37c33b9261f534b56434c83258ff24d24bf9351\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1554461211 +0200\ncommitter GitHub <noreply@github.com> 1554461211 +0200\n\nRollup merge of #59690 - xfix:patch-17, r=cramertj\n\nMark unix::ffi::OsStrExt methods as inline\n\nThis is a small change, but I found it surprising it's not inlined looking at the assembly.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c392832195ec9e900fe38cb76de7bf1e8e98df46", "html_url": "https://github.com/rust-lang/rust/commit/c392832195ec9e900fe38cb76de7bf1e8e98df46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c392832195ec9e900fe38cb76de7bf1e8e98df46/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e7be1ed6c1e3fec7b4aac6550f94694f5c43ae9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e7be1ed6c1e3fec7b4aac6550f94694f5c43ae9", "html_url": "https://github.com/rust-lang/rust/commit/2e7be1ed6c1e3fec7b4aac6550f94694f5c43ae9"}, {"sha": "a37c33b9261f534b56434c83258ff24d24bf9351", "url": "https://api.github.com/repos/rust-lang/rust/commits/a37c33b9261f534b56434c83258ff24d24bf9351", "html_url": "https://github.com/rust-lang/rust/commit/a37c33b9261f534b56434c83258ff24d24bf9351"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "13aee783750f1dfbb8a9cc81fcddcce61890baa0", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c392832195ec9e900fe38cb76de7bf1e8e98df46/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c392832195ec9e900fe38cb76de7bf1e8e98df46/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=c392832195ec9e900fe38cb76de7bf1e8e98df46", "patch": "@@ -960,6 +960,7 @@ impl IntoInner<Buf> for OsString {\n }\n \n impl AsInner<Slice> for OsStr {\n+    #[inline]\n     fn as_inner(&self) -> &Slice {\n         &self.inner\n     }"}, {"sha": "a4961974d89ab3ed2c6aeda0a22b21644ea596b0", "filename": "src/libstd/sys_common/os_str_bytes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c392832195ec9e900fe38cb76de7bf1e8e98df46/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c392832195ec9e900fe38cb76de7bf1e8e98df46/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs?ref=c392832195ec9e900fe38cb76de7bf1e8e98df46", "patch": "@@ -236,9 +236,11 @@ pub trait OsStrExt {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl OsStrExt for OsStr {\n+    #[inline]\n     fn from_bytes(slice: &[u8]) -> &OsStr {\n         unsafe { mem::transmute(slice) }\n     }\n+    #[inline]\n     fn as_bytes(&self) -> &[u8] {\n         &self.as_inner().inner\n     }"}]}