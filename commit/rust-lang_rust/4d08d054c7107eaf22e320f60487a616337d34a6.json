{"sha": "4d08d054c7107eaf22e320f60487a616337d34a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMDhkMDU0YzcxMDdlYWYyMmUzMjBmNjA0ODdhNjE2MzM3ZDM0YTY=", "commit": {"author": {"name": "Andrew Straw", "email": "strawman@astraw.com", "date": "2018-01-20T22:23:44Z"}, "committer": {"name": "Andrew Straw", "email": "strawman@astraw.com", "date": "2018-01-20T22:39:12Z"}, "message": "fix doctests for BTreeSet to use BTreeSet (not BTreeMap)\n\nThis fixes #47624", "tree": {"sha": "b9cc83959a117545f9c501cc49bca2a1a81e8ab4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9cc83959a117545f9c501cc49bca2a1a81e8ab4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d08d054c7107eaf22e320f60487a616337d34a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d08d054c7107eaf22e320f60487a616337d34a6", "html_url": "https://github.com/rust-lang/rust/commit/4d08d054c7107eaf22e320f60487a616337d34a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d08d054c7107eaf22e320f60487a616337d34a6/comments", "author": {"login": "astraw", "id": 30176, "node_id": "MDQ6VXNlcjMwMTc2", "avatar_url": "https://avatars.githubusercontent.com/u/30176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astraw", "html_url": "https://github.com/astraw", "followers_url": "https://api.github.com/users/astraw/followers", "following_url": "https://api.github.com/users/astraw/following{/other_user}", "gists_url": "https://api.github.com/users/astraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/astraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astraw/subscriptions", "organizations_url": "https://api.github.com/users/astraw/orgs", "repos_url": "https://api.github.com/users/astraw/repos", "events_url": "https://api.github.com/users/astraw/events{/privacy}", "received_events_url": "https://api.github.com/users/astraw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "astraw", "id": 30176, "node_id": "MDQ6VXNlcjMwMTc2", "avatar_url": "https://avatars.githubusercontent.com/u/30176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astraw", "html_url": "https://github.com/astraw", "followers_url": "https://api.github.com/users/astraw/followers", "following_url": "https://api.github.com/users/astraw/following{/other_user}", "gists_url": "https://api.github.com/users/astraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/astraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astraw/subscriptions", "organizations_url": "https://api.github.com/users/astraw/orgs", "repos_url": "https://api.github.com/users/astraw/repos", "events_url": "https://api.github.com/users/astraw/events{/privacy}", "received_events_url": "https://api.github.com/users/astraw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15a1e2844dfea7850be5c6c901b67ceff370b0eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/15a1e2844dfea7850be5c6c901b67ceff370b0eb", "html_url": "https://github.com/rust-lang/rust/commit/15a1e2844dfea7850be5c6c901b67ceff370b0eb"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "327eaaf465130313227ef553b821486559666df0", "filename": "src/liballoc/btree/set.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4d08d054c7107eaf22e320f60487a616337d34a6/src%2Fliballoc%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d08d054c7107eaf22e320f60487a616337d34a6/src%2Fliballoc%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbtree%2Fset.rs?ref=4d08d054c7107eaf22e320f60487a616337d34a6", "patch": "@@ -658,26 +658,26 @@ impl<T: Ord> BTreeSet<T> {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// use std::collections::BTreeMap;\n+    /// use std::collections::BTreeSet;\n     ///\n-    /// let mut a = BTreeMap::new();\n-    /// a.insert(1, \"a\");\n-    /// a.insert(2, \"b\");\n-    /// a.insert(3, \"c\");\n-    /// a.insert(17, \"d\");\n-    /// a.insert(41, \"e\");\n+    /// let mut a = BTreeSet::new();\n+    /// a.insert(1);\n+    /// a.insert(2);\n+    /// a.insert(3);\n+    /// a.insert(17);\n+    /// a.insert(41);\n     ///\n     /// let b = a.split_off(&3);\n     ///\n     /// assert_eq!(a.len(), 2);\n     /// assert_eq!(b.len(), 3);\n     ///\n-    /// assert_eq!(a[&1], \"a\");\n-    /// assert_eq!(a[&2], \"b\");\n+    /// assert!(a.contains(&1));\n+    /// assert!(a.contains(&2));\n     ///\n-    /// assert_eq!(b[&3], \"c\");\n-    /// assert_eq!(b[&17], \"d\");\n-    /// assert_eq!(b[&41], \"e\");\n+    /// assert!(b.contains(&3));\n+    /// assert!(b.contains(&17));\n+    /// assert!(b.contains(&41));\n     /// ```\n     #[stable(feature = \"btree_split_off\", since = \"1.11.0\")]\n     pub fn split_off<Q: ?Sized + Ord>(&mut self, key: &Q) -> Self where T: Borrow<Q> {"}]}