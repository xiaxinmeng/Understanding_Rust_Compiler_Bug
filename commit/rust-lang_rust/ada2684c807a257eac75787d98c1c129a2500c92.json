{"sha": "ada2684c807a257eac75787d98c1c129a2500c92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYTI2ODRjODA3YTI1N2VhYzc1Nzg3ZDk4YzFjMTI5YTI1MDBjOTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-08T00:40:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-08T00:40:58Z"}, "message": "Rollup merge of #62478 - fakenine:normalize_use_of_backticks_compiler_messages_p3, r=Centril\n\nnormalize use of backticks for compiler messages in librustc_codegen\n\nhttps://github.com/rust-lang/rust/issues/60532", "tree": {"sha": "8404748bb9eef77e4888e4b63f93be49206f9397", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8404748bb9eef77e4888e4b63f93be49206f9397"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ada2684c807a257eac75787d98c1c129a2500c92", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdIpEaCRBK7hj4Ov3rIwAAdHIIAEhofAIiZeoe+2MTEvjHnlZ4\np+fiqA7Gzd4tEg2iZujgo6NfxK6q3bAeGkVRW3oM1wlCCcACoYYH0j5KCOLghdGB\n3NpxNxg/Ym/7Nu7TdzS9UYBdMt5FQ29V4gAM4QdPr8cq2UBtOmOyDwriHgxbV7th\n10Hjd32otzUYMOXFkBFUnOvrAL/CII+ZAU9C2bIGcfh7/3uh7/7bhsID33VWm5BL\nfq58nFP8op9tdysCmvlk0/NS6RvyZrwgAOUoLXRh/3C8YT6awpjbB6VZnWfjEgyj\nhEXDa3KAY3csnEhIJieddwiBksjNYf2Ni/V3qFtQmUwdlJqAwosTAWAlzY6UccU=\n=9mYk\n-----END PGP SIGNATURE-----\n", "payload": "tree 8404748bb9eef77e4888e4b63f93be49206f9397\nparent b0062cadaba08cab7698de930fd1240ca1087fdc\nparent 8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1562546458 +0200\ncommitter GitHub <noreply@github.com> 1562546458 +0200\n\nRollup merge of #62478 - fakenine:normalize_use_of_backticks_compiler_messages_p3, r=Centril\n\nnormalize use of backticks for compiler messages in librustc_codegen\n\nhttps://github.com/rust-lang/rust/issues/60532\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ada2684c807a257eac75787d98c1c129a2500c92", "html_url": "https://github.com/rust-lang/rust/commit/ada2684c807a257eac75787d98c1c129a2500c92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ada2684c807a257eac75787d98c1c129a2500c92/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0062cadaba08cab7698de930fd1240ca1087fdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0062cadaba08cab7698de930fd1240ca1087fdc", "html_url": "https://github.com/rust-lang/rust/commit/b0062cadaba08cab7698de930fd1240ca1087fdc"}, {"sha": "8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "html_url": "https://github.com/rust-lang/rust/commit/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "bb92225c50ea055a8925ae0616b60bdccc740026", "filename": "src/librustc_codegen_llvm/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ada2684c807a257eac75787d98c1c129a2500c92/src%2Flibrustc_codegen_llvm%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada2684c807a257eac75787d98c1c129a2500c92/src%2Flibrustc_codegen_llvm%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fasm.rs?ref=ada2684c807a257eac75787d98c1c129a2500c92", "patch": "@@ -146,7 +146,7 @@ fn inline_asm_call(\n     unsafe {\n         // Ask LLVM to verify that the constraints are well-formed.\n         let constraints_ok = llvm::LLVMRustInlineAsmVerify(fty, cons.as_ptr());\n-        debug!(\"Constraint verification result: {:?}\", constraints_ok);\n+        debug!(\"constraint verification result: {:?}\", constraints_ok);\n         if constraints_ok {\n             let v = llvm::LLVMRustInlineAsm(\n                 fty,"}, {"sha": "5ac1cf8c36f93ca0c01d9e606d4e0f902048ebcc", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ada2684c807a257eac75787d98c1c129a2500c92/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada2684c807a257eac75787d98c1c129a2500c92/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=ada2684c807a257eac75787d98c1c129a2500c92", "patch": "@@ -215,7 +215,7 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         funclet: Option<&Funclet<'ll>>,\n     ) -> &'ll Value {\n \n-        debug!(\"Invoke {:?} with args ({:?})\",\n+        debug!(\"invoke {:?} with args ({:?})\",\n                llfn,\n                args);\n \n@@ -1035,7 +1035,7 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         funclet: Option<&Funclet<'ll>>,\n     ) -> &'ll Value {\n \n-        debug!(\"Call {:?} with args ({:?})\",\n+        debug!(\"call {:?} with args ({:?})\",\n                llfn,\n                args);\n \n@@ -1238,7 +1238,7 @@ impl Builder<'a, 'll, 'tcx> {\n         if dest_ptr_ty == stored_ptr_ty {\n             ptr\n         } else {\n-            debug!(\"Type mismatch in store. \\\n+            debug!(\"type mismatch in store. \\\n                     Expected {:?}, got {:?}; inserting bitcast\",\n                    dest_ptr_ty, stored_ptr_ty);\n             self.bitcast(ptr, stored_ptr_ty)\n@@ -1274,7 +1274,7 @@ impl Builder<'a, 'll, 'tcx> {\n             .map(|(i, (expected_ty, &actual_val))| {\n                 let actual_ty = self.val_ty(actual_val);\n                 if expected_ty != actual_ty {\n-                    debug!(\"Type mismatch in function call of {:?}. \\\n+                    debug!(\"type mismatch in function call of {:?}. \\\n                             Expected {:?} for param {}, got {:?}; injecting bitcast\",\n                            llfn, expected_ty, i, actual_ty);\n                     self.bitcast(actual_val, expected_ty)"}, {"sha": "ca7e17ec97a39362c5b0b0ba63feef48e46ad2f8", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ada2684c807a257eac75787d98c1c129a2500c92/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada2684c807a257eac75787d98c1c129a2500c92/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=ada2684c807a257eac75787d98c1c129a2500c92", "patch": "@@ -433,7 +433,7 @@ pub fn maybe_create_entry_wrapper<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(cx: &'\n         if cx.get_defined_value(\"main\").is_some() {\n             // FIXME: We should be smart and show a better diagnostic here.\n             cx.sess().struct_span_err(sp, \"entry symbol `main` defined multiple times\")\n-                     .help(\"did you use #[no_mangle] on `fn main`? Use #[start] instead\")\n+                     .help(\"did you use `#[no_mangle]` on `fn main`? Use `#[start]` instead\")\n                      .emit();\n             cx.sess().abort_if_errors();\n             bug!();"}, {"sha": "010be3e8c7404b9ad7447d140f0079432e7e7f3e", "filename": "src/librustc_codegen_ssa/mir/place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ada2684c807a257eac75787d98c1c129a2500c92/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada2684c807a257eac75787d98c1c129a2500c92/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs?ref=ada2684c807a257eac75787d98c1c129a2500c92", "patch": "@@ -138,7 +138,7 @@ impl<'a, 'tcx, V: CodegenObject> PlaceRef<'tcx, V> {\n         //   * packed struct - there is no alignment padding\n         match field.ty.sty {\n             _ if self.llextra.is_none() => {\n-                debug!(\"Unsized field `{}`, of `{:?}` has no metadata for adjustment\",\n+                debug!(\"unsized field `{}`, of `{:?}` has no metadata for adjustment\",\n                     ix, self.llval);\n                 return simple();\n             }"}, {"sha": "6b9258c32e7b0a9bb1b69c79777b4e6f371a0d8c", "filename": "src/librustc_codegen_utils/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ada2684c807a257eac75787d98c1c129a2500c92/src%2Flibrustc_codegen_utils%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada2684c807a257eac75787d98c1c129a2500c92/src%2Flibrustc_codegen_utils%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flink.rs?ref=ada2684c807a257eac75787d98c1c129a2500c92", "patch": "@@ -57,7 +57,7 @@ pub fn find_crate_name(sess: Option<&Session>,\n         if let Some(ref s) = sess.opts.crate_name {\n             if let Some((attr, name)) = attr_crate_name {\n                 if name.as_str() != *s {\n-                    let msg = format!(\"--crate-name and #[crate_name] are \\\n+                    let msg = format!(\"`--crate-name` and `#[crate_name]` are \\\n                                        required to match, but `{}` != `{}`\",\n                                       s, name);\n                     sess.span_err(attr.span, &msg);"}, {"sha": "23ad39a6f92d58578d4e38ddf8398cb828db49cd", "filename": "src/test/ui/crate-name-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ada2684c807a257eac75787d98c1c129a2500c92/src%2Ftest%2Fui%2Fcrate-name-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada2684c807a257eac75787d98c1c129a2500c92/src%2Ftest%2Fui%2Fcrate-name-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-name-mismatch.rs?ref=ada2684c807a257eac75787d98c1c129a2500c92", "patch": "@@ -1,6 +1,6 @@\n // compile-flags: --crate-name foo\n \n #![crate_name = \"bar\"]\n-//~^ ERROR: --crate-name and #[crate_name] are required to match, but `foo` != `bar`\n+//~^ ERROR: `--crate-name` and `#[crate_name]` are required to match, but `foo` != `bar`\n \n fn main() {}"}, {"sha": "96618570d8fb66291325b6c63a60f1a168ed2785", "filename": "src/test/ui/crate-name-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ada2684c807a257eac75787d98c1c129a2500c92/src%2Ftest%2Fui%2Fcrate-name-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ada2684c807a257eac75787d98c1c129a2500c92/src%2Ftest%2Fui%2Fcrate-name-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-name-mismatch.stderr?ref=ada2684c807a257eac75787d98c1c129a2500c92", "patch": "@@ -1,4 +1,4 @@\n-error: --crate-name and #[crate_name] are required to match, but `foo` != `bar`\n+error: `--crate-name` and `#[crate_name]` are required to match, but `foo` != `bar`\n   --> $DIR/crate-name-mismatch.rs:3:1\n    |\n LL | #![crate_name = \"bar\"]"}, {"sha": "d2cb4e0970e83ec393f330b8f884293f1c80811d", "filename": "src/test/ui/duplicate/dupe-symbols-7.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ada2684c807a257eac75787d98c1c129a2500c92/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ada2684c807a257eac75787d98c1c129a2500c92/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.stderr?ref=ada2684c807a257eac75787d98c1c129a2500c92", "patch": "@@ -4,7 +4,7 @@ error: entry symbol `main` defined multiple times\n LL | fn main(){}\n    | ^^^^^^^^^^^\n    |\n-   = help: did you use #[no_mangle] on `fn main`? Use #[start] instead\n+   = help: did you use `#[no_mangle]` on `fn main`? Use `#[start]` instead\n \n error: aborting due to previous error\n "}]}