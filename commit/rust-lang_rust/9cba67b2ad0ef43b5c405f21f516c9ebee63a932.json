{"sha": "9cba67b2ad0ef43b5c405f21f516c9ebee63a932", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYmE2N2IyYWQwZWY0M2I1YzQwNWYyMWY1MTZjOWViZWU2M2E5MzI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-12T20:03:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-12T20:03:37Z"}, "message": "simplify", "tree": {"sha": "8e6cd37bc459cdb9444d482f74aa2455d06499b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e6cd37bc459cdb9444d482f74aa2455d06499b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cba67b2ad0ef43b5c405f21f516c9ebee63a932", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cba67b2ad0ef43b5c405f21f516c9ebee63a932", "html_url": "https://github.com/rust-lang/rust/commit/9cba67b2ad0ef43b5c405f21f516c9ebee63a932", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cba67b2ad0ef43b5c405f21f516c9ebee63a932/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98531dc785535ccde9edc798a17275b9a2f5c1fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/98531dc785535ccde9edc798a17275b9a2f5c1fb", "html_url": "https://github.com/rust-lang/rust/commit/98531dc785535ccde9edc798a17275b9a2f5c1fb"}], "stats": {"total": 46, "additions": 12, "deletions": 34}, "files": [{"sha": "a2b5db1a1e4927ff21bfb545d22b270c7dc54b52", "filename": "crates/ra_hir/src/expr.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9cba67b2ad0ef43b5c405f21f516c9ebee63a932/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cba67b2ad0ef43b5c405f21f516c9ebee63a932/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr.rs?ref=9cba67b2ad0ef43b5c405f21f516c9ebee63a932", "patch": "@@ -10,7 +10,7 @@ use ra_syntax::{\n };\n \n use crate::{\n-    Path, Name, HirDatabase, Resolver,DefWithBody, Either, HirFileId,\n+    Path, Name, HirDatabase, Resolver,DefWithBody, Either, HirFileId, MacroCallLoc,\n     name::AsName,\n     type_ref::{Mutability, TypeRef},\n };\n@@ -828,7 +828,8 @@ where\n                     .ast_id(e)\n                     .with_file_id(self.current_file_id);\n \n-                if let Some(call_id) = self.resolver.resolve_macro_call(self.db, path, ast_id) {\n+                if let Some(def) = self.resolver.resolve_macro_call(path) {\n+                    let call_id = MacroCallLoc { def, ast_id }.id(self.db);\n                     if let Some(tt) = self.db.macro_expand(call_id).ok() {\n                         if let Some(expr) = mbe::token_tree_to_expr(&tt).ok() {\n                             log::debug!(\"macro expansion {}\", expr.syntax().debug_dump());"}, {"sha": "0290b3474f6948c6d7303f88fc13e59d820d5a18", "filename": "crates/ra_hir/src/nameres.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9cba67b2ad0ef43b5c405f21f516c9ebee63a932/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cba67b2ad0ef43b5c405f21f516c9ebee63a932/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres.rs?ref=9cba67b2ad0ef43b5c405f21f516c9ebee63a932", "patch": "@@ -272,8 +272,8 @@ impl CrateDefMap {\n         (res.resolved_def, res.segment_index)\n     }\n \n-    pub(crate) fn find_macro(&self, name: &Name) -> Option<&MacroDefId> {\n-        self.public_macros.get(name).or(self.local_macros.get(name))\n+    pub(crate) fn find_macro(&self, name: &Name) -> Option<MacroDefId> {\n+        self.public_macros.get(name).or(self.local_macros.get(name)).map(|it| *it)\n     }\n \n     // Returns Yes if we are sure that additions to `ItemMap` wouldn't change"}, {"sha": "3874e28bf5d5121cffe0a665b0bf187618ad286d", "filename": "crates/ra_hir/src/resolve.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9cba67b2ad0ef43b5c405f21f516c9ebee63a932/crates%2Fra_hir%2Fsrc%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cba67b2ad0ef43b5c405f21f516c9ebee63a932/crates%2Fra_hir%2Fsrc%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fresolve.rs?ref=9cba67b2ad0ef43b5c405f21f516c9ebee63a932", "patch": "@@ -1,16 +1,12 @@\n //! Name resolution.\n use std::sync::Arc;\n \n-use ra_syntax::ast;\n-\n use rustc_hash::{FxHashMap, FxHashSet};\n \n use crate::{\n     ModuleDef, Trait,\n     code_model_api::Crate,\n-    MacroCallId,\n-    MacroCallLoc,\n-    AstId,\n+    MacroDefId,\n     db::HirDatabase,\n     name::{Name, KnownName},\n     nameres::{PerNs, CrateDefMap, CrateModuleId},\n@@ -134,16 +130,9 @@ impl Resolver {\n         resolution\n     }\n \n-    pub(crate) fn resolve_macro_call(\n-        &self,\n-        db: &impl HirDatabase,\n-        path: Option<Path>,\n-        ast_id: AstId<ast::MacroCall>,\n-    ) -> Option<MacroCallId> {\n+    pub(crate) fn resolve_macro_call(&self, path: Option<Path>) -> Option<MacroDefId> {\n         let name = path.and_then(|path| path.expand_macro_expr()).unwrap_or_else(Name::missing);\n-        let def_id = self.module().and_then(|(module, _)| module.find_macro(&name))?;\n-        let call_loc = MacroCallLoc { def: *def_id, ast_id }.id(db);\n-        Some(call_loc)\n+        self.module()?.0.find_macro(&name)\n     }\n \n     /// Returns the resolved path segments"}, {"sha": "179faebfb10dcff5c56ffc83ac332eb397034ebb", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9cba67b2ad0ef43b5c405f21f516c9ebee63a932/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cba67b2ad0ef43b5c405f21f516c9ebee63a932/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=9cba67b2ad0ef43b5c405f21f516c9ebee63a932", "patch": "@@ -283,21 +283,9 @@ impl SourceAnalyzer {\n         self.infer.as_ref()?.field_resolution(expr_id)\n     }\n \n-    pub fn resolve_macro_call(\n-        &self,\n-        db: &impl HirDatabase,\n-        file_id: FileId,\n-        macro_call: &ast::MacroCall,\n-    ) -> Option<MacroByExampleDef> {\n-        let hir_id = file_id.into();\n-        let ast_id = db.ast_id_map(hir_id).ast_id(macro_call).with_file_id(hir_id);\n-        let call_id = self.resolver.resolve_macro_call(\n-            db,\n-            macro_call.path().and_then(Path::from_ast),\n-            ast_id,\n-        )?;\n-        let loc = call_id.loc(db);\n-        Some(MacroByExampleDef { id: loc.def })\n+    pub fn resolve_macro_call(&self, macro_call: &ast::MacroCall) -> Option<MacroByExampleDef> {\n+        let id = self.resolver.resolve_macro_call(macro_call.path().and_then(Path::from_ast))?;\n+        Some(MacroByExampleDef { id })\n     }\n \n     pub fn resolve_hir_path("}, {"sha": "adae29e9c83bd1f16bf2fe9a9b1f4b92992c5c43", "filename": "crates/ra_ide_api/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cba67b2ad0ef43b5c405f21f516c9ebee63a932/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cba67b2ad0ef43b5c405f21f516c9ebee63a932/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs?ref=9cba67b2ad0ef43b5c405f21f516c9ebee63a932", "patch": "@@ -69,7 +69,7 @@ pub(crate) fn reference_definition(\n         .and_then(ast::MacroCall::cast)\n     {\n         tested_by!(goto_definition_works_for_macros);\n-        if let Some(macro_call) = analyzer.resolve_macro_call(db, file_id, macro_call) {\n+        if let Some(macro_call) = analyzer.resolve_macro_call(macro_call) {\n             return Exact(NavigationTarget::from_macro_def(db, macro_call));\n         }\n     }"}]}