{"sha": "3477645a23bbb25b61d5e17d6d45a06821188876", "node_id": "C_kwDOAAsO6NoAKDM0Nzc2NDVhMjNiYmIyNWI2MWQ1ZTE3ZDZkNDVhMDY4MjExODg4NzY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-06T12:14:55Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-06T13:17:10Z"}, "message": "dont debug-print allocations, that's too verbose", "tree": {"sha": "8dbefea874f26a638baa9a550bc2653f5b7fd710", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dbefea874f26a638baa9a550bc2653f5b7fd710"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3477645a23bbb25b61d5e17d6d45a06821188876", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3477645a23bbb25b61d5e17d6d45a06821188876", "html_url": "https://github.com/rust-lang/rust/commit/3477645a23bbb25b61d5e17d6d45a06821188876", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3477645a23bbb25b61d5e17d6d45a06821188876/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cef9e3d19087a83fe1431ab8fd915cffd6a22ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cef9e3d19087a83fe1431ab8fd915cffd6a22ec", "html_url": "https://github.com/rust-lang/rust/commit/2cef9e3d19087a83fe1431ab8fd915cffd6a22ec"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "62c822ae08000f576d27cc0adc09135ffe3677d6", "filename": "compiler/rustc_middle/src/mir/interpret/allocation.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3477645a23bbb25b61d5e17d6d45a06821188876/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3477645a23bbb25b61d5e17d6d45a06821188876/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs?ref=3477645a23bbb25b61d5e17d6d45a06821188876", "patch": "@@ -30,7 +30,7 @@ use provenance_map::*;\n /// module provides higher-level access.\n // Note: for performance reasons when interning, some of the `Allocation` fields can be partially\n // hashed. (see the `Hash` impl below for more details), so the impl is not derived.\n-#[derive(Clone, Debug, Eq, PartialEq, PartialOrd, Ord, TyEncodable, TyDecodable)]\n+#[derive(Clone, Eq, PartialEq, PartialOrd, Ord, TyEncodable, TyDecodable)]\n #[derive(HashStable)]\n pub struct Allocation<Prov = AllocId, Extra = ()> {\n     /// The actual bytes of the allocation.\n@@ -110,9 +110,9 @@ pub struct ConstAllocation<'tcx, Prov = AllocId, Extra = ()>(\n \n impl<'tcx> fmt::Debug for ConstAllocation<'tcx> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        // This matches how `Allocation` is printed. We print it like this to\n-        // avoid having to update expected output in a lot of tests.\n-        write!(f, \"{:?}\", self.inner())\n+        // The debug-representation of this is very verbose and basically useless,\n+        // so don't print it.\n+        write!(f, \"ConstAllocation {{ .. }}\")\n     }\n }\n "}]}