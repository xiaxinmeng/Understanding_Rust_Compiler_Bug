{"sha": "5b8ac2d1b6ae3063e03fd784de0a9a7cf888b21d", "node_id": "C_kwDOAAsO6NoAKDViOGFjMmQxYjZhZTMwNjNlMDNmZDc4NGRlMGE5YTdjZjg4OGIyMWQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-04T23:53:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-04T23:53:35Z"}, "message": "Rollup merge of #95631 - TaKO8Ki:remove-unnecessary-nested-blocks, r=davidtwco\n\nRefactor: remove unnecessary nested blocks", "tree": {"sha": "557a39b1d82325e37653841c6ef87abd04c510d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/557a39b1d82325e37653841c6ef87abd04c510d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b8ac2d1b6ae3063e03fd784de0a9a7cf888b21d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiS4T/CRBK7hj4Ov3rIwAAkyMIAFPJ4rqj5DkmNL0linckUwpm\n3MKUA4M6arj0LeCjILUxZJ9271ghK7wramJvs1LOr9geeaNU5xmEli7xS7nWPvvG\nSw9M8Uz5PuAsotezshDIl81uYSYgcxwdoCziPUxM99Xo9SCTLI1VEQ8hrOoDqUOb\niZR0HYBADlp4aAn8QoFZoz8B7k3aN0Jf1xSq1vYytAlhSFTkikZgoQSS3FytIDJ/\nM2FhwBoXF9a/qxYapaMs4AWl2flyd7WVSyb5xZ4PpdAhuiNfkS+76+8mZOf1esJc\npZOnGZb5QVInY/JW4JUZ+zJ25Ip+HBqFYoIV3ECLu1ze9DuI17t4isgK/qXzSFc=\n=bNGW\n-----END PGP SIGNATURE-----\n", "payload": "tree 557a39b1d82325e37653841c6ef87abd04c510d0\nparent 1c2b4b7af51187159b8dfd5c7002cabfa01aeaf4\nparent a56f21466e09a247e33660d4745963faba56654e\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1649116415 +0200\ncommitter GitHub <noreply@github.com> 1649116415 +0200\n\nRollup merge of #95631 - TaKO8Ki:remove-unnecessary-nested-blocks, r=davidtwco\n\nRefactor: remove unnecessary nested blocks\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b8ac2d1b6ae3063e03fd784de0a9a7cf888b21d", "html_url": "https://github.com/rust-lang/rust/commit/5b8ac2d1b6ae3063e03fd784de0a9a7cf888b21d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b8ac2d1b6ae3063e03fd784de0a9a7cf888b21d/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c2b4b7af51187159b8dfd5c7002cabfa01aeaf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c2b4b7af51187159b8dfd5c7002cabfa01aeaf4", "html_url": "https://github.com/rust-lang/rust/commit/1c2b4b7af51187159b8dfd5c7002cabfa01aeaf4"}, {"sha": "a56f21466e09a247e33660d4745963faba56654e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a56f21466e09a247e33660d4745963faba56654e", "html_url": "https://github.com/rust-lang/rust/commit/a56f21466e09a247e33660d4745963faba56654e"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "6fedabc816cff938087550a356adfb38f81119b8", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5b8ac2d1b6ae3063e03fd784de0a9a7cf888b21d/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8ac2d1b6ae3063e03fd784de0a9a7cf888b21d/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=5b8ac2d1b6ae3063e03fd784de0a9a7cf888b21d", "patch": "@@ -2297,21 +2297,19 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n         let prev = self.diagnostic_metadata.current_block_could_be_bare_struct_literal.take();\n         if let (true, [Stmt { kind: StmtKind::Expr(expr), .. }]) =\n             (block.could_be_bare_literal, &block.stmts[..])\n+            && let ExprKind::Type(..) = expr.kind\n         {\n-            if let ExprKind::Type(..) = expr.kind {\n-                self.diagnostic_metadata.current_block_could_be_bare_struct_literal =\n-                    Some(block.span);\n-            }\n+            self.diagnostic_metadata.current_block_could_be_bare_struct_literal =\n+            Some(block.span);\n         }\n         // Descend into the block.\n         for stmt in &block.stmts {\n-            if let StmtKind::Item(ref item) = stmt.kind {\n-                if let ItemKind::MacroDef(..) = item.kind {\n-                    num_macro_definition_ribs += 1;\n-                    let res = self.r.local_def_id(item.id).to_def_id();\n-                    self.ribs[ValueNS].push(Rib::new(MacroDefinition(res)));\n-                    self.label_ribs.push(Rib::new(MacroDefinition(res)));\n-                }\n+            if let StmtKind::Item(ref item) = stmt.kind\n+                && let ItemKind::MacroDef(..) = item.kind {\n+                num_macro_definition_ribs += 1;\n+                let res = self.r.local_def_id(item.id).to_def_id();\n+                self.ribs[ValueNS].push(Rib::new(MacroDefinition(res)));\n+                self.label_ribs.push(Rib::new(MacroDefinition(res)));\n             }\n \n             self.visit_stmt(stmt);"}]}