{"sha": "610096d8c80275726183919a96a1f0c886acdb0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMDA5NmQ4YzgwMjc1NzI2MTgzOTE5YTk2YTFmMGM4ODZhY2RiMGU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-19T00:41:15Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:23Z"}, "message": "librustc: De-`@mut` `CrateContext::item_vals`", "tree": {"sha": "af75cb9ea734a8d355506ea3a99dc1dd7f77b178", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af75cb9ea734a8d355506ea3a99dc1dd7f77b178"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/610096d8c80275726183919a96a1f0c886acdb0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/610096d8c80275726183919a96a1f0c886acdb0e", "html_url": "https://github.com/rust-lang/rust/commit/610096d8c80275726183919a96a1f0c886acdb0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/610096d8c80275726183919a96a1f0c886acdb0e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3f58c59e48552612b8a177b527a5dcd0d6a1149", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3f58c59e48552612b8a177b527a5dcd0d6a1149", "html_url": "https://github.com/rust-lang/rust/commit/d3f58c59e48552612b8a177b527a5dcd0d6a1149"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "a4dbeaee9926a302166e1aecf15b95010a76f85e", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/610096d8c80275726183919a96a1f0c886acdb0e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/610096d8c80275726183919a96a1f0c886acdb0e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=610096d8c80275726183919a96a1f0c886acdb0e", "patch": "@@ -2450,7 +2450,11 @@ fn exported_name(ccx: &mut CrateContext, path: path, ty: ty::t, attrs: &[ast::At\n pub fn get_item_val(ccx: @mut CrateContext, id: ast::NodeId) -> ValueRef {\n     debug!(\"get_item_val(id=`{:?}`)\", id);\n \n-    let val = ccx.item_vals.find_copy(&id);\n+    let val = {\n+        let item_vals = ccx.item_vals.borrow();\n+        item_vals.get().find_copy(&id)\n+    };\n+\n     match val {\n         Some(v) => v,\n         None => {\n@@ -2689,7 +2693,8 @@ pub fn get_item_val(ccx: @mut CrateContext, id: ast::NodeId) -> ValueRef {\n                 lib::llvm::SetLinkage(val, lib::llvm::InternalLinkage);\n             }\n \n-            ccx.item_vals.insert(id, val);\n+            let mut item_vals = ccx.item_vals.borrow_mut();\n+            item_vals.get().insert(id, val);\n             val\n         }\n     }"}, {"sha": "ca19ab5d6886a3628d5be3cc0bd4f882a032ef25", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/610096d8c80275726183919a96a1f0c886acdb0e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/610096d8c80275726183919a96a1f0c886acdb0e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=610096d8c80275726183919a96a1f0c886acdb0e", "patch": "@@ -47,7 +47,7 @@ pub struct CrateContext {\n      tn: TypeNames,\n      externs: ExternMap,\n      intrinsics: HashMap<&'static str, ValueRef>,\n-     item_vals: HashMap<ast::NodeId, ValueRef>,\n+     item_vals: RefCell<HashMap<ast::NodeId, ValueRef>>,\n      exp_map2: resolve::ExportMap2,\n      reachable: @mut HashSet<ast::NodeId>,\n      item_symbols: HashMap<ast::NodeId, ~str>,\n@@ -187,7 +187,7 @@ impl CrateContext {\n                   tn: tn,\n                   externs: HashMap::new(),\n                   intrinsics: intrinsics,\n-                  item_vals: HashMap::new(),\n+                  item_vals: RefCell::new(HashMap::new()),\n                   exp_map2: emap2,\n                   reachable: reachable,\n                   item_symbols: HashMap::new(),"}]}