{"sha": "a01a54021434f19b7dfd000579dc23551935a855", "node_id": "C_kwDOAAsO6NoAKGEwMWE1NDAyMTQzNGYxOWI3ZGZkMDAwNTc5ZGMyMzU1MTkzNWE4NTU", "commit": {"author": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-01-19T17:01:25Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-01-25T14:20:03Z"}, "message": "Cleanup extra check configs in bootstrap\n\n - `target_os=watchos`: no longer relevant because there are now proper\n   targets `*-apple-watchos`\n - `target_arch=nvptx64`: `nvptx64-nvidia-cuda`\n - `target_arch=le32`: target was removed\n   (https://github.com/rust-lang/rust/pull/45041)\n - `release`: was removed from rustfmt\n   (https://github.com/rust-lang/rustfmt/pull/5375 and\n   https://github.com/rust-lang/rustfmt/pull/5449)\n - `dont_compile_me`: was removed from stdarch\n   (https://github.com/rust-lang/stdarch/pull/1308)\n\nAlso made some external cfg exception mode clear and only activated for\nrustc and rustc tools (as to not have the Standard Library\nunintentionally depend on them).", "tree": {"sha": "9ac1689d161decdc3071f7e2c296fb8603f1e5ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ac1689d161decdc3071f7e2c296fb8603f1e5ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a01a54021434f19b7dfd000579dc23551935a855", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a01a54021434f19b7dfd000579dc23551935a855", "html_url": "https://github.com/rust-lang/rust/commit/a01a54021434f19b7dfd000579dc23551935a855", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a01a54021434f19b7dfd000579dc23551935a855/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dde74fe09239e1f185810908bbe57b135f7076e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/dde74fe09239e1f185810908bbe57b135f7076e9", "html_url": "https://github.com/rust-lang/rust/commit/dde74fe09239e1f185810908bbe57b135f7076e9"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "376149a95678cc80421841921c37725028bcc8db", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a01a54021434f19b7dfd000579dc23551935a855/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a01a54021434f19b7dfd000579dc23551935a855/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=a01a54021434f19b7dfd000579dc23551935a855", "patch": "@@ -203,7 +203,6 @@ const EXTRA_CHECK_CFGS: &[(Option<Mode>, &'static str, Option<&[&'static str]>)]\n     (None, \"bootstrap\", None),\n     (Some(Mode::Rustc), \"parallel_compiler\", None),\n     (Some(Mode::ToolRustc), \"parallel_compiler\", None),\n-    (Some(Mode::ToolRustc), \"emulate_second_only_system\", None),\n     (Some(Mode::Codegen), \"parallel_compiler\", None),\n     (Some(Mode::Std), \"stdarch_intel_sde\", None),\n     (Some(Mode::Std), \"no_fp_fmt_parse\", None),\n@@ -214,18 +213,9 @@ const EXTRA_CHECK_CFGS: &[(Option<Mode>, &'static str, Option<&[&'static str]>)]\n     (Some(Mode::Std), \"backtrace_in_libstd\", None),\n     /* Extra values not defined in the built-in targets yet, but used in std */\n     (Some(Mode::Std), \"target_env\", Some(&[\"libnx\"])),\n-    (Some(Mode::Std), \"target_os\", Some(&[\"watchos\"])),\n-    (\n-        Some(Mode::Std),\n-        \"target_arch\",\n-        Some(&[\"asmjs\", \"spirv\", \"nvptx\", \"nvptx64\", \"le32\", \"xtensa\"]),\n-    ),\n+    // (Some(Mode::Std), \"target_os\", Some(&[])),\n+    (Some(Mode::Std), \"target_arch\", Some(&[\"asmjs\", \"spirv\", \"nvptx\", \"xtensa\"])),\n     /* Extra names used by dependencies */\n-    // FIXME: Used by rustfmt is their test but is invalid (neither cargo nor bootstrap ever set\n-    // this config) should probably by removed or use a allow attribute.\n-    (Some(Mode::ToolRustc), \"release\", None),\n-    // FIXME: Used by stdarch in their test, should use a allow attribute instead.\n-    (Some(Mode::Std), \"dont_compile_me\", None),\n     // FIXME: Used by serde_json, but we should not be triggering on external dependencies.\n     (Some(Mode::Rustc), \"no_btreemap_remove_entry\", None),\n     (Some(Mode::ToolRustc), \"no_btreemap_remove_entry\", None),\n@@ -235,8 +225,12 @@ const EXTRA_CHECK_CFGS: &[(Option<Mode>, &'static str, Option<&[&'static str]>)]\n     // FIXME: Used by proc-macro2, but we should not be triggering on external dependencies.\n     (Some(Mode::Rustc), \"span_locations\", None),\n     (Some(Mode::ToolRustc), \"span_locations\", None),\n-    // Can be passed in RUSTFLAGS to prevent direct syscalls in rustix.\n-    (None, \"rustix_use_libc\", None),\n+    // FIXME: Used by rustix, but we should not be triggering on external dependencies.\n+    (Some(Mode::Rustc), \"rustix_use_libc\", None),\n+    (Some(Mode::ToolRustc), \"rustix_use_libc\", None),\n+    // FIXME: Used by filetime, but we should not be triggering on external dependencies.\n+    (Some(Mode::Rustc), \"emulate_second_only_system\", None),\n+    (Some(Mode::ToolRustc), \"emulate_second_only_system\", None),\n ];\n \n /// A structure representing a Rust compiler."}]}