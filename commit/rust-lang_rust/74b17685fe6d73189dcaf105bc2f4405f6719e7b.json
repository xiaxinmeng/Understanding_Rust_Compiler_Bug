{"sha": "74b17685fe6d73189dcaf105bc2f4405f6719e7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0YjE3Njg1ZmU2ZDczMTg5ZGNhZjEwNWJjMmY0NDA1ZjY3MTllN2I=", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-08-10T10:50:33Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-08-12T15:16:57Z"}, "message": "Implement `black_box` using intrinsic\n\nThe new implementation allows some `memcpy`s to be optimized away,\nso the uninit value in ui/sanitize/memory.rs is constructed directly\nonto the return place. Therefore the sanitizer now says that the\nvalue is allocated by `main` rather than `random`.", "tree": {"sha": "2256e1fd738eb0deefb0f27c1328164f72e7c379", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2256e1fd738eb0deefb0f27c1328164f72e7c379"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74b17685fe6d73189dcaf105bc2f4405f6719e7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74b17685fe6d73189dcaf105bc2f4405f6719e7b", "html_url": "https://github.com/rust-lang/rust/commit/74b17685fe6d73189dcaf105bc2f4405f6719e7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74b17685fe6d73189dcaf105bc2f4405f6719e7b/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2201598100135a6007381139c3a1ec598e9a888", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2201598100135a6007381139c3a1ec598e9a888", "html_url": "https://github.com/rust-lang/rust/commit/d2201598100135a6007381139c3a1ec598e9a888"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "1c4d307fc50e14c4281b5bd487b83137e7342a33", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/74b17685fe6d73189dcaf105bc2f4405f6719e7b/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74b17685fe6d73189dcaf105bc2f4405f6719e7b/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=74b17685fe6d73189dcaf105bc2f4405f6719e7b", "patch": "@@ -1136,6 +1136,11 @@ pub(crate) fn codegen_intrinsic_call<'tcx>(\n                 };\n             ret.write_cvalue(fx, CValue::by_val(is_eq_value, ret.layout()));\n         };\n+\n+        black_box, (c a) {\n+            // FIXME implement black_box semantics\n+            ret.write_cvalue(fx, a);\n+        };\n     }\n \n     if let Some((_, dest)) = destination {"}]}