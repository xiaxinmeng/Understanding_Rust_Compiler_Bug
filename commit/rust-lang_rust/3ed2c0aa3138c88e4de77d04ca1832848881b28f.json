{"sha": "3ed2c0aa3138c88e4de77d04ca1832848881b28f", "node_id": "C_kwDOAAsO6NoAKDNlZDJjMGFhMzEzOGM4OGU0ZGU3N2QwNGNhMTgzMjg0ODg4MWIyOGY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-25T17:49:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-25T17:49:12Z"}, "message": "Auto merge of #2765 - RalfJung:scfix, r=RalfJung\n\nadd scfix test\n\nI'm not sure if we currently *guarantee* to pass this test, but at least I was unable to get it to fail.\n\nCc `@cbeuw`", "tree": {"sha": "595d8424e48d81cc0fa085507a11cb43f6d7a99a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/595d8424e48d81cc0fa085507a11cb43f6d7a99a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ed2c0aa3138c88e4de77d04ca1832848881b28f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed2c0aa3138c88e4de77d04ca1832848881b28f", "html_url": "https://github.com/rust-lang/rust/commit/3ed2c0aa3138c88e4de77d04ca1832848881b28f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ed2c0aa3138c88e4de77d04ca1832848881b28f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9defdc7c13a03475dcdf2409f698355c87fd67f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9defdc7c13a03475dcdf2409f698355c87fd67f0", "html_url": "https://github.com/rust-lang/rust/commit/9defdc7c13a03475dcdf2409f698355c87fd67f0"}, {"sha": "ff5132e2fc2e2bc5a6669c67c9c2d2fa208fd5f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff5132e2fc2e2bc5a6669c67c9c2d2fa208fd5f0", "html_url": "https://github.com/rust-lang/rust/commit/ff5132e2fc2e2bc5a6669c67c9c2d2fa208fd5f0"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "7861acd4ef7945bd2aadb67573b6836c525e5351", "filename": "src/tools/miri/tests/pass/0weak_memory_consistency.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/3ed2c0aa3138c88e4de77d04ca1832848881b28f/src%2Ftools%2Fmiri%2Ftests%2Fpass%2F0weak_memory_consistency.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ed2c0aa3138c88e4de77d04ca1832848881b28f/src%2Ftools%2Fmiri%2Ftests%2Fpass%2F0weak_memory_consistency.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2F0weak_memory_consistency.rs?ref=3ed2c0aa3138c88e4de77d04ca1832848881b28f", "patch": "@@ -286,6 +286,40 @@ fn test_iriw_sc_rlx() {\n     assert!(c || d);\n }\n \n+// Another test for C++20 SCfix.\n+fn scfix() {\n+    let x = static_atomic_bool(false);\n+    let y = static_atomic_bool(false);\n+\n+    let thread1 = spawn(move || {\n+        let a = x.load(Relaxed);\n+        fence(SeqCst);\n+        let b = y.load(Relaxed);\n+        (a, b)\n+    });\n+\n+    let thread2 = spawn(move || {\n+        x.store(true, Relaxed);\n+    });\n+    let thread3 = spawn(move || {\n+        x.store(true, Relaxed);\n+    });\n+\n+    let thread4 = spawn(move || {\n+        let c = y.load(Relaxed);\n+        fence(SeqCst);\n+        let d = x.load(Relaxed);\n+        (c, d)\n+    });\n+\n+    let (a, b) = thread1.join().unwrap();\n+    thread2.join().unwrap();\n+    thread3.join().unwrap();\n+    let (c, d) = thread4.join().unwrap();\n+    let bad = a == true && b == false && c == true && d == false;\n+    assert!(!bad);\n+}\n+\n pub fn main() {\n     for _ in 0..50 {\n         test_single_thread();\n@@ -297,5 +331,6 @@ pub fn main() {\n         test_sc_store_buffering();\n         test_sync_through_rmw_and_fences();\n         test_iriw_sc_rlx();\n+        scfix();\n     }\n }"}]}