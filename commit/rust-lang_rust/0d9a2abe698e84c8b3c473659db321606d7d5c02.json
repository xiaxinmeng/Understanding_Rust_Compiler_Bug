{"sha": "0d9a2abe698e84c8b3c473659db321606d7d5c02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkOWEyYWJlNjk4ZTg0YzhiM2M0NzM2NTlkYjMyMTYwNmQ3ZDVjMDI=", "commit": {"author": {"name": "Camelid", "email": "37223377+camelid@users.noreply.github.com", "date": "2020-08-30T03:41:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-30T03:41:36Z"}, "message": "It's only an issue without an `impl Trait for !`", "tree": {"sha": "1e17d02dab34b1b52e0faf8a4862f4e40e917c51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e17d02dab34b1b52e0faf8a4862f4e40e917c51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d9a2abe698e84c8b3c473659db321606d7d5c02", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfSx/wCRBK7hj4Ov3rIwAAdHIIAEzHHo2EBGAjYvgEcNBiGDTG\nEXnkW+LgUkpjkLHteL5VNL3Nq8AANtjDlDoPM7ueeI+IjXYURsNqELpfi8UxljDE\niFH+CO48ZzuccV3q7b3XFUH8rbmh+6OngE6aO/0hSkukVTQKHCYmECrV7SqMaYNU\nZrHHFJZ7Lq1iiAGaIU6gS1k+WglkiwCiz2gXEPdUiX1mwyI6suUfFag8o5GYx0Lc\nOmQFRbx1y/4Yl84C1hKg1I7KuPU/8kfh6sO3pMFvOzUNPKdoTnthjMMVZdGwG0al\n63C18HuJqXqvN4ZFp1IqlLfkMP3N4xERZMEnhFY4QiPLTJO4YBnYReou7/xI67M=\n=WTR1\n-----END PGP SIGNATURE-----\n", "payload": "tree 1e17d02dab34b1b52e0faf8a4862f4e40e917c51\nparent fd985e29dd97f053f31a2e282fb59363f6b6db3f\nauthor Camelid <37223377+camelid@users.noreply.github.com> 1598758896 -0700\ncommitter GitHub <noreply@github.com> 1598758896 -0700\n\nIt's only an issue without an `impl Trait for !`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d9a2abe698e84c8b3c473659db321606d7d5c02", "html_url": "https://github.com/rust-lang/rust/commit/0d9a2abe698e84c8b3c473659db321606d7d5c02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d9a2abe698e84c8b3c473659db321606d7d5c02/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd985e29dd97f053f31a2e282fb59363f6b6db3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd985e29dd97f053f31a2e282fb59363f6b6db3f", "html_url": "https://github.com/rust-lang/rust/commit/fd985e29dd97f053f31a2e282fb59363f6b6db3f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "df64287bc7de83fcf0a2547f9706434681d53378", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0d9a2abe698e84c8b3c473659db321606d7d5c02/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d9a2abe698e84c8b3c473659db321606d7d5c02/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=0d9a2abe698e84c8b3c473659db321606d7d5c02", "patch": "@@ -194,9 +194,9 @@ mod prim_bool {}\n /// # `!` and traits\n ///\n /// When writing your own traits, `!` should have an `impl` whenever there is an obvious `impl`\n-/// which doesn't `panic!`. The reason is that functions returning an `impl Trait` cannot diverge,\n-/// i.e., returning `!`, as their only possible code path. As an example, this code doesn't\n-/// compile:\n+/// which doesn't `panic!`. The reason is that functions returning an `impl Trait` where `!`\n+/// does not have an `impl` of `Trait` cannot diverge as their only possible code path. In other\n+/// words, they can't return `!` from every code path. As an example, this code doesn't compile:\n ///\n /// ```compile_fail\n /// use core::ops::Add;\n@@ -206,7 +206,7 @@ mod prim_bool {}\n /// }\n /// ```\n ///\n-/// While this code does:\n+/// But this code does:\n ///\n /// ```\n /// use core::ops::Add;"}]}