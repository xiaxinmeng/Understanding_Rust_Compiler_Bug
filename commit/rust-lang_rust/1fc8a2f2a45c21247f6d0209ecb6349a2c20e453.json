{"sha": "1fc8a2f2a45c21247f6d0209ecb6349a2c20e453", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmYzhhMmYyYTQ1YzIxMjQ3ZjZkMDIwOWVjYjYzNDlhMmMyMGU0NTM=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-26T12:13:24Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-26T12:13:24Z"}, "message": "rt: use the [u]int[nn]_t types in the RNG.\n\nThis means that `ub4`s are always 4 bytes, rather than being 8 bytes on\nx64. (Suggested but not implemented by upstream: \"Porting it to a 64-bit\nmachine [...] may just need an adjustment of the definition of ub4\")", "tree": {"sha": "b6cbbc746df84c17175172e30ef810155ab1e92d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6cbbc746df84c17175172e30ef810155ab1e92d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fc8a2f2a45c21247f6d0209ecb6349a2c20e453", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fc8a2f2a45c21247f6d0209ecb6349a2c20e453", "html_url": "https://github.com/rust-lang/rust/commit/1fc8a2f2a45c21247f6d0209ecb6349a2c20e453", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fc8a2f2a45c21247f6d0209ecb6349a2c20e453/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "106fd12423491625b78326a2d2055d7e1d43464f", "url": "https://api.github.com/repos/rust-lang/rust/commits/106fd12423491625b78326a2d2055d7e1d43464f", "html_url": "https://github.com/rust-lang/rust/commit/106fd12423491625b78326a2d2055d7e1d43464f"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "c196a37474b9d3e4adefaebbe4d637b556d7e09d", "filename": "src/rt/isaac/standard.h", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1fc8a2f2a45c21247f6d0209ecb6349a2c20e453/src%2Frt%2Fisaac%2Fstandard.h", "raw_url": "https://github.com/rust-lang/rust/raw/1fc8a2f2a45c21247f6d0209ecb6349a2c20e453/src%2Frt%2Fisaac%2Fstandard.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fisaac%2Fstandard.h?ref=1fc8a2f2a45c21247f6d0209ecb6349a2c20e453", "patch": "@@ -13,27 +13,32 @@ Standard definitions and types, Bob Jenkins\n #  include <stddef.h>\n #  define STDDEF\n # endif\n-typedef  unsigned long long  ub8;\n+# ifndef STDINT\n+#  include <stdint.h>\n+#  define STDINT\n+# endif\n+\n+typedef  uint64_t  ub8;\n #define UB8MAXVAL 0xffffffffffffffffLL\n #define UB8BITS 64\n-typedef    signed long long  sb8;\n+typedef   int64_t  sb8;\n #define SB8MAXVAL 0x7fffffffffffffffLL\n-typedef  unsigned long  int  ub4;   /* unsigned 4-byte quantities */\n+typedef  uint32_t  ub4;   /* unsigned 4-byte quantities */\n #define UB4MAXVAL 0xffffffff\n-typedef    signed long  int  sb4;\n+typedef   int32_t  sb4;\n #define UB4BITS 32\n #define SB4MAXVAL 0x7fffffff\n-typedef  unsigned short int  ub2;\n+typedef  uint16_t  ub2;\n #define UB2MAXVAL 0xffff\n #define UB2BITS 16\n-typedef    signed short int  sb2;\n+typedef   int16_t  sb2;\n #define SB2MAXVAL 0x7fff\n-typedef  unsigned       char ub1;\n+typedef   uint8_t  ub1;\n #define UB1MAXVAL 0xff\n #define UB1BITS 8\n-typedef    signed       char sb1;   /* signed 1-byte quantities */\n+typedef    int8_t  sb1;   /* signed 1-byte quantities */\n #define SB1MAXVAL 0x7f\n-typedef                 int  word;  /* fastest type available */\n+typedef      int  word;  /* fastest type available */\n \n #define bis(target,mask)  ((target) |=  (mask))\n #define bic(target,mask)  ((target) &= ~(mask))"}]}