{"sha": "9d5f721406d7ec1cb0197181a03bd266d66fd6c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNWY3MjE0MDZkN2VjMWNiMDE5NzE4MWEwM2JkMjY2ZDY2ZmQ2YzE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-25T17:36:18Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-25T17:36:18Z"}, "message": "Superfluous lifetime.", "tree": {"sha": "9b161ab2d4f55de4474a3bf807e014f32f05623e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b161ab2d4f55de4474a3bf807e014f32f05623e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d5f721406d7ec1cb0197181a03bd266d66fd6c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d5f721406d7ec1cb0197181a03bd266d66fd6c1", "html_url": "https://github.com/rust-lang/rust/commit/9d5f721406d7ec1cb0197181a03bd266d66fd6c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d5f721406d7ec1cb0197181a03bd266d66fd6c1/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ffc9444a3275079ce24883ec57b041485c358a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ffc9444a3275079ce24883ec57b041485c358a3", "html_url": "https://github.com/rust-lang/rust/commit/8ffc9444a3275079ce24883ec57b041485c358a3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ba855ef2f85636aa00107971ab424286ff8240f3", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d5f721406d7ec1cb0197181a03bd266d66fd6c1/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d5f721406d7ec1cb0197181a03bd266d66fd6c1/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=9d5f721406d7ec1cb0197181a03bd266d66fd6c1", "patch": "@@ -316,8 +316,8 @@ impl Linker {\n }\n \n impl Compiler {\n-    pub fn enter<'c, F, T>(&'c self, f: F) -> T\n-        where F: for<'q> FnOnce(&'q Queries<'c>) -> T\n+    pub fn enter<F, T>(&self, f: F) -> T\n+        where F: for<'q> FnOnce(&'q Queries<'_>) -> T\n     {\n         let queries = Queries::new(&self);\n         f(&queries)"}]}