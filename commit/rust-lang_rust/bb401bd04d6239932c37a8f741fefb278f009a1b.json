{"sha": "bb401bd04d6239932c37a8f741fefb278f009a1b", "node_id": "C_kwDOAAsO6NoAKGJiNDAxYmQwNGQ2MjM5OTMyYzM3YThmNzQxZmVmYjI3OGYwMDlhMWI", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-11-04T12:28:03Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-11-05T12:22:23Z"}, "message": "privacy: Print effective visibilities of constructors", "tree": {"sha": "c2902162127620756be2bb23b29ecee84418bb51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2902162127620756be2bb23b29ecee84418bb51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb401bd04d6239932c37a8f741fefb278f009a1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb401bd04d6239932c37a8f741fefb278f009a1b", "html_url": "https://github.com/rust-lang/rust/commit/bb401bd04d6239932c37a8f741fefb278f009a1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb401bd04d6239932c37a8f741fefb278f009a1b/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24093fc6bd442be45a3ddb935b7056ab77cf96f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/24093fc6bd442be45a3ddb935b7056ab77cf96f5", "html_url": "https://github.com/rust-lang/rust/commit/24093fc6bd442be45a3ddb935b7056ab77cf96f5"}], "stats": {"total": 54, "additions": 38, "deletions": 16}, "files": [{"sha": "bda3b55cfc33f56569abb158fa06d038b072c496", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bb401bd04d6239932c37a8f741fefb278f009a1b/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb401bd04d6239932c37a8f741fefb278f009a1b/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=bb401bd04d6239932c37a8f741fefb278f009a1b", "patch": "@@ -959,13 +959,21 @@ impl<'tcx, 'a> Visitor<'tcx> for TestReachabilityVisitor<'tcx, 'a> {\n                 for variant in def.variants.iter() {\n                     let variant_id = self.tcx.hir().local_def_id(variant.id);\n                     self.effective_visibility_diagnostic(variant_id);\n+                    if let Some(ctor_hir_id) = variant.data.ctor_hir_id() {\n+                        let ctor_def_id = self.tcx.hir().local_def_id(ctor_hir_id);\n+                        self.effective_visibility_diagnostic(ctor_def_id);\n+                    }\n                     for field in variant.data.fields() {\n                         let def_id = self.tcx.hir().local_def_id(field.hir_id);\n                         self.effective_visibility_diagnostic(def_id);\n                     }\n                 }\n             }\n             hir::ItemKind::Struct(ref def, _) | hir::ItemKind::Union(ref def, _) => {\n+                if let Some(ctor_hir_id) = def.ctor_hir_id() {\n+                    let ctor_def_id = self.tcx.hir().local_def_id(ctor_hir_id);\n+                    self.effective_visibility_diagnostic(ctor_def_id);\n+                }\n                 for field in def.fields() {\n                     let def_id = self.tcx.hir().local_def_id(field.hir_id);\n                     self.effective_visibility_diagnostic(def_id);"}, {"sha": "4479b0d8f61baf5bd75f911c9e8e8ddb5390006e", "filename": "src/test/ui/privacy/effective_visibilities.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb401bd04d6239932c37a8f741fefb278f009a1b/src%2Ftest%2Fui%2Fprivacy%2Feffective_visibilities.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb401bd04d6239932c37a8f741fefb278f009a1b/src%2Ftest%2Fui%2Fprivacy%2Feffective_visibilities.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Feffective_visibilities.rs?ref=bb401bd04d6239932c37a8f741fefb278f009a1b", "patch": "@@ -18,6 +18,7 @@ mod outer { //~ ERROR Direct: pub(crate), Reexported: pub(crate), Reachable: pub\n \n         #[rustc_effective_visibility]\n         struct PrivStruct; //~ ERROR not in the table\n+                           //~| ERROR not in the table\n \n         #[rustc_effective_visibility]\n         pub union PubUnion { //~ ERROR Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n@@ -31,6 +32,7 @@ mod outer { //~ ERROR Direct: pub(crate), Reexported: pub(crate), Reachable: pub\n         pub enum Enum { //~ ERROR Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n             #[rustc_effective_visibility]\n             A( //~ ERROR Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n+               //~| ERROR Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n                 #[rustc_effective_visibility]\n                 PubUnion,  //~ ERROR Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n             ),"}, {"sha": "019aaf8086a6a82d91f35dcee4a981c5aff8f2d6", "filename": "src/test/ui/privacy/effective_visibilities.stderr", "status": "modified", "additions": 28, "deletions": 16, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/bb401bd04d6239932c37a8f741fefb278f009a1b/src%2Ftest%2Fui%2Fprivacy%2Feffective_visibilities.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb401bd04d6239932c37a8f741fefb278f009a1b/src%2Ftest%2Fui%2Fprivacy%2Feffective_visibilities.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Feffective_visibilities.stderr?ref=bb401bd04d6239932c37a8f741fefb278f009a1b", "patch": "@@ -28,92 +28,104 @@ error: not in the table\n LL |         struct PrivStruct;\n    |         ^^^^^^^^^^^^^^^^^\n \n+error: not in the table\n+  --> $DIR/effective_visibilities.rs:20:9\n+   |\n+LL |         struct PrivStruct;\n+   |         ^^^^^^^^^^^^^^^^^\n+\n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:23:9\n+  --> $DIR/effective_visibilities.rs:24:9\n    |\n LL |         pub union PubUnion {\n    |         ^^^^^^^^^^^^^^^^^^\n \n error: not in the table\n-  --> $DIR/effective_visibilities.rs:25:13\n+  --> $DIR/effective_visibilities.rs:26:13\n    |\n LL |             a: u8,\n    |             ^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:27:13\n+  --> $DIR/effective_visibilities.rs:28:13\n    |\n LL |             pub b: u8,\n    |             ^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:31:9\n+  --> $DIR/effective_visibilities.rs:32:9\n    |\n LL |         pub enum Enum {\n    |         ^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:33:13\n+  --> $DIR/effective_visibilities.rs:34:13\n+   |\n+LL |             A(\n+   |             ^\n+\n+error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n+  --> $DIR/effective_visibilities.rs:34:13\n    |\n LL |             A(\n    |             ^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:35:17\n+  --> $DIR/effective_visibilities.rs:37:17\n    |\n LL |                 PubUnion,\n    |                 ^^^^^^^^\n \n error: not in the table\n-  --> $DIR/effective_visibilities.rs:41:5\n+  --> $DIR/effective_visibilities.rs:43:5\n    |\n LL |     macro_rules! none_macro {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(self), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:47:5\n+  --> $DIR/effective_visibilities.rs:49:5\n    |\n LL |     macro_rules! public_macro {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub(crate), Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:52:5\n+  --> $DIR/effective_visibilities.rs:54:5\n    |\n LL |     pub struct ReachableStruct {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub(crate), Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:54:9\n+  --> $DIR/effective_visibilities.rs:56:9\n    |\n LL |         pub a: u8,\n    |         ^^^^^^^^^\n \n error: Direct: pub, Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:59:9\n+  --> $DIR/effective_visibilities.rs:61:9\n    |\n LL | pub use outer::inner1;\n    |         ^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:65:5\n+  --> $DIR/effective_visibilities.rs:67:5\n    |\n LL |     pub type HalfPublicImport = u8;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub(crate), Reachable: pub(crate), ReachableThroughImplTrait: pub(crate)\n-  --> $DIR/effective_visibilities.rs:68:5\n+  --> $DIR/effective_visibilities.rs:70:5\n    |\n LL |     pub(crate) const HalfPublicImport: u8 = 0;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub, Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:72:9\n+  --> $DIR/effective_visibilities.rs:74:9\n    |\n LL | pub use half_public_import::HalfPublicImport;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub, Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:72:9\n+  --> $DIR/effective_visibilities.rs:74:9\n    |\n LL | pub use half_public_import::HalfPublicImport;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -130,5 +142,5 @@ error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImpl\n LL |             type B;\n    |             ^^^^^^\n \n-error: aborting due to 22 previous errors\n+error: aborting due to 24 previous errors\n "}]}