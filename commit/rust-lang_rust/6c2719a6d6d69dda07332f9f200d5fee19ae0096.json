{"sha": "6c2719a6d6d69dda07332f9f200d5fee19ae0096", "node_id": "C_kwDOAAsO6NoAKDZjMjcxOWE2ZDZkNjlkZGEwNzMzMmY5ZjIwMGQ1ZmVlMTlhZTAwOTY", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-23T16:26:34Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-23T16:55:57Z"}, "message": "Bump the const eval step limit", "tree": {"sha": "f2f625cc7043ae9adaaa9df6d5ec09a79d2fb24d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2f625cc7043ae9adaaa9df6d5ec09a79d2fb24d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c2719a6d6d69dda07332f9f200d5fee19ae0096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2719a6d6d69dda07332f9f200d5fee19ae0096", "html_url": "https://github.com/rust-lang/rust/commit/6c2719a6d6d69dda07332f9f200d5fee19ae0096", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c2719a6d6d69dda07332f9f200d5fee19ae0096/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e0d0d757e2f1b61ec809420b006545a9f8974c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e0d0d757e2f1b61ec809420b006545a9f8974c0", "html_url": "https://github.com/rust-lang/rust/commit/4e0d0d757e2f1b61ec809420b006545a9f8974c0"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "12aef66bcf947d21c4383a28dd9ad8f7a61fdcd8", "filename": "compiler/rustc_middle/src/middle/limits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c2719a6d6d69dda07332f9f200d5fee19ae0096/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flimits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2719a6d6d69dda07332f9f200d5fee19ae0096/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flimits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flimits.rs?ref=6c2719a6d6d69dda07332f9f200d5fee19ae0096", "patch": "@@ -38,7 +38,7 @@ pub fn provide(providers: &mut ty::query::Providers) {\n             tcx.hir().krate_attrs(),\n             tcx.sess,\n             sym::const_eval_limit,\n-            1_000_000,\n+            2_000_000,\n         ),\n     }\n }"}, {"sha": "4babc9a2850eb3cecafe010d1862b076524a0796", "filename": "src/test/ui/consts/const-eval/infinite_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c2719a6d6d69dda07332f9f200d5fee19ae0096/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2719a6d6d69dda07332f9f200d5fee19ae0096/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.rs?ref=6c2719a6d6d69dda07332f9f200d5fee19ae0096", "patch": "@@ -4,8 +4,8 @@ fn main() {\n     let _ = [(); {\n         let mut n = 113383; // #20 in https://oeis.org/A006884\n         while n != 0 {\n-            n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\n             //~^ ERROR evaluation of constant value failed\n+            n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\n         }\n         n\n     }];"}, {"sha": "8b58cb279f376a77ccb005913248ef46027a3144", "filename": "src/test/ui/consts/const-eval/infinite_loop.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c2719a6d6d69dda07332f9f200d5fee19ae0096/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c2719a6d6d69dda07332f9f200d5fee19ae0096/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.stderr?ref=6c2719a6d6d69dda07332f9f200d5fee19ae0096", "patch": "@@ -1,8 +1,8 @@\n error[E0080]: evaluation of constant value failed\n-  --> $DIR/infinite_loop.rs:7:20\n+  --> $DIR/infinite_loop.rs:6:15\n    |\n-LL |             n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\n-   |                    ^^^^^^^^^^ exceeded interpreter step limit (see `#[const_eval_limit]`)\n+LL |         while n != 0 {\n+   |               ^^^^^^ exceeded interpreter step limit (see `#[const_eval_limit]`)\n \n error: aborting due to previous error\n "}]}