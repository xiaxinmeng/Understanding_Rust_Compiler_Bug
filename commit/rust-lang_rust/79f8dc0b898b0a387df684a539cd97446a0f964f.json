{"sha": "79f8dc0b898b0a387df684a539cd97446a0f964f", "node_id": "C_kwDOAAsO6NoAKDc5ZjhkYzBiODk4YjBhMzg3ZGY2ODRhNTM5Y2Q5NzQ0NmEwZjk2NGY", "commit": {"author": {"name": "Thom Chiovoloni", "email": "thom@shift.click", "date": "2022-06-30T22:50:48Z"}, "committer": {"name": "Thom Chiovoloni", "email": "thom@shift.click", "date": "2022-06-30T22:50:48Z"}, "message": "Add a `--build-dir` flag to rustbuild", "tree": {"sha": "2fca5bacb515443dbe602d1a7355407a1e2e2114", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fca5bacb515443dbe602d1a7355407a1e2e2114"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79f8dc0b898b0a387df684a539cd97446a0f964f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQQszICQ1r0Zqrp7OLPXcz0dendfCgUCYr4oyQAKCRDXcz0dendf\nCviXAP9IuwjAuXLmjlrdKVmPKaRkA+iSYdqIYXAjPqfYKjoekwD9HRDviHgDv9WO\niL9U3USyzqT3/z/PszZNytgDLwHEaQc=\n=7lz4\n-----END PGP SIGNATURE-----", "payload": "tree 2fca5bacb515443dbe602d1a7355407a1e2e2114\nparent 7425fb293f510a6f138e82a963a3bc599a5b9e1c\nauthor Thom Chiovoloni <thom@shift.click> 1656629448 -0700\ncommitter Thom Chiovoloni <thom@shift.click> 1656629448 -0700\n\nAdd a `--build-dir` flag to rustbuild\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79f8dc0b898b0a387df684a539cd97446a0f964f", "html_url": "https://github.com/rust-lang/rust/commit/79f8dc0b898b0a387df684a539cd97446a0f964f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79f8dc0b898b0a387df684a539cd97446a0f964f/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7425fb293f510a6f138e82a963a3bc599a5b9e1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7425fb293f510a6f138e82a963a3bc599a5b9e1c", "html_url": "https://github.com/rust-lang/rust/commit/7425fb293f510a6f138e82a963a3bc599a5b9e1c"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "6ead79ef040a98e7945812cbde1d2924b88f846e", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/79f8dc0b898b0a387df684a539cd97446a0f964f/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/79f8dc0b898b0a387df684a539cd97446a0f964f/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=79f8dc0b898b0a387df684a539cd97446a0f964f", "patch": "@@ -866,6 +866,7 @@ def bootstrap(help_triggered):\n \n     parser = argparse.ArgumentParser(description='Build rust')\n     parser.add_argument('--config')\n+    parser.add_argument('--build-dir')\n     parser.add_argument('--build')\n     parser.add_argument('--color', choices=['always', 'never', 'auto'])\n     parser.add_argument('--clean', action='store_true')\n@@ -915,7 +916,7 @@ def bootstrap(help_triggered):\n \n     build.check_vendored_status()\n \n-    build_dir = build.get_toml('build-dir', 'build') or 'build'\n+    build_dir = args.build_dir or build.get_toml('build-dir', 'build') or 'build'\n     build.build_dir = os.path.abspath(build_dir)\n \n     with open(os.path.join(build.rust_root, \"src\", \"stage0.json\")) as f:"}, {"sha": "2fc18c9e79e32adb782c70b05e46327bcb446a34", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79f8dc0b898b0a387df684a539cd97446a0f964f/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f8dc0b898b0a387df684a539cd97446a0f964f/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=79f8dc0b898b0a387df684a539cd97446a0f964f", "patch": "@@ -857,7 +857,7 @@ impl Config {\n         let build = toml.build.unwrap_or_default();\n \n         set(&mut config.initial_rustc, build.rustc.map(PathBuf::from));\n-        set(&mut config.out, build.build_dir.map(PathBuf::from));\n+        set(&mut config.out, flags.build_dir.or_else(|| build.build_dir.map(PathBuf::from)));\n         // NOTE: Bootstrap spawns various commands with different working directories.\n         // To avoid writing to random places on the file system, `config.out` needs to be an absolute path.\n         if !config.out.is_absolute() {"}, {"sha": "7ebae55efc168010bae2e8f4d0620fe03f63076d", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/79f8dc0b898b0a387df684a539cd97446a0f964f/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f8dc0b898b0a387df684a539cd97446a0f964f/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=79f8dc0b898b0a387df684a539cd97446a0f964f", "patch": "@@ -51,6 +51,7 @@ pub struct Flags {\n     pub host: Option<Vec<TargetSelection>>,\n     pub target: Option<Vec<TargetSelection>>,\n     pub config: Option<PathBuf>,\n+    pub build_dir: Option<PathBuf>,\n     pub jobs: Option<u32>,\n     pub cmd: Subcommand,\n     pub incremental: bool,\n@@ -174,6 +175,12 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n         opts.optflagmulti(\"v\", \"verbose\", \"use verbose output (-vv for very verbose)\");\n         opts.optflag(\"i\", \"incremental\", \"use incremental compilation\");\n         opts.optopt(\"\", \"config\", \"TOML configuration file for build\", \"FILE\");\n+        opts.optopt(\n+            \"\",\n+            \"build-dir\",\n+            \"Build directory, overrides `build.build-dir` in `config.toml`\",\n+            \"DIR\",\n+        );\n         opts.optopt(\"\", \"build\", \"build target of the stage0 compiler\", \"BUILD\");\n         opts.optmulti(\"\", \"host\", \"host targets to build\", \"HOST\");\n         opts.optmulti(\"\", \"target\", \"target targets to build\", \"TARGET\");\n@@ -649,6 +656,7 @@ Arguments:\n                 None\n             },\n             config: matches.opt_str(\"config\").map(PathBuf::from),\n+            build_dir: matches.opt_str(\"build-dir\").map(PathBuf::from),\n             jobs: matches.opt_str(\"jobs\").map(|j| j.parse().expect(\"`jobs` should be a number\")),\n             cmd,\n             incremental: matches.opt_present(\"incremental\"),"}]}