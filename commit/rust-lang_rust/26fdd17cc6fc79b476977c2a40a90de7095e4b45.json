{"sha": "26fdd17cc6fc79b476977c2a40a90de7095e4b45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZmRkMTdjYzZmYzc5YjQ3Njk3N2MyYTQwYTkwZGU3MDk1ZTRiNDU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-18T23:07:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-18T23:07:41Z"}, "message": "Merge #8099\n\n8099: Document fields of `ModuleId` r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "89e44f4bd6e02593bf159dba46107f55edfbaa46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89e44f4bd6e02593bf159dba46107f55edfbaa46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26fdd17cc6fc79b476977c2a40a90de7095e4b45", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgU909CRBK7hj4Ov3rIwAAdHIIAB8h/OZEd3H6U8vfD3pOz2sv\nrk53j5FVA7JKESBeiqMZguHIf6beH5kQgVPw+iUxgHUZAdJt3QnXRAS0yXV4Ugck\nxCb0jRwnX9Q3UfZZ3+KInDK3tgCIkg7Dfhgz3ad30OYlNh8/7UEWxTbA4M/N/BFX\nMwJlPao6kLaLoy02Z8zjgn7EzHU5vyXlNVNGEzoMMP0HKQFLX6OSEAKFWuc92UAI\n8Yb/EPhVMn6vcKnjIxK1NcsKOGpqUEqh73TsrzJVRSLDdGdFLBg3RsCfex25aSti\nIv5oG3CDTlaos3UGNho7wb73tz4+KyPTEMwNWdBImdxJuM62kzfZwbOfK/l8eAU=\n=e1tA\n-----END PGP SIGNATURE-----\n", "payload": "tree 89e44f4bd6e02593bf159dba46107f55edfbaa46\nparent 86878443b1789cac0e48177f5f2b95ad0d6e912c\nparent fcbaf585cbac8e94dd6e6f9bfe9cca455e90fb3b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1616108861 +0000\ncommitter GitHub <noreply@github.com> 1616108861 +0000\n\nMerge #8099\n\n8099: Document fields of `ModuleId` r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26fdd17cc6fc79b476977c2a40a90de7095e4b45", "html_url": "https://github.com/rust-lang/rust/commit/26fdd17cc6fc79b476977c2a40a90de7095e4b45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26fdd17cc6fc79b476977c2a40a90de7095e4b45/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86878443b1789cac0e48177f5f2b95ad0d6e912c", "url": "https://api.github.com/repos/rust-lang/rust/commits/86878443b1789cac0e48177f5f2b95ad0d6e912c", "html_url": "https://github.com/rust-lang/rust/commit/86878443b1789cac0e48177f5f2b95ad0d6e912c"}, {"sha": "fcbaf585cbac8e94dd6e6f9bfe9cca455e90fb3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcbaf585cbac8e94dd6e6f9bfe9cca455e90fb3b", "html_url": "https://github.com/rust-lang/rust/commit/fcbaf585cbac8e94dd6e6f9bfe9cca455e90fb3b"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "50e73044471ff74b19f8cbfaedcfbeda36e7c034", "filename": "crates/hir_def/src/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/26fdd17cc6fc79b476977c2a40a90de7095e4b45/crates%2Fhir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26fdd17cc6fc79b476977c2a40a90de7095e4b45/crates%2Fhir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flib.rs?ref=26fdd17cc6fc79b476977c2a40a90de7095e4b45", "patch": "@@ -76,7 +76,11 @@ use stdx::impl_from;\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct ModuleId {\n     krate: CrateId,\n+    /// If this `ModuleId` was derived from a `DefMap` for a block expression, this stores the\n+    /// `BlockId` of that block expression. If `None`, this module is part of the crate-level\n+    /// `DefMap` of `krate`.\n     block: Option<BlockId>,\n+    /// The module's ID in its originating `DefMap`.\n     pub local_id: LocalModuleId,\n }\n \n@@ -87,7 +91,7 @@ impl ModuleId {\n                 db.block_def_map(block).unwrap_or_else(|| {\n                     // NOTE: This should be unreachable - all `ModuleId`s come from their `DefMap`s,\n                     // so the `DefMap` here must exist.\n-                    panic!(\"no `block_def_map` for `ModuleId` {:?}\", self);\n+                    unreachable!(\"no `block_def_map` for `ModuleId` {:?}\", self);\n                 })\n             }\n             None => db.crate_def_map(self.krate),"}]}