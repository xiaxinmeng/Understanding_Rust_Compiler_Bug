{"sha": "2f52386f1072755d1b9973014e8e1d4b383e8eef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNTIzODZmMTA3Mjc1NWQxYjk5NzMwMTRlOGUxZDRiMzgzZThlZWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-01T00:58:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-01T00:58:13Z"}, "message": "Auto merge of #40164 - steveklabnik:rollup, r=steveklabnik\n\nRollup of 5 pull requests\n\n- Successful merges: #40130, #40142, #40150, #40151, #40153\n- Failed merges:", "tree": {"sha": "637fbb5d3dc0b414ea5dac70ebb4b9ffbc0a22db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/637fbb5d3dc0b414ea5dac70ebb4b9ffbc0a22db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f52386f1072755d1b9973014e8e1d4b383e8eef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f52386f1072755d1b9973014e8e1d4b383e8eef", "html_url": "https://github.com/rust-lang/rust/commit/2f52386f1072755d1b9973014e8e1d4b383e8eef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f52386f1072755d1b9973014e8e1d4b383e8eef/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be760566cf938d11d34c2f6bd90d8fd0f67c2344", "url": "https://api.github.com/repos/rust-lang/rust/commits/be760566cf938d11d34c2f6bd90d8fd0f67c2344", "html_url": "https://github.com/rust-lang/rust/commit/be760566cf938d11d34c2f6bd90d8fd0f67c2344"}, {"sha": "4fd2aeddd409f6247531d04a7a54ff2e1ff6f595", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fd2aeddd409f6247531d04a7a54ff2e1ff6f595", "html_url": "https://github.com/rust-lang/rust/commit/4fd2aeddd409f6247531d04a7a54ff2e1ff6f595"}], "stats": {"total": 251, "additions": 168, "deletions": 83}, "files": [{"sha": "1fb5d34d13f5d063a59869668340762b400406b6", "filename": "src/Cargo.lock", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=2f52386f1072755d1b9973014e8e1d4b383e8eef", "patch": "@@ -270,7 +270,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"mdbook\"\n-version = \"0.0.16\"\n+version = \"0.0.17\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"clap 2.20.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -401,7 +401,7 @@ name = \"rustbook\"\n version = \"0.1.0\"\n dependencies = [\n  \"clap 2.20.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"mdbook 0.0.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"mdbook 0.0.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -976,7 +976,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum lazy_static 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6abe0ee2e758cd6bc8a2cd56726359007748fbf4128da998b65d0b70f881e19b\"\n \"checksum libc 0.2.20 (registry+https://github.com/rust-lang/crates.io-index)\" = \"684f330624d8c3784fb9558ca46c4ce488073a8d22450415c5eb4f4cfb0d11b5\"\n \"checksum log 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab83497bf8bf4ed2a74259c1c802351fcd67a65baa86394b6ba73c36f4838054\"\n-\"checksum mdbook 0.0.16 (registry+https://github.com/rust-lang/crates.io-index)\" = \"14e8a6aca534ac51bad1c1886b10f6d6948a14fa70b1b20a1e41c9e5c0fe3019\"\n+\"checksum mdbook 0.0.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dbba458ca886cb082d026afd704eeeeb0531f7e4ffd6c619f72dc309c1c18fe4\"\n \"checksum memchr 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1dbccc0e46f1ea47b9f17e6d67c5a96bd27030519c519c9c91327e31275a47b4\"\n \"checksum num-traits 0.1.36 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a16a42856a256b39c6d3484f097f6713e14feacd9bfb02290917904fae46c81c\"\n \"checksum num_cpus 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cee7e88156f3f9e19bdd598f8d6c9db7bf4078f99f8381f43a55b09648d1a6e3\""}, {"sha": "a7060cd55fe64aeedaf79241c9c87ba291835c16", "filename": "src/ci/docker/linux-tested-targets/Dockerfile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2Fci%2Fdocker%2Flinux-tested-targets%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2Fci%2Fdocker%2Flinux-tested-targets%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Flinux-tested-targets%2FDockerfile?ref=2f52386f1072755d1b9973014e8e1d4b383e8eef", "patch": "@@ -39,8 +39,8 @@ ENV RUST_CONFIGURE_ARGS \\\n # way to produce \"super compatible\" binaries.\n #\n # See: https://github.com/rust-lang/rust/issues/34978\n-ENV CFLAGS_i686_unknown_linux_gnu=-Wa,-mrelax-relocations=no \\\n-    CFLAGS_x86_64_unknown_linux_gnu=-Wa,-mrelax-relocations=no\n+ENV CFLAGS_i686_unknown_linux_musl=-Wa,-mrelax-relocations=no \\\n+    CFLAGS_x86_64_unknown_linux_musl=-Wa,-mrelax-relocations=no\n \n ENV SCRIPT \\\n       python2.7 ../x.py test \\"}, {"sha": "71db2b4e3ea69edfe5318c98de4e981fda448892", "filename": "src/doc/book/src/structs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2Fdoc%2Fbook%2Fsrc%2Fstructs.md", "raw_url": "https://github.com/rust-lang/rust/raw/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2Fdoc%2Fbook%2Fsrc%2Fstructs.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fstructs.md?ref=2f52386f1072755d1b9973014e8e1d4b383e8eef", "patch": "@@ -88,7 +88,7 @@ fn main() {\n }\n ```\n \n-Your structure can still contain `&mut` pointers, which will let\n+Your structure can still contain `&mut` references, which will let\n you do some kinds of mutation:\n \n ```rust"}, {"sha": "e876b4aac0dfa594181fb943bd226eb374633eaa", "filename": "src/doc/unstable-book/src/SUMMARY.md", "status": "modified", "additions": 75, "deletions": 75, "changes": 150, "blob_url": "https://github.com/rust-lang/rust/blob/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md?ref=2f52386f1072755d1b9973014e8e1d4b383e8eef", "patch": "@@ -1,94 +1,94 @@\n [The Unstable Book](the-unstable-book.md)\n \n-- [asm](asm.md)\n-- [alloc_system](alloc-system.md)\n+- [abi_msp430_interrupt](abi-msp430-interrupt.md)\n+- [abi_ptx](abi-ptx.md)\n+- [abi_sysv64](abi-sysv64.md)\n+- [abi_unadjusted](abi-unadjusted.md)\n+- [abi_vectorcall](abi-vectorcall.md)\n+- [advanced_slice_patterns](advanced-slice-patterns.md)\n - [alloc_jemalloc](alloc-jemalloc.md)\n-- [test](test.md)\n+- [alloc_system](alloc-system.md)\n+- [allocator](allocator.md)\n+- [allow_internal_unstable](allow-internal-unstable.md)\n+- [asm](asm.md)\n+- [associated_consts](associated-consts.md)\n+- [associated_type_defaults](associated-type-defaults.md)\n+- [attr_literals](attr-literals.md)\n+- [box_patterns](box-patterns.md)\n+- [box_syntax](box-syntax.md)\n+- [cfg_target_feature](cfg-target-feature.md)\n+- [cfg_target_has_atomic](cfg-target-has-atomic.md)\n+- [cfg_target_thread_local](cfg-target-thread-local.md)\n+- [cfg_target_vendor](cfg-target-vendor.md)\n+- [compiler_builtins](compiler-builtins.md)\n - [concat_idents](concat-idents.md)\n-- [link_args](link-args.md)\n-- [log_syntax](log-syntax.md)\n-- [non_ascii_idents](non-ascii-idents.md)\n-- [plugin_registrar](plugin-registrar.md)\n-- [thread_local](thread-local.md)\n-- [trace_macros](trace-macros.md)\n+- [conservative_impl_trait](conservative-impl-trait.md)\n+- [const_fn](const-fn.md)\n+- [const_indexing](const-indexing.md)\n+- [custom_attribute](custom-attribute.md)\n+- [custom_derive](custom-derive.md)\n+- [default_type_parameter_fallback](default-type-parameter-fallback.md)\n+- [drop_types_in_const](drop-types-in-const.md)\n+- [dropck_eyepatch](dropck-eyepatch.md)\n+- [dropck_parametricity](dropck-parametricity.md)\n+- [exclusive_range_pattern](exclusive-range-pattern.md)\n+- [field_init_shorthand](field-init-shorthand.md)\n+- [fundamental](fundamental.md)\n+- [generic_param_attrs](generic-param-attrs.md)\n+- [i128_type](i128-type.md)\n+- [inclusive_range_syntax](inclusive-range-syntax.md)\n - [intrinsics](intrinsics.md)\n - [lang_items](lang-items.md)\n+- [link_args](link-args.md)\n+- [link_cfg](link-cfg.md)\n - [link_llvm_intrinsics](link-llvm-intrinsics.md)\n - [linkage](linkage.md)\n-- [quote](quote.md)\n-- [simd](simd.md)\n-- [rustc_diagnostic_macros](rustc-diagnostic-macros.md)\n-- [advanced_slice_patterns](advanced-slice-patterns.md)\n-- [box_syntax](box-syntax.md)\n-- [placement_in_syntax](placement-in-syntax.md)\n-- [unboxed_closures](unboxed-closures.md)\n-- [allocator](allocator.md)\n-- [fundamental](fundamental.md)\n+- [log_syntax](log-syntax.md)\n+- [loop_break_value](loop-break-value.md)\n+- [macro_reexport](macro-reexport.md)\n - [main](main.md)\n+- [naked_functions](naked-functions.md)\n - [needs_allocator](needs-allocator.md)\n-- [on_unimplemented](on-unimplemented.md)\n-- [plugin](plugin.md)\n-- [simd_ffi](simd-ffi.md)\n-- [start](start.md)\n-- [structural_match](structural-match.md)\n-- [panic_runtime](panic-runtime.md)\n - [needs_panic_runtime](needs-panic-runtime.md)\n-- [optin_builtin_traits](optin-builtin-traits.md)\n-- [macro_reexport](macro-reexport.md)\n-- [staged_api](staged-api.md)\n+- [never_type](never-type.md)\n - [no_core](no-core.md)\n-- [box_patterns](box-patterns.md)\n-- [dropck_parametricity](dropck-parametricity.md)\n-- [dropck_eyepatch](dropck-eyepatch.md)\n-- [custom_attribute](custom-attribute.md)\n-- [custom_derive](custom-derive.md)\n+- [no_debug](no-debug.md)\n+- [non_ascii_idents](non-ascii-idents.md)\n+- [omit_gdb_pretty_printer_section](omit-gdb-pretty-printer-section.md)\n+- [on_unimplemented](on-unimplemented.md)\n+- [optin_builtin_traits](optin-builtin-traits.md)\n+- [panic_runtime](panic-runtime.md)\n+- [placement_in_syntax](placement-in-syntax.md)\n+- [platform_intrinsics](platform-intrinsics.md)\n+- [plugin](plugin.md)\n+- [plugin_registrar](plugin-registrar.md)\n+- [prelude_import](prelude-import.md)\n+- [proc_macro](proc-macro.md)\n+- [pub_restricted](pub-restricted.md)\n+- [quote](quote.md)\n+- [relaxed_adts](relaxed-adts.md)\n+- [repr_simd](repr-simd.md)\n - [rustc_attrs](rustc-attrs.md)\n-- [allow_internal_unstable](allow-internal-unstable.md)\n+- [rustc_diagnostic_macros](rustc-diagnostic-macros.md)\n+- [sanitizer_runtime](sanitizer-runtime.md)\n+- [simd](simd.md)\n+- [simd_ffi](simd-ffi.md)\n - [slice_patterns](slice-patterns.md)\n-- [associated_consts](associated-consts.md)\n-- [const_fn](const-fn.md)\n-- [const_indexing](const-indexing.md)\n-- [prelude_import](prelude-import.md)\n+- [specialization](specialization.md)\n+- [staged_api](staged-api.md)\n+- [start](start.md)\n+- [static_nobundle](static-nobundle.md)\n - [static_recursion](static-recursion.md)\n-- [default_type_parameter_fallback](default-type-parameter-fallback.md)\n-- [associated_type_defaults](associated-type-defaults.md)\n-- [repr_simd](repr-simd.md)\n-- [cfg_target_feature](cfg-target-feature.md)\n-- [platform_intrinsics](platform-intrinsics.md)\n-- [unwind_attributes](unwind-attributes.md)\n-- [naked_functions](naked-functions.md)\n-- [no_debug](no-debug.md)\n-- [omit_gdb_pretty_printer_section](omit-gdb-pretty-printer-section.md)\n-- [cfg_target_vendor](cfg-target-vendor.md)\n - [stmt_expr_attributes](stmt-expr-attributes.md)\n+- [struct_field_attributes](struct-field-attributes.md)\n+- [structural_match](structural-match.md)\n+- [target_feature](target-feature.md)\n+- [test](test.md)\n+- [thread_local](thread-local.md)\n+- [trace_macros](trace-macros.md)\n - [type_ascription](type-ascription.md)\n-- [cfg_target_thread_local](cfg-target-thread-local.md)\n-- [abi_vectorcall](abi-vectorcall.md)\n-- [inclusive_range_syntax](inclusive-range-syntax.md)\n-- [exclusive_range_pattern](exclusive-range-pattern.md)\n-- [specialization](specialization.md)\n-- [pub_restricted](pub-restricted.md)\n-- [drop_types_in_const](drop-types-in-const.md)\n-- [cfg_target_has_atomic](cfg-target-has-atomic.md)\n-- [conservative_impl_trait](conservative-impl-trait.md)\n-- [relaxed_adts](relaxed-adts.md)\n-- [never_type](never-type.md)\n-- [attr_literals](attr-literals.md)\n-- [abi_sysv64](abi-sysv64.md)\n+- [unboxed_closures](unboxed-closures.md)\n - [untagged_unions](untagged-unions.md)\n-- [compiler_builtins](compiler-builtins.md)\n-- [generic_param_attrs](generic-param-attrs.md)\n-- [field_init_shorthand](field-init-shorthand.md)\n-- [windows_subsystem](windows-subsystem.md)\n-- [link_cfg](link-cfg.md)\n+- [unwind_attributes](unwind-attributes.md)\n - [use_extern_macros](use-extern-macros.md)\n-- [loop_break_value](loop-break-value.md)\n-- [target_feature](target-feature.md)\n-- [abi_ptx](abi-ptx.md)\n-- [i128_type](i128-type.md)\n-- [abi_unadjusted](abi-unadjusted.md)\n-- [proc_macro](proc-macro.md)\n-- [struct_field_attributes](struct-field-attributes.md)\n-- [static_nobundle](static-nobundle.md)\n-- [abi_msp430_interrupt](abi-msp430-interrupt.md)\n-- [sanitizer_runtime](sanitizer-runtime.md)\n+- [windows_subsystem](windows-subsystem.md)"}, {"sha": "aa27f8922c005d7a77af19294583b7c2e77e42ba", "filename": "src/test/compile-fail/feature-gate-cfg-target-has-atomic.rs", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2Ftest%2Fcompile-fail%2Ffeature-gate-cfg-target-has-atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2Ftest%2Fcompile-fail%2Ffeature-gate-cfg-target-has-atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-cfg-target-has-atomic.rs?ref=2f52386f1072755d1b9973014e8e1d4b383e8eef", "patch": "@@ -0,0 +1,86 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"rlib\"]\n+#![no_core]\n+\n+extern \"rust-intrinsic\" {\n+    fn atomic_xadd<T>(dst: *mut T, src: T) -> T;\n+}\n+\n+#[lang = \"sized\"]\n+trait Sized {}\n+#[lang = \"copy\"]\n+trait Copy {}\n+\n+#[cfg(target_has_atomic = \"8\")]\n+//~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+pub unsafe fn atomic_u8(x: *mut u8) {\n+    atomic_xadd(x, 1);\n+    atomic_xadd(x, 1);\n+}\n+#[cfg(target_has_atomic = \"8\")]\n+//~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+pub unsafe fn atomic_i8(x: *mut i8) {\n+    atomic_xadd(x, 1);\n+}\n+#[cfg(target_has_atomic = \"16\")]\n+//~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+pub unsafe fn atomic_u16(x: *mut u16) {\n+    atomic_xadd(x, 1);\n+}\n+#[cfg(target_has_atomic = \"16\")]\n+//~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+pub unsafe fn atomic_i16(x: *mut i16) {\n+    atomic_xadd(x, 1);\n+}\n+#[cfg(target_has_atomic = \"32\")]\n+//~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+pub unsafe fn atomic_u32(x: *mut u32) {\n+    atomic_xadd(x, 1);\n+}\n+#[cfg(target_has_atomic = \"32\")]\n+//~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+pub unsafe fn atomic_i32(x: *mut i32) {\n+    atomic_xadd(x, 1);\n+}\n+#[cfg(target_has_atomic = \"64\")]\n+//~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+pub unsafe fn atomic_u64(x: *mut u64) {\n+    atomic_xadd(x, 1);\n+}\n+#[cfg(target_has_atomic = \"64\")]\n+//~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+pub unsafe fn atomic_i64(x: *mut i64) {\n+    atomic_xadd(x, 1);\n+}\n+#[cfg(target_has_atomic = \"ptr\")]\n+//~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+pub unsafe fn atomic_usize(x: *mut usize) {\n+    atomic_xadd(x, 1);\n+}\n+#[cfg(target_has_atomic = \"ptr\")]\n+//~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+pub unsafe fn atomic_isize(x: *mut isize) {\n+    atomic_xadd(x, 1);\n+}\n+\n+fn main() {\n+    cfg!(target_has_atomic = \"8\");\n+    //~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+    cfg!(target_has_atomic = \"16\");\n+    //~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+    cfg!(target_has_atomic = \"32\");\n+    //~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+    cfg!(target_has_atomic = \"64\");\n+    //~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+    cfg!(target_has_atomic = \"ptr\");\n+    //~^ ERROR `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n+}"}, {"sha": "40318141e04fa57716c45c673ab798eb33357789", "filename": "src/tools/rustbook/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2Ftools%2Frustbook%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2Ftools%2Frustbook%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustbook%2FCargo.toml?ref=2f52386f1072755d1b9973014e8e1d4b383e8eef", "patch": "@@ -8,5 +8,5 @@ license = \"MIT/Apache-2.0\"\n clap = \"2.19.3\"\n \n [dependencies.mdbook]\n-version = \"0.0.16\"\n+version = \"0.0.17\"\n default-features = false"}, {"sha": "8025477684931bf699acdd638a30812faa9ff1d7", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f52386f1072755d1b9973014e8e1d4b383e8eef/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=2f52386f1072755d1b9973014e8e1d4b383e8eef", "patch": "@@ -168,7 +168,6 @@ pub fn check(path: &Path, bad: &mut bool) {\n     // FIXME get this whitelist empty.\n     let whitelist = vec![\n         \"abi_ptx\", \"simd\",\n-        \"cfg_target_has_atomic\",\n         \"stmt_expr_attributes\",\n         \"cfg_target_thread_local\", \"unwind_attributes\",\n     ];"}]}