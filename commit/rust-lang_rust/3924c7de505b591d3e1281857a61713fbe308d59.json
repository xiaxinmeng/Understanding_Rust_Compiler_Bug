{"sha": "3924c7de505b591d3e1281857a61713fbe308d59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MjRjN2RlNTA1YjU5MWQzZTEyODE4NTdhNjE3MTNmYmUzMDhkNTk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-11T20:41:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-11T20:41:41Z"}, "message": "Merge #2791\n\n2791: Slightly more robust cargo watcher root search r=kiljacken a=kiljacken\n\nFixes #2780 (hopefully).\r\n\r\nUse the already painstakingly found `workspaces` instead of naively using `folder_roots` from editor.\n\nCo-authored-by: Emil Lauridsen <mine809@gmail.com>", "tree": {"sha": "2bab7953c6fb1d089ce2acaf7b646adc4921b128", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bab7953c6fb1d089ce2acaf7b646adc4921b128"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3924c7de505b591d3e1281857a61713fbe308d59", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeGjMFCRBK7hj4Ov3rIwAAdHIIACqlVXd91i3S1s6CHIBp7yuq\nyqooHybdwWHBlqo17cN9yzny437kVk0mloPnziMbFUeFn/NqIVAEwnffUoF8J2Tg\nNeBk7a3e3XikAQPY6AYiNjltquMYK3ROMKccfsP1+kxyEUP28yL01aQnak6F9Jiw\nPWtP2vUtk05u+62bTeBaoQumDwsPFVbK8H7m3QLZUJMzEsZk77eAQAMqr3Uw1LC8\ntvuVdXmqq+9jUukZNV93xJsWPBDVV15uQ/B12wk+24hXFu1bJgK+Ce9bYUFD8JB2\nlDFXPRzSsvQDbO8kKwPZDBmmN3RBF+2Hb12/IniJ69eqfTfrmuVlbdN2FMr+X3E=\n=eEsy\n-----END PGP SIGNATURE-----\n", "payload": "tree 2bab7953c6fb1d089ce2acaf7b646adc4921b128\nparent 867081220921c1c593f11866bbdba8b845090c07\nparent 8e778f9842123e1f688a2632d99e439821801bd2\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1578775301 +0000\ncommitter GitHub <noreply@github.com> 1578775301 +0000\n\nMerge #2791\n\n2791: Slightly more robust cargo watcher root search r=kiljacken a=kiljacken\n\nFixes #2780 (hopefully).\r\n\r\nUse the already painstakingly found `workspaces` instead of naively using `folder_roots` from editor.\n\nCo-authored-by: Emil Lauridsen <mine809@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3924c7de505b591d3e1281857a61713fbe308d59", "html_url": "https://github.com/rust-lang/rust/commit/3924c7de505b591d3e1281857a61713fbe308d59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3924c7de505b591d3e1281857a61713fbe308d59/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "867081220921c1c593f11866bbdba8b845090c07", "url": "https://api.github.com/repos/rust-lang/rust/commits/867081220921c1c593f11866bbdba8b845090c07", "html_url": "https://github.com/rust-lang/rust/commit/867081220921c1c593f11866bbdba8b845090c07"}, {"sha": "8e778f9842123e1f688a2632d99e439821801bd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e778f9842123e1f688a2632d99e439821801bd2", "html_url": "https://github.com/rust-lang/rust/commit/8e778f9842123e1f688a2632d99e439821801bd2"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "cb0856aa43e6d5a5f1f31b1f0a3cded4c0036f27", "filename": "crates/ra_cargo_watch/src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3924c7de505b591d3e1281857a61713fbe308d59/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3924c7de505b591d3e1281857a61713fbe308d59/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs?ref=3924c7de505b591d3e1281857a61713fbe308d59", "patch": "@@ -58,6 +58,12 @@ impl CheckWatcher {\n         CheckWatcher { task_recv, cmd_send: Some(cmd_send), handle: Some(handle), shared }\n     }\n \n+    /// Returns a CheckWatcher that doesn't actually do anything\n+    pub fn dummy() -> CheckWatcher {\n+        let shared = Arc::new(RwLock::new(CheckWatcherSharedState::new()));\n+        CheckWatcher { task_recv: never(), cmd_send: None, handle: None, shared }\n+    }\n+\n     /// Schedule a re-start of the cargo check worker.\n     pub fn update(&self) {\n         if let Some(cmd_send) = &self.cmd_send {"}, {"sha": "c0175c7266c7c08a360ac4f4103209c53fdd4414", "filename": "crates/ra_lsp_server/src/world.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3924c7de505b591d3e1281857a61713fbe308d59/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3924c7de505b591d3e1281857a61713fbe308d59/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs?ref=3924c7de505b591d3e1281857a61713fbe308d59", "patch": "@@ -132,8 +132,20 @@ impl WorldState {\n         change.set_crate_graph(crate_graph);\n \n         // FIXME: Figure out the multi-workspace situation\n-        let check_watcher =\n-            CheckWatcher::new(&options.cargo_watch, folder_roots.first().cloned().unwrap());\n+        let check_watcher = workspaces\n+            .iter()\n+            .find_map(|w| match w {\n+                ProjectWorkspace::Cargo { cargo, .. } => Some(cargo),\n+                ProjectWorkspace::Json { .. } => None,\n+            })\n+            .map(|cargo| {\n+                let cargo_project_root = cargo.workspace_root().to_path_buf();\n+                CheckWatcher::new(&options.cargo_watch, cargo_project_root)\n+            })\n+            .unwrap_or_else(|| {\n+                log::warn!(\"Cargo check watching only supported for cargo workspaces, disabling\");\n+                CheckWatcher::dummy()\n+            });\n \n         let mut analysis_host = AnalysisHost::new(lru_capacity, feature_flags);\n         analysis_host.apply_change(change);"}, {"sha": "1832c101f097e637041b405ff81ffc0d03eebeda", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3924c7de505b591d3e1281857a61713fbe308d59/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3924c7de505b591d3e1281857a61713fbe308d59/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=3924c7de505b591d3e1281857a61713fbe308d59", "patch": "@@ -21,7 +21,7 @@ use crate::Result;\n pub struct CargoWorkspace {\n     packages: Arena<Package, PackageData>,\n     targets: Arena<Target, TargetData>,\n-    pub(crate) workspace_root: PathBuf,\n+    workspace_root: PathBuf,\n }\n \n #[derive(Deserialize, Clone, Debug, PartialEq, Eq)]\n@@ -225,4 +225,8 @@ impl CargoWorkspace {\n     pub fn target_by_root(&self, root: &Path) -> Option<Target> {\n         self.packages().filter_map(|pkg| pkg.targets(self).find(|it| it.root(self) == root)).next()\n     }\n+\n+    pub fn workspace_root(&self) -> &Path {\n+        &self.workspace_root\n+    }\n }"}, {"sha": "6a104e6f2c829bd92c55ed62bd94160238f35657", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3924c7de505b591d3e1281857a61713fbe308d59/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3924c7de505b591d3e1281857a61713fbe308d59/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=3924c7de505b591d3e1281857a61713fbe308d59", "patch": "@@ -333,7 +333,7 @@ impl ProjectWorkspace {\n     pub fn workspace_root_for(&self, path: &Path) -> Option<&Path> {\n         match self {\n             ProjectWorkspace::Cargo { cargo, .. } => {\n-                Some(cargo.workspace_root.as_ref()).filter(|root| path.starts_with(root))\n+                Some(cargo.workspace_root()).filter(|root| path.starts_with(root))\n             }\n             ProjectWorkspace::Json { project: JsonProject { roots, .. } } => roots\n                 .iter()"}]}