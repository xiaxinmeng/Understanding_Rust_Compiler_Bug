{"sha": "bf46b9cb281cd196ca6227b2b72ef64dee390b5a", "node_id": "C_kwDOAAsO6NoAKGJmNDZiOWNiMjgxY2QxOTZjYTYyMjdiMmI3MmVmNjRkZWUzOTBiNWE", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-25T16:29:06Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-25T16:29:06Z"}, "message": "Explain that this is UB catching instead of malformed MIR.", "tree": {"sha": "3333ea37a76fa94a71e617d6e078cbc07ad58b9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3333ea37a76fa94a71e617d6e078cbc07ad58b9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf46b9cb281cd196ca6227b2b72ef64dee390b5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf46b9cb281cd196ca6227b2b72ef64dee390b5a", "html_url": "https://github.com/rust-lang/rust/commit/bf46b9cb281cd196ca6227b2b72ef64dee390b5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf46b9cb281cd196ca6227b2b72ef64dee390b5a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9aa4f6acb2e769ab012ab2cd7114177d94351847", "url": "https://api.github.com/repos/rust-lang/rust/commits/9aa4f6acb2e769ab012ab2cd7114177d94351847", "html_url": "https://github.com/rust-lang/rust/commit/9aa4f6acb2e769ab012ab2cd7114177d94351847"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "b12a63f23fa291fceaf6cbb882a70b1636534418", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bf46b9cb281cd196ca6227b2b72ef64dee390b5a/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf46b9cb281cd196ca6227b2b72ef64dee390b5a/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=bf46b9cb281cd196ca6227b2b72ef64dee390b5a", "patch": "@@ -756,6 +756,13 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n                 }\n             }\n             StatementKind::StorageLive(local) => {\n+                // We check that the local is not live when entering a `StorageLive` for it.\n+                // Technically, violating this restriction is only UB and not actually indicative\n+                // of not well-formed MIR. This means that an optimization which turns MIR that\n+                // already has UB into MIR that fails this check is not necessarily wrong. However,\n+                // we have no such optimizations at the moment, and so we include this check anyway\n+                // to help us catch bugs. If you happen to write an optimization that might cause\n+                // this to incorrectly fire, feel free to remove this check.\n                 if self.reachable_blocks.contains(location.block) {\n                     self.storage_liveness.seek_before_primary_effect(location);\n                     let locals_with_storage = self.storage_liveness.get();"}]}