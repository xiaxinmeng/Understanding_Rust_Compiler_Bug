{"sha": "44b80ed0d6de641cd95a8b9d0b8f8844ea46accf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YjgwZWQwZDZkZTY0MWNkOTVhOGI5ZDBiOGY4ODQ0ZWE0NmFjY2Y=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-12T04:49:20Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-12T04:49:49Z"}, "message": "Long lines.", "tree": {"sha": "6048969dff6414bdff87434754e760c44755f9d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6048969dff6414bdff87434754e760c44755f9d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44b80ed0d6de641cd95a8b9d0b8f8844ea46accf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44b80ed0d6de641cd95a8b9d0b8f8844ea46accf", "html_url": "https://github.com/rust-lang/rust/commit/44b80ed0d6de641cd95a8b9d0b8f8844ea46accf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44b80ed0d6de641cd95a8b9d0b8f8844ea46accf/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/70185fdcc22e2cd11ee5d6171395f3c223bc21e6", "html_url": "https://github.com/rust-lang/rust/commit/70185fdcc22e2cd11ee5d6171395f3c223bc21e6"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "0efc17354dd58c781f461ec01847b49b3cffe75e", "filename": "src/libcore/os.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/44b80ed0d6de641cd95a8b9d0b8f8844ea46accf/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44b80ed0d6de641cd95a8b9d0b8f8844ea46accf/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=44b80ed0d6de641cd95a8b9d0b8f8844ea46accf", "patch": "@@ -831,7 +831,7 @@ pub fn last_os_error() -> ~str {\n \n         // GNU libc provides a non-compliant version of strerror_r by default\n         // and requires macros to instead use the POSIX compliant variant.\n-        // So instead we just use __xpg_strerror_r which is always POSIX compliant\n+        // So we just use __xpg_strerror_r which is always POSIX compliant\n         #[cfg(target_os = \"linux\")]\n         fn strerror_r(errnum: c_int, buf: *c_char, buflen: size_t) -> c_int {\n             #[nolink]\n@@ -884,7 +884,8 @@ pub fn last_os_error() -> ~str {\n             let res = FormatMessageA(FORMAT_MESSAGE_FROM_SYSTEM |\n                                      FORMAT_MESSAGE_IGNORE_INSERTS,\n                                      ptr::mut_null(), err, langId,\n-                                     &mut buf[0], TMPBUF_SZ as DWORD, ptr::null());\n+                                     &mut buf[0], TMPBUF_SZ as DWORD,\n+                                     ptr::null());\n             if res == 0 {\n                 die!(fmt!(\"[%?] FormatMessage failure\", errno()));\n             }"}]}