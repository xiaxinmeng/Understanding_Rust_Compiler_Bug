{"sha": "102046d4068133fecac550f91512d32266b34a2d", "node_id": "C_kwDOAAsO6NoAKDEwMjA0NmQ0MDY4MTMzZmVjYWM1NTBmOTE1MTJkMzIyNjZiMzRhMmQ", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-03-14T16:23:34Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-01T08:15:17Z"}, "message": "clean up Colon from clippy", "tree": {"sha": "aab55d4b03a385168991a47ad61f194282a3f01e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aab55d4b03a385168991a47ad61f194282a3f01e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/102046d4068133fecac550f91512d32266b34a2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/102046d4068133fecac550f91512d32266b34a2d", "html_url": "https://github.com/rust-lang/rust/commit/102046d4068133fecac550f91512d32266b34a2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/102046d4068133fecac550f91512d32266b34a2d/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "url": "https://api.github.com/repos/rust-lang/rust/commits/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af", "html_url": "https://github.com/rust-lang/rust/commit/f44ebf7e541d6636e9f0d25e56e626fce4f5e9af"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "03cd8e48b9a55479bcb636b53863eb5010d6f9e4", "filename": "src/tools/clippy/clippy_utils/src/sugg.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/102046d4068133fecac550f91512d32266b34a2d/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/102046d4068133fecac550f91512d32266b34a2d/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fsugg.rs?ref=102046d4068133fecac550f91512d32266b34a2d", "patch": "@@ -163,7 +163,8 @@ impl<'a> Sugg<'a> {\n                 get_snippet(rhs.span),\n             ),\n             hir::ExprKind::Cast(lhs, ty) => Sugg::BinOp(AssocOp::As, get_snippet(lhs.span), get_snippet(ty.span)),\n-            hir::ExprKind::Type(lhs, ty) => Sugg::BinOp(AssocOp::Colon, get_snippet(lhs.span), get_snippet(ty.span)),\n+            //FIXME(chenyukang), remove this after type ascription is removed from AST\n+            hir::ExprKind::Type(lhs, ty) => Sugg::BinOp(AssocOp::As, get_snippet(lhs.span), get_snippet(ty.span)),\n         }\n     }\n \n@@ -258,8 +259,9 @@ impl<'a> Sugg<'a> {\n                 snippet_with_context(cx, lhs.span, ctxt, default, app).0,\n                 snippet_with_context(cx, ty.span, ctxt, default, app).0,\n             ),\n+            //FIXME(chenyukang), remove this after type ascription is removed from AST\n             ast::ExprKind::Type(ref lhs, ref ty) => Sugg::BinOp(\n-                AssocOp::Colon,\n+                AssocOp::As,\n                 snippet_with_context(cx, lhs.span, ctxt, default, app).0,\n                 snippet_with_context(cx, ty.span, ctxt, default, app).0,\n             ),\n@@ -392,7 +394,6 @@ fn binop_to_string(op: AssocOp, lhs: &str, rhs: &str) -> String {\n         AssocOp::As => format!(\"{lhs} as {rhs}\"),\n         AssocOp::DotDot => format!(\"{lhs}..{rhs}\"),\n         AssocOp::DotDotEq => format!(\"{lhs}..={rhs}\"),\n-        AssocOp::Colon => format!(\"{lhs}: {rhs}\"),\n     }\n }\n \n@@ -602,13 +603,13 @@ enum Associativity {\n #[must_use]\n fn associativity(op: AssocOp) -> Associativity {\n     use rustc_ast::util::parser::AssocOp::{\n-        Add, As, Assign, AssignOp, BitAnd, BitOr, BitXor, Colon, Divide, DotDot, DotDotEq, Equal, Greater,\n+        Add, As, Assign, AssignOp, BitAnd, BitOr, BitXor, Divide, DotDot, DotDotEq, Equal, Greater,\n         GreaterEqual, LAnd, LOr, Less, LessEqual, Modulus, Multiply, NotEqual, ShiftLeft, ShiftRight, Subtract,\n     };\n \n     match op {\n         Assign | AssignOp(_) => Associativity::Right,\n-        Add | BitAnd | BitOr | BitXor | LAnd | LOr | Multiply | As | Colon => Associativity::Both,\n+        Add | BitAnd | BitOr | BitXor | LAnd | LOr | Multiply | As => Associativity::Both,\n         Divide | Equal | Greater | GreaterEqual | Less | LessEqual | Modulus | NotEqual | ShiftLeft | ShiftRight\n         | Subtract => Associativity::Left,\n         DotDot | DotDotEq => Associativity::None,"}]}