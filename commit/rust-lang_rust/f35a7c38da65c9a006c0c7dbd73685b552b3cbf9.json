{"sha": "f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNWE3YzM4ZGE2NWM5YTAwNmMwYzdkYmQ3MzY4NWI1NTJiM2NiZjk=", "commit": {"author": {"name": "Matthias Prechtl", "email": "m.sleepypanda@gmail.com", "date": "2020-02-07T12:06:35Z"}, "committer": {"name": "Matthias Prechtl", "email": "m.sleepypanda@gmail.com", "date": "2020-02-09T19:43:49Z"}, "message": "Make issue references consistent", "tree": {"sha": "0ec0af213307f55b20a429e8e0fb8430051ca4ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ec0af213307f55b20a429e8e0fb8430051ca4ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "html_url": "https://github.com/rust-lang/rust/commit/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/comments", "author": {"login": "matprec", "id": 20750283, "node_id": "MDQ6VXNlcjIwNzUwMjgz", "avatar_url": "https://avatars.githubusercontent.com/u/20750283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matprec", "html_url": "https://github.com/matprec", "followers_url": "https://api.github.com/users/matprec/followers", "following_url": "https://api.github.com/users/matprec/following{/other_user}", "gists_url": "https://api.github.com/users/matprec/gists{/gist_id}", "starred_url": "https://api.github.com/users/matprec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matprec/subscriptions", "organizations_url": "https://api.github.com/users/matprec/orgs", "repos_url": "https://api.github.com/users/matprec/repos", "events_url": "https://api.github.com/users/matprec/events{/privacy}", "received_events_url": "https://api.github.com/users/matprec/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matprec", "id": 20750283, "node_id": "MDQ6VXNlcjIwNzUwMjgz", "avatar_url": "https://avatars.githubusercontent.com/u/20750283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matprec", "html_url": "https://github.com/matprec", "followers_url": "https://api.github.com/users/matprec/followers", "following_url": "https://api.github.com/users/matprec/following{/other_user}", "gists_url": "https://api.github.com/users/matprec/gists{/gist_id}", "starred_url": "https://api.github.com/users/matprec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matprec/subscriptions", "organizations_url": "https://api.github.com/users/matprec/orgs", "repos_url": "https://api.github.com/users/matprec/repos", "events_url": "https://api.github.com/users/matprec/events{/privacy}", "received_events_url": "https://api.github.com/users/matprec/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ad6b5e1e69ad3d3509abd8c041bb9fb2dd86c41", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ad6b5e1e69ad3d3509abd8c041bb9fb2dd86c41", "html_url": "https://github.com/rust-lang/rust/commit/1ad6b5e1e69ad3d3509abd8c041bb9fb2dd86c41"}], "stats": {"total": 139, "additions": 89, "deletions": 50}, "files": [{"sha": "c28d507b0b2a498460404fdf343684e45bf97ff6", "filename": "src/librustc/traits/error_reporting/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -700,11 +700,11 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                             if self.predicate_may_hold(&unit_obligation) {\n                                 err.note(\n                                     \"the trait is implemented for `()`. \\\n-                                         Possibly this error has been caused by changes to \\\n-                                         Rust's type-inference algorithm \\\n-                                         (see: https://github.com/rust-lang/rust/issues/48950 \\\n-                                         for more info). Consider whether you meant to use the \\\n-                                         type `()` here instead.\",\n+                                     Possibly this error has been caused by changes to \\\n+                                     Rust's type-inference algorithm (see issue #48950 \\\n+                                     <https://github.com/rust-lang/rust/issues/48950> \\\n+                                     for more information). Consider whether you meant to use \\\n+                                     the type `()` here instead.\",\n                                 );\n                             }\n                         }"}, {"sha": "34e403e6701bb34f5645840afc76aaab3ac60140", "filename": "src/librustc/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -1508,9 +1508,9 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 );\n                 if suggest_const_in_array_repeat_expressions {\n                     err.note(\n-                        \"this array initializer can be evaluated at compile-time, for more \\\n-                         information, see issue \\\n-                         https://github.com/rust-lang/rust/issues/49147\",\n+                        \"this array initializer can be evaluated at compile-time, see issue \\\n+                         #48147 <https://github.com/rust-lang/rust/issues/49147> \\\n+                         for more information\",\n                     );\n                     if tcx.sess.opts.unstable_features.is_nightly_build() {\n                         err.help("}, {"sha": "6c5458e6e58a6f05c4899df2d847520d83342525", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -483,8 +483,9 @@ impl Trait for X {\n                 if ty.is_closure() || ty.is_generator() {\n                     db.note(\n                         \"closures cannot capture themselves or take themselves as argument;\\n\\\n-                             this error may be the result of a recent compiler bug-fix,\\n\\\n-                             see https://github.com/rust-lang/rust/issues/46062 for more details\",\n+                         this error may be the result of a recent compiler bug-fix,\\n\\\n+                         see issue #46062 <https://github.com/rust-lang/rust/issues/46062>\\n\\\n+                         for more information\",\n                     );\n                 }\n             }"}, {"sha": "057acec9598017a1b1c4ac8839dc0a41101cf254", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -996,7 +996,8 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                     )\n                     .span_label(predicate.span, \"not supported\")\n                     .note(\n-                        \"for more information, see https://github.com/rust-lang/rust/issues/20041\",\n+                        \"see issue #20041 <https://github.com/rust-lang/rust/issues/20041> \\\n+                         for more information\",\n                     )\n                     .emit();\n             }"}, {"sha": "07ee1cbb27d602c2f69f4e99700001a58a8dd167", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 38, "deletions": 19, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -324,47 +324,58 @@ fn register_builtins(store: &mut LintStore, no_interleave_lints: bool) {\n     );\n     store.register_removed(\n         \"hr_lifetime_in_assoc_type\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/33685\",\n+        \"converted into hard error, see issue #33685 \\\n+         <https://github.com/rust-lang/rust/issues/33685> for more information\",\n     );\n     store.register_removed(\n         \"inaccessible_extern_crate\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/36886\",\n+        \"converted into hard error, see issue #36886 \\\n+         <https://github.com/rust-lang/rust/issues/36886> for more information\",\n     );\n     store.register_removed(\n         \"super_or_self_in_global_path\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/36888\",\n+        \"converted into hard error, see issue #36888 \\\n+         <https://github.com/rust-lang/rust/issues/36888> for more information\",\n     );\n     store.register_removed(\n         \"overlapping_inherent_impls\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/36889\",\n+        \"converted into hard error, see issue #36889 \\\n+         <https://github.com/rust-lang/rust/issues/36889> for more information\",\n     );\n     store.register_removed(\n         \"illegal_floating_point_constant_pattern\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/36890\",\n+        \"converted into hard error, see issue #36890 \\\n+         <https://github.com/rust-lang/rust/issues/36890> for more information\",\n     );\n     store.register_removed(\n         \"illegal_struct_or_enum_constant_pattern\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/36891\",\n+        \"converted into hard error, see issue #36891 \\\n+         <https://github.com/rust-lang/rust/issues/36891> for more information\",\n     );\n     store.register_removed(\n         \"lifetime_underscore\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/36892\",\n+        \"converted into hard error, see issue #36892 \\\n+         <https://github.com/rust-lang/rust/issues/36892> for more information\",\n     );\n     store.register_removed(\n         \"extra_requirement_in_impl\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/37166\",\n+        \"converted into hard error, see issue #37166 \\\n+         <https://github.com/rust-lang/rust/issues/37166> for more information\",\n     );\n     store.register_removed(\n         \"legacy_imports\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/38260\",\n+        \"converted into hard error, see issue #38260 \\\n+         <https://github.com/rust-lang/rust/issues/38260> for more information\",\n     );\n     store.register_removed(\n         \"coerce_never\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/48950\",\n+        \"converted into hard error, see issue #48950 \\\n+         <https://github.com/rust-lang/rust/issues/48950> for more information\",\n     );\n     store.register_removed(\n         \"resolve_trait_on_defaulted_unit\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/48950\",\n+        \"converted into hard error, see issue #48950 \\\n+         <https://github.com/rust-lang/rust/issues/48950> for more information\",\n     );\n     store.register_removed(\n         \"private_no_mangle_fns\",\n@@ -377,35 +388,43 @@ fn register_builtins(store: &mut LintStore, no_interleave_lints: bool) {\n     store.register_removed(\"bad_repr\", \"replaced with a generic attribute input check\");\n     store.register_removed(\n         \"duplicate_matcher_binding_name\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/57742\",\n+        \"converted into hard error, see issue #57742 \\\n+         <https://github.com/rust-lang/rust/issues/57742> for more information\",\n     );\n     store.register_removed(\n         \"incoherent_fundamental_impls\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/46205\",\n+        \"converted into hard error, see issue #46205 \\\n+         <https://github.com/rust-lang/rust/issues/46205> for more information\",\n     );\n     store.register_removed(\n         \"legacy_constructor_visibility\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/39207\",\n+        \"converted into hard error, see issue #39207 \\\n+         <https://github.com/rust-lang/rust/issues/39207> for more information\",\n     );\n     store.register_removed(\n         \"legacy_directory_ownership\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/37872\",\n+        \"converted into hard error, see issue #37872 \\\n+         <https://github.com/rust-lang/rust/issues/37872> for more information\",\n     );\n     store.register_removed(\n         \"safe_extern_statics\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/36247\",\n+        \"converted into hard error, see issue #36247 \\\n+         <https://github.com/rust-lang/rust/issues/36247> for more information\",\n     );\n     store.register_removed(\n         \"parenthesized_params_in_types_and_modules\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/42238\",\n+        \"converted into hard error, see issue #42238 \\\n+         <https://github.com/rust-lang/rust/issues/42238> for more information\",\n     );\n     store.register_removed(\n         \"duplicate_macro_exports\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/35896\",\n+        \"converted into hard error, see issue #35896 \\\n+         <https://github.com/rust-lang/rust/issues/35896> for more information\",\n     );\n     store.register_removed(\n         \"nested_impl_trait\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/59014\",\n+        \"converted into hard error, see issue #59014 \\\n+         <https://github.com/rust-lang/rust/issues/59014> for more information\",\n     );\n     store.register_removed(\"plugin_as_library\", \"plugins have been deprecated and retired\");\n }"}, {"sha": "94c2f77335c2179c6e43bb2b59ea6f882386f24e", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -565,7 +565,10 @@ impl Visitor<'tcx> for Validator<'_, 'mir, 'tcx> {\n \n fn error_min_const_fn_violation(tcx: TyCtxt<'_>, span: Span, msg: Cow<'_, str>) {\n     struct_span_err!(tcx.sess, span, E0723, \"{}\", msg)\n-        .note(\"for more information, see issue https://github.com/rust-lang/rust/issues/57563\")\n+        .note(\n+            \"see issue #57563 <https://github.com/rust-lang/rust/issues/57563> \\\n+             for more information\",\n+        )\n         .help(\"add `#![feature(const_fn)]` to the crate attributes to enable\")\n         .emit();\n }\n@@ -593,9 +596,9 @@ fn check_short_circuiting_in_const_local(item: &Item<'_, 'tcx>) {\n                 *span,\n                 &format!(\n                     \"use of {} here does not actually short circuit due to \\\n-                the const evaluator presently not being able to do control flow. \\\n-                See https://github.com/rust-lang/rust/issues/49146 for more \\\n-                information.\",\n+                     the const evaluator presently not being able to do control flow. \\\n+                     See issue #49146 <https://github.com/rust-lang/rust/issues/49146> \\\n+                     for more information.\",\n                     kind\n                 ),\n             );"}, {"sha": "e60f1138ddcaea5b3004281c94af5acc85df7d89", "filename": "src/librustc_parse/lexer/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Fmod.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -248,8 +248,9 @@ impl<'a> StringReader<'a> {\n                                    a future release!\",\n                             )\n                             .note(\n-                                \"for more information, see issue #42326 \\\n-                                   <https://github.com/rust-lang/rust/issues/42326>\",\n+                                \"see issue #42326 \\\n+                                 <https://github.com/rust-lang/rust/issues/42326> \\\n+                                 for more information\",\n                             )\n                             .emit();\n                         None"}, {"sha": "237b3cc13d394fb3cf6522e8d04133bd023f451a", "filename": "src/librustc_parse/parser/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -366,8 +366,8 @@ impl<'a> Parser<'a> {\n                           type: `<expr>: <type>`\",\n                 );\n                 err.note(\n-                    \"for more information, see \\\n-                          https://github.com/rust-lang/rust/issues/23416\",\n+                    \"see issue #23416 <https://github.com/rust-lang/rust/issues/23416> \\\n+                     for more information\",\n                 );\n             }\n         }"}, {"sha": "eacc95e0395a8db98b4cf96b7a1a66f700cf6d18", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -1295,7 +1295,10 @@ impl<'a> Parser<'a> {\n                         `proc_macro::Literal::*_unsuffixed` for code that will desugar \\\n                         to tuple field access\",\n                 );\n-                err.note(\"for more context, see https://github.com/rust-lang/rust/issues/60210\");\n+                err.note(\n+                    \"see issue #60210 <https://github.com/rust-lang/rust/issues/60210> \\\n+                     for more information\",\n+                );\n                 err\n             } else {\n                 self.struct_span_err(sp, &format!(\"suffixes on {} are invalid\", kind))"}, {"sha": "a877c1de175e10feedbc277ad2eae6d25cdb9022", "filename": "src/librustc_passes/check_attr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_passes%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_passes%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_attr.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -120,8 +120,8 @@ impl CheckAttrVisitor<'tcx> {\n                        a future release!\",\n                     )\n                     .note(\n-                        \"for more information, see issue #65833 \\\n-                       <https://github.com/rust-lang/rust/issues/65833>\",\n+                        \"see issue #65833 <https://github.com/rust-lang/rust/issues/65833> \\\n+                         for more information\",\n                     )\n                     .emit();\n                 true"}, {"sha": "6a4871b6da059eb0b8fcde2c1340abb202a96e7a", "filename": "src/librustc_session/parse.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_session%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_session%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fparse.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -86,8 +86,8 @@ pub fn feature_err_issue<'a>(\n \n     if let Some(n) = find_feature_issue(feature, issue) {\n         err.note(&format!(\n-            \"for more information, see https://github.com/rust-lang/rust/issues/{}\",\n-            n,\n+            \"see issue #{} <https://github.com/rust-lang/rust/issues/{}> for more information\",\n+            n, n,\n         ));\n     }\n "}, {"sha": "6f003043aa95c332d7dfa8dc791c617c50147915", "filename": "src/librustc_session/session.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_session%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_session%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fsession.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -1125,7 +1125,8 @@ fn validate_commandline_args_with_session_available(sess: &Session) {\n         sess.err(\n             \"Profile-guided optimization does not yet work in conjunction \\\n                   with `-Cpanic=unwind` on Windows when targeting MSVC. \\\n-                  See https://github.com/rust-lang/rust/issues/61002 for details.\",\n+                  See issue #61002 <https://github.com/rust-lang/rust/issues/61002> \\\n+                  for more information.\",\n         );\n     }\n "}, {"sha": "2ebd3079ccc7466b5310dc9ad9b32001e798f67a", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -797,9 +797,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         );\n                         err.warn(\n                             \"if the rounded value cannot be represented by the target \\\n-                                  integer type, including `Inf` and `NaN`, casting will cause \\\n-                                  undefined behavior \\\n-                                  (https://github.com/rust-lang/rust/issues/10184)\",\n+                                integer type, including `Inf` and `NaN`, casting will cause \\\n+                                undefined behavior \\\n+                                (see issue #10184 <https://github.com/rust-lang/rust/issues/10184> \\\n+                                for more information)\",\n                         );\n                     }\n                     true"}, {"sha": "1a3016cd9d33b402a1cb809fc245a36a56c61c6f", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -2440,7 +2440,10 @@ fn associated_item_predicates(\n                     trait_item.span,\n                     &format!(\"{}-generic associated types are not yet implemented\", arg_kind),\n                 )\n-                .note(\"for more information, see https://github.com/rust-lang/rust/issues/44265\")\n+                .note(\n+                    \"for more information, see issue #44265 \\\n+                     <https://github.com/rust-lang/rust/issues/44265> for more information\",\n+                )\n                 .emit();\n             had_error = true;\n         }"}, {"sha": "33b3e800374e33bfa7f28926d42738f50da7c4e7", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -570,7 +570,10 @@ fn check_deprecated_options(matches: &getopts::Matches, diag: &rustc_errors::Han\n         if matches.opt_present(flag) {\n             let mut err =\n                 diag.struct_warn(&format!(\"the '{}' flag is considered deprecated\", flag));\n-            err.warn(\"please see https://github.com/rust-lang/rust/issues/44136\");\n+            err.warn(\n+                \"see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n+                 for more information\",\n+            );\n \n             if *flag == \"no-defaults\" {\n                 err.help(\"you may want to use --document-private-items\");"}, {"sha": "c3c07e2e02c766d95935a1a398f45dc1b49e2a5a", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f35a7c38da65c9a006c0c7dbd73685b552b3cbf9/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=f35a7c38da65c9a006c0c7dbd73685b552b3cbf9", "patch": "@@ -416,7 +416,10 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n                                                          considered deprecated\",\n                         name\n                     ));\n-                    msg.warn(\"please see https://github.com/rust-lang/rust/issues/44136\");\n+                    msg.warn(\n+                        \"see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n+                         for more information\",\n+                    );\n \n                     if name == \"no_default_passes\" {\n                         msg.help(\"you may want to use `#![doc(document_private_items)]`\");"}]}