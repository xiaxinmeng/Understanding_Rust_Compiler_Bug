{"sha": "480db7dd9e95492f987ee36b53935a179699a287", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MGRiN2RkOWU5NTQ5MmY5ODdlZTM2YjUzOTM1YTE3OTY5OWEyODc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-16T16:16:24Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-16T16:16:24Z"}, "message": "Implement system abi", "tree": {"sha": "7eeb548720de89559c9f71ef0afb780aea38f673", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7eeb548720de89559c9f71ef0afb780aea38f673"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/480db7dd9e95492f987ee36b53935a179699a287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/480db7dd9e95492f987ee36b53935a179699a287", "html_url": "https://github.com/rust-lang/rust/commit/480db7dd9e95492f987ee36b53935a179699a287", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/480db7dd9e95492f987ee36b53935a179699a287/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2558bf2f6bd5e74861d7db760f689b3b01bcc618", "url": "https://api.github.com/repos/rust-lang/rust/commits/2558bf2f6bd5e74861d7db760f689b3b01bcc618", "html_url": "https://github.com/rust-lang/rust/commit/2558bf2f6bd5e74861d7db760f689b3b01bcc618"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "6e4edc4a15186075a2126fd7652e644b8e1b7e41", "filename": "src/abi.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/480db7dd9e95492f987ee36b53935a179699a287/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/480db7dd9e95492f987ee36b53935a179699a287/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=480db7dd9e95492f987ee36b53935a179699a287", "patch": "@@ -149,7 +149,17 @@ fn adjust_arg_for_abi<'a, 'tcx: 'a>(\n }\n \n fn clif_sig_from_fn_sig<'tcx>(tcx: TyCtxt<'tcx>, sig: FnSig<'tcx>, is_vtable_fn: bool) -> Signature {\n-    let (call_conv, inputs, output): (CallConv, Vec<Ty>, Ty) = match sig.abi {\n+    let abi = match sig.abi {\n+        Abi::System => {\n+            if tcx.sess.target.target.options.is_like_windows {\n+                unimplemented!()\n+            } else {\n+                Abi::C\n+            }\n+        }\n+        abi => abi,\n+    };\n+    let (call_conv, inputs, output): (CallConv, Vec<Ty>, Ty) = match abi {\n         Abi::Rust => (CallConv::SystemV, sig.inputs().to_vec(), sig.output()),\n         Abi::C => (CallConv::SystemV, sig.inputs().to_vec(), sig.output()),\n         Abi::RustCall => {\n@@ -162,7 +172,7 @@ fn clif_sig_from_fn_sig<'tcx>(tcx: TyCtxt<'tcx>, sig: FnSig<'tcx>, is_vtable_fn:\n             inputs.extend(extra_args.types());\n             (CallConv::SystemV, inputs, sig.output())\n         }\n-        Abi::System => bug!(\"system abi should be selected elsewhere\"),\n+        Abi::System => unreachable!(),\n         Abi::RustIntrinsic => (CallConv::SystemV, sig.inputs().to_vec(), sig.output()),\n         _ => unimplemented!(\"unsupported abi {:?}\", sig.abi),\n     };"}]}