{"sha": "1b34e2d678bc45a2877c18d93a7a5049f8f8ef84", "node_id": "C_kwDOAAsO6NoAKDFiMzRlMmQ2NzhiYzQ1YTI4NzdjMThkOTNhN2E1MDQ5ZjhmOGVmODQ", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-09-06T17:33:23Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-09-25T00:08:41Z"}, "message": "Introduce `Rvalue::ShallowInitBox`", "tree": {"sha": "bd9898025b7ea0f7536f41314021a459228d1854", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd9898025b7ea0f7536f41314021a459228d1854"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b34e2d678bc45a2877c18d93a7a5049f8f8ef84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b34e2d678bc45a2877c18d93a7a5049f8f8ef84", "html_url": "https://github.com/rust-lang/rust/commit/1b34e2d678bc45a2877c18d93a7a5049f8f8ef84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b34e2d678bc45a2877c18d93a7a5049f8f8ef84/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "208fc4254b9b6a78b6981ee8b12cfc80d99b2b4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/208fc4254b9b6a78b6981ee8b12cfc80d99b2b4d", "html_url": "https://github.com/rust-lang/rust/commit/208fc4254b9b6a78b6981ee8b12cfc80d99b2b4d"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "1b30edd293862b1d221cbfb4529c1b9f8883a52e", "filename": "src/base.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1b34e2d678bc45a2877c18d93a7a5049f8f8ef84/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b34e2d678bc45a2877c18d93a7a5049f8f8ef84/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=1b34e2d678bc45a2877c18d93a7a5049f8f8ef84", "patch": "@@ -701,6 +701,13 @@ fn codegen_stmt<'tcx>(\n                     let len = codegen_array_len(fx, place);\n                     lval.write_cvalue(fx, CValue::by_val(len, usize_layout));\n                 }\n+                Rvalue::ShallowInitBox(ref operand, content_ty) => {\n+                    let content_ty = fx.monomorphize(content_ty);\n+                    let box_layout = fx.layout_of(fx.tcx.mk_box(content_ty));\n+                    let operand = codegen_operand(fx, operand);\n+                    let operand = operand.load_scalar(fx);\n+                    lval.write_cvalue(fx, CValue::by_val(operand, box_layout));\n+                }\n                 Rvalue::NullaryOp(NullOp::Box, content_ty) => {\n                     let usize_type = fx.clif_type(fx.tcx.types.usize).unwrap();\n                     let content_ty = fx.monomorphize(content_ty);"}]}