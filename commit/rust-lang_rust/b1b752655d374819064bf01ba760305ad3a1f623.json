{"sha": "b1b752655d374819064bf01ba760305ad3a1f623", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYjc1MjY1NWQzNzQ4MTkwNjRiZjAxYmE3NjAzMDVhZDNhMWY2MjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-12T10:11:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-12T10:11:36Z"}, "message": "Auto merge of #34161 - kennytm:fix-E0277-format, r=GuillaumeGomez\n\nFix markdown formatting error of E0277, E0310 and E0502.\n\nFix bad format we see in https://doc.rust-lang.org/nightly/error-index.html#E0277.", "tree": {"sha": "9115d78163e59c059e6190bd6d11a16523ab00d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9115d78163e59c059e6190bd6d11a16523ab00d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1b752655d374819064bf01ba760305ad3a1f623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1b752655d374819064bf01ba760305ad3a1f623", "html_url": "https://github.com/rust-lang/rust/commit/b1b752655d374819064bf01ba760305ad3a1f623", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1b752655d374819064bf01ba760305ad3a1f623/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b09f2a1a61ba09fa4d027bc58249e29a7fde78d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b09f2a1a61ba09fa4d027bc58249e29a7fde78d", "html_url": "https://github.com/rust-lang/rust/commit/5b09f2a1a61ba09fa4d027bc58249e29a7fde78d"}, {"sha": "ae755938640e4477acc77331aac2b02d0f17ac94", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae755938640e4477acc77331aac2b02d0f17ac94", "html_url": "https://github.com/rust-lang/rust/commit/ae755938640e4477acc77331aac2b02d0f17ac94"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "30dcca833f84558a374032e20b85c3e0ff81463e", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b1b752655d374819064bf01ba760305ad3a1f623/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1b752655d374819064bf01ba760305ad3a1f623/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=b1b752655d374819064bf01ba760305ad3a1f623", "patch": "@@ -1112,6 +1112,7 @@ fn main() {\n ```\n \n Or in a generic context, an erroneous code example would look like:\n+\n ```compile_fail\n fn some_func<T>(foo: T) {\n     println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n@@ -1130,6 +1131,7 @@ we only call it with a parameter that does implement `Debug`, the compiler\n still rejects the function: It must work with all possible input types. In\n order to make this example compile, we need to restrict the generic type we're\n accepting:\n+\n ```\n use std::fmt;\n \n@@ -1146,11 +1148,10 @@ fn main() {\n     // struct WithoutDebug;\n     // some_func(WithoutDebug);\n }\n+```\n \n Rust only looks at the signature of the called function, as such it must\n already specify all requirements that will be used for every type parameter.\n-```\n-\n \"##,\n \n E0281: r##\"\n@@ -1381,6 +1382,7 @@ denotes this will cause this error.\n struct Foo<T> {\n     foo: &'static T\n }\n+```\n \n This will compile, because it has the constraint on the type parameter:\n "}, {"sha": "8852d17c98df0be27ad4cc393f7525f1a3cd3fad", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b1b752655d374819064bf01ba760305ad3a1f623/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1b752655d374819064bf01ba760305ad3a1f623/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=b1b752655d374819064bf01ba760305ad3a1f623", "patch": "@@ -516,15 +516,18 @@ fn foo(a: &mut i32) {\n             //        as immutable\n }\n ```\n+\n To fix this error, ensure that you don't have any other references to the\n variable before trying to access it mutably:\n+\n ```\n fn bar(x: &mut i32) {}\n fn foo(a: &mut i32) {\n     bar(a);\n     let ref y = a; // ok!\n }\n ```\n+\n For more information on the rust ownership system, take a look at\n https://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n \"##,"}]}