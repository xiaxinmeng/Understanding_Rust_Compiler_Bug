{"sha": "9797665b286db3f34cc475560a68380012fadde7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3OTc2NjViMjg2ZGIzZjM0Y2M0NzU1NjBhNjgzODAwMTJmYWRkZTc=", "commit": {"author": {"name": "Evan Simmons", "email": "esims89@gmail.com", "date": "2018-07-01T21:30:16Z"}, "committer": {"name": "Evan Simmons", "email": "esims89@gmail.com", "date": "2018-07-02T19:54:30Z"}, "message": "Make Stdio handle UnwindSafe", "tree": {"sha": "b733aaf8681cd132408392b037d604c63fd27586", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b733aaf8681cd132408392b037d604c63fd27586"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9797665b286db3f34cc475560a68380012fadde7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9797665b286db3f34cc475560a68380012fadde7", "html_url": "https://github.com/rust-lang/rust/commit/9797665b286db3f34cc475560a68380012fadde7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9797665b286db3f34cc475560a68380012fadde7/comments", "author": {"login": "estk", "id": 390090, "node_id": "MDQ6VXNlcjM5MDA5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/390090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estk", "html_url": "https://github.com/estk", "followers_url": "https://api.github.com/users/estk/followers", "following_url": "https://api.github.com/users/estk/following{/other_user}", "gists_url": "https://api.github.com/users/estk/gists{/gist_id}", "starred_url": "https://api.github.com/users/estk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estk/subscriptions", "organizations_url": "https://api.github.com/users/estk/orgs", "repos_url": "https://api.github.com/users/estk/repos", "events_url": "https://api.github.com/users/estk/events{/privacy}", "received_events_url": "https://api.github.com/users/estk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estk", "id": 390090, "node_id": "MDQ6VXNlcjM5MDA5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/390090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estk", "html_url": "https://github.com/estk", "followers_url": "https://api.github.com/users/estk/followers", "following_url": "https://api.github.com/users/estk/following{/other_user}", "gists_url": "https://api.github.com/users/estk/gists{/gist_id}", "starred_url": "https://api.github.com/users/estk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estk/subscriptions", "organizations_url": "https://api.github.com/users/estk/orgs", "repos_url": "https://api.github.com/users/estk/repos", "events_url": "https://api.github.com/users/estk/events{/privacy}", "received_events_url": "https://api.github.com/users/estk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2be769fd50403a07c45677f8f285491c8e90d74", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2be769fd50403a07c45677f8f285491c8e90d74", "html_url": "https://github.com/rust-lang/rust/commit/a2be769fd50403a07c45677f8f285491c8e90d74"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "fce85a200ba2e98b39784f7279ffa7b5e3ea5ce1", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9797665b286db3f34cc475560a68380012fadde7/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9797665b286db3f34cc475560a68380012fadde7/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=9797665b286db3f34cc475560a68380012fadde7", "patch": "@@ -712,9 +712,31 @@ pub fn _eprint(args: fmt::Arguments) {\n \n #[cfg(test)]\n mod tests {\n+    use panic::{UnwindSafe, RefUnwindSafe};\n     use thread;\n     use super::*;\n \n+    #[test]\n+    fn stdout_unwind_safe() {\n+        assert_unwind_safe::<Stdout>();\n+    }\n+    #[test]\n+    fn stdoutlock_unwind_safe() {\n+        assert_unwind_safe::<StdoutLock>();\n+        assert_unwind_safe::<StdoutLock<'static>>();\n+    }\n+    #[test]\n+    fn stderr_unwind_safe() {\n+        assert_unwind_safe::<Stderr>();\n+    }\n+    #[test]\n+    fn stderrlock_unwind_safe() {\n+        assert_unwind_safe::<StderrLock>();\n+        assert_unwind_safe::<StderrLock<'static>>();\n+    }\n+\n+    fn assert_unwind_safe<T: UnwindSafe + RefUnwindSafe>() {}\n+\n     #[test]\n     #[cfg_attr(target_os = \"emscripten\", ignore)]\n     fn panic_doesnt_poison() {"}, {"sha": "071a3a25c7acdab8860b7ad0c577687c35ab1023", "filename": "src/libstd/sys_common/remutex.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9797665b286db3f34cc475560a68380012fadde7/src%2Flibstd%2Fsys_common%2Fremutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9797665b286db3f34cc475560a68380012fadde7/src%2Flibstd%2Fsys_common%2Fremutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fremutex.rs?ref=9797665b286db3f34cc475560a68380012fadde7", "patch": "@@ -13,6 +13,7 @@ use marker;\n use ops::Deref;\n use sys_common::poison::{self, TryLockError, TryLockResult, LockResult};\n use sys::mutex as sys;\n+use panic::{UnwindSafe, RefUnwindSafe};\n \n /// A re-entrant mutual exclusion\n ///\n@@ -28,6 +29,9 @@ pub struct ReentrantMutex<T> {\n unsafe impl<T: Send> Send for ReentrantMutex<T> {}\n unsafe impl<T: Send> Sync for ReentrantMutex<T> {}\n \n+impl<T> UnwindSafe for ReentrantMutex<T> {}\n+impl<T> RefUnwindSafe for ReentrantMutex<T> {}\n+\n \n /// An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n /// dropped (falls out of scope), the lock will be unlocked."}]}