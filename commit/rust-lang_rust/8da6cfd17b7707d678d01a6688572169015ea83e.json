{"sha": "8da6cfd17b7707d678d01a6688572169015ea83e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYTZjZmQxN2I3NzA3ZDY3OGQwMWE2Njg4NTcyMTY5MDE1ZWE4M2U=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-06-11T00:11:06Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-24T21:02:05Z"}, "message": "fmt", "tree": {"sha": "4dbded318f1d7e5e20907334ca48aa99f80bc131", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dbded318f1d7e5e20907334ca48aa99f80bc131"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8da6cfd17b7707d678d01a6688572169015ea83e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8da6cfd17b7707d678d01a6688572169015ea83e", "html_url": "https://github.com/rust-lang/rust/commit/8da6cfd17b7707d678d01a6688572169015ea83e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8da6cfd17b7707d678d01a6688572169015ea83e/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de56279cd9047832216e1d1c06dc45375bf01b31", "url": "https://api.github.com/repos/rust-lang/rust/commits/de56279cd9047832216e1d1c06dc45375bf01b31", "html_url": "https://github.com/rust-lang/rust/commit/de56279cd9047832216e1d1c06dc45375bf01b31"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "2aee3b93e8251dd1a48908f8f9169df724e5fc57", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/8da6cfd17b7707d678d01a6688572169015ea83e/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8da6cfd17b7707d678d01a6688572169015ea83e/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=8da6cfd17b7707d678d01a6688572169015ea83e", "patch": "@@ -1069,29 +1069,30 @@ fn build_manual_memcpy_suggestion<'tcx>(\n         }\n     }\n \n-    let print_limit = |end: &Expr<'_>, end_str: &str, base: &Expr<'_>, sugg: MinifyingSugg<'static>| -> MinifyingSugg<'static> {\n-        if_chain! {\n-            if let ExprKind::MethodCall(method, _, len_args, _) = end.kind;\n-            if method.ident.name == sym!(len);\n-            if len_args.len() == 1;\n-            if let Some(arg) = len_args.get(0);\n-            if var_def_id(cx, arg) == var_def_id(cx, base);\n-            then {\n-                if sugg.as_str() == end_str {\n-                    MinifyingSugg::non_paren(\"\")\n+    let print_limit =\n+        |end: &Expr<'_>, end_str: &str, base: &Expr<'_>, sugg: MinifyingSugg<'static>| -> MinifyingSugg<'static> {\n+            if_chain! {\n+                if let ExprKind::MethodCall(method, _, len_args, _) = end.kind;\n+                if method.ident.name == sym!(len);\n+                if len_args.len() == 1;\n+                if let Some(arg) = len_args.get(0);\n+                if var_def_id(cx, arg) == var_def_id(cx, base);\n+                then {\n+                    if sugg.as_str() == end_str {\n+                        MinifyingSugg::non_paren(\"\")\n+                    } else {\n+                        sugg\n+                    }\n                 } else {\n-                    sugg\n-                }\n-            } else {\n-                match limits {\n-                    ast::RangeLimits::Closed => {\n-                        sugg + &MinifyingSugg::non_paren(\"1\")\n-                    },\n-                    ast::RangeLimits::HalfOpen => sugg,\n+                    match limits {\n+                        ast::RangeLimits::Closed => {\n+                            sugg + &MinifyingSugg::non_paren(\"1\")\n+                        },\n+                        ast::RangeLimits::HalfOpen => sugg,\n+                    }\n                 }\n             }\n-        }\n-    };\n+        };\n \n     let start_str = MinifyingSugg::hir(cx, start, \"\");\n     let end_str = MinifyingSugg::hir(cx, end, \"\");"}]}