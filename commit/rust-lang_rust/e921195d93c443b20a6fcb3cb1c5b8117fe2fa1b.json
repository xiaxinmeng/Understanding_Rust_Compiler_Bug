{"sha": "e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MjExOTVkOTNjNDQzYjIwYTZmY2IzY2IxYzViODExN2ZlMmZhMWI=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-05-04T17:15:27Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-05-04T17:15:27Z"}, "message": "Change favor_types to has_constructor", "tree": {"sha": "2023a2b1f5b2fc037a42c2cf850d6e1b41b65446", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2023a2b1f5b2fc037a42c2cf850d6e1b41b65446"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b", "html_url": "https://github.com/rust-lang/rust/commit/e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ae18f4f814501ccd96a277c320e919159c91fac", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ae18f4f814501ccd96a277c320e919159c91fac", "html_url": "https://github.com/rust-lang/rust/commit/5ae18f4f814501ccd96a277c320e919159c91fac"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "4671b72e9d801727a99f2c46287a6e7116c0a872", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b", "patch": "@@ -575,15 +575,15 @@ impl ExprCollector<'_> {\n             self.body.item_scope.define_def(def);\n             if let Some(name) = name {\n                 let vis = crate::visibility::Visibility::Public; // FIXME determine correctly\n-                let favor_types = match def {\n+                let has_constructor = match def {\n                     ModuleDefId::AdtId(AdtId::StructId(s)) => {\n-                        self.db.struct_data(s).variant_data.kind() == StructKind::Record\n+                        self.db.struct_data(s).variant_data.kind() != StructKind::Record\n                     }\n-                    _ => false,\n+                    _ => true,\n                 };\n                 self.body.item_scope.push_res(\n                     name.as_name(),\n-                    crate::per_ns::PerNs::from_def(def, vis, favor_types),\n+                    crate::per_ns::PerNs::from_def(def, vis, has_constructor),\n                 );\n             }\n         }"}, {"sha": "954f2542a03571d066ae962d39d38a75c89f44a2", "filename": "crates/ra_hir_def/src/item_scope.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs?ref=e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b", "patch": "@@ -151,15 +151,15 @@ impl ItemScope {\n }\n \n impl PerNs {\n-    pub(crate) fn from_def(def: ModuleDefId, v: Visibility, favor_types: bool) -> PerNs {\n+    pub(crate) fn from_def(def: ModuleDefId, v: Visibility, has_constructor: bool) -> PerNs {\n         match def {\n             ModuleDefId::ModuleId(_) => PerNs::types(def, v),\n             ModuleDefId::FunctionId(_) => PerNs::values(def, v),\n             ModuleDefId::AdtId(adt) => match adt {\n                 AdtId::UnionId(_) => PerNs::both(def, def, v),\n                 AdtId::EnumId(_) => PerNs::types(def, v),\n                 AdtId::StructId(_) => {\n-                    if favor_types {\n+                    if !has_constructor {\n                         PerNs::types(def, v)\n                     } else {\n                         PerNs::both(def, def, v)"}, {"sha": "db994122ae98bb6ce2d78dc28556990e08965d65", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=e921195d93c443b20a6fcb3cb1c5b8117fe2fa1b", "patch": "@@ -844,7 +844,7 @@ impl ModCollector<'_, '_> {\n         let name = def.name.clone();\n         let container = ContainerId::ModuleId(module);\n         let vis = &def.visibility;\n-        let mut favor_types = false;\n+        let mut has_constructor = false;\n \n         let def: ModuleDefId = match def.kind {\n             raw::DefKind::Function(ast_id) => FunctionLoc {\n@@ -854,7 +854,7 @@ impl ModCollector<'_, '_> {\n             .intern(self.def_collector.db)\n             .into(),\n             raw::DefKind::Struct(ast_id, mode) => {\n-                favor_types = mode == raw::StructDefKind::Record;\n+                has_constructor = mode != raw::StructDefKind::Record;\n                 StructLoc { container, ast_id: AstId::new(self.file_id, ast_id) }\n                     .intern(self.def_collector.db)\n                     .into()\n@@ -899,7 +899,7 @@ impl ModCollector<'_, '_> {\n             .unwrap_or(Visibility::Public);\n         self.def_collector.update(\n             self.module_id,\n-            &[(name, PerNs::from_def(def, vis, favor_types))],\n+            &[(name, PerNs::from_def(def, vis, has_constructor))],\n             vis,\n         )\n     }"}]}