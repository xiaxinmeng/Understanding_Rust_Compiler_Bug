{"sha": "f5a88b6de558d17ed088a93756facb901c7c0888", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YTg4YjZkZTU1OGQxN2VkMDg4YTkzNzU2ZmFjYjkwMWM3YzA4ODg=", "commit": {"author": {"name": "cgm616", "email": "cgm616@me.com", "date": "2020-10-25T13:18:06Z"}, "committer": {"name": "cgm616", "email": "cgm616@me.com", "date": "2020-10-25T13:18:38Z"}, "message": "Allow hex literals to pass w/ groups of 2", "tree": {"sha": "c6e8dfc0be3e8b3981e30ace31d4272b30ccdee0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6e8dfc0be3e8b3981e30ace31d4272b30ccdee0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5a88b6de558d17ed088a93756facb901c7c0888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5a88b6de558d17ed088a93756facb901c7c0888", "html_url": "https://github.com/rust-lang/rust/commit/f5a88b6de558d17ed088a93756facb901c7c0888", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5a88b6de558d17ed088a93756facb901c7c0888/comments", "author": {"login": "cgm616", "id": 2502394, "node_id": "MDQ6VXNlcjI1MDIzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2502394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgm616", "html_url": "https://github.com/cgm616", "followers_url": "https://api.github.com/users/cgm616/followers", "following_url": "https://api.github.com/users/cgm616/following{/other_user}", "gists_url": "https://api.github.com/users/cgm616/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgm616/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgm616/subscriptions", "organizations_url": "https://api.github.com/users/cgm616/orgs", "repos_url": "https://api.github.com/users/cgm616/repos", "events_url": "https://api.github.com/users/cgm616/events{/privacy}", "received_events_url": "https://api.github.com/users/cgm616/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cgm616", "id": 2502394, "node_id": "MDQ6VXNlcjI1MDIzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2502394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgm616", "html_url": "https://github.com/cgm616", "followers_url": "https://api.github.com/users/cgm616/followers", "following_url": "https://api.github.com/users/cgm616/following{/other_user}", "gists_url": "https://api.github.com/users/cgm616/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgm616/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgm616/subscriptions", "organizations_url": "https://api.github.com/users/cgm616/orgs", "repos_url": "https://api.github.com/users/cgm616/repos", "events_url": "https://api.github.com/users/cgm616/events{/privacy}", "received_events_url": "https://api.github.com/users/cgm616/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db8380c4a0e7f707112bbce19a6074a5fac2de59", "url": "https://api.github.com/repos/rust-lang/rust/commits/db8380c4a0e7f707112bbce19a6074a5fac2de59", "html_url": "https://github.com/rust-lang/rust/commit/db8380c4a0e7f707112bbce19a6074a5fac2de59"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "813f3b6f378949540dacac1197fb80c76c8fa782", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5a88b6de558d17ed088a93756facb901c7c0888/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5a88b6de558d17ed088a93756facb901c7c0888/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=f5a88b6de558d17ed088a93756facb901c7c0888", "patch": "@@ -368,7 +368,7 @@ impl LiteralDigitGrouping {\n \n         let first = groups.next().expect(\"At least one group\");\n \n-        if (radix == Radix::Binary || radix == Radix::Hexadecimal) && groups.any(|i| i % 4 != 0) {\n+        if (radix == Radix::Binary || radix == Radix::Hexadecimal) && groups.any(|i| i != 4 || i != 2) {\n             return Err(WarningType::UnusualByteGrouping);\n         }\n "}]}