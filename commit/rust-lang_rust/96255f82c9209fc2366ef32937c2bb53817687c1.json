{"sha": "96255f82c9209fc2366ef32937c2bb53817687c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MjU1ZjgyYzkyMDlmYzIzNjZlZjMyOTM3YzJiYjUzODE3Njg3YzE=", "commit": {"author": {"name": "Xavientois", "email": "joshua.rampersad@hotmail.com", "date": "2021-01-16T20:03:58Z"}, "committer": {"name": "Xavientois", "email": "joshua.rampersad@hotmail.com", "date": "2021-01-31T13:34:42Z"}, "message": "Implement SizeHint trait for BufReader, Emtpy, and Chain", "tree": {"sha": "77eac8d1c2e8a2aa1aa8283bc658a4e3b474f4f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77eac8d1c2e8a2aa1aa8283bc658a4e3b474f4f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96255f82c9209fc2366ef32937c2bb53817687c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96255f82c9209fc2366ef32937c2bb53817687c1", "html_url": "https://github.com/rust-lang/rust/commit/96255f82c9209fc2366ef32937c2bb53817687c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96255f82c9209fc2366ef32937c2bb53817687c1/comments", "author": {"login": "Xavientois", "id": 34867186, "node_id": "MDQ6VXNlcjM0ODY3MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/34867186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xavientois", "html_url": "https://github.com/Xavientois", "followers_url": "https://api.github.com/users/Xavientois/followers", "following_url": "https://api.github.com/users/Xavientois/following{/other_user}", "gists_url": "https://api.github.com/users/Xavientois/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xavientois/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xavientois/subscriptions", "organizations_url": "https://api.github.com/users/Xavientois/orgs", "repos_url": "https://api.github.com/users/Xavientois/repos", "events_url": "https://api.github.com/users/Xavientois/events{/privacy}", "received_events_url": "https://api.github.com/users/Xavientois/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xavientois", "id": 34867186, "node_id": "MDQ6VXNlcjM0ODY3MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/34867186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xavientois", "html_url": "https://github.com/Xavientois", "followers_url": "https://api.github.com/users/Xavientois/followers", "following_url": "https://api.github.com/users/Xavientois/following{/other_user}", "gists_url": "https://api.github.com/users/Xavientois/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xavientois/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xavientois/subscriptions", "organizations_url": "https://api.github.com/users/Xavientois/orgs", "repos_url": "https://api.github.com/users/Xavientois/repos", "events_url": "https://api.github.com/users/Xavientois/events{/privacy}", "received_events_url": "https://api.github.com/users/Xavientois/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8e0f8aaa3e8a21158b596814d8a53cfe604a294", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8e0f8aaa3e8a21158b596814d8a53cfe604a294", "html_url": "https://github.com/rust-lang/rust/commit/c8e0f8aaa3e8a21158b596814d8a53cfe604a294"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "e737a104014f4075af4b5bc9415d2b25f8d0f039", "filename": "library/std/src/io/buffered/bufreader.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/96255f82c9209fc2366ef32937c2bb53817687c1/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96255f82c9209fc2366ef32937c2bb53817687c1/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufreader.rs?ref=96255f82c9209fc2366ef32937c2bb53817687c1", "patch": "@@ -1,6 +1,6 @@\n use crate::cmp;\n use crate::fmt;\n-use crate::io::{self, BufRead, Initializer, IoSliceMut, Read, Seek, SeekFrom, DEFAULT_BUF_SIZE};\n+use crate::io::{self, BufRead, Initializer, IoSliceMut, Read, Seek, SeekFrom, SizeHint, DEFAULT_BUF_SIZE};\n \n /// The `BufReader<R>` struct adds buffering to any reader.\n ///\n@@ -435,3 +435,10 @@ impl<R: Seek> Seek for BufReader<R> {\n         })\n     }\n }\n+\n+impl<T> SizeHint for BufReader<T> {\n+    fn lower_bound(&self) -> usize {\n+        self.buffer().len()\n+    }\n+}\n+"}, {"sha": "08b258bb816ec4af5e86458a0112af738b102361", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/96255f82c9209fc2366ef32937c2bb53817687c1/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96255f82c9209fc2366ef32937c2bb53817687c1/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=96255f82c9209fc2366ef32937c2bb53817687c1", "patch": "@@ -2239,6 +2239,20 @@ impl<T: BufRead, U: BufRead> BufRead for Chain<T, U> {\n     }\n }\n \n+impl<T, U> SizeHint for Chain<T, U> {\n+    fn lower_bound(&self) -> usize {\n+        SizeHint::lower_bound(&self.first) + SizeHint::lower_bound(&self.second)\n+    }\n+\n+    fn upper_bound(&self) -> Option<usize > {\n+        match (SizeHint::upper_bound(&self.first), SizeHint::upper_bound(&self.second)) {\n+            (Some(first), Some(second)) => Some(first + second),\n+            _ => None,\n+        }\n+    }\n+}\n+\n+\n /// Reader adaptor which limits the bytes read from an underlying reader.\n ///\n /// This struct is generally created by calling [`take`] on a reader.\n@@ -2491,12 +2505,6 @@ impl<T> SizeHint for T {\n     }\n }\n \n-impl<T> SizeHint for BufReader<T> {\n-    fn lower_bound(&self) -> usize {\n-        self.buffer().len()\n-    }\n-}\n-\n /// An iterator over the contents of an instance of `BufRead` split on a\n /// particular byte.\n ///"}, {"sha": "7de37c67abebc87eeab76fcba1d583d7d1566d0e", "filename": "library/std/src/io/util.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/96255f82c9209fc2366ef32937c2bb53817687c1/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96255f82c9209fc2366ef32937c2bb53817687c1/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Futil.rs?ref=96255f82c9209fc2366ef32937c2bb53817687c1", "patch": "@@ -4,7 +4,7 @@\n mod tests;\n \n use crate::fmt;\n-use crate::io::{self, BufRead, Initializer, IoSlice, IoSliceMut, Read, Seek, SeekFrom, Write};\n+use crate::io::{self, BufRead, Initializer, IoSlice, IoSliceMut, Read, Seek, SeekFrom, SizeHint, Write};\n \n /// A reader which is always at EOF.\n ///\n@@ -80,6 +80,12 @@ impl fmt::Debug for Empty {\n     }\n }\n \n+impl SizeHint for Empty {\n+    fn upper_bound(&self) -> Option<usize> {\n+       Some(0)\n+    }\n+}\n+\n /// A reader which yields one byte over and over and over and over and over and...\n ///\n /// This struct is generally created by calling [`repeat()`]. Please"}]}