{"sha": "5571ca9b21f9b6aa9f8877700729564f829a6bef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NzFjYTliMjFmOWI2YWE5Zjg4Nzc3MDA3Mjk1NjRmODI5YTZiZWY=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-07T20:34:39Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-10T01:40:59Z"}, "message": "Break out const_addr_of.", "tree": {"sha": "48a676819c5dc9c1573db4e70364be1258018ed9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48a676819c5dc9c1573db4e70364be1258018ed9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5571ca9b21f9b6aa9f8877700729564f829a6bef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5571ca9b21f9b6aa9f8877700729564f829a6bef", "html_url": "https://github.com/rust-lang/rust/commit/5571ca9b21f9b6aa9f8877700729564f829a6bef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5571ca9b21f9b6aa9f8877700729564f829a6bef/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a347e9d635dd7546f36a5027fcae539f3150573d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a347e9d635dd7546f36a5027fcae539f3150573d", "html_url": "https://github.com/rust-lang/rust/commit/a347e9d635dd7546f36a5027fcae539f3150573d"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "ad6b412d3d80d14e17ae00aaa239f12d8716a54f", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5571ca9b21f9b6aa9f8877700729564f829a6bef/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5571ca9b21f9b6aa9f8877700729564f829a6bef/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=5571ca9b21f9b6aa9f8877700729564f829a6bef", "patch": "@@ -94,6 +94,17 @@ pub fn const_vec(cx: @CrateContext, e: @ast::expr, es: &[@ast::expr])\n     }\n }\n \n+fn const_addr_of(cx: @CrateContext, cv: ValueRef) -> ValueRef {\n+    unsafe {\n+        let gv = do str::as_c_str(\"const\") |name| {\n+            llvm::LLVMAddGlobal(cx.llmod, val_ty(cv), name)\n+        };\n+        llvm::LLVMSetInitializer(gv, cv);\n+        llvm::LLVMSetGlobalConstant(gv, True);\n+        gv\n+    }\n+}\n+\n pub fn const_deref(cx: @CrateContext, v: ValueRef) -> ValueRef {\n     unsafe {\n         let v = match cx.const_globals.find(&(v as int)) {\n@@ -355,13 +366,7 @@ fn const_expr_unchecked(cx: @CrateContext, e: @ast::expr) -> ValueRef {\n             }\n           }\n           ast::expr_addr_of(ast::m_imm, sub) => {\n-            let cv = const_expr(cx, sub);\n-            let gv = do str::as_c_str(\"const\") |name| {\n-                llvm::LLVMAddGlobal(cx.llmod, val_ty(cv), name)\n-            };\n-            llvm::LLVMSetInitializer(gv, cv);\n-            llvm::LLVMSetGlobalConstant(gv, True);\n-            gv\n+              const_addr_of(cx, const_expr(cx, sub))\n           }\n           ast::expr_tup(es) => {\n               let ety = ty::expr_ty(cx.tcx, e);"}]}