{"sha": "e8e53b56dff3cd1f9e6d65ee30d5e0bfc55d9607", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4ZTUzYjU2ZGZmM2NkMWY5ZTZkNjVlZTMwZDVlMGJmYzU1ZDk2MDc=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-01-02T01:10:55Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-01-02T01:10:55Z"}, "message": "Ensure that we process projections during MIR inlining\n\nFixes #67710\n\nPreviously, we were not calling `super_place`, which resulted in us\nfailing to update any local references that occur in\nProjectionElem::Index. This caused the post-inlining MIR to contain a\nreference to a local ID from the inlined callee, leading to an ICE\ndue to a type mismatch.", "tree": {"sha": "01164280b7eeceb1a28e10d42a7e371e5dc01010", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01164280b7eeceb1a28e10d42a7e371e5dc01010"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8e53b56dff3cd1f9e6d65ee30d5e0bfc55d9607", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl4NQ7AACgkQtAh+UQ6Y\nsWTLsxAAiNfOXt2g+9ntEndSg/fkjR83leE2vsgqt3Ekclp3j1OFY4m48R8XPrxV\n4Oc/gIBQ1aGC0HawlnzlVZVsb1PDRVm4fLfVtj99PlW38OjY6lScP04rnobyWiX7\neQapwJ+wDVrzCA6M3xo3wNSFGe+JZbClqTUvo5Ur0ZX0M4Nmr48oA0IZeSFdxCd3\n8lrsBp06kKo9dqEorDXXAZaxLWqaIojq3vI8um5RTereRSckqaPxSWknln55arHM\nsI9/GymVtJUJGJDLnSFGtbd+hWrGnmCxdLl5MbVdIzNhHr5SDwpDBpVx+D2PJSzr\nHYlYppn5F/rhd1ClwQ+zSH1nh+IUbSvTgPI3TNUWdF1TdhOy+SEC4G6YNh4RpwPM\nV6T+slFuycObNxYHmBzjhdeEqPP2abHrgxB+dfplRfGzSEEcArJinwtPxNrMHtPc\nOlvz98Tyt2SlcYkTpo+nwP5wIyAQe4KneP1n7Y3I07R24XZUKnGjTfkkzjp4X81b\nHKZbcR/K243uqKFJPTUgjCFNVBtkKcOVJtwcN76rfGAq1oul1+a++xXiWEG8oCN6\nLiq57jGn6WawnIH8qEZB2RGOQAhmCiVoxjO1jlgrilz1jtQpQumMtaBAwHgW4F2V\n8adYLzLCpT7I3CG38HewaMnHrT+jcQ1XMf4WH805Z7hhrXKtc/0=\n=fnBy\n-----END PGP SIGNATURE-----", "payload": "tree 01164280b7eeceb1a28e10d42a7e371e5dc01010\nparent 0ec370670220b712b042ee09aab067ec7e5878d5\nauthor Aaron Hill <aa1ronham@gmail.com> 1577927455 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1577927455 -0500\n\nEnsure that we process projections during MIR inlining\n\nFixes #67710\n\nPreviously, we were not calling `super_place`, which resulted in us\nfailing to update any local references that occur in\nProjectionElem::Index. This caused the post-inlining MIR to contain a\nreference to a local ID from the inlined callee, leading to an ICE\ndue to a type mismatch.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8e53b56dff3cd1f9e6d65ee30d5e0bfc55d9607", "html_url": "https://github.com/rust-lang/rust/commit/e8e53b56dff3cd1f9e6d65ee30d5e0bfc55d9607", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8e53b56dff3cd1f9e6d65ee30d5e0bfc55d9607/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ec370670220b712b042ee09aab067ec7e5878d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ec370670220b712b042ee09aab067ec7e5878d5", "html_url": "https://github.com/rust-lang/rust/commit/0ec370670220b712b042ee09aab067ec7e5878d5"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "3c9f8542e51d02a727d4aea997ce67b8b8b9b5e3", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e8e53b56dff3cd1f9e6d65ee30d5e0bfc55d9607/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8e53b56dff3cd1f9e6d65ee30d5e0bfc55d9607/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=e8e53b56dff3cd1f9e6d65ee30d5e0bfc55d9607", "patch": "@@ -671,12 +671,7 @@ impl<'a, 'tcx> MutVisitor<'tcx> for Integrator<'a, 'tcx> {\n         *local = self.make_integrate_local(local);\n     }\n \n-    fn visit_place(\n-        &mut self,\n-        place: &mut Place<'tcx>,\n-        _context: PlaceContext,\n-        _location: Location,\n-    ) {\n+    fn visit_place(&mut self, place: &mut Place<'tcx>, context: PlaceContext, location: Location) {\n         match &mut place.base {\n             PlaceBase::Static(_) => {}\n             PlaceBase::Local(l) => {\n@@ -689,10 +684,11 @@ impl<'a, 'tcx> MutVisitor<'tcx> for Integrator<'a, 'tcx> {\n \n                     place.projection = self.tcx.intern_place_elems(&*projs);\n                 }\n-\n-                *l = self.make_integrate_local(l);\n             }\n         }\n+        // Handles integrating any locals that occur in the base\n+        // or projections\n+        self.super_place(place, context, location)\n     }\n \n     fn process_projection_elem(&mut self, elem: &PlaceElem<'tcx>) -> Option<PlaceElem<'tcx>> {"}, {"sha": "37d8f2eac9be1d718a51e956f3e904102fc72133", "filename": "src/test/ui/mir/issue-67710-inline-projection.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e8e53b56dff3cd1f9e6d65ee30d5e0bfc55d9607/src%2Ftest%2Fui%2Fmir%2Fissue-67710-inline-projection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8e53b56dff3cd1f9e6d65ee30d5e0bfc55d9607/src%2Ftest%2Fui%2Fmir%2Fissue-67710-inline-projection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-67710-inline-projection.rs?ref=e8e53b56dff3cd1f9e6d65ee30d5e0bfc55d9607", "patch": "@@ -0,0 +1,17 @@\n+// compile-flags: -Z mir-opt-level=2\n+// build-pass\n+\n+// This used to ICE due to the inling pass not examining projections\n+// for references to locals\n+\n+pub fn parse(version: ()) {\n+    p(&b'.', b\"0\");\n+}\n+#[inline(always)]\n+fn p(byte: &u8, s: &[u8]) {\n+    !(s[0] == *byte);\n+}\n+\n+fn main() {\n+    parse(());\n+}"}]}