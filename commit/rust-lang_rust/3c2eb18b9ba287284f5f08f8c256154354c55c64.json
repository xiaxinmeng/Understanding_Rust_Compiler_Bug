{"sha": "3c2eb18b9ba287284f5f08f8c256154354c55c64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMmViMThiOWJhMjg3Mjg0ZjVmMDhmOGMyNTYxNTQzNTRjNTVjNjQ=", "commit": {"author": {"name": "Denis Vasilik", "email": "contact@denisvasilik.com", "date": "2020-08-11T20:16:31Z"}, "committer": {"name": "Denis Vasilik", "email": "contact@denisvasilik.com", "date": "2020-08-11T20:16:31Z"}, "message": "Use intra-doc links", "tree": {"sha": "2e92315c11336fb2bf3c3c52d01518790666eacb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e92315c11336fb2bf3c3c52d01518790666eacb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c2eb18b9ba287284f5f08f8c256154354c55c64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c2eb18b9ba287284f5f08f8c256154354c55c64", "html_url": "https://github.com/rust-lang/rust/commit/3c2eb18b9ba287284f5f08f8c256154354c55c64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c2eb18b9ba287284f5f08f8c256154354c55c64/comments", "author": {"login": "denisvasilik", "id": 18697981, "node_id": "MDQ6VXNlcjE4Njk3OTgx", "avatar_url": "https://avatars.githubusercontent.com/u/18697981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisvasilik", "html_url": "https://github.com/denisvasilik", "followers_url": "https://api.github.com/users/denisvasilik/followers", "following_url": "https://api.github.com/users/denisvasilik/following{/other_user}", "gists_url": "https://api.github.com/users/denisvasilik/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisvasilik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisvasilik/subscriptions", "organizations_url": "https://api.github.com/users/denisvasilik/orgs", "repos_url": "https://api.github.com/users/denisvasilik/repos", "events_url": "https://api.github.com/users/denisvasilik/events{/privacy}", "received_events_url": "https://api.github.com/users/denisvasilik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "denisvasilik", "id": 18697981, "node_id": "MDQ6VXNlcjE4Njk3OTgx", "avatar_url": "https://avatars.githubusercontent.com/u/18697981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisvasilik", "html_url": "https://github.com/denisvasilik", "followers_url": "https://api.github.com/users/denisvasilik/followers", "following_url": "https://api.github.com/users/denisvasilik/following{/other_user}", "gists_url": "https://api.github.com/users/denisvasilik/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisvasilik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisvasilik/subscriptions", "organizations_url": "https://api.github.com/users/denisvasilik/orgs", "repos_url": "https://api.github.com/users/denisvasilik/repos", "events_url": "https://api.github.com/users/denisvasilik/events{/privacy}", "received_events_url": "https://api.github.com/users/denisvasilik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08324fe6f7ac24be4c8bfcab42b12ee447635c80", "url": "https://api.github.com/repos/rust-lang/rust/commits/08324fe6f7ac24be4c8bfcab42b12ee447635c80", "html_url": "https://github.com/rust-lang/rust/commit/08324fe6f7ac24be4c8bfcab42b12ee447635c80"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "9ee50a90510137f3bdf7a48b70ae4ba83f3cf837", "filename": "library/core/src/hint.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3c2eb18b9ba287284f5f08f8c256154354c55c64/library%2Fcore%2Fsrc%2Fhint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2eb18b9ba287284f5f08f8c256154354c55c64/library%2Fcore%2Fsrc%2Fhint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhint.rs?ref=3c2eb18b9ba287284f5f08f8c256154354c55c64", "patch": "@@ -24,7 +24,7 @@ use crate::intrinsics;\n /// Otherwise, consider using the [`unreachable!`] macro, which does not allow\n /// optimizations but will panic when executed.\n ///\n-/// [`unreachable!`]: ../macro.unreachable.html\n+/// [`unreachable!`]: unreachable\n ///\n /// # Example\n ///\n@@ -61,7 +61,7 @@ pub const unsafe fn unreachable_unchecked() -> ! {\n /// **Note**: On platforms that do not support receiving spin-loop hints this function does not\n /// do anything at all.\n ///\n-/// [`core::sync::atomic::spin_loop_hint`]: ../sync/atomic/fn.spin_loop_hint.html\n+/// [`core::sync::atomic::spin_loop_hint`]: crate::sync::atomic::spin_loop_hint\n #[inline]\n #[unstable(feature = \"renamed_spin_loop\", issue = \"55002\")]\n pub fn spin_loop() {\n@@ -99,7 +99,7 @@ pub fn spin_loop() {\n /// An identity function that *__hints__* to the compiler to be maximally pessimistic about what\n /// `black_box` could do.\n ///\n-/// [`std::convert::identity`]: https://doc.rust-lang.org/core/convert/fn.identity.html\n+/// [`std::convert::identity`]: crate::convert::identity\n ///\n /// Unlike [`std::convert::identity`], a Rust compiler is encouraged to assume that `black_box` can\n /// use `x` in any possible valid way that Rust code is allowed to without introducing undefined"}]}