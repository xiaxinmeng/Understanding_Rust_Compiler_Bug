{"sha": "20b5ca3d2ffaf7b26a0f13c5490d06a889455f07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYjVjYTNkMmZmYWY3YjI2YTBmMTNjNTQ5MGQwNmE4ODk0NTVmMDc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-25T00:07:42Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-25T00:08:05Z"}, "message": "syntax: Merge parse_for_expr, parse_do_expr", "tree": {"sha": "cddaccef04f01dc0d331bdb073646dc7aec553ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cddaccef04f01dc0d331bdb073646dc7aec553ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20b5ca3d2ffaf7b26a0f13c5490d06a889455f07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20b5ca3d2ffaf7b26a0f13c5490d06a889455f07", "html_url": "https://github.com/rust-lang/rust/commit/20b5ca3d2ffaf7b26a0f13c5490d06a889455f07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20b5ca3d2ffaf7b26a0f13c5490d06a889455f07/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8235ff85333e0d6b691603a4eec1bbc113f4df0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8235ff85333e0d6b691603a4eec1bbc113f4df0", "html_url": "https://github.com/rust-lang/rust/commit/a8235ff85333e0d6b691603a4eec1bbc113f4df0"}], "stats": {"total": 28, "additions": 6, "deletions": 22}, "files": [{"sha": "ddd44b1abe66609542faff7d1f3e46fc674cdfcc", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 22, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/20b5ca3d2ffaf7b26a0f13c5490d06a889455f07/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20b5ca3d2ffaf7b26a0f13c5490d06a889455f07/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=20b5ca3d2ffaf7b26a0f13c5490d06a889455f07", "patch": "@@ -771,9 +771,9 @@ class parser {\n         } else if self.eat_keyword(\"if\") {\n             ret pexpr(self.parse_if_expr());\n         } else if self.eat_keyword(\"for\") {\n-            ret pexpr(self.parse_for_expr());\n+            ret pexpr(self.parse_sugary_call_expr(\"for\", expr_loop_body));\n         } else if self.eat_keyword(\"do\") {\n-            ret pexpr(self.parse_do_expr());\n+            ret pexpr(self.parse_sugary_call_expr(\"do\", expr_do_body));\n         } else if self.eat_keyword(\"while\") {\n             ret pexpr(self.parse_while_expr());\n         } else if self.eat_keyword(\"loop\") {\n@@ -1283,36 +1283,20 @@ class parser {\n         }\n     }\n \n-    fn parse_for_expr() -> @expr {\n+    fn parse_sugary_call_expr(keyword: str, ctor: fn(+@expr) -> expr_) -> @expr {\n         let lo = self.last_span;\n         let call = self.parse_expr_res(RESTRICT_STMT_EXPR);\n         alt call.node {\n           expr_call(f, args, true) {\n             let b_arg = vec::last(args);\n             let last = self.mk_expr(b_arg.span.lo, b_arg.span.hi,\n-                                    expr_loop_body(b_arg));\n+                                    ctor(b_arg));\n             @{node: expr_call(f, vec::init(args) + [last], true)\n               with *call}\n           }\n           _ {\n-            self.span_fatal(lo, \"`for` must be followed by a block call\");\n-          }\n-        }\n-    }\n-\n-    fn parse_do_expr() -> @expr {\n-        let lo = self.last_span;\n-        let call = self.parse_expr_res(RESTRICT_STMT_EXPR);\n-        alt call.node {\n-          expr_call(f, args, true) {\n-            let b_arg = vec::last(args);\n-            let last = self.mk_expr(b_arg.span.lo, b_arg.span.hi,\n-                                    expr_do_body(b_arg));\n-            @{node: expr_call(f, vec::init(args) + [last], true)\n-              with *call}\n-          }\n-          _ {\n-            self.span_fatal(lo, \"`do` must be followed by a block call\");\n+            self.span_fatal(\n+                lo, #fmt(\"`%s` must be followed by a block call\", keyword));\n           }\n         }\n     }"}]}