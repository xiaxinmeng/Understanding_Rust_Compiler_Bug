{"sha": "4025e95113a0fd8ba3ab003796381bc992c27929", "node_id": "C_kwDOAAsO6NoAKDQwMjVlOTUxMTNhMGZkOGJhM2FiMDAzNzk2MzgxYmM5OTJjMjc5Mjk", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-10-05T03:45:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-05T03:45:12Z"}, "message": "Rollup merge of #102574 - aDotInTheVoid:const_collections_with_hasher, r=oli-obk,fee1-dead\n\nMake Hash{Set,Map}::with_hasher unstably const\n\nMakes  [`HashMap::with_hasher`](https://doc.rust-lang.org/stable/std/collections/hash_map/struct.HashMap.html#method.with_hasher) and [`HashSet::with_hasher`](https://doc.rust-lang.org/stable/std/collections/hash_set/struct.HashSet.html#method.with_hasher) `const`.\n\nThis allows\n\n```rust\nstatic GlobalState: Mutex<HashMap<i32, i32, SomeHasher>> = Mutex::new(HashMap::with_hasher(SomeHasher::new()))\n```\n\nTracking issue: #102575", "tree": {"sha": "f125233430b66d929ac490f8a091b49391ee63ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f125233430b66d929ac490f8a091b49391ee63ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4025e95113a0fd8ba3ab003796381bc992c27929", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjPP3ICRBK7hj4Ov3rIwAAFiwIAF7qM/dsSAt/wfXgUuF6Dffn\nWdc2wIudLDBswoU6LtgSoVXUgzRzsb555pRWjtz2zy8yP4X9NrTUvBupYiA2Opuw\nLcqGC1UvsSWUkfwC4aAChsiJr74snonkOY6VIJFDXXh04Aw+97+NwM2BSdl8XrE6\n24VPB1Yrx2fk+oDbdrGK0lrSmUW4KP3imbKZETu3sdKwg1uJq24+qaySVwM6EyNc\nhsLukWOzy+uP1JsVimCTufmFgVVPtMDGHM4eCicMVsBmViSnAoil2dBWdxxByj7X\n/LK5TTKiYdyqbC0iu7gzLR3T8prpQIfFWBYqizJL76f0MF4BvEmTzAjrO1iw/VY=\n=3W+I\n-----END PGP SIGNATURE-----\n", "payload": "tree f125233430b66d929ac490f8a091b49391ee63ff\nparent d4846f9d03659704af1f6b56bb4278bf843a4627\nparent 346a49fe48fd22bd9588d929bc3115016e654801\nauthor Michael Howell <michael@notriddle.com> 1664941512 -0700\ncommitter GitHub <noreply@github.com> 1664941512 -0700\n\nRollup merge of #102574 - aDotInTheVoid:const_collections_with_hasher, r=oli-obk,fee1-dead\n\nMake Hash{Set,Map}::with_hasher unstably const\n\nMakes  [`HashMap::with_hasher`](https://doc.rust-lang.org/stable/std/collections/hash_map/struct.HashMap.html#method.with_hasher) and [`HashSet::with_hasher`](https://doc.rust-lang.org/stable/std/collections/hash_set/struct.HashSet.html#method.with_hasher) `const`.\n\nThis allows\n\n```rust\nstatic GlobalState: Mutex<HashMap<i32, i32, SomeHasher>> = Mutex::new(HashMap::with_hasher(SomeHasher::new()))\n```\n\nTracking issue: #102575\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4025e95113a0fd8ba3ab003796381bc992c27929", "html_url": "https://github.com/rust-lang/rust/commit/4025e95113a0fd8ba3ab003796381bc992c27929", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4025e95113a0fd8ba3ab003796381bc992c27929/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4846f9d03659704af1f6b56bb4278bf843a4627", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4846f9d03659704af1f6b56bb4278bf843a4627", "html_url": "https://github.com/rust-lang/rust/commit/d4846f9d03659704af1f6b56bb4278bf843a4627"}, {"sha": "346a49fe48fd22bd9588d929bc3115016e654801", "url": "https://api.github.com/repos/rust-lang/rust/commits/346a49fe48fd22bd9588d929bc3115016e654801", "html_url": "https://github.com/rust-lang/rust/commit/346a49fe48fd22bd9588d929bc3115016e654801"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "34983b976e3e6d48ac26a3b15030b2b84660e41f", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4025e95113a0fd8ba3ab003796381bc992c27929/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4025e95113a0fd8ba3ab003796381bc992c27929/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=4025e95113a0fd8ba3ab003796381bc992c27929", "patch": "@@ -280,7 +280,8 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"hashmap_build_hasher\", since = \"1.7.0\")]\n-    pub fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {\n+    #[rustc_const_unstable(feature = \"const_collections_with_hasher\", issue = \"102575\")]\n+    pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {\n         HashMap { base: base::HashMap::with_hasher(hash_builder) }\n     }\n "}, {"sha": "65634f2063f36da25633548a6be59ce94a7dda21", "filename": "library/std/src/collections/hash/map/tests.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4025e95113a0fd8ba3ab003796381bc992c27929/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4025e95113a0fd8ba3ab003796381bc992c27929/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap%2Ftests.rs?ref=4025e95113a0fd8ba3ab003796381bc992c27929", "patch": "@@ -1115,3 +1115,9 @@ fn from_array() {\n     // that's a problem!\n     let _must_not_require_type_annotation = HashMap::from([(1, 2)]);\n }\n+\n+#[test]\n+fn const_with_hasher() {\n+    const X: HashMap<(), (), ()> = HashMap::with_hasher(());\n+    assert_eq!(X.len(), 0);\n+}"}, {"sha": "c36eeae3388db4a52837e3042e883e5ed3ece6be", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4025e95113a0fd8ba3ab003796381bc992c27929/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4025e95113a0fd8ba3ab003796381bc992c27929/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=4025e95113a0fd8ba3ab003796381bc992c27929", "patch": "@@ -376,7 +376,8 @@ impl<T, S> HashSet<T, S> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"hashmap_build_hasher\", since = \"1.7.0\")]\n-    pub fn with_hasher(hasher: S) -> HashSet<T, S> {\n+    #[rustc_const_unstable(feature = \"const_collections_with_hasher\", issue = \"102575\")]\n+    pub const fn with_hasher(hasher: S) -> HashSet<T, S> {\n         HashSet { base: base::HashSet::with_hasher(hasher) }\n     }\n "}, {"sha": "941a0450cc770f9fe4cc96268ee539f560532d1f", "filename": "library/std/src/collections/hash/set/tests.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4025e95113a0fd8ba3ab003796381bc992c27929/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4025e95113a0fd8ba3ab003796381bc992c27929/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset%2Ftests.rs?ref=4025e95113a0fd8ba3ab003796381bc992c27929", "patch": "@@ -496,3 +496,9 @@ fn from_array() {\n     // that's a problem!\n     let _must_not_require_type_annotation = HashSet::from([1, 2]);\n }\n+\n+#[test]\n+fn const_with_hasher() {\n+    const X: HashSet<(), ()> = HashSet::with_hasher(());\n+    assert_eq!(X.len(), 0);\n+}"}, {"sha": "a497acda4f60ccdc9fb191d80e1a0f0edc64e16d", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4025e95113a0fd8ba3ab003796381bc992c27929/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4025e95113a0fd8ba3ab003796381bc992c27929/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=4025e95113a0fd8ba3ab003796381bc992c27929", "patch": "@@ -351,6 +351,7 @@\n // Only used in tests/benchmarks:\n //\n // Only for const-ness:\n+#![feature(const_collections_with_hasher)]\n #![feature(const_io_structs)]\n #![feature(const_ip)]\n #![feature(const_ipv4)]"}]}