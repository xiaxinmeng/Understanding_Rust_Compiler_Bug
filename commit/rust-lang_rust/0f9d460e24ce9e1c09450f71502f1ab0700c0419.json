{"sha": "0f9d460e24ce9e1c09450f71502f1ab0700c0419", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmOWQ0NjBlMjRjZTllMWMwOTQ1MGY3MTUwMmYxYWIwNzAwYzA0MTk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-25T07:09:20Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-25T07:16:04Z"}, "message": "Placate win32 build; no idea how it can be working currently on tinderbox.", "tree": {"sha": "5c924660fbcebe87c0ed052f41d4ffa806ae2638", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c924660fbcebe87c0ed052f41d4ffa806ae2638"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f9d460e24ce9e1c09450f71502f1ab0700c0419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f9d460e24ce9e1c09450f71502f1ab0700c0419", "html_url": "https://github.com/rust-lang/rust/commit/0f9d460e24ce9e1c09450f71502f1ab0700c0419", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f9d460e24ce9e1c09450f71502f1ab0700c0419/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcc104ce79f153cd853920ff924e13f84793b61c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcc104ce79f153cd853920ff924e13f84793b61c", "html_url": "https://github.com/rust-lang/rust/commit/bcc104ce79f153cd853920ff924e13f84793b61c"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "ca404b1e24a2630bc5adebf39fd5c9a461a8edb6", "filename": "Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f9d460e24ce9e1c09450f71502f1ab0700c0419/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/0f9d460e24ce9e1c09450f71502f1ab0700c0419/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=0f9d460e24ce9e1c09450f71502f1ab0700c0419", "patch": "@@ -1081,22 +1081,22 @@ CRATE_DEPFILES := $(subst $(S)src/,,$(ALL_TEST_CRATES:%.rc=%.d)) \\\n boot/$(CFG_STDLIB).d: $(STDLIB_CRATE) $(STDLIB_INPUTS) \\\n                       $(MKFILES) boot/rustboot$(X)\n \t@$(call E, dep: $@)\n-\t$(BOOT) -o $(patsubst %.d,%,$@) -shared -rdeps $< >$@.tmp\n+\t$(BOOT) -o $(patsubst %.d,%$(X),$@) -shared -rdeps $< >$@.tmp\n \t$(Q)$(CFG_PATH_MUNGE) $@.tmp\n \t$(Q)rm -f $@.tmp.bak\n \t$(Q)mv $@.tmp $@\n \n stage0/rustc$(X).d: $(COMPILER_CRATE) $(COMPILER_INPUTS) \\\n                     $(STDLIB_CRATE) $(MKFILES) boot/rustboot$(X)\n \t@$(call E, dep: $@)\n-\t$(BOOT) -o $(patsubst %.d,%,$@) -shared -rdeps $< >$@.tmp\n+\t$(BOOT) -o $(patsubst %.d,%$(X),$@) -shared -rdeps $< >$@.tmp\n \t$(Q)$(CFG_PATH_MUNGE) $@.tmp\n \t$(Q)rm -f $@.tmp.bak\n \t$(Q)mv $@.tmp $@\n \n %.d: %.rc $(MKFILES) boot/rustboot$(X)\n \t@$(call E, dep: $@)\n-\t$(BOOT)  -o $(patsubst %.d,%,$@) -rdeps $< >$@.tmp\n+\t$(BOOT)  -o $(patsubst %.d,%$(X),$@) -rdeps $< >$@.tmp\n \t$(Q)$(CFG_PATH_MUNGE) $@.tmp\n \t$(Q)rm -f $@.tmp.bak\n \t$(Q)mv $@.tmp $@"}, {"sha": "3f2ae5115510cbe162c9cb2c2e1101d00b33190d", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0f9d460e24ce9e1c09450f71502f1ab0700c0419/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0f9d460e24ce9e1c09450f71502f1ab0700c0419/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=0f9d460e24ce9e1c09450f71502f1ab0700c0419", "patch": "@@ -417,9 +417,9 @@ rust_str* c_str_to_rust(rust_task *task, char const *str) {\n     return vec_alloc_with_data(task, len, len, 1, (void*)str);\n }\n \n-#if defined(__WIN32__)\n extern \"C\" CDECL rust_vec*\n rust_list_files(rust_task *task, rust_str *path) {\n+#if defined(__WIN32__)\n     array_list<rust_str*> strings;\n     WIN32_FIND_DATA FindFileData;\n     HANDLE hFind = FindFirstFile((char*)path->data, &FindFileData);\n@@ -431,6 +431,15 @@ rust_list_files(rust_task *task, rust_str *path) {\n     }\n     return vec_alloc_with_data(task, strings.size(), strings.size(),\n                                sizeof(rust_str*), strings.data());\n+#else\n+    return NULL;\n+#endif\n+}\n+\n+#if defined(__WIN32__)\n+extern \"C\" CDECL rust_str *\n+rust_dirent_filename(rust_task *task, void* ent) {\n+    return NULL;\n }\n #else\n extern \"C\" CDECL rust_str *"}, {"sha": "7b73586e9c855fb38dd19aa3c86a2e7cc57cb3b5", "filename": "src/rt/rust_run_program.cpp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f9d460e24ce9e1c09450f71502f1ab0700c0419/src%2Frt%2Frust_run_program.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0f9d460e24ce9e1c09450f71502f1ab0700c0419/src%2Frt%2Frust_run_program.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_run_program.cpp?ref=0f9d460e24ce9e1c09450f71502f1ab0700c0419", "patch": "@@ -76,6 +76,12 @@ rust_run_program(rust_task* task, char* argv[],\n     exit(1);\n }\n \n+extern \"C\" CDECL int\n+rust_process_wait(void* task, int proc) {\n+    // FIXME: stub; exists to placate linker.\n+    return 0;\n+}\n+\n #else\n #error \"Platform not supported.\"\n #endif"}, {"sha": "be51770a9d2b8a3541bd677ab13e5c4867e964b5", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f9d460e24ce9e1c09450f71502f1ab0700c0419/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/0f9d460e24ce9e1c09450f71502f1ab0700c0419/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=0f9d460e24ce9e1c09450f71502f1ab0700c0419", "patch": "@@ -17,6 +17,8 @@ rust_dirent_filename\n rust_file_is_dir\n rust_get_stdin\n rust_get_stdout\n+rust_list_files\n+rust_process_wait\n rust_run_program\n rust_start\n size_of"}]}