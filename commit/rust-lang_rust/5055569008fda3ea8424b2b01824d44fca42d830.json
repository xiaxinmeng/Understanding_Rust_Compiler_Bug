{"sha": "5055569008fda3ea8424b2b01824d44fca42d830", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNTU1NjkwMDhmZGEzZWE4NDI0YjJiMDE4MjRkNDRmY2E0MmQ4MzA=", "commit": {"author": {"name": "Aman Arora", "email": "arora-aman@users.noreply.github.com", "date": "2021-07-09T17:45:26Z"}, "committer": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2021-07-09T19:12:24Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: Niko Matsakis <niko@alum.mit.edu>", "tree": {"sha": "034331a7da32e7814593d2fd781d000bf044597d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/034331a7da32e7814593d2fd781d000bf044597d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5055569008fda3ea8424b2b01824d44fca42d830", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5055569008fda3ea8424b2b01824d44fca42d830", "html_url": "https://github.com/rust-lang/rust/commit/5055569008fda3ea8424b2b01824d44fca42d830", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5055569008fda3ea8424b2b01824d44fca42d830/comments", "author": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28921b4213d1f0c0e5eacf2b69146ca7e5f2c22b", "url": "https://api.github.com/repos/rust-lang/rust/commits/28921b4213d1f0c0e5eacf2b69146ca7e5f2c22b", "html_url": "https://github.com/rust-lang/rust/commit/28921b4213d1f0c0e5eacf2b69146ca7e5f2c22b"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "e0f0215a58c61fe233d7b3b2411ded9af5866fc2", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5055569008fda3ea8424b2b01824d44fca42d830/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5055569008fda3ea8424b2b01824d44fca42d830/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=5055569008fda3ea8424b2b01824d44fca42d830", "patch": "@@ -306,7 +306,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             .collect()\n     }\n \n-    /// Adjusts the closure capture information to ensure that the operations aren't unasfe,\n+    /// Adjusts the closure capture information to ensure that the operations aren't unsafe,\n     /// and that the path can be captured with required capture kind (depending on use in closure,\n     /// move closure etc.)\n     ///\n@@ -319,7 +319,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// for generators we don't even implement the closure traits\n     /// really).\n     ///\n-    /// If we inferred that the closure needs to be FnMut/FnOnce, last element of the returned tuplle\n+    /// If we inferred that the closure needs to be FnMut/FnOnce, last element of the returned tuple\n     /// contains a `Some()` with the `Place` that caused us to do so.\n     fn process_collected_capture_information(\n         &self,\n@@ -331,7 +331,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let mut closure_kind = ty::ClosureKind::LATTICE_BOTTOM;\n         let mut origin: Option<(Span, Place<'tcx>)> = None;\n \n-        for (place, mut capture_info) in capture_information.into_iter() {\n+        for (place, mut capture_info) in capture_information {\n             // Apply rules for safety before inferring closure kind\n             let place = restrict_capture_precision(place);\n \n@@ -1541,8 +1541,6 @@ impl<'a, 'tcx> InferBorrowKind<'a, 'tcx> {\n             ty::ImmBorrow => false,\n         });\n \n-        // let tcx = self.fcx.tcx;\n-\n         // if this is an implicit deref of an\n         // upvar, then we need to modify the\n         // borrow_kind of the upvar to make sure it"}]}