{"sha": "babedc938e2c9a681737b3468b9124a58b2ec677", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYmVkYzkzOGUyYzlhNjgxNzM3YjM0NjhiOTEyNGE1OGIyZWM2Nzc=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2020-05-19T16:33:26Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2020-05-24T22:02:54Z"}, "message": "Rewrite notify all test.", "tree": {"sha": "5981c383ce797e13984c8be3f01ab6d700e9b415", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5981c383ce797e13984c8be3f01ab6d700e9b415"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/babedc938e2c9a681737b3468b9124a58b2ec677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/babedc938e2c9a681737b3468b9124a58b2ec677", "html_url": "https://github.com/rust-lang/rust/commit/babedc938e2c9a681737b3468b9124a58b2ec677", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/babedc938e2c9a681737b3468b9124a58b2ec677/comments", "author": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b5a9836be5b115f27f48406f68bf64d931ceabc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b5a9836be5b115f27f48406f68bf64d931ceabc", "html_url": "https://github.com/rust-lang/rust/commit/8b5a9836be5b115f27f48406f68bf64d931ceabc"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "faf47851bd01f6d186a1092a621b5fac9f7e1285", "filename": "tests/run-pass/concurrency/sync.rs", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/babedc938e2c9a681737b3468b9124a58b2ec677/tests%2Frun-pass%2Fconcurrency%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babedc938e2c9a681737b3468b9124a58b2ec677/tests%2Frun-pass%2Fconcurrency%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fsync.rs?ref=babedc938e2c9a681737b3468b9124a58b2ec677", "patch": "@@ -53,25 +53,32 @@ fn check_conditional_variables_notify_one() {\n     }\n }\n \n-/// The test taken from the Rust documentation.\n fn check_conditional_variables_notify_all() {\n-    let pair = Arc::new((Mutex::new(false), Condvar::new()));\n-    let pair2 = pair.clone();\n+    let pair = Arc::new(((Mutex::new(())), Condvar::new()));\n \n-    thread::spawn(move || {\n-        let (lock, cvar) = &*pair2;\n-        let mut started = lock.lock().unwrap();\n-        *started = true;\n-        // We notify the condvar that the value has changed.\n-        cvar.notify_all();\n-    });\n+    // Spawn threads and block them on the conditional variable.\n+    let handles: Vec<_> = (0..5)\n+        .map(|_| {\n+            let pair2 = pair.clone();\n+            thread::spawn(move || {\n+                let (lock, cvar) = &*pair2;\n+                let guard = lock.lock().unwrap();\n+                // Block waiting on the conditional variable.\n+                let _ = cvar.wait(guard).unwrap();\n+            })\n+        })\n+        .inspect(|_| {\n+            thread::yield_now();\n+            thread::yield_now();\n+        })\n+        .collect();\n \n-    // Wait for the thread to start up.\n-    let (lock, cvar) = &*pair;\n-    let mut started = lock.lock().unwrap();\n-    // As long as the value inside the `Mutex<bool>` is `false`, we wait.\n-    while !*started {\n-        started = cvar.wait(started).unwrap();\n+    let (_, cvar) = &*pair;\n+    // Unblock all threads.\n+    cvar.notify_all();\n+\n+    for handle in handles {\n+        handle.join().unwrap();\n     }\n }\n "}]}