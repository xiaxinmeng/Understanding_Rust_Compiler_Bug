{"sha": "1733f5e1c0a69c853adebf718fc7b4f81a1d257b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MzNmNWUxYzBhNjljODUzYWRlYmY3MThmYzdiNGY4MWExZDI1N2I=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-05T16:04:06Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-05T17:27:22Z"}, "message": "Added `./x.py test --no-doc` option.\n\nThis enables `./x.py test --stage 0 src/libstd --no-doc` and ensures the\nstage2-rustc and rustdoc need to be built.", "tree": {"sha": "7d1beaa641a3054347f4a08ce5593103e5cbb2c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d1beaa641a3054347f4a08ce5593103e5cbb2c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1733f5e1c0a69c853adebf718fc7b4f81a1d257b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlrt6XoACgkQ/vbIBR0O\nATy2BhAAwy6l6Y1nUxF59DyiIws+L9npFoJLf9kctisIFF8HdzCdKW1LBdn+AnXC\n1QJx4XWiAU2GGwyhw+qsM3zHVf68qvhVliiHacdh71c6DD9jxrocF23eufaygiR3\nrvaLRZC17+JDpEH+zFqXVTSahGRr2xPWxCvOEygzd8wEap5veFJlNGTS4CHJohJw\n5AKVmGuxNCL+3lAGcXmOirYGZBbBmZbOWg7xNDu+vliPeg2x+ytGm+OPnMYYz6FM\nL3Ud2yFNRD6wwKzCqAb68TH7SDJyO635s3oR/SyVoU7RlthDGOkt31xNXLPnErAz\nARXNZnbtbNF3dmsucbcGclhzV8OXvjhb8SWeZAt++nFYbGPg+hZ/f56im8onh9ba\nYs9XWc+pBgar6l2/WaTLuHLi+S/8QaFynM9BKhnLQwUn+h2HmfbqKhba5jbcv7gZ\nFifNJ4gNnrgK5BSg3h3Xgh8Dg/KJi2RUtcgTbGmiQxJTwOY7rCxb2F1Q8wRnZcVs\neBFZddXbd4K2GS4lAgn95rC/XwYjAC/ttNFWtWeG6NMRLPiYiBHZrLZ7lLR+Ze2y\n8CZB8fYTMA1v5RDbyABrGYGXnP4jrsP9YAinG/bJnC0kj0Byf6pnn1nSC7vVOPGe\nrRDEVswQAi10w/cNDsjjp5xF87/syupBUgWvGqpPkwWI8cNVyvA=\n=j7yN\n-----END PGP SIGNATURE-----", "payload": "tree 7d1beaa641a3054347f4a08ce5593103e5cbb2c4\nparent fa30ae5c7ec5f097fb7b82dd6eb4c0d8d1d3f76a\nauthor kennytm <kennytm@gmail.com> 1525536246 +0800\ncommitter kennytm <kennytm@gmail.com> 1525541242 +0800\n\nAdded `./x.py test --no-doc` option.\n\nThis enables `./x.py test --stage 0 src/libstd --no-doc` and ensures the\nstage2-rustc and rustdoc need to be built.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1733f5e1c0a69c853adebf718fc7b4f81a1d257b", "html_url": "https://github.com/rust-lang/rust/commit/1733f5e1c0a69c853adebf718fc7b4f81a1d257b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1733f5e1c0a69c853adebf718fc7b4f81a1d257b/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa30ae5c7ec5f097fb7b82dd6eb4c0d8d1d3f76a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa30ae5c7ec5f097fb7b82dd6eb4c0d8d1d3f76a", "html_url": "https://github.com/rust-lang/rust/commit/fa30ae5c7ec5f097fb7b82dd6eb4c0d8d1d3f76a"}], "stats": {"total": 51, "additions": 38, "deletions": 13}, "files": [{"sha": "408e61ef548691dd4523f4babc7d52b5d0f320ea", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1733f5e1c0a69c853adebf718fc7b4f81a1d257b/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1733f5e1c0a69c853adebf718fc7b4f81a1d257b/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=1733f5e1c0a69c853adebf718fc7b4f81a1d257b", "patch": "@@ -25,7 +25,7 @@ use compile;\n use install;\n use dist;\n use util::{exe, libdir, add_lib_path};\n-use {Build, Mode};\n+use {Build, Mode, DocTestsOption};\n use cache::{INTERNER, Interned, Cache};\n use check;\n use test;\n@@ -591,6 +591,8 @@ impl<'a> Builder<'a> {\n                 format!(\"{} {}\", env::var(\"RUSTFLAGS\").unwrap_or_default(), extra_args));\n         }\n \n+        let want_rustdoc = self.doc_tests != DocTestsOption::No;\n+\n         // Customize the compiler we're running. Specify the compiler to cargo\n         // as our shim and then pass it some various options used to configure\n         // how the actual compiler itself is called.\n@@ -607,7 +609,7 @@ impl<'a> Builder<'a> {\n              .env(\"RUSTC_LIBDIR\", self.rustc_libdir(compiler))\n              .env(\"RUSTC_RPATH\", self.config.rust_rpath.to_string())\n              .env(\"RUSTDOC\", self.out.join(\"bootstrap/debug/rustdoc\"))\n-             .env(\"RUSTDOC_REAL\", if cmd == \"doc\" || cmd == \"test\" {\n+             .env(\"RUSTDOC_REAL\", if cmd == \"doc\" || (cmd == \"test\" && want_rustdoc) {\n                  self.rustdoc(compiler.host)\n              } else {\n                  PathBuf::from(\"/path/to/nowhere/rustdoc/not/required\")\n@@ -624,7 +626,7 @@ impl<'a> Builder<'a> {\n         if let Some(ref error_format) = self.config.rustc_error_format {\n             cargo.env(\"RUSTC_ERROR_FORMAT\", error_format);\n         }\n-        if cmd != \"build\" && cmd != \"check\" {\n+        if cmd != \"build\" && cmd != \"check\" && want_rustdoc {\n             cargo.env(\"RUSTDOC_LIBDIR\", self.rustc_libdir(self.compiler(2, self.config.build)));\n         }\n "}, {"sha": "fb7c8ba1351392fd6cc4cb25b9290ad2099636d3", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1733f5e1c0a69c853adebf718fc7b4f81a1d257b/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1733f5e1c0a69c853adebf718fc7b4f81a1d257b/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=1733f5e1c0a69c853adebf718fc7b4f81a1d257b", "patch": "@@ -19,7 +19,7 @@ use std::process;\n \n use getopts::Options;\n \n-use Build;\n+use {Build, DocTestsOption};\n use config::Config;\n use metadata;\n use builder::Builder;\n@@ -62,7 +62,7 @@ pub enum Subcommand {\n         test_args: Vec<String>,\n         rustc_args: Vec<String>,\n         fail_fast: bool,\n-        doc_tests: bool,\n+        doc_tests: DocTestsOption,\n     },\n     Bench {\n         paths: Vec<PathBuf>,\n@@ -171,7 +171,8 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\");\n                     \"extra options to pass the compiler when running tests\",\n                     \"ARGS\",\n                 );\n-                opts.optflag(\"\", \"doc\", \"run doc tests\");\n+                opts.optflag(\"\", \"no-doc\", \"do not run doc tests\");\n+                opts.optflag(\"\", \"doc\", \"only run doc tests\");\n             },\n             \"bench\" => { opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\"); },\n             \"clean\" => { opts.optflag(\"\", \"all\", \"clean all build artifacts\"); },\n@@ -324,7 +325,13 @@ Arguments:\n                     test_args: matches.opt_strs(\"test-args\"),\n                     rustc_args: matches.opt_strs(\"rustc-args\"),\n                     fail_fast: !matches.opt_present(\"no-fail-fast\"),\n-                    doc_tests: matches.opt_present(\"doc\"),\n+                    doc_tests: if matches.opt_present(\"doc\") {\n+                        DocTestsOption::Only\n+                    } else if matches.opt_present(\"no-doc\") {\n+                        DocTestsOption::No\n+                    } else {\n+                        DocTestsOption::Yes\n+                    }\n                 }\n             }\n             \"bench\" => {\n@@ -411,10 +418,10 @@ impl Subcommand {\n         }\n     }\n \n-    pub fn doc_tests(&self) -> bool {\n+    pub fn doc_tests(&self) -> DocTestsOption {\n         match *self {\n             Subcommand::Test { doc_tests, .. } => doc_tests,\n-            _ => false,\n+            _ => DocTestsOption::Yes,\n         }\n     }\n }"}, {"sha": "624319485be059b9894a14c61fab695f2a36653e", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1733f5e1c0a69c853adebf718fc7b4f81a1d257b/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1733f5e1c0a69c853adebf718fc7b4f81a1d257b/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=1733f5e1c0a69c853adebf718fc7b4f81a1d257b", "patch": "@@ -210,6 +210,16 @@ pub struct Compiler {\n     host: Interned<String>,\n }\n \n+#[derive(PartialEq, Eq, Copy, Clone, Debug)]\n+pub enum DocTestsOption {\n+    // Default, run normal tests and doc tests.\n+    Yes,\n+    // Do not run any doc tests.\n+    No,\n+    // Only run doc tests.\n+    Only,\n+}\n+\n /// Global configuration for the build system.\n ///\n /// This structure transitively contains all configuration for the build system.\n@@ -233,7 +243,7 @@ pub struct Build {\n     rustfmt_info: channel::GitInfo,\n     local_rebuild: bool,\n     fail_fast: bool,\n-    doc_tests: bool,\n+    doc_tests: DocTestsOption,\n     verbosity: usize,\n \n     // Targets for which to build."}, {"sha": "0d430c300368e2eb4da2b9f4b2b0872a0eb40684", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1733f5e1c0a69c853adebf718fc7b4f81a1d257b/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1733f5e1c0a69c853adebf718fc7b4f81a1d257b/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=1733f5e1c0a69c853adebf718fc7b4f81a1d257b", "patch": "@@ -32,7 +32,7 @@ use dist;\n use native;\n use tool::{self, Tool};\n use util::{self, dylib_path, dylib_path_var};\n-use Mode;\n+use {Mode, DocTestsOption};\n use toolstate::ToolState;\n \n const ADB_TEST_DIR: &str = \"/data/tmp/work\";\n@@ -1519,8 +1519,14 @@ impl Step for Crate {\n         if test_kind.subcommand() == \"test\" && !builder.fail_fast {\n             cargo.arg(\"--no-fail-fast\");\n         }\n-        if builder.doc_tests {\n-            cargo.arg(\"--doc\");\n+        match builder.doc_tests {\n+            DocTestsOption::Only => {\n+                cargo.arg(\"--doc\");\n+            }\n+            DocTestsOption::No => {\n+                cargo.args(&[\"--lib\", \"--bins\", \"--examples\", \"--tests\", \"--benches\"]);\n+            }\n+            DocTestsOption::Yes => {}\n         }\n \n         cargo.arg(\"-p\").arg(krate);"}]}