{"sha": "3f3ff2f0f4c188c606a96506325d96726c842239", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmM2ZmMmYwZjRjMTg4YzYwNmE5NjUwNjMyNWQ5NjcyNmM4NDIyMzk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-02T07:48:59Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-02T07:48:59Z"}, "message": "fix comment naming", "tree": {"sha": "318d41ba567cf7ce1c5b4ead1857da64aa24242f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/318d41ba567cf7ce1c5b4ead1857da64aa24242f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f3ff2f0f4c188c606a96506325d96726c842239", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f3ff2f0f4c188c606a96506325d96726c842239", "html_url": "https://github.com/rust-lang/rust/commit/3f3ff2f0f4c188c606a96506325d96726c842239", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f3ff2f0f4c188c606a96506325d96726c842239/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99e6438660d665c9aa4d2831560ba2287becb13f", "url": "https://api.github.com/repos/rust-lang/rust/commits/99e6438660d665c9aa4d2831560ba2287becb13f", "html_url": "https://github.com/rust-lang/rust/commit/99e6438660d665c9aa4d2831560ba2287becb13f"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "daccd9fba0c0972b56034c18e672a68e25a59e15", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__enum_variant_with_details.snap", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3f3ff2f0f4c188c606a96506325d96726c842239/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_variant_with_details.snap", "raw_url": "https://github.com/rust-lang/rust/raw/3f3ff2f0f4c188c606a96506325d96726c842239/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_variant_with_details.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_variant_with_details.snap?ref=3f3ff2f0f4c188c606a96506325d96726c842239", "patch": "@@ -1,6 +1,6 @@\n ---\n-created: \"2019-02-18T09:22:24.062138085Z\"\n-creator: insta@0.6.2\n+created: \"2019-04-02T07:43:12.954637543Z\"\n+creator: insta@0.7.4\n source: crates/ra_ide_api/src/completion/completion_item.rs\n expression: kind_completions\n ---\n@@ -33,6 +33,9 @@ expression: kind_completions\n         delete: [180; 180),\n         insert: \"S\",\n         kind: EnumVariant,\n-        detail: \"(S)\"\n+        detail: \"(S)\",\n+        documentation: Documentation(\n+            \"\"\n+        )\n     }\n ]"}, {"sha": "76a12cd6453bdb0713a2c95040d47c80a07a1374", "filename": "crates/ra_syntax/src/ast/tokens.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3f3ff2f0f4c188c606a96506325d96726c842239/crates%2Fra_syntax%2Fsrc%2Fast%2Ftokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f3ff2f0f4c188c606a96506325d96726c842239/crates%2Fra_syntax%2Fsrc%2Fast%2Ftokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Ftokens.rs?ref=3f3ff2f0f4c188c606a96506325d96726c842239", "patch": "@@ -24,9 +24,9 @@ impl<'a> Comment<'a> {\n     pub fn flavor(&self) -> CommentFlavor {\n         let text = self.text();\n         if text.starts_with(\"///\") {\n-            CommentFlavor::Doc\n+            CommentFlavor::OuterDoc\n         } else if text.starts_with(\"//!\") {\n-            CommentFlavor::ModuleDoc\n+            CommentFlavor::InnerDoc\n         } else if text.starts_with(\"//\") {\n             CommentFlavor::Line\n         } else {\n@@ -46,25 +46,24 @@ impl<'a> Comment<'a> {\n #[derive(Debug, PartialEq, Eq)]\n pub enum CommentFlavor {\n     Line,\n-    Doc,\n-    ModuleDoc,\n+    OuterDoc,\n+    InnerDoc,\n     Multiline,\n }\n \n impl CommentFlavor {\n     pub fn prefix(&self) -> &'static str {\n-        use self::CommentFlavor::*;\n         match *self {\n-            Line => \"//\",\n-            Doc => \"///\",\n-            ModuleDoc => \"//!\",\n-            Multiline => \"/*\",\n+            CommentFlavor::Line => \"//\",\n+            CommentFlavor::OuterDoc => \"///\",\n+            CommentFlavor::InnerDoc => \"//!\",\n+            CommentFlavor::Multiline => \"/*\",\n         }\n     }\n \n     pub fn is_doc_comment(&self) -> bool {\n         match self {\n-            CommentFlavor::Doc | CommentFlavor::ModuleDoc => true,\n+            CommentFlavor::OuterDoc | CommentFlavor::InnerDoc => true,\n             _ => false,\n         }\n     }"}]}