{"sha": "acdee8b904178e13616cea8c31bcdb1f063ddef5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZGVlOGI5MDQxNzhlMTM2MTZjZWE4YzMxYmNkYjFmMDYzZGRlZjU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-16T17:45:04Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-17T18:39:51Z"}, "message": "llvm: Add an option to statically link libstdc++\n\nThe goal of the snapshot bots is to produce binaries which can run in as many\nlocations as possible. Currently we build on Centos 6 for this reason, but with\nLLVM's update to C++11, this reduces the number of platforms that we could\npossibly run on.\n\nThis adds a --enable-llvm-static-stdcpp option to the ./configure script for\nRust which will enable building a librustc with a static dependence on\nlibstdc++. This normally isn't necessary, but this option can be used on the\nsnapshot builders in order to continue to make binaries which should be able to\nrun in as many locations as possible.", "tree": {"sha": "94f61225760e85142266ed53cdf3d27295ced683", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94f61225760e85142266ed53cdf3d27295ced683"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acdee8b904178e13616cea8c31bcdb1f063ddef5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acdee8b904178e13616cea8c31bcdb1f063ddef5", "html_url": "https://github.com/rust-lang/rust/commit/acdee8b904178e13616cea8c31bcdb1f063ddef5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acdee8b904178e13616cea8c31bcdb1f063ddef5/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36d5635273f7759b9aedce04bc8b111edb9c0742", "url": "https://api.github.com/repos/rust-lang/rust/commits/36d5635273f7759b9aedce04bc8b111edb9c0742", "html_url": "https://github.com/rust-lang/rust/commit/36d5635273f7759b9aedce04bc8b111edb9c0742"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "983be4e8a0c0a72cc9fdcf9b2f8221bd412d8bce", "filename": "configure", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acdee8b904178e13616cea8c31bcdb1f063ddef5/configure", "raw_url": "https://github.com/rust-lang/rust/raw/acdee8b904178e13616cea8c31bcdb1f063ddef5/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=acdee8b904178e13616cea8c31bcdb1f063ddef5", "patch": "@@ -388,6 +388,7 @@ opt ccache 0 \"invoke gcc/clang via ccache to reuse object files between builds\"\n opt local-rust 0 \"use an installed rustc rather than downloading a snapshot\"\n opt pax-flags 0 \"apply PaX flags to rustc binaries (required for GRSecurity/PaX-patched kernels)\"\n opt inject-std-version 1 \"inject the current compiler version of libstd into programs\"\n+opt llvm-static-stdcpp 0 \"statically link to libstdc++ for LLVM\"\n opt rpath 1 \"build rpaths into rustc itself\"\n opt nightly 0 \"build nightly packages\"\n opt verify-install 1 \"verify installed binaries work\""}, {"sha": "789ce2dabc25edc056bee81f2e7fb926e04071a1", "filename": "mk/llvm.mk", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/acdee8b904178e13616cea8c31bcdb1f063ddef5/mk%2Fllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/acdee8b904178e13616cea8c31bcdb1f063ddef5/mk%2Fllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fllvm.mk?ref=acdee8b904178e13616cea8c31bcdb1f063ddef5", "patch": "@@ -42,16 +42,25 @@ $$(LLVM_STAMP_$(1)): $(S)src/rustllvm/llvm-auto-clean-trigger\n \t@$$(call E, make: done cleaning llvm)\n \ttouch $$@\n \n+ifeq ($$(CFG_ENABLE_LLVM_STATIC_STDCPP),1)\n+LLVM_STDCPP_LOCATION_$(1) = $$(shell $$(CC_$(1)) $$(CFG_GCCISH_CFLAGS_$(1)) \\\n+\t\t\t\t\t-print-file-name=libstdc++.a)\n+else\n+LLVM_STDCPP_LOCATION_$(1) =\n+endif\n+\n endef\n \n $(foreach host,$(CFG_HOST), \\\n-    $(eval LLVM_CONFIGS := $(LLVM_CONFIGS) $(LLVM_CONFIG_$(host))))\n+ $(eval $(call DEF_LLVM_RULES,$(host))))\n \n $(foreach host,$(CFG_HOST), \\\n- $(eval $(call DEF_LLVM_RULES,$(host))))\n+ $(eval LLVM_CONFIGS := $(LLVM_CONFIGS) $(LLVM_CONFIG_$(host))))\n \n $(S)src/librustc/lib/llvmdeps.rs: \\\n \t\t    $(LLVM_CONFIGS) \\\n-\t\t    $(S)src/etc/mklldeps.py\n+\t\t    $(S)src/etc/mklldeps.py \\\n+\t\t    $(MKFILE_DEPS)\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/mklldeps.py \\\n-\t    \"$@\" \"$(LLVM_COMPONENTS)\" $(LLVM_CONFIGS)\n+\t\t\"$@\" \"$(LLVM_COMPONENTS)\" \"$(CFG_ENABLE_LLVM_STATIC_STDCPP)\" \\\n+\t\t$(LLVM_CONFIGS)"}, {"sha": "448299965a853e999688b2a8bde24a455c509079", "filename": "mk/target.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acdee8b904178e13616cea8c31bcdb1f063ddef5/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/acdee8b904178e13616cea8c31bcdb1f063ddef5/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=acdee8b904178e13616cea8c31bcdb1f063ddef5", "patch": "@@ -83,6 +83,7 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$(4):\t\t\t\t    \\\n \t\t$$(WFLAGS_ST$(1)) \\\n \t\t-L \"$$(RT_OUTPUT_DIR_$(2))\" \\\n \t\t-L \"$$(LLVM_LIBDIR_$(2))\" \\\n+\t\t-L \"$$(dir $$(LLVM_STDCPP_LOCATION_$(2)))\" \\\n \t\t--out-dir $$(@D) $$<\n \t@touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES,\\"}, {"sha": "f745f5d61cb9a19e3065e33303a67ed5412d618b", "filename": "src/etc/mklldeps.py", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/acdee8b904178e13616cea8c31bcdb1f063ddef5/src%2Fetc%2Fmklldeps.py", "raw_url": "https://github.com/rust-lang/rust/raw/acdee8b904178e13616cea8c31bcdb1f063ddef5/src%2Fetc%2Fmklldeps.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmklldeps.py?ref=acdee8b904178e13616cea8c31bcdb1f063ddef5", "patch": "@@ -11,11 +11,14 @@\n import os\n import sys\n import subprocess\n+import itertools\n+from os import path\n \n f = open(sys.argv[1], 'wb')\n \n components = sys.argv[2].split(' ')\n components = [i for i in components if i]  # ignore extra whitespaces\n+enable_static = sys.argv[3]\n \n f.write(\"\"\"// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n@@ -41,7 +44,7 @@ def run(args):\n         sys.exit(1)\n     return out\n \n-for llconfig in sys.argv[3:]:\n+for llconfig in sys.argv[4:]:\n     f.write(\"\\n\")\n \n     out = run([llconfig, '--host-target'])\n@@ -94,9 +97,13 @@ def run(args):\n \n     # C++ runtime library\n     out = run([llconfig, '--cxxflags'])\n-    if 'stdlib=libc++' in out:\n-        f.write(\"#[link(name = \\\"c++\\\")]\\n\")\n+    if enable_static == '1':\n+      assert('stdlib=libc++' not in out)\n+      f.write(\"#[link(name = \\\"stdc++\\\", kind = \\\"static\\\")]\\n\")\n     else:\n+      if 'stdlib=libc++' in out:\n+        f.write(\"#[link(name = \\\"c++\\\")]\\n\")\n+      else:\n         f.write(\"#[link(name = \\\"stdc++\\\")]\\n\")\n \n     # Attach everything to an extern block"}]}