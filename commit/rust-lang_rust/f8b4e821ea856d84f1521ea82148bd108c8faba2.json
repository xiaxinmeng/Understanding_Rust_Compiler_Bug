{"sha": "f8b4e821ea856d84f1521ea82148bd108c8faba2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YjRlODIxZWE4NTZkODRmMTUyMWVhODIxNDhiZDEwOGM4ZmFiYTI=", "commit": {"author": {"name": "Jakub Wieczorek", "email": "jakub@jakub.cc", "date": "2014-06-08T18:01:38Z"}, "committer": {"name": "Jakub Wieczorek", "email": "jakub@jakub.cc", "date": "2014-06-08T18:01:38Z"}, "message": "Remove a redundant bitcast from fail!() handling", "tree": {"sha": "1668256f83002c22c3d29efaa798d8b0c4b7d762", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1668256f83002c22c3d29efaa798d8b0c4b7d762"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8b4e821ea856d84f1521ea82148bd108c8faba2", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b4e821ea856d84f1521ea82148bd108c8faba2", "html_url": "https://github.com/rust-lang/rust/commit/f8b4e821ea856d84f1521ea82148bd108c8faba2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8b4e821ea856d84f1521ea82148bd108c8faba2/comments", "author": null, "committer": null, "parents": [{"sha": "a2bbcb594fff51ecad2f9077467a29a6b2713319", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2bbcb594fff51ecad2f9077467a29a6b2713319", "html_url": "https://github.com/rust-lang/rust/commit/a2bbcb594fff51ecad2f9077467a29a6b2713319"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "a6290a8edb4421f33ab0b3419e22296889c966d8", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f8b4e821ea856d84f1521ea82148bd108c8faba2/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b4e821ea856d84f1521ea82148bd108c8faba2/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=f8b4e821ea856d84f1521ea82148bd108c8faba2", "patch": "@@ -20,7 +20,6 @@ use middle::trans::cleanup;\n use middle::trans::common::*;\n use middle::trans::debuginfo;\n use middle::trans::expr;\n-use middle::trans::type_of;\n use middle::ty;\n use util::ppaux::Repr;\n \n@@ -343,14 +342,10 @@ pub fn trans_ret<'a>(bcx: &'a Block<'a>,\n \n fn str_slice_arg<'a>(bcx: &'a Block<'a>, s: InternedString) -> ValueRef {\n     let ccx = bcx.ccx();\n-    let t = ty::mk_str_slice(bcx.tcx(), ty::ReStatic, ast::MutImmutable);\n     let s = C_str_slice(ccx, s);\n     let slot = alloca(bcx, val_ty(s), \"__temp\");\n     Store(bcx, s, slot);\n-\n-    // The type of C_str_slice is { i8*, i64 }, but the type of the &str is\n-    // %str_slice, so we do a bitcast here to the right type.\n-    BitCast(bcx, slot, type_of::type_of(ccx, t).ptr_to())\n+    slot\n }\n \n pub fn trans_fail<'a>("}]}