{"sha": "b1f89ee02ff05d559a27949601bef628e498b128", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZjg5ZWUwMmZmMDVkNTU5YTI3OTQ5NjAxYmVmNjI4ZTQ5OGIxMjg=", "commit": {"author": {"name": "Mateusz Gacek", "email": "96mateusz.gacek@gmail.com", "date": "2021-03-17T19:29:31Z"}, "committer": {"name": "Mateusz Gacek", "email": "96mateusz.gacek@gmail.com", "date": "2021-03-18T07:44:15Z"}, "message": "or_fun_call: trigger on unsafe blocks", "tree": {"sha": "9ce88f0081ed03095e11d093e7c0dc569d4a79e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ce88f0081ed03095e11d093e7c0dc569d4a79e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1f89ee02ff05d559a27949601bef628e498b128", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1f89ee02ff05d559a27949601bef628e498b128", "html_url": "https://github.com/rust-lang/rust/commit/b1f89ee02ff05d559a27949601bef628e498b128", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1f89ee02ff05d559a27949601bef628e498b128/comments", "author": {"login": "mgacek8", "id": 24357739, "node_id": "MDQ6VXNlcjI0MzU3NzM5", "avatar_url": "https://avatars.githubusercontent.com/u/24357739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgacek8", "html_url": "https://github.com/mgacek8", "followers_url": "https://api.github.com/users/mgacek8/followers", "following_url": "https://api.github.com/users/mgacek8/following{/other_user}", "gists_url": "https://api.github.com/users/mgacek8/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgacek8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgacek8/subscriptions", "organizations_url": "https://api.github.com/users/mgacek8/orgs", "repos_url": "https://api.github.com/users/mgacek8/repos", "events_url": "https://api.github.com/users/mgacek8/events{/privacy}", "received_events_url": "https://api.github.com/users/mgacek8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mgacek8", "id": 24357739, "node_id": "MDQ6VXNlcjI0MzU3NzM5", "avatar_url": "https://avatars.githubusercontent.com/u/24357739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgacek8", "html_url": "https://github.com/mgacek8", "followers_url": "https://api.github.com/users/mgacek8/followers", "following_url": "https://api.github.com/users/mgacek8/following{/other_user}", "gists_url": "https://api.github.com/users/mgacek8/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgacek8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgacek8/subscriptions", "organizations_url": "https://api.github.com/users/mgacek8/orgs", "repos_url": "https://api.github.com/users/mgacek8/repos", "events_url": "https://api.github.com/users/mgacek8/events{/privacy}", "received_events_url": "https://api.github.com/users/mgacek8/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56161b2982a4e6513e6765d6cc951ccc0f297a89", "url": "https://api.github.com/repos/rust-lang/rust/commits/56161b2982a4e6513e6765d6cc951ccc0f297a89", "html_url": "https://github.com/rust-lang/rust/commit/56161b2982a4e6513e6765d6cc951ccc0f297a89"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "22df3e028f978514aa1942b786bb72bcfd90a2cb", "filename": "clippy_lints/src/methods/or_fun_call.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b1f89ee02ff05d559a27949601bef628e498b128/clippy_lints%2Fsrc%2Fmethods%2For_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1f89ee02ff05d559a27949601bef628e498b128/clippy_lints%2Fsrc%2Fmethods%2For_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2For_fun_call.rs?ref=b1f89ee02ff05d559a27949601bef628e498b128", "patch": "@@ -6,6 +6,7 @@ use clippy_utils::ty::{implements_trait, is_type_diagnostic_item, match_type};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n+use rustc_hir::{BlockCheckMode, UnsafeSource};\n use rustc_lint::LateContext;\n use rustc_middle::ty;\n use rustc_span::source_map::Span;\n@@ -154,7 +155,6 @@ pub(super) fn check<'tcx>(\n             }\n         }\n     }\n-\n     if args.len() == 2 {\n         match args[1].kind {\n             hir::ExprKind::Call(ref fun, ref or_args) => {\n@@ -167,7 +167,16 @@ pub(super) fn check<'tcx>(\n             hir::ExprKind::Index(..) | hir::ExprKind::MethodCall(..) => {\n                 check_general_case(cx, name, method_span, &args[0], &args[1], expr.span, None);\n             },\n-            _ => {},\n+            hir::ExprKind::Block(block, _) => {\n+                if let BlockCheckMode::UnsafeBlock(UnsafeSource::UserProvided) = block.rules {\n+                    if let Some(block_expr) = block.expr {\n+                        if let hir::ExprKind::MethodCall(..) = block_expr.kind {\n+                            check_general_case(cx, name, method_span, &args[0], &args[1], expr.span, None);\n+                        }\n+                    }\n+                }\n+            },\n+            _ => (),\n         }\n     }\n }"}, {"sha": "660245f10c37896aea4a96ea323fc6b1058ff95e", "filename": "tests/ui/or_fun_call.fixed", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b1f89ee02ff05d559a27949601bef628e498b128/tests%2Fui%2For_fun_call.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/b1f89ee02ff05d559a27949601bef628e498b128/tests%2Fui%2For_fun_call.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.fixed?ref=b1f89ee02ff05d559a27949601bef628e498b128", "patch": "@@ -132,4 +132,18 @@ fn f() -> Option<()> {\n     Some(())\n }\n \n+mod issue6675 {\n+    unsafe fn foo() {\n+        let mut s = \"test\".to_owned();\n+        None.unwrap_or_else(|| s.as_mut_vec());\n+    }\n+\n+    fn bar() {\n+        let mut s = \"test\".to_owned();\n+        None.unwrap_or_else(|| unsafe { s.as_mut_vec() });\n+        #[rustfmt::skip]\n+        None.unwrap_or_else(|| unsafe { s.as_mut_vec() });\n+    }\n+}\n+\n fn main() {}"}, {"sha": "c589b170bddc2431ca01cb553fa2192ec0b3d298", "filename": "tests/ui/or_fun_call.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b1f89ee02ff05d559a27949601bef628e498b128/tests%2Fui%2For_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1f89ee02ff05d559a27949601bef628e498b128/tests%2Fui%2For_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.rs?ref=b1f89ee02ff05d559a27949601bef628e498b128", "patch": "@@ -132,4 +132,18 @@ fn f() -> Option<()> {\n     Some(())\n }\n \n+mod issue6675 {\n+    unsafe fn foo() {\n+        let mut s = \"test\".to_owned();\n+        None.unwrap_or(s.as_mut_vec());\n+    }\n+\n+    fn bar() {\n+        let mut s = \"test\".to_owned();\n+        None.unwrap_or(unsafe { s.as_mut_vec() });\n+        #[rustfmt::skip]\n+        None.unwrap_or( unsafe { s.as_mut_vec() }    );\n+    }\n+}\n+\n fn main() {}"}, {"sha": "d63b34435927e38613e199e057d1f0f3ac338e51", "filename": "tests/ui/or_fun_call.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b1f89ee02ff05d559a27949601bef628e498b128/tests%2Fui%2For_fun_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1f89ee02ff05d559a27949601bef628e498b128/tests%2Fui%2For_fun_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.stderr?ref=b1f89ee02ff05d559a27949601bef628e498b128", "patch": "@@ -114,5 +114,23 @@ error: use of `or` followed by a function call\n LL |         .or(Some(Bar(b, Duration::from_secs(2))));\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_else(|| Some(Bar(b, Duration::from_secs(2))))`\n \n-error: aborting due to 19 previous errors\n+error: use of `unwrap_or` followed by a function call\n+  --> $DIR/or_fun_call.rs:138:14\n+   |\n+LL |         None.unwrap_or(s.as_mut_vec());\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| s.as_mut_vec())`\n+\n+error: use of `unwrap_or` followed by a function call\n+  --> $DIR/or_fun_call.rs:143:14\n+   |\n+LL |         None.unwrap_or(unsafe { s.as_mut_vec() });\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| unsafe { s.as_mut_vec() })`\n+\n+error: use of `unwrap_or` followed by a function call\n+  --> $DIR/or_fun_call.rs:145:14\n+   |\n+LL |         None.unwrap_or( unsafe { s.as_mut_vec() }    );\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| unsafe { s.as_mut_vec() })`\n+\n+error: aborting due to 22 previous errors\n "}]}