{"sha": "c194ccef1337a48de41a5a504fd21b15c932ac3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxOTRjY2VmMTMzN2E0OGRlNDFhNWE1MDRmZDIxYjE1YzkzMmFjM2E=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-11T21:11:26Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-11T21:11:26Z"}, "message": "Rollup merge of #32171 - frewsxcv:compiletest, r=alexcrichton\n\nFix a couple compiletest nits.", "tree": {"sha": "6fbf6b3911339f5d49fec2b8fff61f1a978d3cd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fbf6b3911339f5d49fec2b8fff61f1a978d3cd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c194ccef1337a48de41a5a504fd21b15c932ac3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c194ccef1337a48de41a5a504fd21b15c932ac3a", "html_url": "https://github.com/rust-lang/rust/commit/c194ccef1337a48de41a5a504fd21b15c932ac3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c194ccef1337a48de41a5a504fd21b15c932ac3a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25d253e8d454858a6a01f8b3fc1d456b0f10e5f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/25d253e8d454858a6a01f8b3fc1d456b0f10e5f5", "html_url": "https://github.com/rust-lang/rust/commit/25d253e8d454858a6a01f8b3fc1d456b0f10e5f5"}, {"sha": "410333be64c23e9b38c81cdd14cae20cffa3f3c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/410333be64c23e9b38c81cdd14cae20cffa3f3c8", "html_url": "https://github.com/rust-lang/rust/commit/410333be64c23e9b38c81cdd14cae20cffa3f3c8"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "c1fbfcda475597f804bd59eca1909e9236ddefb0", "filename": "src/compiletest/errors.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c194ccef1337a48de41a5a504fd21b15c932ac3a/src%2Fcompiletest%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c194ccef1337a48de41a5a504fd21b15c932ac3a/src%2Fcompiletest%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Ferrors.rs?ref=c194ccef1337a48de41a5a504fd21b15c932ac3a", "patch": "@@ -15,7 +15,7 @@ use std::io::prelude::*;\n use std::path::Path;\n \n pub struct ExpectedError {\n-    pub line: usize,\n+    pub line_num: usize,\n     pub kind: String,\n     pub msg: String,\n }\n@@ -53,15 +53,15 @@ pub fn load_errors(testfile: &Path, cfg: Option<&str>) -> Vec<ExpectedError> {\n \n     rdr.lines()\n        .enumerate()\n-       .filter_map(|(line_no, ln)| {\n+       .filter_map(|(line_num, line)| {\n            parse_expected(last_nonfollow_error,\n-                          line_no + 1,\n-                          &ln.unwrap(),\n+                          line_num + 1,\n+                          &line.unwrap(),\n                           &tag)\n                .map(|(which, error)| {\n                    match which {\n                        FollowPrevious(_) => {}\n-                       _ => last_nonfollow_error = Some(error.line),\n+                       _ => last_nonfollow_error = Some(error.line_num),\n                    }\n                    error\n                })\n@@ -91,23 +91,21 @@ fn parse_expected(last_nonfollow_error: Option<usize>,\n                      .skip_while(|c| !c.is_whitespace())\n                      .collect::<String>().trim().to_owned();\n \n-    let (which, line) = if follow {\n+    let (which, line_num) = if follow {\n         assert!(adjusts == 0, \"use either //~| or //~^, not both.\");\n-        let line = last_nonfollow_error.unwrap_or_else(|| {\n-            panic!(\"encountered //~| without preceding //~^ line.\")\n-        });\n-        (FollowPrevious(line), line)\n+        let line_num = last_nonfollow_error.expect(\"encountered //~| without \\\n+                                                    preceding //~^ line.\");\n+        (FollowPrevious(line_num), line_num)\n     } else {\n         let which =\n             if adjusts > 0 { AdjustBackward(adjusts) } else { ThisLine };\n-        let line = line_num - adjusts;\n-        (which, line)\n+        let line_num = line_num - adjusts;\n+        (which, line_num)\n     };\n \n     debug!(\"line={} tag={:?} which={:?} kind={:?} msg={:?}\",\n            line_num, tag, which, kind, msg);\n-\n-    Some((which, ExpectedError { line: line,\n+    Some((which, ExpectedError { line_num: line_num,\n                                  kind: kind,\n                                  msg: msg, }))\n }"}, {"sha": "8c3ee3fb5f4b6f373da59026ccf244da87bb2bd8", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c194ccef1337a48de41a5a504fd21b15c932ac3a/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c194ccef1337a48de41a5a504fd21b15c932ac3a/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=c194ccef1337a48de41a5a504fd21b15c932ac3a", "patch": "@@ -1004,7 +1004,7 @@ fn check_expected_errors(revision: Option<&str>,\n     }\n \n     let prefixes = expected_errors.iter().map(|ee| {\n-        let expected = format!(\"{}:{}:\", testpaths.file.display(), ee.line);\n+        let expected = format!(\"{}:{}:\", testpaths.file.display(), ee.line_num);\n         // On windows just translate all '\\' path separators to '/'\n         expected.replace(r\"\\\", \"/\")\n     }).collect::<Vec<String>>();\n@@ -1076,7 +1076,7 @@ fn check_expected_errors(revision: Option<&str>,\n         if !flag {\n             let ee = &expected_errors[i];\n             error(revision, &format!(\"expected {} on line {} not found: {}\",\n-                                     ee.kind, ee.line, ee.msg));\n+                                     ee.kind, ee.line_num, ee.msg));\n             not_found += 1;\n         }\n     }"}]}