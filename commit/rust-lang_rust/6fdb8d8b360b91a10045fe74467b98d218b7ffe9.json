{"sha": "6fdb8d8b360b91a10045fe74467b98d218b7ffe9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZGI4ZDhiMzYwYjkxYTEwMDQ1ZmU3NDQ2N2I5OGQyMThiN2ZmZTk=", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-11-01T00:21:23Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-03-23T00:02:09Z"}, "message": "Update signed fmt/-0f32 docs\n\n\"semantic equivalence\" is too strong a phrasing here, which is why\nactually explaining what kind of circumstances might produce a -0\nwas chosen instead.", "tree": {"sha": "45126060ea5e671e3b79430313bf722e4686f975", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45126060ea5e671e3b79430313bf722e4686f975"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fdb8d8b360b91a10045fe74467b98d218b7ffe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fdb8d8b360b91a10045fe74467b98d218b7ffe9", "html_url": "https://github.com/rust-lang/rust/commit/6fdb8d8b360b91a10045fe74467b98d218b7ffe9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fdb8d8b360b91a10045fe74467b98d218b7ffe9/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74db93ed2d0677bbca8ba85617f05eae745363d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/74db93ed2d0677bbca8ba85617f05eae745363d8", "html_url": "https://github.com/rust-lang/rust/commit/74db93ed2d0677bbca8ba85617f05eae745363d8"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "439b0adde20155b8498c9aa0f62b39d5f00cb1e9", "filename": "library/alloc/src/fmt.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6fdb8d8b360b91a10045fe74467b98d218b7ffe9/library%2Falloc%2Fsrc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fdb8d8b360b91a10045fe74467b98d218b7ffe9/library%2Falloc%2Fsrc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Ffmt.rs?ref=6fdb8d8b360b91a10045fe74467b98d218b7ffe9", "patch": "@@ -157,9 +157,8 @@\n //!\n //! * `+` - This is intended for numeric types and indicates that the sign\n //!         should always be printed. Positive signs are never printed by\n-//!         default, and the negative sign is only printed by default for the\n-//!         `Signed` trait. This flag indicates that the correct sign (`+` or `-`)\n-//!         should always be printed.\n+//!         default, and the negative sign is only printed by default for signed values.\n+//!         This flag indicates that the correct sign (`+` or `-`) should always be printed.\n //! * `-` - Currently not used\n //! * `#` - This flag indicates that the \"alternate\" form of printing should\n //!         be used. The alternate forms are:"}, {"sha": "b48718df31c4e61d5ba5f20be6ff45d7f763c9f9", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6fdb8d8b360b91a10045fe74467b98d218b7ffe9/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fdb8d8b360b91a10045fe74467b98d218b7ffe9/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=6fdb8d8b360b91a10045fe74467b98d218b7ffe9", "patch": "@@ -805,10 +805,12 @@ mod prim_tuple {}\n /// often discard insignificant digits: `println!(\"{}\", 1.0f32 / 5.0f32)` will\n /// print `0.2`.\n ///\n-/// Additionally, `f32` can represent a couple of special values:\n+/// Additionally, `f32` can represent some special values:\n ///\n-/// - `-0`: this is just due to how floats are encoded. It is semantically\n-///   equivalent to `0` and `-0.0 == 0.0` results in `true`.\n+/// - `-0`: this value exists due to how floats are encoded. -0 == 0 is true, but for other\n+///   operations they are not equal and the difference can be useful to certain algorithms.\n+///   For example, operations on negative numbers that underflow to 0 will usually generate -0\n+///   instead of +0.\n /// - [\u221e](#associatedconstant.INFINITY) and\n ///   [\u2212\u221e](#associatedconstant.NEG_INFINITY): these result from calculations\n ///   like `1.0 / 0.0`."}]}