{"sha": "c46f185f670ff051f56f48d7f19da4b116a6128a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NmYxODVmNjcwZmYwNTFmNTZmNDhkN2YxOWRhNGIxMTZhNjEyOGE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-25T10:43:35Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-09-07T15:34:41Z"}, "message": "add a comment", "tree": {"sha": "e1dfba836789be8b3b71e73b5d16c7a60e38b0b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1dfba836789be8b3b71e73b5d16c7a60e38b0b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c46f185f670ff051f56f48d7f19da4b116a6128a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c46f185f670ff051f56f48d7f19da4b116a6128a", "html_url": "https://github.com/rust-lang/rust/commit/c46f185f670ff051f56f48d7f19da4b116a6128a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c46f185f670ff051f56f48d7f19da4b116a6128a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1242639b88b0dee9ebb0f103efe017826c5b334e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1242639b88b0dee9ebb0f103efe017826c5b334e", "html_url": "https://github.com/rust-lang/rust/commit/1242639b88b0dee9ebb0f103efe017826c5b334e"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "09015957f99a20d2a8f1246570325ec45d507b2a", "filename": "src/librustc_data_structures/indexed_vec.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c46f185f670ff051f56f48d7f19da4b116a6128a/src%2Flibrustc_data_structures%2Findexed_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c46f185f670ff051f56f48d7f19da4b116a6128a/src%2Flibrustc_data_structures%2Findexed_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Findexed_vec.rs?ref=c46f185f670ff051f56f48d7f19da4b116a6128a", "patch": "@@ -48,6 +48,13 @@ impl Idx for u32 {\n     fn index(self) -> usize { self as usize }\n }\n \n+/// Creates a struct type `S` that can be used as an index with\n+/// `IndexVec` and so on.  This struct can be constructed via `S::new`\n+/// (given a `usize`) and converted to a usize with the `index()`\n+/// method (from the `Idx` trait). Internally, the index uses a u32,\n+/// so the index must not exceed `u32::MAX`. You can also customize\n+/// things like the `Debug` impl, what traits are derived, and so\n+/// forth.\n #[macro_export]\n macro_rules! newtype_index {\n     // ---- public rules ----"}]}