{"sha": "2c471a559f7f78b25923ad69a12ff7dc178b1048", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNDcxYTU1OWY3Zjc4YjI1OTIzYWQ2OWExMmZmN2RjMTc4YjEwNDg=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-10-31T00:31:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-31T00:31:24Z"}, "message": "Merge pull request #3152 from topecongiro/do-not-override-edition-in-rustfmt-toml\n\nUse edition in rustfmt.toml when no command line argument is passed", "tree": {"sha": "532918dc83625e9f5ee69c607b99030bfecccbfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/532918dc83625e9f5ee69c607b99030bfecccbfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c471a559f7f78b25923ad69a12ff7dc178b1048", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb2PfcCRBK7hj4Ov3rIwAAdHIIABC84iOiNY0+kUMIXr9O5Nap\nvvNuu/K43YmYIE+DgF59/KjlhaU2x66Y5GWTaeuIGAhLJUdvYF0R3g1BK9rGD8fH\ntbRp3Iqs9Q6zpqtgzn2X3HpjsZYEFa3RAElWe3HRQl8yXM9Y+kXQOKQ6zlyn2vD4\nYmxsYVi8Txlyu3Q8zn3d/q657zNv0yeZlhQvGseXh71t1DXLWWWOK9Dai6DW9INQ\nyqsBceE7pRdD1+7NmT6MgUzdVhPJZSX8pM4alL4TXBk9dlY2/QpxYIjG3O2w/5tq\nycGzkhfA0lzX29KrOqK7U2dXFiLSzmr5C9ad1SpZpM35cypDV3vHEeEAjt4bj68=\n=PhAE\n-----END PGP SIGNATURE-----\n", "payload": "tree 532918dc83625e9f5ee69c607b99030bfecccbfa\nparent b2706ebeccf1ee92fa587fb35dc8a7654d837309\nparent 6fa804debaec69cb49f020a84a1c62c3a8aa0969\nauthor Nick Cameron <nrc@ncameron.org> 1540945884 +1300\ncommitter GitHub <noreply@github.com> 1540945884 +1300\n\nMerge pull request #3152 from topecongiro/do-not-override-edition-in-rustfmt-toml\n\nUse edition in rustfmt.toml when no command line argument is passed"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c471a559f7f78b25923ad69a12ff7dc178b1048", "html_url": "https://github.com/rust-lang/rust/commit/2c471a559f7f78b25923ad69a12ff7dc178b1048", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c471a559f7f78b25923ad69a12ff7dc178b1048/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2706ebeccf1ee92fa587fb35dc8a7654d837309", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2706ebeccf1ee92fa587fb35dc8a7654d837309", "html_url": "https://github.com/rust-lang/rust/commit/b2706ebeccf1ee92fa587fb35dc8a7654d837309"}, {"sha": "6fa804debaec69cb49f020a84a1c62c3a8aa0969", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fa804debaec69cb49f020a84a1c62c3a8aa0969", "html_url": "https://github.com/rust-lang/rust/commit/6fa804debaec69cb49f020a84a1c62c3a8aa0969"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "b3c61b3df428fe3e6dc2177829bf87cd0b0dcb19", "filename": "src/bin/main.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2c471a559f7f78b25923ad69a12ff7dc178b1048/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c471a559f7f78b25923ad69a12ff7dc178b1048/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=2c471a559f7f78b25923ad69a12ff7dc178b1048", "patch": "@@ -438,7 +438,7 @@ struct GetOptsOptions {\n     emit_mode: EmitMode,\n     backup: bool,\n     check: bool,\n-    edition: Edition,\n+    edition: Option<Edition>,\n     color: Option<Color>,\n     file_lines: FileLines, // Default is all lines in all files.\n     unstable_features: bool,\n@@ -503,7 +503,7 @@ impl GetOptsOptions {\n         }\n \n         if let Some(ref edition_str) = matches.opt_str(\"edition\") {\n-            options.edition = edition_from_edition_str(edition_str)?;\n+            options.edition = Some(edition_from_edition_str(edition_str)?);\n         }\n \n         if matches.opt_present(\"backup\") {\n@@ -559,7 +559,9 @@ impl CliOptions for GetOptsOptions {\n         if let Some(error_on_unformatted) = self.error_on_unformatted {\n             config.set().error_on_unformatted(error_on_unformatted);\n         }\n-        config.set().edition(self.edition);\n+        if let Some(edition) = self.edition {\n+            config.set().edition(edition);\n+        }\n         if self.check {\n             config.set().emit_mode(EmitMode::Diff);\n         } else {"}]}