{"sha": "64f83915de0792ae61086fe3269b1587be2e2a01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ZjgzOTE1ZGUwNzkyYWU2MTA4NmZlMzI2OWIxNTg3YmUyZTJhMDE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-15T04:57:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-15T04:57:27Z"}, "message": "Rollup merge of #67300 - aloucks:issue-65970, r=rkruppe\n\nRestore original implementation of Vec::retain\n\nThis PR reverts #48065, which aimed to optimize `Vec::retain` by making use of `Vec::drain_filter`. Unfortunately at that time, `drain_filter` was unsound.\n\nThe soundness hole in `Vec::drain_filter` was fixed in #61224 by guaranteeing that cleanup logic runs via a nested `Drop`, even in the event of a panic. Implementing this nested drop affects codegen (apparently?) and results in slower code.\n\nFixes #65970", "tree": {"sha": "c8a67017e8ba910f665e7418d5b2d913c97cecae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8a67017e8ba910f665e7418d5b2d913c97cecae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64f83915de0792ae61086fe3269b1587be2e2a01", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd9b03CRBK7hj4Ov3rIwAAdHIIADICrdn58FW2jDWDK+lWTgf8\nFa+8kYlQEeMajBDaBhgiQZcifbtdbXgRMSOmd3SzPjZB4w6s81IjJ+Ek3/3b2q0O\nwFrjAAbCb7n32Gbe+z5YloE8Q/cJu5F5GAbl0PsTtHCN5Z/+ncjC49fFu46FX4Di\nJgMM2uU+Gkh078UghFHHBiVFRGZYThuBEO3De8pacuVrQdgC/T7OlZXb1/IwELzI\nQSOQyXafVip2Vyj3JvgKMsbl56UfmwuDsFQnRy5KgLjNHaoW1rKujvUKHRNjYo0S\nYqbOj7qdAXS6zb4tJBtCgk2PpaappEwLJ5uXjFvOPb9iz36NSfJvEkKbaPo4GX8=\n=rjrj\n-----END PGP SIGNATURE-----\n", "payload": "tree c8a67017e8ba910f665e7418d5b2d913c97cecae\nparent 8e2689c42ef3dad7d91427340b2e698139aaa197\nparent 7ea6c46a6d70506e92630f0186f2c6b0386147a0\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576385847 +0100\ncommitter GitHub <noreply@github.com> 1576385847 +0100\n\nRollup merge of #67300 - aloucks:issue-65970, r=rkruppe\n\nRestore original implementation of Vec::retain\n\nThis PR reverts #48065, which aimed to optimize `Vec::retain` by making use of `Vec::drain_filter`. Unfortunately at that time, `drain_filter` was unsound.\n\nThe soundness hole in `Vec::drain_filter` was fixed in #61224 by guaranteeing that cleanup logic runs via a nested `Drop`, even in the event of a panic. Implementing this nested drop affects codegen (apparently?) and results in slower code.\n\nFixes #65970\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64f83915de0792ae61086fe3269b1587be2e2a01", "html_url": "https://github.com/rust-lang/rust/commit/64f83915de0792ae61086fe3269b1587be2e2a01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64f83915de0792ae61086fe3269b1587be2e2a01/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e2689c42ef3dad7d91427340b2e698139aaa197", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e2689c42ef3dad7d91427340b2e698139aaa197", "html_url": "https://github.com/rust-lang/rust/commit/8e2689c42ef3dad7d91427340b2e698139aaa197"}, {"sha": "7ea6c46a6d70506e92630f0186f2c6b0386147a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ea6c46a6d70506e92630f0186f2c6b0386147a0", "html_url": "https://github.com/rust-lang/rust/commit/7ea6c46a6d70506e92630f0186f2c6b0386147a0"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "2ad4e22884ea77630388bfc2dc42c3fdc7d20dd4", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/64f83915de0792ae61086fe3269b1587be2e2a01/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64f83915de0792ae61086fe3269b1587be2e2a01/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=64f83915de0792ae61086fe3269b1587be2e2a01", "patch": "@@ -1079,7 +1079,22 @@ impl<T> Vec<T> {\n     pub fn retain<F>(&mut self, mut f: F)\n         where F: FnMut(&T) -> bool\n     {\n-        self.drain_filter(|x| !f(x));\n+        let len = self.len();\n+        let mut del = 0;\n+        {\n+            let v = &mut **self;\n+\n+            for i in 0..len {\n+                if !f(&v[i]) {\n+                    del += 1;\n+                } else if del > 0 {\n+                    v.swap(i - del, i);\n+                }\n+            }\n+        }\n+        if del > 0 {\n+            self.truncate(len - del);\n+        }\n     }\n \n     /// Removes all but the first of consecutive elements in the vector that resolve to the same"}]}