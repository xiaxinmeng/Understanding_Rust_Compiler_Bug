{"sha": "f8d6261f9bc3ae9d11a34f194d8593556965a537", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZDYyNjFmOWJjM2FlOWQxMWEzNGYxOTRkODU5MzU1Njk2NWE1Mzc=", "commit": {"author": {"name": "iirelu", "email": "anna@bawk.space", "date": "2018-09-05T17:12:20Z"}, "committer": {"name": "iirelu", "email": "anna@bawk.space", "date": "2018-09-05T17:12:20Z"}, "message": "Add docs for `crate` keyword\n\nI think it might be used in some other things, but I'm not fluent enough\nat sifting through the rust compiler's source code to find every use of\na specific keyword.\n\nThis leaves the question of how to document the `extern` keyword, what\nwith how much overlap it has with `crate`, but that's used with ABI\nstuff so that should be fine.", "tree": {"sha": "b97fa09b2c73fc659bf0374ed4ca84d3e577023f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b97fa09b2c73fc659bf0374ed4ca84d3e577023f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8d6261f9bc3ae9d11a34f194d8593556965a537", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8d6261f9bc3ae9d11a34f194d8593556965a537", "html_url": "https://github.com/rust-lang/rust/commit/f8d6261f9bc3ae9d11a34f194d8593556965a537", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8d6261f9bc3ae9d11a34f194d8593556965a537/comments", "author": {"login": "iirelu", "id": 3432543, "node_id": "MDQ6VXNlcjM0MzI1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3432543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iirelu", "html_url": "https://github.com/iirelu", "followers_url": "https://api.github.com/users/iirelu/followers", "following_url": "https://api.github.com/users/iirelu/following{/other_user}", "gists_url": "https://api.github.com/users/iirelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iirelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iirelu/subscriptions", "organizations_url": "https://api.github.com/users/iirelu/orgs", "repos_url": "https://api.github.com/users/iirelu/repos", "events_url": "https://api.github.com/users/iirelu/events{/privacy}", "received_events_url": "https://api.github.com/users/iirelu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iirelu", "id": 3432543, "node_id": "MDQ6VXNlcjM0MzI1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3432543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iirelu", "html_url": "https://github.com/iirelu", "followers_url": "https://api.github.com/users/iirelu/followers", "following_url": "https://api.github.com/users/iirelu/following{/other_user}", "gists_url": "https://api.github.com/users/iirelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/iirelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iirelu/subscriptions", "organizations_url": "https://api.github.com/users/iirelu/orgs", "repos_url": "https://api.github.com/users/iirelu/repos", "events_url": "https://api.github.com/users/iirelu/events{/privacy}", "received_events_url": "https://api.github.com/users/iirelu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cbcfa276185d650ca04fb96ddec15f1b82c5806", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cbcfa276185d650ca04fb96ddec15f1b82c5806", "html_url": "https://github.com/rust-lang/rust/commit/6cbcfa276185d650ca04fb96ddec15f1b82c5806"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "61b30d94e5a833600c1a600ef0381ddc9e4f0b5b", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f8d6261f9bc3ae9d11a34f194d8593556965a537/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8d6261f9bc3ae9d11a34f194d8593556965a537/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=f8d6261f9bc3ae9d11a34f194d8593556965a537", "patch": "@@ -90,6 +90,40 @@ mod as_keyword { }\n /// [Reference]: https://doc.rust-lang.org/reference/items/constant-items.html\n mod const_keyword { }\n \n+#[doc(keyword = \"crate\")]\n+//\n+/// The `crate` keyword.\n+///\n+/// The primary use of the `crate` keyword is as a part of `extern crate` declarations, which are\n+/// used to specify a dependency on a crate external to the one it's declared in. Crates are the\n+/// fundamental compilation unit of Rust code, and can be seen as libraries or projects. More can\n+/// be read about crates in the [Reference].\n+///\n+/// ```rust ignore\n+/// extern crate rand;\n+/// extern crate my_crate as thing;\n+/// extern crate std; // implicitly added to the root of every Rust project\n+/// ```\n+///\n+/// The `as` keyword can be used to change what the crate is referred to as in your project. If a\n+/// crate name includes a dash, it is implicitly imported with the dashes replaced by underscores.\n+///\n+/// `crate` is also used as in conjunction with [`pub`] to signify that the item it's attached to\n+/// is public only to other members of the same crate it's in.\n+///\n+/// ```rust\n+/// # #[allow(unused_imports)]\n+/// pub(crate) use std::io::Error as IoError;\n+/// pub(crate) enum CoolMarkerType { }\n+/// pub struct PublicThing {\n+///     pub(crate) semi_secret_thing: bool,\n+/// }\n+/// ```\n+///\n+/// [Reference]: https://doc.rust-lang.org/reference/items/extern-crates.html\n+/// [`pub`]: keyword.pub.html\n+mod crate_keyword { }\n+\n #[doc(keyword = \"fn\")]\n //\n /// The `fn` keyword."}]}