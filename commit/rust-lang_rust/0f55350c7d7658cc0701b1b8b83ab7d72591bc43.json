{"sha": "0f55350c7d7658cc0701b1b8b83ab7d72591bc43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNTUzNTBjN2Q3NjU4Y2MwNzAxYjFiOGI4M2FiN2Q3MjU5MWJjNDM=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-28T03:41:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-28T03:41:51Z"}, "message": "Merge pull request #2563 from rleungx/allow-underscore\n\nallow underscore in macro_rules!", "tree": {"sha": "3c36db27e54a8cd95b84671bff8382aafdc970c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c36db27e54a8cd95b84671bff8382aafdc970c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f55350c7d7658cc0701b1b8b83ab7d72591bc43", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJauw7/CRBK7hj4Ov3rIwAAdHIIACU7R/JwXQl/serjlbFXPc1/\n6T2GZtCrCc615IXNKJHyPmminpXDqMIUITEnt9Qbt11zz3XVUn2NhNgSDUe3UHjI\neN9lGDrPAsrmFq2o628dhQzH7lg+m8f2QyXIZOj+ulvmuBglaseDBS2aASKvssBt\nKHbSmePd9fnn7Fm6alQtxaCpmdhwJlSjZrQKdENgAqiUM0fKBn5PyR0KOL1KNqsW\ncgy2ePhiGaCBeKFdBC+EJmAaswLuERVNALRYyjsHIcJHxk2g554PCKY/rmJRPzWa\nc/x4QH2457XhvPTU2GyCS6imLqY1mVVfnIzzrr4mvw80afMBovqMZX2a6vcoIE0=\n=Ct1g\n-----END PGP SIGNATURE-----\n", "payload": "tree 3c36db27e54a8cd95b84671bff8382aafdc970c1\nparent 752e2bd0ac4a9e1d9dc469b47b4a07468c352523\nparent bf3bf8c235af8a9f0267782cddfa0ac99f4895bf\nauthor Seiichi Uchida <seuchida@gmail.com> 1522208511 +0900\ncommitter GitHub <noreply@github.com> 1522208511 +0900\n\nMerge pull request #2563 from rleungx/allow-underscore\n\nallow underscore in macro_rules!"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f55350c7d7658cc0701b1b8b83ab7d72591bc43", "html_url": "https://github.com/rust-lang/rust/commit/0f55350c7d7658cc0701b1b8b83ab7d72591bc43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f55350c7d7658cc0701b1b8b83ab7d72591bc43/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "752e2bd0ac4a9e1d9dc469b47b4a07468c352523", "url": "https://api.github.com/repos/rust-lang/rust/commits/752e2bd0ac4a9e1d9dc469b47b4a07468c352523", "html_url": "https://github.com/rust-lang/rust/commit/752e2bd0ac4a9e1d9dc469b47b4a07468c352523"}, {"sha": "bf3bf8c235af8a9f0267782cddfa0ac99f4895bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf3bf8c235af8a9f0267782cddfa0ac99f4895bf", "html_url": "https://github.com/rust-lang/rust/commit/bf3bf8c235af8a9f0267782cddfa0ac99f4895bf"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "bd8b86a49d4c404ad2cbc37a2e99b4e6dd7d5681", "filename": "src/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f55350c7d7658cc0701b1b8b83ab7d72591bc43/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f55350c7d7658cc0701b1b8b83ab7d72591bc43/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=0f55350c7d7658cc0701b1b8b83ab7d72591bc43", "patch": "@@ -460,7 +460,7 @@ fn replace_names(input: &str) -> Option<(String, HashMap<String, String>)> {\n         } else if c == '(' && cur_name.is_empty() {\n             // FIXME: Support macro def with repeat.\n             return None;\n-        } else if c.is_alphanumeric() {\n+        } else if c.is_alphanumeric() || c == '_' {\n             cur_name.push(c);\n         }\n     }"}, {"sha": "3f7f5d621c32843810bf2919081013d9b042fe00", "filename": "tests/source/macro_rules.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0f55350c7d7658cc0701b1b8b83ab7d72591bc43/tests%2Fsource%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f55350c7d7658cc0701b1b8b83ab7d72591bc43/tests%2Fsource%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacro_rules.rs?ref=0f55350c7d7658cc0701b1b8b83ab7d72591bc43", "patch": "@@ -168,3 +168,23 @@ macro_rules! add_message_to_notes {\n         }\n     }}\n }\n+\n+// #2560\n+macro_rules! binary {\n+    ($_self:ident,$expr:expr, $lhs:expr,$func:ident) => {\n+        while $_self.matched($expr) {\n+            let op = $_self.get_binary_op()?;\n+\n+            let rhs = Box::new($_self.$func()?);\n+\n+           $lhs = Spanned {\n+                span: $lhs.get_span().to(rhs.get_span()),\n+                value: Expression::Binary {\n+                    lhs: Box::new($lhs),\n+                    op,\n+                    rhs,\n+                },\n+            }\n+        }\n+    };\n+}"}, {"sha": "7d527b0c3fdac475b38378174001d597e0bbc511", "filename": "tests/target/macro_rules.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0f55350c7d7658cc0701b1b8b83ab7d72591bc43/tests%2Ftarget%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f55350c7d7658cc0701b1b8b83ab7d72591bc43/tests%2Ftarget%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacro_rules.rs?ref=0f55350c7d7658cc0701b1b8b83ab7d72591bc43", "patch": "@@ -200,3 +200,23 @@ macro_rules! add_message_to_notes {\n         }\n     }};\n }\n+\n+// #2560\n+macro_rules! binary {\n+    ($_self:ident, $expr:expr, $lhs:expr, $func:ident) => {\n+        while $_self.matched($expr) {\n+            let op = $_self.get_binary_op()?;\n+\n+            let rhs = Box::new($_self.$func()?);\n+\n+            $lhs = Spanned {\n+                span: $lhs.get_span().to(rhs.get_span()),\n+                value: Expression::Binary {\n+                    lhs: Box::new($lhs),\n+                    op,\n+                    rhs,\n+                },\n+            }\n+        }\n+    };\n+}"}]}