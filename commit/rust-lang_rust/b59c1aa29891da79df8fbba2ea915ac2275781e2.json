{"sha": "b59c1aa29891da79df8fbba2ea915ac2275781e2", "node_id": "C_kwDOAAsO6NoAKGI1OWMxYWEyOTg5MWRhNzlkZjhmYmJhMmVhOTE1YWMyMjc1NzgxZTI", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-09-06T15:00:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-06T15:00:28Z"}, "message": "Rollup merge of #101462 - aDotInTheVoid:rdj-enum-field-2, r=GuillaumeGomez\n\nRustdoc-Json: Store Variant Fields as their own item.\n\nCloses #100587\nCloses #92945\n\nSuccessor to #100762\n\nUnlike that one, we don't have merge `StructType` and `Variant`, as after #101386 `Variant` stores enum specific information (discriminant).\n\nResolves the naming discussion (https://github.com/rust-lang/rust/pull/100762#discussion_r950690526) by having seperate enums for struct and enum kinds\n\nResolves `#[doc(hidden)]` on tuple structs (https://github.com/rust-lang/rust/pull/100762#discussion_r950833884) by storing as a `Vec<Option<Id>>`\n\nr? `@GuillaumeGomez`", "tree": {"sha": "88a0f038b8a49bbfb981c1290f5cc94d59c6828f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88a0f038b8a49bbfb981c1290f5cc94d59c6828f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b59c1aa29891da79df8fbba2ea915ac2275781e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjF2CMCRBK7hj4Ov3rIwAAuwAIAJI41t6SnUvT5yAR5e/1B5uJ\n1gChMBFLOQ+rxVsa9qhu11tGf8T4ZxPhAHjWQSQk7NJsBS7ulbSjdUtpUXfo/mbL\nR7StFUTCN4YIomgbBK7pxnj27a3+bcwpqz1aOHdEKO+EPifn5wAzrQxoj8C0wiyE\nXvSmNOP7T9WShcrrjj8eQmtOWvN58Xm+xYapG8LZ6EX538sgXKhuqJCyCoPIpGlL\nnP8+Dmx4BQoh0kGHIw/WzhqrLTWiblrEH8LmiykHQEZacpTPZxoEqgNHROyC/baB\nV30Csr/vnKPHKuf3Mdy7vT0vbkYeKDY2hzi93B5AYY0IiAmMhIkZ0RNBWXroemc=\n=Ky2X\n-----END PGP SIGNATURE-----\n", "payload": "tree 88a0f038b8a49bbfb981c1290f5cc94d59c6828f\nparent 78968e595924af11c3e487f7f0ae7fc7b3c23fc5\nparent 065e0b9c9cf3d03f286c5d0b98fbae7185e41b75\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1662476428 +0200\ncommitter GitHub <noreply@github.com> 1662476428 +0200\n\nRollup merge of #101462 - aDotInTheVoid:rdj-enum-field-2, r=GuillaumeGomez\n\nRustdoc-Json: Store Variant Fields as their own item.\n\nCloses #100587\nCloses #92945\n\nSuccessor to #100762\n\nUnlike that one, we don't have merge `StructType` and `Variant`, as after #101386 `Variant` stores enum specific information (discriminant).\n\nResolves the naming discussion (https://github.com/rust-lang/rust/pull/100762#discussion_r950690526) by having seperate enums for struct and enum kinds\n\nResolves `#[doc(hidden)]` on tuple structs (https://github.com/rust-lang/rust/pull/100762#discussion_r950833884) by storing as a `Vec<Option<Id>>`\n\nr? `@GuillaumeGomez`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b59c1aa29891da79df8fbba2ea915ac2275781e2", "html_url": "https://github.com/rust-lang/rust/commit/b59c1aa29891da79df8fbba2ea915ac2275781e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b59c1aa29891da79df8fbba2ea915ac2275781e2/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78968e595924af11c3e487f7f0ae7fc7b3c23fc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/78968e595924af11c3e487f7f0ae7fc7b3c23fc5", "html_url": "https://github.com/rust-lang/rust/commit/78968e595924af11c3e487f7f0ae7fc7b3c23fc5"}, {"sha": "065e0b9c9cf3d03f286c5d0b98fbae7185e41b75", "url": "https://api.github.com/repos/rust-lang/rust/commits/065e0b9c9cf3d03f286c5d0b98fbae7185e41b75", "html_url": "https://github.com/rust-lang/rust/commit/065e0b9c9cf3d03f286c5d0b98fbae7185e41b75"}], "stats": {"total": 221, "additions": 203, "deletions": 18}, "files": [{"sha": "27fb018aecaddfa399f274705308c93ba181caf5", "filename": "src/etc/check_missing_items.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Fetc%2Fcheck_missing_items.py", "raw_url": "https://github.com/rust-lang/rust/raw/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Fetc%2Fcheck_missing_items.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcheck_missing_items.py?ref=b59c1aa29891da79df8fbba2ea915ac2275781e2", "patch": "@@ -144,10 +144,10 @@ def check_type(ty):\n         ) - visited\n     elif item[\"kind\"] == \"variant\":\n         if item[\"inner\"][\"variant_kind\"] == \"tuple\":\n-            for ty in item[\"inner\"][\"variant_inner\"]:\n-                check_type(ty)\n+            for field_id in filter(None, item[\"inner\"][\"variant_inner\"]):\n+                work_list.add(field_id)\n         elif item[\"inner\"][\"variant_kind\"] == \"struct\":\n-            work_list |= set(item[\"inner\"][\"variant_inner\"]) - visited\n+            work_list |= set(item[\"inner\"][\"variant_inner\"][\"fields\"]) - visited\n     elif item[\"kind\"] in (\"function\", \"method\"):\n         check_generics(item[\"inner\"][\"generics\"])\n         check_decl(item[\"inner\"][\"decl\"])"}, {"sha": "c2d3543942db16b02b94080f558271bb6ab2ceb0", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=b59c1aa29891da79df8fbba2ea915ac2275781e2", "patch": "@@ -663,17 +663,11 @@ impl FromWithTcx<clean::Variant> for Variant {\n         use clean::Variant::*;\n         match variant {\n             CLike(disr) => Variant::Plain(disr.map(|disr| disr.into_tcx(tcx))),\n-            Tuple(fields) => Variant::Tuple(\n-                fields\n-                    .into_iter()\n-                    .filter_map(|f| match *f.kind {\n-                        clean::StructFieldItem(ty) => Some(ty.into_tcx(tcx)),\n-                        clean::StrippedItem(_) => None,\n-                        _ => unreachable!(),\n-                    })\n-                    .collect(),\n-            ),\n-            Struct(s) => Variant::Struct(ids(s.fields, tcx)),\n+            Tuple(fields) => Variant::Tuple(ids_keeping_stripped(fields, tcx)),\n+            Struct(s) => Variant::Struct {\n+                fields_stripped: s.has_stripped_entries(),\n+                fields: ids(s.fields, tcx),\n+            },\n         }\n     }\n }\n@@ -796,3 +790,19 @@ fn ids(items: impl IntoIterator<Item = clean::Item>, tcx: TyCtxt<'_>) -> Vec<Id>\n         .map(|i| from_item_id_with_name(i.item_id, tcx, i.name))\n         .collect()\n }\n+\n+fn ids_keeping_stripped(\n+    items: impl IntoIterator<Item = clean::Item>,\n+    tcx: TyCtxt<'_>,\n+) -> Vec<Option<Id>> {\n+    items\n+        .into_iter()\n+        .map(|i| {\n+            if !i.is_stripped() && !i.is_keyword() {\n+                Some(from_item_id_with_name(i.item_id, tcx, i.name))\n+            } else {\n+                None\n+            }\n+        })\n+        .collect()\n+}"}, {"sha": "eea62f3af5ab4de437119a3b9b98df9f4a978f91", "filename": "src/rustdoc-json-types/lib.rs", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Frustdoc-json-types%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Frustdoc-json-types%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2Flib.rs?ref=b59c1aa29891da79df8fbba2ea915ac2275781e2", "patch": "@@ -9,7 +9,7 @@ use std::path::PathBuf;\n use serde::{Deserialize, Serialize};\n \n /// rustdoc format-version.\n-pub const FORMAT_VERSION: u32 = 19;\n+pub const FORMAT_VERSION: u32 = 20;\n \n /// A `Crate` is the root of the emitted JSON blob. It contains all type/documentation information\n /// about the language items in the local crate, as well as info about external items to allow\n@@ -308,9 +308,36 @@ pub struct Enum {\n #[serde(rename_all = \"snake_case\")]\n #[serde(tag = \"variant_kind\", content = \"variant_inner\")]\n pub enum Variant {\n+    /// A variant with no parentheses, and possible discriminant.\n+    ///\n+    /// ```rust\n+    /// enum Demo {\n+    ///     PlainVariant,\n+    ///     PlainWithDiscriminant = 1,\n+    /// }\n+    /// ```\n     Plain(Option<Discriminant>),\n-    Tuple(Vec<Type>),\n-    Struct(Vec<Id>),\n+    /// A variant with unnamed fields.\n+    ///\n+    /// Unlike most of json, `#[doc(hidden)]` fields will be given as `None`\n+    /// instead of being ommited, because order matters.\n+    ///\n+    /// ```rust\n+    /// enum Demo {\n+    ///     TupleVariant(i32),\n+    ///     EmptyTupleVariant(),\n+    /// }\n+    /// ```\n+    Tuple(Vec<Option<Id>>),\n+    /// A variant with named fields.\n+    ///\n+    /// ```rust\n+    /// enum Demo {\n+    ///     StructVariant { x: i32 },\n+    ///     EmptyStructVariant {},\n+    /// }\n+    /// ```\n+    Struct { fields: Vec<Id>, fields_stripped: bool },\n }\n \n #[derive(Clone, Debug, PartialEq, Eq, Hash, Serialize, Deserialize)]"}, {"sha": "e6310cc3b997c28860234fd3c461596c8ec9ada7", "filename": "src/test/rustdoc-json/enums/field_hidden.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Ftest%2Frustdoc-json%2Fenums%2Ffield_hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Ftest%2Frustdoc-json%2Fenums%2Ffield_hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fenums%2Ffield_hidden.rs?ref=b59c1aa29891da79df8fbba2ea915ac2275781e2", "patch": "@@ -6,7 +6,7 @@\n // @has \"$.index[*][?(@.name=='ParseError')]\"\n // @has \"$.index[*][?(@.name=='UnexpectedEndTag')]\"\n // @is \"$.index[*][?(@.name=='UnexpectedEndTag')].inner.variant_kind\" '\"tuple\"'\n-// @is \"$.index[*][?(@.name=='UnexpectedEndTag')].inner.variant_inner\" []\n+// @is \"$.index[*][?(@.name=='UnexpectedEndTag')].inner.variant_inner\" [null]\n \n pub enum ParseError {\n     UnexpectedEndTag(#[doc(hidden)] u32),", "previous_filename": "src/test/rustdoc-json/enum_variant_hidden.rs"}, {"sha": "e9ea3ae23c226808ff861878613b359aca050163", "filename": "src/test/rustdoc-json/enums/kind.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Ftest%2Frustdoc-json%2Fenums%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Ftest%2Frustdoc-json%2Fenums%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fenums%2Fkind.rs?ref=b59c1aa29891da79df8fbba2ea915ac2275781e2", "patch": "@@ -0,0 +1,37 @@\n+// ignore-tidy-linelength\n+\n+#![feature(no_core)]\n+#![no_core]\n+\n+pub enum Foo {\n+    // @set Unit = \"$.index[*][?(@.name=='Unit')].id\"\n+    // @is \"$.index[*][?(@.name=='Unit')].inner.variant_kind\" '\"plain\"'\n+    // @is \"$.index[*][?(@.name=='Unit')].inner.variant_inner\" null\n+    Unit,\n+    // @set Named = \"$.index[*][?(@.name=='Named')].id\"\n+    // @is \"$.index[*][?(@.name=='Named')].inner.variant_kind\" '\"struct\"'\n+    // @is \"$.index[*][?(@.name=='Named')].inner.variant_inner\" '{\"fields\": [], \"fields_stripped\": false}'\n+    Named {},\n+    // @set Tuple = \"$.index[*][?(@.name=='Tuple')].id\"\n+    // @is \"$.index[*][?(@.name=='Tuple')].inner.variant_kind\" '\"tuple\"'\n+    // @is \"$.index[*][?(@.name=='Tuple')].inner.variant_inner\" []\n+    Tuple(),\n+    // @set NamedField = \"$.index[*][?(@.name=='NamedField')].id\"\n+    // @set x = \"$.index[*][?(@.name=='x' && @.kind=='struct_field')].id\"\n+    // @is \"$.index[*][?(@.name=='NamedField')].inner.variant_kind\" '\"struct\"'\n+    // @is \"$.index[*][?(@.name=='NamedField')].inner.variant_inner.fields[*]\" $x\n+    // @is \"$.index[*][?(@.name=='NamedField')].inner.variant_inner.fields_stripped\" false\n+    NamedField { x: i32 },\n+    // @set TupleField = \"$.index[*][?(@.name=='TupleField')].id\"\n+    // @is \"$.index[*][?(@.name=='TupleField')].inner.variant_kind\" '\"tuple\"'\n+    // @set tup_field = \"$.index[*][?(@.name=='0' && @.kind=='struct_field')].id\"\n+    // @is \"$.index[*][?(@.name=='TupleField')].inner.variant_inner[*]\" $tup_field\n+    TupleField(i32),\n+}\n+\n+// @is    \"$.index[*][?(@.name=='Foo')].inner.variants[0]\" $Unit\n+// @is    \"$.index[*][?(@.name=='Foo')].inner.variants[1]\" $Named\n+// @is    \"$.index[*][?(@.name=='Foo')].inner.variants[2]\" $Tuple\n+// @is    \"$.index[*][?(@.name=='Foo')].inner.variants[3]\" $NamedField\n+// @is    \"$.index[*][?(@.name=='Foo')].inner.variants[4]\" $TupleField\n+// @count \"$.index[*][?(@.name=='Foo')].inner.variants[*]\" 5"}, {"sha": "f612a34a4927744b55462662c7ee457aef6fa5cf", "filename": "src/test/rustdoc-json/enums/struct_field_hidden.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Ftest%2Frustdoc-json%2Fenums%2Fstruct_field_hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Ftest%2Frustdoc-json%2Fenums%2Fstruct_field_hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fenums%2Fstruct_field_hidden.rs?ref=b59c1aa29891da79df8fbba2ea915ac2275781e2", "patch": "@@ -0,0 +1,17 @@\n+pub enum Foo {\n+    Variant {\n+        #[doc(hidden)]\n+        a: i32,\n+        // @set b = \"$.index[*][?(@.name=='b')].id\"\n+        b: i32,\n+        #[doc(hidden)]\n+        x: i32,\n+        // @set y = \"$.index[*][?(@.name=='y')].id\"\n+        y: i32,\n+    },\n+    // @is \"$.index[*][?(@.name=='Variant')].inner.variant_kind\" '\"struct\"'\n+    // @is \"$.index[*][?(@.name=='Variant')].inner.variant_inner.fields_stripped\" true\n+    // @is \"$.index[*][?(@.name=='Variant')].inner.variant_inner.fields[0]\" $b\n+    // @is \"$.index[*][?(@.name=='Variant')].inner.variant_inner.fields[1]\" $y\n+    // @count \"$.index[*][?(@.name=='Variant')].inner.variant_inner.fields[*]\" 2\n+}"}, {"sha": "f546eaa0d172df6beb83ecba8d83f213318f50b2", "filename": "src/test/rustdoc-json/enums/tuple_fields_hidden.rs", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Ftest%2Frustdoc-json%2Fenums%2Ftuple_fields_hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59c1aa29891da79df8fbba2ea915ac2275781e2/src%2Ftest%2Frustdoc-json%2Fenums%2Ftuple_fields_hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fenums%2Ftuple_fields_hidden.rs?ref=b59c1aa29891da79df8fbba2ea915ac2275781e2", "patch": "@@ -0,0 +1,94 @@\n+#![feature(no_core)]\n+#![no_core]\n+\n+// @set 1.1.0 = \"$.index[*][?(@.docs=='1.1.0')].id\"\n+// @set 2.1.0 = \"$.index[*][?(@.docs=='2.1.0')].id\"\n+// @set 2.1.1 = \"$.index[*][?(@.docs=='2.1.1')].id\"\n+// @set 2.2.1 = \"$.index[*][?(@.docs=='2.2.1')].id\"\n+// @set 2.3.0 = \"$.index[*][?(@.docs=='2.3.0')].id\"\n+// @set 3.1.1 = \"$.index[*][?(@.docs=='3.1.1')].id\"\n+// @set 3.1.2 = \"$.index[*][?(@.docs=='3.1.2')].id\"\n+// @set 3.2.0 = \"$.index[*][?(@.docs=='3.2.0')].id\"\n+// @set 3.2.2 = \"$.index[*][?(@.docs=='3.2.2')].id\"\n+// @set 3.3.0 = \"$.index[*][?(@.docs=='3.3.0')].id\"\n+// @set 3.3.1 = \"$.index[*][?(@.docs=='3.3.1')].id\"\n+\n+pub enum EnumWithStrippedTupleVariants {\n+    // @is    \"$.index[*][?(@.name=='None')].inner.variant_kind\" '\"tuple\"'\n+    // @count \"$.index[*][?(@.name=='None')].inner.variant_inner[*]\" 0\n+    None(),\n+\n+    // @is    \"$.index[*][?(@.name=='One')].inner.variant_kind\" '\"tuple\"'\n+    // @count \"$.index[*][?(@.name=='One')].inner.variant_inner[*]\" 1\n+    // @is    \"$.index[*][?(@.name=='One')].inner.variant_inner[0]\" $1.1.0\n+    One(/** 1.1.0*/ bool),\n+    // @is    \"$.index[*][?(@.name=='OneHidden')].inner.variant_kind\" '\"tuple\"'\n+    // @count \"$.index[*][?(@.name=='OneHidden')].inner.variant_inner[*]\" 1\n+    // @is    \"$.index[*][?(@.name=='OneHidden')].inner.variant_inner[0]\" null\n+    OneHidden(#[doc(hidden)] bool),\n+\n+    // @is    \"$.index[*][?(@.name=='Two')].inner.variant_kind\" '\"tuple\"'\n+    // @count \"$.index[*][?(@.name=='Two')].inner.variant_inner[*]\" 2\n+    // @is    \"$.index[*][?(@.name=='Two')].inner.variant_inner[0]\" $2.1.0\n+    // @is    \"$.index[*][?(@.name=='Two')].inner.variant_inner[1]\" $2.1.1\n+    Two(/** 2.1.0*/ bool, /** 2.1.1*/ bool),\n+    // @is    \"$.index[*][?(@.name=='TwoLeftHidden')].inner.variant_kind\" '\"tuple\"'\n+    // @count \"$.index[*][?(@.name=='TwoLeftHidden')].inner.variant_inner[*]\" 2\n+    // @is    \"$.index[*][?(@.name=='TwoLeftHidden')].inner.variant_inner[0]\" null\n+    // @is    \"$.index[*][?(@.name=='TwoLeftHidden')].inner.variant_inner[1]\" $2.2.1\n+    TwoLeftHidden(#[doc(hidden)] bool, /** 2.2.1*/ bool),\n+    // @is    \"$.index[*][?(@.name=='TwoRightHidden')].inner.variant_kind\" '\"tuple\"'\n+    // @count \"$.index[*][?(@.name=='TwoRightHidden')].inner.variant_inner[*]\" 2\n+    // @is    \"$.index[*][?(@.name=='TwoRightHidden')].inner.variant_inner[0]\" $2.3.0\n+    // @is    \"$.index[*][?(@.name=='TwoRightHidden')].inner.variant_inner[1]\" null\n+    TwoRightHidden(/** 2.3.0*/ bool, #[doc(hidden)] bool),\n+    // @is    \"$.index[*][?(@.name=='TwoBothHidden')].inner.variant_kind\" '\"tuple\"'\n+    // @count \"$.index[*][?(@.name=='TwoBothHidden')].inner.variant_inner[*]\" 2\n+    // @is    \"$.index[*][?(@.name=='TwoBothHidden')].inner.variant_inner[0]\" null\n+    // @is    \"$.index[*][?(@.name=='TwoBothHidden')].inner.variant_inner[1]\" null\n+    TwoBothHidden(#[doc(hidden)] bool, #[doc(hidden)] bool),\n+\n+    // @is    \"$.index[*][?(@.name=='Three1')].inner.variant_kind\" '\"tuple\"'\n+    // @count \"$.index[*][?(@.name=='Three1')].inner.variant_inner[*]\" 3\n+    // @is    \"$.index[*][?(@.name=='Three1')].inner.variant_inner[0]\" null\n+    // @is    \"$.index[*][?(@.name=='Three1')].inner.variant_inner[1]\" $3.1.1\n+    // @is    \"$.index[*][?(@.name=='Three1')].inner.variant_inner[2]\" $3.1.2\n+    Three1(#[doc(hidden)] bool, /** 3.1.1*/ bool, /** 3.1.2*/ bool),\n+    // @is    \"$.index[*][?(@.name=='Three2')].inner.variant_kind\" '\"tuple\"'\n+    // @count \"$.index[*][?(@.name=='Three2')].inner.variant_inner[*]\" 3\n+    // @is    \"$.index[*][?(@.name=='Three2')].inner.variant_inner[0]\" $3.2.0\n+    // @is    \"$.index[*][?(@.name=='Three2')].inner.variant_inner[1]\" null\n+    // @is    \"$.index[*][?(@.name=='Three2')].inner.variant_inner[2]\" $3.2.2\n+    Three2(/** 3.2.0*/ bool, #[doc(hidden)] bool, /** 3.2.2*/ bool),\n+    // @is    \"$.index[*][?(@.name=='Three3')].inner.variant_kind\" '\"tuple\"'\n+    // @count \"$.index[*][?(@.name=='Three3')].inner.variant_inner[*]\" 3\n+    // @is    \"$.index[*][?(@.name=='Three3')].inner.variant_inner[0]\" $3.3.0\n+    // @is    \"$.index[*][?(@.name=='Three3')].inner.variant_inner[1]\" $3.3.1\n+    // @is    \"$.index[*][?(@.name=='Three3')].inner.variant_inner[2]\" null\n+    Three3(/** 3.3.0*/ bool, /** 3.3.1*/ bool, #[doc(hidden)] bool),\n+}\n+\n+\n+// @is \"$.index[*][?(@.docs=='1.1.0')].name\" '\"0\"'\n+// @is \"$.index[*][?(@.docs=='2.1.0')].name\" '\"0\"'\n+// @is \"$.index[*][?(@.docs=='2.1.1')].name\" '\"1\"'\n+// @is \"$.index[*][?(@.docs=='2.2.1')].name\" '\"1\"'\n+// @is \"$.index[*][?(@.docs=='2.3.0')].name\" '\"0\"'\n+// @is \"$.index[*][?(@.docs=='3.1.1')].name\" '\"1\"'\n+// @is \"$.index[*][?(@.docs=='3.1.2')].name\" '\"2\"'\n+// @is \"$.index[*][?(@.docs=='3.2.0')].name\" '\"0\"'\n+// @is \"$.index[*][?(@.docs=='3.2.2')].name\" '\"2\"'\n+// @is \"$.index[*][?(@.docs=='3.3.0')].name\" '\"0\"'\n+// @is \"$.index[*][?(@.docs=='3.3.1')].name\" '\"1\"'\n+\n+// @is \"$.index[*][?(@.docs=='1.1.0')].inner\" '{\"kind\": \"primitive\", \"inner\": \"bool\"}'\n+// @is \"$.index[*][?(@.docs=='2.1.0')].inner\" '{\"kind\": \"primitive\", \"inner\": \"bool\"}'\n+// @is \"$.index[*][?(@.docs=='2.1.1')].inner\" '{\"kind\": \"primitive\", \"inner\": \"bool\"}'\n+// @is \"$.index[*][?(@.docs=='2.2.1')].inner\" '{\"kind\": \"primitive\", \"inner\": \"bool\"}'\n+// @is \"$.index[*][?(@.docs=='2.3.0')].inner\" '{\"kind\": \"primitive\", \"inner\": \"bool\"}'\n+// @is \"$.index[*][?(@.docs=='3.1.1')].inner\" '{\"kind\": \"primitive\", \"inner\": \"bool\"}'\n+// @is \"$.index[*][?(@.docs=='3.1.2')].inner\" '{\"kind\": \"primitive\", \"inner\": \"bool\"}'\n+// @is \"$.index[*][?(@.docs=='3.2.0')].inner\" '{\"kind\": \"primitive\", \"inner\": \"bool\"}'\n+// @is \"$.index[*][?(@.docs=='3.2.2')].inner\" '{\"kind\": \"primitive\", \"inner\": \"bool\"}'\n+// @is \"$.index[*][?(@.docs=='3.3.0')].inner\" '{\"kind\": \"primitive\", \"inner\": \"bool\"}'\n+// @is \"$.index[*][?(@.docs=='3.3.1')].inner\" '{\"kind\": \"primitive\", \"inner\": \"bool\"}'"}]}