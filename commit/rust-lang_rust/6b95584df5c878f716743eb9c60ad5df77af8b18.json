{"sha": "6b95584df5c878f716743eb9c60ad5df77af8b18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiOTU1ODRkZjVjODc4ZjcxNjc0M2ViOWM2MGFkNWRmNzdhZjhiMTg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-19T23:05:35Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-19T23:07:12Z"}, "message": "stdlib: Add vec growth functions that use a thunk to initialize elements", "tree": {"sha": "030d64626083c277abe5b7bf02800ab4ddd8df06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/030d64626083c277abe5b7bf02800ab4ddd8df06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b95584df5c878f716743eb9c60ad5df77af8b18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b95584df5c878f716743eb9c60ad5df77af8b18", "html_url": "https://github.com/rust-lang/rust/commit/6b95584df5c878f716743eb9c60ad5df77af8b18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b95584df5c878f716743eb9c60ad5df77af8b18/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4dd57705c7b203ad0efed4ddcc0e3959e65d627", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4dd57705c7b203ad0efed4ddcc0e3959e65d627", "html_url": "https://github.com/rust-lang/rust/commit/a4dd57705c7b203ad0efed4ddcc0e3959e65d627"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "ba6040738564ddfd8a34f569525f4cef06d42485", "filename": "src/lib/vec.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6b95584df5c878f716743eb9c60ad5df77af8b18/src%2Flib%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b95584df5c878f716743eb9c60ad5df77af8b18/src%2Flib%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fvec.rs?ref=6b95584df5c878f716743eb9c60ad5df77af8b18", "patch": "@@ -206,6 +206,20 @@ fn grow_set[T](&vec[mutable T] v, uint index, &T initval, &T val) {\n     v.(index) = val;\n }\n \n+fn grow_init_fn[T](&array[T] v, uint n, fn()->T init_fn) {\n+    let uint i = n;\n+    while (i > 0u) {\n+        i -= 1u;\n+        v += [init_fn()];\n+    }\n+}\n+\n+fn grow_init_fn_set[T](&array[T] v, uint index, fn()->T init_fn, &T val) {\n+    auto length = vec::len(v);\n+    if (index >= length) { grow_init_fn(v, index - length + 1u, init_fn); }\n+    v.(index) = val;\n+}\n+\n fn map[T, U](&option::operator[T,U] f, &array[T] v) -> vec[U] {\n     let vec[U] u = alloc[U](len[T](v));\n     for (T ve in v) {"}]}