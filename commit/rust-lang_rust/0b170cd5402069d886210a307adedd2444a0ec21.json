{"sha": "0b170cd5402069d886210a307adedd2444a0ec21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMTcwY2Q1NDAyMDY5ZDg4NjIxMGEzMDdhZGVkZDI0NDRhMGVjMjE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-29T02:05:19Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-30T17:37:00Z"}, "message": "Add cycle_delay_bug to proc macro", "tree": {"sha": "befbdd1acefa5ee1bb55c9975ca9eea6251a1adf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/befbdd1acefa5ee1bb55c9975ca9eea6251a1adf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b170cd5402069d886210a307adedd2444a0ec21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b170cd5402069d886210a307adedd2444a0ec21", "html_url": "https://github.com/rust-lang/rust/commit/0b170cd5402069d886210a307adedd2444a0ec21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b170cd5402069d886210a307adedd2444a0ec21/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc8581d7420b63b2cc5eac1c57a40de785859448", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc8581d7420b63b2cc5eac1c57a40de785859448", "html_url": "https://github.com/rust-lang/rust/commit/fc8581d7420b63b2cc5eac1c57a40de785859448"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "194563454b8580640b2adb4fe5dc50b3aba0addf", "filename": "src/librustc_macros/src/query.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0b170cd5402069d886210a307adedd2444a0ec21/src%2Flibrustc_macros%2Fsrc%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b170cd5402069d886210a307adedd2444a0ec21/src%2Flibrustc_macros%2Fsrc%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fquery.rs?ref=0b170cd5402069d886210a307adedd2444a0ec21", "patch": "@@ -43,6 +43,9 @@ enum QueryModifier {\n     /// A cycle error for this query aborting the compilation with a fatal error.\n     FatalCycle,\n \n+    /// A cycle error results in a delay_bug call\n+    CycleDelayBug,\n+\n     /// Don't hash the result, instead just mark a query red if it runs\n     NoHash,\n \n@@ -101,6 +104,8 @@ impl Parse for QueryModifier {\n             Ok(QueryModifier::LoadCached(tcx, id, block))\n         } else if modifier == \"fatal_cycle\" {\n             Ok(QueryModifier::FatalCycle)\n+        } else if modifier == \"cycle_delay_bug\" {\n+            Ok(QueryModifier::CycleDelayBug)\n         } else if modifier == \"no_hash\" {\n             Ok(QueryModifier::NoHash)\n         } else if modifier == \"no_force\" {\n@@ -207,6 +212,9 @@ struct QueryModifiers {\n     /// A cycle error for this query aborting the compilation with a fatal error.\n     fatal_cycle: bool,\n \n+    /// A cycle error results in a delay_bug call\n+    cycle_delay_bug: bool,\n+\n     /// Don't hash the result, instead just mark a query red if it runs\n     no_hash: bool,\n \n@@ -226,6 +234,7 @@ fn process_modifiers(query: &mut Query) -> QueryModifiers {\n     let mut cache = None;\n     let mut desc = None;\n     let mut fatal_cycle = false;\n+    let mut cycle_delay_bug = false;\n     let mut no_hash = false;\n     let mut no_force = false;\n     let mut anon = false;\n@@ -256,6 +265,12 @@ fn process_modifiers(query: &mut Query) -> QueryModifiers {\n                 }\n                 fatal_cycle = true;\n             }\n+            QueryModifier::CycleDelayBug => {\n+                if cycle_delay_bug {\n+                    panic!(\"duplicate modifier `cycle_delay_bug` for query `{}`\", query.name);\n+                }\n+                cycle_delay_bug = true;\n+            }\n             QueryModifier::NoHash => {\n                 if no_hash {\n                     panic!(\"duplicate modifier `no_hash` for query `{}`\", query.name);\n@@ -287,6 +302,7 @@ fn process_modifiers(query: &mut Query) -> QueryModifiers {\n         cache,\n         desc,\n         fatal_cycle,\n+        cycle_delay_bug,\n         no_hash,\n         no_force,\n         anon,\n@@ -397,6 +413,10 @@ pub fn rustc_queries(input: TokenStream) -> TokenStream {\n             if modifiers.fatal_cycle {\n                 attributes.push(quote! { fatal_cycle });\n             };\n+            // Pass on the cycle_delay_bug modifier\n+            if modifiers.cycle_delay_bug {\n+                attributes.push(quote! { cycle_delay_bug });\n+            };\n             // Pass on the no_hash modifier\n             if modifiers.no_hash {\n                 attributes.push(quote! { no_hash });"}]}