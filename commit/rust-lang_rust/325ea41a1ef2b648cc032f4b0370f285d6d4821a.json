{"sha": "325ea41a1ef2b648cc032f4b0370f285d6d4821a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNWVhNDFhMWVmMmI2NDhjYzAzMmY0YjAzNzBmMjg1ZDZkNDgyMWE=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-08-19T18:39:41Z"}, "committer": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-08-19T19:01:55Z"}, "message": "Getting rid of superfluous log statement.", "tree": {"sha": "6a91fefecd6b363b4a50a7b4f0125f0753a91bc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a91fefecd6b363b4a50a7b4f0125f0753a91bc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/325ea41a1ef2b648cc032f4b0370f285d6d4821a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/325ea41a1ef2b648cc032f4b0370f285d6d4821a", "html_url": "https://github.com/rust-lang/rust/commit/325ea41a1ef2b648cc032f4b0370f285d6d4821a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/325ea41a1ef2b648cc032f4b0370f285d6d4821a/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7e559ee2e04799adfb92b0d8a54758678c170dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7e559ee2e04799adfb92b0d8a54758678c170dc", "html_url": "https://github.com/rust-lang/rust/commit/a7e559ee2e04799adfb92b0d8a54758678c170dc"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "5361a686814ab9ab4b2d91a0402d7091a6fb7cf3", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/325ea41a1ef2b648cc032f4b0370f285d6d4821a/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/325ea41a1ef2b648cc032f4b0370f285d6d4821a/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=325ea41a1ef2b648cc032f4b0370f285d6d4821a", "patch": "@@ -1033,10 +1033,8 @@ fn parse_bottom_expr(p: &parser) -> @ast::expr {\n         ex = ast::expr_copy(e);\n         hi = e.span.hi;\n     } else if (eat_word(p, \"self\")) {\n-        log \"parsing a self-call...\";\n         expect(p, token::DOT);\n         // The rest is a call expression.\n-\n         let f: @ast::expr = parse_self_method(p);\n         let es =\n             parse_seq(token::LPAREN, token::RPAREN, some(token::COMMA),"}]}