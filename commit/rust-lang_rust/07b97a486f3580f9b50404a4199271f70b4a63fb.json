{"sha": "07b97a486f3580f9b50404a4199271f70b4a63fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3Yjk3YTQ4NmYzNTgwZjliNTA0MDRhNDE5OTI3MWY3MGI0YTYzZmI=", "commit": {"author": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2018-11-25T19:31:35Z"}, "committer": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2018-11-25T19:31:35Z"}, "message": "Use a reference rather than take ownership", "tree": {"sha": "7686eff81e59912540725235c93ea2be3b9a25c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7686eff81e59912540725235c93ea2be3b9a25c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07b97a486f3580f9b50404a4199271f70b4a63fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07b97a486f3580f9b50404a4199271f70b4a63fb", "html_url": "https://github.com/rust-lang/rust/commit/07b97a486f3580f9b50404a4199271f70b4a63fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07b97a486f3580f9b50404a4199271f70b4a63fb/comments", "author": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51e1f5560de3f9c8ae673c8014a5ed9547c1ce86", "url": "https://api.github.com/repos/rust-lang/rust/commits/51e1f5560de3f9c8ae673c8014a5ed9547c1ce86", "html_url": "https://github.com/rust-lang/rust/commit/51e1f5560de3f9c8ae673c8014a5ed9547c1ce86"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "56ccea19b8a3fc9a9facedb835a846cb6baa2d85", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07b97a486f3580f9b50404a4199271f70b4a63fb/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07b97a486f3580f9b50404a4199271f70b4a63fb/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=07b97a486f3580f9b50404a4199271f70b4a63fb", "patch": "@@ -4800,7 +4800,7 @@ impl ParseIntError {\n                reason = \"it can be useful to match errors when making error messages \\\n                          for integer parsing\",\n                issue = \"22639\")]\n-    pub fn kind(self) -> IntErrorKind {\n+    pub fn kind(&self) -> &IntErrorKind {\n         self.kind\n     }\n     #[unstable(feature = \"int_error_internals\","}]}