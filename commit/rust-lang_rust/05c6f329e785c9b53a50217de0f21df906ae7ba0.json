{"sha": "05c6f329e785c9b53a50217de0f21df906ae7ba0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YzZmMzI5ZTc4NWM5YjUzYTUwMjE3ZGUwZjIxZGY5MDZhZTdiYTA=", "commit": {"author": {"name": "Tom Jakubowski", "email": "tom@crystae.net", "date": "2019-09-24T01:37:20Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-01-30T12:39:01Z"}, "message": "rustdoc: emit JS paths for struct-like variants\n\nOn the backend, rustdoc now emits `paths` entries to a crate's search\nindex for struct-like enum variants, and index items of type structfield\nwhich belong to such variants point to their variant parents in the\n`paths` table, rather than their enum grandparents.  The path entry for\na variant is the fully qualified module path plus the enum name.\n\nOn the frontend, the search code recognizes structfields belonging to\nstructlike variants in the `paths` table and re-constructs the URL to\nthe field's anchor on the enum documentation page.\n\ncloses #16017", "tree": {"sha": "88b76de47b013a520fec929bcc399576f0446629", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88b76de47b013a520fec929bcc399576f0446629"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05c6f329e785c9b53a50217de0f21df906ae7ba0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05c6f329e785c9b53a50217de0f21df906ae7ba0", "html_url": "https://github.com/rust-lang/rust/commit/05c6f329e785c9b53a50217de0f21df906ae7ba0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05c6f329e785c9b53a50217de0f21df906ae7ba0/comments", "author": {"login": "tomjakubowski", "id": 667901, "node_id": "MDQ6VXNlcjY2NzkwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/667901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomjakubowski", "html_url": "https://github.com/tomjakubowski", "followers_url": "https://api.github.com/users/tomjakubowski/followers", "following_url": "https://api.github.com/users/tomjakubowski/following{/other_user}", "gists_url": "https://api.github.com/users/tomjakubowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomjakubowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomjakubowski/subscriptions", "organizations_url": "https://api.github.com/users/tomjakubowski/orgs", "repos_url": "https://api.github.com/users/tomjakubowski/repos", "events_url": "https://api.github.com/users/tomjakubowski/events{/privacy}", "received_events_url": "https://api.github.com/users/tomjakubowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b60f08bd6d3fbe784eb47a57e0c41954454af3dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b60f08bd6d3fbe784eb47a57e0c41954454af3dd", "html_url": "https://github.com/rust-lang/rust/commit/b60f08bd6d3fbe784eb47a57e0c41954454af3dd"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "069139ec691080b0849fa58ff27f963b1dd59d16", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/05c6f329e785c9b53a50217de0f21df906ae7ba0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/05c6f329e785c9b53a50217de0f21df906ae7ba0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=05c6f329e785c9b53a50217de0f21df906ae7ba0", "patch": "@@ -1364,14 +1364,15 @@ function getSearchElement() {\n             var href;\n             var type = itemTypes[item.ty];\n             var name = item.name;\n+            var path = item.path;\n \n             if (type === \"mod\") {\n-                displayPath = item.path + \"::\";\n-                href = rootPath + item.path.replace(/::/g, \"/\") + \"/\" +\n+                displayPath = path + \"::\";\n+                href = rootPath + path.replace(/::/g, \"/\") + \"/\" +\n                        name + \"/index.html\";\n             } else if (type === \"primitive\" || type === \"keyword\") {\n                 displayPath = \"\";\n-                href = rootPath + item.path.replace(/::/g, \"/\") +\n+                href = rootPath + path.replace(/::/g, \"/\") +\n                        \"/\" + type + \".\" + name + \".html\";\n             } else if (type === \"externcrate\") {\n                 displayPath = \"\";\n@@ -1380,14 +1381,27 @@ function getSearchElement() {\n                 var myparent = item.parent;\n                 var anchor = \"#\" + type + \".\" + name;\n                 var parentType = itemTypes[myparent.ty];\n+                var pageType = parentType;\n+                var pageName = myparent.name;\n+\n                 if (parentType === \"primitive\") {\n                     displayPath = myparent.name + \"::\";\n+                } else if (type === \"structfield\" && parentType === \"variant\") {\n+                    // Structfields belonging to variants are special: the\n+                    // final path element is the enum name.\n+                    var splitPath = item.path.split(\"::\");\n+                    var enumName = splitPath.pop();\n+                    path = splitPath.join(\"::\");\n+                    displayPath = path + \"::\" + enumName + \"::\" + myparent.name + \"::\";\n+                    anchor = \"#variant.\" + myparent.name + \".field.\" + name;\n+                    pageType = \"enum\";\n+                    pageName = enumName;\n                 } else {\n-                    displayPath = item.path + \"::\" + myparent.name + \"::\";\n+                    displayPath = path + \"::\" + myparent.name + \"::\";\n                 }\n-                href = rootPath + item.path.replace(/::/g, \"/\") +\n-                       \"/\" + parentType +\n-                       \".\" + myparent.name +\n+                href = rootPath + path.replace(/::/g, \"/\") +\n+                       \"/\" + pageType +\n+                       \".\" + pageName +\n                        \".html\" + anchor;\n             } else {\n                 displayPath = item.path + \"::\";\n@@ -1668,7 +1682,7 @@ function getSearchElement() {\n                 //              (String) name]\n                 var paths = rawSearchIndex[crate].p;\n \n-                // convert `paths` into an object form\n+                // convert `rawPaths` entries into object form\n                 var len = paths.length;\n                 for (i = 0; i < len; ++i) {\n                     paths[i] = {ty: paths[i][0], name: paths[i][1]};"}]}