{"sha": "3b5b988526b9cec74422f46e20ab1b2f9826d39c", "node_id": "C_kwDOAAsO6NoAKDNiNWI5ODg1MjZiOWNlYzc0NDIyZjQ2ZTIwYWIxYjJmOTgyNmQzOWM", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-12T16:36:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-12T16:36:14Z"}, "message": "prettyfy", "tree": {"sha": "dc2644c96f3cea0e29539a236112211d3b82ee6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc2644c96f3cea0e29539a236112211d3b82ee6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b5b988526b9cec74422f46e20ab1b2f9826d39c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b5b988526b9cec74422f46e20ab1b2f9826d39c", "html_url": "https://github.com/rust-lang/rust/commit/3b5b988526b9cec74422f46e20ab1b2f9826d39c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b5b988526b9cec74422f46e20ab1b2f9826d39c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "980dd56cdc69efda8b4da348cbd062b0fa204108", "url": "https://api.github.com/repos/rust-lang/rust/commits/980dd56cdc69efda8b4da348cbd062b0fa204108", "html_url": "https://github.com/rust-lang/rust/commit/980dd56cdc69efda8b4da348cbd062b0fa204108"}], "stats": {"total": 39, "additions": 20, "deletions": 19}, "files": [{"sha": "1c0672492dab80c705b710cf502e2e1990a28f6a", "filename": "crates/parser/src/tokens.rs", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/3b5b988526b9cec74422f46e20ab1b2f9826d39c/crates%2Fparser%2Fsrc%2Ftokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b5b988526b9cec74422f46e20ab1b2f9826d39c/crates%2Fparser%2Fsrc%2Ftokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftokens.rs?ref=3b5b988526b9cec74422f46e20ab1b2f9826d39c", "patch": "@@ -18,11 +18,16 @@ pub struct Tokens {\n     contextual_kind: Vec<SyntaxKind>,\n }\n \n+/// `pub` impl used by callers to create `Tokens`.\n impl Tokens {\n     #[inline]\n     pub fn push(&mut self, kind: SyntaxKind) {\n         self.push_impl(kind, SyntaxKind::EOF)\n     }\n+    #[inline]\n+    pub fn push_ident(&mut self, contextual_kind: SyntaxKind) {\n+        self.push_impl(SyntaxKind::IDENT, contextual_kind)\n+    }\n     /// Sets jointness for the last token we've pushed.\n     ///\n     /// This is a separate API rather than an argument to the `push` to make it\n@@ -41,11 +46,9 @@ impl Tokens {\n     /// ```\n     #[inline]\n     pub fn was_joint(&mut self) {\n-        self.set_joint(self.len() - 1);\n-    }\n-    #[inline]\n-    pub fn push_ident(&mut self, contextual_kind: SyntaxKind) {\n-        self.push_impl(SyntaxKind::IDENT, contextual_kind)\n+        let n = self.len() - 1;\n+        let (idx, b_idx) = self.bit_index(n);\n+        self.joint[idx] |= 1 << b_idx;\n     }\n     #[inline]\n     fn push_impl(&mut self, kind: SyntaxKind, contextual_kind: SyntaxKind) {\n@@ -56,22 +59,9 @@ impl Tokens {\n         self.kind.push(kind);\n         self.contextual_kind.push(contextual_kind);\n     }\n-    fn set_joint(&mut self, n: usize) {\n-        let (idx, b_idx) = self.bit_index(n);\n-        self.joint[idx] |= 1 << b_idx;\n-    }\n-    fn bit_index(&self, n: usize) -> (usize, usize) {\n-        let idx = n / (bits::BITS as usize);\n-        let b_idx = n % (bits::BITS as usize);\n-        (idx, b_idx)\n-    }\n-\n-    fn len(&self) -> usize {\n-        self.kind.len()\n-    }\n }\n \n-/// pub(crate) impl used by the parser.\n+/// pub(crate) impl used by the parser to consume `Tokens`.\n impl Tokens {\n     pub(crate) fn kind(&self, idx: usize) -> SyntaxKind {\n         self.kind.get(idx).copied().unwrap_or(SyntaxKind::EOF)\n@@ -84,3 +74,14 @@ impl Tokens {\n         self.joint[idx] & 1 << b_idx != 0\n     }\n }\n+\n+impl Tokens {\n+    fn bit_index(&self, n: usize) -> (usize, usize) {\n+        let idx = n / (bits::BITS as usize);\n+        let b_idx = n % (bits::BITS as usize);\n+        (idx, b_idx)\n+    }\n+    fn len(&self) -> usize {\n+        self.kind.len()\n+    }\n+}"}]}