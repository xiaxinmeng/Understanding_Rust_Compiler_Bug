{"sha": "3dd500de373757fd2b118db0c999e48dd01ff894", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZDUwMGRlMzczNzU3ZmQyYjExOGRiMGM5OTllNDhkZDAxZmY4OTQ=", "commit": {"author": {"name": "Luca Barbieri", "email": "luca@luca-barbieri.com", "date": "2020-04-10T20:42:19Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-04-11T21:49:16Z"}, "message": "Don't emit rerun-if-changed on llvm-config if using system LLVM\n\nThe code was broken because it printed \"llvm-config\" instead of the\nabsolute path to the llvm-config executable, causing Cargo to always\nrebuild librustc_llvm if using system LLVM.\n\nAlso, it's not the build system's job to rebuild when a system library\nchanges, so we simply don't emit \"rerun-if-changed\" if a path to LLVM\nwas not explicitly provided.", "tree": {"sha": "435d7c6cba1f13f63078e02b7bbacf9872f88d3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/435d7c6cba1f13f63078e02b7bbacf9872f88d3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dd500de373757fd2b118db0c999e48dd01ff894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dd500de373757fd2b118db0c999e48dd01ff894", "html_url": "https://github.com/rust-lang/rust/commit/3dd500de373757fd2b118db0c999e48dd01ff894", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dd500de373757fd2b118db0c999e48dd01ff894/comments", "author": {"login": "luca-barbieri", "id": 298418, "node_id": "MDQ6VXNlcjI5ODQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/298418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luca-barbieri", "html_url": "https://github.com/luca-barbieri", "followers_url": "https://api.github.com/users/luca-barbieri/followers", "following_url": "https://api.github.com/users/luca-barbieri/following{/other_user}", "gists_url": "https://api.github.com/users/luca-barbieri/gists{/gist_id}", "starred_url": "https://api.github.com/users/luca-barbieri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luca-barbieri/subscriptions", "organizations_url": "https://api.github.com/users/luca-barbieri/orgs", "repos_url": "https://api.github.com/users/luca-barbieri/repos", "events_url": "https://api.github.com/users/luca-barbieri/events{/privacy}", "received_events_url": "https://api.github.com/users/luca-barbieri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53d58dbf5f8a65189e5f97ef46da6593484a9e79", "url": "https://api.github.com/repos/rust-lang/rust/commits/53d58dbf5f8a65189e5f97ef46da6593484a9e79", "html_url": "https://github.com/rust-lang/rust/commit/53d58dbf5f8a65189e5f97ef46da6593484a9e79"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "f14fc9fc2eba8897fc47462cdf10145f47ae17cb", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3dd500de373757fd2b118db0c999e48dd01ff894/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dd500de373757fd2b118db0c999e48dd01ff894/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=3dd500de373757fd2b118db0c999e48dd01ff894", "patch": "@@ -24,18 +24,28 @@ fn main() {\n     build_helper::restore_library_path();\n \n     let target = env::var(\"TARGET\").expect(\"TARGET was not set\");\n-    let llvm_config = env::var_os(\"LLVM_CONFIG\").map(PathBuf::from).unwrap_or_else(|| {\n-        if let Some(dir) = env::var_os(\"CARGO_TARGET_DIR\").map(PathBuf::from) {\n-            let to_test =\n-                dir.parent().unwrap().parent().unwrap().join(&target).join(\"llvm/bin/llvm-config\");\n-            if Command::new(&to_test).output().is_ok() {\n-                return to_test;\n+    let llvm_config =\n+        env::var_os(\"LLVM_CONFIG\").map(|x| Some(PathBuf::from(x))).unwrap_or_else(|| {\n+            if let Some(dir) = env::var_os(\"CARGO_TARGET_DIR\").map(PathBuf::from) {\n+                let to_test = dir\n+                    .parent()\n+                    .unwrap()\n+                    .parent()\n+                    .unwrap()\n+                    .join(&target)\n+                    .join(\"llvm/bin/llvm-config\");\n+                if Command::new(&to_test).output().is_ok() {\n+                    return Some(to_test);\n+                }\n             }\n-        }\n-        PathBuf::from(\"llvm-config\")\n-    });\n+            None\n+        });\n+\n+    if let Some(llvm_config) = &llvm_config {\n+        println!(\"cargo:rerun-if-changed={}\", llvm_config.display());\n+    }\n+    let llvm_config = llvm_config.unwrap_or_else(|| PathBuf::from(\"llvm-config\"));\n \n-    println!(\"cargo:rerun-if-changed={}\", llvm_config.display());\n     println!(\"cargo:rerun-if-env-changed=LLVM_CONFIG\");\n \n     // Test whether we're cross-compiling LLVM. This is a pretty rare case"}]}