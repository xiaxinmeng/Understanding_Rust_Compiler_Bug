{"sha": "1e99b2ec9dc60dc01a413118051d273ed7688c7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlOTliMmVjOWRjNjBkYzAxYTQxMzExODA1MWQyNzNlZDc2ODhjN2U=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-04-18T02:50:50Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-04-18T02:50:50Z"}, "message": "Give custom error for E0277 on `?` error case", "tree": {"sha": "71d15398deb0eb2ca64bc781b1d1a31c739eb0b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71d15398deb0eb2ca64bc781b1d1a31c739eb0b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e99b2ec9dc60dc01a413118051d273ed7688c7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e99b2ec9dc60dc01a413118051d273ed7688c7e", "html_url": "https://github.com/rust-lang/rust/commit/1e99b2ec9dc60dc01a413118051d273ed7688c7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e99b2ec9dc60dc01a413118051d273ed7688c7e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "007b40be01ca4e0eb0bca875e9134e4f87c9cd4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/007b40be01ca4e0eb0bca875e9134e4f87c9cd4b", "html_url": "https://github.com/rust-lang/rust/commit/007b40be01ca4e0eb0bca875e9134e4f87c9cd4b"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "14c81a806c259fbcda9f11d648765aedb3baae51", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1e99b2ec9dc60dc01a413118051d273ed7688c7e/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99b2ec9dc60dc01a413118051d273ed7688c7e/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=1e99b2ec9dc60dc01a413118051d273ed7688c7e", "patch": "@@ -638,6 +638,18 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                         let OnUnimplementedNote { message, label, note }\n                             = self.on_unimplemented_note(trait_ref, obligation);\n                         let have_alt_message = message.is_some() || label.is_some();\n+                        let is_try = self.tcx.sess.source_map().span_to_snippet(span)\n+                            .map(|s| &s == \"?\")\n+                            .unwrap_or(false);\n+                        let is_from = format!(\"{}\", trait_ref).starts_with(\"std::convert::From<\");\n+                        let message = if is_try && is_from {\n+                            Some(format!(\n+                                \"`?` couldn't convert the error to `{}`\",\n+                                trait_ref.self_ty(),\n+                            ))\n+                        } else {\n+                            message\n+                        };\n \n                         let mut err = struct_span_err!(\n                             self.tcx.sess,"}, {"sha": "84cca5b20af472d800fcc13e5c2ce366ec000683", "filename": "src/test/ui/issues/issue-32709.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e99b2ec9dc60dc01a413118051d273ed7688c7e/src%2Ftest%2Fui%2Fissues%2Fissue-32709.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e99b2ec9dc60dc01a413118051d273ed7688c7e/src%2Ftest%2Fui%2Fissues%2Fissue-32709.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32709.stderr?ref=1e99b2ec9dc60dc01a413118051d273ed7688c7e", "patch": "@@ -1,4 +1,4 @@\n-error[E0277]: the trait bound `(): std::convert::From<{integer}>` is not satisfied\n+error[E0277]: `?` couldn't convert the error to `()`\n   --> $DIR/issue-32709.rs:4:11\n    |\n LL |     Err(5)?;"}, {"sha": "4dfc8e6a2fca497f1dc77ebb8fffd8ec957ce4dd", "filename": "src/test/ui/try-block/try-block-bad-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e99b2ec9dc60dc01a413118051d273ed7688c7e/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99b2ec9dc60dc01a413118051d273ed7688c7e/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.rs?ref=1e99b2ec9dc60dc01a413118051d273ed7688c7e", "patch": "@@ -4,7 +4,7 @@\n \n pub fn main() {\n     let res: Result<u32, i32> = try {\n-        Err(\"\")?; //~ ERROR the trait bound `i32: std::convert::From<&str>` is not satisfied\n+        Err(\"\")?; //~ ERROR `?` couldn't convert the error\n         5\n     };\n "}, {"sha": "13593c4e8e72d8e6c742a6df089ba7b9372a914b", "filename": "src/test/ui/try-block/try-block-bad-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e99b2ec9dc60dc01a413118051d273ed7688c7e/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e99b2ec9dc60dc01a413118051d273ed7688c7e/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-type.stderr?ref=1e99b2ec9dc60dc01a413118051d273ed7688c7e", "patch": "@@ -1,4 +1,4 @@\n-error[E0277]: the trait bound `i32: std::convert::From<&str>` is not satisfied\n+error[E0277]: `?` couldn't convert the error to `i32`\n   --> $DIR/try-block-bad-type.rs:7:16\n    |\n LL |         Err(\"\")?;"}, {"sha": "5d94cee8e37215406317b5e84a2ae5064b16e9c9", "filename": "src/test/ui/try-on-option.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e99b2ec9dc60dc01a413118051d273ed7688c7e/src%2Ftest%2Fui%2Ftry-on-option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e99b2ec9dc60dc01a413118051d273ed7688c7e/src%2Ftest%2Fui%2Ftry-on-option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-on-option.rs?ref=1e99b2ec9dc60dc01a413118051d273ed7688c7e", "patch": "@@ -4,12 +4,12 @@ fn main() {}\n \n fn foo() -> Result<u32, ()> {\n     let x: Option<u32> = None;\n-    x?; //~ the trait bound\n+    x?; //~ ERROR `?` couldn't convert the error\n     Ok(22)\n }\n \n fn bar() -> u32 {\n     let x: Option<u32> = None;\n-    x?; //~ the `?` operator\n+    x?; //~ ERROR the `?` operator\n     22\n }"}, {"sha": "4465fbe14b75cd39f2f9b3265dd245f4738b9f8a", "filename": "src/test/ui/try-on-option.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e99b2ec9dc60dc01a413118051d273ed7688c7e/src%2Ftest%2Fui%2Ftry-on-option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e99b2ec9dc60dc01a413118051d273ed7688c7e/src%2Ftest%2Fui%2Ftry-on-option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-on-option.stderr?ref=1e99b2ec9dc60dc01a413118051d273ed7688c7e", "patch": "@@ -1,4 +1,4 @@\n-error[E0277]: the trait bound `(): std::convert::From<std::option::NoneError>` is not satisfied\n+error[E0277]: `?` couldn't convert the error to `()`\n   --> $DIR/try-on-option.rs:7:6\n    |\n LL |     x?;"}]}