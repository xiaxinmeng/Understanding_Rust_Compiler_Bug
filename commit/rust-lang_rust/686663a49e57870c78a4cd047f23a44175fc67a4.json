{"sha": "686663a49e57870c78a4cd047f23a44175fc67a4", "node_id": "C_kwDOAAsO6NoAKDY4NjY2M2E0OWU1Nzg3MGM3OGE0Y2QwNDdmMjNhNDQxNzVmYzY3YTQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-01T13:45:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-01T13:45:38Z"}, "message": "Auto merge of #93284 - eholk:disable-drop-range-analysis, r=pnkfelix\n\nDisable drop range analysis\n\nThe previous PR, #93165, still performed the drop range analysis despite ignoring the results. Unfortunately, there were ICEs in the analysis as well, so some packages failed to build (see the issue #93197 for an example). This change further disables the analysis and just provides dummy results in that case.", "tree": {"sha": "7d8e48712d2cea7f7461bec6160fb6266f33dca7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d8e48712d2cea7f7461bec6160fb6266f33dca7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/686663a49e57870c78a4cd047f23a44175fc67a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/686663a49e57870c78a4cd047f23a44175fc67a4", "html_url": "https://github.com/rust-lang/rust/commit/686663a49e57870c78a4cd047f23a44175fc67a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/686663a49e57870c78a4cd047f23a44175fc67a4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547f2ba06bc4aa93a375c54e1af3fd1216eeaf62", "url": "https://api.github.com/repos/rust-lang/rust/commits/547f2ba06bc4aa93a375c54e1af3fd1216eeaf62", "html_url": "https://github.com/rust-lang/rust/commit/547f2ba06bc4aa93a375c54e1af3fd1216eeaf62"}, {"sha": "9f9d82ab577d80a00b1c4e1a0a0f1b42a47118d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f9d82ab577d80a00b1c4e1a0a0f1b42a47118d7", "html_url": "https://github.com/rust-lang/rust/commit/9f9d82ab577d80a00b1c4e1a0a0f1b42a47118d7"}], "stats": {"total": 45, "additions": 33, "deletions": 12}, "files": [{"sha": "4b8f01e3535bde8cb7516385fb14c55629fac60a", "filename": "compiler/rustc_typeck/src/check/generator_interior/drop_ranges.rs", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/686663a49e57870c78a4cd047f23a44175fc67a4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/686663a49e57870c78a4cd047f23a44175fc67a4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges.rs?ref=686663a49e57870c78a4cd047f23a44175fc67a4", "patch": "@@ -37,21 +37,27 @@ pub fn compute_drop_ranges<'a, 'tcx>(\n     def_id: DefId,\n     body: &'tcx Body<'tcx>,\n ) -> DropRanges {\n-    let consumed_borrowed_places = find_consumed_and_borrowed(fcx, def_id, body);\n+    if super::ENABLE_DROP_TRACKING {\n+        let consumed_borrowed_places = find_consumed_and_borrowed(fcx, def_id, body);\n \n-    let num_exprs = fcx.tcx.region_scope_tree(def_id).body_expr_count(body.id()).unwrap_or(0);\n-    let mut drop_ranges = build_control_flow_graph(\n-        fcx.tcx.hir(),\n-        fcx.tcx,\n-        &fcx.typeck_results.borrow(),\n-        consumed_borrowed_places,\n-        body,\n-        num_exprs,\n-    );\n+        let num_exprs = fcx.tcx.region_scope_tree(def_id).body_expr_count(body.id()).unwrap_or(0);\n+        let mut drop_ranges = build_control_flow_graph(\n+            fcx.tcx.hir(),\n+            fcx.tcx,\n+            &fcx.typeck_results.borrow(),\n+            consumed_borrowed_places,\n+            body,\n+            num_exprs,\n+        );\n \n-    drop_ranges.propagate_to_fixpoint();\n+        drop_ranges.propagate_to_fixpoint();\n \n-    DropRanges { tracked_value_map: drop_ranges.tracked_value_map, nodes: drop_ranges.nodes }\n+        DropRanges { tracked_value_map: drop_ranges.tracked_value_map, nodes: drop_ranges.nodes }\n+    } else {\n+        // If drop range tracking is not enabled, skip all the analysis and produce an\n+        // empty set of DropRanges.\n+        DropRanges { tracked_value_map: FxHashMap::default(), nodes: IndexVec::new() }\n+    }\n }\n \n /// Applies `f` to consumable node in the HIR subtree pointed to by `place`."}, {"sha": "05ec013d0afd88666d21158eb5b2add9417f9829", "filename": "src/test/ui/async-await/issue-93197.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/686663a49e57870c78a4cd047f23a44175fc67a4/src%2Ftest%2Fui%2Fasync-await%2Fissue-93197.rs", "raw_url": "https://github.com/rust-lang/rust/raw/686663a49e57870c78a4cd047f23a44175fc67a4/src%2Ftest%2Fui%2Fasync-await%2Fissue-93197.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-93197.rs?ref=686663a49e57870c78a4cd047f23a44175fc67a4", "patch": "@@ -0,0 +1,15 @@\n+// Regression test for #93197\n+// check-pass\n+// edition:2021\n+\n+#![feature(try_blocks)]\n+\n+use std::sync::{mpsc, mpsc::SendError};\n+\n+pub async fn foo() {\n+    let (tx, _) = mpsc::channel();\n+\n+    let _: Result<(), SendError<&str>> = try { tx.send(\"hello\")?; };\n+}\n+\n+fn main() {}"}]}