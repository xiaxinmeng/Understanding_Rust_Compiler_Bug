{"sha": "e2e6b709e60f22279b755ceae74e579520c9ae3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyZTZiNzA5ZTYwZjIyMjc5Yjc1NWNlYWU3NGU1Nzk1MjBjOWFlM2I=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-08T13:30:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-08T13:30:16Z"}, "message": "Merge #6760\n\n6760: Open Cargo.toml opens more specific manifest r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "5b9e1f4abf35d7c988422eb8342741c9b340fc3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b9e1f4abf35d7c988422eb8342741c9b340fc3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2e6b709e60f22279b755ceae74e579520c9ae3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfz3/oCRBK7hj4Ov3rIwAAdHIIAKslK9jXx6PeHUz4FDyMQaTB\nIfFmGfBk8662MB/fcOHUfvEEUHfud7EKgXkdOXuCG/nLWGU3YGRk44SCyMeQExyK\nBS+SjnVEcmFRNDDQSkBmAQdJAuYR9nktLTVGpIhG7HVCXXT5mp7O8ZFihAO3MurR\nZGDcFO8nCkT/D/G++IWNxUCfu4FtIpHliENDSsAFNLdWvdBaiAqNqneWfYeuLm14\ncmknxGMyCnrkxYgIRbfwZ5R+0yxq9M3LTJdnfgVhV030Wf7ZnO2pqAnDaZP03t31\nlRi74nEiqHhykCjBJPTS+t+1+gGVK+/Z6e3BX14GuSGp6Iy7/3/zn2eXTx6et9k=\n=8E86\n-----END PGP SIGNATURE-----\n", "payload": "tree 5b9e1f4abf35d7c988422eb8342741c9b340fc3a\nparent 2aa7f2ece517a5202421f7a4a7cdd99bd1862ac8\nparent 944f30bd694be71d76e1a175033e19409fe9f8b4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1607434216 +0000\ncommitter GitHub <noreply@github.com> 1607434216 +0000\n\nMerge #6760\n\n6760: Open Cargo.toml opens more specific manifest r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2e6b709e60f22279b755ceae74e579520c9ae3b", "html_url": "https://github.com/rust-lang/rust/commit/e2e6b709e60f22279b755ceae74e579520c9ae3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2e6b709e60f22279b755ceae74e579520c9ae3b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2aa7f2ece517a5202421f7a4a7cdd99bd1862ac8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2aa7f2ece517a5202421f7a4a7cdd99bd1862ac8", "html_url": "https://github.com/rust-lang/rust/commit/2aa7f2ece517a5202421f7a4a7cdd99bd1862ac8"}, {"sha": "944f30bd694be71d76e1a175033e19409fe9f8b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/944f30bd694be71d76e1a175033e19409fe9f8b4", "html_url": "https://github.com/rust-lang/rust/commit/944f30bd694be71d76e1a175033e19409fe9f8b4"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "8a8b4a32cb4f416a41f44cd5e4566292703f3a28", "filename": "crates/rust-analyzer/src/cargo_target_spec.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2e6b709e60f22279b755ceae74e579520c9ae3b/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2e6b709e60f22279b755ceae74e579520c9ae3b/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs?ref=e2e6b709e60f22279b755ceae74e579520c9ae3b", "patch": "@@ -14,6 +14,7 @@ use crate::{global_state::GlobalStateSnapshot, Result};\n #[derive(Clone)]\n pub(crate) struct CargoTargetSpec {\n     pub(crate) workspace_root: AbsPathBuf,\n+    pub(crate) cargo_toml: AbsPathBuf,\n     pub(crate) package: String,\n     pub(crate) target: String,\n     pub(crate) target_kind: TargetKind,\n@@ -115,12 +116,17 @@ impl CargoTargetSpec {\n             Some(it) => it,\n             None => return Ok(None),\n         };\n+\n+        let target_data = &cargo_ws[target];\n+        let package_data = &cargo_ws[target_data.package];\n         let res = CargoTargetSpec {\n             workspace_root: cargo_ws.workspace_root().to_path_buf(),\n-            package: cargo_ws.package_flag(&cargo_ws[cargo_ws[target].package]),\n-            target: cargo_ws[target].name.clone(),\n-            target_kind: cargo_ws[target].kind,\n+            cargo_toml: package_data.manifest.clone(),\n+            package: cargo_ws.package_flag(&package_data),\n+            target: target_data.name.clone(),\n+            target_kind: target_data.kind,\n         };\n+\n         Ok(Some(res))\n     }\n "}, {"sha": "94e2bfa1bbd516d59dffdc5d9842f00cb97cdd4e", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e2e6b709e60f22279b755ceae74e579520c9ae3b/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2e6b709e60f22279b755ceae74e579520c9ae3b/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=e2e6b709e60f22279b755ceae74e579520c9ae3b", "patch": "@@ -1422,19 +1422,15 @@ pub(crate) fn handle_open_cargo_toml(\n ) -> Result<Option<lsp_types::GotoDefinitionResponse>> {\n     let _p = profile::span(\"handle_open_cargo_toml\");\n     let file_id = from_proto::file_id(&snap, &params.text_document.uri)?;\n-    let maybe_cargo_spec = CargoTargetSpec::for_file(&snap, file_id)?;\n-    if maybe_cargo_spec.is_none() {\n-        return Ok(None);\n-    }\n \n-    let cargo_spec = maybe_cargo_spec.unwrap();\n-    let cargo_toml_path = cargo_spec.workspace_root.join(\"Cargo.toml\");\n-    if !cargo_toml_path.exists() {\n-        return Ok(None);\n-    }\n-    let cargo_toml_url = to_proto::url_from_abs_path(&cargo_toml_path);\n-    let cargo_toml_location = Location::new(cargo_toml_url, Range::default());\n-    let res = lsp_types::GotoDefinitionResponse::from(cargo_toml_location);\n+    let cargo_spec = match CargoTargetSpec::for_file(&snap, file_id)? {\n+        Some(it) => it,\n+        None => return Ok(None),\n+    };\n+\n+    let cargo_toml_url = to_proto::url_from_abs_path(&cargo_spec.cargo_toml);\n+    let res: lsp_types::GotoDefinitionResponse =\n+        Location::new(cargo_toml_url, Range::default()).into();\n     Ok(Some(res))\n }\n "}]}