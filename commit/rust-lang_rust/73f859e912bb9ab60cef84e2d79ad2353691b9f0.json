{"sha": "73f859e912bb9ab60cef84e2d79ad2353691b9f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZjg1OWU5MTJiYjlhYjYwY2VmODRlMmQ3OWFkMjM1MzY5MWI5ZjA=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-02-02T11:15:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-02T11:15:08Z"}, "message": "Rollup merge of #81631 - LingMan:rem_var, r=davidtwco\n\nRemove unneeded `mut` variable\n\n`arg_elide` gets initialized, immediately cloned, and only written to after that.\nThe last reading access was removed back in\nhttps://github.com/rust-lang/rust/commit/7704762604a8bf4504a06e8c9713bc7c158d362a", "tree": {"sha": "57c3ce39ddd0fb4e5112219df3531f5e1dee6a94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57c3ce39ddd0fb4e5112219df3531f5e1dee6a94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73f859e912bb9ab60cef84e2d79ad2353691b9f0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgGTQ8CRBK7hj4Ov3rIwAAdHIIAIeGPRMbISb84eRsDQMIMpQr\nnmZjaZu+xi91hOyLAl0WDQJ5JuKkLgy03jJ7fGJMI5imw/U9Gg8wd6cm6H2OF3aA\nLI0dcv/qRH5b+xqof5YoeLuFeiz7xAIWknKQjFsFrzApQMmOsdjbgjOgI1YKQgKq\nfIVzumYg+XzTSipdU+i/0P0GBF32hMz+xSgtFsAUcGrxD3is1IHR8r/rgkM8Ufuw\nzjdjz9I3oyYDTS3PsCXfZcfxckAt92xo5/nKxLNwL2JFpewHI5Uqp6Y9Lj3f56r8\npvxHq4DW5Bp1C0rRJOsdIMOF4Y4PH9sJmLMyS0DbbpjpDcOuP0SfYO0NisB7cmY=\n=qX2C\n-----END PGP SIGNATURE-----\n", "payload": "tree 57c3ce39ddd0fb4e5112219df3531f5e1dee6a94\nparent d2f96a9b64b3769006095357046f1ca328925fde\nparent 8e34522309cb6907da0a6ae593894f2b1d847ee6\nauthor Jonas Schievink <jonasschievink@gmail.com> 1612264508 +0100\ncommitter GitHub <noreply@github.com> 1612264508 +0100\n\nRollup merge of #81631 - LingMan:rem_var, r=davidtwco\n\nRemove unneeded `mut` variable\n\n`arg_elide` gets initialized, immediately cloned, and only written to after that.\nThe last reading access was removed back in\nhttps://github.com/rust-lang/rust/commit/7704762604a8bf4504a06e8c9713bc7c158d362a\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73f859e912bb9ab60cef84e2d79ad2353691b9f0", "html_url": "https://github.com/rust-lang/rust/commit/73f859e912bb9ab60cef84e2d79ad2353691b9f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73f859e912bb9ab60cef84e2d79ad2353691b9f0/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2f96a9b64b3769006095357046f1ca328925fde", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2f96a9b64b3769006095357046f1ca328925fde", "html_url": "https://github.com/rust-lang/rust/commit/d2f96a9b64b3769006095357046f1ca328925fde"}, {"sha": "8e34522309cb6907da0a6ae593894f2b1d847ee6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e34522309cb6907da0a6ae593894f2b1d847ee6", "html_url": "https://github.com/rust-lang/rust/commit/8e34522309cb6907da0a6ae593894f2b1d847ee6"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "004c06029ffba51baafa7750880f33980ed895c3", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/73f859e912bb9ab60cef84e2d79ad2353691b9f0/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f859e912bb9ab60cef84e2d79ad2353691b9f0/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=73f859e912bb9ab60cef84e2d79ad2353691b9f0", "patch": "@@ -2083,18 +2083,11 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n         output: Option<&'tcx hir::Ty<'tcx>>,\n     ) {\n         debug!(\"visit_fn_like_elision: enter\");\n-        let mut arg_elide = Elide::FreshLateAnon(Cell::new(0));\n-        let arg_scope = Scope::Elision { elide: arg_elide.clone(), s: self.scope };\n+        let arg_scope = Scope::Elision { elide: Elide::FreshLateAnon(Cell::new(0)), s: self.scope };\n         self.with(arg_scope, |_, this| {\n             for input in inputs {\n                 this.visit_ty(input);\n             }\n-            match *this.scope {\n-                Scope::Elision { ref elide, .. } => {\n-                    arg_elide = elide.clone();\n-                }\n-                _ => bug!(),\n-            }\n         });\n \n         let output = match output {"}]}