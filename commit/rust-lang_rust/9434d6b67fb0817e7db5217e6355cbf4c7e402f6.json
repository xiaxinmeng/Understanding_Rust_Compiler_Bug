{"sha": "9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MzRkNmI2N2ZiMDgxN2U3ZGI1MjE3ZTYzNTVjYmY0YzdlNDAyZjY=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2020-02-22T22:14:14Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2020-02-22T22:14:14Z"}, "message": "update some tests", "tree": {"sha": "c5a52e2c2ae7d634c425c617c78a184f6e29a8e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5a52e2c2ae7d634c425c617c78a184f6e29a8e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "html_url": "https://github.com/rust-lang/rust/commit/9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a6361f4655fe26f6f25efc551242115953ae335", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a6361f4655fe26f6f25efc551242115953ae335", "html_url": "https://github.com/rust-lang/rust/commit/7a6361f4655fe26f6f25efc551242115953ae335"}], "stats": {"total": 154, "additions": 77, "deletions": 77}, "files": [{"sha": "f72c645bf8dbf1e0bb99886fa50ba26cffcf8776", "filename": "src/test/ui/async-await/issues/issue-62097.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62097.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62097.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62097.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -16,13 +16,13 @@ help: to force the closure to take ownership of `self` (and any other referenced\n LL |         foo(move || self.bar()).await;\n    |             ^^^^^^^\n \n-error[E0521]: borrowed data escapes outside of function\n+error[E0521]: borrowed data escapes outside of method\n   --> $DIR/issue-62097.rs:13:9\n    |\n LL |     pub async fn run_dummy_fn(&self) {\n-   |                               ----- `self` is a reference that is only valid in the function body\n+   |                               ----- `self` is a reference that is only valid in the method body\n LL |         foo(|| self.bar()).await;\n-   |         ^^^^^^^^^^^^^^^^^^ `self` escapes the function body here\n+   |         ^^^^^^^^^^^^^^^^^^ `self` escapes the method body here\n \n error: aborting due to 2 previous errors\n "}, {"sha": "696f79ec40f36a5f961903b5f23f7c4182c32ebf", "filename": "src/test/ui/async-await/issues/issue-63388-1.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-63388-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-63388-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-63388-1.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -9,7 +9,7 @@ LL |       ) -> &dyn Foo\n LL | /     {\n LL | |         foo\n LL | |     }\n-   | |_____^ function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'1`\n+   | |_____^ method was supposed to return data with lifetime `'a` but it is returning data with lifetime `'1`\n \n error: aborting due to previous error\n "}, {"sha": "f76e7a4e44fd73af119bbe34629d54b005748752", "filename": "src/test/ui/issues/issue-16683.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fissues%2Fissue-16683.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fissues%2Fissue-16683.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16683.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -1,10 +1,10 @@\n-error[E0521]: borrowed data escapes outside of function\n+error[E0521]: borrowed data escapes outside of method\n   --> $DIR/issue-16683.rs:4:9\n    |\n LL |     fn b(&self) {\n-   |          ----- `self` is a reference that is only valid in the function body\n+   |          ----- `self` is a reference that is only valid in the method body\n LL |         self.a();\n-   |         ^^^^^^^^ `self` escapes the function body here\n+   |         ^^^^^^^^ `self` escapes the method body here\n \n error: aborting due to previous error\n "}, {"sha": "92e21f4dc1769fa22dcaec0c62285b43ac6451ab", "filename": "src/test/ui/issues/issue-17758.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fissues%2Fissue-17758.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fissues%2Fissue-17758.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17758.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -1,10 +1,10 @@\n-error[E0521]: borrowed data escapes outside of function\n+error[E0521]: borrowed data escapes outside of method\n   --> $DIR/issue-17758.rs:7:9\n    |\n LL |     fn bar(&self) {\n-   |            ----- `self` is a reference that is only valid in the function body\n+   |            ----- `self` is a reference that is only valid in the method body\n LL |         self.foo();\n-   |         ^^^^^^^^^^ `self` escapes the function body here\n+   |         ^^^^^^^^^^ `self` escapes the method body here\n \n error: aborting due to previous error\n "}, {"sha": "291edc505cd1e28a5ff307ebdd1222fb5031a69b", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1-return-one-existing-name-if-else-using-impl.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -7,7 +7,7 @@ LL |     fn foo<'a>(x: &i32, y: &'a i32) -> &'a i32 {\n    |            lifetime `'a` defined here\n LL | \n LL |         if x > y { x } else { y }\n-   |                    ^ function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'1`\n+   |                    ^ method was supposed to return data with lifetime `'a` but it is returning data with lifetime `'1`\n \n error: aborting due to previous error\n "}, {"sha": "15ee58574ecaa375c1d45421e162b1a5d8e09592", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1-return-one-existing-name-return-type-is-anon.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-return-type-is-anon.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-return-type-is-anon.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-return-type-is-anon.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -7,7 +7,7 @@ LL |   fn foo<'a>(&self, x: &'a i32) -> &i32 {\n    |          lifetime `'a` defined here\n LL | \n LL |     x\n-   |     ^ function was supposed to return data with lifetime `'1` but it is returning data with lifetime `'a`\n+   |     ^ method was supposed to return data with lifetime `'1` but it is returning data with lifetime `'a`\n \n error: aborting due to previous error\n "}, {"sha": "a27a91e38f1e4d37d1b737db7559458ec3c95d73", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1-return-one-existing-name-self-is-anon.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-self-is-anon.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-self-is-anon.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-self-is-anon.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -7,7 +7,7 @@ LL |     fn foo<'a>(&self, x: &'a Foo) -> &'a Foo {\n    |            lifetime `'a` defined here\n LL | \n LL |         if true { x } else { self }\n-   |                              ^^^^ function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'1`\n+   |                              ^^^^ method was supposed to return data with lifetime `'a` but it is returning data with lifetime `'1`\n \n error: aborting due to previous error\n "}, {"sha": "5f922d8560b2ad0e8aadf4eb38be2d8873d54da9", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-return-type-is-anon.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-return-type-is-anon.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-return-type-is-anon.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-return-type-is-anon.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -6,7 +6,7 @@ LL |   fn foo<'a>(&self, x: &i32) -> &i32 {\n    |              |\n    |              let's call the lifetime of this reference `'2`\n LL |     x\n-   |     ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |     ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: aborting due to previous error\n "}, {"sha": "91d7597c87feafc58980e3d004c18178f53a9dc7", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-self-is-anon.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-self-is-anon.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-self-is-anon.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-self-is-anon.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -6,7 +6,7 @@ LL |     fn foo<'a>(&self, x: &Foo) -> &Foo {\n    |                |\n    |                let's call the lifetime of this reference `'2`\n LL |         if true { x } else { self }\n-   |                   ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |                   ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: aborting due to previous error\n "}, {"sha": "ee5a80ae6483f3bdf1a2e7bb1ce5619571c2baf8", "filename": "src/test/ui/nll/outlives-suggestion-simple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-simple.rs?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -70,7 +70,7 @@ pub struct Foo2<'a> {\n impl<'a> Foo2<'a> {\n     // should not produce outlives suggestions to name 'self\n     fn get_bar(&self) -> Bar2 {\n-        Bar2::new(&self) //~ERROR borrowed data escapes outside of function\n+        Bar2::new(&self) //~ERROR borrowed data escapes outside of method\n     }\n }\n "}, {"sha": "cf55603cd71f5b54371c24e54c3496b024e384fa", "filename": "src/test/ui/nll/outlives-suggestion-simple.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-simple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-simple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Foutlives-suggestion-simple.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -93,16 +93,16 @@ LL |         self.x\n    |\n    = help: consider adding the following bound: `'b: 'a`\n \n-error[E0521]: borrowed data escapes outside of function\n+error[E0521]: borrowed data escapes outside of method\n   --> $DIR/outlives-suggestion-simple.rs:73:9\n    |\n LL |     fn get_bar(&self) -> Bar2 {\n    |                -----\n    |                |\n-   |                `self` declared here, outside of the function body\n-   |                `self` is a reference that is only valid in the function body\n+   |                `self` declared here, outside of the method body\n+   |                `self` is a reference that is only valid in the method body\n LL |         Bar2::new(&self)\n-   |         ^^^^^^^^^^^^^^^^ `self` escapes the function body here\n+   |         ^^^^^^^^^^^^^^^^ `self` escapes the method body here\n \n error: aborting due to 9 previous errors\n "}, {"sha": "6afcf24cd3e1ea37eb0ff6d9c9a5f4ad3e2b95e0", "filename": "src/test/ui/self/arbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -2,7 +2,7 @@ error: lifetime may not live long enough\n   --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:8:52\n    |\n LL |     async fn a(self: Pin<&Foo>, f: &Foo) -> &Foo { f }\n-   |                          -         -               ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |                          -         -               ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n    |                          |         |\n    |                          |         let's call the lifetime of this reference `'1`\n    |                          let's call the lifetime of this reference `'2`\n@@ -11,7 +11,7 @@ error: lifetime may not live long enough\n   --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:11:75\n    |\n LL |     async fn c(self: Pin<&Self>, f: &Foo, g: &Foo) -> (Pin<&Foo>, &Foo) { (self, f) }\n-   |                          -          -                                     ^^^^^^^^^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |                          -          -                                     ^^^^^^^^^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n    |                          |          |\n    |                          |          let's call the lifetime of this reference `'1`\n    |                          let's call the lifetime of this reference `'2`\n@@ -20,7 +20,7 @@ error: lifetime may not live long enough\n   --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:17:64\n    |\n LL |     async fn bar<'a>(self: Alias<&Self>, arg: &'a ()) -> &() { arg }\n-   |                  --              -                             ^^^ function was supposed to return data with lifetime `'1` but it is returning data with lifetime `'a`\n+   |                  --              -                             ^^^ method was supposed to return data with lifetime `'1` but it is returning data with lifetime `'a`\n    |                  |               |\n    |                  |               let's call the lifetime of this reference `'1`\n    |                  lifetime `'a` defined here"}, {"sha": "a659e4487856cf98b2be3c3e019e3e8e97a0e59e", "filename": "src/test/ui/self/arbitrary_self_types_pin_lifetime_mismatch.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -2,7 +2,7 @@ error: lifetime may not live long enough\n   --> $DIR/arbitrary_self_types_pin_lifetime_mismatch.rs:6:46\n    |\n LL |     fn a(self: Pin<&Foo>, f: &Foo) -> &Foo { f }\n-   |                    -         -               ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |                    -         -               ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n    |                    |         |\n    |                    |         let's call the lifetime of this reference `'1`\n    |                    let's call the lifetime of this reference `'2`\n@@ -11,7 +11,7 @@ error: lifetime may not live long enough\n   --> $DIR/arbitrary_self_types_pin_lifetime_mismatch.rs:8:69\n    |\n LL |     fn c(self: Pin<&Self>, f: &Foo, g: &Foo) -> (Pin<&Foo>, &Foo) { (self, f) }\n-   |                    -          -                                     ^^^^^^^^^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |                    -          -                                     ^^^^^^^^^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n    |                    |          |\n    |                    |          let's call the lifetime of this reference `'1`\n    |                    let's call the lifetime of this reference `'2`\n@@ -20,7 +20,7 @@ error: lifetime may not live long enough\n   --> $DIR/arbitrary_self_types_pin_lifetime_mismatch.rs:13:58\n    |\n LL |     fn bar<'a>(self: Alias<&Self>, arg: &'a ()) -> &() { arg }\n-   |            --  ---- has type `std::pin::Pin<&'1 Foo>`    ^^^ function was supposed to return data with lifetime `'1` but it is returning data with lifetime `'a`\n+   |            --  ---- has type `std::pin::Pin<&'1 Foo>`    ^^^ method was supposed to return data with lifetime `'1` but it is returning data with lifetime `'a`\n    |            |\n    |            lifetime `'a` defined here\n "}, {"sha": "57d0929c50a792140442fd3cd45ca2387ac6f064", "filename": "src/test/ui/self/elision/lt-ref-self-async.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self-async.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -6,7 +6,7 @@ LL |     async fn ref_self(&self, f: &u32) -> &u32 {\n    |                       |\n    |                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/lt-ref-self-async.rs:19:9\n@@ -16,7 +16,7 @@ LL |     async fn ref_Self(self: &Self, f: &u32) -> &u32 {\n    |                             |\n    |                             let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/lt-ref-self-async.rs:23:9\n@@ -26,7 +26,7 @@ LL |     async fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n    |                                     |\n    |                                     let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/lt-ref-self-async.rs:27:9\n@@ -36,7 +36,7 @@ LL |     async fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n    |                                     |\n    |                                     let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/lt-ref-self-async.rs:31:9\n@@ -46,7 +46,7 @@ LL |     async fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n    |                                             |\n    |                                             let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/lt-ref-self-async.rs:35:9\n@@ -56,7 +56,7 @@ LL |     async fn box_pin_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n    |                                         |\n    |                                         let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: aborting due to 6 previous errors\n "}, {"sha": "b51b5a0ba38f2b1232fe151f27c86175c95744ae", "filename": "src/test/ui/self/elision/lt-ref-self.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -6,7 +6,7 @@ LL |     fn ref_self(&self, f: &u32) -> &u32 {\n    |                 |\n    |                 let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/lt-ref-self.rs:17:9\n@@ -16,7 +16,7 @@ LL |     fn ref_Self(self: &Self, f: &u32) -> &u32 {\n    |                       |\n    |                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/lt-ref-self.rs:21:9\n@@ -26,7 +26,7 @@ LL |     fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n    |                               |\n    |                               let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/lt-ref-self.rs:25:9\n@@ -36,7 +36,7 @@ LL |     fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n    |                               |\n    |                               let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/lt-ref-self.rs:29:9\n@@ -46,7 +46,7 @@ LL |     fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n    |                                       |\n    |                                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/lt-ref-self.rs:33:9\n@@ -56,7 +56,7 @@ LL |     fn box_pin_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n    |                                   |\n    |                                   let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: aborting due to 6 previous errors\n "}, {"sha": "46e828390b0fc8507fb541e4cd032b578a417268", "filename": "src/test/ui/self/elision/ref-mut-self-async.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self-async.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -6,7 +6,7 @@ LL |     async fn ref_self(&mut self, f: &u32) -> &u32 {\n    |                       |\n    |                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-self-async.rs:19:9\n@@ -16,7 +16,7 @@ LL |     async fn ref_Self(self: &mut Self, f: &u32) -> &u32 {\n    |                             |\n    |                             let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-self-async.rs:23:9\n@@ -26,7 +26,7 @@ LL |     async fn box_ref_Self(self: Box<&mut Self>, f: &u32) -> &u32 {\n    |                                     |\n    |                                     let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-self-async.rs:27:9\n@@ -36,7 +36,7 @@ LL |     async fn pin_ref_Self(self: Pin<&mut Self>, f: &u32) -> &u32 {\n    |                                     |\n    |                                     let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-self-async.rs:31:9\n@@ -46,7 +46,7 @@ LL |     async fn box_box_ref_Self(self: Box<Box<&mut Self>>, f: &u32) -> &u32 {\n    |                                             |\n    |                                             let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-self-async.rs:35:9\n@@ -56,7 +56,7 @@ LL |     async fn box_pin_ref_Self(self: Box<Pin<&mut Self>>, f: &u32) -> &u32 {\n    |                                             |\n    |                                             let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: aborting due to 6 previous errors\n "}, {"sha": "6c8c030e5fffaf2361e93e913688556d07ca3e58", "filename": "src/test/ui/self/elision/ref-mut-self.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -6,7 +6,7 @@ LL |     fn ref_self(&mut self, f: &u32) -> &u32 {\n    |                 |\n    |                 let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-self.rs:17:9\n@@ -16,7 +16,7 @@ LL |     fn ref_Self(self: &mut Self, f: &u32) -> &u32 {\n    |                       |\n    |                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-self.rs:21:9\n@@ -26,7 +26,7 @@ LL |     fn box_ref_Self(self: Box<&mut Self>, f: &u32) -> &u32 {\n    |                               |\n    |                               let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-self.rs:25:9\n@@ -36,7 +36,7 @@ LL |     fn pin_ref_Self(self: Pin<&mut Self>, f: &u32) -> &u32 {\n    |                               |\n    |                               let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-self.rs:29:9\n@@ -46,7 +46,7 @@ LL |     fn box_box_ref_Self(self: Box<Box<&mut Self>>, f: &u32) -> &u32 {\n    |                                       |\n    |                                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-self.rs:33:9\n@@ -56,7 +56,7 @@ LL |     fn box_pin_ref_Self(self: Box<Pin<&mut Self>>, f: &u32) -> &u32 {\n    |                                       |\n    |                                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: aborting due to 6 previous errors\n "}, {"sha": "99340800790ecba516781cc31a6b2171271aa437", "filename": "src/test/ui/self/elision/ref-mut-struct-async.nll.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct-async.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -6,7 +6,7 @@ LL |     async fn ref_Struct(self: &mut Struct, f: &u32) -> &u32 {\n    |                               |\n    |                               let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-struct-async.rs:17:9\n@@ -16,7 +16,7 @@ LL |     async fn box_ref_Struct(self: Box<&mut Struct>, f: &u32) -> &u32 {\n    |                                       |\n    |                                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-struct-async.rs:21:9\n@@ -26,7 +26,7 @@ LL |     async fn pin_ref_Struct(self: Pin<&mut Struct>, f: &u32) -> &u32 {\n    |                                       |\n    |                                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-struct-async.rs:25:9\n@@ -36,7 +36,7 @@ LL |     async fn box_box_ref_Struct(self: Box<Box<&mut Struct>>, f: &u32) -> &u\n    |                                               |\n    |                                               let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-struct-async.rs:29:9\n@@ -46,7 +46,7 @@ LL |     async fn box_pin_ref_Struct(self: Box<Pin<&mut Struct>>, f: &u32) -> &u\n    |                                               |\n    |                                               let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "e3886444db2ad0500f443e22b01aa9c38dcd9eee", "filename": "src/test/ui/self/elision/ref-mut-struct.nll.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -6,7 +6,7 @@ LL |     fn ref_Struct(self: &mut Struct, f: &u32) -> &u32 {\n    |                         |\n    |                         let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-struct.rs:15:9\n@@ -16,7 +16,7 @@ LL |     fn box_ref_Struct(self: Box<&mut Struct>, f: &u32) -> &u32 {\n    |                                 |\n    |                                 let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-struct.rs:19:9\n@@ -26,7 +26,7 @@ LL |     fn pin_ref_Struct(self: Pin<&mut Struct>, f: &u32) -> &u32 {\n    |                                 |\n    |                                 let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-struct.rs:23:9\n@@ -36,7 +36,7 @@ LL |     fn box_box_ref_Struct(self: Box<Box<&mut Struct>>, f: &u32) -> &u32 {\n    |                                         |\n    |                                         let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-mut-struct.rs:27:9\n@@ -46,7 +46,7 @@ LL |     fn box_pin_ref_Struct(self: Box<Pin<&mut Struct>>, f: &u32) -> &u32 {\n    |                                         |\n    |                                         let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "ecac1ce3378d6a72547ccba0f091f76eb421d92e", "filename": "src/test/ui/self/elision/ref-self.nll.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -6,7 +6,7 @@ LL |     fn ref_self(&self, f: &u32) -> &u32 {\n    |                 |\n    |                 let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-self.rs:27:9\n@@ -16,7 +16,7 @@ LL |     fn ref_Self(self: &Self, f: &u32) -> &u32 {\n    |                       |\n    |                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-self.rs:31:9\n@@ -26,7 +26,7 @@ LL |     fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n    |                               |\n    |                               let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-self.rs:35:9\n@@ -36,7 +36,7 @@ LL |     fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n    |                               |\n    |                               let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-self.rs:39:9\n@@ -46,7 +46,7 @@ LL |     fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n    |                                       |\n    |                                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-self.rs:43:9\n@@ -56,7 +56,7 @@ LL |     fn box_pin_ref_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n    |                                       |\n    |                                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-self.rs:47:9\n@@ -66,7 +66,7 @@ LL |     fn wrap_ref_Self_Self(self: Wrap<&Self, Self>, f: &u8) -> &u8 {\n    |                                      |\n    |                                      let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: aborting due to 7 previous errors\n "}, {"sha": "bcbf79bc039fde1c103393f16943cc3a674ce221", "filename": "src/test/ui/self/elision/ref-struct-async.nll.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct-async.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -6,7 +6,7 @@ LL |     async fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n    |                               |\n    |                               let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-struct-async.rs:17:9\n@@ -16,7 +16,7 @@ LL |     async fn box_ref_Struct(self: Box<&Struct>, f: &u32) -> &u32 {\n    |                                       |\n    |                                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-struct-async.rs:21:9\n@@ -26,7 +26,7 @@ LL |     async fn pin_ref_Struct(self: Pin<&Struct>, f: &u32) -> &u32 {\n    |                                       |\n    |                                       let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-struct-async.rs:25:9\n@@ -36,7 +36,7 @@ LL |     async fn box_box_ref_Struct(self: Box<Box<&Struct>>, f: &u32) -> &u32 {\n    |                                               |\n    |                                               let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-struct-async.rs:29:9\n@@ -46,7 +46,7 @@ LL |     async fn box_pin_Struct(self: Box<Pin<&Struct>>, f: &u32) -> &u32 {\n    |                                           |\n    |                                           let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "39e7631f31e7bd6c7efed1a817e8f560400ca57e", "filename": "src/test/ui/self/elision/ref-struct.nll.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9434d6b67fb0817e7db5217e6355cbf4c7e402f6/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct.nll.stderr?ref=9434d6b67fb0817e7db5217e6355cbf4c7e402f6", "patch": "@@ -6,7 +6,7 @@ LL |     fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n    |                         |\n    |                         let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-struct.rs:15:9\n@@ -16,7 +16,7 @@ LL |     fn box_ref_Struct(self: Box<&Struct>, f: &u32) -> &u32 {\n    |                                 |\n    |                                 let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-struct.rs:19:9\n@@ -26,7 +26,7 @@ LL |     fn pin_ref_Struct(self: Pin<&Struct>, f: &u32) -> &u32 {\n    |                                 |\n    |                                 let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-struct.rs:23:9\n@@ -36,7 +36,7 @@ LL |     fn box_box_ref_Struct(self: Box<Box<&Struct>>, f: &u32) -> &u32 {\n    |                                         |\n    |                                         let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: lifetime may not live long enough\n   --> $DIR/ref-struct.rs:27:9\n@@ -46,7 +46,7 @@ LL |     fn box_pin_Struct(self: Box<Pin<&Struct>>, f: &u32) -> &u32 {\n    |                                     |\n    |                                     let's call the lifetime of this reference `'2`\n LL |         f\n-   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |         ^ method was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n \n error: aborting due to 5 previous errors\n "}]}