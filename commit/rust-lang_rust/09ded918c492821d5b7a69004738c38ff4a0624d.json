{"sha": "09ded918c492821d5b7a69004738c38ff4a0624d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZGVkOTE4YzQ5MjgyMWQ1YjdhNjkwMDQ3MzhjMzhmZjRhMDYyNGQ=", "commit": {"author": {"name": "robojumper", "email": "robojumper@gmail.com", "date": "2020-05-31T19:22:08Z"}, "committer": {"name": "robojumper", "email": "robojumper@gmail.com", "date": "2020-05-31T19:22:08Z"}, "message": "proc_macro: fix current nightly/future stable ABI incompatibility", "tree": {"sha": "70637fcf86b85dcd1832a17007aed9ebdb24cfdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70637fcf86b85dcd1832a17007aed9ebdb24cfdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09ded918c492821d5b7a69004738c38ff4a0624d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09ded918c492821d5b7a69004738c38ff4a0624d", "html_url": "https://github.com/rust-lang/rust/commit/09ded918c492821d5b7a69004738c38ff4a0624d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09ded918c492821d5b7a69004738c38ff4a0624d/comments", "author": {"login": "robojumper", "id": 14299449, "node_id": "MDQ6VXNlcjE0Mjk5NDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14299449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robojumper", "html_url": "https://github.com/robojumper", "followers_url": "https://api.github.com/users/robojumper/followers", "following_url": "https://api.github.com/users/robojumper/following{/other_user}", "gists_url": "https://api.github.com/users/robojumper/gists{/gist_id}", "starred_url": "https://api.github.com/users/robojumper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robojumper/subscriptions", "organizations_url": "https://api.github.com/users/robojumper/orgs", "repos_url": "https://api.github.com/users/robojumper/repos", "events_url": "https://api.github.com/users/robojumper/events{/privacy}", "received_events_url": "https://api.github.com/users/robojumper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "robojumper", "id": 14299449, "node_id": "MDQ6VXNlcjE0Mjk5NDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14299449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robojumper", "html_url": "https://github.com/robojumper", "followers_url": "https://api.github.com/users/robojumper/followers", "following_url": "https://api.github.com/users/robojumper/following{/other_user}", "gists_url": "https://api.github.com/users/robojumper/gists{/gist_id}", "starred_url": "https://api.github.com/users/robojumper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robojumper/subscriptions", "organizations_url": "https://api.github.com/users/robojumper/orgs", "repos_url": "https://api.github.com/users/robojumper/repos", "events_url": "https://api.github.com/users/robojumper/events{/privacy}", "received_events_url": "https://api.github.com/users/robojumper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4bdc1495142a7497a92388570defd519c22dcb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4bdc1495142a7497a92388570defd519c22dcb1", "html_url": "https://github.com/rust-lang/rust/commit/e4bdc1495142a7497a92388570defd519c22dcb1"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "cb4b3bdb0d3eb8f99f2118cde2eb177fd3697e3c", "filename": "crates/ra_proc_macro_srv/src/proc_macro/bridge/client.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/09ded918c492821d5b7a69004738c38ff4a0624d/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fclient.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09ded918c492821d5b7a69004738c38ff4a0624d/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fclient.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fclient.rs?ref=09ded918c492821d5b7a69004738c38ff4a0624d", "patch": "@@ -18,7 +18,7 @@ macro_rules! define_handles {\n         }\n \n         impl HandleCounters {\n-            // FIXME(eddyb) use a reference to the `static COUNTERS`, intead of\n+            // FIXME(eddyb) use a reference to the `static COUNTERS`, instead of\n             // a wrapper `fn` pointer, once `const fn` can reference `static`s.\n             extern \"C\" fn get() -> &'static Self {\n                 static COUNTERS: HandleCounters = HandleCounters {\n@@ -205,10 +205,16 @@ impl Clone for Literal {\n     }\n }\n \n-// FIXME(eddyb) `Literal` should not expose internal `Debug` impls.\n impl fmt::Debug for Literal {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.write_str(&self.debug())\n+        f.debug_struct(\"Literal\")\n+            // format the kind without quotes, as in `kind: Float`\n+            // .field(\"kind\", &format_args!(\"{}\", &self.debug_kind()))\n+            .field(\"symbol\", &self.symbol())\n+            // format `Some(\"...\")` on one line even in {:#?} mode\n+            // .field(\"suffix\", &format_args!(\"{:?}\", &self.suffix()))\n+            .field(\"span\", &self.span())\n+            .finish()\n     }\n }\n \n@@ -339,7 +345,7 @@ impl Bridge<'_> {\n #[repr(C)]\n #[derive(Copy, Clone)]\n pub struct Client<F> {\n-    // FIXME(eddyb) use a reference to the `static COUNTERS`, intead of\n+    // FIXME(eddyb) use a reference to the `static COUNTERS`, instead of\n     // a wrapper `fn` pointer, once `const fn` can reference `static`s.\n     pub(super) get_handle_counters: extern \"C\" fn() -> &'static HandleCounters,\n     pub(super) run: extern \"C\" fn(Bridge<'_>, F) -> Buffer<u8>,"}, {"sha": "273a977158862ba5632c236f21ca8fd4e5086314", "filename": "crates/ra_proc_macro_srv/src/proc_macro/bridge/closure.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/09ded918c492821d5b7a69004738c38ff4a0624d/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09ded918c492821d5b7a69004738c38ff4a0624d/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fclosure.rs?ref=09ded918c492821d5b7a69004738c38ff4a0624d", "patch": "@@ -11,6 +11,9 @@ pub struct Closure<'a, A, R> {\n \n struct Env;\n \n+// impl<'a, A, R> !Sync for Closure<'a, A, R> {}\n+// impl<'a, A, R> !Send for Closure<'a, A, R> {}\n+\n impl<'a, A, R, F: FnMut(A) -> R> From<&'a mut F> for Closure<'a, A, R> {\n     fn from(f: &'a mut F) -> Self {\n         unsafe extern \"C\" fn call<A, R, F: FnMut(A) -> R>(env: &mut Env, arg: A) -> R {"}, {"sha": "aeb05aad44810aed89ef19d1a64a31c3b2340d5b", "filename": "crates/ra_proc_macro_srv/src/proc_macro/bridge/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/09ded918c492821d5b7a69004738c38ff4a0624d/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09ded918c492821d5b7a69004738c38ff4a0624d/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fmod.rs?ref=09ded918c492821d5b7a69004738c38ff4a0624d", "patch": "@@ -108,8 +108,9 @@ macro_rules! with_api {\n             Literal {\n                 fn drop($self: $S::Literal);\n                 fn clone($self: &$S::Literal) -> $S::Literal;\n-                // FIXME(eddyb) `Literal` should not expose internal `Debug` impls.\n-                fn debug($self: &$S::Literal) -> String;\n+                fn debug_kind($self: &$S::Literal) -> String;\n+                fn symbol($self: &$S::Literal) -> String;\n+                fn suffix($self: &$S::Literal) -> Option<String>;\n                 fn integer(n: &str) -> $S::Literal;\n                 fn typed_integer(n: &str, kind: &str) -> $S::Literal;\n                 fn float(n: &str) -> $S::Literal;\n@@ -222,6 +223,9 @@ pub struct Bridge<'a> {\n     dispatch: closure::Closure<'a, Buffer<u8>, Buffer<u8>>,\n }\n \n+// impl<'a> !Sync for Bridge<'a> {}\n+// impl<'a> !Send for Bridge<'a> {}\n+\n #[forbid(unsafe_code)]\n #[allow(non_camel_case_types)]\n mod api_tags {"}, {"sha": "cc32d5a6ddd59ba6be15dbd35357ff699907ec1b", "filename": "crates/ra_proc_macro_srv/src/rustc_server.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/09ded918c492821d5b7a69004738c38ff4a0624d/crates%2Fra_proc_macro_srv%2Fsrc%2Frustc_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09ded918c492821d5b7a69004738c38ff4a0624d/crates%2Fra_proc_macro_srv%2Fsrc%2Frustc_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Frustc_server.rs?ref=09ded918c492821d5b7a69004738c38ff4a0624d", "patch": "@@ -463,9 +463,16 @@ impl server::Ident for Rustc {\n }\n \n impl server::Literal for Rustc {\n-    // FIXME(eddyb) `Literal` should not expose internal `Debug` impls.\n-    fn debug(&mut self, literal: &Self::Literal) -> String {\n-        format!(\"{:?}\", literal)\n+    fn debug_kind(&mut self, _literal: &Self::Literal) -> String {\n+        // r-a: debug_kind and suffix are unsupported; corresponding client code has been changed to not call these.\n+        // They must still be present to be ABI-compatible and work with upstream proc_macro.\n+        \"\".to_owned()\n+    }\n+    fn symbol(&mut self, literal: &Self::Literal) -> String {\n+        literal.text.to_string()\n+    }\n+    fn suffix(&mut self, _literal: &Self::Literal) -> Option<String> {\n+        None\n     }\n \n     fn integer(&mut self, n: &str) -> Self::Literal {"}]}