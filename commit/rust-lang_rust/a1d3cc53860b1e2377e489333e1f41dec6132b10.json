{"sha": "a1d3cc53860b1e2377e489333e1f41dec6132b10", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZDNjYzUzODYwYjFlMjM3N2U0ODkzMzNlMWY0MWRlYzYxMzJiMTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-31T02:56:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-31T02:56:54Z"}, "message": "auto merge of #11221 : vadimcn/rust/revert-manifest, r=alexcrichton\n\nIn view of the problems outlined in #11207, I think manifest embedding should be removed, until we find a better solution.  :-(", "tree": {"sha": "dd151c087c048d3246fd6f4a4c9b34ea601ca2ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd151c087c048d3246fd6f4a4c9b34ea601ca2ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1d3cc53860b1e2377e489333e1f41dec6132b10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1d3cc53860b1e2377e489333e1f41dec6132b10", "html_url": "https://github.com/rust-lang/rust/commit/a1d3cc53860b1e2377e489333e1f41dec6132b10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1d3cc53860b1e2377e489333e1f41dec6132b10/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df25bb65eb56aa3815226c74190079be3904c13c", "url": "https://api.github.com/repos/rust-lang/rust/commits/df25bb65eb56aa3815226c74190079be3904c13c", "html_url": "https://github.com/rust-lang/rust/commit/df25bb65eb56aa3815226c74190079be3904c13c"}, {"sha": "856222987d08289ef03a06ebf7b59087e226e9e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/856222987d08289ef03a06ebf7b59087e226e9e9", "html_url": "https://github.com/rust-lang/rust/commit/856222987d08289ef03a06ebf7b59087e226e9e9"}], "stats": {"total": 133, "additions": 0, "deletions": 133}, "files": [{"sha": "6bd898879d12645164dcec82fbf6651382e595f5", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a1d3cc53860b1e2377e489333e1f41dec6132b10/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1d3cc53860b1e2377e489333e1f41dec6132b10/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=a1d3cc53860b1e2377e489333e1f41dec6132b10", "patch": "@@ -11,7 +11,6 @@\n \n use back::archive::{Archive, METADATA_FILENAME};\n use back::rpath;\n-use back::manifest;\n use driver::driver::CrateTranslation;\n use driver::session::Session;\n use driver::session;\n@@ -828,12 +827,6 @@ fn link_binary_output(sess: Session,\n         }\n         session::OutputExecutable => {\n             link_natively(sess, false, obj_filename, &out_filename);\n-            // Windows linker will add an \".exe\" extension if there was none\n-            let out_filename = match out_filename.extension() {\n-                Some(_) => out_filename.clone(),\n-                None => out_filename.with_extension(win32::EXE_EXTENSION)\n-            };\n-            manifest::postprocess_executable(sess, &out_filename);\n         }\n         session::OutputDylib => {\n             link_natively(sess, true, obj_filename, &out_filename);"}, {"sha": "8e85603b31cffdc0e22c86c16ac5c4b7779fbc7d", "filename": "src/librustc/back/manifest.rs", "status": "removed", "additions": 0, "deletions": 106, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/df25bb65eb56aa3815226c74190079be3904c13c/src%2Flibrustc%2Fback%2Fmanifest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df25bb65eb56aa3815226c74190079be3904c13c/src%2Flibrustc%2Fback%2Fmanifest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fmanifest.rs?ref=df25bb65eb56aa3815226c74190079be3904c13c", "patch": "@@ -1,106 +0,0 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n-// To avoid problems with Windows UAC installer detection heuristics,\n-// Rust-produced executables need an application manifest.\n-// For details, see issue #10512.\n-\n-// No-op on other platforms.\n-\n-use driver::session::Session;\n-use std::path::Path;\n-\n-#[cfg(not(windows))]\n-pub fn postprocess_executable(_sess: Session, _filename: &Path) {}\n-\n-#[cfg(windows)]\n-pub fn postprocess_executable(sess: Session, filename: &Path) {\n-\n-    let default_manifest = concat!(\n-        \"<?xml version='1.0' encoding='UTF-8' standalone='yes'?>\",\n-        \"<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>\",\n-        \"  <trustInfo xmlns='urn:schemas-microsoft-com:asm.v3'>\",\n-        \"    <security>\",\n-        \"      <requestedPrivileges>\",\n-        \"        <requestedExecutionLevel level='asInvoker' uiAccess='false' />\",\n-        \"      </requestedPrivileges>\",\n-        \"    </security>\",\n-        \"  </trustInfo>\",\n-        \"</assembly>\");\n-\n-    match windows::embed_manifest(filename, default_manifest) {\n-        Ok(_) => (),\n-        Err(msg) => sess.err(format!(\"Could not embed application manifest: {}\", msg))\n-    }\n-}\n-\n-#[cfg(windows)]\n-mod windows {\n-    use std::libc::types::os::arch::extra::{BOOL,WORD,DWORD,HANDLE,LPCWSTR,LPCVOID};\n-    use std::libc::consts::os::extra::FALSE;\n-    use std::cast::transmute;\n-    use std::os;\n-\n-    // FIXME #9053: should import as_utf16_p from std rather than re-defining here\n-    //use std::os::win32::as_utf16_p;\n-    fn as_utf16_p<T>(s: &str, f: |*u16| -> T) -> T {\n-        let mut t = s.to_utf16();\n-        // Null terminate before passing on.\n-        t.push(0u16);\n-        f(t.as_ptr())\n-    }\n-\n-    #[link_name = \"kernel32\"]\n-    extern \"system\" {\n-        pub fn BeginUpdateResourceW(pFileName: LPCWSTR,\n-                                    bDeleteExistingResources: BOOL) -> HANDLE;\n-        pub fn UpdateResourceW(hUpdate: HANDLE,\n-                               lpType: LPCWSTR,\n-                               lpName: LPCWSTR,\n-                               wLanguage: WORD,\n-                               lpData: LPCVOID,\n-                               cbData: DWORD) -> BOOL;\n-        pub fn EndUpdateResourceW(hUpdate: HANDLE,\n-                                  fDiscard: BOOL) -> BOOL;\n-    }\n-\n-    fn MAKEINTRESOURCEW(id: int) -> LPCWSTR {\n-        unsafe{ transmute(id) }\n-    }\n-\n-    pub fn embed_manifest(filename: &Path,\n-                          manifest: &str) -> Result<(),~str> {\n-        unsafe {\n-            let hUpdate = as_utf16_p(filename.as_str().unwrap(), |path| {\n-                BeginUpdateResourceW(path, FALSE)\n-            });\n-            if hUpdate.is_null() {\n-                return Err(format!(\"failure in BeginUpdateResourceW: {}\", os::last_os_error()));\n-            }\n-\n-            let ok = UpdateResourceW(hUpdate,\n-                                     MAKEINTRESOURCEW(24), // RT_MANIFEST\n-                                     MAKEINTRESOURCEW(1),  // CREATEPROCESS_MANIFEST_RESOURCE_ID\n-                                     0,                    // LANG_NEUTRAL, SUBLANG_NEUTRAL\n-                                     manifest.as_ptr() as LPCVOID,\n-                                     manifest.len() as u32);\n-            if ok == FALSE {\n-                return Err(format!(\"failure in UpdateResourceW: {}\", os::last_os_error()));\n-            }\n-\n-            let ok = EndUpdateResourceW(hUpdate, FALSE);\n-            if ok == FALSE {\n-                return Err(format!(\"failure in EndUpdateResourceW: {}\", os::last_os_error()));\n-            }\n-            Ok(())\n-        }\n-    }\n-}"}, {"sha": "a5ec422699d5e6cc08ca032a609d798fa89e1f07", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a1d3cc53860b1e2377e489333e1f41dec6132b10/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1d3cc53860b1e2377e489333e1f41dec6132b10/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=a1d3cc53860b1e2377e489333e1f41dec6132b10", "patch": "@@ -88,7 +88,6 @@ pub mod front {\n pub mod back {\n     pub mod archive;\n     pub mod link;\n-    pub mod manifest;\n     pub mod abi;\n     pub mod arm;\n     pub mod mips;"}, {"sha": "12231907940db6751bf0cdeacc265bb45ed32208", "filename": "src/test/run-pass/setup.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/df25bb65eb56aa3815226c74190079be3904c13c/src%2Ftest%2Frun-pass%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df25bb65eb56aa3815226c74190079be3904c13c/src%2Ftest%2Frun-pass%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsetup.rs?ref=df25bb65eb56aa3815226c74190079be3904c13c", "patch": "@@ -1,19 +0,0 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// On Windows this test checks that Rust binaries have an embedded\n-// application manifest and don't trip UAC installer detection\n-// heuristics (\"setup\" is one of the \"installer\" keywords).\n-// For details, see issue #10512.\n-\n-// On other platforms this is a no-op.\n-\n-pub fn main() {\n-}"}]}