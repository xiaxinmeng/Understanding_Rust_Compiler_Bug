{"sha": "380733d6d0361271620ece87ed970c994fb8b226", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MDczM2Q2ZDAzNjEyNzE2MjBlY2U4N2VkOTcwYzk5NGZiOGIyMjY=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-21T17:00:31Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-21T17:00:31Z"}, "message": "Undo the previous mistaken change and make publish_decorations optional\n\nSee https://github.com/Microsoft/language-server-protocol/issues/567\nfor motivations to not require `InitializationOptions`\n\nTODO: Check if there are any other protocol extensions\nwhich should be disabled if not implemented on the client", "tree": {"sha": "5ce8e1c4b820f06f599ea1b1f53faef0161e842b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ce8e1c4b820f06f599ea1b1f53faef0161e842b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/380733d6d0361271620ece87ed970c994fb8b226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/380733d6d0361271620ece87ed970c994fb8b226", "html_url": "https://github.com/rust-lang/rust/commit/380733d6d0361271620ece87ed970c994fb8b226", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/380733d6d0361271620ece87ed970c994fb8b226/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70e5fb98a007c49e2f2a1d2f58c31008385c9754", "url": "https://api.github.com/repos/rust-lang/rust/commits/70e5fb98a007c49e2f2a1d2f58c31008385c9754", "html_url": "https://github.com/rust-lang/rust/commit/70e5fb98a007c49e2f2a1d2f58c31008385c9754"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "038912de089fff865cf4f0c58bafbd5831a671ce", "filename": "crates/ra_lsp_server/src/main.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/380733d6d0361271620ece87ed970c994fb8b226/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/380733d6d0361271620ece87ed970c994fb8b226/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs?ref=380733d6d0361271620ece87ed970c994fb8b226", "patch": "@@ -27,7 +27,10 @@ fn main() -> Result<()> {\n #[derive(Deserialize)]\n #[serde(rename_all = \"camelCase\")]\n struct InitializationOptions {\n-    highlighting_on: bool,\n+    // Whether the client supports our custom highlighting publishing decorations.\n+    // This is different to the highlightingOn setting, which is whether the client\n+    // wants highlighting to be used or sent.\n+    publish_decorations: Option<bool>,\n }\n \n fn main_inner() -> Result<()> {\n@@ -42,12 +45,12 @@ fn main_inner() -> Result<()> {\n                 .root_uri\n                 .and_then(|it| it.to_file_path().ok())\n                 .unwrap_or(cwd);\n-            let publish_decorations = params\n+            let supports_decorations = params\n                 .initialization_options\n                 .and_then(|v| InitializationOptions::deserialize(v).ok())\n-                .map(|it| it.highlighting_on)\n+                .and_then(|it| it.publish_decorations)\n                 == Some(true);\n-            ra_lsp_server::main_loop(false, root, publish_decorations, r, s)\n+            ra_lsp_server::main_loop(false, root, supports_decorations, r, s)\n         },\n     )?;\n     log::info!(\"shutting down IO...\");"}, {"sha": "8b787c329121fce695a5c46efe542c9a6d9c04b1", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/380733d6d0361271620ece87ed970c994fb8b226/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/380733d6d0361271620ece87ed970c994fb8b226/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=380733d6d0361271620ece87ed970c994fb8b226", "patch": "@@ -53,7 +53,7 @@ enum Task {\n pub fn main_loop(\n     internal_mode: bool,\n     ws_root: PathBuf,\n-    publish_decorations: bool,\n+    supports_decorations: bool,\n     msg_receiver: &Receiver<RawMessage>,\n     msg_sender: &Sender<RawMessage>,\n ) -> Result<()> {\n@@ -82,7 +82,7 @@ pub fn main_loop(\n     let mut subs = Subscriptions::new();\n     let main_res = main_loop_inner(\n         internal_mode,\n-        publish_decorations,\n+        supports_decorations,\n         &pool,\n         msg_sender,\n         msg_receiver,\n@@ -111,7 +111,7 @@ pub fn main_loop(\n \n fn main_loop_inner(\n     internal_mode: bool,\n-    publish_decorations: bool,\n+    supports_decorations: bool,\n     pool: &ThreadPool,\n     msg_sender: &Sender<RawMessage>,\n     msg_receiver: &Receiver<RawMessage>,\n@@ -201,7 +201,7 @@ fn main_loop_inner(\n             update_file_notifications_on_threadpool(\n                 pool,\n                 state.snapshot(),\n-                publish_decorations,\n+                supports_decorations,\n                 task_sender.clone(),\n                 subs.subscriptions(),\n             )"}]}