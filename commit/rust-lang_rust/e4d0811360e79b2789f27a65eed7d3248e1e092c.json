{"sha": "e4d0811360e79b2789f27a65eed7d3248e1e092c", "node_id": "C_kwDOAAsO6NoAKGU0ZDA4MTEzNjBlNzliMjc4OWYyN2E2NWVlZDdkMzI0OGUxZTA5MmM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-06-06T09:14:07Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-06-06T09:34:21Z"}, "message": "Implement _mm_srli_epi16 and _mm_slli_epi16", "tree": {"sha": "2776298a77d2952b814e99895dec6c23446a24d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2776298a77d2952b814e99895dec6c23446a24d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4d0811360e79b2789f27a65eed7d3248e1e092c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4d0811360e79b2789f27a65eed7d3248e1e092c", "html_url": "https://github.com/rust-lang/rust/commit/e4d0811360e79b2789f27a65eed7d3248e1e092c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4d0811360e79b2789f27a65eed7d3248e1e092c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f36bb6d5298cf51ec505d38152858a4b4d3241a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f36bb6d5298cf51ec505d38152858a4b4d3241a0", "html_url": "https://github.com/rust-lang/rust/commit/f36bb6d5298cf51ec505d38152858a4b4d3241a0"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "2202bf13808e0179413a198db9ad16ef5dbe33f6", "filename": "src/intrinsics/llvm_x86.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e4d0811360e79b2789f27a65eed7d3248e1e092c/src%2Fintrinsics%2Fllvm_x86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4d0811360e79b2789f27a65eed7d3248e1e092c/src%2Fintrinsics%2Fllvm_x86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fllvm_x86.rs?ref=e4d0811360e79b2789f27a65eed7d3248e1e092c", "patch": "@@ -120,6 +120,40 @@ pub(crate) fn codegen_x86_llvm_intrinsic_call<'tcx>(\n                 _ => fx.bcx.ins().iconst(types::I32, 0),\n             });\n         }\n+        \"llvm.x86.sse2.psrli.w\" => {\n+            let (a, imm8) = match args {\n+                [a, imm8] => (a, imm8),\n+                _ => bug!(\"wrong number of args for intrinsic {intrinsic}\"),\n+            };\n+            let a = codegen_operand(fx, a);\n+            let imm8 = crate::constant::mir_operand_get_const_val(fx, imm8)\n+                .expect(\"llvm.x86.sse2.psrli.d imm8 not const\");\n+\n+            simd_for_each_lane(fx, a, ret, &|fx, _lane_ty, _res_lane_ty, lane| match imm8\n+                .try_to_bits(Size::from_bytes(4))\n+                .unwrap_or_else(|| panic!(\"imm8 not scalar: {:?}\", imm8))\n+            {\n+                imm8 if imm8 < 16 => fx.bcx.ins().ushr_imm(lane, i64::from(imm8 as u8)),\n+                _ => fx.bcx.ins().iconst(types::I32, 0),\n+            });\n+        }\n+        \"llvm.x86.sse2.pslli.w\" => {\n+            let (a, imm8) = match args {\n+                [a, imm8] => (a, imm8),\n+                _ => bug!(\"wrong number of args for intrinsic {intrinsic}\"),\n+            };\n+            let a = codegen_operand(fx, a);\n+            let imm8 = crate::constant::mir_operand_get_const_val(fx, imm8)\n+                .expect(\"llvm.x86.sse2.pslli.d imm8 not const\");\n+\n+            simd_for_each_lane(fx, a, ret, &|fx, _lane_ty, _res_lane_ty, lane| match imm8\n+                .try_to_bits(Size::from_bytes(4))\n+                .unwrap_or_else(|| panic!(\"imm8 not scalar: {:?}\", imm8))\n+            {\n+                imm8 if imm8 < 16 => fx.bcx.ins().ishl_imm(lane, i64::from(imm8 as u8)),\n+                _ => fx.bcx.ins().iconst(types::I32, 0),\n+            });\n+        }\n         \"llvm.x86.avx.psrli.d\" => {\n             let (a, imm8) = match args {\n                 [a, imm8] => (a, imm8),"}]}