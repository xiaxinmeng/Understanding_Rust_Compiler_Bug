{"sha": "20c64e8155b0c29e8cbb4b9a8c99fd0a94a3caa2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYzY0ZTgxNTViMGMyOWU4Y2JiNGI5YThjOTlmZDBhOTRhM2NhYTI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-01T22:28:13Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-01T22:28:56Z"}, "message": "save-analysis: corrects reference for tuple struct and unit struct literals\n\nFixes https://github.com/nrc/rls-analysis/issues/77", "tree": {"sha": "7e82a3ec2ea8b72f9c015cbfb126e5e204b83f24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e82a3ec2ea8b72f9c015cbfb126e5e204b83f24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20c64e8155b0c29e8cbb4b9a8c99fd0a94a3caa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20c64e8155b0c29e8cbb4b9a8c99fd0a94a3caa2", "html_url": "https://github.com/rust-lang/rust/commit/20c64e8155b0c29e8cbb4b9a8c99fd0a94a3caa2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20c64e8155b0c29e8cbb4b9a8c99fd0a94a3caa2/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82a8968ce09f1fd15291f2b3e51a89178a6d0674", "url": "https://api.github.com/repos/rust-lang/rust/commits/82a8968ce09f1fd15291f2b3e51a89178a6d0674", "html_url": "https://github.com/rust-lang/rust/commit/82a8968ce09f1fd15291f2b3e51a89178a6d0674"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "63dde756787197a7efe15ea361917362e6aea733", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/20c64e8155b0c29e8cbb4b9a8c99fd0a94a3caa2/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20c64e8155b0c29e8cbb4b9a8c99fd0a94a3caa2/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=20c64e8155b0c29e8cbb4b9a8c99fd0a94a3caa2", "patch": "@@ -579,8 +579,8 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n             Node::NodeItem(&hir::Item { node: hir::ItemUse(ref path, _), .. }) |\n             Node::NodeVisibility(&hir::Visibility::Restricted { ref path, .. }) => path.def,\n \n-            Node::NodeExpr(&hir::Expr { node: hir::ExprPath(ref qpath), .. }) |\n             Node::NodeExpr(&hir::Expr { node: hir::ExprStruct(ref qpath, ..), .. }) |\n+            Node::NodeExpr(&hir::Expr { node: hir::ExprPath(ref qpath), .. }) |\n             Node::NodePat(&hir::Pat { node: hir::PatKind::Path(ref qpath), .. }) |\n             Node::NodePat(&hir::Pat { node: hir::PatKind::Struct(ref qpath, ..), .. }) |\n             Node::NodePat(&hir::Pat { node: hir::PatKind::TupleStruct(ref qpath, ..), .. }) => {\n@@ -643,7 +643,6 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n             HirDef::Static(..) |\n             HirDef::Const(..) |\n             HirDef::AssociatedConst(..) |\n-            HirDef::StructCtor(..) |\n             HirDef::VariantCtor(..) => {\n                 let span = self.span_from_span(sub_span.unwrap());\n                 Some(Ref {\n@@ -678,6 +677,18 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                     ref_id: id_from_def_id(def_id),\n                 })\n             }\n+            HirDef::StructCtor(def_id, _) => {\n+                // This is a reference to a tuple struct where the def_id points\n+                // to an invisible constructor function. That is not a very useful\n+                // def, so adjust to point to the tuple struct itself.\n+                let span = self.span_from_span(sub_span.unwrap());\n+                let parent_def_id = self.tcx.parent_def_id(def_id).unwrap();\n+                Some(Ref {\n+                    kind: RefKind::Type,\n+                    span,\n+                    ref_id: id_from_def_id(parent_def_id),\n+                })\n+            }\n             HirDef::Method(decl_id) => {\n                 let sub_span = self.span_utils.sub_span_for_meth_name(path.span);\n                 filter!(self.span_utils, sub_span, path.span, None);"}]}