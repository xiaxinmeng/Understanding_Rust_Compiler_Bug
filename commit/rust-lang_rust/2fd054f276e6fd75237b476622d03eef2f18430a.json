{"sha": "2fd054f276e6fd75237b476622d03eef2f18430a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZDA1NGYyNzZlNmZkNzUyMzdiNDc2NjIyZDAzZWVmMmYxODQzMGE=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-05-02T20:45:44Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-05-02T20:47:51Z"}, "message": "Fix derive argument parsing", "tree": {"sha": "9e5c592eca72244fca4d77a1a6bef4a2f231484d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e5c592eca72244fca4d77a1a6bef4a2f231484d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fd054f276e6fd75237b476622d03eef2f18430a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fd054f276e6fd75237b476622d03eef2f18430a", "html_url": "https://github.com/rust-lang/rust/commit/2fd054f276e6fd75237b476622d03eef2f18430a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fd054f276e6fd75237b476622d03eef2f18430a/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f0ed7ed92a978da73d19fe9f23b3953ca0a1de4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f0ed7ed92a978da73d19fe9f23b3953ca0a1de4", "html_url": "https://github.com/rust-lang/rust/commit/9f0ed7ed92a978da73d19fe9f23b3953ca0a1de4"}], "stats": {"total": 66, "additions": 40, "deletions": 26}, "files": [{"sha": "20e6edc17944da920cecd8fbab03a688b5278b51", "filename": "crates/ra_ide/src/completion/complete_attribute.rs", "status": "modified", "additions": 40, "deletions": 26, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/2fd054f276e6fd75237b476622d03eef2f18430a/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fd054f276e6fd75237b476622d03eef2f18430a/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs?ref=2fd054f276e6fd75237b476622d03eef2f18430a", "patch": "@@ -169,15 +169,30 @@ fn parse_derive_input(derive_input: ast::TokenTree) -> Result<FxHashSet<String>,\n             if left_paren.kind() == SyntaxKind::L_PAREN\n                 && right_paren.kind() == SyntaxKind::R_PAREN =>\n         {\n-            Ok(derive_input\n+            let mut input_derives = FxHashSet::default();\n+            let mut current_derive = String::new();\n+            for token in derive_input\n                 .syntax()\n                 .children_with_tokens()\n-                .filter_map(|child| child.into_token())\n-                .skip_while(|child| child != &left_paren)\n-                .take_while(|child| child != &right_paren)\n-                .filter(|child| child.kind() == SyntaxKind::IDENT)\n-                .map(|child| child.to_string())\n-                .collect())\n+                .filter_map(|token| token.into_token())\n+                .skip_while(|token| token != &left_paren)\n+                .skip(1)\n+                .take_while(|token| token != &right_paren)\n+            {\n+                if SyntaxKind::COMMA == token.kind() {\n+                    if !current_derive.is_empty() {\n+                        input_derives.insert(current_derive);\n+                        current_derive = String::new();\n+                    }\n+                } else {\n+                    current_derive.push_str(token.to_string().trim());\n+                }\n+            }\n+\n+            if !current_derive.is_empty() {\n+                input_derives.insert(current_derive);\n+            }\n+            Ok(input_derives)\n         }\n         _ => Err(()),\n     }\n@@ -188,8 +203,7 @@ fn get_derive_names_in_scope(ctx: &CompletionContext) -> FxHashSet<String> {\n     ctx.scope().process_all_names(&mut |name, scope_def| {\n         if let hir::ScopeDef::MacroDef(mac) = scope_def {\n             if mac.is_derive_macro() {\n-                let name_string = name.to_string();\n-                result.insert(name_string);\n+                result.insert(name.to_string());\n             }\n         }\n     });\n@@ -321,65 +335,65 @@ mod tests {\n         assert_debug_snapshot!(\n             do_attr_completion(\n                     r\"\n-                    #[derive(Whatever, PartialEq, <|>)]\n+                    #[derive(serde::Serialize, PartialEq, <|>)]\n                     struct Test {}\n                     \",\n             ),\n             @r###\"\n         [\n             CompletionItem {\n                 label: \"Clone\",\n-                source_range: 51..51,\n-                delete: 51..51,\n+                source_range: 59..59,\n+                delete: 59..59,\n                 insert: \"Clone\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"Copy, Clone\",\n-                source_range: 51..51,\n-                delete: 51..51,\n+                source_range: 59..59,\n+                delete: 59..59,\n                 insert: \"Copy, Clone\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"Debug\",\n-                source_range: 51..51,\n-                delete: 51..51,\n+                source_range: 59..59,\n+                delete: 59..59,\n                 insert: \"Debug\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"Default\",\n-                source_range: 51..51,\n-                delete: 51..51,\n+                source_range: 59..59,\n+                delete: 59..59,\n                 insert: \"Default\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"Eq\",\n-                source_range: 51..51,\n-                delete: 51..51,\n+                source_range: 59..59,\n+                delete: 59..59,\n                 insert: \"Eq\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"Hash\",\n-                source_range: 51..51,\n-                delete: 51..51,\n+                source_range: 59..59,\n+                delete: 59..59,\n                 insert: \"Hash\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"Ord, PartialOrd, Eq\",\n-                source_range: 51..51,\n-                delete: 51..51,\n+                source_range: 59..59,\n+                delete: 59..59,\n                 insert: \"Ord, PartialOrd, Eq\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"PartialOrd\",\n-                source_range: 51..51,\n-                delete: 51..51,\n+                source_range: 59..59,\n+                delete: 59..59,\n                 insert: \"PartialOrd\",\n                 kind: Attribute,\n             },"}]}