{"sha": "15b680ae86eefae754c3a348d89207fa100b4ca6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YjY4MGFlODZlZWZhZTc1NGMzYTM0OGQ4OTIwN2ZhMTAwYjRjYTY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-03T14:43:12Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-05T19:46:42Z"}, "message": "Test fixes and rebase conflicts", "tree": {"sha": "e122fdf0d5e946c2769a598568918d9cbe7cac19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e122fdf0d5e946c2769a598568918d9cbe7cac19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15b680ae86eefae754c3a348d89207fa100b4ca6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15b680ae86eefae754c3a348d89207fa100b4ca6", "html_url": "https://github.com/rust-lang/rust/commit/15b680ae86eefae754c3a348d89207fa100b4ca6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15b680ae86eefae754c3a348d89207fa100b4ca6/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41ed455db8cbde3cfff0d72e0ae383c20721b27a", "url": "https://api.github.com/repos/rust-lang/rust/commits/41ed455db8cbde3cfff0d72e0ae383c20721b27a", "html_url": "https://github.com/rust-lang/rust/commit/41ed455db8cbde3cfff0d72e0ae383c20721b27a"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "29566fb1e7cd1f0cf5d13e3e7d2dd2f1d70d447e", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15b680ae86eefae754c3a348d89207fa100b4ca6/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15b680ae86eefae754c3a348d89207fa100b4ca6/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=15b680ae86eefae754c3a348d89207fa100b4ca6", "patch": "@@ -180,7 +180,7 @@ pub fn validate_crate_name(sess: Option<&Session>, s: &str, sp: Option<Span>) {\n     for c in s.chars() {\n         if c.is_alphanumeric() { continue }\n         if c == '_' || c == '-' { continue }\n-        err(format!(\"invalid character in crate name: `{}`\", c).as_slice());\n+        err(format!(\"invalid character `{}` in crate name: `{}`\", c, s).as_slice());\n     }\n     match sess {\n         Some(sess) => sess.abort_if_errors(),"}, {"sha": "7eb3fcce7803fdd506c92d913c0e2487ec7ecf00", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15b680ae86eefae754c3a348d89207fa100b4ca6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15b680ae86eefae754c3a348d89207fa100b4ca6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=15b680ae86eefae754c3a348d89207fa100b4ca6", "patch": "@@ -3972,7 +3972,7 @@ impl NamespaceTreeNode {\n }\n \n fn crate_root_namespace<'a>(cx: &'a CrateContext) -> &'a str {\n-    cx.link_meta.crateid.name.as_slice()\n+    cx.link_meta.crate_name.as_slice()\n }\n \n fn namespace_for_item(cx: &CrateContext, def_id: ast::DefId) -> Rc<NamespaceTreeNode> {"}, {"sha": "663a9f7125e705816f80ad38ed32dcd0d3022d95", "filename": "src/test/run-make/issue-11908/Makefile", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/15b680ae86eefae754c3a348d89207fa100b4ca6/src%2Ftest%2Frun-make%2Fissue-11908%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/15b680ae86eefae754c3a348d89207fa100b4ca6/src%2Ftest%2Frun-make%2Fissue-11908%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-11908%2FMakefile?ref=15b680ae86eefae754c3a348d89207fa100b4ca6", "patch": "@@ -10,12 +10,14 @@\n all:\n \tmkdir $(TMPDIR)/other\n \t$(RUSTC) foo.rs --crate-type=dylib\n-\t$(RUSTC) foo.rs --crate-type=dylib -o $(TMPDIR)/other/libfoo.so\n+\tmv $(call DYLIB,foo) $(TMPDIR)/other\n+\t$(RUSTC) foo.rs --crate-type=dylib\n \t$(RUSTC) bar.rs -L $(TMPDIR)/other 2>&1 | \\\n \t\tgrep \"multiple dylib candidates\"\n \trm -rf $(TMPDIR)\n \tmkdir -p $(TMPDIR)/other\n \t$(RUSTC) foo.rs --crate-type=rlib\n-\t$(RUSTC) foo.rs --crate-type=rlib -o $(TMPDIR)/other/libfoo.rlib\n+\tmv $(TMPDIR)/libfoo.rlib $(TMPDIR)/other\n+\t$(RUSTC) foo.rs --crate-type=rlib\n \t$(RUSTC) bar.rs -L $(TMPDIR)/other 2>&1 | \\\n \t\tgrep \"multiple rlib candidates\""}]}