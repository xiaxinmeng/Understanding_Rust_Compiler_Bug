{"sha": "751562d2f77a7bc3eeeffbf8e53c9f3515fa9653", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1MTU2MmQyZjc3YTdiYzNlZWVmZmJmOGU1M2M5ZjM1MTVmYTk2NTM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-05T22:19:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-05T22:19:24Z"}, "message": "better introduce", "tree": {"sha": "d7ecc49fbcd3970d3c927741b6e25966889f4584", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7ecc49fbcd3970d3c927741b6e25966889f4584"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/751562d2f77a7bc3eeeffbf8e53c9f3515fa9653", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/751562d2f77a7bc3eeeffbf8e53c9f3515fa9653", "html_url": "https://github.com/rust-lang/rust/commit/751562d2f77a7bc3eeeffbf8e53c9f3515fa9653", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/751562d2f77a7bc3eeeffbf8e53c9f3515fa9653/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb64edf8babe617ca6219e53520ce87a2dd00769", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb64edf8babe617ca6219e53520ce87a2dd00769", "html_url": "https://github.com/rust-lang/rust/commit/bb64edf8babe617ca6219e53520ce87a2dd00769"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "4a07d1bc9a5a4403fae43c59cdd659603f62885a", "filename": "crates/libeditor/src/code_actions.rs", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/751562d2f77a7bc3eeeffbf8e53c9f3515fa9653/crates%2Flibeditor%2Fsrc%2Fcode_actions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/751562d2f77a7bc3eeeffbf8e53c9f3515fa9653/crates%2Flibeditor%2Fsrc%2Fcode_actions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fcode_actions.rs?ref=751562d2f77a7bc3eeeffbf8e53c9f3515fa9653", "patch": "@@ -109,17 +109,22 @@ pub fn introduce_variable<'a>(file: &'a File, range: TextRange) -> Option<impl F\n     }\n     Some(move || {\n         let mut buf = String::new();\n+        let mut edit = EditBuilder::new();\n+\n         buf.push_str(\"let var_name = \");\n         expr.syntax().text().push_to(&mut buf);\n-        buf.push_str(\";\");\n-        indent.text().push_to(&mut buf);\n-\n-        let mut edit = EditBuilder::new();\n-        edit.replace(expr.syntax().range(), \"var_name\".to_string());\n-        edit.insert(anchor_stmt.syntax().range().start(), buf);\n+        if expr.syntax().range().start() == anchor_stmt.syntax().range().start() {\n+            edit.replace(expr.syntax().range(), buf);\n+        } else {\n+            buf.push_str(\";\");\n+            indent.text().push_to(&mut buf);\n+            edit.replace(expr.syntax().range(), \"var_name\".to_string());\n+            edit.insert(anchor_stmt.syntax().range().start(), buf);\n+        }\n+        let cursor_position = anchor_stmt.syntax().range().start() + TextUnit::of_str(\"let \");\n         LocalEdit {\n             edit: edit.finish(),\n-            cursor_position: Some(anchor_stmt.syntax().range().start() + TextUnit::of_str(\"let \")),\n+            cursor_position: Some(cursor_position),\n         }\n     })\n }\n@@ -183,7 +188,7 @@ mod tests {\n     }\n \n     #[test]\n-    fn test_intrdoduce_var() {\n+    fn test_intrdoduce_var_simple() {\n         check_action_range(\n             \"\n fn foo() {\n@@ -192,6 +197,19 @@ fn foo() {\n fn foo() {\n     let <|>var_name = 1 + 1;\n     foo(var_name);\n+}\",\n+            |file, range| introduce_variable(file, range).map(|f| f()),\n+        );\n+    }\n+    #[test]\n+    fn test_intrdoduce_var_expr_stmt() {\n+check_action_range(\n+            \"\n+fn foo() {\n+    <|>1 + 1<|>;\n+}\", \"\n+fn foo() {\n+    let <|>var_name = 1 + 1;\n }\",\n             |file, range| introduce_variable(file, range).map(|f| f()),\n         );"}]}