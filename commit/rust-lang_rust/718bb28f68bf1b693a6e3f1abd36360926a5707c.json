{"sha": "718bb28f68bf1b693a6e3f1abd36360926a5707c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxOGJiMjhmNjhiZjFiNjkzYTZlM2YxYWJkMzYzNjA5MjZhNTcwN2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T11:37:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T11:37:18Z"}, "message": "Auto merge of #6211 - ThibsG:NeedlessBoolCfg, r=flip1995\n\nNo lint with `cfg!` and fix sugg for macro in `needless_bool` lint\n\nDon't lint if `cfg!` macro is one of the operand.\nFix suggestion when the span originated from a macro, using `hir_with_macro_callsite`.\n\nFixes: #3973\n\nchangelog: none", "tree": {"sha": "56a409e1c96244aef8fd080e460f706ed00060a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56a409e1c96244aef8fd080e460f706ed00060a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/718bb28f68bf1b693a6e3f1abd36360926a5707c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/718bb28f68bf1b693a6e3f1abd36360926a5707c", "html_url": "https://github.com/rust-lang/rust/commit/718bb28f68bf1b693a6e3f1abd36360926a5707c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/718bb28f68bf1b693a6e3f1abd36360926a5707c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38be214724f44ce4ff5944068cb1be3a79b0d218", "url": "https://api.github.com/repos/rust-lang/rust/commits/38be214724f44ce4ff5944068cb1be3a79b0d218", "html_url": "https://github.com/rust-lang/rust/commit/38be214724f44ce4ff5944068cb1be3a79b0d218"}, {"sha": "62f60e1ae5bd2287497746bf90a302903e0ae462", "url": "https://api.github.com/repos/rust-lang/rust/commits/62f60e1ae5bd2287497746bf90a302903e0ae462", "html_url": "https://github.com/rust-lang/rust/commit/62f60e1ae5bd2287497746bf90a302903e0ae462"}], "stats": {"total": 158, "additions": 135, "deletions": 23}, "files": [{"sha": "a799a644e970e1d3bce83435db28f6576bba5115", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/718bb28f68bf1b693a6e3f1abd36360926a5707c/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/718bb28f68bf1b693a6e3f1abd36360926a5707c/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=718bb28f68bf1b693a6e3f1abd36360926a5707c", "patch": "@@ -3,7 +3,9 @@\n //! This lint is **warn** by default\n \n use crate::utils::sugg::Sugg;\n-use crate::utils::{higher, parent_node_is_if_expr, snippet_with_applicability, span_lint, span_lint_and_sugg};\n+use crate::utils::{\n+    higher, is_expn_of, parent_node_is_if_expr, snippet_with_applicability, span_lint, span_lint_and_sugg,\n+};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n@@ -233,6 +235,9 @@ fn check_comparison<'a, 'tcx>(\n             cx.typeck_results().expr_ty(left_side),\n             cx.typeck_results().expr_ty(right_side),\n         );\n+        if is_expn_of(left_side.span, \"cfg\").is_some() || is_expn_of(right_side.span, \"cfg\").is_some() {\n+            return;\n+        }\n         if l_ty.is_bool() && r_ty.is_bool() {\n             let mut applicability = Applicability::MachineApplicable;\n \n@@ -295,7 +300,14 @@ fn suggest_bool_comparison<'a, 'tcx>(\n     message: &str,\n     conv_hint: impl FnOnce(Sugg<'a>) -> Sugg<'a>,\n ) {\n-    let hint = Sugg::hir_with_applicability(cx, expr, \"..\", &mut applicability);\n+    let hint = if expr.span.from_expansion() {\n+        if applicability != Applicability::Unspecified {\n+            applicability = Applicability::MaybeIncorrect;\n+        }\n+        Sugg::hir_with_macro_callsite(cx, expr, \"..\")\n+    } else {\n+        Sugg::hir_with_applicability(cx, expr, \"..\", &mut applicability)\n+    };\n     span_lint_and_sugg(\n         cx,\n         BOOL_COMPARISON,"}, {"sha": "5a012ff4d27ab184ff758cf1f1492246a51e47c1", "filename": "tests/ui/bool_comparison.fixed", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/718bb28f68bf1b693a6e3f1abd36360926a5707c/tests%2Fui%2Fbool_comparison.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/718bb28f68bf1b693a6e3f1abd36360926a5707c/tests%2Fui%2Fbool_comparison.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.fixed?ref=718bb28f68bf1b693a6e3f1abd36360926a5707c", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n \n-#[warn(clippy::bool_comparison)]\n+#![warn(clippy::bool_comparison)]\n+\n fn main() {\n     let x = true;\n     if x {\n@@ -127,3 +128,40 @@ fn issue4983() {\n     if b == a {};\n     if !b == !a {};\n }\n+\n+macro_rules! m {\n+    ($func:ident) => {\n+        $func()\n+    };\n+}\n+\n+fn func() -> bool {\n+    true\n+}\n+\n+#[allow(dead_code)]\n+fn issue3973() {\n+    // ok, don't lint on `cfg` invocation\n+    if false == cfg!(feature = \"debugging\") {}\n+    if cfg!(feature = \"debugging\") == false {}\n+    if true == cfg!(feature = \"debugging\") {}\n+    if cfg!(feature = \"debugging\") == true {}\n+\n+    // lint, could be simplified\n+    if !m!(func) {}\n+    if !m!(func) {}\n+    if m!(func) {}\n+    if m!(func) {}\n+\n+    // no lint with a variable\n+    let is_debug = false;\n+    if is_debug == cfg!(feature = \"debugging\") {}\n+    if cfg!(feature = \"debugging\") == is_debug {}\n+    if is_debug == m!(func) {}\n+    if m!(func) == is_debug {}\n+    let is_debug = true;\n+    if is_debug == cfg!(feature = \"debugging\") {}\n+    if cfg!(feature = \"debugging\") == is_debug {}\n+    if is_debug == m!(func) {}\n+    if m!(func) == is_debug {}\n+}"}, {"sha": "c534bc25c20f1105ea497f9405d24a5334c3f7b9", "filename": "tests/ui/bool_comparison.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/718bb28f68bf1b693a6e3f1abd36360926a5707c/tests%2Fui%2Fbool_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/718bb28f68bf1b693a6e3f1abd36360926a5707c/tests%2Fui%2Fbool_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.rs?ref=718bb28f68bf1b693a6e3f1abd36360926a5707c", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n \n-#[warn(clippy::bool_comparison)]\n+#![warn(clippy::bool_comparison)]\n+\n fn main() {\n     let x = true;\n     if x == true {\n@@ -127,3 +128,40 @@ fn issue4983() {\n     if b == a {};\n     if !b == !a {};\n }\n+\n+macro_rules! m {\n+    ($func:ident) => {\n+        $func()\n+    };\n+}\n+\n+fn func() -> bool {\n+    true\n+}\n+\n+#[allow(dead_code)]\n+fn issue3973() {\n+    // ok, don't lint on `cfg` invocation\n+    if false == cfg!(feature = \"debugging\") {}\n+    if cfg!(feature = \"debugging\") == false {}\n+    if true == cfg!(feature = \"debugging\") {}\n+    if cfg!(feature = \"debugging\") == true {}\n+\n+    // lint, could be simplified\n+    if false == m!(func) {}\n+    if m!(func) == false {}\n+    if true == m!(func) {}\n+    if m!(func) == true {}\n+\n+    // no lint with a variable\n+    let is_debug = false;\n+    if is_debug == cfg!(feature = \"debugging\") {}\n+    if cfg!(feature = \"debugging\") == is_debug {}\n+    if is_debug == m!(func) {}\n+    if m!(func) == is_debug {}\n+    let is_debug = true;\n+    if is_debug == cfg!(feature = \"debugging\") {}\n+    if cfg!(feature = \"debugging\") == is_debug {}\n+    if is_debug == m!(func) {}\n+    if m!(func) == is_debug {}\n+}"}, {"sha": "31522d4a525199e23c9ec51da602c2b2ee2495ac", "filename": "tests/ui/bool_comparison.stderr", "status": "modified", "additions": 43, "deletions": 19, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/718bb28f68bf1b693a6e3f1abd36360926a5707c/tests%2Fui%2Fbool_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/718bb28f68bf1b693a6e3f1abd36360926a5707c/tests%2Fui%2Fbool_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.stderr?ref=718bb28f68bf1b693a6e3f1abd36360926a5707c", "patch": "@@ -1,112 +1,136 @@\n error: equality checks against true are unnecessary\n-  --> $DIR/bool_comparison.rs:6:8\n+  --> $DIR/bool_comparison.rs:7:8\n    |\n LL |     if x == true {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n    |\n    = note: `-D clippy::bool-comparison` implied by `-D warnings`\n \n error: equality checks against false can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:11:8\n+  --> $DIR/bool_comparison.rs:12:8\n    |\n LL |     if x == false {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: equality checks against true are unnecessary\n-  --> $DIR/bool_comparison.rs:16:8\n+  --> $DIR/bool_comparison.rs:17:8\n    |\n LL |     if true == x {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: equality checks against false can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:21:8\n+  --> $DIR/bool_comparison.rs:22:8\n    |\n LL |     if false == x {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: inequality checks against true can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:26:8\n+  --> $DIR/bool_comparison.rs:27:8\n    |\n LL |     if x != true {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: inequality checks against false are unnecessary\n-  --> $DIR/bool_comparison.rs:31:8\n+  --> $DIR/bool_comparison.rs:32:8\n    |\n LL |     if x != false {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: inequality checks against true can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:36:8\n+  --> $DIR/bool_comparison.rs:37:8\n    |\n LL |     if true != x {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: inequality checks against false are unnecessary\n-  --> $DIR/bool_comparison.rs:41:8\n+  --> $DIR/bool_comparison.rs:42:8\n    |\n LL |     if false != x {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: less than comparison against true can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:46:8\n+  --> $DIR/bool_comparison.rs:47:8\n    |\n LL |     if x < true {\n    |        ^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: greater than checks against false are unnecessary\n-  --> $DIR/bool_comparison.rs:51:8\n+  --> $DIR/bool_comparison.rs:52:8\n    |\n LL |     if false < x {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: greater than checks against false are unnecessary\n-  --> $DIR/bool_comparison.rs:56:8\n+  --> $DIR/bool_comparison.rs:57:8\n    |\n LL |     if x > false {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: less than comparison against true can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:61:8\n+  --> $DIR/bool_comparison.rs:62:8\n    |\n LL |     if true > x {\n    |        ^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: order comparisons between booleans can be simplified\n-  --> $DIR/bool_comparison.rs:67:8\n+  --> $DIR/bool_comparison.rs:68:8\n    |\n LL |     if x < y {\n    |        ^^^^^ help: try simplifying it as shown: `!x & y`\n \n error: order comparisons between booleans can be simplified\n-  --> $DIR/bool_comparison.rs:72:8\n+  --> $DIR/bool_comparison.rs:73:8\n    |\n LL |     if x > y {\n    |        ^^^^^ help: try simplifying it as shown: `x & !y`\n \n error: this comparison might be written more concisely\n-  --> $DIR/bool_comparison.rs:120:8\n+  --> $DIR/bool_comparison.rs:121:8\n    |\n LL |     if a == !b {};\n    |        ^^^^^^^ help: try simplifying it as shown: `a != b`\n \n error: this comparison might be written more concisely\n-  --> $DIR/bool_comparison.rs:121:8\n+  --> $DIR/bool_comparison.rs:122:8\n    |\n LL |     if !a == b {};\n    |        ^^^^^^^ help: try simplifying it as shown: `a != b`\n \n error: this comparison might be written more concisely\n-  --> $DIR/bool_comparison.rs:125:8\n+  --> $DIR/bool_comparison.rs:126:8\n    |\n LL |     if b == !a {};\n    |        ^^^^^^^ help: try simplifying it as shown: `b != a`\n \n error: this comparison might be written more concisely\n-  --> $DIR/bool_comparison.rs:126:8\n+  --> $DIR/bool_comparison.rs:127:8\n    |\n LL |     if !b == a {};\n    |        ^^^^^^^ help: try simplifying it as shown: `b != a`\n \n-error: aborting due to 18 previous errors\n+error: equality checks against false can be replaced by a negation\n+  --> $DIR/bool_comparison.rs:151:8\n+   |\n+LL |     if false == m!(func) {}\n+   |        ^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!m!(func)`\n+\n+error: equality checks against false can be replaced by a negation\n+  --> $DIR/bool_comparison.rs:152:8\n+   |\n+LL |     if m!(func) == false {}\n+   |        ^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!m!(func)`\n+\n+error: equality checks against true are unnecessary\n+  --> $DIR/bool_comparison.rs:153:8\n+   |\n+LL |     if true == m!(func) {}\n+   |        ^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `m!(func)`\n+\n+error: equality checks against true are unnecessary\n+  --> $DIR/bool_comparison.rs:154:8\n+   |\n+LL |     if m!(func) == true {}\n+   |        ^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `m!(func)`\n+\n+error: aborting due to 22 previous errors\n "}]}