{"sha": "94e38002bf31c043ac8eb55ca4f176edda7b5f99", "node_id": "C_kwDOAAsO6NoAKDk0ZTM4MDAyYmYzMWMwNDNhYzhlYjU1Y2E0ZjE3NmVkZGE3YjVmOTk", "commit": {"author": {"name": "antoyo", "email": "antoyo@users.noreply.github.com", "date": "2022-06-18T23:49:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-18T23:49:13Z"}, "message": "Merge pull request #182 from GuillaumeGomez/duplicated-intrinsics\n\nRemove duplicated intrinsics and add check", "tree": {"sha": "bebf3207ab928202881cd2897047aa69753ccc33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bebf3207ab928202881cd2897047aa69753ccc33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94e38002bf31c043ac8eb55ca4f176edda7b5f99", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJirmR5CRBK7hj4Ov3rIwAAAJwIAAd3UD7rsuQZ6P6//dlxirIW\nOmfOzEwWA+cBSz/AEmcSuQw4z5ZL4+fGYlyA/kSjqtZ1me2kjVOrLhFK1nK6j0aM\nh6ZcPWC3KBrH+IK5koOfU+iyhQowGmX99YtTlU0L1fS7tEHOkx9spUvUmhUmm2/9\nlpcBELJzzaqbt/l+UyyYR5fH5BvKpbNhy8rKyXAVC5dH6+8Vc/GbMW8g6r10olN1\n7msMdc4bCb+IC+ED1PVrclMG0pMgo0ULzCscPGXDQiMeDMmdDPdj+mpojmtMNLZB\nHqh4nexENxEX+hwWOnVoUawHDaYXqpSMMsqbvDYOVjIoBsy0dPBLhDp8Vj2jKvA=\n=O/EX\n-----END PGP SIGNATURE-----\n", "payload": "tree bebf3207ab928202881cd2897047aa69753ccc33\nparent 302157d7bdac5e2849f194b24b2508ab502e6c8b\nparent 8d253b9f735ea8fa1b1574bbef09b59037d3970d\nauthor antoyo <antoyo@users.noreply.github.com> 1655596153 -0400\ncommitter GitHub <noreply@github.com> 1655596153 -0400\n\nMerge pull request #182 from GuillaumeGomez/duplicated-intrinsics\n\nRemove duplicated intrinsics and add check"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94e38002bf31c043ac8eb55ca4f176edda7b5f99", "html_url": "https://github.com/rust-lang/rust/commit/94e38002bf31c043ac8eb55ca4f176edda7b5f99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94e38002bf31c043ac8eb55ca4f176edda7b5f99/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "302157d7bdac5e2849f194b24b2508ab502e6c8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/302157d7bdac5e2849f194b24b2508ab502e6c8b", "html_url": "https://github.com/rust-lang/rust/commit/302157d7bdac5e2849f194b24b2508ab502e6c8b"}, {"sha": "8d253b9f735ea8fa1b1574bbef09b59037d3970d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d253b9f735ea8fa1b1574bbef09b59037d3970d", "html_url": "https://github.com/rust-lang/rust/commit/8d253b9f735ea8fa1b1574bbef09b59037d3970d"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "d62ac47dedb64b610abdd245c65cfaf608e034d6", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/94e38002bf31c043ac8eb55ca4f176edda7b5f99/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/94e38002bf31c043ac8eb55ca4f176edda7b5f99/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=94e38002bf31c043ac8eb55ca4f176edda7b5f99", "patch": "@@ -129,3 +129,9 @@ jobs:\n         export RUN_RUNS=2\n \n         ./test.sh --release --no-default-features\n+\n+  duplicates:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+      - run: python tools/check_intrinsics_duplicates.py"}, {"sha": "c09fb3c759f3b10189ac2780096a6731d43ad974", "filename": "tools/check_intrinsics_duplicates.py", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/94e38002bf31c043ac8eb55ca4f176edda7b5f99/tools%2Fcheck_intrinsics_duplicates.py", "raw_url": "https://github.com/rust-lang/rust/raw/94e38002bf31c043ac8eb55ca4f176edda7b5f99/tools%2Fcheck_intrinsics_duplicates.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tools%2Fcheck_intrinsics_duplicates.py?ref=94e38002bf31c043ac8eb55ca4f176edda7b5f99", "patch": "@@ -0,0 +1,67 @@\n+import sys\n+\n+\n+def check_duplicates():\n+    auto_content = \"\"\n+    manual_content = \"\"\n+\n+    with open(\"src/intrinsic/llvm.rs\", \"r\", encoding=\"utf8\") as f:\n+        manual_content = f.read()\n+    with open(\"src/intrinsic/archs.rs\", \"r\", encoding=\"utf8\") as f:\n+        auto_content = f.read()\n+\n+    intrinsics_map = {}\n+    for line in auto_content.splitlines():\n+        line = line.strip()\n+        if not line.startswith('\"'):\n+            continue\n+        parts = line.split('\"')\n+        if len(parts) != 5:\n+            continue\n+        intrinsics_map[parts[1]] = parts[3]\n+\n+    if len(intrinsics_map) == 0:\n+        print(\"No intrinsics found in auto code... Aborting.\")\n+        return 1\n+    print(\"Found {} intrinsics in auto code\".format(len(intrinsics_map)))\n+    errors = []\n+    lines = manual_content.splitlines()\n+    pos = 0\n+    found = 0\n+    while pos < len(lines):\n+        line = lines[pos].strip()\n+        # This is our marker.\n+        if line == \"let gcc_name = match name {\":\n+            while pos < len(lines):\n+                line = lines[pos].strip()\n+                pos += 1\n+                if line == \"};\":\n+                    # We're done!\n+                    if found == 0:\n+                        print(\"No intrinsics found in manual code even though we found the \"\n+                            \"marker... Aborting...\")\n+                        return 1\n+                    for error in errors:\n+                        print(\"ERROR => {}\".format(error))\n+                    return 1 if len(errors) != 0 else 0\n+                parts = line.split('\"')\n+                if len(parts) != 5:\n+                    continue\n+                found += 1\n+                if parts[1] in intrinsics_map:\n+                    if parts[3] != intrinsics_map[parts[1]]:\n+                        print(\"Same intrinsics (`{}` at line {}) but different GCC \"\n+                            \"translations: `{}` != `{}`\".format(\n+                                parts[1], pos, intrinsics_map[parts[1]], parts[3]))\n+                    else:\n+                        errors.append(\"Duplicated intrinsics: `{}` at line {}. Please remove it \"\n+                            \" from manual code\".format(parts[1], pos))\n+            # Weird but whatever...\n+            return 1 if len(errors) != 0 else 0\n+        pos += 1\n+    print(\"No intrinsics found in manual code... Aborting\")\n+    return 1\n+\n+\n+if __name__ == \"__main__\":\n+    sys.exit(check_duplicates())"}]}