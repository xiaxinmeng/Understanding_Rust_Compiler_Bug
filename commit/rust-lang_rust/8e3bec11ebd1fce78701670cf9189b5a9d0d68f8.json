{"sha": "8e3bec11ebd1fce78701670cf9189b5a9d0d68f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlM2JlYzExZWJkMWZjZTc4NzAxNjcwY2Y5MTg5YjVhOWQwZDY4Zjg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-22T13:46:42Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-22T13:46:42Z"}, "message": "TypeParamList Owner", "tree": {"sha": "16066a9bed666d0176bfa656a310fe9a264af53c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16066a9bed666d0176bfa656a310fe9a264af53c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8", "html_url": "https://github.com/rust-lang/rust/commit/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55896aedb16e9eae6309bf129d04a75e6d26530d", "url": "https://api.github.com/repos/rust-lang/rust/commits/55896aedb16e9eae6309bf129d04a75e6d26530d", "html_url": "https://github.com/rust-lang/rust/commit/55896aedb16e9eae6309bf129d04a75e6d26530d"}], "stats": {"total": 144, "additions": 118, "deletions": 26}, "files": [{"sha": "d0e07fddc3198833bbd490b5b3140ef12a438bae", "filename": "crates/libsyntax2/src/ast/generated.rs", "status": "modified", "additions": 30, "deletions": 5, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs?ref=8e3bec11ebd1fce78701670cf9189b5a9d0d68f8", "patch": "@@ -64,6 +64,7 @@ impl<'a> AstNode<'a> for ConstDef<'a> {\n }\n \n impl<'a> ast::NameOwner<'a> for ConstDef<'a> {}\n+impl<'a> ast::TypeParamsOwner<'a> for ConstDef<'a> {}\n impl<'a> ast::AttrsOwner<'a> for ConstDef<'a> {}\n impl<'a> ConstDef<'a> {}\n \n@@ -102,6 +103,7 @@ impl<'a> AstNode<'a> for EnumDef<'a> {\n }\n \n impl<'a> ast::NameOwner<'a> for EnumDef<'a> {}\n+impl<'a> ast::TypeParamsOwner<'a> for EnumDef<'a> {}\n impl<'a> ast::AttrsOwner<'a> for EnumDef<'a> {}\n impl<'a> EnumDef<'a> {}\n \n@@ -152,6 +154,7 @@ impl<'a> AstNode<'a> for FnDef<'a> {\n }\n \n impl<'a> ast::NameOwner<'a> for FnDef<'a> {}\n+impl<'a> ast::TypeParamsOwner<'a> for FnDef<'a> {}\n impl<'a> ast::AttrsOwner<'a> for FnDef<'a> {}\n impl<'a> FnDef<'a> {}\n \n@@ -351,6 +354,7 @@ impl<'a> AstNode<'a> for NominalDef<'a> {\n }\n \n impl<'a> ast::AttrsOwner<'a> for NominalDef<'a> {}\n+impl<'a> ast::TypeParamsOwner<'a> for NominalDef<'a> {}\n impl<'a> NominalDef<'a> {}\n \n // ParenType\n@@ -478,6 +482,7 @@ impl<'a> AstNode<'a> for StaticDef<'a> {\n }\n \n impl<'a> ast::NameOwner<'a> for StaticDef<'a> {}\n+impl<'a> ast::TypeParamsOwner<'a> for StaticDef<'a> {}\n impl<'a> ast::AttrsOwner<'a> for StaticDef<'a> {}\n impl<'a> StaticDef<'a> {}\n \n@@ -498,6 +503,7 @@ impl<'a> AstNode<'a> for StructDef<'a> {\n }\n \n impl<'a> ast::NameOwner<'a> for StructDef<'a> {}\n+impl<'a> ast::TypeParamsOwner<'a> for StructDef<'a> {}\n impl<'a> ast::AttrsOwner<'a> for StructDef<'a> {}\n impl<'a> StructDef<'a> {\n     pub fn fields(self) -> impl Iterator<Item = NamedField<'a>> + 'a {\n@@ -580,9 +586,28 @@ impl<'a> AstNode<'a> for TypeDef<'a> {\n }\n \n impl<'a> ast::NameOwner<'a> for TypeDef<'a> {}\n+impl<'a> ast::TypeParamsOwner<'a> for TypeDef<'a> {}\n impl<'a> ast::AttrsOwner<'a> for TypeDef<'a> {}\n impl<'a> TypeDef<'a> {}\n \n+// TypeParamList\n+#[derive(Debug, Clone, Copy)]\n+pub struct TypeParamList<'a> {\n+    syntax: SyntaxNodeRef<'a>,\n+}\n+\n+impl<'a> AstNode<'a> for TypeParamList<'a> {\n+    fn cast(syntax: SyntaxNodeRef<'a>) -> Option<Self> {\n+        match syntax.kind() {\n+            TYPE_PARAM_LIST => Some(TypeParamList { syntax }),\n+            _ => None,\n+        }\n+    }\n+    fn syntax(self) -> SyntaxNodeRef<'a> { self.syntax }\n+}\n+\n+impl<'a> TypeParamList<'a> {}\n+\n // TypeRef\n #[derive(Debug, Clone, Copy)]\n pub enum TypeRef<'a> {\n@@ -641,21 +666,21 @@ impl<'a> AstNode<'a> for TypeRef<'a> {\n \n impl<'a> TypeRef<'a> {}\n \n-// Whitespace\n+// WhereClause\n #[derive(Debug, Clone, Copy)]\n-pub struct Whitespace<'a> {\n+pub struct WhereClause<'a> {\n     syntax: SyntaxNodeRef<'a>,\n }\n \n-impl<'a> AstNode<'a> for Whitespace<'a> {\n+impl<'a> AstNode<'a> for WhereClause<'a> {\n     fn cast(syntax: SyntaxNodeRef<'a>) -> Option<Self> {\n         match syntax.kind() {\n-            WHITESPACE => Some(Whitespace { syntax }),\n+            WHERE_CLAUSE => Some(WhereClause { syntax }),\n             _ => None,\n         }\n     }\n     fn syntax(self) -> SyntaxNodeRef<'a> { self.syntax }\n }\n \n-impl<'a> Whitespace<'a> {}\n+impl<'a> WhereClause<'a> {}\n "}, {"sha": "1784b871ee1e908a42eed77dd19f9adb018ead97", "filename": "crates/libsyntax2/src/ast/mod.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8/crates%2Flibsyntax2%2Fsrc%2Fast%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8/crates%2Flibsyntax2%2Fsrc%2Fast%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fmod.rs?ref=8e3bec11ebd1fce78701670cf9189b5a9d0d68f8", "patch": "@@ -24,6 +24,22 @@ pub trait NameOwner<'a>: AstNode<'a> {\n     }\n }\n \n+pub trait TypeParamsOwner<'a>: AstNode<'a> {\n+    fn type_param_list(self) -> Option<TypeParamList<'a>> {\n+        self.syntax()\n+            .children()\n+            .filter_map(TypeParamList::cast)\n+            .next()\n+    }\n+\n+    fn where_clause(self) -> Option<WhereClause<'a>> {\n+        self.syntax()\n+            .children()\n+            .filter_map(WhereClause::cast)\n+            .next()\n+    }\n+}\n+\n pub trait AttrsOwner<'a>: AstNode<'a> {\n     fn attrs(&self) -> Box<Iterator<Item=Attr<'a>> + 'a> {\n         let it = self.syntax().children()"}, {"sha": "83b56c3492d49248d331001856bacca3786cb67d", "filename": "crates/libsyntax2/src/grammar.ron", "status": "modified", "additions": 38, "deletions": 12, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron?ref=8e3bec11ebd1fce78701670cf9189b5a9d0d68f8", "patch": "@@ -222,32 +222,51 @@ Grammar(\n                 [\"modules\", \"Module\"],\n             ]\n         ),\n-        \"FnDef\": ( traits: [\"NameOwner\", \"AttrsOwner\"] ),\n+        \"FnDef\": ( traits: [\n+            \"NameOwner\",\n+            \"TypeParamsOwner\",\n+            \"AttrsOwner\",\n+        ] ),\n         \"StructDef\": (\n-            traits: [\"NameOwner\", \"AttrsOwner\"],\n+            traits: [\n+                \"NameOwner\",\n+                \"TypeParamsOwner\",\n+                \"AttrsOwner\",\n+            ],\n             collections: [\n                 [\"fields\", \"NamedField\"]\n             ]\n         ),\n         \"NamedField\": ( traits: [\"NameOwner\", \"AttrsOwner\"] ),\n-        \"EnumDef\": ( traits: [\"NameOwner\", \"AttrsOwner\"] ),\n+        \"EnumDef\": ( traits: [\n+            \"NameOwner\",\n+            \"TypeParamsOwner\",\n+            \"AttrsOwner\",\n+        ] ),\n         \"TraitDef\": ( traits: [\"NameOwner\", \"AttrsOwner\"] ),\n         \"Module\": (\n             traits: [\"NameOwner\", \"AttrsOwner\"],\n             collections: [\n                 [\"modules\", \"Module\"]\n             ]\n         ),\n-        \"ConstDef\": ( traits: [\"NameOwner\", \"AttrsOwner\"] ),\n-        \"StaticDef\": ( traits: [\"NameOwner\", \"AttrsOwner\"] ),\n-        \"TypeDef\": ( traits: [\"NameOwner\", \"AttrsOwner\"] ),\n+        \"ConstDef\": ( traits: [\n+            \"NameOwner\",\n+            \"TypeParamsOwner\",\n+            \"AttrsOwner\",\n+        ] ),\n+        \"StaticDef\": ( traits: [\n+            \"NameOwner\",\n+            \"TypeParamsOwner\",\n+            \"AttrsOwner\",\n+        ] ),\n+        \"TypeDef\": ( traits: [\n+            \"NameOwner\",\n+            \"TypeParamsOwner\",\n+            \"AttrsOwner\",\n+        ] ),\n         \"ImplItem\": (),\n \n-        \"Name\": (),\n-        \"NameRef\": (),\n-        \"Attr\": ( options: [ [\"value\", \"TokenTree\"] ] ),\n-        \"TokenTree\": (),\n-\n         \"ParenType\": (),\n         \"TupleType\": (),\n         \"NeverType\": (),\n@@ -280,7 +299,14 @@ Grammar(\n \n         \"NominalDef\": (\n             enum: [\"StructDef\", \"EnumDef\"],\n-            traits: [ \"AttrsOwner\" ],\n+            traits: [ \"AttrsOwner\", \"TypeParamsOwner\" ],\n         ),\n+\n+        \"Name\": (),\n+        \"NameRef\": (),\n+        \"Attr\": ( options: [ [\"value\", \"TokenTree\"] ] ),\n+        \"TokenTree\": (),\n+        \"TypeParamList\": (),\n+        \"WhereClause\": (),\n     },\n )"}, {"sha": "512aeb3e7a0f82d3da2826f5986e59a162dfbd79", "filename": "crates/libsyntax2/tests/data/parser/ok/0001_struct_item.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0001_struct_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0001_struct_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0001_struct_item.rs?ref=8e3bec11ebd1fce78701670cf9189b5a9d0d68f8", "patch": "@@ -1,3 +1,3 @@\n-struct S {\n-\n-}\n\\ No newline at end of file\n+struct S<T: Copy> {\n+    f: T,\n+}"}, {"sha": "cfe128971a70f9849e22062c663d7806e426353c", "filename": "crates/libsyntax2/tests/data/parser/ok/0001_struct_item.txt", "status": "modified", "additions": 31, "deletions": 6, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0001_struct_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8e3bec11ebd1fce78701670cf9189b5a9d0d68f8/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0001_struct_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Fok%2F0001_struct_item.txt?ref=8e3bec11ebd1fce78701670cf9189b5a9d0d68f8", "patch": "@@ -1,10 +1,35 @@\n-FILE@[0; 13)\n-  STRUCT_DEF@[0; 13)\n+FILE@[0; 32)\n+  STRUCT_DEF@[0; 31)\n     STRUCT_KW@[0; 6)\n     WHITESPACE@[6; 7)\n     NAME@[7; 8)\n       IDENT@[7; 8) \"S\"\n-    WHITESPACE@[8; 9)\n-    L_CURLY@[9; 10)\n-    WHITESPACE@[10; 12)\n-    R_CURLY@[12; 13)\n+    TYPE_PARAM_LIST@[8; 17)\n+      L_ANGLE@[8; 9)\n+      TYPE_PARAM@[9; 16)\n+        NAME@[9; 10)\n+          IDENT@[9; 10) \"T\"\n+        COLON@[10; 11)\n+        WHITESPACE@[11; 12)\n+        PATH@[12; 16)\n+          PATH_SEGMENT@[12; 16)\n+            NAME_REF@[12; 16)\n+              IDENT@[12; 16) \"Copy\"\n+      R_ANGLE@[16; 17)\n+    WHITESPACE@[17; 18)\n+    L_CURLY@[18; 19)\n+    WHITESPACE@[19; 24)\n+    NAMED_FIELD@[24; 28)\n+      NAME@[24; 25)\n+        IDENT@[24; 25) \"f\"\n+      COLON@[25; 26)\n+      WHITESPACE@[26; 27)\n+      PATH_TYPE@[27; 28)\n+        PATH@[27; 28)\n+          PATH_SEGMENT@[27; 28)\n+            NAME_REF@[27; 28)\n+              IDENT@[27; 28) \"T\"\n+    COMMA@[28; 29)\n+    WHITESPACE@[29; 30)\n+    R_CURLY@[30; 31)\n+  WHITESPACE@[31; 32)"}]}