{"sha": "50c2739bb4f5692134a152990d9ea96127c47e90", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYzI3MzliYjRmNTY5MjEzNGExNTI5OTBkOWVhOTYxMjdjNDdlOTA=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-11-25T03:54:41Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-11-25T03:54:41Z"}, "message": "Add `summary_opts()` for Markdown summary rendering options\n\nWe have a similar function `opts()` that is for rendering the main body\nof the documentation, but until now we just constructed the options for\nrendering summaries on the fly. This is a problem if/when we change the\nenabled options since the different places can get out-of-sync.", "tree": {"sha": "ec73f959b18e71507337acccd389b7dd2ae24157", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec73f959b18e71507337acccd389b7dd2ae24157"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50c2739bb4f5692134a152990d9ea96127c47e90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50c2739bb4f5692134a152990d9ea96127c47e90", "html_url": "https://github.com/rust-lang/rust/commit/50c2739bb4f5692134a152990d9ea96127c47e90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50c2739bb4f5692134a152990d9ea96127c47e90/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c389ffeff814726dec325f0f2b0c99107df2673", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c389ffeff814726dec325f0f2b0c99107df2673", "html_url": "https://github.com/rust-lang/rust/commit/1c389ffeff814726dec325f0f2b0c99107df2673"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "8ce686c65502f5b549e97603c4338a316a272267", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/50c2739bb4f5692134a152990d9ea96127c47e90/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c2739bb4f5692134a152990d9ea96127c47e90/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=50c2739bb4f5692134a152990d9ea96127c47e90", "patch": "@@ -43,10 +43,16 @@ use pulldown_cmark::{html, BrokenLink, CodeBlockKind, CowStr, Event, Options, Pa\n #[cfg(test)]\n mod tests;\n \n+/// Options for rendering Markdown in the main body of documentation.\n pub(crate) fn opts() -> Options {\n     Options::ENABLE_TABLES | Options::ENABLE_FOOTNOTES | Options::ENABLE_STRIKETHROUGH\n }\n \n+/// A subset of [`opts()`] used for rendering summaries.\n+pub(crate) fn summary_opts() -> Options {\n+    Options::ENABLE_STRIKETHROUGH\n+}\n+\n /// When `to_string` is called, this struct will emit the HTML corresponding to\n /// the rendered version of the contained markdown string.\n pub struct Markdown<'a>(\n@@ -1021,11 +1027,7 @@ impl MarkdownSummaryLine<'_> {\n             }\n         };\n \n-        let p = Parser::new_with_broken_link_callback(\n-            md,\n-            Options::ENABLE_STRIKETHROUGH,\n-            Some(&mut replacer),\n-        );\n+        let p = Parser::new_with_broken_link_callback(md, summary_opts(), Some(&mut replacer));\n \n         let mut s = String::new();\n \n@@ -1047,7 +1049,7 @@ crate fn plain_text_summary(md: &str) -> String {\n \n     let mut s = String::with_capacity(md.len() * 3 / 2);\n \n-    for event in Parser::new_ext(md, Options::ENABLE_STRIKETHROUGH) {\n+    for event in Parser::new_ext(md, summary_opts()) {\n         match &event {\n             Event::Text(text) => s.push_str(text),\n             Event::Code(code) => {"}]}