{"sha": "5a854a72539c14c90daf6e0385fa6f72b53aacd5", "node_id": "C_kwDOAAsO6NoAKDVhODU0YTcyNTM5YzE0YzkwZGFmNmUwMzg1ZmE2ZjcyYjUzYWFjZDU", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T09:39:58Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T09:39:58Z"}, "message": "internal: move tests", "tree": {"sha": "9faf242bdb057ef3ce8f172ce3fbd55c21b17f44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9faf242bdb057ef3ce8f172ce3fbd55c21b17f44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a854a72539c14c90daf6e0385fa6f72b53aacd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a854a72539c14c90daf6e0385fa6f72b53aacd5", "html_url": "https://github.com/rust-lang/rust/commit/5a854a72539c14c90daf6e0385fa6f72b53aacd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a854a72539c14c90daf6e0385fa6f72b53aacd5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c9dda6ca9471bb6a42accbf23226595782c0fb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c9dda6ca9471bb6a42accbf23226595782c0fb9", "html_url": "https://github.com/rust-lang/rust/commit/3c9dda6ca9471bb6a42accbf23226595782c0fb9"}], "stats": {"total": 121, "additions": 67, "deletions": 54}, "files": [{"sha": "dcd0a8880b8ae4a32ccae1386ec5595e8534fa3d", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/5a854a72539c14c90daf6e0385fa6f72b53aacd5/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a854a72539c14c90daf6e0385fa6f72b53aacd5/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=5a854a72539c14c90daf6e0385fa6f72b53aacd5", "patch": "@@ -1119,3 +1119,69 @@ ok!();\n \"#]],\n     );\n }\n+\n+#[test]\n+fn test_underscore() {\n+    check(\n+        r#\"\n+macro_rules! m { ($_:tt) => { ok!(); } }\n+m! { => }\n+\"#,\n+        expect![[r#\"\n+macro_rules! m { ($_:tt) => { ok!(); } }\n+ok!();\n+\"#]],\n+    );\n+}\n+\n+#[test]\n+fn test_underscore_not_greedily() {\n+    check(\n+        r#\"\n+// `_` overlaps with `$a:ident` but rustc matches it under the `_` token.\n+macro_rules! m1 {\n+    ($($a:ident)* _) => { ok!(); }\n+}\n+m1![a b c d _];\n+\n+// `_ => ou` overlaps with `$a:expr => $b:ident` but rustc matches it under `_ => $c:expr`.\n+macro_rules! m2 {\n+    ($($a:expr => $b:ident)* _ => $c:expr) => { ok!(); }\n+}\n+m2![a => b c => d _ => ou]\n+\"#,\n+        expect![[r#\"\n+// `_` overlaps with `$a:ident` but rustc matches it under the `_` token.\n+macro_rules! m1 {\n+    ($($a:ident)* _) => { ok!(); }\n+}\n+ok!();\n+\n+// `_ => ou` overlaps with `$a:expr => $b:ident` but rustc matches it under `_ => $c:expr`.\n+macro_rules! m2 {\n+    ($($a:expr => $b:ident)* _ => $c:expr) => { ok!(); }\n+}\n+ok!();\n+\"#]],\n+    );\n+}\n+\n+#[test]\n+fn test_underscore_flavors() {\n+    check(\n+        r#\"\n+macro_rules! m1 { ($a:ty) => { ok!(); } }\n+m1![_];\n+\n+macro_rules! m2 { ($a:lifetime) => { ok!(); } }\n+m2!['_];\n+\"#,\n+        expect![[r#\"\n+macro_rules! m1 { ($a:ty) => { ok!(); } }\n+ok!();\n+\n+macro_rules! m2 { ($a:lifetime) => { ok!(); } }\n+ok!();\n+\"#]],\n+    );\n+}"}, {"sha": "52a218ed116816ec48a85e404037c0afb0ed3a5a", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/5a854a72539c14c90daf6e0385fa6f72b53aacd5/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a854a72539c14c90daf6e0385fa6f72b53aacd5/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=5a854a72539c14c90daf6e0385fa6f72b53aacd5", "patch": "@@ -101,60 +101,6 @@ fn test_attr_to_token_tree() {\n     );\n }\n \n-#[test]\n-fn test_underscore() {\n-    parse_macro(\n-        r#\"\n-            macro_rules! foo {\n-                 ($_:tt) => { 0 }\n-            }\n-    \"#,\n-    )\n-    .assert_expand_items(r#\"foo! { => }\"#, r#\"0\"#);\n-}\n-\n-#[test]\n-fn test_underscore_not_greedily() {\n-    parse_macro(\n-        r#\"\n-macro_rules! q {\n-    ($($a:ident)* _) => {0};\n-}\n-\"#,\n-    )\n-    // `_` overlaps with `$a:ident` but rustc matches it under the `_` token\n-    .assert_expand_items(r#\"q![a b c d _]\"#, r#\"0\"#);\n-\n-    parse_macro(\n-        r#\"\n-macro_rules! q {\n-    ($($a:expr => $b:ident)* _ => $c:expr) => {0};\n-}\n-\"#,\n-    )\n-    // `_ => ou` overlaps with `$a:expr => $b:ident` but rustc matches it under `_ => $c:expr`\n-    .assert_expand_items(r#\"q![a => b c => d _ => ou]\"#, r#\"0\"#);\n-}\n-\n-#[test]\n-fn test_underscore_as_type() {\n-    parse_macro(\n-        r#\"\n-macro_rules! q {\n-    ($a:ty) => {0};\n-}\n-\"#,\n-    )\n-    // Underscore is a type\n-    .assert_expand_items(r#\"q![_]\"#, r#\"0\"#);\n-}\n-\n-#[test]\n-fn test_underscore_lifetime() {\n-    parse_macro(r#\"macro_rules! q { ($a:lifetime) => {0}; }\"#)\n-        .assert_expand_items(r#\"q!['_]\"#, r#\"0\"#);\n-}\n-\n #[test]\n fn test_vertical_bar_with_pat() {\n     parse_macro("}, {"sha": "3d303a1237d08a07dd2a84bc1c7daf1da4bfada5", "filename": "crates/test_utils/src/fixture.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a854a72539c14c90daf6e0385fa6f72b53aacd5/crates%2Ftest_utils%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a854a72539c14c90daf6e0385fa6f72b53aacd5/crates%2Ftest_utils%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Ffixture.rs?ref=5a854a72539c14c90daf6e0385fa6f72b53aacd5", "patch": "@@ -147,6 +147,7 @@ impl Fixture {\n                 if line.starts_with(\"// \")\n                     && line.contains(':')\n                     && !line.contains(\"::\")\n+                    && !line.contains(\".\")\n                     && line.chars().all(|it| !it.is_uppercase())\n                 {\n                     panic!(\"looks like invalid metadata line: {:?}\", line);"}]}