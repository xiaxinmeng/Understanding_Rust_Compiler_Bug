{"sha": "603ffebd37a26a5b8d3c7372d432f6f2c053371d", "node_id": "C_kwDOAAsO6NoAKDYwM2ZmZWJkMzdhMjZhNWI4ZDNjNzM3MmQ0MzJmNmYyYzA1MzM3MWQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-03T07:01:18Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-03T07:02:56Z"}, "message": "Skip over structs with no private fields that impl Deref", "tree": {"sha": "9d555a91a44937144767ccac279abbe7ccfb4f89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d555a91a44937144767ccac279abbe7ccfb4f89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/603ffebd37a26a5b8d3c7372d432f6f2c053371d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/603ffebd37a26a5b8d3c7372d432f6f2c053371d", "html_url": "https://github.com/rust-lang/rust/commit/603ffebd37a26a5b8d3c7372d432f6f2c053371d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/603ffebd37a26a5b8d3c7372d432f6f2c053371d/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a3fd5053f9cd5897c4a5eed2b742699aab279a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a3fd5053f9cd5897c4a5eed2b742699aab279a4", "html_url": "https://github.com/rust-lang/rust/commit/2a3fd5053f9cd5897c4a5eed2b742699aab279a4"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "67d0e331012f276fe1dd809fc22b06548056aa5f", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/603ffebd37a26a5b8d3c7372d432f6f2c053371d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/603ffebd37a26a5b8d3c7372d432f6f2c053371d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=603ffebd37a26a5b8d3c7372d432f6f2c053371d", "patch": "@@ -2582,10 +2582,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             match base_t.kind() {\n                 ty::Adt(base_def, substs) if !base_def.is_enum() => {\n                     let tcx = self.tcx;\n+                    let fields = &base_def.non_enum_variant().fields;\n+                    // Some struct, e.g. some that impl `Deref`, have all private fields\n+                    // because you're expected to deref them to access the _real_ fields.\n+                    // This, for example, will help us suggest accessing a field through a `Box<T>`.\n+                    if fields.iter().all(|field| !field.vis.is_accessible_from(mod_id, tcx)) {\n+                        continue;\n+                    }\n                     return Some((\n-                        base_def\n-                            .non_enum_variant()\n-                            .fields\n+                        fields\n                             .iter()\n                             .filter(move |field| field.vis.is_accessible_from(mod_id, tcx))\n                             // For compile-time reasons put a limit on number of fields we search"}, {"sha": "3de06b21420b4771d5303554fa8b99ef9392f15b", "filename": "src/test/ui/suggestions/field-access-considering-privacy.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/603ffebd37a26a5b8d3c7372d432f6f2c053371d/src%2Ftest%2Fui%2Fsuggestions%2Ffield-access-considering-privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/603ffebd37a26a5b8d3c7372d432f6f2c053371d/src%2Ftest%2Fui%2Fsuggestions%2Ffield-access-considering-privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffield-access-considering-privacy.rs?ref=603ffebd37a26a5b8d3c7372d432f6f2c053371d", "patch": "@@ -0,0 +1,35 @@\n+use a::TyCtxt;\n+\n+mod a {\n+    use std::ops::Deref;\n+    pub struct TyCtxt<'tcx> {\n+        gcx: &'tcx GlobalCtxt<'tcx>,\n+    }\n+\n+    impl<'tcx> Deref for TyCtxt<'tcx> {\n+        type Target = &'tcx GlobalCtxt<'tcx>;\n+\n+        fn deref(&self) -> &Self::Target {\n+            &self.gcx\n+        }\n+    }\n+\n+    pub struct GlobalCtxt<'tcx> {\n+        pub sess: &'tcx Session,\n+        _t: &'tcx (),\n+    }\n+\n+    pub struct Session {\n+        pub opts: (),\n+    }\n+}\n+\n+mod b {\n+    fn foo<'tcx>(tcx: crate::TyCtxt<'tcx>) {\n+        tcx.opts;\n+        //~^ ERROR no field `opts` on type `TyCtxt<'tcx>`\n+        //~| HELP one of the expressions' fields has a field of the same name\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "cbf6f3d10025856fdabcf425d7399f98493f5b8f", "filename": "src/test/ui/suggestions/field-access-considering-privacy.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/603ffebd37a26a5b8d3c7372d432f6f2c053371d/src%2Ftest%2Fui%2Fsuggestions%2Ffield-access-considering-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/603ffebd37a26a5b8d3c7372d432f6f2c053371d/src%2Ftest%2Fui%2Fsuggestions%2Ffield-access-considering-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffield-access-considering-privacy.stderr?ref=603ffebd37a26a5b8d3c7372d432f6f2c053371d", "patch": "@@ -0,0 +1,14 @@\n+error[E0609]: no field `opts` on type `TyCtxt<'tcx>`\n+  --> $DIR/field-access-considering-privacy.rs:29:13\n+   |\n+LL |         tcx.opts;\n+   |             ^^^^ unknown field\n+   |\n+help: one of the expressions' fields has a field of the same name\n+   |\n+LL |         tcx.sess.opts;\n+   |             +++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0609`."}]}