{"sha": "e237aaef25db05a7f18c1a32b248fdaa06ff8669", "node_id": "C_kwDOAAsO6NoAKGUyMzdhYWVmMjVkYjA1YTdmMThjMWEzMmIyNDhmZGFhMDZmZjg2Njk", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-23T07:18:33Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-23T07:18:33Z"}, "message": "Some test cleanups", "tree": {"sha": "1e93cb969a0c2269c3c517756d2fb2a34469bb79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e93cb969a0c2269c3c517756d2fb2a34469bb79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e237aaef25db05a7f18c1a32b248fdaa06ff8669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e237aaef25db05a7f18c1a32b248fdaa06ff8669", "html_url": "https://github.com/rust-lang/rust/commit/e237aaef25db05a7f18c1a32b248fdaa06ff8669", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e237aaef25db05a7f18c1a32b248fdaa06ff8669/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9d219e97c9b87e928d131ac071fef96e906c464", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9d219e97c9b87e928d131ac071fef96e906c464", "html_url": "https://github.com/rust-lang/rust/commit/e9d219e97c9b87e928d131ac071fef96e906c464"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "0409c7081dc4f5cde6e626905b82b9255e83f6f2", "filename": "compiler/rustc_typeck/src/outlives/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e237aaef25db05a7f18c1a32b248fdaa06ff8669/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e237aaef25db05a7f18c1a32b248fdaa06ff8669/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Futils.rs?ref=e237aaef25db05a7f18c1a32b248fdaa06ff8669", "patch": "@@ -105,7 +105,7 @@ pub(crate) fn insert_outlives_predicate<'tcx>(\n                         // struct Ss<'a, T>(&'a Opaque<T>);\n                         // ```\n                         //\n-                        // Here we want to require an explicit `where Opaque<T>: 'a`\n+                        // Here we want to have an implied bound `Opaque<T>: 'a`\n \n                         let ty = tcx.mk_opaque(def_id, substs);\n                         required_predicates"}, {"sha": "63c839ea8712d798e0c82fa66ae41fbb13cfa866", "filename": "src/test/ui/generic-associated-types/issue-86218-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e237aaef25db05a7f18c1a32b248fdaa06ff8669/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-86218-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e237aaef25db05a7f18c1a32b248fdaa06ff8669/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-86218-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-86218-2.rs?ref=e237aaef25db05a7f18c1a32b248fdaa06ff8669", "patch": "@@ -17,7 +17,6 @@ trait Yay<AdditionalValue> {\n \n impl<T> Yay<T> for () {\n     type InnerStream<'s> = impl Stream<Item = i32> + 's;\n-    //^ ERROR does not fulfill the required lifetime\n     fn foo<'s>() -> Self::InnerStream<'s> { () }\n }\n "}, {"sha": "4f52f7a34af8ec98e623932fb038e252663bec55", "filename": "src/test/ui/type-alias-impl-trait/implied_lifetime_wf_check2.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e9d219e97c9b87e928d131ac071fef96e906c464/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d219e97c9b87e928d131ac071fef96e906c464/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fimplied_lifetime_wf_check2.rs?ref=e9d219e97c9b87e928d131ac071fef96e906c464", "patch": "@@ -1,13 +0,0 @@\n-#![feature(type_alias_impl_trait)]\n-\n-// check-pass\n-\n-trait Tr { type Assoc; }\n-impl<'a> Tr for &'a str { type Assoc = &'a str; }\n-\n-type OpaqueTy<'a> = impl Tr;\n-fn defining(s: &str) -> OpaqueTy<'_> { s }\n-\n-// now we must be able to conclude `'a: 'static` from `Opaque<'a>: 'static`\n-\n-fn main() {}"}, {"sha": "f43ad7dce1d4072603699ddf85e21f3b3abbae4c", "filename": "src/test/ui/type-alias-impl-trait/unbounded_opaque_type.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e237aaef25db05a7f18c1a32b248fdaa06ff8669/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Funbounded_opaque_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e237aaef25db05a7f18c1a32b248fdaa06ff8669/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Funbounded_opaque_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Funbounded_opaque_type.rs?ref=e237aaef25db05a7f18c1a32b248fdaa06ff8669", "patch": "@@ -5,4 +5,10 @@ type Opaque<T> = impl Sized;\n fn defining<T>() -> Opaque<T> {}\n struct Ss<'a, T>(&'a Opaque<T>);\n \n+\n+fn test<'a, T>(_: Ss<'a, T>) {\n+    // test that we have an implied bound `Opaque<T>: 'a` from fn signature\n+    None::<&'a Opaque<T>>;\n+}\n+\n fn main() {}"}]}