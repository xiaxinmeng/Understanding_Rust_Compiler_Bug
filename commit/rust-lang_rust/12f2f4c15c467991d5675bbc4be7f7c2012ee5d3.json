{"sha": "12f2f4c15c467991d5675bbc4be7f7c2012ee5d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZjJmNGMxNWM0Njc5OTFkNTY3NWJiYzRiZTdmN2MyMDEyZWU1ZDM=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-04-16T20:06:41Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-20T22:23:22Z"}, "message": "rt: whitespace cleanup for existing libuv integration", "tree": {"sha": "88be019e644de6130e38bd3f6c506a014d9726c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88be019e644de6130e38bd3f6c506a014d9726c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12f2f4c15c467991d5675bbc4be7f7c2012ee5d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12f2f4c15c467991d5675bbc4be7f7c2012ee5d3", "html_url": "https://github.com/rust-lang/rust/commit/12f2f4c15c467991d5675bbc4be7f7c2012ee5d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12f2f4c15c467991d5675bbc4be7f7c2012ee5d3/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e604c15df18f5d8129b129eb46bb5e0a6f13c27b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e604c15df18f5d8129b129eb46bb5e0a6f13c27b", "html_url": "https://github.com/rust-lang/rust/commit/e604c15df18f5d8129b129eb46bb5e0a6f13c27b"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "941b34c52a356e280a070fee8d5d87a626a1c55e", "filename": "src/libstd/uv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12f2f4c15c467991d5675bbc4be7f7c2012ee5d3/src%2Flibstd%2Fuv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12f2f4c15c467991d5675bbc4be7f7c2012ee5d3/src%2Flibstd%2Fuv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv.rs?ref=12f2f4c15c467991d5675bbc4be7f7c2012ee5d3", "patch": "@@ -1252,7 +1252,7 @@ mod test {\n         log(debug, output);\n         assert native_handle_size as uint == rust_handle_size;\n     }\n-    \n+\n     #[test]\n     #[ignore(cfg(target_os = \"freebsd\"))]\n     fn test_uv_struct_size_uv_timer_t() {"}, {"sha": "2309f4e6c1a891c5d9f0443b5cab4b949da9f27d", "filename": "src/rt/rust_kernel.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/12f2f4c15c467991d5675bbc4be7f7c2012ee5d3/src%2Frt%2Frust_kernel.h", "raw_url": "https://github.com/rust-lang/rust/raw/12f2f4c15c467991d5675bbc4be7f7c2012ee5d3/src%2Frt%2Frust_kernel.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.h?ref=12f2f4c15c467991d5675bbc4be7f7c2012ee5d3", "patch": "@@ -73,9 +73,9 @@ class rust_kernel {\n     rust_scheduler* get_scheduler_by_id_nolock(rust_sched_id id);\n     void end_weak_tasks();\n \n-\t// Used to communicate with the process-side, global libuv loop\n-\tuintptr_t global_loop_chan;\n-\tvoid** global_async_handle;\n+    // Used to communicate with the process-side, global libuv loop\n+    uintptr_t global_loop_chan;\n+    void** global_async_handle;\n \n public:\n     struct rust_env *env;\n@@ -122,10 +122,10 @@ class rust_kernel {\n \n     bool send_to_port(rust_port_id chan, void *sptr);\n \n-\tuintptr_t* get_global_loop() { return &global_loop_chan; }\n-\tvoid** get_global_async_handle() { return global_async_handle; }\n-\tvoid set_global_async_handle(void* handle) {\n-\t\t*global_async_handle = handle; }\n+    uintptr_t* get_global_loop() { return &global_loop_chan; }\n+    void** get_global_async_handle() { return global_async_handle; }\n+    void set_global_async_handle(void* handle) {\n+        *global_async_handle = handle; }\n };\n \n template <typename T> struct kernel_owned {"}, {"sha": "287e45aecd60bcb1d30cb142528143f3e759e1fc", "filename": "src/rt/rust_uv.cpp", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/12f2f4c15c467991d5675bbc4be7f7c2012ee5d3/src%2Frt%2Frust_uv.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/12f2f4c15c467991d5675bbc4be7f7c2012ee5d3/src%2Frt%2Frust_uv.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_uv.cpp?ref=12f2f4c15c467991d5675bbc4be7f7c2012ee5d3", "patch": "@@ -209,12 +209,12 @@ rust_uv_hilvl_timer_start(uv_timer_t* the_timer, uint32_t timeout,\n \n extern \"C\" int\n rust_uv_timer_init(uv_loop_t* loop, uv_timer_t* timer) {\n-\treturn uv_timer_init(loop, timer);\n+    return uv_timer_init(loop, timer);\n }\n \n extern \"C\" int\n rust_uv_timer_start(uv_timer_t* the_timer, uv_timer_cb cb,\n-\t\t\t\t\t\t  uint32_t timeout, uint32_t repeat) {\n+                        uint32_t timeout, uint32_t repeat) {\n     return uv_timer_start(the_timer, cb, timeout, repeat);\n }\n \n@@ -439,22 +439,22 @@ rust_uv_ip4_addr(const char* ip, int port) {\n \n extern \"C\" uintptr_t*\n rust_uv_get_kernel_global_chan_ptr() {\n-\tuintptr_t* result = rust_get_current_task()->kernel->get_global_loop();\n+    uintptr_t* result = rust_get_current_task()->kernel->get_global_loop();\n     rust_task* task = rust_get_current_task();\n-\tLOG(task, stdlib, \"global loop: %lu\", (unsigned long int)result);\n-\tLOG(task, stdlib,\"global loop val: %lu\", (unsigned long int)*result);\n-\treturn result;\n+    LOG(task, stdlib, \"global loop: %lu\", (unsigned long int)result);\n+    LOG(task, stdlib,\"global loop val: %lu\", (unsigned long int)*result);\n+    return result;\n }\n \n extern \"C\" void**\n rust_uv_get_kernel_global_async_handle() {\n-\treturn rust_get_current_task()->kernel->get_global_async_handle();\n+    return rust_get_current_task()->kernel->get_global_async_handle();\n }\n extern \"C\" void\n rust_uv_set_kernel_global_async_handle(uv_async_t* handle) {\n-\trust_get_current_task()->kernel->set_global_async_handle((void*)handle);\n+    rust_get_current_task()->kernel->set_global_async_handle((void*)handle);\n }\n extern \"C\" void\n rust_uv_free_kernel_global_async_handle() {\n-\tfree((void*)rust_get_current_task()->kernel->get_global_async_handle());\n+    free((void*)rust_get_current_task()->kernel->get_global_async_handle());\n }"}]}