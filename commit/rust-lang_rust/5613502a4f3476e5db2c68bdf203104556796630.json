{"sha": "5613502a4f3476e5db2c68bdf203104556796630", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MTM1MDJhNGYzNDc2ZTVkYjJjNjhiZGYyMDMxMDQ1NTY3OTY2MzA=", "commit": {"author": {"name": "Nick Platt", "email": "platt.nicholas@gmail.com", "date": "2015-05-10T03:18:28Z"}, "committer": {"name": "Nick Platt", "email": "platt.nicholas@gmail.com", "date": "2015-05-10T15:04:24Z"}, "message": "Add long diagnostic for E0067", "tree": {"sha": "8cd2399f0b918e6c2e9b617a40de4e8fedf737f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cd2399f0b918e6c2e9b617a40de4e8fedf737f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5613502a4f3476e5db2c68bdf203104556796630", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5613502a4f3476e5db2c68bdf203104556796630", "html_url": "https://github.com/rust-lang/rust/commit/5613502a4f3476e5db2c68bdf203104556796630", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5613502a4f3476e5db2c68bdf203104556796630/comments", "author": {"login": "caipre", "id": 295094, "node_id": "MDQ6VXNlcjI5NTA5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/295094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caipre", "html_url": "https://github.com/caipre", "followers_url": "https://api.github.com/users/caipre/followers", "following_url": "https://api.github.com/users/caipre/following{/other_user}", "gists_url": "https://api.github.com/users/caipre/gists{/gist_id}", "starred_url": "https://api.github.com/users/caipre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caipre/subscriptions", "organizations_url": "https://api.github.com/users/caipre/orgs", "repos_url": "https://api.github.com/users/caipre/repos", "events_url": "https://api.github.com/users/caipre/events{/privacy}", "received_events_url": "https://api.github.com/users/caipre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "caipre", "id": 295094, "node_id": "MDQ6VXNlcjI5NTA5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/295094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caipre", "html_url": "https://github.com/caipre", "followers_url": "https://api.github.com/users/caipre/followers", "following_url": "https://api.github.com/users/caipre/following{/other_user}", "gists_url": "https://api.github.com/users/caipre/gists{/gist_id}", "starred_url": "https://api.github.com/users/caipre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caipre/subscriptions", "organizations_url": "https://api.github.com/users/caipre/orgs", "repos_url": "https://api.github.com/users/caipre/repos", "events_url": "https://api.github.com/users/caipre/events{/privacy}", "received_events_url": "https://api.github.com/users/caipre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "750f2c63f2737305d33288303cdecb7a470a7922", "url": "https://api.github.com/repos/rust-lang/rust/commits/750f2c63f2737305d33288303cdecb7a470a7922", "html_url": "https://github.com/rust-lang/rust/commit/750f2c63f2737305d33288303cdecb7a470a7922"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "2cc1b23e03ec31a77f0ff2b9f24acb7e20ffd0ee", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5613502a4f3476e5db2c68bdf203104556796630/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5613502a4f3476e5db2c68bdf203104556796630/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=5613502a4f3476e5db2c68bdf203104556796630", "patch": "@@ -46,6 +46,23 @@ enum variant, one of the fields was not provided. Each field should be specified\n exactly once.\n \"##,\n \n+E0067: r##\"\n+The left-hand side of an assignment operator must be an lvalue expression. An\n+lvalue expression represents a memory location and includes item paths (ie,\n+namespaced variables), dereferences, indexing expressions, and field references.\n+\n+```\n+use std::collections::LinkedList;\n+\n+// Good\n+let mut list = LinkedList::new();\n+\n+\n+// Bad: assignment to non-lvalue expression\n+LinkedList::new() += 1;\n+```\n+\"##,\n+\n E0081: r##\"\n Enum discriminants are used to differentiate enum variants stored in memory.\n This error indicates that the same value was used for two or more variants,\n@@ -149,7 +166,6 @@ register_diagnostics! {\n     E0060,\n     E0061,\n     E0066,\n-    E0067,\n     E0068,\n     E0069,\n     E0070,"}]}