{"sha": "6d0349d2ea97e2a3e208e0342a6a95d6b90d92ea", "node_id": "C_kwDOAAsO6NoAKDZkMDM0OWQyZWE5N2UyYTNlMjA4ZTAzNDJhNmE5NWQ2YjkwZDkyZWE", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2022-04-12T19:36:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-12T19:36:09Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: Michael Goulet <michael@errs.io>\nCo-authored-by: R\u00e9my Rakic <remy.rakic+github@gmail.com>", "tree": {"sha": "51efa29bbbada9dbbf7bd0e9716f31d6cff74899", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51efa29bbbada9dbbf7bd0e9716f31d6cff74899"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d0349d2ea97e2a3e208e0342a6a95d6b90d92ea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiVdSpCRBK7hj4Ov3rIwAAX0wIAJE9VnHCZvf8HTHwZE+87wNL\n2x/6wAr2UuC9nBT5S8FnIrAPln0ZsYrnYa/g+eo5KyyHtVtFOxLJp0L0bTqjztyO\nE4ccuvb5pCBtFI/+xhKgZdbq6LN5bUDw5tRVVBU9B0f+hW1OYyS+QB6t+VzCTZZS\n/RiWa4cDcvyQKFefVYC45ivKjZ9qDxY0v7H2gXFyvZX+mva4MVEuiSq6bncBzo3r\nzx3oaSXOU2cg+jsWC7Vqp/8I+kUsAgG9yN6nbzS1dE1RBvFQiVaZ8f2lzmPO/iJN\n751pPpZUuULTflwPkQ0LPp2bjLAp0MGPkJjQUN0w+lkgSD4JVd1r794kfz68xoY=\n=w2Ks\n-----END PGP SIGNATURE-----\n", "payload": "tree 51efa29bbbada9dbbf7bd0e9716f31d6cff74899\nparent 93a3cfb748546ba7729db68f2e962e8b29eafa77\nauthor Oli Scherer <github35764891676564198441@oli-obk.de> 1649792169 +0200\ncommitter GitHub <noreply@github.com> 1649792169 +0200\n\nApply suggestions from code review\n\nCo-authored-by: Michael Goulet <michael@errs.io>\nCo-authored-by: R\u00e9my Rakic <remy.rakic+github@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d0349d2ea97e2a3e208e0342a6a95d6b90d92ea", "html_url": "https://github.com/rust-lang/rust/commit/6d0349d2ea97e2a3e208e0342a6a95d6b90d92ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d0349d2ea97e2a3e208e0342a6a95d6b90d92ea/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93a3cfb748546ba7729db68f2e962e8b29eafa77", "url": "https://api.github.com/repos/rust-lang/rust/commits/93a3cfb748546ba7729db68f2e962e8b29eafa77", "html_url": "https://github.com/rust-lang/rust/commit/93a3cfb748546ba7729db68f2e962e8b29eafa77"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "77a537448291719a0966c6435cb68f45c95ed087", "filename": "compiler/rustc_typeck/src/coherence/orphan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d0349d2ea97e2a3e208e0342a6a95d6b90d92ea/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d0349d2ea97e2a3e208e0342a6a95d6b90d92ea/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs?ref=6d0349d2ea97e2a3e208e0342a6a95d6b90d92ea", "patch": "@@ -191,7 +191,7 @@ fn orphan_check_impl(tcx: TyCtxt<'_>, def_id: LocalDefId) -> Result<(), ErrorGua\n                 return Err(reported);\n             }\n         }\n-        span_bug!(sp, \"opque type not found, but `has_opaque_types` is set\")\n+        span_bug!(sp, \"opaque type not found, but `has_opaque_types` is set\")\n     }\n \n     Ok(())"}, {"sha": "f12d1b6d953cd6ee9890db3f4da4ddcdf5d972c4", "filename": "src/test/ui/type-alias-impl-trait/issue-84660-unsoundness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d0349d2ea97e2a3e208e0342a6a95d6b90d92ea/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-unsoundness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d0349d2ea97e2a3e208e0342a6a95d6b90d92ea/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-unsoundness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-unsoundness.rs?ref=6d0349d2ea97e2a3e208e0342a6a95d6b90d92ea", "patch": "@@ -1,4 +1,4 @@\n-// Another example from issue #84660, this time weaponized as a safe transmut: an opaque type in an\n+// Another example from issue #84660, this time weaponized as a safe transmute: an opaque type in an\n // impl header being accepted was used to create unsoundness.\n \n #![feature(type_alias_impl_trait)]"}]}