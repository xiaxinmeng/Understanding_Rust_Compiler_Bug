{"sha": "953da9832da3ceeb6927d177e86868039f95e08a", "node_id": "C_kwDOAAsO6NoAKDk1M2RhOTgzMmRhM2NlZWI2OTI3ZDE3N2U4Njg2ODAzOWY5NWUwOGE", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-15T05:12:39Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-15T05:12:39Z"}, "message": "Rename Printer constructor from mk_printer() to Printer::new()", "tree": {"sha": "7a8e488d3df4c30e69b261793830eaf82c2e9311", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a8e488d3df4c30e69b261793830eaf82c2e9311"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/953da9832da3ceeb6927d177e86868039f95e08a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmHiV8cACgkQ+boUO5X/\nbYL7axAAgkKZnR8jxfImcY0LXJDwOL8izbq5OXrskLagnihMGGz7PltO81VoHIz1\nDMslL92+gtYhBzvQ05DAPHOPMkWMIX2I8N+Z+NOlDaOwDnSZYTBNqaPFJAhSzdSd\nTK39ya3lirQhiW8KquMW8dPfkQPJSwRGxYoE/4h/52kmp58tN9u2n6ERXaafkHa2\nAGm2SNm+Kn4rxN+MZ5cTeOfCGjOMlmjvHJ7f5eXr19cjZa96nXAMLZyvfUys4UXN\nfMwknMQxC89GtuTK6N7kbLLmPQg9JbiC61wzfJreYD14HFlktowc5ySJO8Hbv1xF\nIlWwNbAYtFFNbsa7ozmGRjdfAa/4olG/SSgfT9TWUr29QoSZG79v8CpkMldWLrGO\nth7jc6JrcePSf1UK5uhYnDh+ZGSU4WIamMcVjR01T4dZLP8BetKRbscjsZe02VbP\nndNFVyRTSYTeyt8RIf+c4/bwN+JCmytIfYis3oR7nkePbEN+RovujBPwK/1w93SM\nwSrQvS/yPKmLEXAhgNUGPLsxssXk5jt+shmd3XDuC+SREU2Kp4/J1kbNoSRV8g0k\neBWXUeJwUWO3Gp3qFJZs0Ld3ZPcI9VAG6qU1NzEGzfqQFnYxjsDxs0ZTgf27iVDW\nnOC86/PGnOy1YgEml229yteNkXbmuaBGmggwQT2EQ3oW7H3W5Kc=\n=Y8U6\n-----END PGP SIGNATURE-----", "payload": "tree 7a8e488d3df4c30e69b261793830eaf82c2e9311\nparent de9b573eedaaa6d6e7c00c986cccbee802f9287b\nauthor David Tolnay <dtolnay@gmail.com> 1642223559 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1642223559 -0800\n\nRename Printer constructor from mk_printer() to Printer::new()\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/953da9832da3ceeb6927d177e86868039f95e08a", "html_url": "https://github.com/rust-lang/rust/commit/953da9832da3ceeb6927d177e86868039f95e08a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/953da9832da3ceeb6927d177e86868039f95e08a/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de9b573eedaaa6d6e7c00c986cccbee802f9287b", "url": "https://api.github.com/repos/rust-lang/rust/commits/de9b573eedaaa6d6e7c00c986cccbee802f9287b", "html_url": "https://github.com/rust-lang/rust/commit/de9b573eedaaa6d6e7c00c986cccbee802f9287b"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "20954a322a57811db0667599c09f3a3f644ddaec", "filename": "compiler/rustc_ast_pretty/src/pp.rs", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/953da9832da3ceeb6927d177e86868039f95e08a/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/953da9832da3ceeb6927d177e86868039f95e08a/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs?ref=953da9832da3ceeb6927d177e86868039f95e08a", "patch": "@@ -222,29 +222,6 @@ struct PrintStackElem {\n \n const SIZE_INFINITY: isize = 0xffff;\n \n-pub fn mk_printer() -> Printer {\n-    let linewidth = 78;\n-    // Yes 55, it makes the ring buffers big enough to never fall behind.\n-    let n: usize = 55 * linewidth;\n-    debug!(\"mk_printer {}\", linewidth);\n-    Printer {\n-        out: String::new(),\n-        buf_max_len: n,\n-        margin: linewidth as isize,\n-        space: linewidth as isize,\n-        left: 0,\n-        right: 0,\n-        // Initialize a single entry; advance_right() will extend it on demand\n-        // up to `buf_max_len` elements.\n-        buf: vec![BufEntry::default()],\n-        left_total: 0,\n-        right_total: 0,\n-        scan_stack: VecDeque::new(),\n-        print_stack: Vec::new(),\n-        pending_indentation: 0,\n-    }\n-}\n-\n pub struct Printer {\n     out: String,\n     buf_max_len: usize,\n@@ -288,6 +265,29 @@ impl Default for BufEntry {\n }\n \n impl Printer {\n+    pub fn new() -> Self {\n+        let linewidth = 78;\n+        // Yes 55, it makes the ring buffers big enough to never fall behind.\n+        let n: usize = 55 * linewidth;\n+        debug!(\"Printer::new {}\", linewidth);\n+        Printer {\n+            out: String::new(),\n+            buf_max_len: n,\n+            margin: linewidth as isize,\n+            space: linewidth as isize,\n+            left: 0,\n+            right: 0,\n+            // Initialize a single entry; advance_right() will extend it on demand\n+            // up to `buf_max_len` elements.\n+            buf: vec![BufEntry::default()],\n+            left_total: 0,\n+            right_total: 0,\n+            scan_stack: VecDeque::new(),\n+            print_stack: Vec::new(),\n+            pending_indentation: 0,\n+        }\n+    }\n+\n     pub fn last_token(&self) -> Token {\n         self.buf[self.right].token.clone()\n     }"}, {"sha": "2f3ba46739217e959b45fe7b15bdc18190153c5f", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/953da9832da3ceeb6927d177e86868039f95e08a/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/953da9832da3ceeb6927d177e86868039f95e08a/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=953da9832da3ceeb6927d177e86868039f95e08a", "patch": "@@ -103,7 +103,7 @@ pub fn print_crate<'a>(\n     edition: Edition,\n ) -> String {\n     let mut s =\n-        State { s: pp::mk_printer(), comments: Some(Comments::new(sm, filename, input)), ann };\n+        State { s: pp::Printer::new(), comments: Some(Comments::new(sm, filename, input)), ann };\n \n     if is_expanded && !krate.attrs.iter().any(|attr| attr.has_name(sym::no_core)) {\n         // We need to print `#![no_std]` (and its feature gate) so that\n@@ -910,7 +910,7 @@ impl<'a> PrintState<'a> for State<'a> {\n \n impl<'a> State<'a> {\n     pub fn new() -> State<'a> {\n-        State { s: pp::mk_printer(), comments: None, ann: &NoAnn }\n+        State { s: pp::Printer::new(), comments: None, ann: &NoAnn }\n     }\n \n     crate fn commasep_cmnt<T, F, G>(&mut self, b: Breaks, elts: &[T], mut op: F, mut get_span: G)"}, {"sha": "88561f8afc5d9593f7645aa2f5df2cdf2a6c818b", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/953da9832da3ceeb6927d177e86868039f95e08a/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/953da9832da3ceeb6927d177e86868039f95e08a/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=953da9832da3ceeb6927d177e86868039f95e08a", "patch": "@@ -170,7 +170,7 @@ impl<'a> State<'a> {\n         ann: &'a dyn PpAnn,\n     ) -> State<'a> {\n         State {\n-            s: pp::mk_printer(),\n+            s: pp::Printer::new(),\n             comments: Some(Comments::new(sm, filename, input)),\n             attrs,\n             ann,\n@@ -186,7 +186,7 @@ pub fn to_string<F>(ann: &dyn PpAnn, f: F) -> String\n where\n     F: FnOnce(&mut State<'_>),\n {\n-    let mut printer = State { s: pp::mk_printer(), comments: None, attrs: &|_| &[], ann };\n+    let mut printer = State { s: pp::Printer::new(), comments: None, attrs: &|_| &[], ann };\n     f(&mut printer);\n     printer.s.eof()\n }"}]}