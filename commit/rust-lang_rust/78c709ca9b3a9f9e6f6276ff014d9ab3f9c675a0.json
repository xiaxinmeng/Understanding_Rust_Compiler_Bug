{"sha": "78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0", "node_id": "C_kwDOAAsO6NoAKDc4YzcwOWNhOWIzYTlmOWU2ZjYyNzZmZjAxNGQ5YWIzZjljNjc1YTA", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-17T22:40:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-17T22:40:56Z"}, "message": "Rollup merge of #96651 - ken-matsui:omit-unnecessary-help-to-add-cfg-test, r=cjgillot\n\nOmit unnecessary help to add `#[cfg(test)]` when already annotated\n\nCloses: https://github.com/rust-lang/rust/issues/96611\n\nThe related PR is: https://github.com/rust-lang/rust/pull/91770", "tree": {"sha": "1dec1541472e8a5ee3068303353692d2f591ccd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dec1541472e8a5ee3068303353692d2f591ccd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJihCR4CRBK7hj4Ov3rIwAAYVQIAD3EE/OF2srRgAB8W4JoZi3a\n7TZT6vwLe0jMxCH5O571J4v9UZgqjIo05Vl8OsR7KkkAyMrtO1WSngWZjrKnZmuB\nSi2wB8A/Ja4IdTPhE+8RbmXpsX2v5vwLv2fcp2EyzQYSM+E91DccfGgQN4+exg5v\n9hNrGkm8ODQwkm+Juy3C3We0JUpRXxCKS1SDInXPn2BpmmIfib6QmncpdRPPgT4h\nPIukFVp+8fWxHpDR2BXO3PTwa0XIRePMoBZljSvBbDBy/QiPE6+wcDKN7isg4WnY\n5sADgUeskzo9mK8eHv7cOMSwRDldLyd5cXYgOACG49xbgz8twG+JuL0GOL8e5Lc=\n=jlE9\n-----END PGP SIGNATURE-----\n", "payload": "tree 1dec1541472e8a5ee3068303353692d2f591ccd8\nparent ce49ce2f7ea1841950dd89937c7b4b343c273cbb\nparent 03007dee7994ebb874614c33ecc2c0aab22f07b0\nauthor Yuki Okushi <jtitor@2k36.org> 1652827256 +0900\ncommitter GitHub <noreply@github.com> 1652827256 +0900\n\nRollup merge of #96651 - ken-matsui:omit-unnecessary-help-to-add-cfg-test, r=cjgillot\n\nOmit unnecessary help to add `#[cfg(test)]` when already annotated\n\nCloses: https://github.com/rust-lang/rust/issues/96611\n\nThe related PR is: https://github.com/rust-lang/rust/pull/91770\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0", "html_url": "https://github.com/rust-lang/rust/commit/78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce49ce2f7ea1841950dd89937c7b4b343c273cbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce49ce2f7ea1841950dd89937c7b4b343c273cbb", "html_url": "https://github.com/rust-lang/rust/commit/ce49ce2f7ea1841950dd89937c7b4b343c273cbb"}, {"sha": "03007dee7994ebb874614c33ecc2c0aab22f07b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/03007dee7994ebb874614c33ecc2c0aab22f07b0", "html_url": "https://github.com/rust-lang/rust/commit/03007dee7994ebb874614c33ecc2c0aab22f07b0"}], "stats": {"total": 241, "additions": 227, "deletions": 14}, "files": [{"sha": "ec3b14ace4df21553bf957af963496708022c8ef", "filename": "compiler/rustc_resolve/src/check_unused.rs", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0/compiler%2Frustc_resolve%2Fsrc%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0/compiler%2Frustc_resolve%2Fsrc%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fcheck_unused.rs?ref=78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0", "patch": "@@ -315,21 +315,28 @@ impl Resolver<'_> {\n                 \"remove the unused import\"\n             };\n \n-            let parent_module = visitor.r.get_nearest_non_block_module(\n-                visitor.r.local_def_id(unused.use_tree_id).to_def_id(),\n-            );\n-            let test_module_span = match module_to_string(parent_module) {\n-                Some(module)\n-                    if module == \"test\"\n-                        || module == \"tests\"\n-                        || module.starts_with(\"test_\")\n-                        || module.starts_with(\"tests_\")\n-                        || module.ends_with(\"_test\")\n-                        || module.ends_with(\"_tests\") =>\n-                {\n-                    Some(parent_module.span)\n+            // If we are in the `--test` mode, suppress a help that adds the `#[cfg(test)]`\n+            // attribute; however, if not, suggest adding the attribute. There is no way to\n+            // retrieve attributes here because we do not have a `TyCtxt` yet.\n+            let test_module_span = if visitor.r.session.opts.test {\n+                None\n+            } else {\n+                let parent_module = visitor.r.get_nearest_non_block_module(\n+                    visitor.r.local_def_id(unused.use_tree_id).to_def_id(),\n+                );\n+                match module_to_string(parent_module) {\n+                    Some(module)\n+                        if module == \"test\"\n+                            || module == \"tests\"\n+                            || module.starts_with(\"test_\")\n+                            || module.starts_with(\"tests_\")\n+                            || module.ends_with(\"_test\")\n+                            || module.ends_with(\"_tests\") =>\n+                    {\n+                        Some(parent_module.span)\n+                    }\n+                    _ => None,\n                 }\n-                _ => None,\n             };\n \n             visitor.r.lint_buffer.buffer_lint_with_diagnostic("}, {"sha": "ed0bb65b3aa91634030de0886a12aff4f671fa9e", "filename": "src/test/ui/imports/unused-imports-in-test-mode.rs", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0/src%2Ftest%2Fui%2Fimports%2Funused-imports-in-test-mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0/src%2Ftest%2Fui%2Fimports%2Funused-imports-in-test-mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funused-imports-in-test-mode.rs?ref=78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0", "patch": "@@ -0,0 +1,84 @@\n+// compile-flags: --test\n+\n+#![deny(unused_imports)]\n+\n+use std::io::BufRead; //~ ERROR unused import: `std::io::BufRead`\n+\n+fn a() {}\n+fn b() {}\n+\n+mod test {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod tests {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod test_a {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod a_test {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod tests_a {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod a_tests {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod fastest_search {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+#[cfg(test)]\n+mod test_has_attr {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod test_has_no_attr {\n+    #[cfg(test)]\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "1847abd64b4f22c60db0e1cad5759d944e73f5ed", "filename": "src/test/ui/imports/unused-imports-in-test-mode.stderr", "status": "added", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0/src%2Ftest%2Fui%2Fimports%2Funused-imports-in-test-mode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0/src%2Ftest%2Fui%2Fimports%2Funused-imports-in-test-mode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funused-imports-in-test-mode.stderr?ref=78c709ca9b3a9f9e6f6276ff014d9ab3f9c675a0", "patch": "@@ -0,0 +1,122 @@\n+error: unused import: `std::io::BufRead`\n+  --> $DIR/unused-imports-in-test-mode.rs:5:5\n+   |\n+LL | use std::io::BufRead;\n+   |     ^^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/unused-imports-in-test-mode.rs:3:9\n+   |\n+LL | #![deny(unused_imports)]\n+   |         ^^^^^^^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:11:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:14:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:19:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:22:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:27:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:30:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:35:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:38:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:43:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:46:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:51:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:54:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:59:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:62:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:68:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:71:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:77:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:80:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: aborting due to 19 previous errors\n+"}]}