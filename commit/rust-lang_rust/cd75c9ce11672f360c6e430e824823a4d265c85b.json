{"sha": "cd75c9ce11672f360c6e430e824823a4d265c85b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkNzVjOWNlMTE2NzJmMzYwYzZlNDMwZTgyNDgyM2E0ZDI2NWM4NWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-29T00:25:45Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-29T00:29:52Z"}, "message": "rt: Implement part of the 64-bit __morestack", "tree": {"sha": "f7298c22252ffa0218e5ea2de6ccf438a18eb326", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7298c22252ffa0218e5ea2de6ccf438a18eb326"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd75c9ce11672f360c6e430e824823a4d265c85b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd75c9ce11672f360c6e430e824823a4d265c85b", "html_url": "https://github.com/rust-lang/rust/commit/cd75c9ce11672f360c6e430e824823a4d265c85b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd75c9ce11672f360c6e430e824823a4d265c85b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92f1e9f1ab347087f4005c2e2fa5a2d805e1d888", "url": "https://api.github.com/repos/rust-lang/rust/commits/92f1e9f1ab347087f4005c2e2fa5a2d805e1d888", "html_url": "https://github.com/rust-lang/rust/commit/92f1e9f1ab347087f4005c2e2fa5a2d805e1d888"}], "stats": {"total": 77, "additions": 57, "deletions": 20}, "files": [{"sha": "1e51a3167c6e5e067f0401e1adcbc2b13d22831b", "filename": "src/rt/arch/x86_64/morestack.S", "status": "modified", "additions": 42, "deletions": 20, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/cd75c9ce11672f360c6e430e824823a4d265c85b/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/cd75c9ce11672f360c6e430e824823a4d265c85b/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S?ref=cd75c9ce11672f360c6e430e824823a4d265c85b", "patch": "@@ -6,12 +6,14 @@\n // prolog when we run out.\n \n #if defined(__APPLE__) || defined(_WIN32)\n-#define RUST_NEW_STACK      _rust_new_stack\n+#define RUST_NEW_STACK2     _rust_new_stack2\n #define RUST_DEL_STACK      _rust_del_stack\n+#define UPCALL_CALL_C       _upcall_call_shim_on_c_stack\n #define MORESTACK           ___morestack\n #else\n-#define RUST_NEW_STACK      rust_new_stack\n+#define RUST_NEW_STACK2     rust_new_stack2\n #define RUST_DEL_STACK      rust_del_stack\n+#define UPCALL_CALL_C       upcall_call_shim_on_c_stack\n #define MORESTACK           __morestack\n #endif\n \n@@ -28,31 +30,51 @@\n #  define ARG2 %rdx\n #endif\n \n-.globl RUST_NEW_STACK\n+.globl RUST_NEW_STACK2\n .globl RUST_DEL_STACK\n-\n+.globl UPCALL_CALL_C\n .globl MORESTACK\n \n+#ifdef __ELF__\n+\t.type MORESTACK,@function\n+#endif\n+\n MORESTACK:\n-        // Hastily and probably incorrectly ported from i386 version.\n-        // Actually this calling convention doens't make so much sense\n-        // for x86_64...\n-        mov %rcx, ARG0      // param 0: amount of space needed\n-        mov %rdx, ARG2      // param 2: size of arguments\n-        lea 8(%rsp),ARG1\n-        call rust_new_stack_sym\n+\t.cfi_startproc\n+\n+\t# Set up a normal backtrace\n+\tpushq %rbp\n+\t.cfi_def_cfa_offset 16\n+\t.cfi_offset %rbp, -16\n+\tmovq %rsp, %rbp\n+\t.cfi_def_cfa_register %rbp\n \n+\t// Save argument registers\n+\tpushq\t%rdi\n+\tpushq\t%rsi\n+\tpushq\t%rdx\n+\tpushq\t%rcx\n+\tpushq\t%r8\n+\tpushq\t%r9\n+\n+\t// Calculate the address of the stack arguments\n+\tmovq %rbp, %rcx\n+\taddq $16, %rcx   // Add the saved %rbp, and return address\n+\taddq %r11, %rcx // Add the size of stack arguments\n+\n+\tpushq %r10 // The amount of stack needed\n+\tpushq %rcx // Address of stack arguments\n+\tpushq %r11 // Size of stack arguments\n+\tpushq %rbp // Save the Rust stack pointer\n+\n+\t// FIXME: Don't understand why I have to use the PLT here\n+\tlea RUST_NEW_STACK2@PLT(%rip), %rsi\n+\tlea 24(%rsp), %rdi\n+\tcall UPCALL_CALL_C@PLT\n+\t\n         mov (%rsp),%rdx        // Grab the return pointer.\n         inc %rdx               // Skip past the `ret`.\n         mov %rax,%rsp          // Switch to the new stack.\n         call *%rdx             // Enter the new function.\n \n-        // Now the function that called us has returned, so we need to delete the\n-        // old stack space.\n-        call rust_new_stack_sym\n-        mov %rax,%rsp          // Switch back to the old stack.\n-        ret\n-\n-// This is totally broken\n-rust_new_stack_sym:\n-rust_del_stack_sym:\n\\ No newline at end of file\n+\t.cfi_endproc\n\\ No newline at end of file"}, {"sha": "3933692f0155613f9f681ccc30d22d0d5fca4345", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cd75c9ce11672f360c6e430e824823a4d265c85b/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/cd75c9ce11672f360c6e430e824823a4d265c85b/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=cd75c9ce11672f360c6e430e824823a4d265c85b", "patch": "@@ -86,6 +86,21 @@ rust_new_stack(size_t stk_sz, void *args_addr, size_t args_sz,\n     return new_sp;\n }\n \n+struct rust_new_stack2_args {\n+  size_t stk_sz;\n+  void *args_addr;\n+  size_t args_sz;\n+  uintptr_t current_sp;\n+};\n+\n+// A new stack function suitable for calling through\n+// upcall_call_shim_on_c_stack\n+extern \"C\" void *\n+rust_new_stack2(struct rust_new_stack2_args *args) {\n+    return rust_new_stack(args->stk_sz, args->args_addr,\n+                          args->args_sz, args->current_sp);\n+}\n+\n extern \"C\" void\n rust_del_stack() {\n     rust_task *task = rust_scheduler::get_task();"}]}