{"sha": "2f66e9417f51d4350274854287c52a106599f31a", "node_id": "C_kwDOAAsO6NoAKDJmNjZlOTQxN2Y1MWQ0MzUwMjc0ODU0Mjg3YzUyYTEwNjU5OWYzMWE", "commit": {"author": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-10-05T18:46:39Z"}, "committer": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-11-07T09:35:19Z"}, "message": "Flood with bottom for Deinit, StorageLive and StorageDead", "tree": {"sha": "4c9e031cb1cd330e90e87417c89c34e897bff7f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c9e031cb1cd330e90e87417c89c34e897bff7f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f66e9417f51d4350274854287c52a106599f31a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f66e9417f51d4350274854287c52a106599f31a", "html_url": "https://github.com/rust-lang/rust/commit/2f66e9417f51d4350274854287c52a106599f31a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f66e9417f51d4350274854287c52a106599f31a/comments", "author": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eab77320e6cad8a42b05989c17bdc8a9609d83ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/eab77320e6cad8a42b05989c17bdc8a9609d83ac", "html_url": "https://github.com/rust-lang/rust/commit/eab77320e6cad8a42b05989c17bdc8a9609d83ac"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "1abfcacb0c09912bcffbef2bf34995b387ec48d6", "filename": "compiler/rustc_mir_dataflow/src/value_analysis.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2f66e9417f51d4350274854287c52a106599f31a/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f66e9417f51d4350274854287c52a106599f31a/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs?ref=2f66e9417f51d4350274854287c52a106599f31a", "patch": "@@ -91,12 +91,13 @@ pub trait ValueAnalysis<'tcx> {\n                 self.handle_intrinsic(intrinsic, state);\n             }\n             StatementKind::StorageLive(local) | StatementKind::StorageDead(local) => {\n-                // It is UB to read from an unitialized or unallocated local.\n-                state.flood(Place::from(*local).as_ref(), self.map());\n+                // We can flood with bottom here, because `StorageLive` makes the local\n+                // uninitialized, and `StorageDead` makes it UB to access.\n+                state.flood_with(Place::from(*local).as_ref(), self.map(), Self::Value::bottom());\n             }\n             StatementKind::Deinit(box place) => {\n-                // It is UB to read `uninit` bytes.\n-                state.flood(place.as_ref(), self.map());\n+                // The bottom states denotes uninitialized values.\n+                state.flood_with(place.as_ref(), self.map(), Self::Value::bottom());\n             }\n             StatementKind::Nop\n             | StatementKind::Retag(..)"}]}