{"sha": "84a463388040a1bc86578c0e3df2bf65e91127d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YTQ2MzM4ODA0MGExYmM4NjU3OGMwZTNkZjJiZjY1ZTkxMTI3ZDM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-04-01T12:32:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-01T12:32:12Z"}, "message": "Rollup merge of #70511 - ecstatic-morse:mir-dataflow-graphviz, r=davidtwco\n\nAdd `-Z dump-mir-dataflow` flag for dumping dataflow results visualization\n\nPreviously, to visualize the results of a MIR dataflow pass, one had to add a `#[rustc_mir(borrowck_graphviz_postflow)]` attribute to functions of interest. However, there is no way to specify this attribute on closures and generators, so it was impossible to view results for these MIR bodies.\n\nThis PR adds a flag, `-Z dump-mir-dataflow`, which will output the dataflow results for any functions specified in `-Z dump-mir` to the output directory specified by `-Z dump-mir-dir`. This behavior is modeled on the `-Z dump-mir-graphviz` flag.", "tree": {"sha": "ba255a9eb7ea01342b7d1507ca02fbfc35bd9d88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba255a9eb7ea01342b7d1507ca02fbfc35bd9d88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84a463388040a1bc86578c0e3df2bf65e91127d3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJehInMCRBK7hj4Ov3rIwAAdHIIACrpd9s9FTRU28MKjpq8Fr1B\n7XS+p6P0yh0Zb6+G60C+Ewlra8e8UNXpplatNfDsBrTTO2BvuDVKVqO05WraHMLu\nFKlKRNfJRmSmc63jYqPMWL9E6AfsDQ8VEzl213HQAymUu+yXRmYTmwQoHULML1xH\nyvbrfBmCG2I8gS/W3/szS9uAlvIwQoQ7172KY6N60pV0kY3d4KybvxMlKXh0ytzw\nTn/UHo/FEaj/HaRz/T7xGNomQoKhbBksntcouwcMrKGwnpdxVPMHeedNtg5ER8DL\nc/Fnyxg1u1UtdIibQDty3hXdU7dO0D6tqYPwflc9GpBNZttZvhcdBYo9ox3JHqA=\n=tzq4\n-----END PGP SIGNATURE-----\n", "payload": "tree ba255a9eb7ea01342b7d1507ca02fbfc35bd9d88\nparent 99009bf31992fb9257b84550dbf7cb509f987952\nparent 4d1194c31a8548f554212abb8fa724319631e2fc\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1585744332 +0200\ncommitter GitHub <noreply@github.com> 1585744332 +0200\n\nRollup merge of #70511 - ecstatic-morse:mir-dataflow-graphviz, r=davidtwco\n\nAdd `-Z dump-mir-dataflow` flag for dumping dataflow results visualization\n\nPreviously, to visualize the results of a MIR dataflow pass, one had to add a `#[rustc_mir(borrowck_graphviz_postflow)]` attribute to functions of interest. However, there is no way to specify this attribute on closures and generators, so it was impossible to view results for these MIR bodies.\n\nThis PR adds a flag, `-Z dump-mir-dataflow`, which will output the dataflow results for any functions specified in `-Z dump-mir` to the output directory specified by `-Z dump-mir-dir`. This behavior is modeled on the `-Z dump-mir-graphviz` flag.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84a463388040a1bc86578c0e3df2bf65e91127d3", "html_url": "https://github.com/rust-lang/rust/commit/84a463388040a1bc86578c0e3df2bf65e91127d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84a463388040a1bc86578c0e3df2bf65e91127d3/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99009bf31992fb9257b84550dbf7cb509f987952", "url": "https://api.github.com/repos/rust-lang/rust/commits/99009bf31992fb9257b84550dbf7cb509f987952", "html_url": "https://github.com/rust-lang/rust/commit/99009bf31992fb9257b84550dbf7cb509f987952"}, {"sha": "4d1194c31a8548f554212abb8fa724319631e2fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d1194c31a8548f554212abb8fa724319631e2fc", "html_url": "https://github.com/rust-lang/rust/commit/4d1194c31a8548f554212abb8fa724319631e2fc"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "f58c5cc8eeb8a495cc0d0f45a524c2e51cff3b0f", "filename": "src/librustc_interface/tests.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_interface%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_interface%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Ftests.rs?ref=84a463388040a1bc86578c0e3df2bf65e91127d3", "patch": "@@ -562,6 +562,8 @@ fn test_debugging_options_tracking_hash() {\n     assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n     opts.debugging_opts.dump_mir_graphviz = true;\n     assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n+    opts.debugging_opts.dump_mir_dataflow = true;\n+    assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n \n     // Make sure changing a [TRACKED] option changes the hash\n     opts = reference.clone();"}, {"sha": "678ab3ed323eaabba05ed1c90fc9ed3073b63547", "filename": "src/librustc_mir/borrow_check/nll.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs?ref=84a463388040a1bc86578c0e3df2bf65e91127d3", "patch": "@@ -317,7 +317,7 @@ pub(super) fn dump_mir_results<'a, 'tcx>(\n     regioncx: &RegionInferenceContext<'_>,\n     closure_region_requirements: &Option<ClosureRegionRequirements<'_>>,\n ) {\n-    if !mir_util::dump_enabled(infcx.tcx, \"nll\", source) {\n+    if !mir_util::dump_enabled(infcx.tcx, \"nll\", source.def_id()) {\n         return;\n     }\n "}, {"sha": "52d91e482593ea17aa18f5b0cdb061ac745275e0", "filename": "src/librustc_mir/dataflow/framework/engine.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs?ref=84a463388040a1bc86578c0e3df2bf65e91127d3", "patch": "@@ -15,6 +15,7 @@ use rustc_span::symbol::{sym, Symbol};\n \n use super::graphviz;\n use super::{Analysis, GenKillAnalysis, GenKillSet, Results};\n+use crate::util::pretty::dump_enabled;\n \n /// A solver for dataflow problems.\n pub struct Engine<'a, 'tcx, A>\n@@ -400,12 +401,25 @@ where\n     let attrs = match RustcMirAttrs::parse(tcx, def_id) {\n         Ok(attrs) => attrs,\n \n-        // Invalid `rustc_mir` attrs will be reported using `span_err`.\n+        // Invalid `rustc_mir` attrs are reported in `RustcMirAttrs::parse`\n         Err(()) => return Ok(()),\n     };\n \n     let path = match attrs.output_path(A::NAME) {\n         Some(path) => path,\n+\n+        None if tcx.sess.opts.debugging_opts.dump_mir_dataflow\n+            && dump_enabled(tcx, A::NAME, def_id) =>\n+        {\n+            let mut path = PathBuf::from(&tcx.sess.opts.debugging_opts.dump_mir_dir);\n+\n+            let item_name = ty::print::with_forced_impl_filename_line(|| {\n+                tcx.def_path(def_id).to_filename_friendly_no_crate()\n+            });\n+            path.push(format!(\"rustc.{}.{}.dot\", item_name, A::NAME));\n+            path\n+        }\n+\n         None => return Ok(()),\n     };\n \n@@ -430,7 +444,12 @@ where\n \n     let graphviz = graphviz::Formatter::new(body, def_id, results, &mut *formatter);\n     dot::render_opts(&graphviz, &mut buf, &[dot::RenderOption::Monospace])?;\n+\n+    if let Some(parent) = path.parent() {\n+        fs::create_dir_all(parent)?;\n+    }\n     fs::write(&path, buf)?;\n+\n     Ok(())\n }\n "}, {"sha": "9933b5cd9f74f2c0ff5bc988e5550b02621b0d3b", "filename": "src/librustc_mir/transform/dump_mir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_mir%2Ftransform%2Fdump_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_mir%2Ftransform%2Fdump_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fdump_mir.rs?ref=84a463388040a1bc86578c0e3df2bf65e91127d3", "patch": "@@ -46,7 +46,7 @@ pub fn on_mir_pass<'tcx>(\n     body: &Body<'tcx>,\n     is_after: bool,\n ) {\n-    if mir_util::dump_enabled(tcx, pass_name, source) {\n+    if mir_util::dump_enabled(tcx, pass_name, source.def_id()) {\n         mir_util::dump_mir(\n             tcx,\n             Some(pass_num),"}, {"sha": "a1b7634f0c618f167fee2a991845756206aa3e41", "filename": "src/librustc_mir/util/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fliveness.rs?ref=84a463388040a1bc86578c0e3df2bf65e91127d3", "patch": "@@ -265,7 +265,7 @@ pub fn dump_mir<'tcx>(\n     body: &Body<'tcx>,\n     result: &LivenessResult,\n ) {\n-    if !dump_enabled(tcx, pass_name, source) {\n+    if !dump_enabled(tcx, pass_name, source.def_id()) {\n         return;\n     }\n     let node_path = ty::print::with_forced_impl_filename_line(|| {"}, {"sha": "df7df6a0809b51b3d61c8e8f5b6da5991b8dfe89", "filename": "src/librustc_mir/util/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpretty.rs?ref=84a463388040a1bc86578c0e3df2bf65e91127d3", "patch": "@@ -78,21 +78,21 @@ pub fn dump_mir<'tcx, F>(\n ) where\n     F: FnMut(PassWhere, &mut dyn Write) -> io::Result<()>,\n {\n-    if !dump_enabled(tcx, pass_name, source) {\n+    if !dump_enabled(tcx, pass_name, source.def_id()) {\n         return;\n     }\n \n     dump_matched_mir_node(tcx, pass_num, pass_name, disambiguator, source, body, extra_data);\n }\n \n-pub fn dump_enabled<'tcx>(tcx: TyCtxt<'tcx>, pass_name: &str, source: MirSource<'tcx>) -> bool {\n+pub fn dump_enabled<'tcx>(tcx: TyCtxt<'tcx>, pass_name: &str, def_id: DefId) -> bool {\n     let filters = match tcx.sess.opts.debugging_opts.dump_mir {\n         None => return false,\n         Some(ref filters) => filters,\n     };\n     let node_path = ty::print::with_forced_impl_filename_line(|| {\n         // see notes on #41697 below\n-        tcx.def_path_str(source.def_id())\n+        tcx.def_path_str(def_id)\n     });\n     filters.split('|').any(|or_filter| {\n         or_filter.split('&').all(|and_filter| {"}, {"sha": "432f1e17ab312c592d4df04d6e06c7a45009a5b5", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a463388040a1bc86578c0e3df2bf65e91127d3/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=84a463388040a1bc86578c0e3df2bf65e91127d3", "patch": "@@ -835,6 +835,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"the directory the MIR is dumped into\"),\n     dump_mir_graphviz: bool = (false, parse_bool, [UNTRACKED],\n         \"in addition to `.mir` files, create graphviz `.dot` files\"),\n+    dump_mir_dataflow: bool = (false, parse_bool, [UNTRACKED],\n+        \"in addition to `.mir` files, create graphviz `.dot` files with dataflow results\"),\n     dump_mir_exclude_pass_number: bool = (false, parse_bool, [UNTRACKED],\n         \"if set, exclude the pass number when dumping MIR (used in tests)\"),\n     mir_emit_retag: bool = (false, parse_bool, [TRACKED],"}]}