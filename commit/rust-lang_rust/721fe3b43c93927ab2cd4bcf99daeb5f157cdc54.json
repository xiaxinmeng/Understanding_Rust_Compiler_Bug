{"sha": "721fe3b43c93927ab2cd4bcf99daeb5f157cdc54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMWZlM2I0M2M5MzkyN2FiMmNkNGJjZjk5ZGFlYjVmMTU3Y2RjNTQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-10-04T12:39:14Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-10-04T12:45:53Z"}, "message": "Predefine all local functions before codegen\n\nOtherwise only calls to previously codegened functions use relative\naddressing instead of the GOT\n\nFixes #692", "tree": {"sha": "ffb2fca744b1b9e97d77ac6350e37a7a2c6f1dce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffb2fca744b1b9e97d77ac6350e37a7a2c6f1dce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/721fe3b43c93927ab2cd4bcf99daeb5f157cdc54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/721fe3b43c93927ab2cd4bcf99daeb5f157cdc54", "html_url": "https://github.com/rust-lang/rust/commit/721fe3b43c93927ab2cd4bcf99daeb5f157cdc54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/721fe3b43c93927ab2cd4bcf99daeb5f157cdc54/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39796d162ee1e3477480f0bb5f66ecb70ae49d8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/39796d162ee1e3477480f0bb5f66ecb70ae49d8a", "html_url": "https://github.com/rust-lang/rust/commit/39796d162ee1e3477480f0bb5f66ecb70ae49d8a"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "b8e91b9365767b6448b894d1c2bd9a1fccde9fa7", "filename": "src/driver.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/721fe3b43c93927ab2cd4bcf99daeb5f157cdc54/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/721fe3b43c93927ab2cd4bcf99daeb5f157cdc54/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=721fe3b43c93927ab2cd4bcf99daeb5f157cdc54", "patch": "@@ -307,7 +307,19 @@ fn codegen_mono_items<'tcx>(\n     mono_items: FxHashMap<MonoItem<'tcx>, (RLinkage, Visibility)>,\n ) {\n     let mut cx = CodegenCx::new(tcx, module, debug_context);\n+\n     time(\"codegen mono items\", move || {\n+        for (&mono_item, &(linkage, visibility)) in &mono_items {\n+            match mono_item {\n+                MonoItem::Fn(instance) => {\n+                    let (name, sig) = get_function_name_and_sig(tcx, instance, false);\n+                    let linkage = crate::linkage::get_clif_linkage(mono_item, linkage, visibility);\n+                    cx.module.declare_function(&name, linkage, &sig).unwrap();\n+                }\n+                MonoItem::Static(_) | MonoItem::GlobalAsm(_) => {}\n+            }\n+        }\n+\n         for (mono_item, (linkage, visibility)) in mono_items {\n             crate::unimpl::try_unimpl(tcx, log, || {\n                 let linkage = crate::linkage::get_clif_linkage(mono_item, linkage, visibility);"}]}