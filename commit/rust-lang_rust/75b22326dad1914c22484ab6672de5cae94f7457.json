{"sha": "75b22326dad1914c22484ab6672de5cae94f7457", "node_id": "C_kwDOAAsO6NoAKDc1YjIyMzI2ZGFkMTkxNGMyMjQ4NGFiNjY3MmRlNWNhZTk0Zjc0NTc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-03T07:25:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-03T07:25:03Z"}, "message": "Auto merge of #12681 - lnicola:bump-deps, r=lnicola\n\nBump deps", "tree": {"sha": "d6b37d911da5ee0da907b88d7aa5be05ad35465b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6b37d911da5ee0da907b88d7aa5be05ad35465b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75b22326dad1914c22484ab6672de5cae94f7457", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75b22326dad1914c22484ab6672de5cae94f7457", "html_url": "https://github.com/rust-lang/rust/commit/75b22326dad1914c22484ab6672de5cae94f7457", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75b22326dad1914c22484ab6672de5cae94f7457/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc0bb71e258fa1a180435e265ece1fcc3ffb59f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc0bb71e258fa1a180435e265ece1fcc3ffb59f1", "html_url": "https://github.com/rust-lang/rust/commit/cc0bb71e258fa1a180435e265ece1fcc3ffb59f1"}, {"sha": "993a19a19aacdc3176705be936323fd0edd5a4bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/993a19a19aacdc3176705be936323fd0edd5a4bf", "html_url": "https://github.com/rust-lang/rust/commit/993a19a19aacdc3176705be936323fd0edd5a4bf"}], "stats": {"total": 348, "additions": 178, "deletions": 170}, "files": [{"sha": "69e27d2e81b25867f0c1bd703c24df4fdc584d89", "filename": "Cargo.lock", "status": "modified", "additions": 81, "deletions": 78, "changes": 159, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -37,9 +37,9 @@ dependencies = [\n \n [[package]]\n name = \"anyhow\"\n-version = \"1.0.57\"\n+version = \"1.0.58\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"08f9b8508dccb7687a1d6c4ce66b2b0ecef467c94667de27d8d7fe1f8d2a9cdc\"\n+checksum = \"bb07d2053ccdbe10e2af2995a2f116c1330396493dc1269f6a91d0ae82e19704\"\n \n [[package]]\n name = \"anymap\"\n@@ -49,9 +49,9 @@ checksum = \"8f1f8f5a6f3d50d89e3797d7593a50f96bb2aaa20ca0cc7be1fb673232c91d72\"\n \n [[package]]\n name = \"arbitrary\"\n-version = \"1.1.0\"\n+version = \"1.1.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c38b6b6b79f671c25e1a3e785b7b82d7562ffc9cd3efdc98627e5668a2472490\"\n+checksum = \"5a7924531f38b1970ff630f03eb20a2fde69db5c590c93b0f3482e95dcc5fd60\"\n \n [[package]]\n name = \"arrayvec\"\n@@ -87,7 +87,7 @@ dependencies = [\n  \"cfg-if\",\n  \"libc\",\n  \"miniz_oxide\",\n- \"object\",\n+ \"object 0.28.4\",\n  \"rustc-demangle\",\n ]\n \n@@ -132,9 +132,9 @@ dependencies = [\n \n [[package]]\n name = \"cargo_metadata\"\n-version = \"0.14.2\"\n+version = \"0.15.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4acbb09d9ee8e23699b9634375c72795d095bf268439da88562cf9b501f181fa\"\n+checksum = \"3abb7553d5b9b8421c6de7cb02606ff15e0c6eea7d8eadd75ef013fd636bec36\"\n dependencies = [\n  \"camino\",\n  \"cargo-platform\",\n@@ -171,9 +171,9 @@ checksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n \n [[package]]\n name = \"chalk-derive\"\n-version = \"0.82.0\"\n+version = \"0.83.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ee9cd790d543c29ce953abcb28d54b9fbaf9c4033bfd3024de99b1aa0f3c3ada\"\n+checksum = \"83553c2ef7717e58aecdf42dd9e3c876229f5a1f35a16435b5ddc4addef81827\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -183,9 +183,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-ir\"\n-version = \"0.82.0\"\n+version = \"0.83.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"dddf2c11f9de666c08c7591eb113efcdc740bd8ac602915475b045bcbe7f27a5\"\n+checksum = \"2dd42107d579d8ec2a5af20a8de62a37524a67bf6a4c0ff08a950068f0bfea91\"\n dependencies = [\n  \"bitflags\",\n  \"chalk-derive\",\n@@ -194,9 +194,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-recursive\"\n-version = \"0.82.0\"\n+version = \"0.83.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a60d5b35598702963ffd145b8bfa0d8d8ae9da3a731e4e0814aa21541b85c2d5\"\n+checksum = \"c444031541a76c13c145e76d91f1548e9feb2240e7f0c3e77879ceb694994f2d\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\",\n@@ -207,9 +207,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-solve\"\n-version = \"0.82.0\"\n+version = \"0.83.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d99da4fa3b224c07f6c2506e6905bca9d6aad665f11d25364e6818a7ea149215\"\n+checksum = \"c76f2db19c5e8a3d42340cf5b4d90b8c218750536fca35e2bb285ab6653c0bc8\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\",\n@@ -249,9 +249,9 @@ dependencies = [\n \n [[package]]\n name = \"crossbeam-channel\"\n-version = \"0.5.4\"\n+version = \"0.5.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"5aaa7bd5fb665c6864b5f963dd9097905c54125909c7aa94c9e18507cdbe6c53\"\n+checksum = \"4c02a4d71819009c192cf4872265391563fd6a84c81ff2c0f2a7026ca4c1d85c\"\n dependencies = [\n  \"cfg-if\",\n  \"crossbeam-utils\",\n@@ -270,26 +270,26 @@ dependencies = [\n \n [[package]]\n name = \"crossbeam-epoch\"\n-version = \"0.9.8\"\n+version = \"0.9.9\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1145cf131a2c6ba0615079ab6a638f7e1973ac9c2634fcbeaaad6114246efe8c\"\n+checksum = \"07db9d94cbd326813772c968ccd25999e5f8ae22f4f8d1b11effa37ef6ce281d\"\n dependencies = [\n  \"autocfg\",\n  \"cfg-if\",\n  \"crossbeam-utils\",\n- \"lazy_static\",\n  \"memoffset\",\n+ \"once_cell\",\n  \"scopeguard\",\n ]\n \n [[package]]\n name = \"crossbeam-utils\"\n-version = \"0.8.8\"\n+version = \"0.8.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0bf124c720b7686e3c2663cf54062ab0f68a88af2fb6a030e87e30bf721fcb38\"\n+checksum = \"7d82ee10ce34d7bc12c2122495e7593a9c41347ecdd64185af4ecf72cb1a7f83\"\n dependencies = [\n  \"cfg-if\",\n- \"lazy_static\",\n+ \"once_cell\",\n ]\n \n [[package]]\n@@ -299,16 +299,16 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"3495912c9c1ccf2e18976439f4443f3fee0fd61f424ff99fde6a66b15ecb448f\"\n dependencies = [\n  \"cfg-if\",\n- \"hashbrown 0.12.1\",\n+ \"hashbrown\",\n  \"lock_api\",\n  \"parking_lot_core 0.9.3\",\n ]\n \n [[package]]\n name = \"derive_arbitrary\"\n-version = \"1.1.0\"\n+version = \"1.1.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"98e23c06c035dac87bd802d98f368df73a7f2cb05a66ffbd1f377e821fac4af9\"\n+checksum = \"c9a577516173adb681466d517d39bd468293bc2c2a16439375ef0f35bba45f3d\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -335,9 +335,9 @@ checksum = \"9bda8e21c04aca2ae33ffc2fd8c23134f3cac46db123ba97bd9d3f3b8a4a85e1\"\n \n [[package]]\n name = \"either\"\n-version = \"1.6.1\"\n+version = \"1.7.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e78d4f1cc4ae33bbfc157ed5d5a5ef3bc29227303d595861deb238fcec4e9457\"\n+checksum = \"3f107b87b6afc2a64fd13cac55fe06d6c8859f12d4b14cbcdd2c67d0976781be\"\n \n [[package]]\n name = \"ena\"\n@@ -360,14 +360,14 @@ dependencies = [\n \n [[package]]\n name = \"filetime\"\n-version = \"0.2.16\"\n+version = \"0.2.17\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c0408e2626025178a6a7f7ffc05a25bc47103229f19c113755de7bf63816290c\"\n+checksum = \"e94a7bbaa59354bc20dd75b67f23e2797b4490e9d6928203fb105c79e448c86c\"\n dependencies = [\n  \"cfg-if\",\n  \"libc\",\n  \"redox_syscall\",\n- \"winapi\",\n+ \"windows-sys 0.36.1\",\n ]\n \n [[package]]\n@@ -438,12 +438,6 @@ version = \"0.26.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"78cc372d058dcf6d5ecd98510e7fbc9e5aec4d21de70f65fea8fecebcd881bd4\"\n \n-[[package]]\n-name = \"hashbrown\"\n-version = \"0.11.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ab5ef0d4909ef3724cc8cce6ccc8572c5c817592e9285f5464f8e86f8bd3726e\"\n-\n [[package]]\n name = \"hashbrown\"\n version = \"0.12.1\"\n@@ -504,7 +498,7 @@ dependencies = [\n  \"either\",\n  \"expect-test\",\n  \"fst\",\n- \"hashbrown 0.12.1\",\n+ \"hashbrown\",\n  \"hir-expand\",\n  \"indexmap\",\n  \"itertools\",\n@@ -531,7 +525,7 @@ dependencies = [\n  \"cov-mark\",\n  \"either\",\n  \"expect-test\",\n- \"hashbrown 0.12.1\",\n+ \"hashbrown\",\n  \"itertools\",\n  \"la-arena\",\n  \"limit\",\n@@ -726,12 +720,12 @@ dependencies = [\n \n [[package]]\n name = \"indexmap\"\n-version = \"1.8.2\"\n+version = \"1.9.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e6012d540c5baa3589337a98ce73408de9b5a25ec9fc2c6fd6be8f0d39e0ca5a\"\n+checksum = \"10a35a97730320ffe8e2d410b5d3b69279b98d2c14bdb8b70ea89ecf7888d41e\"\n dependencies = [\n  \"autocfg\",\n- \"hashbrown 0.11.2\",\n+ \"hashbrown\",\n ]\n \n [[package]]\n@@ -960,9 +954,9 @@ dependencies = [\n \n [[package]]\n name = \"mio\"\n-version = \"0.8.3\"\n+version = \"0.8.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"713d550d9b44d89174e066b7a6217ae06234c10cb47819a88290d2b353c31799\"\n+checksum = \"57ee1c23c7c63b0c9250c339ffdc69255f110b298b901b9f6c82547b7b87caaf\"\n dependencies = [\n  \"libc\",\n  \"log\",\n@@ -1016,6 +1010,15 @@ dependencies = [\n  \"memchr\",\n ]\n \n+[[package]]\n+name = \"object\"\n+version = \"0.29.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"21158b2c33aa6d4561f1c0a6ea283ca92bc54802a93b263e910746d679a7eb53\"\n+dependencies = [\n+ \"memchr\",\n+]\n+\n [[package]]\n name = \"once_cell\"\n version = \"1.12.0\"\n@@ -1143,7 +1146,7 @@ name = \"proc-macro-api\"\n version = \"0.0.0\"\n dependencies = [\n  \"memmap2\",\n- \"object\",\n+ \"object 0.29.0\",\n  \"paths\",\n  \"profile\",\n  \"serde\",\n@@ -1162,7 +1165,7 @@ dependencies = [\n  \"libloading\",\n  \"mbe\",\n  \"memmap2\",\n- \"object\",\n+ \"object 0.29.0\",\n  \"paths\",\n  \"proc-macro-api\",\n  \"proc-macro-test\",\n@@ -1184,9 +1187,9 @@ version = \"0.0.0\"\n \n [[package]]\n name = \"proc-macro2\"\n-version = \"1.0.39\"\n+version = \"1.0.40\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c54b25569025b7fc9651de43004ae593a75ad88543b17178aa5e1b9c4f15f56f\"\n+checksum = \"dd96a1e8ed2596c337f8eae5f24924ec83f5ad5ab21ea8e455d3566c69fbcaf7\"\n dependencies = [\n  \"unicode-ident\",\n ]\n@@ -1239,18 +1242,18 @@ dependencies = [\n \n [[package]]\n name = \"pulldown-cmark-to-cmark\"\n-version = \"10.0.1\"\n+version = \"10.0.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3eafb76310f7dc895b5d83d24f2a00e244fc8a68ef94f4257eb4060984d0385f\"\n+checksum = \"c1353ac408192fa925228d3e60ff746167d03f4f7e54835d78ef79e08225d913\"\n dependencies = [\n  \"pulldown-cmark\",\n ]\n \n [[package]]\n name = \"quote\"\n-version = \"1.0.18\"\n+version = \"1.0.20\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a1feb54ed693b93a84e14094943b84b7c4eae204c512b7ccb95ab0c66d278ad1\"\n+checksum = \"3bcdf212e9776fbcb2d23ab029360416bb1706b1aea2d1a5ba002727cbcab804\"\n dependencies = [\n  \"proc-macro2\",\n ]\n@@ -1319,7 +1322,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"ce1f383129e417a6265b16ed78e6e9307748f0863b2ba75f78ff14717db5b017\"\n dependencies = [\n  \"countme\",\n- \"hashbrown 0.12.1\",\n+ \"hashbrown\",\n  \"memoffset\",\n  \"rustc-hash\",\n  \"text-size\",\n@@ -1457,27 +1460,27 @@ checksum = \"d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd\"\n \n [[package]]\n name = \"semver\"\n-version = \"1.0.10\"\n+version = \"1.0.12\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a41d061efea015927ac527063765e73601444cdc344ba855bc7bd44578b25e1c\"\n+checksum = \"a2333e6df6d6598f2b1974829f853c2b4c5f4a6e503c10af918081aa6f8564e1\"\n dependencies = [\n  \"serde\",\n ]\n \n [[package]]\n name = \"serde\"\n-version = \"1.0.137\"\n+version = \"1.0.138\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"61ea8d54c77f8315140a05f4c7237403bf38b72704d031543aa1d16abbf517d1\"\n+checksum = \"1578c6245786b9d168c5447eeacfb96856573ca56c9d68fdcf394be134882a47\"\n dependencies = [\n  \"serde_derive\",\n ]\n \n [[package]]\n name = \"serde_derive\"\n-version = \"1.0.137\"\n+version = \"1.0.138\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1f26faba0c3959972377d3b2d306ee9f71faee9714294e41bb777f83f88578be\"\n+checksum = \"023e9b1467aef8a10fb88f25611870ada9800ef7e22afce356bb0d2387b6f27c\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -1486,9 +1489,9 @@ dependencies = [\n \n [[package]]\n name = \"serde_json\"\n-version = \"1.0.81\"\n+version = \"1.0.82\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9b7ce2b32a1aed03c558dc61a5cd328f15aff2dbc17daad8fb8af04d2100e15c\"\n+checksum = \"82c2c1fdcd807d1098552c5b9a36e425e42e9fbd7c6a37a8425f390f781f7fa7\"\n dependencies = [\n  \"indexmap\",\n  \"itoa\",\n@@ -1518,9 +1521,9 @@ dependencies = [\n \n [[package]]\n name = \"smallvec\"\n-version = \"1.8.0\"\n+version = \"1.9.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f2dd574626839106c320a323308629dcb1acfc96e32a8cba364ddc61ac23ee83\"\n+checksum = \"2fd0db749597d91ff862fd1d55ea87f7855a744a8425a64695b6fca237d1dad1\"\n \n [[package]]\n name = \"smol_str\"\n@@ -1557,9 +1560,9 @@ dependencies = [\n \n [[package]]\n name = \"syn\"\n-version = \"1.0.96\"\n+version = \"1.0.98\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0748dd251e24453cb8717f0354206b91557e4ec8703673a4b30208f2abaf1ebf\"\n+checksum = \"c50aef8a904de4c23c788f104b7dddc7d6f79c647c7c8ce4cc8f73eb0ca773dd\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -1659,9 +1662,9 @@ dependencies = [\n \n [[package]]\n name = \"tikv-jemalloc-sys\"\n-version = \"0.5.0+5.3.0\"\n+version = \"0.5.1+5.3.0-patched\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"aeab4310214fe0226df8bfeb893a291a58b19682e8a07e1e1d4483ad4200d315\"\n+checksum = \"931e876f91fed0827f863a2d153897790da0b24d882c721a79cb3beb0b903261\"\n dependencies = [\n  \"cc\",\n  \"fs_extra\",\n@@ -1714,9 +1717,9 @@ dependencies = [\n \n [[package]]\n name = \"tracing-attributes\"\n-version = \"0.1.21\"\n+version = \"0.1.22\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"cc6b8ad3567499f98a1db7a752b07a7c8c7c7c34c332ec00effb2b0027974b7c\"\n+checksum = \"11c75893af559bc8e10716548bdef5cb2b983f8e637db9d0e15126b61b484ee2\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -1725,9 +1728,9 @@ dependencies = [\n \n [[package]]\n name = \"tracing-core\"\n-version = \"0.1.27\"\n+version = \"0.1.28\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"7709595b8878a4965ce5e87ebf880a7d39c9afc6837721b21a5a816a8117d921\"\n+checksum = \"7b7358be39f2f274f322d2aaed611acc57f382e8eb1e5b48cb9ae30933495ce7\"\n dependencies = [\n  \"once_cell\",\n  \"valuable\",\n@@ -1746,12 +1749,12 @@ dependencies = [\n \n [[package]]\n name = \"tracing-subscriber\"\n-version = \"0.3.11\"\n+version = \"0.3.14\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4bc28f93baff38037f64e6f43d34cfa1605f27a49c34e8a04c5e78b0babf2596\"\n+checksum = \"3a713421342a5a666b7577783721d3117f1b69a393df803ee17bb73b1e122a59\"\n dependencies = [\n- \"lazy_static\",\n  \"matchers\",\n+ \"once_cell\",\n  \"regex\",\n  \"sharded-slab\",\n  \"thread_local\",\n@@ -1810,15 +1813,15 @@ checksum = \"099b7128301d285f79ddd55b9a83d5e6b9e97c92e0ea0daebee7263e932de992\"\n \n [[package]]\n name = \"unicode-ident\"\n-version = \"1.0.0\"\n+version = \"1.0.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d22af068fba1eb5edcb4aea19d382b2a3deb4c8f9d475c589b6ada9e0fd493ee\"\n+checksum = \"5bd2fe26506023ed7b5e1e315add59d6f584c621d037f9368fea9cfb988f368c\"\n \n [[package]]\n name = \"unicode-normalization\"\n-version = \"0.1.19\"\n+version = \"0.1.21\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d54590932941a9e9266f0832deed84ebe1bf2e4c9e4a3554d393d18f5e854bf9\"\n+checksum = \"854cbdc4f7bc6ae19c820d44abdc3277ac3e1b2b93db20a636825d9322fb60e6\"\n dependencies = [\n  \"tinyvec\",\n ]"}, {"sha": "d3d180ece512a4a72f3d9dd15d2cb3643391fe44", "filename": "crates/flycheck/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fflycheck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fflycheck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -10,9 +10,9 @@ rust-version = \"1.57\"\n doctest = false\n \n [dependencies]\n-crossbeam-channel = \"0.5.4\"\n+crossbeam-channel = \"0.5.5\"\n tracing = \"0.1.35\"\n-cargo_metadata = \"0.14.2\"\n+cargo_metadata = \"0.15.0\"\n serde = { version = \"1.0.137\", features = [\"derive\"] }\n serde_json = \"1.0.81\"\n jod-thread = \"0.1.2\""}, {"sha": "35a18e4bebf58259b9cfddfeae267fa487caab5e", "filename": "crates/hir-def/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-def%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-def%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -17,15 +17,15 @@ cov-mark = \"2.0.0-pre.1\"\n # We need to freeze the version of the crate, as the raw-api feature is considered unstable\n dashmap = { version = \"=5.3.4\", features = [\"raw-api\"] }\n drop_bomb = \"0.1.5\"\n-either = \"1.6.1\"\n+either = \"1.7.0\"\n fst = { version = \"0.4.7\", default-features = false }\n hashbrown = { version = \"0.12.1\", default-features = false }\n-indexmap = \"1.8.2\"\n+indexmap = \"1.9.1\"\n itertools = \"0.10.3\"\n la-arena = { version = \"0.3.0\", path = \"../../lib/la-arena\" }\n once_cell = \"1.12.0\"\n rustc-hash = \"1.1.0\"\n-smallvec = \"1.8.0\"\n+smallvec = \"1.9.0\"\n tracing = \"0.1.35\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }"}, {"sha": "453afa6e2f3da0d6de25df68dcda43c1cd286a91", "filename": "crates/hir-expand/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-expand%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-expand%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -12,7 +12,7 @@ doctest = false\n [dependencies]\n cov-mark = \"2.0.0-pre.1\"\n tracing = \"0.1.35\"\n-either = \"1.6.1\"\n+either = \"1.7.0\"\n rustc-hash = \"1.1.0\"\n la-arena = { version = \"0.3.0\", path = \"../../lib/la-arena\" }\n itertools = \"0.10.3\""}, {"sha": "d359cb0ed1451e3762e25371e63234430308940c", "filename": "crates/hir-ty/Cargo.toml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -13,14 +13,14 @@ doctest = false\n cov-mark = \"2.0.0-pre.1\"\n itertools = \"0.10.3\"\n arrayvec = \"0.7.2\"\n-smallvec = \"1.8.0\"\n+smallvec = \"1.9.0\"\n ena = \"0.14.0\"\n tracing = \"0.1.35\"\n rustc-hash = \"1.1.0\"\n scoped-tls = \"1.0.0\"\n-chalk-solve = { version = \"0.82.0\", default-features = false }\n-chalk-ir = \"0.82.0\"\n-chalk-recursive = { version = \"0.82.0\", default-features = false }\n+chalk-solve = { version = \"0.83.0\", default-features = false }\n+chalk-ir = \"0.83.0\"\n+chalk-recursive = { version = \"0.83.0\", default-features = false }\n la-arena = { version = \"0.3.0\", path = \"../../lib/la-arena\" }\n once_cell = \"1.12.0\"\n typed-arena = \"2.0.1\"\n@@ -37,7 +37,7 @@ limit = { path = \"../limit\", version = \"0.0.0\" }\n test-utils = { path = \"../test-utils\" }\n expect-test = \"1.3.0\"\n tracing = \"0.1.35\"\n-tracing-subscriber = { version = \"0.3.11\", default-features = false, features = [\n+tracing-subscriber = { version = \"0.3.14\", default-features = false, features = [\n     \"env-filter\",\n     \"registry\",\n ] }"}, {"sha": "23587cc6d0db7ab34a45993da25075ba6659eed4", "filename": "crates/hir-ty/src/builder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-ty%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-ty%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fbuilder.rs?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -4,7 +4,7 @@ use std::iter;\n \n use chalk_ir::{\n     cast::{Cast, CastTo, Caster},\n-    fold::Fold,\n+    fold::TypeFoldable,\n     interner::HasInterner,\n     AdtId, BoundVar, DebruijnIndex, Scalar,\n };\n@@ -276,7 +276,7 @@ impl TyBuilder<TypeAliasId> {\n     }\n }\n \n-impl<T: HasInterner<Interner = Interner> + Fold<Interner>> TyBuilder<Binders<T>> {\n+impl<T: HasInterner<Interner = Interner> + TypeFoldable<Interner>> TyBuilder<Binders<T>> {\n     fn subst_binders(b: Binders<T>) -> Self {\n         let param_kinds = b\n             .binders\n@@ -290,7 +290,7 @@ impl<T: HasInterner<Interner = Interner> + Fold<Interner>> TyBuilder<Binders<T>>\n         TyBuilder::new(b, param_kinds)\n     }\n \n-    pub fn build(self) -> <T as Fold<Interner>>::Result {\n+    pub fn build(self) -> T {\n         let (b, subst) = self.build_internal();\n         b.substitute(Interner, &subst)\n     }"}, {"sha": "014109f03d2cd1a6f5be5c8efd8c822eb5d572fe", "filename": "crates/hir-ty/src/infer/unify.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Funify.rs?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -3,8 +3,8 @@\n use std::{fmt, mem, sync::Arc};\n \n use chalk_ir::{\n-    cast::Cast, fold::Fold, interner::HasInterner, zip::Zip, CanonicalVarKind, FloatTy, IntTy,\n-    NoSolution, TyVariableKind, UniverseIndex,\n+    cast::Cast, fold::TypeFoldable, interner::HasInterner, zip::Zip, CanonicalVarKind, FloatTy,\n+    IntTy, NoSolution, TyVariableKind, UniverseIndex,\n };\n use chalk_solve::infer::ParameterEnaVariableExt;\n use ena::unify::UnifyKey;\n@@ -20,12 +20,12 @@ use crate::{\n };\n \n impl<'a> InferenceContext<'a> {\n-    pub(super) fn canonicalize<T: Fold<Interner> + HasInterner<Interner = Interner>>(\n+    pub(super) fn canonicalize<T: TypeFoldable<Interner> + HasInterner<Interner = Interner>>(\n         &mut self,\n         t: T,\n-    ) -> Canonicalized<T::Result>\n+    ) -> Canonicalized<T>\n     where\n-        T::Result: HasInterner<Interner = Interner>,\n+        T: HasInterner<Interner = Interner>,\n     {\n         self.table.canonicalize(t)\n     }\n@@ -200,12 +200,12 @@ impl<'a> InferenceTable<'a> {\n         .intern(Interner)\n     }\n \n-    pub(crate) fn canonicalize<T: Fold<Interner> + HasInterner<Interner = Interner>>(\n+    pub(crate) fn canonicalize<T: TypeFoldable<Interner> + HasInterner<Interner = Interner>>(\n         &mut self,\n         t: T,\n-    ) -> Canonicalized<T::Result>\n+    ) -> Canonicalized<T>\n     where\n-        T::Result: HasInterner<Interner = Interner>,\n+        T: HasInterner<Interner = Interner>,\n     {\n         // try to resolve obligations before canonicalizing, since this might\n         // result in new knowledge about variables\n@@ -292,9 +292,9 @@ impl<'a> InferenceTable<'a> {\n         &mut self,\n         t: T,\n         fallback: &dyn Fn(InferenceVar, VariableKind, GenericArg, DebruijnIndex) -> GenericArg,\n-    ) -> T::Result\n+    ) -> T\n     where\n-        T: HasInterner<Interner = Interner> + Fold<Interner>,\n+        T: HasInterner<Interner = Interner> + TypeFoldable<Interner>,\n     {\n         self.resolve_with_fallback_inner(&mut Vec::new(), t, &fallback)\n     }\n@@ -310,9 +310,9 @@ impl<'a> InferenceTable<'a> {\n         )\n     }\n \n-    pub(crate) fn instantiate_canonical<T>(&mut self, canonical: Canonical<T>) -> T::Result\n+    pub(crate) fn instantiate_canonical<T>(&mut self, canonical: Canonical<T>) -> T\n     where\n-        T: HasInterner<Interner = Interner> + Fold<Interner> + std::fmt::Debug,\n+        T: HasInterner<Interner = Interner> + TypeFoldable<Interner> + std::fmt::Debug,\n     {\n         let subst = self.fresh_subst(canonical.binders.as_slice(Interner));\n         subst.apply(canonical.value, Interner)\n@@ -323,9 +323,9 @@ impl<'a> InferenceTable<'a> {\n         var_stack: &mut Vec<InferenceVar>,\n         t: T,\n         fallback: &dyn Fn(InferenceVar, VariableKind, GenericArg, DebruijnIndex) -> GenericArg,\n-    ) -> T::Result\n+    ) -> T\n     where\n-        T: HasInterner<Interner = Interner> + Fold<Interner>,\n+        T: HasInterner<Interner = Interner> + TypeFoldable<Interner>,\n     {\n         t.fold_with(\n             &mut resolve::Resolver { table: self, var_stack, fallback },\n@@ -334,9 +334,9 @@ impl<'a> InferenceTable<'a> {\n         .expect(\"fold failed unexpectedly\")\n     }\n \n-    pub(crate) fn resolve_completely<T>(&mut self, t: T) -> T::Result\n+    pub(crate) fn resolve_completely<T>(&mut self, t: T) -> T\n     where\n-        T: HasInterner<Interner = Interner> + Fold<Interner>,\n+        T: HasInterner<Interner = Interner> + TypeFoldable<Interner>,\n     {\n         self.resolve_with_fallback(t, &|_, _, d, _| d)\n     }\n@@ -447,19 +447,19 @@ impl<'a> InferenceTable<'a> {\n         }\n     }\n \n-    pub(crate) fn fudge_inference<T: Fold<Interner>>(\n+    pub(crate) fn fudge_inference<T: TypeFoldable<Interner>>(\n         &mut self,\n         f: impl FnOnce(&mut Self) -> T,\n-    ) -> T::Result {\n-        use chalk_ir::fold::Folder;\n+    ) -> T {\n+        use chalk_ir::fold::TypeFolder;\n         struct VarFudger<'a, 'b> {\n             table: &'a mut InferenceTable<'b>,\n             highest_known_var: InferenceVar,\n         }\n-        impl<'a, 'b> Folder<Interner> for VarFudger<'a, 'b> {\n+        impl<'a, 'b> TypeFolder<Interner> for VarFudger<'a, 'b> {\n             type Error = NoSolution;\n \n-            fn as_dyn(&mut self) -> &mut dyn Folder<Interner, Error = Self::Error> {\n+            fn as_dyn(&mut self) -> &mut dyn TypeFolder<Interner, Error = Self::Error> {\n                 self\n             }\n \n@@ -635,7 +635,7 @@ mod resolve {\n     };\n     use chalk_ir::{\n         cast::Cast,\n-        fold::{Fold, Folder},\n+        fold::{TypeFoldable, TypeFolder},\n         Fallible, NoSolution,\n     };\n     use hir_def::type_ref::ConstScalar;\n@@ -645,13 +645,13 @@ mod resolve {\n         pub(super) var_stack: &'a mut Vec<InferenceVar>,\n         pub(super) fallback: F,\n     }\n-    impl<'a, 'b, 'i, F> Folder<Interner> for Resolver<'a, 'b, F>\n+    impl<'a, 'b, 'i, F> TypeFolder<Interner> for Resolver<'a, 'b, F>\n     where\n         F: Fn(InferenceVar, VariableKind, GenericArg, DebruijnIndex) -> GenericArg + 'i,\n     {\n         type Error = NoSolution;\n \n-        fn as_dyn(&mut self) -> &mut dyn Folder<Interner, Error = Self::Error> {\n+        fn as_dyn(&mut self) -> &mut dyn TypeFolder<Interner, Error = Self::Error> {\n             self\n         }\n "}, {"sha": "5abbee89711d7a09d918aa09fd00eede85777e4c", "filename": "crates/hir-ty/src/lib.rs", "status": "modified", "additions": 24, "deletions": 26, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flib.rs?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -33,7 +33,7 @@ mod test_db;\n use std::sync::Arc;\n \n use chalk_ir::{\n-    fold::{Fold, Shift},\n+    fold::{Shift, TypeFoldable},\n     interner::HasInterner,\n     NoSolution,\n };\n@@ -136,7 +136,7 @@ pub fn param_idx(db: &dyn HirDatabase, id: TypeOrConstParamId) -> Option<usize>\n \n pub(crate) fn wrap_empty_binders<T>(value: T) -> Binders<T>\n where\n-    T: Fold<Interner, Result = T> + HasInterner<Interner = Interner>,\n+    T: TypeFoldable<Interner> + HasInterner<Interner = Interner>,\n {\n     Binders::empty(Interner, value.shifted_in_from(Interner, DebruijnIndex::ONE))\n }\n@@ -264,14 +264,12 @@ impl CallableSig {\n     }\n }\n \n-impl Fold<Interner> for CallableSig {\n-    type Result = CallableSig;\n-\n+impl TypeFoldable<Interner> for CallableSig {\n     fn fold_with<E>(\n         self,\n-        folder: &mut dyn chalk_ir::fold::Folder<Interner, Error = E>,\n+        folder: &mut dyn chalk_ir::fold::TypeFolder<Interner, Error = E>,\n         outer_binder: DebruijnIndex,\n-    ) -> Result<Self::Result, E> {\n+    ) -> Result<Self, E> {\n         let vec = self.params_and_return.to_vec();\n         let folded = vec.fold_with(folder, outer_binder)?;\n         Ok(CallableSig { params_and_return: folded.into(), is_varargs: self.is_varargs })\n@@ -300,22 +298,22 @@ pub fn static_lifetime() -> Lifetime {\n     LifetimeData::Static.intern(Interner)\n }\n \n-pub(crate) fn fold_free_vars<T: HasInterner<Interner = Interner> + Fold<Interner>>(\n+pub(crate) fn fold_free_vars<T: HasInterner<Interner = Interner> + TypeFoldable<Interner>>(\n     t: T,\n     for_ty: impl FnMut(BoundVar, DebruijnIndex) -> Ty,\n     for_const: impl FnMut(Ty, BoundVar, DebruijnIndex) -> Const,\n-) -> T::Result {\n-    use chalk_ir::{fold::Folder, Fallible};\n+) -> T {\n+    use chalk_ir::{fold::TypeFolder, Fallible};\n     struct FreeVarFolder<F1, F2>(F1, F2);\n     impl<\n             'i,\n             F1: FnMut(BoundVar, DebruijnIndex) -> Ty + 'i,\n             F2: FnMut(Ty, BoundVar, DebruijnIndex) -> Const + 'i,\n-        > Folder<Interner> for FreeVarFolder<F1, F2>\n+        > TypeFolder<Interner> for FreeVarFolder<F1, F2>\n     {\n         type Error = NoSolution;\n \n-        fn as_dyn(&mut self) -> &mut dyn Folder<Interner, Error = Self::Error> {\n+        fn as_dyn(&mut self) -> &mut dyn TypeFolder<Interner, Error = Self::Error> {\n             self\n         }\n \n@@ -344,11 +342,11 @@ pub(crate) fn fold_free_vars<T: HasInterner<Interner = Interner> + Fold<Interner\n         .expect(\"fold failed unexpectedly\")\n }\n \n-pub(crate) fn fold_tys<T: HasInterner<Interner = Interner> + Fold<Interner>>(\n+pub(crate) fn fold_tys<T: HasInterner<Interner = Interner> + TypeFoldable<Interner>>(\n     t: T,\n     mut for_ty: impl FnMut(Ty, DebruijnIndex) -> Ty,\n     binders: DebruijnIndex,\n-) -> T::Result {\n+) -> T {\n     fold_tys_and_consts(\n         t,\n         |x, d| match x {\n@@ -359,22 +357,22 @@ pub(crate) fn fold_tys<T: HasInterner<Interner = Interner> + Fold<Interner>>(\n     )\n }\n \n-pub(crate) fn fold_tys_and_consts<T: HasInterner<Interner = Interner> + Fold<Interner>>(\n+pub(crate) fn fold_tys_and_consts<T: HasInterner<Interner = Interner> + TypeFoldable<Interner>>(\n     t: T,\n     f: impl FnMut(Either<Ty, Const>, DebruijnIndex) -> Either<Ty, Const>,\n     binders: DebruijnIndex,\n-) -> T::Result {\n+) -> T {\n     use chalk_ir::{\n-        fold::{Folder, SuperFold},\n+        fold::{TypeFolder, TypeSuperFoldable},\n         Fallible,\n     };\n     struct TyFolder<F>(F);\n-    impl<'i, F: FnMut(Either<Ty, Const>, DebruijnIndex) -> Either<Ty, Const> + 'i> Folder<Interner>\n-        for TyFolder<F>\n+    impl<'i, F: FnMut(Either<Ty, Const>, DebruijnIndex) -> Either<Ty, Const> + 'i>\n+        TypeFolder<Interner> for TyFolder<F>\n     {\n         type Error = NoSolution;\n \n-        fn as_dyn(&mut self) -> &mut dyn Folder<Interner, Error = Self::Error> {\n+        fn as_dyn(&mut self) -> &mut dyn TypeFolder<Interner, Error = Self::Error> {\n             self\n         }\n \n@@ -397,22 +395,22 @@ pub(crate) fn fold_tys_and_consts<T: HasInterner<Interner = Interner> + Fold<Int\n /// 'Canonicalizes' the `t` by replacing any errors with new variables. Also\n /// ensures there are no unbound variables or inference variables anywhere in\n /// the `t`.\n-pub fn replace_errors_with_variables<T>(t: &T) -> Canonical<T::Result>\n+pub fn replace_errors_with_variables<T>(t: &T) -> Canonical<T>\n where\n-    T: HasInterner<Interner = Interner> + Fold<Interner> + Clone,\n-    T::Result: HasInterner<Interner = Interner>,\n+    T: HasInterner<Interner = Interner> + TypeFoldable<Interner> + Clone,\n+    T: HasInterner<Interner = Interner>,\n {\n     use chalk_ir::{\n-        fold::{Folder, SuperFold},\n+        fold::{TypeFolder, TypeSuperFoldable},\n         Fallible,\n     };\n     struct ErrorReplacer {\n         vars: usize,\n     }\n-    impl Folder<Interner> for ErrorReplacer {\n+    impl TypeFolder<Interner> for ErrorReplacer {\n         type Error = NoSolution;\n \n-        fn as_dyn(&mut self) -> &mut dyn Folder<Interner, Error = Self::Error> {\n+        fn as_dyn(&mut self) -> &mut dyn TypeFolder<Interner, Error = Self::Error> {\n             self\n         }\n "}, {"sha": "f9747f3b34dbca8d4dd0d5f0ca22678dbb479cda", "filename": "crates/hir-ty/src/lower.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir-ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flower.rs?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -12,7 +12,9 @@ use std::{\n };\n \n use base_db::CrateId;\n-use chalk_ir::{cast::Cast, fold::Fold, fold::Shift, interner::HasInterner, Mutability, Safety};\n+use chalk_ir::{\n+    cast::Cast, fold::Shift, fold::TypeFoldable, interner::HasInterner, Mutability, Safety,\n+};\n \n use hir_def::{\n     adt::StructKind,\n@@ -1751,10 +1753,10 @@ pub(crate) fn const_or_path_to_chalk(\n \n /// This replaces any 'free' Bound vars in `s` (i.e. those with indices past\n /// num_vars_to_keep) by `TyKind::Unknown`.\n-fn fallback_bound_vars<T: Fold<Interner> + HasInterner<Interner = Interner>>(\n+fn fallback_bound_vars<T: TypeFoldable<Interner> + HasInterner<Interner = Interner>>(\n     s: T,\n     num_vars_to_keep: usize,\n-) -> T::Result {\n+) -> T {\n     crate::fold_free_vars(\n         s,\n         |bound, binders| {"}, {"sha": "8e6a2441b33117c4bf924b3c00d6093eec0709a1", "filename": "crates/hir/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fhir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -11,10 +11,10 @@ doctest = false\n \n [dependencies]\n rustc-hash = \"1.1.0\"\n-either = \"1.6.1\"\n+either = \"1.7.0\"\n arrayvec = \"0.7.2\"\n itertools = \"0.10.3\"\n-smallvec = \"1.8.0\"\n+smallvec = \"1.9.0\"\n once_cell = \"1.12.0\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }"}, {"sha": "bc3e9a3229af8971e505351fcefdbf76939f6a06", "filename": "crates/ide-assists/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fide-assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fide-assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -13,7 +13,7 @@ doctest = false\n cov-mark = \"2.0.0-pre.1\"\n \n itertools = \"0.10.3\"\n-either = \"1.6.1\"\n+either = \"1.7.0\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n syntax = { path = \"../syntax\", version = \"0.0.0\" }"}, {"sha": "adca75c2a1e9b5670f5de8e81bb10fc2471161c0", "filename": "crates/ide-completion/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fide-completion%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fide-completion%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -14,7 +14,7 @@ cov-mark = \"2.0.0-pre.1\"\n itertools = \"0.10.3\"\n \n once_cell = \"1.12.0\"\n-smallvec = \"1.8.0\"\n+smallvec = \"1.9.0\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n syntax = { path = \"../syntax\", version = \"0.0.0\" }"}, {"sha": "e3ed054a0e1299e90b939fa83472431dfd7ca27c", "filename": "crates/ide-db/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fide-db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fide-db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -16,10 +16,10 @@ rayon = \"1.5.3\"\n fst = { version = \"0.4.7\", default-features = false }\n rustc-hash = \"1.1.0\"\n once_cell = \"1.12.0\"\n-either = \"1.6.1\"\n+either = \"1.7.0\"\n itertools = \"0.10.3\"\n arrayvec = \"0.7.2\"\n-indexmap = \"1.8.2\"\n+indexmap = \"1.9.1\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n parser = { path = \"../parser\", version = \"0.0.0\" }"}, {"sha": "73093a23a9bd6ebb9b73eb4f96201c418b4970a0", "filename": "crates/ide-diagnostics/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fide-diagnostics%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fide-diagnostics%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -14,7 +14,7 @@ cov-mark = \"2.0.0-pre.1\"\n itertools = \"0.10.3\"\n \n \n-either = \"1.6.1\"\n+either = \"1.7.0\"\n \n profile = { path = \"../profile\", version = \"0.0.0\" }\n stdx = { path = \"../stdx\", version = \"0.0.0\" }"}, {"sha": "a0e4278c7b294a7b1b6be9f26d4d9301eea8d5b1", "filename": "crates/ide/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -11,8 +11,8 @@ doctest = false\n \n [dependencies]\n cov-mark = \"2.0.0-pre.1\"\n-crossbeam-channel = \"0.5.4\"\n-either = \"1.6.1\"\n+crossbeam-channel = \"0.5.5\"\n+either = \"1.7.0\"\n itertools = \"0.10.3\"\n tracing = \"0.1.35\"\n oorandom = \"11.1.3\""}, {"sha": "5ff3448a19ca788da78aff98bf718d9695933a38", "filename": "crates/mbe/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fmbe%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fmbe%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -12,7 +12,7 @@ doctest = false\n [dependencies]\n cov-mark = \"2.0.0-pre.1\"\n rustc-hash = \"1.1.0\"\n-smallvec = \"1.8.0\"\n+smallvec = \"1.9.0\"\n tracing = \"0.1.35\"\n \n syntax = { path = \"../syntax\", version = \"0.0.0\" }"}, {"sha": "85a1c13fe7d4490a128e03940ed42ef90a393a80", "filename": "crates/proc-macro-api/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fproc-macro-api%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fproc-macro-api%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-api%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -10,7 +10,7 @@ rust-version = \"1.57\"\n doctest = false\n \n [dependencies]\n-object = { version = \"0.28.4\", default-features = false, features = [\n+object = { version = \"0.29.0\", default-features = false, features = [\n     \"std\",\n     \"read_core\",\n     \"elf\","}, {"sha": "ec2d41170ac7bd42809144f4d3a02eb23c3cfe97", "filename": "crates/proc-macro-srv/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fproc-macro-srv%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fproc-macro-srv%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -10,7 +10,7 @@ rust-version = \"1.57\"\n doctest = false\n \n [dependencies]\n-object = { version = \"0.28.4\", default-features = false, features = [\n+object = { version = \"0.29.0\", default-features = false, features = [\n     \"std\",\n     \"read_core\",\n     \"elf\","}, {"sha": "684477191b2767cabecd620f201cbdc2d0d26a77", "filename": "crates/proc-macro-test/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fproc-macro-test%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fproc-macro-test%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-test%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -12,4 +12,4 @@ doctest = false\n [build-dependencies]\n proc-macro-test-impl = { path = \"imp\", version = \"0.0.0\" }\n toolchain = { path = \"../toolchain\", version = \"0.0.0\" }\n-cargo_metadata = \"0.14.2\"\n+cargo_metadata = \"0.15.0\""}, {"sha": "84b239b3e29241225881d62c0e764a949fda2f2c", "filename": "crates/project-model/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fproject-model%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fproject-model%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -12,7 +12,7 @@ doctest = false\n [dependencies]\n tracing = \"0.1.35\"\n rustc-hash = \"1.1.0\"\n-cargo_metadata = \"0.14.2\"\n+cargo_metadata = \"0.15.0\"\n semver = \"1.0.10\"\n serde = { version = \"1.0.137\", features = [\"derive\"] }\n serde_json = \"1.0.81\""}, {"sha": "597880c2ca214c62fde565e39643a6998ac5baf8", "filename": "crates/project-model/src/cargo_workspace.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fproject-model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fproject-model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fcargo_workspace.rs?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -318,10 +318,15 @@ impl CargoWorkspace {\n                 ..\n             } = meta_pkg;\n             let meta = from_value::<PackageMetadata>(metadata.clone()).unwrap_or_default();\n-            let edition = edition.parse::<Edition>().unwrap_or_else(|err| {\n-                tracing::error!(\"Failed to parse edition {}\", err);\n-                Edition::CURRENT\n-            });\n+            let edition = match edition {\n+                cargo_metadata::Edition::E2015 => Edition::Edition2015,\n+                cargo_metadata::Edition::E2018 => Edition::Edition2018,\n+                cargo_metadata::Edition::E2021 => Edition::Edition2021,\n+                _ => {\n+                    tracing::error!(\"Unsupported edition `{:?}`\", edition);\n+                    Edition::CURRENT\n+                }\n+            };\n             // We treat packages without source as \"local\" packages. That includes all members of\n             // the current workspace, as well as any path dependency outside the workspace.\n             let is_local = meta_pkg.source.is_none();"}, {"sha": "7e69bcbaf14a297dbf32ff35072850e9ab600e5a", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -19,7 +19,7 @@ path = \"src/bin/main.rs\"\n \n [dependencies]\n anyhow = \"1.0.57\"\n-crossbeam-channel = \"0.5.4\"\n+crossbeam-channel = \"0.5.5\"\n dissimilar = \"1.0.4\"\n itertools = \"0.10.3\"\n lsp-types = { version = \"0.93.0\", features = [\"proposed\"] }\n@@ -35,7 +35,7 @@ num_cpus = \"1.13.1\"\n mimalloc = { version = \"0.1.29\", default-features = false, optional = true }\n lsp-server = { version = \"0.6.0\", path = \"../../lib/lsp-server\" }\n tracing = \"0.1.35\"\n-tracing-subscriber = { version = \"0.3.11\", default-features = false, features = [\n+tracing-subscriber = { version = \"0.3.14\", default-features = false, features = [\n     \"env-filter\",\n     \"registry\",\n     \"fmt\","}, {"sha": "dbecfdd218567267ad94751ad261b695a0fa467e", "filename": "crates/syntax/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fsyntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fsyntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -17,7 +17,7 @@ rowan = \"0.15.5\"\n rustc_lexer = { version = \"725.0.0\", package = \"rustc-ap-rustc_lexer\" }\n rustc-hash = \"1.1.0\"\n once_cell = \"1.12.0\"\n-indexmap = \"1.8.2\"\n+indexmap = \"1.9.1\"\n smol_str = \"0.1.23\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n@@ -29,7 +29,7 @@ profile = { path = \"../profile\", version = \"0.0.0\" }\n rayon = \"1.5.3\"\n expect-test = \"1.3.0\"\n proc-macro2 = \"1.0.39\"\n-quote = \"1.0.18\"\n+quote = \"1.0.20\"\n ungrammar = \"1.16.1\"\n \n test-utils = { path = \"../test-utils\" }"}, {"sha": "9ee4415dcada091b4bd4ff50de7376964cef1423", "filename": "crates/vfs-notify/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fvfs-notify%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fvfs-notify%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs-notify%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -13,7 +13,7 @@ doctest = false\n tracing = \"0.1.35\"\n jod-thread = \"0.1.2\"\n walkdir = \"2.3.2\"\n-crossbeam-channel = \"0.5.4\"\n+crossbeam-channel = \"0.5.5\"\n notify = \"=5.0.0-pre.15\"\n \n vfs = { path = \"../vfs\", version = \"0.0.0\" }"}, {"sha": "c6377348784a46a2eea7de09d11968b8e6c079e2", "filename": "crates/vfs/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fvfs%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/crates%2Fvfs%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -14,4 +14,4 @@ rustc-hash = \"1.1.0\"\n fst = \"0.4.7\"\n \n paths = { path = \"../paths\", version = \"0.0.0\" }\n-indexmap = \"1.8.2\"\n+indexmap = \"1.9.1\""}, {"sha": "615837b3ff944cad05f3df45a7d23bd083b32608", "filename": "lib/lsp-server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b22326dad1914c22484ab6672de5cae94f7457/lib%2Flsp-server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/75b22326dad1914c22484ab6672de5cae94f7457/lib%2Flsp-server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Flsp-server%2FCargo.toml?ref=75b22326dad1914c22484ab6672de5cae94f7457", "patch": "@@ -10,7 +10,7 @@ edition = \"2021\"\n log = \"0.4.17\"\n serde_json = \"1.0.81\"\n serde = { version = \"1.0.137\", features = [\"derive\"] }\n-crossbeam-channel = \"0.5.4\"\n+crossbeam-channel = \"0.5.5\"\n \n [dev-dependencies]\n lsp-types = \"0.93.0\""}]}