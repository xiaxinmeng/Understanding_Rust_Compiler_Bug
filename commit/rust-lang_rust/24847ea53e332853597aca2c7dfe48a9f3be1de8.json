{"sha": "24847ea53e332853597aca2c7dfe48a9f3be1de8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0ODQ3ZWE1M2UzMzI4NTM1OTdhY2EyYzdkZmU0OGE5ZjNiZTFkZTg=", "commit": {"author": {"name": "JarredAllen", "email": "jarredallen73@gmail.com", "date": "2020-05-16T20:50:33Z"}, "committer": {"name": "JarredAllen", "email": "jarredallen73@gmail.com", "date": "2020-05-31T18:55:45Z"}, "message": "Attempted start at sort_by_key_reverse lint", "tree": {"sha": "4ae084f10d8fcc048175b0db485b0a4ef8f9db1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ae084f10d8fcc048175b0db485b0a4ef8f9db1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24847ea53e332853597aca2c7dfe48a9f3be1de8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24847ea53e332853597aca2c7dfe48a9f3be1de8", "html_url": "https://github.com/rust-lang/rust/commit/24847ea53e332853597aca2c7dfe48a9f3be1de8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24847ea53e332853597aca2c7dfe48a9f3be1de8/comments", "author": {"login": "JarredAllen", "id": 19656507, "node_id": "MDQ6VXNlcjE5NjU2NTA3", "avatar_url": "https://avatars.githubusercontent.com/u/19656507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarredAllen", "html_url": "https://github.com/JarredAllen", "followers_url": "https://api.github.com/users/JarredAllen/followers", "following_url": "https://api.github.com/users/JarredAllen/following{/other_user}", "gists_url": "https://api.github.com/users/JarredAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarredAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarredAllen/subscriptions", "organizations_url": "https://api.github.com/users/JarredAllen/orgs", "repos_url": "https://api.github.com/users/JarredAllen/repos", "events_url": "https://api.github.com/users/JarredAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/JarredAllen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JarredAllen", "id": 19656507, "node_id": "MDQ6VXNlcjE5NjU2NTA3", "avatar_url": "https://avatars.githubusercontent.com/u/19656507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarredAllen", "html_url": "https://github.com/JarredAllen", "followers_url": "https://api.github.com/users/JarredAllen/followers", "following_url": "https://api.github.com/users/JarredAllen/following{/other_user}", "gists_url": "https://api.github.com/users/JarredAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarredAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarredAllen/subscriptions", "organizations_url": "https://api.github.com/users/JarredAllen/orgs", "repos_url": "https://api.github.com/users/JarredAllen/repos", "events_url": "https://api.github.com/users/JarredAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/JarredAllen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e843515d9525b6389c3fc1bcfa6ae046c1351dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e843515d9525b6389c3fc1bcfa6ae046c1351dc", "html_url": "https://github.com/rust-lang/rust/commit/7e843515d9525b6389c3fc1bcfa6ae046c1351dc"}], "stats": {"total": 76, "additions": 70, "deletions": 6}, "files": [{"sha": "7d7097a81253e36d441b6e99132f6e500317ed82", "filename": "clippy_lints/src/sort_by_key_reverse.rs", "status": "modified", "additions": 67, "deletions": 4, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/24847ea53e332853597aca2c7dfe48a9f3be1de8/clippy_lints%2Fsrc%2Fsort_by_key_reverse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24847ea53e332853597aca2c7dfe48a9f3be1de8/clippy_lints%2Fsrc%2Fsort_by_key_reverse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsort_by_key_reverse.rs?ref=24847ea53e332853597aca2c7dfe48a9f3be1de8", "patch": "@@ -1,28 +1,91 @@\n+use crate::utils::{match_type, span_lint_and_sugg};\n+use crate::utils::paths;\n+use crate::utils::sugg::Sugg;\n+use if_chain::if_chain;\n+use rustc_errors::Applicability;\n use rustc_lint::{LateLintPass, LateContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_hir::*;\n \n declare_clippy_lint! {\n     /// **What it does:**\n+    /// Detects when people use `Vec::sort_by` and pass in a function\n+    /// which compares the second argument to the first.\n     ///\n     /// **Why is this bad?**\n+    /// It is more clear to use `Vec::sort_by_key` and `std::cmp::Reverse`\n     ///\n     /// **Known problems:** None.\n     ///\n     /// **Example:**\n     ///\n     /// ```rust\n-    /// // example code where clippy issues a warning\n+    /// vec.sort_by(|a, b| b.foo().cmp(&a.foo()));\n     /// ```\n     /// Use instead:\n     /// ```rust\n-    /// // example code which does not raise clippy warning\n+    /// vec.sort_by_key(|e| Reverse(e.foo()));\n     /// ```\n     pub SORT_BY_KEY_REVERSE,\n     complexity,\n-    \"default lint description\"\n+    \"Use of `Vec::sort_by` when `Vec::sort_by_key` would be clearer\"\n }\n \n declare_lint_pass!(SortByKeyReverse => [SORT_BY_KEY_REVERSE]);\n \n-impl LateLintPass<'_, '_> for SortByKeyReverse {}\n+struct LintTrigger {\n+    vec_name: String,\n+    closure_arg: String,\n+    closure_reverse_body: String,\n+    unstable: bool,\n+}\n+\n+fn detect_lint(cx: &LateContext<'_, '_>, expr: &Expr<'_>) -> Option<LintTrigger> {\n+    if_chain! {\n+        if let ExprKind::MethodCall(name_ident, _, args) = &expr.kind;\n+        if let name = name_ident.ident.name.to_ident_string();\n+        if name == \"sort_by\" || name == \"sort_unstable_by\";\n+        if let [vec, Expr { kind: ExprKind::Closure(_, closure_decl, closure_body_id, _, _), .. }] = args;\n+        if closure_decl.inputs.len() == 2;\n+        if match_type(cx, &cx.tables.expr_ty(vec), &paths::VEC);\n+        then {\n+            let vec_name = Sugg::hir(cx, &args[0], \"..\").to_string();\n+            let unstable = name == \"sort_unstable_by\";\n+            Some(LintTrigger { vec_name, unstable, closure_arg: \"e\".to_string(), closure_reverse_body: \"e\".to_string() })\n+        } else {\n+            None\n+        }\n+    }\n+}\n+\n+impl LateLintPass<'_, '_> for SortByKeyReverse {\n+    fn check_expr(&mut self, cx: &LateContext<'_, '_>, expr: &Expr<'_>) {\n+        println!(\"{:?}\", expr);\n+        span_lint_and_sugg(\n+            cx,\n+            SORT_BY_KEY_REVERSE,\n+            expr.span,\n+            \"use Vec::sort_by_key here instead\",\n+            \"try\",\n+            String::from(\"being a better person\"),\n+            Applicability::MachineApplicable,\n+        );\n+        if let Some(trigger) = detect_lint(cx, expr) {\n+            span_lint_and_sugg(\n+                cx,\n+                SORT_BY_KEY_REVERSE,\n+                expr.span,\n+                \"use Vec::sort_by_key here instead\",\n+                \"try\",\n+                format!(\n+                    \"{}.sort{}_by_key(|{}| Reverse({}))\",\n+                    trigger.vec_name,\n+                    if trigger.unstable { \"_unstable\" } else { \"\" },\n+                    trigger.closure_arg,\n+                    trigger.closure_reverse_body,\n+                ),\n+                Applicability::MachineApplicable,\n+            );\n+        }\n+    }\n+}"}, {"sha": "b5d9ef0110e25e83448617f7ca883cac32c8a8d4", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24847ea53e332853597aca2c7dfe48a9f3be1de8/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24847ea53e332853597aca2c7dfe48a9f3be1de8/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=24847ea53e332853597aca2c7dfe48a9f3be1de8", "patch": "@@ -1987,7 +1987,7 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n     Lint {\n         name: \"sort_by_key_reverse\",\n         group: \"complexity\",\n-        desc: \"default lint description\",\n+        desc: \"Use of `Vec::sort_by` when `Vec::sort_by_key` would be clearer\",\n         deprecation: None,\n         module: \"sort_by_key_reverse\",\n     },"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/sort_by_key_reverse.fixed", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/24847ea53e332853597aca2c7dfe48a9f3be1de8/tests%2Fui%2Fsort_by_key_reverse.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/24847ea53e332853597aca2c7dfe48a9f3be1de8/tests%2Fui%2Fsort_by_key_reverse.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsort_by_key_reverse.fixed?ref=24847ea53e332853597aca2c7dfe48a9f3be1de8"}, {"sha": "c0350f243c7bef9baecf8e1c61de23cfc3de4c34", "filename": "tests/ui/sort_by_key_reverse.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/24847ea53e332853597aca2c7dfe48a9f3be1de8/tests%2Fui%2Fsort_by_key_reverse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24847ea53e332853597aca2c7dfe48a9f3be1de8/tests%2Fui%2Fsort_by_key_reverse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsort_by_key_reverse.rs?ref=24847ea53e332853597aca2c7dfe48a9f3be1de8", "patch": "@@ -1,5 +1,6 @@\n #![warn(clippy::sort_by_key_reverse)]\n \n fn main() {\n-    // test code goes here\n+    let mut vec = vec![3, 6, 1, 2, 5];\n+    vec.sort_by(|a, b| b.cmp(a));\n }"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/sort_by_key_reverse.stderr", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/24847ea53e332853597aca2c7dfe48a9f3be1de8/tests%2Fui%2Fsort_by_key_reverse.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24847ea53e332853597aca2c7dfe48a9f3be1de8/tests%2Fui%2Fsort_by_key_reverse.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsort_by_key_reverse.stderr?ref=24847ea53e332853597aca2c7dfe48a9f3be1de8"}]}