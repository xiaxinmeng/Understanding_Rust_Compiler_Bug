{"sha": "7270fadfccb8f7b767bf45bda106a55b6a874c03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNzBmYWRmY2NiOGY3Yjc2N2JmNDViZGExMDZhNTViNmE4NzRjMDM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-19T21:58:21Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-19T21:58:21Z"}, "message": "core::rt: Rename Closeable to Close, Seekable to Seek, blocking to native", "tree": {"sha": "a2a0401c8d01752736ee4c2f212b964b03c1bd02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2a0401c8d01752736ee4c2f212b964b03c1bd02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7270fadfccb8f7b767bf45bda106a55b6a874c03", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7270fadfccb8f7b767bf45bda106a55b6a874c03", "html_url": "https://github.com/rust-lang/rust/commit/7270fadfccb8f7b767bf45bda106a55b6a874c03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7270fadfccb8f7b767bf45bda106a55b6a874c03/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e782e1f37183b7ad7731cf0fbb474b55d199a9d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e782e1f37183b7ad7731cf0fbb474b55d199a9d5", "html_url": "https://github.com/rust-lang/rust/commit/e782e1f37183b7ad7731cf0fbb474b55d199a9d5"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "e041183b5845250a62522495b6f0a2f9d25bfe63", "filename": "src/libcore/rt/io/file.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Ffile.rs?ref=7270fadfccb8f7b767bf45bda106a55b6a874c03", "patch": "@@ -10,7 +10,7 @@\n \n use prelude::*;\n use super::misc::PathLike;\n-use super::{Reader, Writer, Seekable, Closeable};\n+use super::{Reader, Writer, Seek, Close};\n use super::{IoError, SeekStyle};\n \n /// Open a file with the default FileMode and FileAccess\n@@ -67,13 +67,13 @@ impl Writer for FileStream {\n     fn flush(&mut self) { fail!() }\n }\n \n-impl Seekable for FileStream {\n+impl Seek for FileStream {\n     fn tell(&self) -> u64 { fail!() }\n \n     fn seek(&mut self, _pos: i64, _style: SeekStyle) { fail!() }\n }\n \n-impl Closeable for FileStream {\n+impl Close for FileStream {\n     fn close(&mut self) { fail!() }\n }\n "}, {"sha": "600968a3c710544f9b225b5b16737032a3e014be", "filename": "src/libcore/rt/io/mem.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fmem.rs?ref=7270fadfccb8f7b767bf45bda106a55b6a874c03", "patch": "@@ -34,7 +34,7 @@ impl Writer for MemWriter {\n     fn flush(&mut self) { /* no-op */ }\n }\n \n-impl Seekable for MemWriter {\n+impl Seek for MemWriter {\n     fn tell(&self) -> u64 { fail!() }\n \n     fn seek(&mut self, _pos: i64, _style: SeekStyle) { fail!() }\n@@ -82,7 +82,7 @@ impl Reader for MemReader {\n     fn eof(&mut self) -> bool { fail!() }\n }\n \n-impl Seekable for MemReader {\n+impl Seek for MemReader {\n     fn tell(&self) -> u64 { fail!() }\n \n     fn seek(&mut self, _pos: i64, _style: SeekStyle) { fail!() }\n@@ -131,7 +131,7 @@ impl<'self> Writer for BufWriter<'self> {\n     fn flush(&mut self) { fail!() }\n }\n \n-impl<'self> Seekable for BufWriter<'self> {\n+impl<'self> Seek for BufWriter<'self> {\n     fn tell(&self) -> u64 { fail!() }\n \n     fn seek(&mut self, _pos: i64, _style: SeekStyle) { fail!() }\n@@ -159,7 +159,7 @@ impl<'self> Reader for BufReader<'self> {\n     fn eof(&mut self) -> bool { fail!() }\n }\n \n-impl<'self> Seekable for BufReader<'self> {\n+impl<'self> Seek for BufReader<'self> {\n     fn tell(&self) -> u64 { fail!() }\n \n     fn seek(&mut self, _pos: i64, _style: SeekStyle) { fail!() }"}, {"sha": "b035532144c44dfc4b8423886e3325eea51f74a4", "filename": "src/libcore/rt/io/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fmod.rs?ref=7270fadfccb8f7b767bf45bda106a55b6a874c03", "patch": "@@ -146,7 +146,7 @@ mod util;\n mod misc;\n \n /// Thread-blocking implementations\n-pub mod blocking {\n+pub mod native {\n     /// Posix file I/O\n     pub mod file;\n     /// # XXX - implement this\n@@ -233,12 +233,12 @@ pub trait Writer {\n ///\n /// Any further operations performed on a closed resource will raise\n /// on `io_error`\n-pub trait Closeable {\n+pub trait Close {\n     /// Close the I/O resource\n     fn close(&mut self);\n }\n \n-pub trait Stream: Reader + Writer + Closeable { }\n+pub trait Stream: Reader + Writer + Close { }\n \n pub enum SeekStyle {\n     /// Seek from the beginning of the stream\n@@ -251,7 +251,7 @@ pub enum SeekStyle {\n \n /// # XXX\n /// * Are `u64` and `i64` the right choices?\n-pub trait Seekable {\n+pub trait Seek {\n     fn tell(&self) -> u64;\n     fn seek(&mut self, pos: i64, style: SeekStyle);\n }"}, {"sha": "e203df815f2f4f6f75b52011bd2862fe05559bdc", "filename": "src/libcore/rt/io/native/file.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fnative%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fnative%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fnative%2Ffile.rs?ref=7270fadfccb8f7b767bf45bda106a55b6a874c03", "patch": "@@ -40,11 +40,11 @@ impl Writer for FileDesc {\n     fn flush(&mut self) { fail!() }\n }\n \n-impl Closeable for FileDesc {\n+impl Close for FileDesc {\n     fn close(&mut self) { fail!() }\n }\n \n-impl Seekable for FileDesc {\n+impl Seek for FileDesc {\n     fn tell(&self) -> u64 { fail!() }\n \n     fn seek(&mut self, _pos: i64, _style: SeekStyle) { fail!() }\n@@ -72,11 +72,11 @@ impl Writer for CFile {\n     fn flush(&mut self) { fail!() }\n }\n \n-impl Closeable for CFile {\n+impl Close for CFile {\n     fn close(&mut self) { fail!() }\n }\n \n-impl Seekable for CFile {\n+impl Seek for CFile {\n     fn tell(&self) -> u64 { fail!() }\n     fn seek(&mut self, _pos: i64, _style: SeekStyle) { fail!() }\n }", "previous_filename": "src/libcore/rt/io/blocking/file.rs"}, {"sha": "e3f71dca8c8274224471cdc50153b0ac77a83816", "filename": "src/libcore/rt/io/net/tcp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fnet%2Ftcp.rs?ref=7270fadfccb8f7b767bf45bda106a55b6a874c03", "patch": "@@ -33,7 +33,7 @@ impl Writer for TcpStream {\n     fn flush(&mut self) { fail!() }\n }\n \n-impl Closeable for TcpStream {\n+impl Close for TcpStream {\n     fn close(&mut self) { fail!() }\n }\n "}, {"sha": "f76bb58a45eb9a00d95a6bd32a4bf8a950ceec77", "filename": "src/libcore/rt/io/net/udp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fnet%2Fudp.rs?ref=7270fadfccb8f7b767bf45bda106a55b6a874c03", "patch": "@@ -33,7 +33,7 @@ impl Writer for UdpStream {\n     fn flush(&mut self) { fail!() }\n }\n \n-impl Closeable for UdpStream {\n+impl Close for UdpStream {\n     fn close(&mut self) { fail!() }\n }\n "}, {"sha": "35eabe21b2a6b2632508e41502bb25c15be0e66f", "filename": "src/libcore/rt/io/net/unix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fnet%2Funix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fnet%2Funix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fnet%2Funix.rs?ref=7270fadfccb8f7b767bf45bda106a55b6a874c03", "patch": "@@ -33,7 +33,7 @@ impl Writer for UnixStream {\n     fn flush(&mut self) { fail!() }\n }\n \n-impl Closeable for UnixStream {\n+impl Close for UnixStream {\n     fn close(&mut self) { fail!() }\n }\n "}, {"sha": "21989f5e873d0202a2d9ae66dce920c7c42b857b", "filename": "src/libcore/rt/io/stdio.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7270fadfccb8f7b767bf45bda106a55b6a874c03/src%2Flibcore%2Frt%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fstdio.rs?ref=7270fadfccb8f7b767bf45bda106a55b6a874c03", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use prelude::*;\n-use super::{Reader, Writer, Closeable};\n+use super::{Reader, Writer, Close};\n \n pub fn stdin() -> StdReader { fail!() }\n \n@@ -39,7 +39,7 @@ impl Reader for StdReader {\n     fn eof(&mut self) -> bool { fail!() }\n }\n \n-impl Closeable for StdReader {\n+impl Close for StdReader {\n     fn close(&mut self) { fail!() }\n }\n \n@@ -55,6 +55,6 @@ impl Writer for StdWriter {\n     fn flush(&mut self) { fail!() }\n }\n \n-impl Closeable for StdWriter {\n+impl Close for StdWriter {\n     fn close(&mut self) { fail!() }\n }"}]}