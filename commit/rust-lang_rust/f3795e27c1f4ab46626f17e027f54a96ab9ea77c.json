{"sha": "f3795e27c1f4ab46626f17e027f54a96ab9ea77c", "node_id": "C_kwDOAAsO6NoAKGYzNzk1ZTI3YzFmNGFiNDY2MjZmMTdlMDI3ZjU0YTk2YWI5ZWE3N2M", "commit": {"author": {"name": "Ilya Yanok", "email": "ilya.yanok@gmail.com", "date": "2021-10-23T09:40:46Z"}, "committer": {"name": "Ilya Yanok", "email": "ilya.yanok@gmail.com", "date": "2021-10-24T18:12:22Z"}, "message": "Fix and extend ControlFlow `traverse_inorder` example\n\n1. The existing example compiles on its own, but any usage fails\n   to be monomorphised and so doesn't compile. Fix that by using\n   a mutable reference as an input argument.\n2. Added an example usage of `traverse_inorder` showing how we\n   can terminate the traversal early.\n\nFixes #90063", "tree": {"sha": "44aa0a041758aeaf2ac7cf2d2d93f1fd342d9307", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44aa0a041758aeaf2ac7cf2d2d93f1fd342d9307"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3795e27c1f4ab46626f17e027f54a96ab9ea77c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3795e27c1f4ab46626f17e027f54a96ab9ea77c", "html_url": "https://github.com/rust-lang/rust/commit/f3795e27c1f4ab46626f17e027f54a96ab9ea77c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3795e27c1f4ab46626f17e027f54a96ab9ea77c/comments", "author": {"login": "yanok", "id": 468850, "node_id": "MDQ6VXNlcjQ2ODg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/468850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanok", "html_url": "https://github.com/yanok", "followers_url": "https://api.github.com/users/yanok/followers", "following_url": "https://api.github.com/users/yanok/following{/other_user}", "gists_url": "https://api.github.com/users/yanok/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanok/subscriptions", "organizations_url": "https://api.github.com/users/yanok/orgs", "repos_url": "https://api.github.com/users/yanok/repos", "events_url": "https://api.github.com/users/yanok/events{/privacy}", "received_events_url": "https://api.github.com/users/yanok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yanok", "id": 468850, "node_id": "MDQ6VXNlcjQ2ODg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/468850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanok", "html_url": "https://github.com/yanok", "followers_url": "https://api.github.com/users/yanok/followers", "following_url": "https://api.github.com/users/yanok/following{/other_user}", "gists_url": "https://api.github.com/users/yanok/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanok/subscriptions", "organizations_url": "https://api.github.com/users/yanok/orgs", "repos_url": "https://api.github.com/users/yanok/repos", "events_url": "https://api.github.com/users/yanok/events{/privacy}", "received_events_url": "https://api.github.com/users/yanok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "508fadab16ec36c57daa8f0361db60848d31c0f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/508fadab16ec36c57daa8f0361db60848d31c0f7", "html_url": "https://github.com/rust-lang/rust/commit/508fadab16ec36c57daa8f0361db60848d31c0f7"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "776cea2ef791fbb128566a06cce9f2a048dcc8a9", "filename": "library/core/src/ops/control_flow.rs", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f3795e27c1f4ab46626f17e027f54a96ab9ea77c/library%2Fcore%2Fsrc%2Fops%2Fcontrol_flow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3795e27c1f4ab46626f17e027f54a96ab9ea77c/library%2Fcore%2Fsrc%2Fops%2Fcontrol_flow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Fcontrol_flow.rs?ref=f3795e27c1f4ab46626f17e027f54a96ab9ea77c", "patch": "@@ -24,7 +24,7 @@ use crate::{convert, ops};\n /// ```\n ///\n /// A basic tree traversal:\n-/// ```no_run\n+/// ```\n /// use std::ops::ControlFlow;\n ///\n /// pub struct TreeNode<T> {\n@@ -34,7 +34,7 @@ use crate::{convert, ops};\n /// }\n ///\n /// impl<T> TreeNode<T> {\n-///     pub fn traverse_inorder<B>(&self, f: &impl Fn(&T) -> ControlFlow<B>) -> ControlFlow<B> {\n+///     pub fn traverse_inorder<B>(&self, f: &mut impl FnMut(&T) -> ControlFlow<B>) -> ControlFlow<B> {\n ///         if let Some(left) = &self.left {\n ///             left.traverse_inorder(f)?;\n ///         }\n@@ -44,30 +44,32 @@ use crate::{convert, ops};\n ///         }\n ///         ControlFlow::Continue(())\n ///     }\n+///     fn leaf(value: T) -> Option<Box<TreeNode<T>>> {\n+///         Some(Box::new(Self { value, left: None, right: None }))\n+///     }\n /// }\n ///\n /// let node = TreeNode {\n ///     value: 0,\n-///     left: Some(Box::new(TreeNode {\n-///         value: 1,\n-///         left: None,\n-///         right: None\n-///     })),\n+///     left: TreeNode::leaf(1),\n ///     right: Some(Box::new(TreeNode {\n-///         value: 2,\n-///         left: None,\n-///         right: None\n+///         value: -1,\n+///         left: TreeNode::leaf(5),\n+///         right: TreeNode::leaf(2),\n ///     }))\n /// };\n+/// let mut sum = 0;\n ///\n-/// node.traverse_inorder(& |val| {\n-///     println!(\"{}\", val);\n-///     if *val <= 0 {\n-///         ControlFlow::Break(())\n+/// let res = node.traverse_inorder(&mut |val| {\n+///     if *val < 0 {\n+///         ControlFlow::Break(*val)\n ///     } else {\n+///         sum += *val;\n ///         ControlFlow::Continue(())\n ///     }\n /// });\n+/// assert_eq!(res, ControlFlow::Break(-1));\n+/// assert_eq!(sum, 6);\n /// ```\n #[stable(feature = \"control_flow_enum_type\", since = \"1.55.0\")]\n #[derive(Debug, Clone, Copy, PartialEq)]"}]}