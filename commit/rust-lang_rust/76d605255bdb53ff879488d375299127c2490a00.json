{"sha": "76d605255bdb53ff879488d375299127c2490a00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZDYwNTI1NWJkYjUzZmY4Nzk0ODhkMzc1Mjk5MTI3YzI0OTBhMDA=", "commit": {"author": {"name": "Paul Woolcock", "email": "paul@woolcock.us", "date": "2017-05-25T15:36:18Z"}, "committer": {"name": "Paul Woolcock", "email": "paul@woolcock.us", "date": "2017-06-24T10:42:29Z"}, "message": "Shorten some lines so this can pass the tidy checks", "tree": {"sha": "3b3de153176c8250a1f94087d171f0ff5db1f12a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b3de153176c8250a1f94087d171f0ff5db1f12a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76d605255bdb53ff879488d375299127c2490a00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76d605255bdb53ff879488d375299127c2490a00", "html_url": "https://github.com/rust-lang/rust/commit/76d605255bdb53ff879488d375299127c2490a00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76d605255bdb53ff879488d375299127c2490a00/comments", "author": null, "committer": null, "parents": [{"sha": "60dd83ea85853f6a31f8998eb80ce47446fdb785", "url": "https://api.github.com/repos/rust-lang/rust/commits/60dd83ea85853f6a31f8998eb80ce47446fdb785", "html_url": "https://github.com/rust-lang/rust/commit/60dd83ea85853f6a31f8998eb80ce47446fdb785"}], "stats": {"total": 52, "additions": 29, "deletions": 23}, "files": [{"sha": "03da451fd9a0a2477fe9226b04f53a23ff08ed2b", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/76d605255bdb53ff879488d375299127c2490a00/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d605255bdb53ff879488d375299127c2490a00/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=76d605255bdb53ff879488d375299127c2490a00", "patch": "@@ -1135,23 +1135,27 @@ mod tests {\n             })\n         }\n \n+        fn v() -> Vec<String> {\n+            Vec::new()\n+        }\n+\n         // marker                | should_panic| no_run| ignore| rust | test_harness| compile_fail\n         //                       | allow_fail | error_codes\n-        t(\"\",                      false,        false,  false,  true,  false, false, false, Vec::new());\n-        t(\"rust\",                  false,        false,  false,  true,  false, false, false, Vec::new());\n-        t(\"sh\",                    false,        false,  false,  false, false, false, false, Vec::new());\n-        t(\"ignore\",                false,        false,  true,   true,  false, false, false, Vec::new());\n-        t(\"should_panic\",          true,         false,  false,  true,  false, false, false, Vec::new());\n-        t(\"no_run\",                false,        true,   false,  true,  false, false, false, Vec::new());\n-        t(\"test_harness\",          false,        false,  false,  true,  true,  false, false, Vec::new());\n-        t(\"compile_fail\",          false,        true,   false,  true,  false, true,  false, Vec::new());\n-        t(\"allow_fail\",            false,        false,  false,  true,  false, false, true, Vec::new());\n-        t(\"{.no_run .example}\",    false,        true,   false,  true,  false, false, false, Vec::new());\n-        t(\"{.sh .should_panic}\",   true,         false,  false,  false, false, false, false, Vec::new());\n-        t(\"{.example .rust}\",      false,        false,  false,  true,  false, false, false, Vec::new());\n-        t(\"{.test_harness .rust}\", false,        false,  false,  true,  true,  false, false, Vec::new());\n-        t(\"text, no_run\",          false,        true,   false,  false, false, false, false, Vec::new());\n-        t(\"text,no_run\",           false,        true,   false,  false, false, false, false, Vec::new());\n+        t(\"\",                      false,        false,  false,  true,  false, false, false, v());\n+        t(\"rust\",                  false,        false,  false,  true,  false, false, false, v());\n+        t(\"sh\",                    false,        false,  false,  false, false, false, false, v());\n+        t(\"ignore\",                false,        false,  true,   true,  false, false, false, v());\n+        t(\"should_panic\",          true,         false,  false,  true,  false, false, false, v());\n+        t(\"no_run\",                false,        true,   false,  true,  false, false, false, v());\n+        t(\"test_harness\",          false,        false,  false,  true,  true,  false, false, v());\n+        t(\"compile_fail\",          false,        true,   false,  true,  false, true,  false, v());\n+        t(\"allow_fail\",            false,        false,  false,  true,  false, false, true,  v());\n+        t(\"{.no_run .example}\",    false,        true,   false,  true,  false, false, false, v());\n+        t(\"{.sh .should_panic}\",   true,         false,  false,  false, false, false, false, v());\n+        t(\"{.example .rust}\",      false,        false,  false,  true,  false, false, false, v());\n+        t(\"{.test_harness .rust}\", false,        false,  false,  true,  true,  false, false, v());\n+        t(\"text, no_run\",          false,        true,   false,  false, false, false, false, v());\n+        t(\"text,no_run\",           false,        true,   false,  false, false, false, false, v());\n     }\n \n     #[test]"}, {"sha": "7a09883a72ea846a683bf6bb7c22eb8244884849", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/76d605255bdb53ff879488d375299127c2490a00/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d605255bdb53ff879488d375299127c2490a00/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=76d605255bdb53ff879488d375299127c2490a00", "patch": "@@ -771,7 +771,8 @@ impl<T: Write> ConsoleTestState<T> {\n     }\n \n     pub fn write_run_finish(&mut self) -> io::Result<bool> {\n-        assert!(self.passed + self.failed + self.ignored + self.measured + self.allowed_fail == self.total);\n+        assert!(self.passed + self.failed + self.ignored + self.measured +\n+                    self.allowed_fail == self.total);\n \n         if self.options.display_output {\n             self.write_outputs()?;\n@@ -788,13 +789,14 @@ impl<T: Write> ConsoleTestState<T> {\n         } else {\n             self.write_pretty(\"FAILED\", term::color::RED)?;\n         }\n-        let s = format!(\". {} passed; {} failed; {} allowed to fail; {} ignored; {} measured; {} filtered out\\n\\n\",\n-                        self.passed,\n-                        self.failed,\n-                        self.allowed_fail,\n-                        self.ignored,\n-                        self.measured,\n-                        self.filtered_out);\n+        let s = format!(\n+                \". {} passed; {} failed ({} allowed); {} ignored; {} measured; {} filtered out\\n\\n\",\n+                self.passed,\n+                self.failed,\n+                self.allowed_fail,\n+                self.ignored,\n+                self.measured,\n+                self.filtered_out);\n         self.write_plain(&s)?;\n         return Ok(success);\n     }"}]}