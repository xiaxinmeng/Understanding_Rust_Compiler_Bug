{"sha": "ea46e7a47e67c5ca9c147380d288d0c76451b5c2", "node_id": "C_kwDOAAsO6NoAKGVhNDZlN2E0N2U2N2M1Y2E5YzE0NzM4MGQyODhkMGM3NjQ1MWI1YzI", "commit": {"author": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2022-07-08T10:20:05Z"}, "committer": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2022-07-08T10:20:05Z"}, "message": "Check if E0530 is `tuple variant` or `tuple struct` to emit suggestion", "tree": {"sha": "33232c0afaa37988427a6d05e5cf16ae60bb2cde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33232c0afaa37988427a6d05e5cf16ae60bb2cde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea46e7a47e67c5ca9c147380d288d0c76451b5c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea46e7a47e67c5ca9c147380d288d0c76451b5c2", "html_url": "https://github.com/rust-lang/rust/commit/ea46e7a47e67c5ca9c147380d288d0c76451b5c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea46e7a47e67c5ca9c147380d288d0c76451b5c2/comments", "author": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51504dbf01aa7cebe99cd0527f908d4d8ccae1a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/51504dbf01aa7cebe99cd0527f908d4d8ccae1a5", "html_url": "https://github.com/rust-lang/rust/commit/51504dbf01aa7cebe99cd0527f908d4d8ccae1a5"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "7a5640b5cb68360e0a797a898b347e1e00446bde", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ea46e7a47e67c5ca9c147380d288d0c76451b5c2/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea46e7a47e67c5ca9c147380d288d0c76451b5c2/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=ea46e7a47e67c5ca9c147380d288d0c76451b5c2", "patch": "@@ -900,9 +900,10 @@ impl<'a> Resolver<'a> {\n                 name,\n                 participle,\n                 article,\n-                shadowed_binding_descr,\n+                shadowed_binding,\n                 shadowed_binding_span,\n             } => {\n+                let shadowed_binding_descr = shadowed_binding.descr();\n                 let mut err = struct_span_err!(\n                     self.session,\n                     span,\n@@ -915,13 +916,18 @@ impl<'a> Resolver<'a> {\n                     span,\n                     format!(\"cannot be named the same as {} {}\", article, shadowed_binding_descr),\n                 );\n-                err.span_suggestion(\n-                    span,\n-                    \"try specify the pattern arguments\",\n-                    format!(\"{}(..)\", name),\n-                    Applicability::Unspecified,\n-                )\n-                .emit();\n+                match shadowed_binding {\n+                    Res::Def(DefKind::Ctor(CtorOf::Variant | CtorOf::Struct, CtorKind::Fn), _) => {\n+                        err.span_suggestion(\n+                            span,\n+                            \"try specify the pattern arguments\",\n+                            format!(\"{}(..)\", name),\n+                            Applicability::Unspecified,\n+                        )\n+                        .emit();\n+                    }\n+                    _ => (),\n+                }\n                 let msg =\n                     format!(\"the {} `{}` is {} here\", shadowed_binding_descr, name, participle);\n                 err.span_label(shadowed_binding_span, msg);"}, {"sha": "68d4db901942f0130b22116d45cf00d5aebedc48", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea46e7a47e67c5ca9c147380d288d0c76451b5c2/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea46e7a47e67c5ca9c147380d288d0c76451b5c2/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=ea46e7a47e67c5ca9c147380d288d0c76451b5c2", "patch": "@@ -2849,7 +2849,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                         name: ident.name,\n                         participle: if binding.is_import() { \"imported\" } else { \"defined\" },\n                         article: binding.res().article(),\n-                        shadowed_binding_descr: binding.res().descr(),\n+                        shadowed_binding: binding.res(),\n                         shadowed_binding_span: binding.span,\n                     },\n                 );\n@@ -2865,7 +2865,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                         name: ident.name,\n                         participle: \"defined\",\n                         article: res.article(),\n-                        shadowed_binding_descr: res.descr(),\n+                        shadowed_binding: res,\n                         shadowed_binding_span: self.r.opt_span(def_id).expect(\"const parameter defined outside of local crate\"),\n                     }\n                 );"}, {"sha": "e7fa9e4e7d9726275669623892051b4a76bea3bd", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea46e7a47e67c5ca9c147380d288d0c76451b5c2/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea46e7a47e67c5ca9c147380d288d0c76451b5c2/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=ea46e7a47e67c5ca9c147380d288d0c76451b5c2", "patch": "@@ -234,7 +234,7 @@ enum ResolutionError<'a> {\n         name: Symbol,\n         participle: &'static str,\n         article: &'static str,\n-        shadowed_binding_descr: &'static str,\n+        shadowed_binding: Res,\n         shadowed_binding_span: Span,\n     },\n     /// Error E0128: generic parameters with a default cannot use forward-declared identifiers."}]}