{"sha": "1eb300ede104d8da439d308dd3193f4448ed442b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYjMwMGVkZTEwNGQ4ZGE0MzlkMzA4ZGQzMTkzZjQ0NDhlZDQ0MmI=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-01T16:59:00Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-04T10:11:59Z"}, "message": "Unaligned reads are UB in Rust irrelevant on which platform we are", "tree": {"sha": "54e230b9dbd748a3c2bca8287f34f88ec02e9dd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54e230b9dbd748a3c2bca8287f34f88ec02e9dd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1eb300ede104d8da439d308dd3193f4448ed442b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb300ede104d8da439d308dd3193f4448ed442b", "html_url": "https://github.com/rust-lang/rust/commit/1eb300ede104d8da439d308dd3193f4448ed442b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1eb300ede104d8da439d308dd3193f4448ed442b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5258e6143f9663d9bb0175bd3277602c6f2b8ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5258e6143f9663d9bb0175bd3277602c6f2b8ad", "html_url": "https://github.com/rust-lang/rust/commit/e5258e6143f9663d9bb0175bd3277602c6f2b8ad"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "bdb6e4e966067a3f62956e2b12eb504506158a7b", "filename": "compiler/rustc_middle/src/ty/consts/int.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1eb300ede104d8da439d308dd3193f4448ed442b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb300ede104d8da439d308dd3193f4448ed442b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs?ref=1eb300ede104d8da439d308dd3193f4448ed442b", "patch": "@@ -133,7 +133,7 @@ impl<CTX> crate::ty::HashStable<CTX> for ScalarInt {\n         // Using a block `{self.data}` here to force a copy instead of using `self.data`\n         // directly, because `hash_stable` takes `&self` and would thus borrow `self.data`.\n         // Since `Self` is a packed struct, that would create a possibly unaligned reference,\n-        // which is UB on a lot of platforms.\n+        // which is UB.\n         { self.data }.hash_stable(hcx, hasher);\n         self.size.hash_stable(hcx, hasher);\n     }\n@@ -174,7 +174,7 @@ impl ScalarInt {\n         // directly, because `assert_eq` takes references to its arguments and formatting\n         // arguments and would thus borrow `self.data`. Since `Self`\n         // is a packed struct, that would create a possibly unaligned reference, which\n-        // is UB on a lot of platforms.\n+        // is UB.\n         debug_assert_eq!(\n             truncate(self.data, self.size()),\n             { self.data },\n@@ -348,7 +348,7 @@ impl fmt::LowerHex for ScalarInt {\n         // directly, because `write!` takes references to its formatting arguments and\n         // would thus borrow `self.data`. Since `Self`\n         // is a packed struct, that would create a possibly unaligned reference, which\n-        // is UB on a lot of platforms.\n+        // is UB.\n         write!(f, \"{:01$x}\", { self.data }, self.size as usize * 2)\n     }\n }\n@@ -362,7 +362,7 @@ impl fmt::UpperHex for ScalarInt {\n         // directly, because `write!` takes references to its formatting arguments and\n         // would thus borrow `self.data`. Since `Self`\n         // is a packed struct, that would create a possibly unaligned reference, which\n-        // is UB on a lot of platforms.\n+        // is UB.\n         write!(f, \"{:01$X}\", { self.data }, self.size as usize * 2)\n     }\n }"}]}