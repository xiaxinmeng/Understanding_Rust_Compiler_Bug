{"sha": "35209cb9ec1ed743dfbee9854d6a53500e6bf0ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MjA5Y2I5ZWMxZWQ3NDNkZmJlZTk4NTRkNmE1MzUwMGU2YmYwZmY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-12-12T00:04:35Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-12-12T00:04:58Z"}, "message": "fix long line, r=tidypolice.", "tree": {"sha": "a310848673762d85937f1b36eac34edcaa4e4e3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a310848673762d85937f1b36eac34edcaa4e4e3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35209cb9ec1ed743dfbee9854d6a53500e6bf0ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35209cb9ec1ed743dfbee9854d6a53500e6bf0ff", "html_url": "https://github.com/rust-lang/rust/commit/35209cb9ec1ed743dfbee9854d6a53500e6bf0ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35209cb9ec1ed743dfbee9854d6a53500e6bf0ff/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76dc7818eae05dab94429a61c95a400a2b85c2fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/76dc7818eae05dab94429a61c95a400a2b85c2fe", "html_url": "https://github.com/rust-lang/rust/commit/76dc7818eae05dab94429a61c95a400a2b85c2fe"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "434c00e7487eb99cb5f4d68039534e2113802f78", "filename": "src/libsyntax/ext/deriving.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/35209cb9ec1ed743dfbee9854d6a53500e6bf0ff/src%2Flibsyntax%2Fext%2Fderiving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35209cb9ec1ed743dfbee9854d6a53500e6bf0ff/src%2Flibsyntax%2Fext%2Fderiving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving.rs?ref=35209cb9ec1ed743dfbee9854d6a53500e6bf0ff", "patch": "@@ -710,9 +710,10 @@ fn expand_deriving_eq_enum_method(cx: ext_ctxt,\n \n             // Create the nonmatching pattern body.\n             let nonmatching_expr = build::mk_bool(cx, span, !is_eq);\n-            let nonmatching_body_block = build::mk_simple_block(cx,\n-                                                                span,\n-                                                                nonmatching_expr);\n+            let nonmatching_body_block =\n+                build::mk_simple_block(cx,\n+                                       span,\n+                                       nonmatching_expr);\n \n             // Create the nonmatching arm.\n             let nonmatching_arm = {"}]}