{"sha": "0cfba2fd090834c909d5ed9deccdee8170da791b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZmJhMmZkMDkwODM0YzkwOWQ1ZWQ5ZGVjY2RlZTgxNzBkYTc5MWI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-12T21:53:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-12T21:53:32Z"}, "message": "Rollup merge of #81741 - sdroege:zip-trusted-random-access-specialization-panic-safety, r=KodrAus\n\nIncrement `self.index` before calling `Iterator::self.a.__iterator_ge\u2026\n\n\u2026`t_unchecked` in `Zip` `TrustedRandomAccess` specialization\n\nOtherwise if `Iterator::self.a.__iterator_get_unchecked` panics the\nindex would not have been incremented yet and another call to\n`Iterator::next` would read from the same index again, which is not\nallowed according to the API contract of `TrustedRandomAccess` for\n`!Clone`.\n\nFixes https://github.com/rust-lang/rust/issues/81740", "tree": {"sha": "44dc801719660800028a160334a7c36c85b0f1eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44dc801719660800028a160334a7c36c85b0f1eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cfba2fd090834c909d5ed9deccdee8170da791b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgJvjcCRBK7hj4Ov3rIwAAdHIIAASwyHX9jzfmNfJOqlY1shEK\nbJdi3jsJ9nWS5/m5EnXN4XiVMjOvQOnu8bjn0eK5OKs4m9rMRf/aW7YBt0ubfEJO\nBKdR3t/1W7p3Ei9dCKI4q/ZB2PNBQf2rXmh/0X93CB9/6psEP+Myc8PHlEYMAFz9\n0BqiqkuzHza8Ya+RQWERygs9cAe8I1I9r8LFLq16elJ8LxbVxqxrhR7Y3r1aTSX7\nZGUFs5w0yKsG7ST+dHsC5EphNhMRzknhAeHHG4ZT/u+0tHArw/9xFioB/+379r2J\n7RQqv4NKkQWdFkD/84jhGE5IBm7MyTuc29aBquzdwosfF2WTKMfCucVk1u5HYUs=\n=/vcg\n-----END PGP SIGNATURE-----\n", "payload": "tree 44dc801719660800028a160334a7c36c85b0f1eb\nparent 58d72aedeee8dcce9cf227d3ac34088e88494939\nparent 86a4b27475aab52b998c15f5758540697cc9cff0\nauthor Dylan DPC <dylan.dpc@gmail.com> 1613166812 +0100\ncommitter GitHub <noreply@github.com> 1613166812 +0100\n\nRollup merge of #81741 - sdroege:zip-trusted-random-access-specialization-panic-safety, r=KodrAus\n\nIncrement `self.index` before calling `Iterator::self.a.__iterator_ge\u2026\n\n\u2026`t_unchecked` in `Zip` `TrustedRandomAccess` specialization\n\nOtherwise if `Iterator::self.a.__iterator_get_unchecked` panics the\nindex would not have been incremented yet and another call to\n`Iterator::next` would read from the same index again, which is not\nallowed according to the API contract of `TrustedRandomAccess` for\n`!Clone`.\n\nFixes https://github.com/rust-lang/rust/issues/81740\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cfba2fd090834c909d5ed9deccdee8170da791b", "html_url": "https://github.com/rust-lang/rust/commit/0cfba2fd090834c909d5ed9deccdee8170da791b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cfba2fd090834c909d5ed9deccdee8170da791b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58d72aedeee8dcce9cf227d3ac34088e88494939", "url": "https://api.github.com/repos/rust-lang/rust/commits/58d72aedeee8dcce9cf227d3ac34088e88494939", "html_url": "https://github.com/rust-lang/rust/commit/58d72aedeee8dcce9cf227d3ac34088e88494939"}, {"sha": "86a4b27475aab52b998c15f5758540697cc9cff0", "url": "https://api.github.com/repos/rust-lang/rust/commits/86a4b27475aab52b998c15f5758540697cc9cff0", "html_url": "https://github.com/rust-lang/rust/commit/86a4b27475aab52b998c15f5758540697cc9cff0"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "9f983534520069e6c09fc16ba73762d86137441d", "filename": "library/core/src/iter/adapters/zip.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0cfba2fd090834c909d5ed9deccdee8170da791b/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cfba2fd090834c909d5ed9deccdee8170da791b/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs?ref=0cfba2fd090834c909d5ed9deccdee8170da791b", "patch": "@@ -198,12 +198,13 @@ where\n                 Some((self.a.__iterator_get_unchecked(i), self.b.__iterator_get_unchecked(i)))\n             }\n         } else if A::may_have_side_effect() && self.index < self.a.size() {\n+            let i = self.index;\n+            self.index += 1;\n             // match the base implementation's potential side effects\n-            // SAFETY: we just checked that `self.index` < `self.a.len()`\n+            // SAFETY: we just checked that `i` < `self.a.len()`\n             unsafe {\n-                self.a.__iterator_get_unchecked(self.index);\n+                self.a.__iterator_get_unchecked(i);\n             }\n-            self.index += 1;\n             None\n         } else {\n             None"}]}