{"sha": "f9ff7b7336fef738caba56f1eabe72a299f2e136", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZmY3YjczMzZmZWY3MzhjYWJhNTZmMWVhYmU3MmEyOTlmMmUxMzY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-28T13:38:42Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-28T13:40:10Z"}, "message": "Prefer `#![feature(bind_by_move_pattern_guards)]` over `-Z disable_ast_check_for_mutation_in_guard`", "tree": {"sha": "0430f3056cbbd267d25e172d7b2ce50ced378421", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0430f3056cbbd267d25e172d7b2ce50ced378421"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9ff7b7336fef738caba56f1eabe72a299f2e136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9ff7b7336fef738caba56f1eabe72a299f2e136", "html_url": "https://github.com/rust-lang/rust/commit/f9ff7b7336fef738caba56f1eabe72a299f2e136", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9ff7b7336fef738caba56f1eabe72a299f2e136/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d623ec6ba32b2d056810c7a8dabdc3e5198a2a53", "url": "https://api.github.com/repos/rust-lang/rust/commits/d623ec6ba32b2d056810c7a8dabdc3e5198a2a53", "html_url": "https://github.com/rust-lang/rust/commit/d623ec6ba32b2d056810c7a8dabdc3e5198a2a53"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "8c7445d860f6c8df0791d9204816e553d3dc221b", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9ff7b7336fef738caba56f1eabe72a299f2e136/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9ff7b7336fef738caba56f1eabe72a299f2e136/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=f9ff7b7336fef738caba56f1eabe72a299f2e136", "patch": "@@ -1320,8 +1320,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         useful for profiling / PGO.\"),\n     relro_level: Option<RelroLevel> = (None, parse_relro_level, [TRACKED],\n         \"choose which RELRO level to use\"),\n-    disable_ast_check_for_mutation_in_guard: bool = (false, parse_bool, [UNTRACKED],\n-        \"skip AST-based mutation-in-guard check (mir-borrowck provides more precise check)\"),\n     nll_subminimal_causes: bool = (false, parse_bool, [UNTRACKED],\n         \"when tracking region error causes, accept subminimal results for faster execution.\"),\n     nll_facts: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "39a3e663a06c7201a8fc05fe2647623007b4d5e9", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f9ff7b7336fef738caba56f1eabe72a299f2e136/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9ff7b7336fef738caba56f1eabe72a299f2e136/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=f9ff7b7336fef738caba56f1eabe72a299f2e136", "patch": "@@ -1465,11 +1465,6 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     /// If true, we should use a naive AST walk to determine if match\n     /// guard could perform bad mutations (or mutable-borrows).\n     pub fn check_for_mutation_in_guard_via_ast_walk(self) -> bool {\n-        // If someone passes the `-Z` flag, they're asking for the footgun.\n-        if self.sess.opts.debugging_opts.disable_ast_check_for_mutation_in_guard {\n-            return false;\n-        }\n-\n         // If someone requests the feature, then be a little more\n         // careful and ensure that MIR-borrowck is enabled (which can\n         // happen via edition selection, via `feature(nll)`, or via an"}, {"sha": "10a4678107e1c88cb44f69313055f20ced709ac8", "filename": "src/test/run-pass/issues/issue-24535-allow-mutable-borrow-in-match-guard.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f9ff7b7336fef738caba56f1eabe72a299f2e136/src%2Ftest%2Frun-pass%2Fissues%2Fissue-24535-allow-mutable-borrow-in-match-guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9ff7b7336fef738caba56f1eabe72a299f2e136/src%2Ftest%2Frun-pass%2Fissues%2Fissue-24535-allow-mutable-borrow-in-match-guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-24535-allow-mutable-borrow-in-match-guard.rs?ref=f9ff7b7336fef738caba56f1eabe72a299f2e136", "patch": "@@ -12,12 +12,11 @@\n // This test illustrates that under NLL, we can remove our overly\n // conservative approach for disallowing mutations of match inputs.\n \n-// See further discussion on rust-lang/rust#24535 and\n-// rust-lang/rfcs#1006.\n-\n-// compile-flags: -Z disable-ast-check-for-mutation-in-guard\n+// See further discussion on rust-lang/rust#24535,\n+// rust-lang/rfcs#1006, and rust-lang/rfcs#107\n \n #![feature(nll)]\n+#![feature(bind_by_move_pattern_guards)]\n \n fn main() {\n     rust_issue_24535();"}, {"sha": "6cbd493b9918207623952629ac01f00eb983f83b", "filename": "src/test/ui/issues/issue-27282-reborrow-ref-mut-in-guard.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9ff7b7336fef738caba56f1eabe72a299f2e136/src%2Ftest%2Fui%2Fissues%2Fissue-27282-reborrow-ref-mut-in-guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9ff7b7336fef738caba56f1eabe72a299f2e136/src%2Ftest%2Fui%2Fissues%2Fissue-27282-reborrow-ref-mut-in-guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27282-reborrow-ref-mut-in-guard.rs?ref=f9ff7b7336fef738caba56f1eabe72a299f2e136", "patch": "@@ -15,8 +15,8 @@\n // reject it. But I want to make sure that we continue to reject it\n // (under NLL) even when that conservaive check goes away.\n \n-// compile-flags: -Z disable-ast-check-for-mutation-in-guard\n \n+#![feature(bind_by_move_pattern_guards)]\n #![feature(nll)]\n \n fn main() {"}, {"sha": "f359800812c87a733ccf55b00b75a79cbcd0a041", "filename": "src/test/ui/nll/match-guards-partially-borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9ff7b7336fef738caba56f1eabe72a299f2e136/src%2Ftest%2Fui%2Fnll%2Fmatch-guards-partially-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9ff7b7336fef738caba56f1eabe72a299f2e136/src%2Ftest%2Fui%2Fnll%2Fmatch-guards-partially-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmatch-guards-partially-borrow.rs?ref=f9ff7b7336fef738caba56f1eabe72a299f2e136", "patch": "@@ -5,8 +5,8 @@\n // Test that we don't allow mutating the value being matched on in a way that\n // changes which patterns it matches, until we have chosen an arm.\n \n-// compile-flags: -Zdisable-ast-check-for-mutation-in-guard\n \n+#![feature(bind_by_move_pattern_guards)]\n #![feature(nll)]\n \n fn ok_mutation_in_guard(mut q: i32) {"}]}