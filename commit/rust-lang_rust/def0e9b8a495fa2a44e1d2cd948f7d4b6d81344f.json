{"sha": "def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlZjBlOWI4YTQ5NWZhMmE0NGUxZDJjZDk0OGY3ZDRiNmQ4MTM0NGY=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-11T03:55:54Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-18T19:51:18Z"}, "message": "Fix ICE with `ReadPointerAsBytes` validation error", "tree": {"sha": "4cceb61a7e032513939c118cc52867efe562aa7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cceb61a7e032513939c118cc52867efe562aa7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f", "html_url": "https://github.com/rust-lang/rust/commit/def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e91c4ecc09312d8b63d250a432b0f3ef83f1df7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e91c4ecc09312d8b63d250a432b0f3ef83f1df7", "html_url": "https://github.com/rust-lang/rust/commit/5e91c4ecc09312d8b63d250a432b0f3ef83f1df7"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "0b7492631c41d7c8437c07db6e5a01d265b71ae1", "filename": "compiler/rustc_mir/src/interpret/validity.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fvalidity.rs?ref=def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f", "patch": "@@ -515,7 +515,11 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n                 Ok(true)\n             }\n             ty::Float(_) | ty::Int(_) | ty::Uint(_) => {\n-                let value = self.ecx.read_scalar(value)?;\n+                let value = try_validation!(\n+                    self.ecx.read_scalar(value),\n+                    self.path,\n+                    err_unsup!(ReadPointerAsBytes) => { \"read of part of a pointer\" },\n+                );\n                 // NOTE: Keep this in sync with the array optimization for int/float\n                 // types below!\n                 if self.ctfe_mode.is_some() {"}, {"sha": "6a38b3c8c2c71dd1bb4a1feca4c82c2f278f7891", "filename": "src/test/ui/issues/issue-79690.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f/src%2Ftest%2Fui%2Fissues%2Fissue-79690.rs", "raw_url": "https://github.com/rust-lang/rust/raw/def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f/src%2Ftest%2Fui%2Fissues%2Fissue-79690.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-79690.rs?ref=def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f", "patch": "@@ -0,0 +1,29 @@\n+union Transmute<T: Copy, U: Copy> {\n+    t: T,\n+    u: U,\n+}\n+trait Bar {\n+    fn bar(&self) -> u32;\n+}\n+struct Foo {\n+    foo: u32,\n+    bar: bool,\n+}\n+impl Bar for Foo {\n+    fn bar(&self) -> u32 {\n+        self.foo\n+    }\n+}\n+#[derive(Copy, Clone)]\n+struct Fat<'a>(&'a Foo, &'static VTable);\n+struct VTable {\n+    size: Foo,\n+}\n+const FOO: &dyn Bar = &Foo {\n+    foo: 128,\n+    bar: false,\n+};\n+const G: Fat = unsafe { Transmute { t: FOO }.u };\n+//~^ ERROR it is undefined behavior to use this value\n+\n+fn main() {}"}, {"sha": "c7f9c6a55e712897f95e1b15d03237abac7701e1", "filename": "src/test/ui/issues/issue-79690.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f/src%2Ftest%2Fui%2Fissues%2Fissue-79690.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f/src%2Ftest%2Fui%2Fissues%2Fissue-79690.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-79690.stderr?ref=def0e9b8a495fa2a44e1d2cd948f7d4b6d81344f", "patch": "@@ -0,0 +1,11 @@\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/issue-79690.rs:26:1\n+   |\n+LL | const G: Fat = unsafe { Transmute { t: FOO }.u };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered read of part of a pointer at .1.<deref>.size.foo\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0080`."}]}