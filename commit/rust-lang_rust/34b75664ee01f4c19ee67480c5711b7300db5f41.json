{"sha": "34b75664ee01f4c19ee67480c5711b7300db5f41", "node_id": "C_kwDOAAsO6NoAKDM0Yjc1NjY0ZWUwMWY0YzE5ZWU2NzQ4MGM1NzExYjczMDBkYjVmNDE", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2021-11-13T06:06:22Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2021-11-13T06:06:22Z"}, "message": "Type can be unsized and uninhabited", "tree": {"sha": "8d9ffb5f6d9e5eee9dbb2c49e4ab80f9fa5d0bf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d9ffb5f6d9e5eee9dbb2c49e4ab80f9fa5d0bf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34b75664ee01f4c19ee67480c5711b7300db5f41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34b75664ee01f4c19ee67480c5711b7300db5f41", "html_url": "https://github.com/rust-lang/rust/commit/34b75664ee01f4c19ee67480c5711b7300db5f41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34b75664ee01f4c19ee67480c5711b7300db5f41/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e90c5fbbc5df5c81267747daeb937d4e955ce6ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/e90c5fbbc5df5c81267747daeb937d4e955ce6ad", "html_url": "https://github.com/rust-lang/rust/commit/e90c5fbbc5df5c81267747daeb937d4e955ce6ad"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "a8dec82c883478fdfcecfe26f684d97f3d18133f", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34b75664ee01f4c19ee67480c5711b7300db5f41/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34b75664ee01f4c19ee67480c5711b7300db5f41/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=34b75664ee01f4c19ee67480c5711b7300db5f41", "patch": "@@ -512,7 +512,7 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n             }\n         }\n \n-        if sized && fields.iter().any(|f| f.abi.is_uninhabited()) {\n+        if fields.iter().any(|f| f.abi.is_uninhabited()) {\n             abi = Abi::Uninhabited;\n         }\n "}, {"sha": "555a38637a4369a7f4a5ac7175bd60c29a1c6de8", "filename": "src/test/ui/issues/issue-88150.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/34b75664ee01f4c19ee67480c5711b7300db5f41/src%2Ftest%2Fui%2Fissues%2Fissue-88150.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34b75664ee01f4c19ee67480c5711b7300db5f41/src%2Ftest%2Fui%2Fissues%2Fissue-88150.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-88150.rs?ref=34b75664ee01f4c19ee67480c5711b7300db5f41", "patch": "@@ -0,0 +1,21 @@\n+// run-pass\n+// compile-flags:-C debuginfo=2\n+// edition:2018\n+\n+use core::marker::PhantomData;\n+\n+pub struct Foo<T: ?Sized, A>(\n+    PhantomData<(A, T)>,\n+);\n+\n+enum Never {}\n+\n+impl<T: ?Sized> Foo<T, Never> {\n+    fn new_foo() -> Foo<T, Never> {\n+        Foo(PhantomData)\n+    }\n+}\n+\n+fn main() {\n+    let _ = Foo::<[()], Never>::new_foo();\n+}"}]}