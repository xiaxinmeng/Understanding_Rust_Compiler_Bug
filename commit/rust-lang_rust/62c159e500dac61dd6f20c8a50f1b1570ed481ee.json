{"sha": "62c159e500dac61dd6f20c8a50f1b1570ed481ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYzE1OWU1MDBkYWM2MWRkNmYyMGM4YTUwZjFiMTU3MGVkNDgxZWU=", "commit": {"author": {"name": "James Duley", "email": "james.duley@arm.com", "date": "2019-02-25T18:08:57Z"}, "committer": {"name": "James Duley", "email": "james.duley@arm.com", "date": "2019-03-19T17:07:09Z"}, "message": "Fix missing cfg for aarch64 + ios in ffi.rs", "tree": {"sha": "9a1be7a4c5afb10bed5ac38718d4f16773a0439f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a1be7a4c5afb10bed5ac38718d4f16773a0439f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62c159e500dac61dd6f20c8a50f1b1570ed481ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62c159e500dac61dd6f20c8a50f1b1570ed481ee", "html_url": "https://github.com/rust-lang/rust/commit/62c159e500dac61dd6f20c8a50f1b1570ed481ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62c159e500dac61dd6f20c8a50f1b1570ed481ee/comments", "author": null, "committer": null, "parents": [{"sha": "8485f58abf48cf893aa1af73629d0684962e0732", "url": "https://api.github.com/repos/rust-lang/rust/commits/8485f58abf48cf893aa1af73629d0684962e0732", "html_url": "https://github.com/rust-lang/rust/commit/8485f58abf48cf893aa1af73629d0684962e0732"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "231a1f199bdd69557ec44fc5fc61bacab9936c8c", "filename": "src/libcore/ffi.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/62c159e500dac61dd6f20c8a50f1b1570ed481ee/src%2Flibcore%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c159e500dac61dd6f20c8a50f1b1570ed481ee/src%2Flibcore%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fffi.rs?ref=62c159e500dac61dd6f20c8a50f1b1570ed481ee", "patch": "@@ -59,6 +59,7 @@ extern {\n \n #[cfg(any(all(not(target_arch = \"aarch64\"), not(target_arch = \"powerpc\"),\n               not(target_arch = \"x86_64\")),\n+          all(target_arch = \"aarch64\", target_os = \"ios\"),\n           windows))]\n impl fmt::Debug for VaListImpl {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n@@ -71,7 +72,7 @@ impl fmt::Debug for VaListImpl {\n ///\n /// [AArch64 Procedure Call Standard]:\n /// http://infocenter.arm.com/help/topic/com.arm.doc.ihi0055b/IHI0055B_aapcs64.pdf\n-#[cfg(all(target_arch = \"aarch64\", not(windows)))]\n+#[cfg(all(target_arch = \"aarch64\", not(target_os = \"ios\"), not(windows)))]\n #[repr(C)]\n #[derive(Debug)]\n #[unstable(feature = \"c_variadic\",\n@@ -197,10 +198,10 @@ impl<'a> VaList<'a> {\n                   windows))]\n         let mut ap = va_copy(self);\n         #[cfg(all(any(target_arch = \"aarch64\", target_arch = \"powerpc\", target_arch = \"x86_64\"),\n-                  not(windows)))]\n+                  not(windows), not(all(target_arch = \"aarch64\", target_os = \"ios\"))))]\n         let mut ap_inner = va_copy(self);\n         #[cfg(all(any(target_arch = \"aarch64\", target_arch = \"powerpc\", target_arch = \"x86_64\"),\n-                  not(windows)))]\n+                  not(windows), not(all(target_arch = \"aarch64\", target_os = \"ios\"))))]\n         let mut ap = VaList(&mut ap_inner);\n         let ret = f(VaList(ap.0));\n         va_end(&mut ap);\n@@ -216,10 +217,11 @@ extern \"rust-intrinsic\" {\n     /// Copies the current location of arglist `src` to the arglist `dst`.\n     #[cfg(any(all(not(target_arch = \"aarch64\"), not(target_arch = \"powerpc\"),\n                   not(target_arch = \"x86_64\")),\n+              all(target_arch = \"aarch64\", target_os = \"ios\"),\n               windows))]\n     fn va_copy<'a>(src: &VaList<'a>) -> VaList<'a>;\n     #[cfg(all(any(target_arch = \"aarch64\", target_arch = \"powerpc\", target_arch = \"x86_64\"),\n-              not(windows)))]\n+              not(windows), not(all(target_arch = \"aarch64\", target_os = \"ios\"))))]\n     fn va_copy(src: &VaList) -> VaListImpl;\n \n     /// Loads an argument of type `T` from the `va_list` `ap` and increment the"}]}