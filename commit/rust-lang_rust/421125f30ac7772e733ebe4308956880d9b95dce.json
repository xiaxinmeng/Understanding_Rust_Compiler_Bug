{"sha": "421125f30ac7772e733ebe4308956880d9b95dce", "node_id": "C_kwDOAAsO6NoAKDQyMTEyNWYzMGFjNzc3MmU3MzNlYmU0MzA4OTU2ODgwZDliOTVkY2U", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-10T02:02:48Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-11T00:54:01Z"}, "message": "Simplify `rustc_ast::visit::Visitor::visit_enum_def`.\n\nIt's passed three arguments that are never used.", "tree": {"sha": "3dfabf27a7c288b9982586cb6a641c61fb4527f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dfabf27a7c288b9982586cb6a641c61fb4527f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/421125f30ac7772e733ebe4308956880d9b95dce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/421125f30ac7772e733ebe4308956880d9b95dce", "html_url": "https://github.com/rust-lang/rust/commit/421125f30ac7772e733ebe4308956880d9b95dce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/421125f30ac7772e733ebe4308956880d9b95dce/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c5303898e43b7062bd66145bace076ce1a0b690", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c5303898e43b7062bd66145bace076ce1a0b690", "html_url": "https://github.com/rust-lang/rust/commit/8c5303898e43b7062bd66145bace076ce1a0b690"}], "stats": {"total": 43, "additions": 9, "deletions": 34}, "files": [{"sha": "c21d3246bd89c03a4de2430b9a460154b26a92de", "filename": "compiler/rustc_ast/src/visit.rs", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/421125f30ac7772e733ebe4308956880d9b95dce/compiler%2Frustc_ast%2Fsrc%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/421125f30ac7772e733ebe4308956880d9b95dce/compiler%2Frustc_ast%2Fsrc%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fvisit.rs?ref=421125f30ac7772e733ebe4308956880d9b95dce", "patch": "@@ -177,14 +177,8 @@ pub trait Visitor<'ast>: Sized {\n     fn visit_field_def(&mut self, s: &'ast FieldDef) {\n         walk_field_def(self, s)\n     }\n-    fn visit_enum_def(\n-        &mut self,\n-        enum_definition: &'ast EnumDef,\n-        generics: &'ast Generics,\n-        item_id: NodeId,\n-        _: Span,\n-    ) {\n-        walk_enum_def(self, enum_definition, generics, item_id)\n+    fn visit_enum_def(&mut self, enum_definition: &'ast EnumDef) {\n+        walk_enum_def(self, enum_definition)\n     }\n     fn visit_variant(&mut self, v: &'ast Variant) {\n         walk_variant(self, v)\n@@ -334,7 +328,7 @@ pub fn walk_item<'a, V: Visitor<'a>>(visitor: &mut V, item: &'a Item) {\n         }\n         ItemKind::Enum(ref enum_definition, ref generics) => {\n             visitor.visit_generics(generics);\n-            visitor.visit_enum_def(enum_definition, generics, item.id, item.span)\n+            visitor.visit_enum_def(enum_definition)\n         }\n         ItemKind::Impl(box Impl {\n             defaultness: _,\n@@ -377,12 +371,7 @@ pub fn walk_item<'a, V: Visitor<'a>>(visitor: &mut V, item: &'a Item) {\n     walk_list!(visitor, visit_attribute, &item.attrs);\n }\n \n-pub fn walk_enum_def<'a, V: Visitor<'a>>(\n-    visitor: &mut V,\n-    enum_definition: &'a EnumDef,\n-    _: &'a Generics,\n-    _: NodeId,\n-) {\n+pub fn walk_enum_def<'a, V: Visitor<'a>>(visitor: &mut V, enum_definition: &'a EnumDef) {\n     walk_list!(visitor, visit_variant, &enum_definition.variants);\n }\n "}, {"sha": "31e961336a55d6ca360e8b24c8afdbd4ca6a1ddd", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/421125f30ac7772e733ebe4308956880d9b95dce/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/421125f30ac7772e733ebe4308956880d9b95dce/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=421125f30ac7772e733ebe4308956880d9b95dce", "patch": "@@ -1547,16 +1547,8 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n         self.with_banned_assoc_ty_bound(|this| visit::walk_struct_def(this, s))\n     }\n \n-    fn visit_enum_def(\n-        &mut self,\n-        enum_definition: &'a EnumDef,\n-        generics: &'a Generics,\n-        item_id: NodeId,\n-        _: Span,\n-    ) {\n-        self.with_banned_assoc_ty_bound(|this| {\n-            visit::walk_enum_def(this, enum_definition, generics, item_id)\n-        })\n+    fn visit_enum_def(&mut self, enum_definition: &'a EnumDef) {\n+        self.with_banned_assoc_ty_bound(|this| visit::walk_enum_def(this, enum_definition))\n     }\n \n     fn visit_fn(&mut self, fk: FnKind<'a>, span: Span, id: NodeId) {"}, {"sha": "be44795b1399b6b1d74e85efaabfdcf0c15992c7", "filename": "compiler/rustc_ast_passes/src/node_count.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/421125f30ac7772e733ebe4308956880d9b95dce/compiler%2Frustc_ast_passes%2Fsrc%2Fnode_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/421125f30ac7772e733ebe4308956880d9b95dce/compiler%2Frustc_ast_passes%2Fsrc%2Fnode_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fnode_count.rs?ref=421125f30ac7772e733ebe4308956880d9b95dce", "patch": "@@ -91,15 +91,9 @@ impl<'ast> Visitor<'ast> for NodeCounter {\n         self.count += 1;\n         walk_field_def(self, s)\n     }\n-    fn visit_enum_def(\n-        &mut self,\n-        enum_definition: &EnumDef,\n-        generics: &Generics,\n-        item_id: NodeId,\n-        _: Span,\n-    ) {\n-        self.count += 1;\n-        walk_enum_def(self, enum_definition, generics, item_id)\n+    fn visit_enum_def(&mut self, enum_definition: &EnumDef) {\n+        self.count += 1;\n+        walk_enum_def(self, enum_definition)\n     }\n     fn visit_variant(&mut self, v: &Variant) {\n         self.count += 1;"}]}