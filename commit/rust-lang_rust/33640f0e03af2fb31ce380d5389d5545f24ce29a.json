{"sha": "33640f0e03af2fb31ce380d5389d5545f24ce29a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNjQwZjBlMDNhZjJmYjMxY2UzODBkNTM4OWQ1NTQ1ZjI0Y2UyOWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-06T00:09:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-06T00:09:14Z"}, "message": "Auto merge of #67563 - euclio:rustdoc-buffer-lexer, r=GuillaumeGomez\n\nbuffer lexer errors in rustdoc syntax checking\n\nThe code isn't ideal (I really would like to display the errors inline), but this at least gets us to where we were before #63017.", "tree": {"sha": "92152cafedef6f5c701ad216e3d95a5b43f25d08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92152cafedef6f5c701ad216e3d95a5b43f25d08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33640f0e03af2fb31ce380d5389d5545f24ce29a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33640f0e03af2fb31ce380d5389d5545f24ce29a", "html_url": "https://github.com/rust-lang/rust/commit/33640f0e03af2fb31ce380d5389d5545f24ce29a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33640f0e03af2fb31ce380d5389d5545f24ce29a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0731573042d7cad5aa183ed4f83bda1bf9316cc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0731573042d7cad5aa183ed4f83bda1bf9316cc4", "html_url": "https://github.com/rust-lang/rust/commit/0731573042d7cad5aa183ed4f83bda1bf9316cc4"}, {"sha": "1ad928ee528e8ed94d6074f5f4b2f7051dbe2325", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ad928ee528e8ed94d6074f5f4b2f7051dbe2325", "html_url": "https://github.com/rust-lang/rust/commit/1ad928ee528e8ed94d6074f5f4b2f7051dbe2325"}], "stats": {"total": 160, "additions": 48, "deletions": 112}, "files": [{"sha": "a4ca9010f2e9ff5f51c55d98d7d3043a14db18b4", "filename": "src/librustdoc/passes/check_code_block_syntax.rs", "status": "modified", "additions": 29, "deletions": 3, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/33640f0e03af2fb31ce380d5389d5545f24ce29a/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33640f0e03af2fb31ce380d5389d5545f24ce29a/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs?ref=33640f0e03af2fb31ce380d5389d5545f24ce29a", "patch": "@@ -1,6 +1,7 @@\n-use errors::Applicability;\n+use errors::{emitter::Emitter, Applicability, Diagnostic, Handler};\n+use rustc_data_structures::sync::{Lock, Lrc};\n use rustc_parse::lexer::StringReader as Lexer;\n-use rustc_span::source_map::FilePathMapping;\n+use rustc_span::source_map::{FilePathMapping, SourceMap};\n use rustc_span::{FileName, InnerSpan};\n use syntax::sess::ParseSess;\n use syntax::token;\n@@ -27,7 +28,13 @@ struct SyntaxChecker<'a, 'tcx> {\n \n impl<'a, 'tcx> SyntaxChecker<'a, 'tcx> {\n     fn check_rust_syntax(&self, item: &clean::Item, dox: &str, code_block: RustCodeBlock) {\n-        let sess = ParseSess::new(FilePathMapping::empty());\n+        let buffered_messages = Lrc::new(Lock::new(vec![]));\n+\n+        let emitter = BufferEmitter { messages: Lrc::clone(&buffered_messages) };\n+\n+        let cm = Lrc::new(SourceMap::new(FilePathMapping::empty()));\n+        let handler = Handler::with_emitter(false, None, Box::new(emitter));\n+        let sess = ParseSess::with_span_handler(handler, cm);\n         let source_file = sess.source_map().new_source_file(\n             FileName::Custom(String::from(\"doctest\")),\n             dox[code_block.code].to_owned(),\n@@ -93,6 +100,11 @@ impl<'a, 'tcx> SyntaxChecker<'a, 'tcx> {\n                 diag\n             };\n \n+            // FIXME(#67563): Provide more context for these errors by displaying the spans inline.\n+            for message in buffered_messages.borrow().iter() {\n+                diag.note(&message);\n+            }\n+\n             diag.emit();\n         }\n     }\n@@ -110,6 +122,20 @@ impl<'a, 'tcx> DocFolder for SyntaxChecker<'a, 'tcx> {\n     }\n }\n \n+struct BufferEmitter {\n+    messages: Lrc<Lock<Vec<String>>>,\n+}\n+\n+impl Emitter for BufferEmitter {\n+    fn emit_diagnostic(&mut self, diag: &Diagnostic) {\n+        self.messages.borrow_mut().push(format!(\"error from rustc: {}\", diag.message[0].0));\n+    }\n+\n+    fn source_map(&self) -> Option<&Lrc<SourceMap>> {\n+        None\n+    }\n+}\n+\n enum CodeBlockInvalid {\n     SyntaxError,\n     Empty,"}, {"sha": "32cc20755ecf4b189a20dd1cc61f4f73f8296e4e", "filename": "src/test/rustdoc-ui/invalid-syntax.stderr", "status": "modified", "additions": 19, "deletions": 109, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/33640f0e03af2fb31ce380d5389d5545f24ce29a/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33640f0e03af2fb31ce380d5389d5545f24ce29a/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr?ref=33640f0e03af2fb31ce380d5389d5545f24ce29a", "patch": "@@ -1,21 +1,3 @@\n-error: unknown start of token: \\\n- --> <doctest>:1:1\n-  |\n-1 | \\__________pkt->size___________/          \\_result->size_/ \\__pkt->size__/\n-  | ^\n-\n-error: unknown start of token: \\\n- --> <doctest>:1:43\n-  |\n-1 | \\__________pkt->size___________/          \\_result->size_/ \\__pkt->size__/\n-  |                                           ^\n-\n-error: unknown start of token: \\\n- --> <doctest>:1:60\n-  |\n-1 | \\__________pkt->size___________/          \\_result->size_/ \\__pkt->size__/\n-  |                                                            ^\n-\n warning: could not parse code block as Rust code\n   --> $DIR/invalid-syntax.rs:3:5\n    |\n@@ -25,33 +7,14 @@ LL | | /// \\__________pkt->size___________/          \\_result->size_/ \\__pkt->si\n LL | | /// ```\n    | |_______^\n    |\n+   = note: error from rustc: unknown start of token: \\\n+   = note: error from rustc: unknown start of token: \\\n+   = note: error from rustc: unknown start of token: \\\n help: mark blocks that do not contain Rust code as text\n    |\n LL | /// ```text\n    |     ^^^^^^^\n \n-error: unknown start of token: `\n- --> <doctest>:3:30\n-  |\n-3 |    |     ^^^^^^ did you mean `baz::foobar`?\n-  |                              ^\n-  |\n-help: Unicode character '`' (Grave Accent) looks like ''' (Single Quote), but it is not\n-  |\n-3 |    |     ^^^^^^ did you mean 'baz::foobar`?\n-  |                              ^\n-\n-error: unknown start of token: `\n- --> <doctest>:3:42\n-  |\n-3 |    |     ^^^^^^ did you mean `baz::foobar`?\n-  |                                          ^\n-  |\n-help: Unicode character '`' (Grave Accent) looks like ''' (Single Quote), but it is not\n-  |\n-3 |    |     ^^^^^^ did you mean `baz::foobar'?\n-  |                                          ^\n-\n warning: could not parse code block as Rust code\n   --> $DIR/invalid-syntax.rs:9:5\n    |\n@@ -63,17 +26,13 @@ LL | | ///    |     ^^^^^^ did you mean `baz::foobar`?\n LL | | /// ```\n    | |_______^\n    |\n+   = note: error from rustc: unknown start of token: `\n+   = note: error from rustc: unknown start of token: `\n help: mark blocks that do not contain Rust code as text\n    |\n LL | /// ```text\n    |     ^^^^^^^\n \n-error: unknown start of token: \\\n- --> <doctest>:1:1\n-  |\n-1 | \\_\n-  | ^\n-\n warning: could not parse code block as Rust code\n   --> $DIR/invalid-syntax.rs:21:5\n    |\n@@ -83,17 +42,12 @@ LL | | /// \\_\n LL | | /// ```\n    | |_______^\n    |\n+   = note: error from rustc: unknown start of token: \\\n help: mark blocks that do not contain Rust code as text\n    |\n LL | /// ```text\n    |     ^^^^^^^\n \n-error: unknown start of token: \\\n- --> <doctest>:1:1\n-  |\n-1 | \\_\n-  | ^\n-\n warning: could not parse code block as Rust code\n   --> $DIR/invalid-syntax.rs:35:5\n    |\n@@ -102,12 +56,8 @@ LL |   /// ```rust\n LL | | /// \\_\n LL | | /// ```\n    | |_______^\n-\n-error: unknown start of token: \\\n- --> <doctest>:2:5\n-  |\n-2 |     \\_\n-  |     ^\n+   |\n+   = note: error from rustc: unknown start of token: \\\n \n warning: could not parse code block as Rust code\n   --> $DIR/invalid-syntax.rs:45:9\n@@ -116,51 +66,18 @@ LL |   ///     code with bad syntax\n    |  _________^\n LL | | ///     \\_\n    | |__________^\n-\n-error: unknown start of token: `\n- --> <doctest>:1:1\n-  |\n-1 | ```\n-  | ^\n-  |\n-help: Unicode character '`' (Grave Accent) looks like ''' (Single Quote), but it is not\n-  |\n-1 | '``\n-  | ^\n-\n-error: unknown start of token: `\n- --> <doctest>:1:2\n-  |\n-1 | ```\n-  |  ^\n-  |\n-help: Unicode character '`' (Grave Accent) looks like ''' (Single Quote), but it is not\n-  |\n-1 | `'`\n-  |  ^\n-\n-error: unknown start of token: `\n- --> <doctest>:1:3\n-  |\n-1 | ```\n-  |   ^\n-  |\n-help: Unicode character '`' (Grave Accent) looks like ''' (Single Quote), but it is not\n-  |\n-1 | ``'\n-  |   ^\n+   |\n+   = note: error from rustc: unknown start of token: \\\n \n warning: could not parse code block as Rust code\n   --> $DIR/invalid-syntax.rs:60:9\n    |\n LL | ///     ```\n    |         ^^^\n-\n-error: unknown start of token: \\\n- --> <doctest>:1:1\n-  |\n-1 | \\_\n-  | ^\n+   |\n+   = note: error from rustc: unknown start of token: `\n+   = note: error from rustc: unknown start of token: `\n+   = note: error from rustc: unknown start of token: `\n \n warning: could not parse code block as Rust code\n   --> $DIR/invalid-syntax.rs:64:5\n@@ -170,12 +87,8 @@ LL |   /// ```edition2018\n LL | | /// \\_\n LL | | /// ```\n    | |_______^\n-\n-error: unknown start of token: \\\n- --> <doctest>:1:1\n-  |\n-1 | \\_\n-  | ^\n+   |\n+   = note: error from rustc: unknown start of token: \\\n \n warning: doc comment contains an invalid Rust code block\n   --> $DIR/invalid-syntax.rs:70:1\n@@ -186,6 +99,7 @@ LL | | #[doc = \"```\"]\n    | |______________^\n    |\n    = help: mark blocks that do not contain Rust code as text: ```text\n+   = note: error from rustc: unknown start of token: \\\n \n warning: Rust code block is empty\n   --> $DIR/invalid-syntax.rs:76:5\n@@ -210,15 +124,11 @@ help: mark blocks that do not contain Rust code as text\n LL | /// ```text\n    |     ^^^^^^^\n \n-error: unknown start of token: \\\n- --> <doctest>:1:1\n-  |\n-1 | \\____/\n-  | ^\n-\n warning: could not parse code block as Rust code\n   --> $DIR/invalid-syntax.rs:92:9\n    |\n LL | ///     \\____/\n    |         ^^^^^^\n+   |\n+   = note: error from rustc: unknown start of token: \\\n "}]}