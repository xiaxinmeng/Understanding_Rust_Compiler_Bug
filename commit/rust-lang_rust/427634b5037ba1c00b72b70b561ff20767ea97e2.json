{"sha": "427634b5037ba1c00b72b70b561ff20767ea97e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNzYzNGI1MDM3YmExYzAwYjcyYjcwYjU2MWZmMjA3NjdlYTk3ZTI=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-08-03T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-08-03T22:01:48Z"}, "message": "Avoid `unwrap_or_else` in str indexing\n\nThis provides a small reduction of generated LLVM IR, and leads to a\nsimpler assembly code.", "tree": {"sha": "2f302519d3796314812f9605df8f1b32c2b0fa81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f302519d3796314812f9605df8f1b32c2b0fa81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/427634b5037ba1c00b72b70b561ff20767ea97e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/427634b5037ba1c00b72b70b561ff20767ea97e2", "html_url": "https://github.com/rust-lang/rust/commit/427634b5037ba1c00b72b70b561ff20767ea97e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/427634b5037ba1c00b72b70b561ff20767ea97e2/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "829d69b9c6bfc535a92fc290ec9391a0d5af6c81", "url": "https://api.github.com/repos/rust-lang/rust/commits/829d69b9c6bfc535a92fc290ec9391a0d5af6c81", "html_url": "https://github.com/rust-lang/rust/commit/829d69b9c6bfc535a92fc290ec9391a0d5af6c81"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "eac4741cd260ad483969d3dfdc70f9cb838f2c45", "filename": "library/core/src/str/mod.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/427634b5037ba1c00b72b70b561ff20767ea97e2/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/427634b5037ba1c00b72b70b561ff20767ea97e2/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs?ref=427634b5037ba1c00b72b70b561ff20767ea97e2", "patch": "@@ -1923,7 +1923,10 @@ mod traits {\n         #[inline]\n         fn index(self, slice: &str) -> &Self::Output {\n             let (start, end) = (self.start, self.end);\n-            self.get(slice).unwrap_or_else(|| super::slice_error_fail(slice, start, end))\n+            match self.get(slice) {\n+                Some(s) => s,\n+                None => super::slice_error_fail(slice, start, end),\n+            }\n         }\n         #[inline]\n         fn index_mut(self, slice: &mut str) -> &mut Self::Output {\n@@ -1995,7 +1998,10 @@ mod traits {\n         #[inline]\n         fn index(self, slice: &str) -> &Self::Output {\n             let end = self.end;\n-            self.get(slice).unwrap_or_else(|| super::slice_error_fail(slice, 0, end))\n+            match self.get(slice) {\n+                Some(s) => s,\n+                None => super::slice_error_fail(slice, 0, end),\n+            }\n         }\n         #[inline]\n         fn index_mut(self, slice: &mut str) -> &mut Self::Output {\n@@ -2068,7 +2074,10 @@ mod traits {\n         #[inline]\n         fn index(self, slice: &str) -> &Self::Output {\n             let (start, end) = (self.start, slice.len());\n-            self.get(slice).unwrap_or_else(|| super::slice_error_fail(slice, start, end))\n+            match self.get(slice) {\n+                Some(s) => s,\n+                None => super::slice_error_fail(slice, start, end),\n+            }\n         }\n         #[inline]\n         fn index_mut(self, slice: &mut str) -> &mut Self::Output {"}]}