{"sha": "89fd6ae458c96f7c3be00d93861ed3f0aa53d95b", "node_id": "C_kwDOAAsO6NoAKDg5ZmQ2YWU0NThjOTZmN2MzYmUwMGQ5Mzg2MWVkM2YwYWE1M2Q5NWI", "commit": {"author": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-09-15T07:45:17Z"}, "committer": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-09-15T08:05:44Z"}, "message": "correct span, add help message and add UI test when query depth overflows", "tree": {"sha": "efe059d3e5ba78137b72de83a97411336cc6824b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efe059d3e5ba78137b72de83a97411336cc6824b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b", "html_url": "https://github.com/rust-lang/rust/commit/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/comments", "author": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44506f38e079caec1b6c14e05a9b86e19544757f", "url": "https://api.github.com/repos/rust-lang/rust/commits/44506f38e079caec1b6c14e05a9b86e19544757f", "html_url": "https://github.com/rust-lang/rust/commit/44506f38e079caec1b6c14e05a9b86e19544757f"}], "stats": {"total": 106, "additions": 82, "deletions": 24}, "files": [{"sha": "b914ba52a7353ac219710beaae0eea3814102cef", "filename": "compiler/rustc_error_messages/locales/en-US/query_system.ftl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fquery_system.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fquery_system.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fquery_system.ftl?ref=89fd6ae458c96f7c3be00d93861ed3f0aa53d95b", "patch": "@@ -23,5 +23,6 @@ query_system_cycle_recursive_trait_alias = trait aliases cannot be recursive\n query_system_cycle_which_requires = ...which requires {$desc}...\n \n query_system_query_overflow = queries overflow the depth limit!\n+    .help = consider increasing the recursion limit by adding a `#![recursion_limit = \"{$suggested_limit}\"]` attribute to your crate (`{$crate_name}`)\n \n-query_system_layout_of_depth = Query depth increased by {$depth} when {$desc}!\n+query_system_layout_of_depth = query depth increased by {$depth} when {$desc}"}, {"sha": "b9edb757b568aef1f7b6d0f78b32c67480d567a2", "filename": "compiler/rustc_query_impl/src/plumbing.rs", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs?ref=89fd6ae458c96f7c3be00d93861ed3f0aa53d95b", "patch": "@@ -19,8 +19,10 @@ use rustc_query_system::query::{\n     force_query, QueryConfig, QueryContext, QueryDescription, QueryJobId, QueryMap,\n     QuerySideEffects, QueryStackFrame,\n };\n-use rustc_query_system::Value;\n+use rustc_query_system::{LayoutOfDepth, QueryOverflow, Value};\n use rustc_serialize::Decodable;\n+use rustc_session::Limit;\n+use rustc_span::def_id::LOCAL_CRATE;\n use std::any::Any;\n use std::num::NonZeroU64;\n use thin_vec::ThinVec;\n@@ -127,6 +129,29 @@ impl QueryContext for QueryCtxt<'_> {\n             })\n         })\n     }\n+\n+    fn depth_limit_error(&self, job: QueryJobId) {\n+        let mut span = None;\n+        let mut layout_of_depth = None;\n+        if let Some(map) = self.try_collect_active_jobs() {\n+            if let Some((info, depth)) = job.try_find_layout_root(map) {\n+                span = Some(info.job.span);\n+                layout_of_depth = Some(LayoutOfDepth { desc: info.query.description, depth });\n+            }\n+        }\n+\n+        let suggested_limit = match self.recursion_limit() {\n+            Limit(0) => Limit(2),\n+            limit => limit * 2,\n+        };\n+\n+        self.sess.emit_fatal(QueryOverflow {\n+            span,\n+            layout_of_depth,\n+            suggested_limit,\n+            crate_name: self.crate_name(LOCAL_CRATE),\n+        });\n+    }\n }\n \n impl<'tcx> QueryCtxt<'tcx> {"}, {"sha": "bececca7585ae98980ac040387536e6883a8b473", "filename": "compiler/rustc_query_system/src/error.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/compiler%2Frustc_query_system%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/compiler%2Frustc_query_system%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Ferror.rs?ref=89fd6ae458c96f7c3be00d93861ed3f0aa53d95b", "patch": "@@ -1,5 +1,6 @@\n use rustc_errors::AddSubdiagnostic;\n-use rustc_span::Span;\n+use rustc_session::Limit;\n+use rustc_span::{Span, Symbol};\n \n pub struct CycleStack {\n     pub span: Span,\n@@ -76,17 +77,20 @@ pub struct IncrementCompilation {\n }\n \n #[derive(SessionDiagnostic)]\n+#[help]\n #[diag(query_system::query_overflow)]\n pub struct QueryOverflow {\n+    #[primary_span]\n+    pub span: Option<Span>,\n     #[subdiagnostic]\n     pub layout_of_depth: Option<LayoutOfDepth>,\n+    pub suggested_limit: Limit,\n+    pub crate_name: Symbol,\n }\n \n #[derive(SessionSubdiagnostic)]\n #[note(query_system::layout_of_depth)]\n pub struct LayoutOfDepth {\n-    #[primary_span]\n-    pub span: Span,\n     pub desc: String,\n     pub depth: usize,\n }"}, {"sha": "78b06f520a855a932df020fc546c5449c77e4f35", "filename": "compiler/rustc_query_system/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/compiler%2Frustc_query_system%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/compiler%2Frustc_query_system%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Flib.rs?ref=89fd6ae458c96f7c3be00d93861ed3f0aa53d95b", "patch": "@@ -23,4 +23,6 @@ pub mod query;\n mod values;\n \n pub use error::HandleCycleError;\n+pub use error::LayoutOfDepth;\n+pub use error::QueryOverflow;\n pub use values::Value;"}, {"sha": "95305eabd0d347ce85f7732737f560288fde2abe", "filename": "compiler/rustc_query_system/src/query/job.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs?ref=89fd6ae458c96f7c3be00d93861ed3f0aa53d95b", "patch": "@@ -160,10 +160,7 @@ impl QueryJobId {\n \n     #[cold]\n     #[inline(never)]\n-    pub(super) fn try_find_layout_root(\n-        &self,\n-        query_map: QueryMap,\n-    ) -> Option<(QueryJobInfo, usize)> {\n+    pub fn try_find_layout_root(&self, query_map: QueryMap) -> Option<(QueryJobInfo, usize)> {\n         let mut last_layout = None;\n         let mut current_id = Some(*self);\n         let mut depth = 0;"}, {"sha": "7a96c53b604814a78d00aa755f541e5f71472b04", "filename": "compiler/rustc_query_system/src/query/mod.rs", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs?ref=89fd6ae458c96f7c3be00d93861ed3f0aa53d95b", "patch": "@@ -14,7 +14,7 @@ pub use self::caches::{\n mod config;\n pub use self::config::{QueryConfig, QueryDescription, QueryVTable};\n \n-use crate::dep_graph::{DepContext, DepNodeIndex, HasDepContext, SerializedDepNodeIndex};\n+use crate::dep_graph::{DepNodeIndex, HasDepContext, SerializedDepNodeIndex};\n use rustc_data_structures::sync::Lock;\n use rustc_errors::Diagnostic;\n use rustc_hir::def::DefKind;\n@@ -123,18 +123,5 @@ pub trait QueryContext: HasDepContext {\n         compute: impl FnOnce() -> R,\n     ) -> R;\n \n-    fn depth_limit_error(&self, job: QueryJobId) {\n-        let sess = self.dep_context().sess();\n-        let mut layout_of_depth = None;\n-        if let Some(map) = self.try_collect_active_jobs() {\n-            if let Some((info, depth)) = job.try_find_layout_root(map) {\n-                layout_of_depth = Some(crate::error::LayoutOfDepth {\n-                    span: info.job.span,\n-                    desc: info.query.description,\n-                    depth,\n-                });\n-            }\n-        }\n-        sess.emit_fatal(crate::error::QueryOverflow { layout_of_depth });\n-    }\n+    fn depth_limit_error(&self, job: QueryJobId);\n }"}, {"sha": "e600c1c08e5cfbb702eaef675c60dd171ed0a5ea", "filename": "src/test/ui/query-system/query_depth.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/src%2Ftest%2Fui%2Fquery-system%2Fquery_depth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/src%2Ftest%2Fui%2Fquery-system%2Fquery_depth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fquery-system%2Fquery_depth.rs?ref=89fd6ae458c96f7c3be00d93861ed3f0aa53d95b", "patch": "@@ -0,0 +1,31 @@\n+// build-fail\n+\n+#![recursion_limit = \"64\"]\n+type Byte = Option<Option<Option<Option< Option<Option<Option<Option<\n+    Option<Option<Option<Option< Option<Option<Option<Option<\n+        Option<Option<Option<Option< Option<Option<Option<Option<\n+            Option<Option<Option<Option< Option<Option<Option<Option<\n+                Option<Option<Option<Option< Option<Option<Option<Option<\n+                    Option<Option<Option<Option< Option<Option<Option<Option<\n+                        Option<Option<Option<Option< Option<Option<Option<Option<\n+                            Option<Option<Option<Option< Option<Option<Option<Option<\n+                                Option<Option<Option<Option< Option<Option<Option<Option<\n+                                    Option<Option<Option<Option< Option<Option<Option<Option<\n+                                        Option<Option<Option<Option< Option<Option<Option<Option<\n+                                            Box<String>\n+                                        >>>> >>>>\n+                                    >>>> >>>>\n+                                >>>> >>>>\n+                            >>>> >>>>\n+                        >>>> >>>>\n+                    >>>> >>>>\n+                >>>> >>>>\n+            >>>> >>>>\n+        >>>> >>>>\n+    >>>> >>>>\n+>>>> >>>>;\n+\n+fn main() {\n+//~^ ERROR: queries overflow the depth limit!\n+    println!(\"{}\", std::mem::size_of::<Byte>());\n+}"}, {"sha": "43a18b4e07455cb10b776eab3a3706f8dd366fcd", "filename": "src/test/ui/query-system/query_depth.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/src%2Ftest%2Fui%2Fquery-system%2Fquery_depth.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89fd6ae458c96f7c3be00d93861ed3f0aa53d95b/src%2Ftest%2Fui%2Fquery-system%2Fquery_depth.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fquery-system%2Fquery_depth.stderr?ref=89fd6ae458c96f7c3be00d93861ed3f0aa53d95b", "patch": "@@ -0,0 +1,11 @@\n+error: queries overflow the depth limit!\n+  --> $DIR/query_depth.rs:28:1\n+   |\n+LL | fn main() {\n+   | ^^^^^^^^^\n+   |\n+   = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"128\"]` attribute to your crate (`query_depth`)\n+   = note: query depth increased by 66 when computing layout of `core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<core::option::Option<alloc::boxed::Box<alloc::string::String>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>`\n+\n+error: aborting due to previous error\n+"}]}