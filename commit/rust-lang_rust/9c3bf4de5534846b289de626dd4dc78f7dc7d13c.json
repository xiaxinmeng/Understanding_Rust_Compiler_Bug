{"sha": "9c3bf4de5534846b289de626dd4dc78f7dc7d13c", "node_id": "C_kwDOAAsO6NoAKDljM2JmNGRlNTUzNDg0NmIyODlkZTYyNmRkNGRjNzhmN2RjN2QxM2M", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-10-18T20:53:24Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-10-18T21:25:38Z"}, "message": "Consider patterns in fn params in an `Elided(Infer)` lifetime rib.", "tree": {"sha": "a92bb34e353a2099d468f9aff838af4c3a035743", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a92bb34e353a2099d468f9aff838af4c3a035743"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c3bf4de5534846b289de626dd4dc78f7dc7d13c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c3bf4de5534846b289de626dd4dc78f7dc7d13c", "html_url": "https://github.com/rust-lang/rust/commit/9c3bf4de5534846b289de626dd4dc78f7dc7d13c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c3bf4de5534846b289de626dd4dc78f7dc7d13c/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4891d57f7aab37b5d6a84f2901c0bb8903111d53", "url": "https://api.github.com/repos/rust-lang/rust/commits/4891d57f7aab37b5d6a84f2901c0bb8903111d53", "html_url": "https://github.com/rust-lang/rust/commit/4891d57f7aab37b5d6a84f2901c0bb8903111d53"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "1675580bd89017219e54d6c2224f66cd9fcd0782", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9c3bf4de5534846b289de626dd4dc78f7dc7d13c/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c3bf4de5534846b289de626dd4dc78f7dc7d13c/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=9c3bf4de5534846b289de626dd4dc78f7dc7d13c", "patch": "@@ -1853,9 +1853,11 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n         let mut bindings = smallvec![(PatBoundCtx::Product, Default::default())];\n         for (index, (pat, ty)) in inputs.enumerate() {\n             debug!(?pat, ?ty);\n-            if let Some(pat) = pat {\n-                self.resolve_pattern(pat, PatternSource::FnParam, &mut bindings);\n-            }\n+            self.with_lifetime_rib(LifetimeRibKind::Elided(LifetimeRes::Infer), |this| {\n+                if let Some(pat) = pat {\n+                    this.resolve_pattern(pat, PatternSource::FnParam, &mut bindings);\n+                }\n+            });\n             self.visit_ty(ty);\n \n             if let Some(ref candidates) = self.lifetime_elision_candidates {\n@@ -2827,10 +2829,13 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n \n     fn resolve_params(&mut self, params: &'ast [Param]) {\n         let mut bindings = smallvec![(PatBoundCtx::Product, Default::default())];\n-        for Param { pat, ty, .. } in params {\n-            self.resolve_pattern(pat, PatternSource::FnParam, &mut bindings);\n+        self.with_lifetime_rib(LifetimeRibKind::Elided(LifetimeRes::Infer), |this| {\n+            for Param { pat, .. } in params {\n+                this.resolve_pattern(pat, PatternSource::FnParam, &mut bindings);\n+            }\n+        });\n+        for Param { ty, .. } in params {\n             self.visit_ty(ty);\n-            debug!(\"(resolving function / closure) recorded parameter\");\n         }\n     }\n "}, {"sha": "c1425fa4243d5687a27f69315d345b198651ecd9", "filename": "src/test/ui/lifetimes/elided-lifetime-in-param-pat.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9c3bf4de5534846b289de626dd4dc78f7dc7d13c/src%2Ftest%2Fui%2Flifetimes%2Felided-lifetime-in-param-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c3bf4de5534846b289de626dd4dc78f7dc7d13c/src%2Ftest%2Fui%2Flifetimes%2Felided-lifetime-in-param-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Felided-lifetime-in-param-pat.rs?ref=9c3bf4de5534846b289de626dd4dc78f7dc7d13c", "patch": "@@ -0,0 +1,11 @@\n+// check-pass\n+\n+struct S<T> {\n+    _t: T,\n+}\n+\n+fn f(S::<&i8> { .. }: S<&i8>) {}\n+\n+fn main() {\n+    f(S { _t: &42_i8 });\n+}"}]}