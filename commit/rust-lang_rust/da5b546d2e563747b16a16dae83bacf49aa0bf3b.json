{"sha": "da5b546d2e563747b16a16dae83bacf49aa0bf3b", "node_id": "C_kwDOAAsO6NoAKGRhNWI1NDZkMmU1NjM3NDdiMTZhMTZkYWU4M2JhY2Y0OWFhMGJmM2I", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-27T15:32:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-27T15:32:01Z"}, "message": "Auto merge of #99731 - ehuss:let-chain-bracket-check, r=compiler-errors\n\nRemove let-chain close brace check.\n\n#98633 added some checks to forbid let-expressions that aren't in a let chain. This check looks at the preceding token to determine if it is a valid let-chain position. One of those tokens it checks is the close brace `}`. However, to my understanding, it is not possible for a let chain to be preceded by a close brace. This PR removes the check to avoid any confusion.\n\nThis is a followup to the discussion at https://github.com/rust-lang/rust/pull/98633#pullrequestreview-1030962803. It wasn't clear what issues the original PR ran into, but I have run the full set of CI tests and nothing failed.  I also can't conceive of a situation where this would be possible.  This doesn't reject any valid code, I'm just removing it to avoid confusion to anyone looking at this code in the future.", "tree": {"sha": "fbfe4d16bcb1895e0649013ec1a374475d42e0bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbfe4d16bcb1895e0649013ec1a374475d42e0bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da5b546d2e563747b16a16dae83bacf49aa0bf3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da5b546d2e563747b16a16dae83bacf49aa0bf3b", "html_url": "https://github.com/rust-lang/rust/commit/da5b546d2e563747b16a16dae83bacf49aa0bf3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da5b546d2e563747b16a16dae83bacf49aa0bf3b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a220937c283803bfd5d1155e4a81e6287089504", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a220937c283803bfd5d1155e4a81e6287089504", "html_url": "https://github.com/rust-lang/rust/commit/2a220937c283803bfd5d1155e4a81e6287089504"}, {"sha": "2ce28707497143f3370b11ee9b3565fb642a99fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ce28707497143f3370b11ee9b3565fb642a99fc", "html_url": "https://github.com/rust-lang/rust/commit/2ce28707497143f3370b11ee9b3565fb642a99fc"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "43b48613976642b6437b6be9d753973e58dab5c2", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/da5b546d2e563747b16a16dae83bacf49aa0bf3b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da5b546d2e563747b16a16dae83bacf49aa0bf3b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=da5b546d2e563747b16a16dae83bacf49aa0bf3b", "patch": "@@ -2356,10 +2356,7 @@ impl<'a> Parser<'a> {\n         let is_in_a_let_chains_context_but_nested_in_other_expr = self.let_expr_allowed\n             && !matches!(\n                 self.prev_token.kind,\n-                TokenKind::AndAnd\n-                    | TokenKind::CloseDelim(Delimiter::Brace)\n-                    | TokenKind::Ident(kw::If, _)\n-                    | TokenKind::Ident(kw::While, _)\n+                TokenKind::AndAnd | TokenKind::Ident(kw::If, _) | TokenKind::Ident(kw::While, _)\n             );\n         if !self.let_expr_allowed || is_in_a_let_chains_context_but_nested_in_other_expr {\n             self.struct_span_err(self.token.span, \"expected expression, found `let` statement\")"}]}