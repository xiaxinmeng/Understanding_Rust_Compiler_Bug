{"sha": "9891af348c01f8cf14ab1e10754faccad04fcaa5", "node_id": "C_kwDOAAsO6NoAKDk4OTFhZjM0OGMwMWY4Y2YxNGFiMWUxMDc1NGZhY2NhZDA0ZmNhYTU", "commit": {"author": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-11-01T18:07:51Z"}, "committer": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-11-20T12:45:12Z"}, "message": "missnamed_getters: Match owned methods", "tree": {"sha": "e899064ec2b8ca0db9119667af4f30cf9cea0a8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e899064ec2b8ca0db9119667af4f30cf9cea0a8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9891af348c01f8cf14ab1e10754faccad04fcaa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9891af348c01f8cf14ab1e10754faccad04fcaa5", "html_url": "https://github.com/rust-lang/rust/commit/9891af348c01f8cf14ab1e10754faccad04fcaa5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9891af348c01f8cf14ab1e10754faccad04fcaa5/comments", "author": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31b83d0895d37dc8a37e195f75bb9fe7de2c5e37", "url": "https://api.github.com/repos/rust-lang/rust/commits/31b83d0895d37dc8a37e195f75bb9fe7de2c5e37", "html_url": "https://github.com/rust-lang/rust/commit/31b83d0895d37dc8a37e195f75bb9fe7de2c5e37"}], "stats": {"total": 120, "additions": 110, "deletions": 10}, "files": [{"sha": "1f4eefc620bdcaff3d237e818d0783617aca5978", "filename": "clippy_lints/src/functions/missnamed_getters.rs", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9891af348c01f8cf14ab1e10754faccad04fcaa5/clippy_lints%2Fsrc%2Ffunctions%2Fmissnamed_getters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9891af348c01f8cf14ab1e10754faccad04fcaa5/clippy_lints%2Fsrc%2Ffunctions%2Fmissnamed_getters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fmissnamed_getters.rs?ref=9891af348c01f8cf14ab1e10754faccad04fcaa5", "patch": "@@ -35,21 +35,34 @@ pub fn check_fn(\n                 };\n             name\n         },\n+        ImplicitSelfKind::Imm | ImplicitSelfKind::Mut => name,\n         _ => return,\n     };\n \n     // Body must be &(mut) <self_data>.name\n-    // self_data is not neccessarilly self\n-    let (self_data, used_ident, span) = if_chain! {\n+    // self_data is not neccessarilly self, to also lint sub-getters, etc\u2026\n+\n+    let block_expr = if_chain! {\n         if let ExprKind::Block(block,_) = body.value.kind;\n         if block.stmts.is_empty();\n         if let Some(block_expr) = block.expr;\n-        // replace with while for as many addrof needed\n-        if let ExprKind::AddrOf(_,_, expr) = block_expr.kind;\n+        then {\n+            block_expr\n+        } else {\n+            return;\n+        }\n+    };\n+    let expr_span = block_expr.span;\n+\n+    let mut expr = block_expr;\n+    if let ExprKind::AddrOf(_, _, tmp) = expr.kind {\n+        expr = tmp;\n+    }\n+    let (self_data, used_ident) = if_chain! {\n         if let ExprKind::Field(self_data, ident) = expr.kind;\n         if ident.name.as_str() != name;\n         then {\n-            (self_data,ident,block_expr.span)\n+            (self_data,ident)\n         } else {\n             return;\n         }\n@@ -108,12 +121,12 @@ pub fn check_fn(\n         };\n \n     if cx.tcx.type_of(used_field.did) == cx.tcx.type_of(correct_field.did) {\n-        let snippet = snippet(cx, span, \"..\");\n+        let snippet = snippet(cx, expr_span, \"..\");\n         let sugg = format!(\"{}{name}\", snippet.strip_suffix(used_field.name.as_str()).unwrap());\n         span_lint_and_sugg(\n             cx,\n             MISSNAMED_GETTERS,\n-            span,\n+            expr_span,\n             \"getter function appears to return the wrong field\",\n             \"consider using\",\n             sugg,"}, {"sha": "f9c2351f833d24d8c1f0484d71e07f26f1263b65", "filename": "tests/ui/missnamed_getters.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/9891af348c01f8cf14ab1e10754faccad04fcaa5/tests%2Fui%2Fmissnamed_getters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9891af348c01f8cf14ab1e10754faccad04fcaa5/tests%2Fui%2Fmissnamed_getters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissnamed_getters.rs?ref=9891af348c01f8cf14ab1e10754faccad04fcaa5", "patch": "@@ -4,12 +4,32 @@\n struct A {\n     a: u8,\n     b: u8,\n+    c: u8,\n }\n \n impl A {\n     fn a(&self) -> &u8 {\n         &self.b\n     }\n+    fn a_mut(&mut self) -> &mut u8 {\n+        &mut self.b\n+    }\n+\n+    fn b(self) -> u8 {\n+        self.a\n+    }\n+\n+    fn b_mut(&mut self) -> &mut u8 {\n+        &mut self.a\n+    }\n+\n+    fn c(&self) -> &u8 {\n+        &self.b\n+    }\n+\n+    fn c_mut(&mut self) -> &mut u8 {\n+        &mut self.a\n+    }\n }\n \n union B {\n@@ -21,6 +41,25 @@ impl B {\n     unsafe fn a(&self) -> &u8 {\n         &self.b\n     }\n+    unsafe fn a_mut(&mut self) -> &mut u8 {\n+        &mut self.b\n+    }\n+\n+    unsafe fn b(self) -> u8 {\n+        self.a\n+    }\n+\n+    unsafe fn b_mut(&mut self) -> &mut u8 {\n+        &mut self.a\n+    }\n+\n+    unsafe fn c(&self) -> &u8 {\n+        &self.b\n+    }\n+\n+    unsafe fn c_mut(&mut self) -> &mut u8 {\n+        &mut self.a\n+    }\n }\n \n fn main() {"}, {"sha": "276096ade87f56c7a9c0ef0fb0d1421bd9daeff5", "filename": "tests/ui/missnamed_getters.stderr", "status": "modified", "additions": 51, "deletions": 3, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/9891af348c01f8cf14ab1e10754faccad04fcaa5/tests%2Fui%2Fmissnamed_getters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9891af348c01f8cf14ab1e10754faccad04fcaa5/tests%2Fui%2Fmissnamed_getters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissnamed_getters.stderr?ref=9891af348c01f8cf14ab1e10754faccad04fcaa5", "patch": "@@ -1,16 +1,64 @@\n error: getter function appears to return the wrong field\n-  --> $DIR/missnamed_getters.rs:11:9\n+  --> $DIR/missnamed_getters.rs:12:9\n    |\n LL |         &self.b\n    |         ^^^^^^^ help: consider using: `&self.a`\n    |\n    = note: `-D clippy::missnamed-getters` implied by `-D warnings`\n \n error: getter function appears to return the wrong field\n-  --> $DIR/missnamed_getters.rs:22:9\n+  --> $DIR/missnamed_getters.rs:15:9\n+   |\n+LL |         &mut self.b\n+   |         ^^^^^^^^^^^ help: consider using: `&mut self.a`\n+\n+error: getter function appears to return the wrong field\n+  --> $DIR/missnamed_getters.rs:19:9\n+   |\n+LL |         self.a\n+   |         ^^^^^^ help: consider using: `self.b`\n+\n+error: getter function appears to return the wrong field\n+  --> $DIR/missnamed_getters.rs:23:9\n+   |\n+LL |         &mut self.a\n+   |         ^^^^^^^^^^^ help: consider using: `&mut self.b`\n+\n+error: getter function appears to return the wrong field\n+  --> $DIR/missnamed_getters.rs:27:9\n+   |\n+LL |         &self.b\n+   |         ^^^^^^^ help: consider using: `&self.c`\n+\n+error: getter function appears to return the wrong field\n+  --> $DIR/missnamed_getters.rs:31:9\n+   |\n+LL |         &mut self.a\n+   |         ^^^^^^^^^^^ help: consider using: `&mut self.c`\n+\n+error: getter function appears to return the wrong field\n+  --> $DIR/missnamed_getters.rs:42:9\n    |\n LL |         &self.b\n    |         ^^^^^^^ help: consider using: `&self.a`\n \n-error: aborting due to 2 previous errors\n+error: getter function appears to return the wrong field\n+  --> $DIR/missnamed_getters.rs:45:9\n+   |\n+LL |         &mut self.b\n+   |         ^^^^^^^^^^^ help: consider using: `&mut self.a`\n+\n+error: getter function appears to return the wrong field\n+  --> $DIR/missnamed_getters.rs:49:9\n+   |\n+LL |         self.a\n+   |         ^^^^^^ help: consider using: `self.b`\n+\n+error: getter function appears to return the wrong field\n+  --> $DIR/missnamed_getters.rs:53:9\n+   |\n+LL |         &mut self.a\n+   |         ^^^^^^^^^^^ help: consider using: `&mut self.b`\n+\n+error: aborting due to 10 previous errors\n "}]}