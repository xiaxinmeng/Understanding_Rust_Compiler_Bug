{"sha": "49b99078b0ea08e37ed006e10f3e0705c63c4560", "node_id": "C_kwDOAAsO6NoAKDQ5Yjk5MDc4YjBlYTA4ZTM3ZWQwMDZlMTBmM2UwNzA1YzYzYzQ1NjA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-14T09:31:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-14T09:31:05Z"}, "message": "Rollup merge of #105491 - sulami:master, r=compiler-errors\n\nIllegal sized bounds: only suggest mutability change if needed\n\nIn a scenario like\n\n```rust\nstruct Type;\n\npub trait Trait {\n    fn function(&mut self)\n    where\n        Self: Sized;\n}\n\nimpl Trait for Type {\n    fn function(&mut self) {}\n}\n\nfn main() {\n    (&mut Type as &mut dyn Trait).function();\n}\n```\n\nthe problem is Sized, not the mutability of self. Thus don't emit the \"you need &T instead of &mut T\" note, or the other way around, as all it does is just invert the mutability of whatever was supplied.\n\nFixes #103622.", "tree": {"sha": "81d90838867a75298ef1c6cdd58cf99e75e1a703", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81d90838867a75298ef1c6cdd58cf99e75e1a703"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49b99078b0ea08e37ed006e10f3e0705c63c4560", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjmZfZCRBK7hj4Ov3rIwAAqakIADP55TC/mjzqPeyfkU+/5o/j\nqKBwuAkazG+haUOr99JoX9v5I87dmS6Sjc4SPQurHiDeBb23BePN0OZHmX4L9W37\nLoGej/THB41kPXZkNcsU344A1qgYY6nNR3NclGS0AqCPGqjrM7YGnItqxlSfz7DZ\nhgphF0/Cp6XxQaAXbUHbABaaQd8l7Kp/2/Qnxv78ea6rBtD7/GzKnktzEks1+8w5\ndZR0xMsgmWu1pwZPZAVX9QDfLLpUOzHTf3kzl0bwmquQ5Wr5nuvJbCFsn2Ua4f15\n3GuhDY9Mr0579BlUiLWWREMaZBBOtrEBZE6wTq6CUMGQQE3ACzTgpKblbaSb2Rs=\n=L115\n-----END PGP SIGNATURE-----\n", "payload": "tree 81d90838867a75298ef1c6cdd58cf99e75e1a703\nparent 8ed0384ca4651e914793dd8a05c9cdec9b2089b4\nparent 40ba1c902f0fa4f288242f573408f122c71945ce\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671010265 +0100\ncommitter GitHub <noreply@github.com> 1671010265 +0100\n\nRollup merge of #105491 - sulami:master, r=compiler-errors\n\nIllegal sized bounds: only suggest mutability change if needed\n\nIn a scenario like\n\n```rust\nstruct Type;\n\npub trait Trait {\n    fn function(&mut self)\n    where\n        Self: Sized;\n}\n\nimpl Trait for Type {\n    fn function(&mut self) {}\n}\n\nfn main() {\n    (&mut Type as &mut dyn Trait).function();\n}\n```\n\nthe problem is Sized, not the mutability of self. Thus don't emit the \"you need &T instead of &mut T\" note, or the other way around, as all it does is just invert the mutability of whatever was supplied.\n\nFixes #103622.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49b99078b0ea08e37ed006e10f3e0705c63c4560", "html_url": "https://github.com/rust-lang/rust/commit/49b99078b0ea08e37ed006e10f3e0705c63c4560", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49b99078b0ea08e37ed006e10f3e0705c63c4560/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ed0384ca4651e914793dd8a05c9cdec9b2089b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed0384ca4651e914793dd8a05c9cdec9b2089b4", "html_url": "https://github.com/rust-lang/rust/commit/8ed0384ca4651e914793dd8a05c9cdec9b2089b4"}, {"sha": "40ba1c902f0fa4f288242f573408f122c71945ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/40ba1c902f0fa4f288242f573408f122c71945ce", "html_url": "https://github.com/rust-lang/rust/commit/40ba1c902f0fa4f288242f573408f122c71945ce"}], "stats": {"total": 112, "additions": 111, "deletions": 1}, "files": [{"sha": "a7eae392de1dd1fccefb6d46a0b3ecd1c27795ec", "filename": "compiler/rustc_hir_typeck/src/method/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49b99078b0ea08e37ed006e10f3e0705c63c4560/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b99078b0ea08e37ed006e10f3e0705c63c4560/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs?ref=49b99078b0ea08e37ed006e10f3e0705c63c4560", "patch": "@@ -209,7 +209,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     ProbeScope::TraitsInScope,\n                 ) {\n                     Ok(ref new_pick) if pick.differs_from(new_pick) => {\n-                        needs_mut = true;\n+                        needs_mut = new_pick.self_ty.ref_mutability() != self_ty.ref_mutability();\n                     }\n                     _ => {}\n                 }"}, {"sha": "deb84f6fe97cfd5d4d2560ec586c2d16f772847b", "filename": "src/test/ui/illegal-sized-bound/mutability-mismatch.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/49b99078b0ea08e37ed006e10f3e0705c63c4560/src%2Ftest%2Fui%2Fillegal-sized-bound%2Fmutability-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b99078b0ea08e37ed006e10f3e0705c63c4560/src%2Ftest%2Fui%2Fillegal-sized-bound%2Fmutability-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fillegal-sized-bound%2Fmutability-mismatch.rs?ref=49b99078b0ea08e37ed006e10f3e0705c63c4560", "patch": "@@ -0,0 +1,34 @@\n+struct MutType;\n+\n+pub trait MutTrait {\n+    fn function(&mut self)\n+    where\n+        Self: Sized;\n+    //~^ this has a `Sized` requirement\n+}\n+\n+impl MutTrait for MutType {\n+    fn function(&mut self) {}\n+}\n+\n+struct Type;\n+\n+pub trait Trait {\n+    fn function(&self)\n+    where\n+        Self: Sized;\n+    //~^ this has a `Sized` requirement\n+}\n+\n+impl Trait for Type {\n+    fn function(&self) {}\n+}\n+\n+fn main() {\n+    (&MutType as &dyn MutTrait).function();\n+    //~^ ERROR the `function` method cannot be invoked on a trait object\n+    //~| NOTE you need `&mut dyn MutTrait` instead of `&dyn MutTrait`\n+    (&mut Type as &mut dyn Trait).function();\n+    //~^ ERROR the `function` method cannot be invoked on a trait object\n+    //~| NOTE you need `&dyn Trait` instead of `&mut dyn Trait`\n+}"}, {"sha": "dbbf79a4f1a034f08b771dc12e1af7b34e0b7532", "filename": "src/test/ui/illegal-sized-bound/mutability-mismatch.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/49b99078b0ea08e37ed006e10f3e0705c63c4560/src%2Ftest%2Fui%2Fillegal-sized-bound%2Fmutability-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49b99078b0ea08e37ed006e10f3e0705c63c4560/src%2Ftest%2Fui%2Fillegal-sized-bound%2Fmutability-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fillegal-sized-bound%2Fmutability-mismatch.stderr?ref=49b99078b0ea08e37ed006e10f3e0705c63c4560", "patch": "@@ -0,0 +1,24 @@\n+error: the `function` method cannot be invoked on a trait object\n+  --> $DIR/mutability-mismatch.rs:28:33\n+   |\n+LL |         Self: Sized;\n+   |               ----- this has a `Sized` requirement\n+...\n+LL |     (&MutType as &dyn MutTrait).function();\n+   |                                 ^^^^^^^^\n+   |\n+   = note: you need `&mut dyn MutTrait` instead of `&dyn MutTrait`\n+\n+error: the `function` method cannot be invoked on a trait object\n+  --> $DIR/mutability-mismatch.rs:31:35\n+   |\n+LL |         Self: Sized;\n+   |               ----- this has a `Sized` requirement\n+...\n+LL |     (&mut Type as &mut dyn Trait).function();\n+   |                                   ^^^^^^^^\n+   |\n+   = note: you need `&dyn Trait` instead of `&mut dyn Trait`\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "7abd27ef98318b1117790aebf4f486c53937e930", "filename": "src/test/ui/illegal-sized-bound/regular.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/49b99078b0ea08e37ed006e10f3e0705c63c4560/src%2Ftest%2Fui%2Fillegal-sized-bound%2Fregular.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b99078b0ea08e37ed006e10f3e0705c63c4560/src%2Ftest%2Fui%2Fillegal-sized-bound%2Fregular.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fillegal-sized-bound%2Fregular.rs?ref=49b99078b0ea08e37ed006e10f3e0705c63c4560", "patch": "@@ -0,0 +1,32 @@\n+struct MutType;\n+\n+pub trait MutTrait {\n+    fn function(&mut self)\n+    where\n+        Self: Sized;\n+    //~^ this has a `Sized` requirement\n+}\n+\n+impl MutTrait for MutType {\n+    fn function(&mut self) {}\n+}\n+\n+struct Type;\n+\n+pub trait Trait {\n+    fn function(&self)\n+    where\n+        Self: Sized;\n+    //~^ this has a `Sized` requirement\n+}\n+\n+impl Trait for Type {\n+    fn function(&self) {}\n+}\n+\n+fn main() {\n+    (&mut MutType as &mut dyn MutTrait).function();\n+    //~^ ERROR the `function` method cannot be invoked on a trait object\n+    (&Type as &dyn Trait).function();\n+    //~^ ERROR the `function` method cannot be invoked on a trait object\n+}"}, {"sha": "7f3744145d92723c22d903d4cb097c6a98b9a6bb", "filename": "src/test/ui/illegal-sized-bound/regular.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/49b99078b0ea08e37ed006e10f3e0705c63c4560/src%2Ftest%2Fui%2Fillegal-sized-bound%2Fregular.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49b99078b0ea08e37ed006e10f3e0705c63c4560/src%2Ftest%2Fui%2Fillegal-sized-bound%2Fregular.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fillegal-sized-bound%2Fregular.stderr?ref=49b99078b0ea08e37ed006e10f3e0705c63c4560", "patch": "@@ -0,0 +1,20 @@\n+error: the `function` method cannot be invoked on a trait object\n+  --> $DIR/regular.rs:28:41\n+   |\n+LL |         Self: Sized;\n+   |               ----- this has a `Sized` requirement\n+...\n+LL |     (&mut MutType as &mut dyn MutTrait).function();\n+   |                                         ^^^^^^^^\n+\n+error: the `function` method cannot be invoked on a trait object\n+  --> $DIR/regular.rs:30:27\n+   |\n+LL |         Self: Sized;\n+   |               ----- this has a `Sized` requirement\n+...\n+LL |     (&Type as &dyn Trait).function();\n+   |                           ^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}