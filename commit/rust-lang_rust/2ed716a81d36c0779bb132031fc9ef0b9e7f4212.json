{"sha": "2ed716a81d36c0779bb132031fc9ef0b9e7f4212", "node_id": "C_kwDOAAsO6NoAKDJlZDcxNmE4MWQzNmMwNzc5YmIxMzIwMzFmYzllZjBiOWU3ZjQyMTI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-09-03T05:03:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-03T05:03:04Z"}, "message": "Rollup merge of #99736 - lopopolo:lopopolo/gh-80996-partial-stabilization-bounds-as-ref, r=dtolnay\n\nPartially stabilize `bound_as_ref` by stabilizing `Bound::as_ref`\n\nStabilizing `Bound::as_ref` will simplify the implementation for `RangeBounds<usize>` for custom range types:\n\n```rust\nimpl RangeBounds<usize> for Region {\n    fn start_bound(&self) -> Bound<&usize> {\n        // TODO: Use `self.start.as_ref()` when upstream `std` stabilizes:\n        // https://github.com/rust-lang/rust/issues/80996\n        match self.start {\n            Bound::Included(ref bound) => Bound::Included(bound),\n            Bound::Excluded(ref bound) => Bound::Excluded(bound),\n            Bound::Unbounded => Bound::Unbounded,\n        }\n    }\n\n    fn end_bound(&self) -> Bound<&usize> {\n        // TODO: Use `self.end.as_ref()` when upstream `std` stabilizes:\n        // https://github.com/rust-lang/rust/issues/80996\n        match self.end {\n            Bound::Included(ref bound) => Bound::Included(bound),\n            Bound::Excluded(ref bound) => Bound::Excluded(bound),\n            Bound::Unbounded => Bound::Unbounded,\n        }\n    }\n}\n```\n\nSee:\n\n- #80996\n- https://github.com/rust-lang/rust/issues/80996#issuecomment-1194575470\n\ncc `@yaahc` who suggested partial stabilization.", "tree": {"sha": "789f4f9b6602e768a2fe1ba4b186fbdf8aff7252", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/789f4f9b6602e768a2fe1ba4b186fbdf8aff7252"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ed716a81d36c0779bb132031fc9ef0b9e7f4212", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjEuAICRBK7hj4Ov3rIwAA0+YIAIm6q81B3nA5jTkBaRQ9G8Z6\nwY2VkYoeCw/3NVc1QndaOLdhwhX4bZIzNZ8w+PavI8DVSWGGyVE7lwQ9YapRbm18\nfQ3WHmYTXXj31FDBrarK6HpJqv3n67eZbsbufidUculywtdkdecRv5bRAkNEJgve\n2BlzVPmLooKqeEnQwLopmKmlCPTdoQ/oj3H+e07JNOyzoaD2E9QpcpXCHyGwhRLa\nPOehy94pWCLCc8lXLvz5zO077QV5vtTWFNYNvEWac2XkR/o+UiN/R0dTUREy49YB\nretGqwPOLiC3kQCyV629GKpp5oX94jqd4l6y8qbcG2EFSLLrJjCprKaKY0jYzf8=\n=k95c\n-----END PGP SIGNATURE-----\n", "payload": "tree 789f4f9b6602e768a2fe1ba4b186fbdf8aff7252\nparent 0209485578807b8084127f12d57771300edff87a\nparent 773df6788018b2cd6267b82bd2b5712cbd223f44\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1662181384 +0530\ncommitter GitHub <noreply@github.com> 1662181384 +0530\n\nRollup merge of #99736 - lopopolo:lopopolo/gh-80996-partial-stabilization-bounds-as-ref, r=dtolnay\n\nPartially stabilize `bound_as_ref` by stabilizing `Bound::as_ref`\n\nStabilizing `Bound::as_ref` will simplify the implementation for `RangeBounds<usize>` for custom range types:\n\n```rust\nimpl RangeBounds<usize> for Region {\n    fn start_bound(&self) -> Bound<&usize> {\n        // TODO: Use `self.start.as_ref()` when upstream `std` stabilizes:\n        // https://github.com/rust-lang/rust/issues/80996\n        match self.start {\n            Bound::Included(ref bound) => Bound::Included(bound),\n            Bound::Excluded(ref bound) => Bound::Excluded(bound),\n            Bound::Unbounded => Bound::Unbounded,\n        }\n    }\n\n    fn end_bound(&self) -> Bound<&usize> {\n        // TODO: Use `self.end.as_ref()` when upstream `std` stabilizes:\n        // https://github.com/rust-lang/rust/issues/80996\n        match self.end {\n            Bound::Included(ref bound) => Bound::Included(bound),\n            Bound::Excluded(ref bound) => Bound::Excluded(bound),\n            Bound::Unbounded => Bound::Unbounded,\n        }\n    }\n}\n```\n\nSee:\n\n- #80996\n- https://github.com/rust-lang/rust/issues/80996#issuecomment-1194575470\n\ncc `@yaahc` who suggested partial stabilization.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ed716a81d36c0779bb132031fc9ef0b9e7f4212", "html_url": "https://github.com/rust-lang/rust/commit/2ed716a81d36c0779bb132031fc9ef0b9e7f4212", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ed716a81d36c0779bb132031fc9ef0b9e7f4212/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0209485578807b8084127f12d57771300edff87a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0209485578807b8084127f12d57771300edff87a", "html_url": "https://github.com/rust-lang/rust/commit/0209485578807b8084127f12d57771300edff87a"}, {"sha": "773df6788018b2cd6267b82bd2b5712cbd223f44", "url": "https://api.github.com/repos/rust-lang/rust/commits/773df6788018b2cd6267b82bd2b5712cbd223f44", "html_url": "https://github.com/rust-lang/rust/commit/773df6788018b2cd6267b82bd2b5712cbd223f44"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "728202835818436bcc8e1c05438c548603f091c9", "filename": "library/core/src/ops/range.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ed716a81d36c0779bb132031fc9ef0b9e7f4212/library%2Fcore%2Fsrc%2Fops%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ed716a81d36c0779bb132031fc9ef0b9e7f4212/library%2Fcore%2Fsrc%2Fops%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Frange.rs?ref=2ed716a81d36c0779bb132031fc9ef0b9e7f4212", "patch": "@@ -677,7 +677,7 @@ pub enum Bound<T> {\n impl<T> Bound<T> {\n     /// Converts from `&Bound<T>` to `Bound<&T>`.\n     #[inline]\n-    #[unstable(feature = \"bound_as_ref\", issue = \"80996\")]\n+    #[stable(feature = \"bound_as_ref_shared\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub fn as_ref(&self) -> Bound<&T> {\n         match *self {\n             Included(ref x) => Included(x),"}]}