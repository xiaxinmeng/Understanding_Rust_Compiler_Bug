{"sha": "68a4f7d9babb0c638f3425ced08e13f9fbfdcf56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4YTRmN2Q5YmFiYjBjNjM4ZjM0MjVjZWQwOGUxM2Y5ZmJmZGNmNTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-24T20:42:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-24T20:42:02Z"}, "message": "auto merge of #12523 : alexcrichton/rust/ignore-some-windows-tests, r=pnkfelix\n\nThese two tests are notoriously flaky on the windows bots right now, so I'm\r\nignoring them until I can investigate them some more. The truncate_works test\r\nhas been flaky for quite some time, but it has gotten much worse recently. The\r\ntest_exists test has been flaky since the recent std::run rewrite landed.\r\nFinally, the \"unix pipe\" test failure is a recent discovery on the try bots. I\r\nhaven't seen this failing much, but better safe than sorry!\r\n\r\ncc #12516", "tree": {"sha": "474472bd05e4e9570c3b008768939407c247ffa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/474472bd05e4e9570c3b008768939407c247ffa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68a4f7d9babb0c638f3425ced08e13f9fbfdcf56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68a4f7d9babb0c638f3425ced08e13f9fbfdcf56", "html_url": "https://github.com/rust-lang/rust/commit/68a4f7d9babb0c638f3425ced08e13f9fbfdcf56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68a4f7d9babb0c638f3425ced08e13f9fbfdcf56/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "672097753a217d4990129cbdfab16ef8c9b08b21", "url": "https://api.github.com/repos/rust-lang/rust/commits/672097753a217d4990129cbdfab16ef8c9b08b21", "html_url": "https://github.com/rust-lang/rust/commit/672097753a217d4990129cbdfab16ef8c9b08b21"}, {"sha": "13a8fcd3e9cfc49e8cc1d50d132188ded311f9db", "url": "https://api.github.com/repos/rust-lang/rust/commits/13a8fcd3e9cfc49e8cc1d50d132188ded311f9db", "html_url": "https://github.com/rust-lang/rust/commit/13a8fcd3e9cfc49e8cc1d50d132188ded311f9db"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "ffccb0e8cb152c8281a75e834e0d5a1a97e41c70", "filename": "src/libstd/io/fs.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/68a4f7d9babb0c638f3425ced08e13f9fbfdcf56/src%2Flibstd%2Fio%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68a4f7d9babb0c638f3425ced08e13f9fbfdcf56/src%2Flibstd%2Fio%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ffs.rs?ref=68a4f7d9babb0c638f3425ced08e13f9fbfdcf56", "patch": "@@ -1106,9 +1106,8 @@ mod test {\n         file.fsync().unwrap();\n         file.datasync().unwrap();\n         drop(file);\n-    })\n+    } #[ignore(cfg(windows))])\n \n-    #[ignore(cfg(windows))] // FIXME(#11638)\n     iotest!(fn truncate_works() {\n         let tmpdir = tmpdir();\n         let path = tmpdir.join(\"in.txt\");\n@@ -1138,7 +1137,7 @@ mod test {\n         assert_eq!(File::open(&path).read_to_end().unwrap(),\n                    (bytes!(\"fo\", 0, 0, 0, 0, \"wut\")).to_owned());\n         drop(file);\n-    })\n+    } #[ignore(cfg(windows))]) // FIXME(#11638)\n \n     iotest!(fn open_flavors() {\n         let tmpdir = tmpdir();"}, {"sha": "c3e3d72c6721ec6a802abb7990fd1e30052571ec", "filename": "src/libstd/io/net/unix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68a4f7d9babb0c638f3425ced08e13f9fbfdcf56/src%2Flibstd%2Fio%2Fnet%2Funix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68a4f7d9babb0c638f3425ced08e13f9fbfdcf56/src%2Flibstd%2Fio%2Fnet%2Funix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Funix.rs?ref=68a4f7d9babb0c638f3425ced08e13f9fbfdcf56", "patch": "@@ -192,7 +192,7 @@ mod tests {\n         }, proc(_client) {\n             // drop the client\n         })\n-    })\n+    } #[ignore(cfg(windows))]) // FIXME(#12516)\n \n     iotest!(fn write_begone() {\n         smalltest(proc(mut server) {"}, {"sha": "b782cf1d21ab7823c56bb9e3b1b55b32fb12d41d", "filename": "src/libstd/io/process.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/68a4f7d9babb0c638f3425ced08e13f9fbfdcf56/src%2Flibstd%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68a4f7d9babb0c638f3425ced08e13f9fbfdcf56/src%2Flibstd%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fprocess.rs?ref=68a4f7d9babb0c638f3425ced08e13f9fbfdcf56", "patch": "@@ -814,7 +814,10 @@ mod tests {\n     }\n     #[cfg(windows)]\n     pub fn sleeper() -> Process {\n-        Process::new(\"timeout\", [~\"1000\"]).unwrap()\n+        // There's a `timeout` command on windows, but it doesn't like having\n+        // its output piped, so instead just ping ourselves a few times with\n+        // gaps inbetweeen so we're sure this process is alive for awhile\n+        Process::new(\"ping\", [~\"127.0.0.1\", ~\"-n\", ~\"1000\"]).unwrap()\n     }\n \n     iotest!(fn test_kill() {\n@@ -823,7 +826,6 @@ mod tests {\n         assert!(!p.wait().success());\n     })\n \n-    #[ignore(cfg(windows))]\n     iotest!(fn test_exists() {\n         let mut p = sleeper();\n         assert!(Process::kill(p.id(), 0).is_ok());"}]}