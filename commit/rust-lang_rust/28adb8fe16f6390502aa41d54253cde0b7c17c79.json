{"sha": "28adb8fe16f6390502aa41d54253cde0b7c17c79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YWRiOGZlMTZmNjM5MDUwMmFhNDFkNTQyNTNjZGUwYjdjMTdjNzk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-23T13:07:01Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-23T13:07:01Z"}, "message": "Reduce visibility", "tree": {"sha": "d9420b04354c19b1a27f727d56bf8fcfeed77c82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9420b04354c19b1a27f727d56bf8fcfeed77c82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28adb8fe16f6390502aa41d54253cde0b7c17c79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28adb8fe16f6390502aa41d54253cde0b7c17c79", "html_url": "https://github.com/rust-lang/rust/commit/28adb8fe16f6390502aa41d54253cde0b7c17c79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28adb8fe16f6390502aa41d54253cde0b7c17c79/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85532e2df3f713f0fb9096328e86ec7e74934c12", "url": "https://api.github.com/repos/rust-lang/rust/commits/85532e2df3f713f0fb9096328e86ec7e74934c12", "html_url": "https://github.com/rust-lang/rust/commit/85532e2df3f713f0fb9096328e86ec7e74934c12"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d9e31ac20b4faee1ea942c7607d56867d9390870", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/28adb8fe16f6390502aa41d54253cde0b7c17c79/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28adb8fe16f6390502aa41d54253cde0b7c17c79/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=28adb8fe16f6390502aa41d54253cde0b7c17c79", "patch": "@@ -262,14 +262,14 @@ pub enum MacroCallKind {\n }\n \n impl MacroCallKind {\n-    pub fn file_id(&self) -> HirFileId {\n+    fn file_id(&self) -> HirFileId {\n         match self {\n             MacroCallKind::FnLike(ast_id) => ast_id.file_id,\n             MacroCallKind::Attr(ast_id, _) => ast_id.file_id,\n         }\n     }\n \n-    pub fn node(&self, db: &dyn db::AstDatabase) -> InFile<SyntaxNode> {\n+    fn node(&self, db: &dyn db::AstDatabase) -> InFile<SyntaxNode> {\n         match self {\n             MacroCallKind::FnLike(ast_id) => ast_id.with_value(ast_id.to_node(db).syntax().clone()),\n             MacroCallKind::Attr(ast_id, _) => {\n@@ -278,7 +278,7 @@ impl MacroCallKind {\n         }\n     }\n \n-    pub fn arg(&self, db: &dyn db::AstDatabase) -> Option<SyntaxNode> {\n+    fn arg(&self, db: &dyn db::AstDatabase) -> Option<SyntaxNode> {\n         match self {\n             MacroCallKind::FnLike(ast_id) => {\n                 Some(ast_id.to_node(db).token_tree()?.syntax().clone())"}]}