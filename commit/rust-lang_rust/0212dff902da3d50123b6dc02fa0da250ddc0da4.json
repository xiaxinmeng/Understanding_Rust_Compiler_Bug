{"sha": "0212dff902da3d50123b6dc02fa0da250ddc0da4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMTJkZmY5MDJkYTNkNTAxMjNiNmRjMDJmYTBkYTI1MGRkYzBkYTQ=", "commit": {"author": {"name": "Jim Apple", "email": "jbapple+rust@google.com", "date": "2014-12-02T02:12:48Z"}, "committer": {"name": "Jim Apple", "email": "jbapple+rust@google.com", "date": "2014-12-02T02:12:48Z"}, "message": "Pop on binary heaps does not have constant time complexity.\n\npop calls siftdown, siftdown calls siftdown_range, and siftdown_range\nloops on an index that can start as low as 0 and approximately doubles\neach iteration.", "tree": {"sha": "7508a74326321e9069e38bceeaec0c639415adac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7508a74326321e9069e38bceeaec0c639415adac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0212dff902da3d50123b6dc02fa0da250ddc0da4", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0212dff902da3d50123b6dc02fa0da250ddc0da4", "html_url": "https://github.com/rust-lang/rust/commit/0212dff902da3d50123b6dc02fa0da250ddc0da4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0212dff902da3d50123b6dc02fa0da250ddc0da4/comments", "author": null, "committer": null, "parents": [{"sha": "21ba1d5e58144c83093a8cbb467a6c9cb12fc4a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/21ba1d5e58144c83093a8cbb467a6c9cb12fc4a1", "html_url": "https://github.com/rust-lang/rust/commit/21ba1d5e58144c83093a8cbb467a6c9cb12fc4a1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "330b93929746c037c7a6c591450765c3fd1dab78", "filename": "src/libcollections/binary_heap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0212dff902da3d50123b6dc02fa0da250ddc0da4/src%2Flibcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0212dff902da3d50123b6dc02fa0da250ddc0da4/src%2Flibcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbinary_heap.rs?ref=0212dff902da3d50123b6dc02fa0da250ddc0da4", "patch": "@@ -10,8 +10,8 @@\n \n //! A priority queue implemented with a binary heap.\n //!\n-//! Insertions have `O(log n)` time complexity and checking or popping the largest element is\n-//! `O(1)`. Converting a vector to a priority queue can be done in-place, and has `O(n)`\n+//! Insertion and popping the largest element have `O(log n)` time complexity. Checking the largest\n+//! element is `O(1)`. Converting a vector to a priority queue can be done in-place, and has `O(n)`\n //! complexity. A priority queue can also be converted to a sorted vector in-place, allowing it to\n //! be used for an `O(n log n)` in-place heapsort.\n //!"}]}