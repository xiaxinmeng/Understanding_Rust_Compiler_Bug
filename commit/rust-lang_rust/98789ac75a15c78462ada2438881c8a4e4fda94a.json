{"sha": "98789ac75a15c78462ada2438881c8a4e4fda94a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4Nzg5YWM3NWExNWM3ODQ2MmFkYTI0Mzg4ODFjOGE0ZTRmZGE5NGE=", "commit": {"author": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-07-01T19:03:12Z"}, "committer": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-07-01T19:06:07Z"}, "message": "Simplify Weak::as_ptr impl", "tree": {"sha": "183bd575c20041f15c7ee957d9cfa2f02e214be6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/183bd575c20041f15c7ee957d9cfa2f02e214be6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98789ac75a15c78462ada2438881c8a4e4fda94a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98789ac75a15c78462ada2438881c8a4e4fda94a", "html_url": "https://github.com/rust-lang/rust/commit/98789ac75a15c78462ada2438881c8a4e4fda94a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98789ac75a15c78462ada2438881c8a4e4fda94a/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac40d1eff33cc6789d3c02f4a21477368574cf5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac40d1eff33cc6789d3c02f4a21477368574cf5e", "html_url": "https://github.com/rust-lang/rust/commit/ac40d1eff33cc6789d3c02f4a21477368574cf5e"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "4d77779b2091dbccd8cb32926fb3043044f3d3af", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/98789ac75a15c78462ada2438881c8a4e4fda94a/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98789ac75a15c78462ada2438881c8a4e4fda94a/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=98789ac75a15c78462ada2438881c8a4e4fda94a", "patch": "@@ -1703,7 +1703,6 @@ impl<T> Weak<T> {\n     #[stable(feature = \"weak_into_raw\", since = \"1.45.0\")]\n     pub fn as_ptr(&self) -> *const T {\n         let ptr: *mut RcBox<T> = NonNull::as_ptr(self.ptr);\n-        let fake_ptr = ptr as *mut T;\n \n         // SAFETY: we must offset the pointer manually, and said pointer may be\n         // a dangling weak (usize::MAX). data_offset is safe to call, because we\n@@ -1712,8 +1711,8 @@ impl<T> Weak<T> {\n         // is used so that we can use the same code path for the non-dangling\n         // unsized case and the potentially dangling sized case.\n         unsafe {\n-            let offset = data_offset(fake_ptr);\n-            set_data_ptr(fake_ptr, (ptr as *mut u8).wrapping_offset(offset))\n+            let offset = data_offset(ptr as *mut T);\n+            set_data_ptr(ptr as *mut T, (ptr as *mut u8).wrapping_offset(offset))\n         }\n     }\n "}, {"sha": "160abe7210c77380b37c452bef55fb2e7bedd05d", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/98789ac75a15c78462ada2438881c8a4e4fda94a/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98789ac75a15c78462ada2438881c8a4e4fda94a/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=98789ac75a15c78462ada2438881c8a4e4fda94a", "patch": "@@ -1471,7 +1471,6 @@ impl<T> Weak<T> {\n     #[stable(feature = \"weak_into_raw\", since = \"1.45.0\")]\n     pub fn as_ptr(&self) -> *const T {\n         let ptr: *mut ArcInner<T> = NonNull::as_ptr(self.ptr);\n-        let fake_ptr = ptr as *mut T;\n \n         // SAFETY: we must offset the pointer manually, and said pointer may be\n         // a dangling weak (usize::MAX). data_offset is safe to call, because we\n@@ -1480,8 +1479,8 @@ impl<T> Weak<T> {\n         // is used so that we can use the same code path for the non-dangling\n         // unsized case and the potentially dangling sized case.\n         unsafe {\n-            let offset = data_offset(fake_ptr);\n-            set_data_ptr(fake_ptr, (ptr as *mut u8).wrapping_offset(offset))\n+            let offset = data_offset(ptr as *mut T);\n+            set_data_ptr(ptr as *mut T, (ptr as *mut u8).wrapping_offset(offset))\n         }\n     }\n "}]}