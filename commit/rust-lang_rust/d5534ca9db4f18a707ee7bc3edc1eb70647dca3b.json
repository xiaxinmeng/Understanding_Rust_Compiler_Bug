{"sha": "d5534ca9db4f18a707ee7bc3edc1eb70647dca3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NTM0Y2E5ZGI0ZjE4YTcwN2VlN2JjM2VkYzFlYjcwNjQ3ZGNhM2I=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-08-29T12:46:03Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-08-29T12:46:03Z"}, "message": "bring back sugg::range", "tree": {"sha": "fb10f7b43b5613b88e23ab51431d9680fce45708", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb10f7b43b5613b88e23ab51431d9680fce45708"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5534ca9db4f18a707ee7bc3edc1eb70647dca3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5534ca9db4f18a707ee7bc3edc1eb70647dca3b", "html_url": "https://github.com/rust-lang/rust/commit/d5534ca9db4f18a707ee7bc3edc1eb70647dca3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5534ca9db4f18a707ee7bc3edc1eb70647dca3b/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05f637cf88a4555ac8e521811feb6c598c5dbee1", "url": "https://api.github.com/repos/rust-lang/rust/commits/05f637cf88a4555ac8e521811feb6c598c5dbee1", "html_url": "https://github.com/rust-lang/rust/commit/05f637cf88a4555ac8e521811feb6c598c5dbee1"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "8b1b8a31ac225e52e2f6b17a3e579e86527df018", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d5534ca9db4f18a707ee7bc3edc1eb70647dca3b/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5534ca9db4f18a707ee7bc3edc1eb70647dca3b/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=d5534ca9db4f18a707ee7bc3edc1eb70647dca3b", "patch": "@@ -175,6 +175,16 @@ impl<'a> Sugg<'a> {\n         make_unop(\"&mut *\", self)\n     }\n \n+    /// Convenience method to create the `<lhs>..<rhs>` or `<lhs>...<rhs>`\n+    /// suggestion.\n+    #[allow(dead_code)]\n+    pub fn range(self, end: &Self, limit: ast::RangeLimits) -> Sugg<'static> {\n+        match limit {\n+            ast::RangeLimits::HalfOpen => make_assoc(AssocOp::DotDot, &self, end),\n+            ast::RangeLimits::Closed => make_assoc(AssocOp::DotDotEq, &self, end),\n+        }\n+    }\n+\n     /// Add parenthesis to any expression that might need them. Suitable to the\n     /// `self` argument of\n     /// a method call (eg. to build `bar.foo()` or `(1 + 2).foo()`)."}]}