{"sha": "3ce531f95dec87a1f59e9347fdd6c250e36b489d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZTUzMWY5NWRlYzg3YTFmNTllOTM0N2ZkZDZjMjUwZTM2YjQ4OWQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-26T13:40:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-26T13:40:24Z"}, "message": "cleanup: add result alias", "tree": {"sha": "c2a9e5dcc6875ce9c3f58290f5ef3d2301fe66e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2a9e5dcc6875ce9c3f58290f5ef3d2301fe66e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ce531f95dec87a1f59e9347fdd6c250e36b489d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ce531f95dec87a1f59e9347fdd6c250e36b489d", "html_url": "https://github.com/rust-lang/rust/commit/3ce531f95dec87a1f59e9347fdd6c250e36b489d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ce531f95dec87a1f59e9347fdd6c250e36b489d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "390a20787e0605e979b5eb8829e2ffddc3e6b1f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/390a20787e0605e979b5eb8829e2ffddc3e6b1f9", "html_url": "https://github.com/rust-lang/rust/commit/390a20787e0605e979b5eb8829e2ffddc3e6b1f9"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "279fa5da8d2e9c94a18ff31706d131941bddd339", "filename": "crates/ra_vfs/src/io.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3ce531f95dec87a1f59e9347fdd6c250e36b489d/crates%2Fra_vfs%2Fsrc%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ce531f95dec87a1f59e9347fdd6c250e36b489d/crates%2Fra_vfs%2Fsrc%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Fio.rs?ref=3ce531f95dec87a1f59e9347fdd6c250e36b489d", "patch": "@@ -1,11 +1,11 @@\n use std::{\n     fs,\n+    thread,\n     path::{Path, PathBuf},\n     sync::{mpsc, Arc},\n-    thread,\n     time::Duration,\n };\n-use crossbeam_channel::{Receiver, Sender, SendError};\n+use crossbeam_channel::{Receiver, Sender};\n use relative_path::RelativePathBuf;\n use thread_worker::WorkerHandle;\n use walkdir::WalkDir;\n@@ -14,6 +14,8 @@ use notify::{DebouncedEvent, RecommendedWatcher, RecursiveMode, Watcher as _Watc\n \n use crate::{RootConfig, Roots, VfsRoot};\n \n+type Result<T> = std::result::Result<T, crossbeam_channel::SendError<TaskResult>>;\n+\n pub(crate) enum Task {\n     AddRoot {\n         root: VfsRoot,\n@@ -112,11 +114,7 @@ impl Worker {\n     }\n }\n \n-fn watch_root(\n-    woker: &WatcherCtx,\n-    root: VfsRoot,\n-    config: Arc<RootConfig>,\n-) -> Result<(), SendError<TaskResult>> {\n+fn watch_root(woker: &WatcherCtx, root: VfsRoot, config: Arc<RootConfig>) -> Result<()> {\n     let mut guard = woker.watcher.lock();\n     log::debug!(\"loading {} ...\", config.root.as_path().display());\n     let files = watch_recursive(guard.as_mut(), config.root.as_path(), &*config)\n@@ -142,7 +140,7 @@ struct WatcherCtx {\n }\n \n impl WatcherCtx {\n-    fn handle_debounced_event(&self, ev: DebouncedEvent) -> Result<(), SendError<TaskResult>> {\n+    fn handle_debounced_event(&self, ev: DebouncedEvent) -> Result<()> {\n         match ev {\n             DebouncedEvent::NoticeWrite(_)\n             | DebouncedEvent::NoticeRemove(_)\n@@ -173,7 +171,7 @@ impl WatcherCtx {\n         Ok(())\n     }\n \n-    fn handle_change(&self, path: PathBuf, kind: ChangeKind) -> Result<(), SendError<TaskResult>> {\n+    fn handle_change(&self, path: PathBuf, kind: ChangeKind) -> Result<()> {\n         let (root, rel_path) = match self.roots.find(&path) {\n             None => return Ok(()),\n             Some(it) => it,"}]}