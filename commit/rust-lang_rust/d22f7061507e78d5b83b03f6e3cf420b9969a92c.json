{"sha": "d22f7061507e78d5b83b03f6e3cf420b9969a92c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMmY3MDYxNTA3ZTc4ZDViODNiMDNmNmUzY2Y0MjBiOTk2OWE5MmM=", "commit": {"author": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2016-10-24T18:55:56Z"}, "committer": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2016-10-24T18:55:56Z"}, "message": "adapt existing tests", "tree": {"sha": "3e25a7a22548b9e8ef26b5e93ee5537abfc444da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e25a7a22548b9e8ef26b5e93ee5537abfc444da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d22f7061507e78d5b83b03f6e3cf420b9969a92c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d22f7061507e78d5b83b03f6e3cf420b9969a92c", "html_url": "https://github.com/rust-lang/rust/commit/d22f7061507e78d5b83b03f6e3cf420b9969a92c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d22f7061507e78d5b83b03f6e3cf420b9969a92c/comments", "author": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1695238cae0c7c6598fa736820837d35a2143cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1695238cae0c7c6598fa736820837d35a2143cf", "html_url": "https://github.com/rust-lang/rust/commit/f1695238cae0c7c6598fa736820837d35a2143cf"}], "stats": {"total": 36, "additions": 6, "deletions": 30}, "files": [{"sha": "f250103b1440755da5ae1192fe09cc45c65456bd", "filename": "src/test/compile-fail/issue-17025.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d22f7061507e78d5b83b03f6e3cf420b9969a92c/src%2Ftest%2Fcompile-fail%2Fissue-17025.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d22f7061507e78d5b83b03f6e3cf420b9969a92c/src%2Ftest%2Fcompile-fail%2Fissue-17025.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17025.rs?ref=d22f7061507e78d5b83b03f6e3cf420b9969a92c", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-test the unsized enum no longer compiles\n+\n enum A {\n     B(char),\n     C([Box<A>]),"}, {"sha": "e14d9f3a35c84ff0fda9e7f8eeca93feb2eb796a", "filename": "src/test/compile-fail/issue-5883.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d22f7061507e78d5b83b03f6e3cf420b9969a92c/src%2Ftest%2Fcompile-fail%2Fissue-5883.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d22f7061507e78d5b83b03f6e3cf420b9969a92c/src%2Ftest%2Fcompile-fail%2Fissue-5883.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5883.rs?ref=d22f7061507e78d5b83b03f6e3cf420b9969a92c", "patch": "@@ -20,6 +20,4 @@ fn new_struct(r: A+'static)\n     Struct { r: r }\n }\n \n-trait Curve {}\n-enum E {X(Curve+'static)}\n fn main() {}"}, {"sha": "5d791215f36c60108c3819e98d69d498b252a7b5", "filename": "src/test/compile-fail/unsized-enum.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d22f7061507e78d5b83b03f6e3cf420b9969a92c/src%2Ftest%2Fcompile-fail%2Funsized-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d22f7061507e78d5b83b03f6e3cf420b9969a92c/src%2Ftest%2Fcompile-fail%2Funsized-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsized-enum.rs?ref=d22f7061507e78d5b83b03f6e3cf420b9969a92c", "patch": "@@ -19,11 +19,4 @@ fn foo2<T: ?Sized>() { not_sized::<Foo<T>>() }\n //\n // Not OK: `T` is not sized.\n \n-enum Bar<U: ?Sized> { BarSome(U), BarNone }\n-fn bar1<T: ?Sized>() { not_sized::<Bar<T>>() }\n-fn bar2<T: ?Sized>() { is_sized::<Bar<T>>() }\n-//~^ ERROR `T: std::marker::Sized` is not satisfied\n-//\n-// Not OK: `Bar<T>` is not sized, but it should be.\n-\n fn main() { }"}, {"sha": "9b6ccf22c8da5b9679611366f411a42e83ee0db9", "filename": "src/test/compile-fail/unsized3.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d22f7061507e78d5b83b03f6e3cf420b9969a92c/src%2Ftest%2Fcompile-fail%2Funsized3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d22f7061507e78d5b83b03f6e3cf420b9969a92c/src%2Ftest%2Fcompile-fail%2Funsized3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsized3.rs?ref=d22f7061507e78d5b83b03f6e3cf420b9969a92c", "patch": "@@ -31,19 +31,8 @@ fn f3<X: ?Sized + T>(x: &X) {\n fn f4<X: T>(x: &X) {\n }\n \n-// Test with unsized enum.\n-enum E<X: ?Sized> {\n-    V(X),\n-}\n-\n fn f5<Y>(x: &Y) {}\n fn f6<X: ?Sized>(x: &X) {}\n-fn f7<X: ?Sized>(x1: &E<X>, x2: &E<X>) {\n-    f5(x1);\n-    //~^ ERROR `X: std::marker::Sized` is not satisfied\n-    f6(x2); // ok\n-}\n-\n \n // Test with unsized struct.\n struct S<X: ?Sized> {\n@@ -57,13 +46,13 @@ fn f8<X: ?Sized>(x1: &S<X>, x2: &S<X>) {\n }\n \n // Test some tuples.\n-fn f9<X: ?Sized>(x1: Box<S<X>>, x2: Box<E<X>>) {\n+fn f9<X: ?Sized>(x1: Box<S<X>>) {\n     f5(&(*x1, 34));\n     //~^ ERROR `X: std::marker::Sized` is not satisfied\n }\n \n-fn f10<X: ?Sized>(x1: Box<S<X>>, x2: Box<E<X>>) {\n-    f5(&(32, *x2));\n+fn f10<X: ?Sized>(x1: Box<S<X>>) {\n+    f5(&(32, *x1));\n     //~^ ERROR `X: std::marker::Sized` is not satisfied\n }\n "}, {"sha": "50d8d3d27f27b35d12b8135edbf597a82c76dd83", "filename": "src/test/run-pass/unsized2.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d22f7061507e78d5b83b03f6e3cf420b9969a92c/src%2Ftest%2Frun-pass%2Funsized2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d22f7061507e78d5b83b03f6e3cf420b9969a92c/src%2Ftest%2Frun-pass%2Funsized2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsized2.rs?ref=d22f7061507e78d5b83b03f6e3cf420b9969a92c", "patch": "@@ -89,20 +89,14 @@ trait T7<X: ?Sized+T> {\n     fn m2(&self, x: &T5<X>);\n }\n \n-// The last field in a struct or variant may be unsized\n+// The last field in a struct may be unsized\n struct S2<X: ?Sized> {\n     f: X,\n }\n struct S3<X: ?Sized> {\n     f1: isize,\n     f2: X,\n }\n-enum E<X: ?Sized> {\n-    V1(X),\n-    V2{x: X},\n-    V3(isize, X),\n-    V4{u: isize, x: X},\n-}\n \n pub fn main() {\n }"}]}