{"sha": "c9e5eab6ff54fa4c24ab79894c4415615195db7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ZTVlYWI2ZmY1NGZhNGMyNGFiNzk4OTRjNDQxNTYxNTE5NWRiN2M=", "commit": {"author": {"name": "Felix Raimundo", "email": "felix.raimundo@tweag.io", "date": "2017-05-07T17:26:32Z"}, "committer": {"name": "Felix Raimundo", "email": "felix.raimundo@tweag.io", "date": "2017-05-07T17:31:20Z"}, "message": "Update the `thread::Thread` documentation.\n\n- Copied the module documentation to `Thread`.\n- Removed the example because it did not use any method of Thread.", "tree": {"sha": "0734f77f902beacc7c08555cd6d86d3a621f892d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0734f77f902beacc7c08555cd6d86d3a621f892d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9e5eab6ff54fa4c24ab79894c4415615195db7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9e5eab6ff54fa4c24ab79894c4415615195db7c", "html_url": "https://github.com/rust-lang/rust/commit/c9e5eab6ff54fa4c24ab79894c4415615195db7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9e5eab6ff54fa4c24ab79894c4415615195db7c/comments", "author": null, "committer": null, "parents": [{"sha": "ddb9e50b45b9762e09d341cce8547055cbee4840", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddb9e50b45b9762e09d341cce8547055cbee4840", "html_url": "https://github.com/rust-lang/rust/commit/ddb9e50b45b9762e09d341cce8547055cbee4840"}], "stats": {"total": 36, "additions": 12, "deletions": 24}, "files": [{"sha": "d4f6c6c67c5429622c0265164bb2ab17676b36dd", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 12, "deletions": 24, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/c9e5eab6ff54fa4c24ab79894c4415615195db7c/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e5eab6ff54fa4c24ab79894c4415615195db7c/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=c9e5eab6ff54fa4c24ab79894c4415615195db7c", "patch": "@@ -721,33 +721,21 @@ struct Inner {\n \n #[derive(Clone)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-/// A handle to a thread.\n+/// Threads are represented via the `Thread` type, which you can get in one of\n+/// two ways:\n ///\n-/// You can use it to identify a thread (by name, for example). Most of the\n-/// time, there is no need to directly create a `Thread` struct using the\n-/// constructor, instead you should use a function like `spawn` to create\n-/// new threads, see the docs of [`Builder`] and [`spawn`] for more.\n+/// * By spawning a new thread, e.g. using the [`thread::spawn`][`spawn`]\n+///   function, and calling [`thread`][`JoinHandle::thread`] on the\n+///   [`JoinHandle`].\n+/// * By requesting the current thread, using the [`thread::current`] function.\n ///\n-/// # Examples\n+/// The [`thread::current`] function is available even for threads not spawned\n+/// by the APIs of this module.\n+///\n+/// There is usualy no need to create a `Thread` struct yourself, one\n+/// should instead use a function like `spawn` to create new threads, see the\n+/// docs of [`Builder`] and [`spawn`] for more details.\n ///\n-/// ```no_run\n-/// # // Note that this example isn't executed by default because it causes\n-/// # // deadlocks on Windows unfortunately (see #25824)\n-/// use std::thread::Builder;\n-///\n-/// for i in 0..5 {\n-///     let thread_name = format!(\"thread_{}\", i);\n-///     Builder::new()\n-///         .name(thread_name) // Now you can identify which thread panicked\n-///                            // thanks to the handle's name\n-///         .spawn(move || {\n-///             if i == 3 {\n-///                  panic!(\"I'm scared!!!\");\n-///             }\n-///         })\n-///         .unwrap();\n-/// }\n-/// ```\n /// [`Builder`]: ../../std/thread/struct.Builder.html\n /// [`spawn`]: ../../std/thread/fn.spawn.html\n "}]}