{"sha": "4a25a49edfcca0392a9731df351f1a1229a6e662", "node_id": "C_kwDOAAsO6NoAKDRhMjVhNDllZGZjY2EwMzkyYTk3MzFkZjM1MWYxYTEyMjlhNmU2NjI", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-10-13T16:46:33Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-10-13T16:46:33Z"}, "message": "Fix test", "tree": {"sha": "1470b412b43c50554b191753f6c853cfa110b29f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1470b412b43c50554b191753f6c853cfa110b29f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a25a49edfcca0392a9731df351f1a1229a6e662", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a25a49edfcca0392a9731df351f1a1229a6e662", "html_url": "https://github.com/rust-lang/rust/commit/4a25a49edfcca0392a9731df351f1a1229a6e662", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a25a49edfcca0392a9731df351f1a1229a6e662/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "247da7b18de01886fb73a49f8b9ca59cfec16e64", "url": "https://api.github.com/repos/rust-lang/rust/commits/247da7b18de01886fb73a49f8b9ca59cfec16e64", "html_url": "https://github.com/rust-lang/rust/commit/247da7b18de01886fb73a49f8b9ca59cfec16e64"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f7ef92df8fbec3a4f89a5dd2436ee6ca61d35a17", "filename": "src/test/run-pass-valgrind/cast-enum-with-dtor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a25a49edfcca0392a9731df351f1a1229a6e662/src%2Ftest%2Frun-pass-valgrind%2Fcast-enum-with-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a25a49edfcca0392a9731df351f1a1229a6e662/src%2Ftest%2Frun-pass-valgrind%2Fcast-enum-with-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-valgrind%2Fcast-enum-with-dtor.rs?ref=4a25a49edfcca0392a9731df351f1a1229a6e662", "patch": "@@ -28,7 +28,7 @@ fn main() {\n     {\n         let e = E::C;\n         assert_eq!(e as u32, 2);\n-        assert_eq!(FLAG.load(Ordering::SeqCst), 0);\n+        assert_eq!(FLAG.load(Ordering::SeqCst), 1);\n     }\n     assert_eq!(FLAG.load(Ordering::SeqCst), 1);\n }"}]}