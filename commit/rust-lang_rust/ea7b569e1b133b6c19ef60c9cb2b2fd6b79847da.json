{"sha": "ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhN2I1NjllMWIxMzNiNmMxOWVmNjBjOWNiMmIyZmQ2Yjc5ODQ3ZGE=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2018-12-31T12:53:43Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2018-12-31T13:00:05Z"}, "message": "docing parser methods", "tree": {"sha": "8c2ad080054f30104c1da78f16aa3d3d5185a49d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c2ad080054f30104c1da78f16aa3d3d5185a49d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da", "html_url": "https://github.com/rust-lang/rust/commit/ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "582ea0a29a2914ab0b6847121b91396a4e8bebc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/582ea0a29a2914ab0b6847121b91396a4e8bebc5", "html_url": "https://github.com/rust-lang/rust/commit/582ea0a29a2914ab0b6847121b91396a4e8bebc5"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "0f740963dedcfc7db8d6e32d4b73553f56990504", "filename": "crates/ra_syntax/src/parser_api.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da/crates%2Fra_syntax%2Fsrc%2Fparser_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da/crates%2Fra_syntax%2Fsrc%2Fparser_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparser_api.rs?ref=ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da", "patch": "@@ -61,7 +61,7 @@ impl<'t> Parser<'t> {\n         Marker::new(self.0.start())\n     }\n \n-    /// Advances the parser by one token.\n+    /// Advances the parser by one token unconditionally.\n     pub(crate) fn bump(&mut self) {\n         self.0.bump();\n     }\n@@ -91,7 +91,7 @@ impl<'t> Parser<'t> {\n         self.0.error(message.into())\n     }\n \n-    /// Consume the next token if it is `kind`.\n+    /// Consume the next token if `kind` matches.\n     pub(crate) fn eat(&mut self, kind: SyntaxKind) -> bool {\n         if !self.at(kind) {\n             return false;"}, {"sha": "d4032a6d92d5798463d65e59f1dac6e03194620f", "filename": "crates/ra_syntax/src/parser_impl.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da/crates%2Fra_syntax%2Fsrc%2Fparser_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da/crates%2Fra_syntax%2Fsrc%2Fparser_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparser_impl.rs?ref=ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da", "patch": "@@ -22,10 +22,21 @@ use crate::SyntaxKind::{self, EOF, TOMBSTONE};\n pub(crate) trait Sink {\n     type Tree;\n \n+    /// Adds new leaf to the current branch.\n     fn leaf(&mut self, kind: SyntaxKind, text: SmolStr);\n-    fn start_internal(&mut self, kind: SyntaxKind);\n-    fn finish_internal(&mut self);\n+\n+    /// Start new branch and make it current.\n+    fn start_branch(&mut self, kind: SyntaxKind);\n+\n+    /// Finish current branch and restore previous\n+    /// branch as current.\n+    fn finish_branch(&mut self);\n+\n     fn error(&mut self, error: SyntaxError);\n+\n+    /// Complete tree building. Make sure that\n+    /// `start_branch` and `finish_branch` calls\n+    /// are paired!\n     fn finish(self) -> Self::Tree;\n }\n "}, {"sha": "d6299b5e37f817b5ce02d0dae53c342dbb2f3796", "filename": "crates/ra_syntax/src/parser_impl/event.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Fevent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Fevent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Fevent.rs?ref=ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da", "patch": "@@ -154,7 +154,7 @@ impl<'a, S: Sink> EventProcessor<'a, S> {\n                     self.finish(last);\n                 }\n                 Event::Token { kind, n_raw_tokens } => {\n-                    self.eat_ws();\n+                    self.eat_trivias();\n                     let n_raw_tokens = n_raw_tokens as usize;\n                     let len = self.tokens[self.token_pos..self.token_pos + n_raw_tokens]\n                         .iter()\n@@ -173,7 +173,7 @@ impl<'a, S: Sink> EventProcessor<'a, S> {\n \n     fn start(&mut self, kind: SyntaxKind) {\n         if kind == SOURCE_FILE {\n-            self.sink.start_internal(kind);\n+            self.sink.start_branch(kind);\n             return;\n         }\n         let n_trivias = self.tokens[self.token_pos..]\n@@ -194,18 +194,18 @@ impl<'a, S: Sink> EventProcessor<'a, S> {\n             n_attached_trivias(kind, leading_trivias)\n         };\n         self.eat_n_trivias(n_trivias - n_attached_trivias);\n-        self.sink.start_internal(kind);\n+        self.sink.start_branch(kind);\n         self.eat_n_trivias(n_attached_trivias);\n     }\n \n     fn finish(&mut self, last: bool) {\n         if last {\n-            self.eat_ws()\n+            self.eat_trivias()\n         }\n-        self.sink.finish_internal();\n+        self.sink.finish_branch();\n     }\n \n-    fn eat_ws(&mut self) {\n+    fn eat_trivias(&mut self) {\n         while let Some(&token) = self.tokens.get(self.token_pos) {\n             if !token.kind.is_trivia() {\n                 break;"}, {"sha": "37ae6329b26c4ecaeffe10cb28e4851085906ed4", "filename": "crates/ra_syntax/src/yellow/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fbuilder.rs?ref=ea7b569e1b133b6c19ef60c9cb2b2fd6b79847da", "patch": "@@ -26,11 +26,11 @@ impl Sink for GreenBuilder {\n         self.inner.leaf(kind, text);\n     }\n \n-    fn start_internal(&mut self, kind: SyntaxKind) {\n+    fn start_branch(&mut self, kind: SyntaxKind) {\n         self.inner.start_internal(kind)\n     }\n \n-    fn finish_internal(&mut self) {\n+    fn finish_branch(&mut self) {\n         self.inner.finish_internal();\n     }\n "}]}