{"sha": "3abba10e4f01e317614e4d4b25682a87dac3a23e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYmJhMTBlNGYwMWUzMTc2MTRlNGQ0YjI1NjgyYTg3ZGFjM2EyM2U=", "commit": {"author": {"name": "tynopex", "email": "tynopex@users.noreply.github.com", "date": "2015-04-29T22:21:23Z"}, "committer": {"name": "tynopex", "email": "tynopex@users.noreply.github.com", "date": "2015-04-29T22:21:23Z"}, "message": "Update process.rs\n\nMake whitespace consistent", "tree": {"sha": "dec58a96e8f1c539fcd6796bb90cc0cbffeeff6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dec58a96e8f1c539fcd6796bb90cc0cbffeeff6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3abba10e4f01e317614e4d4b25682a87dac3a23e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3abba10e4f01e317614e4d4b25682a87dac3a23e", "html_url": "https://github.com/rust-lang/rust/commit/3abba10e4f01e317614e4d4b25682a87dac3a23e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3abba10e4f01e317614e4d4b25682a87dac3a23e/comments", "author": {"login": "tynopex", "id": 7083688, "node_id": "MDQ6VXNlcjcwODM2ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/7083688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tynopex", "html_url": "https://github.com/tynopex", "followers_url": "https://api.github.com/users/tynopex/followers", "following_url": "https://api.github.com/users/tynopex/following{/other_user}", "gists_url": "https://api.github.com/users/tynopex/gists{/gist_id}", "starred_url": "https://api.github.com/users/tynopex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tynopex/subscriptions", "organizations_url": "https://api.github.com/users/tynopex/orgs", "repos_url": "https://api.github.com/users/tynopex/repos", "events_url": "https://api.github.com/users/tynopex/events{/privacy}", "received_events_url": "https://api.github.com/users/tynopex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tynopex", "id": 7083688, "node_id": "MDQ6VXNlcjcwODM2ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/7083688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tynopex", "html_url": "https://github.com/tynopex", "followers_url": "https://api.github.com/users/tynopex/followers", "following_url": "https://api.github.com/users/tynopex/following{/other_user}", "gists_url": "https://api.github.com/users/tynopex/gists{/gist_id}", "starred_url": "https://api.github.com/users/tynopex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tynopex/subscriptions", "organizations_url": "https://api.github.com/users/tynopex/orgs", "repos_url": "https://api.github.com/users/tynopex/repos", "events_url": "https://api.github.com/users/tynopex/events{/privacy}", "received_events_url": "https://api.github.com/users/tynopex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf053d72a038fc100d7fbb0875d281fcfedfd452", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf053d72a038fc100d7fbb0875d281fcfedfd452", "html_url": "https://github.com/rust-lang/rust/commit/cf053d72a038fc100d7fbb0875d281fcfedfd452"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "8f8699f4b9fea9f29f48a3530286ca1a8059a50f", "filename": "src/libstd/process.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3abba10e4f01e317614e4d4b25682a87dac3a23e/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3abba10e4f01e317614e4d4b25682a87dac3a23e/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=3abba10e4f01e317614e4d4b25682a87dac3a23e", "patch": "@@ -41,12 +41,12 @@ use thread;\n /// use std::process::Command;\n ///\n /// let mut child = Command::new(\"/bin/cat\")\n-///     .arg(\"file.txt\")\n-///     .spawn()\n-///     .unwrap_or_else(|e| { panic!(\"failed to execute child: {}\", e) });\n+///                         .arg(\"file.txt\")\n+///                         .spawn()\n+///                         .unwrap_or_else(|e| { panic!(\"failed to execute child: {}\", e) });\n ///\n /// let ecode = child.wait()\n-///     .unwrap_or_else(|e| { panic!(\"failed to wait on child: {}\", e) });\n+///                  .unwrap_or_else(|e| { panic!(\"failed to wait on child: {}\", e) });\n ///\n /// assert!(ecode.success());\n /// ```\n@@ -123,10 +123,10 @@ impl Read for ChildStderr {\n /// use std::process::Command;\n ///\n /// let output = Command::new(\"sh\")\n-///     .arg(\"-c\")\n-///     .arg(\"echo hello\")\n-///     .output()\n-///     .unwrap_or_else(|e| { panic!(\"failed to execute process: {}\", e) });\n+///                      .arg(\"-c\")\n+///                      .arg(\"echo hello\")\n+///                      .output()\n+///                      .unwrap_or_else(|e| { panic!(\"failed to execute process: {}\", e) });\n /// let hello = output.stdout;\n /// ```\n #[stable(feature = \"process\", since = \"1.0.0\")]"}]}