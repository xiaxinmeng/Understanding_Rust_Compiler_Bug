{"sha": "950b288d6fa3179d9a19c6762125be7fbc7c66e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1MGIyODhkNmZhMzE3OWQ5YTE5YzY3NjIxMjViZTdmYmM3YzY2ZTg=", "commit": {"author": {"name": "Andrey", "email": "andreyrmg@gmail.com", "date": "2019-09-04T14:01:04Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-09-04T14:01:04Z"}, "message": "do not remove discriminant value if exists (#3771) (#3772)", "tree": {"sha": "92e3079abf8fbc9ca47412cd59fdde71c4202707", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92e3079abf8fbc9ca47412cd59fdde71c4202707"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/950b288d6fa3179d9a19c6762125be7fbc7c66e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/950b288d6fa3179d9a19c6762125be7fbc7c66e8", "html_url": "https://github.com/rust-lang/rust/commit/950b288d6fa3179d9a19c6762125be7fbc7c66e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/950b288d6fa3179d9a19c6762125be7fbc7c66e8/comments", "author": {"login": "iam-afk", "id": 968130, "node_id": "MDQ6VXNlcjk2ODEzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/968130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iam-afk", "html_url": "https://github.com/iam-afk", "followers_url": "https://api.github.com/users/iam-afk/followers", "following_url": "https://api.github.com/users/iam-afk/following{/other_user}", "gists_url": "https://api.github.com/users/iam-afk/gists{/gist_id}", "starred_url": "https://api.github.com/users/iam-afk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iam-afk/subscriptions", "organizations_url": "https://api.github.com/users/iam-afk/orgs", "repos_url": "https://api.github.com/users/iam-afk/repos", "events_url": "https://api.github.com/users/iam-afk/events{/privacy}", "received_events_url": "https://api.github.com/users/iam-afk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bf67b6e5ca48479e5de9a14c49bd385d3d8285c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c", "html_url": "https://github.com/rust-lang/rust/commit/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c"}], "stats": {"total": 54, "additions": 36, "deletions": 18}, "files": [{"sha": "0943122b090af94447709b308afa8a1f4c1144f4", "filename": "src/items.rs", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/950b288d6fa3179d9a19c6762125be7fbc7c66e8/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/950b288d6fa3179d9a19c6762125be7fbc7c66e8/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=950b288d6fa3179d9a19c6762125be7fbc7c66e8", "patch": "@@ -557,24 +557,20 @@ impl<'a> FmtVisitor<'a> {\n                 self.block_indent,\n                 Some(one_line_width),\n             )?,\n-            ast::VariantData::Unit(..) => {\n-                if let Some(ref expr) = field.node.disr_expr {\n-                    let lhs = format!(\n-                        \"{:1$} =\",\n-                        rewrite_ident(&context, field.node.ident),\n-                        pad_discrim_ident_to\n-                    );\n-                    rewrite_assign_rhs_with(\n-                        &context,\n-                        lhs,\n-                        &*expr.value,\n-                        shape,\n-                        RhsTactics::AllowOverflow,\n-                    )?\n-                } else {\n-                    rewrite_ident(&context, field.node.ident).to_owned()\n-                }\n-            }\n+            ast::VariantData::Unit(..) => rewrite_ident(&context, field.node.ident).to_owned(),\n+        };\n+\n+        let variant_body = if let Some(ref expr) = field.node.disr_expr {\n+            let lhs = format!(\"{:1$} =\", variant_body, pad_discrim_ident_to);\n+            rewrite_assign_rhs_with(\n+                &context,\n+                lhs,\n+                &*expr.value,\n+                shape,\n+                RhsTactics::AllowOverflow,\n+            )?\n+        } else {\n+            variant_body\n         };\n \n         combine_strs_with_missing_comments(&context, &attrs_str, &variant_body, span, shape, false)"}, {"sha": "0ed9651abe7221846d9d141d8f0e3a2d0429cc65", "filename": "tests/source/enum.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/950b288d6fa3179d9a19c6762125be7fbc7c66e8/tests%2Fsource%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/950b288d6fa3179d9a19c6762125be7fbc7c66e8/tests%2Fsource%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fenum.rs?ref=950b288d6fa3179d9a19c6762125be7fbc7c66e8", "patch": "@@ -202,3 +202,11 @@ enum PublishedFileVisibility {\n     FriendsOnly = sys::ERemoteStoragePublishedFileVisibility_k_ERemoteStoragePublishedFileVisibilityFriendsOnly,\n     Private = sys::ERemoteStoragePublishedFileVisibility_k_ERemoteStoragePublishedFileVisibilityPrivate,\n }\n+\n+// #3771\n+//#![feature(arbitrary_enum_discriminant)]\n+#[repr(u32)]\n+pub enum E {\n+    A { a: u32 } = 0x100,\n+    B { field1: u32, field2: u8, field3: m::M } = 0x300 // comment\n+}"}, {"sha": "9a25126b44ecb49888e74c358e95382a822c9528", "filename": "tests/target/enum.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/950b288d6fa3179d9a19c6762125be7fbc7c66e8/tests%2Ftarget%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/950b288d6fa3179d9a19c6762125be7fbc7c66e8/tests%2Ftarget%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fenum.rs?ref=950b288d6fa3179d9a19c6762125be7fbc7c66e8", "patch": "@@ -273,3 +273,17 @@ enum PublishedFileVisibility {\n     Private =\n         sys::ERemoteStoragePublishedFileVisibility_k_ERemoteStoragePublishedFileVisibilityPrivate,\n }\n+\n+// #3771\n+//#![feature(arbitrary_enum_discriminant)]\n+#[repr(u32)]\n+pub enum E {\n+    A {\n+        a: u32,\n+    } = 0x100,\n+    B {\n+        field1: u32,\n+        field2: u8,\n+        field3: m::M,\n+    } = 0x300, // comment\n+}"}]}