{"sha": "51ef2b315b53717620674cb8b1c874de25c146a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZWYyYjMxNWI1MzcxNzYyMDY3NGNiOGIxYzg3NGRlMjVjMTQ2YTc=", "commit": {"author": {"name": "Nick Stevens", "email": "nick@bitcurry.com", "date": "2016-10-05T01:17:53Z"}, "committer": {"name": "Nick Stevens", "email": "nick@bitcurry.com", "date": "2016-10-05T01:17:53Z"}, "message": "rustbuild: Fix bug preventing per-target musl-root\n\nIn #36292, support was added to target musl libc for ARM targets using\nrustbuild. Specifically, that change allowed the addition of per-target\n\"musl-root\" options in the rustbuild config.toml so that multiple\ntargets depending on musl could be built. However, that implementation\ncontained a couple of omissions: the musl-root option was added to the\nconfig, but was never added to the TOML parsing, and therefore was not\nactually being loaded from config.toml. This commit rectifies that and\nallows successful building of musl-based ARM targets.", "tree": {"sha": "436b09f571947baec7e5281ba05684a6c3654474", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/436b09f571947baec7e5281ba05684a6c3654474"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51ef2b315b53717620674cb8b1c874de25c146a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51ef2b315b53717620674cb8b1c874de25c146a7", "html_url": "https://github.com/rust-lang/rust/commit/51ef2b315b53717620674cb8b1c874de25c146a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51ef2b315b53717620674cb8b1c874de25c146a7/comments", "author": {"login": "nastevens", "id": 1500008, "node_id": "MDQ6VXNlcjE1MDAwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1500008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nastevens", "html_url": "https://github.com/nastevens", "followers_url": "https://api.github.com/users/nastevens/followers", "following_url": "https://api.github.com/users/nastevens/following{/other_user}", "gists_url": "https://api.github.com/users/nastevens/gists{/gist_id}", "starred_url": "https://api.github.com/users/nastevens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nastevens/subscriptions", "organizations_url": "https://api.github.com/users/nastevens/orgs", "repos_url": "https://api.github.com/users/nastevens/repos", "events_url": "https://api.github.com/users/nastevens/events{/privacy}", "received_events_url": "https://api.github.com/users/nastevens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nastevens", "id": 1500008, "node_id": "MDQ6VXNlcjE1MDAwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1500008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nastevens", "html_url": "https://github.com/nastevens", "followers_url": "https://api.github.com/users/nastevens/followers", "following_url": "https://api.github.com/users/nastevens/following{/other_user}", "gists_url": "https://api.github.com/users/nastevens/gists{/gist_id}", "starred_url": "https://api.github.com/users/nastevens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nastevens/subscriptions", "organizations_url": "https://api.github.com/users/nastevens/orgs", "repos_url": "https://api.github.com/users/nastevens/repos", "events_url": "https://api.github.com/users/nastevens/events{/privacy}", "received_events_url": "https://api.github.com/users/nastevens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff713464e6530fab2e13d0965929d8189c59ae56", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff713464e6530fab2e13d0965929d8189c59ae56", "html_url": "https://github.com/rust-lang/rust/commit/ff713464e6530fab2e13d0965929d8189c59ae56"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "418c3a48ed348bc8281e711bdecbbb42df94efad", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51ef2b315b53717620674cb8b1c874de25c146a7/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51ef2b315b53717620674cb8b1c874de25c146a7/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=51ef2b315b53717620674cb8b1c874de25c146a7", "patch": "@@ -90,16 +90,16 @@ pub fn std_link(build: &Build,\n     add_to_sysroot(&out_dir, &libdir);\n \n     if target.contains(\"musl\") && !target.contains(\"mips\") {\n-        copy_musl_third_party_objects(build, &libdir);\n+        copy_musl_third_party_objects(build, target, &libdir);\n     }\n }\n \n /// Copies the crt(1,i,n).o startup objects\n ///\n /// Only required for musl targets that statically link to libc\n-fn copy_musl_third_party_objects(build: &Build, into: &Path) {\n+fn copy_musl_third_party_objects(build: &Build, target: &str, into: &Path) {\n     for &obj in &[\"crt1.o\", \"crti.o\", \"crtn.o\"] {\n-        copy(&build.config.musl_root.as_ref().unwrap().join(\"lib\").join(obj), &into.join(obj));\n+        copy(&build.musl_root(target).unwrap().join(\"lib\").join(obj), &into.join(obj));\n     }\n }\n "}, {"sha": "69bd7a769910ccf8ef272a754a9fe7a880328ea6", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51ef2b315b53717620674cb8b1c874de25c146a7/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51ef2b315b53717620674cb8b1c874de25c146a7/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=51ef2b315b53717620674cb8b1c874de25c146a7", "patch": "@@ -158,6 +158,7 @@ struct TomlTarget {\n     cc: Option<String>,\n     cxx: Option<String>,\n     android_ndk: Option<String>,\n+    musl_root: Option<String>,\n }\n \n impl Config {\n@@ -268,6 +269,7 @@ impl Config {\n                 }\n                 target.cxx = cfg.cxx.clone().map(PathBuf::from);\n                 target.cc = cfg.cc.clone().map(PathBuf::from);\n+                target.musl_root = cfg.musl_root.clone().map(PathBuf::from);\n \n                 config.target_config.insert(triple.clone(), target);\n             }"}]}