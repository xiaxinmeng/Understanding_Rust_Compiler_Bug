{"sha": "0e60287b4136bcede0c5eae8ab4e5de8496a16f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNjAyODdiNDEzNmJjZWRlMGM1ZWFlOGFiNGU1ZGU4NDk2YTE2ZjA=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-01-23T16:49:43Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-01-23T17:04:50Z"}, "message": "Implement Display for PanicInfo and Location\n\nDue to being in libcore,\nthis impl cannot access PanicInfo::payload if it\u2019s a String.", "tree": {"sha": "82d0e66ba935501db40b1ed806341a4dfdc2509d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82d0e66ba935501db40b1ed806341a4dfdc2509d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e60287b4136bcede0c5eae8ab4e5de8496a16f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e60287b4136bcede0c5eae8ab4e5de8496a16f0", "html_url": "https://github.com/rust-lang/rust/commit/0e60287b4136bcede0c5eae8ab4e5de8496a16f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e60287b4136bcede0c5eae8ab4e5de8496a16f0/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e96c1ef7fcac0ac85b3c9160f5486e91dd27dd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e96c1ef7fcac0ac85b3c9160f5486e91dd27dd2", "html_url": "https://github.com/rust-lang/rust/commit/9e96c1ef7fcac0ac85b3c9160f5486e91dd27dd2"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "cf8ceff6cda0d8fd186634ca086055119a7885e7", "filename": "src/libcore/panic.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0e60287b4136bcede0c5eae8ab4e5de8496a16f0/src%2Flibcore%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e60287b4136bcede0c5eae8ab4e5de8496a16f0/src%2Flibcore%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanic.rs?ref=0e60287b4136bcede0c5eae8ab4e5de8496a16f0", "patch": "@@ -120,6 +120,23 @@ impl<'a> PanicInfo<'a> {\n     }\n }\n \n+impl<'a> fmt::Display for PanicInfo<'a> {\n+    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\n+        formatter.write_str(\"panicked at \")?;\n+        if let Some(message) = self.message {\n+            write!(formatter, \"'{}', \", message)?\n+        } else if let Some(payload) = self.payload.downcast_ref::<&'static str>() {\n+            write!(formatter, \"'{}', \", payload)?\n+        }\n+        // NOTE: we cannot use downcast_ref::<String>() here\n+        // since String is not available in libcore!\n+        // A String payload and no message is what we\u2019d get from `std::panic!`\n+        // called with multiple arguments.\n+\n+        self.location.fmt(formatter)\n+    }\n+}\n+\n /// A struct containing information about the location of a panic.\n ///\n /// This structure is created by the [`location`] method of [`PanicInfo`].\n@@ -226,3 +243,9 @@ impl<'a> Location<'a> {\n         self.col\n     }\n }\n+\n+impl<'a> fmt::Display for Location<'a> {\n+    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\n+        write!(formatter, \"{}:{}:{}\", self.file, self.line, self.col)\n+    }\n+}"}]}