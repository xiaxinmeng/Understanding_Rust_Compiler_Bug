{"sha": "f7d2a813d59a916a484f4ead85a61f1251634d30", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZDJhODEzZDU5YTkxNmE0ODRmNGVhZDg1YTYxZjEyNTE2MzRkMzA=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-11-08T20:01:14Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-11-08T20:57:56Z"}, "message": "ICH: Add test case for let-expressions.", "tree": {"sha": "2346cf9dae811aa5d8dfe3d69c3656c69b52bcf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2346cf9dae811aa5d8dfe3d69c3656c69b52bcf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7d2a813d59a916a484f4ead85a61f1251634d30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7d2a813d59a916a484f4ead85a61f1251634d30", "html_url": "https://github.com/rust-lang/rust/commit/f7d2a813d59a916a484f4ead85a61f1251634d30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7d2a813d59a916a484f4ead85a61f1251634d30/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38a959a543dfc70a67e64f7d369ed6c9e12fc806", "url": "https://api.github.com/repos/rust-lang/rust/commits/38a959a543dfc70a67e64f7d369ed6c9e12fc806", "html_url": "https://github.com/rust-lang/rust/commit/38a959a543dfc70a67e64f7d369ed6c9e12fc806"}], "stats": {"total": 228, "additions": 228, "deletions": 0}, "files": [{"sha": "7bfd8077a3da6abb117cc70edc8229724ecaa8ce", "filename": "src/test/incremental/hashes/let_expressions.rs", "status": "added", "additions": 228, "deletions": 0, "changes": 228, "blob_url": "https://github.com/rust-lang/rust/blob/f7d2a813d59a916a484f4ead85a61f1251634d30/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7d2a813d59a916a484f4ead85a61f1251634d30/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs?ref=f7d2a813d59a916a484f4ead85a61f1251634d30", "patch": "@@ -0,0 +1,228 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+// This test case tests the incremental compilation hash (ICH) implementation\n+// for let expressions.\n+\n+// The general pattern followed here is: Change one thing between rev1 and rev2\n+// and make sure that the hash has changed, then change nothing between rev2 and\n+// rev3 and make sure that the hash has not changed.\n+\n+// must-compile-successfully\n+// revisions: cfail1 cfail2 cfail3\n+// compile-flags: -Z query-dep-graph\n+\n+\n+#![allow(warnings)]\n+#![feature(rustc_attrs)]\n+#![crate_type=\"rlib\"]\n+\n+// Change Name -----------------------------------------------------------------\n+#[cfg(cfail1)]\n+pub fn change_name() {\n+    let _x = 2u64;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub fn change_name() {\n+    let _y = 2u64;\n+}\n+\n+\n+\n+// Add Type --------------------------------------------------------------------\n+#[cfg(cfail1)]\n+pub fn add_type() {\n+    let _x = 2u32;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub fn add_type() {\n+    let _x: u32 = 2u32;\n+}\n+\n+\n+\n+// Change Type -----------------------------------------------------------------\n+#[cfg(cfail1)]\n+pub fn change_type() {\n+    let _x: u64 = 2;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub fn change_type() {\n+    let _x: u8 = 2;\n+}\n+\n+\n+\n+// Change Mutability of Reference Type -----------------------------------------\n+#[cfg(cfail1)]\n+pub fn change_mutability_of_reference_type() {\n+    let _x: &u64;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub fn change_mutability_of_reference_type() {\n+    let _x: &mut u64;\n+}\n+\n+\n+\n+// Change Mutability of Slot ---------------------------------------------------\n+#[cfg(cfail1)]\n+pub fn change_mutability_of_slot() {\n+    let mut _x: u64 = 0;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub fn change_mutability_of_slot() {\n+    let _x: u64 = 0;\n+}\n+\n+\n+\n+// Change Simple Binding to Pattern --------------------------------------------\n+#[cfg(cfail1)]\n+pub fn change_simple_binding_to_pattern() {\n+    let _x = (0u8, 'x');\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub fn change_simple_binding_to_pattern() {\n+    let (_a, _b) = (0u8, 'x');\n+}\n+\n+\n+\n+// Change Name in Pattern ------------------------------------------------------\n+#[cfg(cfail1)]\n+pub fn change_name_in_pattern() {\n+    let (_a, _b) = (1u8, 'y');\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub fn change_name_in_pattern() {\n+    let (_a, _c) = (1u8, 'y');\n+}\n+\n+\n+\n+// Add `ref` in Pattern --------------------------------------------------------\n+#[cfg(cfail1)]\n+pub fn add_ref_in_pattern() {\n+    let (_a, _b) = (1u8, 'y');\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub fn add_ref_in_pattern() {\n+    let (ref _a, _b) = (1u8, 'y');\n+}\n+\n+\n+\n+// Add `&` in Pattern ----------------------------------------------------------\n+#[cfg(cfail1)]\n+pub fn add_amp_in_pattern() {\n+    let (_a, _b) = (&1u8, 'y');\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub fn add_amp_in_pattern() {\n+    let (&_a, _b) = (&1u8, 'y');\n+}\n+\n+\n+\n+// Change Mutability of Binding in Pattern -------------------------------------\n+#[cfg(cfail1)]\n+pub fn change_mutability_of_binding_in_pattern() {\n+    let (_a, _b) = (99u8, 'q');\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub fn change_mutability_of_binding_in_pattern() {\n+    let (mut _a, _b) = (99u8, 'q');\n+}\n+\n+\n+\n+// Add Initializer -------------------------------------------------------------\n+#[cfg(cfail1)]\n+pub fn add_initializer() {\n+    let _x: i16;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub fn add_initializer() {\n+    let _x: i16 = 3i16;\n+}\n+\n+\n+\n+// Change Initializer ----------------------------------------------------------\n+#[cfg(cfail1)]\n+pub fn change_initializer() {\n+    let _x = 4u16;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub fn change_initializer() {\n+    let _x = 5u16;\n+}"}]}