{"sha": "c47342e7c2271c32651725b0f026fb24822eb828", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NzM0MmU3YzIyNzFjMzI2NTE3MjViMGYwMjZmYjI0ODIyZWI4Mjg=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-21T19:18:50Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-23T20:54:25Z"}, "message": "Convert pipes to new atomic intrinsics", "tree": {"sha": "fb4b7484c34c811574bd32925758d34096905fad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb4b7484c34c811574bd32925758d34096905fad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c47342e7c2271c32651725b0f026fb24822eb828", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c47342e7c2271c32651725b0f026fb24822eb828", "html_url": "https://github.com/rust-lang/rust/commit/c47342e7c2271c32651725b0f026fb24822eb828", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c47342e7c2271c32651725b0f026fb24822eb828/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc107898b2524aef8854483480df7fcca7a7e7ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc107898b2524aef8854483480df7fcca7a7e7ce", "html_url": "https://github.com/rust-lang/rust/commit/dc107898b2524aef8854483480df7fcca7a7e7ce"}], "stats": {"total": 34, "additions": 14, "deletions": 20}, "files": [{"sha": "ad058cb9b40d5c7537efd8341119f4e435d8816a", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c47342e7c2271c32651725b0f026fb24822eb828/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c47342e7c2271c32651725b0f026fb24822eb828/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=c47342e7c2271c32651725b0f026fb24822eb828", "patch": "@@ -243,39 +243,37 @@ fn entangle_buffer<T: send, Tstart: send>(\n #[abi = \"rust-intrinsic\"]\n #[doc(hidden)]\n extern mod rusti {\n-    fn atomic_xchng(&dst: int, src: int) -> int;\n-    fn atomic_xchng_acq(&dst: int, src: int) -> int;\n-    fn atomic_xchng_rel(&dst: int, src: int) -> int;\n+    fn atomic_xchg(dst: &mut int, src: int) -> int;\n+    fn atomic_xchg_acq(dst: &mut int, src: int) -> int;\n+    fn atomic_xchg_rel(dst: &mut int, src: int) -> int;\n \n-    fn atomic_add_acq(&dst: int, src: int) -> int;\n-    fn atomic_sub_rel(&dst: int, src: int) -> int;\n+    fn atomic_xadd_acq(dst: &mut int, src: int) -> int;\n+    fn atomic_xsub_rel(dst: &mut int, src: int) -> int;\n }\n \n // If I call the rusti versions directly from a polymorphic function,\n // I get link errors. This is a bug that needs investigated more.\n #[doc(hidden)]\n fn atomic_xchng_rel(dst: &mut int, src: int) -> int {\n-    rusti::atomic_xchng_rel(*dst, src)\n+    rusti::atomic_xchg_rel(dst, src)\n }\n \n #[doc(hidden)]\n fn atomic_add_acq(dst: &mut int, src: int) -> int {\n-    rusti::atomic_add_acq(*dst, src)\n+    rusti::atomic_xadd_acq(dst, src)\n }\n \n #[doc(hidden)]\n fn atomic_sub_rel(dst: &mut int, src: int) -> int {\n-    rusti::atomic_sub_rel(*dst, src)\n+    rusti::atomic_xsub_rel(dst, src)\n }\n \n #[doc(hidden)]\n-fn swap_task(dst: &mut *rust_task, src: *rust_task) -> *rust_task {\n+fn swap_task(+dst: &mut *rust_task, src: *rust_task) -> *rust_task {\n     // It might be worth making both acquire and release versions of\n     // this.\n     unsafe {\n-        reinterpret_cast(rusti::atomic_xchng(\n-            *(ptr::mut_addr_of(*dst) as *mut int),\n-            src as int))\n+        transmute(rusti::atomic_xchg(transmute(dst), src as int))\n     }\n }\n \n@@ -309,20 +307,16 @@ fn wait_event(this: *rust_task) -> *libc::c_void {\n }\n \n #[doc(hidden)]\n-fn swap_state_acq(dst: &mut state, src: state) -> state {\n+fn swap_state_acq(+dst: &mut state, src: state) -> state {\n     unsafe {\n-        reinterpret_cast(rusti::atomic_xchng_acq(\n-            *(ptr::mut_addr_of(*dst) as *mut int),\n-            src as int))\n+        transmute(rusti::atomic_xchg_acq(transmute(dst), src as int))\n     }\n }\n \n #[doc(hidden)]\n-fn swap_state_rel(dst: &mut state, src: state) -> state {\n+fn swap_state_rel(+dst: &mut state, src: state) -> state {\n     unsafe {\n-        reinterpret_cast(rusti::atomic_xchng_rel(\n-            *(ptr::mut_addr_of(*dst) as *mut int),\n-            src as int))\n+        transmute(rusti::atomic_xchg_rel(transmute(dst), src as int))\n     }\n }\n "}]}