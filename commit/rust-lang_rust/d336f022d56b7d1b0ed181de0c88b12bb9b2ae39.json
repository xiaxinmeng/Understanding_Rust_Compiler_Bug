{"sha": "d336f022d56b7d1b0ed181de0c88b12bb9b2ae39", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMzZmMDIyZDU2YjdkMWIwZWQxODFkZTBjODhiMTJiYjliMmFlMzk=", "commit": {"author": {"name": "laurent", "email": "laurent.mazare@gmail.com", "date": "2017-11-01T06:46:58Z"}, "committer": {"name": "laurent", "email": "laurent.mazare@gmail.com", "date": "2017-11-01T06:46:58Z"}, "message": "Preserve original formatting.", "tree": {"sha": "168a26db8b28dce7cfca5f3a84014adc92777fbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/168a26db8b28dce7cfca5f3a84014adc92777fbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d336f022d56b7d1b0ed181de0c88b12bb9b2ae39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d336f022d56b7d1b0ed181de0c88b12bb9b2ae39", "html_url": "https://github.com/rust-lang/rust/commit/d336f022d56b7d1b0ed181de0c88b12bb9b2ae39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d336f022d56b7d1b0ed181de0c88b12bb9b2ae39/comments", "author": {"login": "LaurentMazare", "id": 1041292, "node_id": "MDQ6VXNlcjEwNDEyOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1041292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurentMazare", "html_url": "https://github.com/LaurentMazare", "followers_url": "https://api.github.com/users/LaurentMazare/followers", "following_url": "https://api.github.com/users/LaurentMazare/following{/other_user}", "gists_url": "https://api.github.com/users/LaurentMazare/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurentMazare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurentMazare/subscriptions", "organizations_url": "https://api.github.com/users/LaurentMazare/orgs", "repos_url": "https://api.github.com/users/LaurentMazare/repos", "events_url": "https://api.github.com/users/LaurentMazare/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurentMazare/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LaurentMazare", "id": 1041292, "node_id": "MDQ6VXNlcjEwNDEyOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1041292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurentMazare", "html_url": "https://github.com/LaurentMazare", "followers_url": "https://api.github.com/users/LaurentMazare/followers", "following_url": "https://api.github.com/users/LaurentMazare/following{/other_user}", "gists_url": "https://api.github.com/users/LaurentMazare/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurentMazare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurentMazare/subscriptions", "organizations_url": "https://api.github.com/users/LaurentMazare/orgs", "repos_url": "https://api.github.com/users/LaurentMazare/repos", "events_url": "https://api.github.com/users/LaurentMazare/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurentMazare/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "175cfbf129866fb8412f79a02ab66ae549a24b10", "url": "https://api.github.com/repos/rust-lang/rust/commits/175cfbf129866fb8412f79a02ab66ae549a24b10", "html_url": "https://github.com/rust-lang/rust/commit/175cfbf129866fb8412f79a02ab66ae549a24b10"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "ec9b22ae5a223be39c8f4e3b35eb1e2682d879ea", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d336f022d56b7d1b0ed181de0c88b12bb9b2ae39/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d336f022d56b7d1b0ed181de0c88b12bb9b2ae39/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=d336f022d56b7d1b0ed181de0c88b12bb9b2ae39", "patch": "@@ -3167,10 +3167,7 @@ impl<'a> Parser<'a> {\n         attrs.extend(iattrs);\n \n         let hi = self.prev_span;\n-        Ok(self.mk_expr(\n-            span_lo.to(hi),\n-            ExprKind::ForLoop(pat, expr, loop_block, opt_ident),\n-            attrs))\n+        Ok(self.mk_expr(span_lo.to(hi), ExprKind::ForLoop(pat, expr, loop_block, opt_ident), attrs))\n     }\n \n     /// Parse a 'while' or 'while let' expression ('while' token already eaten)"}]}