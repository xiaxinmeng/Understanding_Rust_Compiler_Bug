{"sha": "9855e7dc7bdafaafde22d9642eaea43638cf0a8a", "node_id": "C_kwDOAAsO6NoAKDk4NTVlN2RjN2JkYWZhYWZkZTIyZDk2NDJlYWVhNDM2MzhjZjBhOGE", "commit": {"author": {"name": "jackh726", "email": "jack.huey@umassmed.edu", "date": "2021-10-12T15:14:31Z"}, "committer": {"name": "jackh726", "email": "jack.huey@umassmed.edu", "date": "2021-10-12T15:14:31Z"}, "message": "Switch order of terms to prevent overflow", "tree": {"sha": "35378e6dd6c5d5b2959b65fcbc500c9d2d306ec1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35378e6dd6c5d5b2959b65fcbc500c9d2d306ec1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9855e7dc7bdafaafde22d9642eaea43638cf0a8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9855e7dc7bdafaafde22d9642eaea43638cf0a8a", "html_url": "https://github.com/rust-lang/rust/commit/9855e7dc7bdafaafde22d9642eaea43638cf0a8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9855e7dc7bdafaafde22d9642eaea43638cf0a8a/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1067e2ca5e9cfe5c79f956e49ffc684c5142d49b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1067e2ca5e9cfe5c79f956e49ffc684c5142d49b", "html_url": "https://github.com/rust-lang/rust/commit/1067e2ca5e9cfe5c79f956e49ffc684c5142d49b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "db8a6d962049540f9e257c8e50b1e6a136697dfe", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9855e7dc7bdafaafde22d9642eaea43638cf0a8a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9855e7dc7bdafaafde22d9642eaea43638cf0a8a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=9855e7dc7bdafaafde22d9642eaea43638cf0a8a", "patch": "@@ -558,7 +558,7 @@ impl<'me, 'tcx> BoundVarReplacer<'me, 'tcx> {\n     fn universe_for(&mut self, debruijn: ty::DebruijnIndex) -> ty::UniverseIndex {\n         let infcx = self.infcx;\n         let index =\n-            self.universe_indices.len() - debruijn.as_usize() + self.current_index.as_usize() - 1;\n+            self.universe_indices.len() + self.current_index.as_usize() - debruijn.as_usize() - 1;\n         let universe = self.universe_indices[index].unwrap_or_else(|| {\n             for i in self.universe_indices.iter_mut().take(index + 1) {\n                 *i = i.or_else(|| Some(infcx.create_next_universe()))"}]}