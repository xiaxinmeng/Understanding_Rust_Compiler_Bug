{"sha": "fee5b492fecd321b5ce507d732948943a74fbf4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZTViNDkyZmVjZDMyMWI1Y2U1MDdkNzMyOTQ4OTQzYTc0ZmJmNGM=", "commit": {"author": {"name": "Matt Horn", "email": "mathphreak@gmail.com", "date": "2016-07-07T04:10:12Z"}, "committer": {"name": "Matt Horn", "email": "mathphreak@gmail.com", "date": "2016-07-07T04:10:12Z"}, "message": "Properly mark new methods as unstable", "tree": {"sha": "de9dd8cdfc06a2749a73b146c5419a3833e3cc54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de9dd8cdfc06a2749a73b146c5419a3833e3cc54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fee5b492fecd321b5ce507d732948943a74fbf4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fee5b492fecd321b5ce507d732948943a74fbf4c", "html_url": "https://github.com/rust-lang/rust/commit/fee5b492fecd321b5ce507d732948943a74fbf4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fee5b492fecd321b5ce507d732948943a74fbf4c/comments", "author": {"login": "mathphreak", "id": 360194, "node_id": "MDQ6VXNlcjM2MDE5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/360194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathphreak", "html_url": "https://github.com/mathphreak", "followers_url": "https://api.github.com/users/mathphreak/followers", "following_url": "https://api.github.com/users/mathphreak/following{/other_user}", "gists_url": "https://api.github.com/users/mathphreak/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathphreak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathphreak/subscriptions", "organizations_url": "https://api.github.com/users/mathphreak/orgs", "repos_url": "https://api.github.com/users/mathphreak/repos", "events_url": "https://api.github.com/users/mathphreak/events{/privacy}", "received_events_url": "https://api.github.com/users/mathphreak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mathphreak", "id": 360194, "node_id": "MDQ6VXNlcjM2MDE5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/360194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathphreak", "html_url": "https://github.com/mathphreak", "followers_url": "https://api.github.com/users/mathphreak/followers", "following_url": "https://api.github.com/users/mathphreak/following{/other_user}", "gists_url": "https://api.github.com/users/mathphreak/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathphreak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathphreak/subscriptions", "organizations_url": "https://api.github.com/users/mathphreak/orgs", "repos_url": "https://api.github.com/users/mathphreak/repos", "events_url": "https://api.github.com/users/mathphreak/events{/privacy}", "received_events_url": "https://api.github.com/users/mathphreak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "211c655c97d35a511e27b30480e196ea04e4e13f", "url": "https://api.github.com/repos/rust-lang/rust/commits/211c655c97d35a511e27b30480e196ea04e4e13f", "html_url": "https://github.com/rust-lang/rust/commit/211c655c97d35a511e27b30480e196ea04e4e13f"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "2bf063099e400a7b685e12e1635150ecd45ceccd", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fee5b492fecd321b5ce507d732948943a74fbf4c/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fee5b492fecd321b5ce507d732948943a74fbf4c/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=fee5b492fecd321b5ce507d732948943a74fbf4c", "patch": "@@ -61,7 +61,8 @@ pub enum Ipv6MulticastScope {\n \n impl IpAddr {\n     /// Returns true for the special 'unspecified' address (0.0.0.0 in IPv4, :: in IPv6).\n-    #[unstable(feature=\"ipaddr_common\", reason=\"recently added and depends on unstable Ipv4Addr.is_unspecified()\", issue=\"27709\")]\n+    #[unstable(feature=\"ip\", issue=\"27709\",\n+               reason=\"recently added and depends on unstable Ipv4Addr.is_unspecified()\")]\n     pub fn is_unspecified(&self) -> bool {\n         match *self {\n             IpAddr::V4(ref a) => a.is_unspecified(),\n@@ -70,7 +71,7 @@ impl IpAddr {\n     }\n \n     /// Returns true if this is a loopback address (127.0.0.0/8 in IPv4, ::1 in IPv6).\n-    #[unstable(feature=\"ipaddr_common\", reason=\"recently added\", issue=\"27709\")]\n+    #[unstable(feature=\"ip\", reason=\"recently added\", issue=\"27709\")]\n     pub fn is_loopback(&self) -> bool {\n         match *self {\n             IpAddr::V4(ref a) => a.is_loopback(),\n@@ -79,7 +80,8 @@ impl IpAddr {\n     }\n \n     /// Returns true if the address appears to be globally routable.\n-    #[unstable(feature=\"ipaddr_common\", reason=\"recently added and depends on unstable Ipv4Addr.is_global() and Ipv6Addr.is_global()\", issue=\"27709\")]\n+    #[unstable(feature=\"ip\", issue=\"27709\",\n+               reason=\"recently added and depends on unstable Ip{v4,v6}Addr.is_global()\")]\n     pub fn is_global(&self) -> bool {\n         match *self {\n             IpAddr::V4(ref a) => a.is_global(),\n@@ -88,7 +90,7 @@ impl IpAddr {\n     }\n \n     /// Returns true if this is a multicast address (224.0.0.0/4 in IPv4, ff00::/8 in IPv6)\n-    #[unstable(feature=\"ipaddr_common\", reason=\"recently added\", issue=\"27709\")]\n+    #[unstable(feature=\"ip\", reason=\"recently added\", issue=\"27709\")]\n     pub fn is_multicast(&self) -> bool {\n         match *self {\n             IpAddr::V4(ref a) => a.is_multicast(),\n@@ -97,7 +99,8 @@ impl IpAddr {\n     }\n \n     /// Returns true if this address is in a range designated for documentation.\n-    #[unstable(feature=\"ipaddr_common\", reason=\"recently added and depends on unstable Ipv6Addr.is_documentation()\", issue=\"27709\")]\n+    #[unstable(feature=\"ip\", issue=\"27709\",\n+               reason=\"recently added and depends on unstable Ipv6Addr.is_documentation()\")]\n     pub fn is_documentation(&self) -> bool {\n         match *self {\n             IpAddr::V4(ref a) => a.is_documentation(),"}]}