{"sha": "394d28cac54b936bf5c3d1420229b52156744e7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5NGQyOGNhYzU0YjkzNmJmNWMzZDE0MjAyMjliNTIxNTY3NDRlN2Y=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-26T22:22:15Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-26T22:22:15Z"}, "message": "Fix old .each usage", "tree": {"sha": "9526c40a9375134463fa413252aae65bdd98ba94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9526c40a9375134463fa413252aae65bdd98ba94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/394d28cac54b936bf5c3d1420229b52156744e7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/394d28cac54b936bf5c3d1420229b52156744e7f", "html_url": "https://github.com/rust-lang/rust/commit/394d28cac54b936bf5c3d1420229b52156744e7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/394d28cac54b936bf5c3d1420229b52156744e7f/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8ae9b0ae64e23aff1408097a5a4a03a72895ae6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ae9b0ae64e23aff1408097a5a4a03a72895ae6", "html_url": "https://github.com/rust-lang/rust/commit/f8ae9b0ae64e23aff1408097a5a4a03a72895ae6"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9e0d6fb8e3a6ea3fc9a4f09f5f646375ec42f3f5", "filename": "src/librustc/metadata/loader.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/394d28cac54b936bf5c3d1420229b52156744e7f/src%2Flibrustc%2Fmetadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/394d28cac54b936bf5c3d1420229b52156744e7f/src%2Flibrustc%2Fmetadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Floader.rs?ref=394d28cac54b936bf5c3d1420229b52156744e7f", "patch": "@@ -128,7 +128,7 @@ fn find_library_crate_aux(\n             cx.diag.span_err(\n                     cx.span, fmt!(\"multiple matching crates for `%s`\", crate_name));\n                 cx.diag.handler().note(\"candidates:\");\n-                for matches.each |&(ident, data)| {\n+                for matches.iter().advance |&(ident, data)| {\n                     cx.diag.handler().note(fmt!(\"path: %s\", ident));\n                     let attrs = decoder::get_crate_attributes(data);\n                     note_linkage_attrs(cx.intr, cx.diag, attrs);\n@@ -140,7 +140,7 @@ fn find_library_crate_aux(\n }\n \n pub fn crate_name_from_metas(metas: &[@ast::meta_item]) -> @str {\n-    for metas.each |m| {\n+    for metas.iter().advance |m| {\n         match m.node {\n             ast::meta_name_value(s, ref l) if s == @\"name\" =>\n                 match l.node {"}]}