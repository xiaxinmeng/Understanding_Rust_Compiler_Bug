{"sha": "b43db76d36d6205ebaf5b2b6c260ac23f74733dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0M2RiNzZkMzZkNjIwNWViYWY1YjJiNmMyNjBhYzIzZjc0NzMzZGM=", "commit": {"author": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-09-26T05:17:04Z"}, "committer": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-10-18T02:14:14Z"}, "message": "Fixing rustdoc", "tree": {"sha": "78826312a995fb4db5eae239c56d2fb13cfea65a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78826312a995fb4db5eae239c56d2fb13cfea65a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b43db76d36d6205ebaf5b2b6c260ac23f74733dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b43db76d36d6205ebaf5b2b6c260ac23f74733dc", "html_url": "https://github.com/rust-lang/rust/commit/b43db76d36d6205ebaf5b2b6c260ac23f74733dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b43db76d36d6205ebaf5b2b6c260ac23f74733dc/comments", "author": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2095ac1e2714f5fa8f25de1e8574dd541514277c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2095ac1e2714f5fa8f25de1e8574dd541514277c", "html_url": "https://github.com/rust-lang/rust/commit/2095ac1e2714f5fa8f25de1e8574dd541514277c"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "63e3c7edb95b10c17ae80754c1b5b1a95b89ffd7", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b43db76d36d6205ebaf5b2b6c260ac23f74733dc/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43db76d36d6205ebaf5b2b6c260ac23f74733dc/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=b43db76d36d6205ebaf5b2b6c260ac23f74733dc", "patch": "@@ -1140,13 +1140,13 @@ pub struct Method {\n     pub abi: Abi,\n }\n \n-impl<'a> Clean<Method> for (&'a hir::MethodSig, hir::BodyId) {\n+impl<'a> Clean<Method> for (&'a hir::MethodSig, &'a hir::Generics, hir::BodyId) {\n     fn clean(&self, cx: &DocContext) -> Method {\n         Method {\n-            generics: self.0.generics.clean(cx),\n+            generics: self.1.clean(cx),\n             unsafety: self.0.unsafety,\n             constness: self.0.constness,\n-            decl: (&*self.0.decl, self.1).clean(cx),\n+            decl: (&*self.0.decl, self.2).clean(cx),\n             abi: self.0.abi\n         }\n     }\n@@ -1379,13 +1379,13 @@ impl Clean<Item> for hir::TraitItem {\n                                     default.map(|e| print_const_expr(cx, e)))\n             }\n             hir::TraitItemKind::Method(ref sig, hir::TraitMethod::Provided(body)) => {\n-                MethodItem((sig, body).clean(cx))\n+                MethodItem((sig, &self.generics, body).clean(cx))\n             }\n             hir::TraitItemKind::Method(ref sig, hir::TraitMethod::Required(ref names)) => {\n                 TyMethodItem(TyMethod {\n                     unsafety: sig.unsafety.clone(),\n                     decl: (&*sig.decl, &names[..]).clean(cx),\n-                    generics: sig.generics.clean(cx),\n+                    generics: self.generics.clean(cx),\n                     abi: sig.abi\n                 })\n             }\n@@ -1414,7 +1414,7 @@ impl Clean<Item> for hir::ImplItem {\n                                     Some(print_const_expr(cx, expr)))\n             }\n             hir::ImplItemKind::Method(ref sig, body) => {\n-                MethodItem((sig, body).clean(cx))\n+                MethodItem((sig, &self.generics, body).clean(cx))\n             }\n             hir::ImplItemKind::Type(ref ty) => TypedefItem(Typedef {\n                 type_: ty.clean(cx),"}]}