{"sha": "b4f92774d0b6b60b747f97344c18c5f51de18469", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0ZjkyNzc0ZDBiNmI2MGI3NDdmOTczNDRjMThjNWY1MWRlMTg0Njk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-08-18T22:25:17Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-08-18T22:30:31Z"}, "message": "Don't complain about \\r when core.autocrlf is on in Git (now working with Python 2.6).", "tree": {"sha": "0a955a86f74487d02d71c45e7e321982efa610b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a955a86f74487d02d71c45e7e321982efa610b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4f92774d0b6b60b747f97344c18c5f51de18469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4f92774d0b6b60b747f97344c18c5f51de18469", "html_url": "https://github.com/rust-lang/rust/commit/b4f92774d0b6b60b747f97344c18c5f51de18469", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4f92774d0b6b60b747f97344c18c5f51de18469/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "724d7235e546fb79009800700fd74328f8171b8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/724d7235e546fb79009800700fd74328f8171b8c", "html_url": "https://github.com/rust-lang/rust/commit/724d7235e546fb79009800700fd74328f8171b8c"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "4202950d259cecb554b19a6a42e7e2eacac7d258", "filename": "src/etc/tidy.py", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b4f92774d0b6b60b747f97344c18c5f51de18469/src%2Fetc%2Ftidy.py", "raw_url": "https://github.com/rust-lang/rust/raw/b4f92774d0b6b60b747f97344c18c5f51de18469/src%2Fetc%2Ftidy.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Ftidy.py?ref=b4f92774d0b6b60b747f97344c18c5f51de18469", "patch": "@@ -1,10 +1,15 @@\n #!/usr/bin/python\n \n-import sys, fileinput\n+import sys, fileinput, subprocess\n \n err=0\n cols=78\n \n+config_proc=subprocess.Popen([ \"git\", \"config\", \"core.autocrlf\" ],\n+    stdout=subprocess.PIPE)\n+result=config_proc.communicate()[0]\n+autocrlf=result.strip() == b\"true\" if result is not None else False\n+\n def report_err(s):\n     global err\n     print(\"%s:%d: %s\" % (fileinput.filename(), fileinput.filelineno(), s))\n@@ -14,10 +19,11 @@ def report_err(s):\n     if line.find('\\t') != -1 and fileinput.filename().find(\"Makefile\") == -1:\n         report_err(\"tab character\")\n \n-    if line.find('\\r') != -1:\n+    if not autocrlf and line.find('\\r') != -1:\n         report_err(\"CR character\")\n \n-    if len(line)-1 > cols:\n+    line_len = len(line)-2 if autocrlf else len(line)-1\n+    if line_len > cols:\n         report_err(\"line longer than %d chars\" % cols)\n \n "}]}