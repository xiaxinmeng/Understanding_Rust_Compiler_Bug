{"sha": "95e2a4f23df096ce61593b6a0910d67508228bc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1ZTJhNGYyM2RmMDk2Y2U2MTU5M2I2YTA5MTBkNjc1MDgyMjhiYzc=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-07-06T01:28:27Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-08-12T22:03:44Z"}, "message": "Use if-let in is_sorted_by", "tree": {"sha": "3d03a0b00c0ebdae90bcb52ee80381784a0ea54f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d03a0b00c0ebdae90bcb52ee80381784a0ea54f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95e2a4f23df096ce61593b6a0910d67508228bc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95e2a4f23df096ce61593b6a0910d67508228bc7", "html_url": "https://github.com/rust-lang/rust/commit/95e2a4f23df096ce61593b6a0910d67508228bc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95e2a4f23df096ce61593b6a0910d67508228bc7/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e67620afc4a5b22960a5f1b056cbc4b878beb2e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e67620afc4a5b22960a5f1b056cbc4b878beb2e8", "html_url": "https://github.com/rust-lang/rust/commit/e67620afc4a5b22960a5f1b056cbc4b878beb2e8"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "4220e85b8dd26563f17f3d8424941a48ed6a5dcd", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/95e2a4f23df096ce61593b6a0910d67508228bc7/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95e2a4f23df096ce61593b6a0910d67508228bc7/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=95e2a4f23df096ce61593b6a0910d67508228bc7", "patch": "@@ -2740,9 +2740,8 @@ pub trait Iterator {\n         };\n \n         while let Some(curr) = self.next() {\n-            match compare(&last, &curr) {\n-                Some(Ordering::Greater) | None => return false,\n-                _ => {}\n+            if let Some(Ordering::Greater) | None = compare(&last, &curr) {\n+                return false;\n             }\n             last = curr;\n         }"}]}