{"sha": "c40fc79a1adb2564c6233605771bdeaecf348864", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MGZjNzlhMWFkYjI1NjRjNjIzMzYwNTc3MWJkZWFlY2YzNDg4NjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-30T09:12:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-30T09:12:05Z"}, "message": "auto merge of #18279 : bgamari/rust/check-static-recursion, r=alexcrichton\n\nI just found this patch which at some point solved a problem I encountered. Unfortunately I apparently dropped it before I managed to write a test case. I'll try to dig up the code that triggered the issue.", "tree": {"sha": "01d425a229d95f53bdafdd2b5a7eb91f22192904", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01d425a229d95f53bdafdd2b5a7eb91f22192904"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c40fc79a1adb2564c6233605771bdeaecf348864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c40fc79a1adb2564c6233605771bdeaecf348864", "html_url": "https://github.com/rust-lang/rust/commit/c40fc79a1adb2564c6233605771bdeaecf348864", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c40fc79a1adb2564c6233605771bdeaecf348864/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d27bfaeb6522d386d0a2735cb3f75cc5707314a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d27bfaeb6522d386d0a2735cb3f75cc5707314a", "html_url": "https://github.com/rust-lang/rust/commit/2d27bfaeb6522d386d0a2735cb3f75cc5707314a"}, {"sha": "b9251cded8567b5bcabf9378661cf40fe35dc17b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9251cded8567b5bcabf9378661cf40fe35dc17b", "html_url": "https://github.com/rust-lang/rust/commit/b9251cded8567b5bcabf9378661cf40fe35dc17b"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "1c83bf199192039cf68e8f0aabce35441d177f7f", "filename": "src/librustc/middle/check_static_recursion.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c40fc79a1adb2564c6233605771bdeaecf348864/src%2Flibrustc%2Fmiddle%2Fcheck_static_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c40fc79a1adb2564c6233605771bdeaecf348864/src%2Flibrustc%2Fmiddle%2Fcheck_static_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_static_recursion.rs?ref=c40fc79a1adb2564c6233605771bdeaecf348864", "patch": "@@ -99,7 +99,17 @@ impl<'a, 'ast, 'v> Visitor<'v> for CheckItemRecursionVisitor<'a, 'ast> {\n                     Some(&DefStatic(def_id, _)) |\n                     Some(&DefConst(def_id)) if\n                             ast_util::is_local(def_id) => {\n-                        self.visit_item(&*self.ast_map.expect_item(def_id.node));\n+                        match self.ast_map.get(def_id.node) {\n+                          ast_map::NodeItem(item) =>\n+                            self.visit_item(item),\n+                          ast_map::NodeForeignItem(_) => {},\n+                          _ => {\n+                            self.sess.span_err(e.span,\n+                              format!(\"expected item, found {}\",\n+                                      self.ast_map.node_to_string(def_id.node)).as_slice());\n+                            return;\n+                          },\n+                        }\n                     }\n                     _ => ()\n                 }"}, {"sha": "b5c2a4f135fe2c0101f396b5c7a1a13a57a2dc61", "filename": "src/test/auxiliary/check_static_recursion_foreign_helper.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c40fc79a1adb2564c6233605771bdeaecf348864/src%2Ftest%2Fauxiliary%2Fcheck_static_recursion_foreign_helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c40fc79a1adb2564c6233605771bdeaecf348864/src%2Ftest%2Fauxiliary%2Fcheck_static_recursion_foreign_helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcheck_static_recursion_foreign_helper.rs?ref=c40fc79a1adb2564c6233605771bdeaecf348864", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Helper definition for test/run-pass/check-static-recursion-foreign.rs.\n+\n+#[crate_id = \"check_static_recursion_foreign_helper\"]\n+#[crate_type = \"lib\"]\n+\n+extern crate libc;\n+\n+#[no_mangle]\n+pub static test_static: libc::c_int = 0;"}, {"sha": "9acc0b3a3c52fa656217b68b2010205f9c3180cd", "filename": "src/test/run-pass/check-static-recursion-foreign.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c40fc79a1adb2564c6233605771bdeaecf348864/src%2Ftest%2Frun-pass%2Fcheck-static-recursion-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c40fc79a1adb2564c6233605771bdeaecf348864/src%2Ftest%2Frun-pass%2Fcheck-static-recursion-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcheck-static-recursion-foreign.rs?ref=c40fc79a1adb2564c6233605771bdeaecf348864", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Static recursion check shouldn't fail when given a foreign item (#18279)\n+\n+// aux-build:check_static_recursion_foreign_helper.rs\n+extern crate check_static_recursion_foreign_helper;\n+extern crate libc;\n+\n+use libc::c_int;\n+\n+#[link_name = \"check_static_recursion_foreign_helper\"]\n+extern \"C\" {\n+    #[allow(dead_code)]\n+    static test_static: c_int;\n+}\n+\n+static B: &'static c_int = &test_static;\n+\n+pub fn main() {}"}]}