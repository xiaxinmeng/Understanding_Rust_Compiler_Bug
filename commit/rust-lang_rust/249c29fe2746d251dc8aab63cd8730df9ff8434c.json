{"sha": "249c29fe2746d251dc8aab63cd8730df9ff8434c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0OWMyOWZlMjc0NmQyNTFkYzhhYWI2M2NkODczMGRmOWZmODQzNGM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-01-27T23:10:48Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-01-27T23:10:48Z"}, "message": "Rollup merge of #21666 - tshepang:rm-unloved-file, r=brson\n\nSee 579eb24", "tree": {"sha": "f5fbcf07cbe4a166677381c8e9753259e236d912", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5fbcf07cbe4a166677381c8e9753259e236d912"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/249c29fe2746d251dc8aab63cd8730df9ff8434c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/249c29fe2746d251dc8aab63cd8730df9ff8434c", "html_url": "https://github.com/rust-lang/rust/commit/249c29fe2746d251dc8aab63cd8730df9ff8434c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/249c29fe2746d251dc8aab63cd8730df9ff8434c/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78567f124465f6259edbaf09678415a537d57a78", "url": "https://api.github.com/repos/rust-lang/rust/commits/78567f124465f6259edbaf09678415a537d57a78", "html_url": "https://github.com/rust-lang/rust/commit/78567f124465f6259edbaf09678415a537d57a78"}, {"sha": "f1c22a0b4c2f4a9e29140d409e7d10d86cd844bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1c22a0b4c2f4a9e29140d409e7d10d86cd844bb", "html_url": "https://github.com/rust-lang/rust/commit/f1c22a0b4c2f4a9e29140d409e7d10d86cd844bb"}], "stats": {"total": 70, "additions": 0, "deletions": 70}, "files": [{"sha": "e3b51cb6b5bfd2405967e3c8f983021bf9b75db5", "filename": "src/test/bench/task-perf-one-million.rs", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/78567f124465f6259edbaf09678415a537d57a78/src%2Ftest%2Fbench%2Ftask-perf-one-million.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78567f124465f6259edbaf09678415a537d57a78/src%2Ftest%2Fbench%2Ftask-perf-one-million.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-one-million.rs?ref=78567f124465f6259edbaf09678415a537d57a78", "patch": "@@ -1,70 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Test for concurrent tasks\n-\n-// ignore-test OOM on linux-32 without opts\n-\n-use std::os;\n-use std::task;\n-use std::uint;\n-use std::slice;\n-\n-fn calc(children: uint, parent_wait_chan: &Sender<Sender<Sender<int>>>) {\n-\n-    let wait_ports: Vec<Reciever<Sender<Sender<int>>>> = vec::from_fn(children, |_| {\n-        let (wait_port, wait_chan) = stream::<Sender<Sender<int>>>();\n-        task::spawn(move|| {\n-            calc(children / 2, &wait_chan);\n-        });\n-        wait_port\n-    });\n-\n-    let child_start_chans: Vec<Sender<Sender<int>>> =\n-        wait_ports.into_iter().map(|port| port.recv()).collect();\n-\n-    let (start_port, start_chan) = stream::<Sender<int>>();\n-    parent_wait_chan.send(start_chan);\n-    let parent_result_chan: Sender<int> = start_port.recv();\n-\n-    let child_sum_ports: Vec<Reciever<int>> =\n-        child_start_chans.into_iter().map(|child_start_chan| {\n-            let (child_sum_port, child_sum_chan) = stream::<int>();\n-            child_start_chan.send(child_sum_chan);\n-            child_sum_port\n-    }).collect();\n-\n-    let sum = child_sum_ports.into_iter().fold(0, |sum, sum_port| sum + sum_port.recv() );\n-\n-    parent_result_chan.send(sum + 1);\n-}\n-\n-fn main() {\n-    let args = os::args();\n-    let args = if os::getenv(\"RUST_BENCH\").is_some() {\n-        vec!(\"\".to_string(), \"30\".to_string())\n-    } else if args.len() <= 1u {\n-        vec!(\"\".to_string(), \"10\".to_string())\n-    } else {\n-        args\n-    };\n-\n-    let children = from_str::<uint>(args[1]).unwrap();\n-    let (wait_port, wait_chan) = stream();\n-    task::spawn(move|| {\n-        calc(children, &wait_chan);\n-    });\n-\n-    let start_chan = wait_port.recv();\n-    let (sum_port, sum_chan) = stream::<int>();\n-    start_chan.send(sum_chan);\n-    let sum = sum_port.recv();\n-    println!(\"How many tasks? {} tasks.\", sum);\n-}"}]}