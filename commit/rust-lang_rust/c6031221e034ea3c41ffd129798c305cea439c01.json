{"sha": "c6031221e034ea3c41ffd129798c305cea439c01", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MDMxMjIxZTAzNGVhM2M0MWZmZDEyOTc5OGMzMDVjZWE0MzljMDE=", "commit": {"author": {"name": "Mark Nieweglowski", "email": "muth@exego.ca", "date": "2018-12-22T05:58:07Z"}, "committer": {"name": "Mark Nieweglowski", "email": "muth@exego.ca", "date": "2018-12-22T05:58:07Z"}, "message": "panic at map_unit_fn.rs:202 for map() without args", "tree": {"sha": "d2bd077fdd10aeaf80633d20b42973d1d1902585", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2bd077fdd10aeaf80633d20b42973d1d1902585"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6031221e034ea3c41ffd129798c305cea439c01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6031221e034ea3c41ffd129798c305cea439c01", "html_url": "https://github.com/rust-lang/rust/commit/c6031221e034ea3c41ffd129798c305cea439c01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6031221e034ea3c41ffd129798c305cea439c01/comments", "author": {"login": "muth", "id": 1159160, "node_id": "MDQ6VXNlcjExNTkxNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/1159160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muth", "html_url": "https://github.com/muth", "followers_url": "https://api.github.com/users/muth/followers", "following_url": "https://api.github.com/users/muth/following{/other_user}", "gists_url": "https://api.github.com/users/muth/gists{/gist_id}", "starred_url": "https://api.github.com/users/muth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muth/subscriptions", "organizations_url": "https://api.github.com/users/muth/orgs", "repos_url": "https://api.github.com/users/muth/repos", "events_url": "https://api.github.com/users/muth/events{/privacy}", "received_events_url": "https://api.github.com/users/muth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "muth", "id": 1159160, "node_id": "MDQ6VXNlcjExNTkxNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/1159160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muth", "html_url": "https://github.com/muth", "followers_url": "https://api.github.com/users/muth/followers", "following_url": "https://api.github.com/users/muth/following{/other_user}", "gists_url": "https://api.github.com/users/muth/gists{/gist_id}", "starred_url": "https://api.github.com/users/muth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muth/subscriptions", "organizations_url": "https://api.github.com/users/muth/orgs", "repos_url": "https://api.github.com/users/muth/repos", "events_url": "https://api.github.com/users/muth/events{/privacy}", "received_events_url": "https://api.github.com/users/muth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80c07d4c28c16f87fc7bf5a972e90d2037a9a691", "url": "https://api.github.com/repos/rust-lang/rust/commits/80c07d4c28c16f87fc7bf5a972e90d2037a9a691", "html_url": "https://github.com/rust-lang/rust/commit/80c07d4c28c16f87fc7bf5a972e90d2037a9a691"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e5c17beb4041059c2bc595ee7ef19af47843a200", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6031221e034ea3c41ffd129798c305cea439c01/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6031221e034ea3c41ffd129798c305cea439c01/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=c6031221e034ea3c41ffd129798c305cea439c01", "patch": "@@ -199,7 +199,6 @@ fn suggestion_msg(function_type: &str, map_type: &str) -> String {\n \n fn lint_map_unit_fn(cx: &LateContext<'_, '_>, stmt: &hir::Stmt, expr: &hir::Expr, map_args: &[hir::Expr]) {\n     let var_arg = &map_args[0];\n-    let fn_arg = &map_args[1];\n \n     let (map_type, variant, lint) = if match_type(cx, cx.tables.expr_ty(var_arg), &paths::OPTION) {\n         (\"Option\", \"Some\", OPTION_MAP_UNIT_FN)\n@@ -208,6 +207,7 @@ fn lint_map_unit_fn(cx: &LateContext<'_, '_>, stmt: &hir::Stmt, expr: &hir::Expr\n     } else {\n         return;\n     };\n+    let fn_arg = &map_args[1];\n \n     if is_unit_function(cx, fn_arg) {\n         let msg = suggestion_msg(\"function\", map_type);"}]}