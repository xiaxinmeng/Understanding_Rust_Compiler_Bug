{"sha": "bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYzNiZjcwMWM5ZTdkMGE5OWM1YTg5ZTVjOTVjZTU0M2NlMjFkYmU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-10T17:24:02Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-10T17:24:02Z"}, "message": "Don't re-export lsp_types", "tree": {"sha": "ebb15e1dc10956b015ccfd30df64ffe19c165e95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebb15e1dc10956b015ccfd30df64ffe19c165e95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe", "html_url": "https://github.com/rust-lang/rust/commit/bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a78e1573b1c65e1387102a42bb978d9e299fea39", "url": "https://api.github.com/repos/rust-lang/rust/commits/a78e1573b1c65e1387102a42bb978d9e299fea39", "html_url": "https://github.com/rust-lang/rust/commit/a78e1573b1c65e1387102a42bb978d9e299fea39"}], "stats": {"total": 238, "additions": 119, "deletions": 119}, "files": [{"sha": "333ecc859849c5987ba5e8e12e36dd3305fa1540", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 80, "deletions": 67, "changes": 147, "blob_url": "https://github.com/rust-lang/rust/blob/bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe", "patch": "@@ -104,7 +104,7 @@ pub fn main_loop(ws_roots: Vec<PathBuf>, config: Config, connection: Connection)\n \n             if project_roots.is_empty() && config.notifications.cargo_toml_not_found {\n                 show_message(\n-                    req::MessageType::Error,\n+                    lsp_types::MessageType::Error,\n                     format!(\n                         \"rust-analyzer failed to discover workspace, no Cargo.toml found, dirs searched: {}\",\n                         ws_roots.iter().format_with(\", \", |it, f| f(&it.display()))\n@@ -124,7 +124,7 @@ pub fn main_loop(ws_roots: Vec<PathBuf>, config: Config, connection: Connection)\n                     .map_err(|err| {\n                         log::error!(\"failed to load workspace: {:#}\", err);\n                         show_message(\n-                            req::MessageType::Error,\n+                            lsp_types::MessageType::Error,\n                             format!(\"rust-analyzer failed to load workspace: {:#}\", err),\n                             &connection.sender,\n                         );\n@@ -142,23 +142,25 @@ pub fn main_loop(ws_roots: Vec<PathBuf>, config: Config, connection: Connection)\n             .collect::<std::result::Result<Vec<_>, _>>()?;\n \n         if let FilesWatcher::Client = config.files.watcher {\n-            let registration_options = req::DidChangeWatchedFilesRegistrationOptions {\n+            let registration_options = lsp_types::DidChangeWatchedFilesRegistrationOptions {\n                 watchers: workspaces\n                     .iter()\n                     .flat_map(ProjectWorkspace::to_roots)\n                     .filter(PackageRoot::is_member)\n                     .map(|root| format!(\"{}/**/*.rs\", root.path().display()))\n-                    .map(|glob_pattern| req::FileSystemWatcher { glob_pattern, kind: None })\n+                    .map(|glob_pattern| lsp_types::FileSystemWatcher { glob_pattern, kind: None })\n                     .collect(),\n             };\n-            let registration = req::Registration {\n+            let registration = lsp_types::Registration {\n                 id: \"file-watcher\".to_string(),\n                 method: \"workspace/didChangeWatchedFiles\".to_string(),\n                 register_options: Some(serde_json::to_value(registration_options).unwrap()),\n             };\n-            let params = req::RegistrationParams { registrations: vec![registration] };\n-            let request =\n-                request_new::<req::RegisterCapability>(loop_state.next_request_id(), params);\n+            let params = lsp_types::RegistrationParams { registrations: vec![registration] };\n+            let request = request_new::<lsp_types::request::RegisterCapability>(\n+                loop_state.next_request_id(),\n+                params,\n+            );\n             connection.sender.send(request.into()).unwrap();\n         }\n \n@@ -258,14 +260,14 @@ impl fmt::Debug for Event {\n \n         match self {\n             Event::Msg(Message::Notification(not)) => {\n-                if notification_is::<req::DidOpenTextDocument>(not)\n-                    || notification_is::<req::DidChangeTextDocument>(not)\n+                if notification_is::<lsp_types::notification::DidOpenTextDocument>(not)\n+                    || notification_is::<lsp_types::notification::DidChangeTextDocument>(not)\n                 {\n                     return debug_verbose_not(not, f);\n                 }\n             }\n             Event::Task(Task::Notify(not)) => {\n-                if notification_is::<req::PublishDiagnostics>(not) {\n+                if notification_is::<lsp_types::notification::PublishDiagnostics>(not) {\n                     return debug_verbose_not(not, f);\n                 }\n             }\n@@ -450,7 +452,7 @@ fn loop_turn(\n         log::error!(\"overly long loop turn: {:?}\", loop_duration);\n         if env::var(\"RA_PROFILE\").is_ok() {\n             show_message(\n-                req::MessageType::Error,\n+                lsp_types::MessageType::Error,\n                 format!(\"overly long loop turn: {:?}\", loop_duration),\n                 &connection.sender,\n             );\n@@ -503,7 +505,7 @@ fn on_request(\n         .on_sync::<req::CollectGarbage>(|s, ()| Ok(s.collect_garbage()))?\n         .on_sync::<req::JoinLines>(|s, p| handlers::handle_join_lines(s.snapshot(), p))?\n         .on_sync::<req::OnEnter>(|s, p| handlers::handle_on_enter(s.snapshot(), p))?\n-        .on_sync::<req::SelectionRangeRequest>(|s, p| {\n+        .on_sync::<lsp_types::request::SelectionRangeRequest>(|s, p| {\n             handlers::handle_selection_range(s.snapshot(), p)\n         })?\n         .on_sync::<req::FindMatchingBrace>(|s, p| {\n@@ -512,32 +514,38 @@ fn on_request(\n         .on::<req::AnalyzerStatus>(handlers::handle_analyzer_status)?\n         .on::<req::SyntaxTree>(handlers::handle_syntax_tree)?\n         .on::<req::ExpandMacro>(handlers::handle_expand_macro)?\n-        .on::<req::OnTypeFormatting>(handlers::handle_on_type_formatting)?\n-        .on::<req::DocumentSymbolRequest>(handlers::handle_document_symbol)?\n-        .on::<req::WorkspaceSymbol>(handlers::handle_workspace_symbol)?\n-        .on::<req::GotoDefinition>(handlers::handle_goto_definition)?\n-        .on::<req::GotoImplementation>(handlers::handle_goto_implementation)?\n-        .on::<req::GotoTypeDefinition>(handlers::handle_goto_type_definition)?\n+        .on::<lsp_types::request::OnTypeFormatting>(handlers::handle_on_type_formatting)?\n+        .on::<lsp_types::request::DocumentSymbolRequest>(handlers::handle_document_symbol)?\n+        .on::<lsp_types::request::WorkspaceSymbol>(handlers::handle_workspace_symbol)?\n+        .on::<lsp_types::request::GotoDefinition>(handlers::handle_goto_definition)?\n+        .on::<lsp_types::request::GotoImplementation>(handlers::handle_goto_implementation)?\n+        .on::<lsp_types::request::GotoTypeDefinition>(handlers::handle_goto_type_definition)?\n         .on::<req::ParentModule>(handlers::handle_parent_module)?\n         .on::<req::Runnables>(handlers::handle_runnables)?\n-        .on::<req::Completion>(handlers::handle_completion)?\n-        .on::<req::CodeActionRequest>(handlers::handle_code_action)?\n-        .on::<req::CodeLensRequest>(handlers::handle_code_lens)?\n-        .on::<req::CodeLensResolve>(handlers::handle_code_lens_resolve)?\n-        .on::<req::FoldingRangeRequest>(handlers::handle_folding_range)?\n-        .on::<req::SignatureHelpRequest>(handlers::handle_signature_help)?\n-        .on::<req::HoverRequest>(handlers::handle_hover)?\n-        .on::<req::PrepareRenameRequest>(handlers::handle_prepare_rename)?\n-        .on::<req::Rename>(handlers::handle_rename)?\n-        .on::<req::References>(handlers::handle_references)?\n-        .on::<req::Formatting>(handlers::handle_formatting)?\n-        .on::<req::DocumentHighlightRequest>(handlers::handle_document_highlight)?\n+        .on::<lsp_types::request::Completion>(handlers::handle_completion)?\n+        .on::<lsp_types::request::CodeActionRequest>(handlers::handle_code_action)?\n+        .on::<lsp_types::request::CodeLensRequest>(handlers::handle_code_lens)?\n+        .on::<lsp_types::request::CodeLensResolve>(handlers::handle_code_lens_resolve)?\n+        .on::<lsp_types::request::FoldingRangeRequest>(handlers::handle_folding_range)?\n+        .on::<lsp_types::request::SignatureHelpRequest>(handlers::handle_signature_help)?\n+        .on::<lsp_types::request::HoverRequest>(handlers::handle_hover)?\n+        .on::<lsp_types::request::PrepareRenameRequest>(handlers::handle_prepare_rename)?\n+        .on::<lsp_types::request::Rename>(handlers::handle_rename)?\n+        .on::<lsp_types::request::References>(handlers::handle_references)?\n+        .on::<lsp_types::request::Formatting>(handlers::handle_formatting)?\n+        .on::<lsp_types::request::DocumentHighlightRequest>(handlers::handle_document_highlight)?\n         .on::<req::InlayHints>(handlers::handle_inlay_hints)?\n-        .on::<req::CallHierarchyPrepare>(handlers::handle_call_hierarchy_prepare)?\n-        .on::<req::CallHierarchyIncomingCalls>(handlers::handle_call_hierarchy_incoming)?\n-        .on::<req::CallHierarchyOutgoingCalls>(handlers::handle_call_hierarchy_outgoing)?\n-        .on::<req::SemanticTokensRequest>(handlers::handle_semantic_tokens)?\n-        .on::<req::SemanticTokensRangeRequest>(handlers::handle_semantic_tokens_range)?\n+        .on::<lsp_types::request::CallHierarchyPrepare>(handlers::handle_call_hierarchy_prepare)?\n+        .on::<lsp_types::request::CallHierarchyIncomingCalls>(\n+            handlers::handle_call_hierarchy_incoming,\n+        )?\n+        .on::<lsp_types::request::CallHierarchyOutgoingCalls>(\n+            handlers::handle_call_hierarchy_outgoing,\n+        )?\n+        .on::<lsp_types::request::SemanticTokensRequest>(handlers::handle_semantic_tokens)?\n+        .on::<lsp_types::request::SemanticTokensRangeRequest>(\n+            handlers::handle_semantic_tokens_range,\n+        )?\n         .on::<req::Ssr>(handlers::handle_ssr)?\n         .finish();\n     Ok(())\n@@ -549,7 +557,7 @@ fn on_notification(\n     loop_state: &mut LoopState,\n     not: Notification,\n ) -> Result<()> {\n-    let not = match notification_cast::<req::Cancel>(not) {\n+    let not = match notification_cast::<lsp_types::notification::Cancel>(not) {\n         Ok(params) => {\n             let id: RequestId = match params.id {\n                 NumberOrString::Number(id) => id.into(),\n@@ -567,7 +575,7 @@ fn on_notification(\n         }\n         Err(not) => not,\n     };\n-    let not = match notification_cast::<req::DidOpenTextDocument>(not) {\n+    let not = match notification_cast::<lsp_types::notification::DidOpenTextDocument>(not) {\n         Ok(params) => {\n             let uri = params.text_document.uri;\n             let path = uri.to_file_path().map_err(|()| format!(\"invalid uri: {}\", uri))?;\n@@ -580,7 +588,7 @@ fn on_notification(\n         }\n         Err(not) => not,\n     };\n-    let not = match notification_cast::<req::DidChangeTextDocument>(not) {\n+    let not = match notification_cast::<lsp_types::notification::DidChangeTextDocument>(not) {\n         Ok(params) => {\n             let DidChangeTextDocumentParams { text_document, content_changes } = params;\n             let world = state.snapshot();\n@@ -595,7 +603,7 @@ fn on_notification(\n         }\n         Err(not) => not,\n     };\n-    let not = match notification_cast::<req::DidSaveTextDocument>(not) {\n+    let not = match notification_cast::<lsp_types::notification::DidSaveTextDocument>(not) {\n         Ok(_params) => {\n             if let Some(flycheck) = &state.flycheck {\n                 flycheck.update();\n@@ -604,30 +612,30 @@ fn on_notification(\n         }\n         Err(not) => not,\n     };\n-    let not = match notification_cast::<req::DidCloseTextDocument>(not) {\n+    let not = match notification_cast::<lsp_types::notification::DidCloseTextDocument>(not) {\n         Ok(params) => {\n             let uri = params.text_document.uri;\n             let path = uri.to_file_path().map_err(|()| format!(\"invalid uri: {}\", uri))?;\n             if let Some(file_id) = state.vfs.write().remove_file_overlay(path.as_path()) {\n                 loop_state.subscriptions.remove_sub(FileId(file_id.0));\n             }\n             let params =\n-                req::PublishDiagnosticsParams { uri, diagnostics: Vec::new(), version: None };\n-            let not = notification_new::<req::PublishDiagnostics>(params);\n+                lsp_types::PublishDiagnosticsParams { uri, diagnostics: Vec::new(), version: None };\n+            let not = notification_new::<lsp_types::notification::PublishDiagnostics>(params);\n             msg_sender.send(not.into()).unwrap();\n             return Ok(());\n         }\n         Err(not) => not,\n     };\n-    let not = match notification_cast::<req::DidChangeConfiguration>(not) {\n+    let not = match notification_cast::<lsp_types::notification::DidChangeConfiguration>(not) {\n         Ok(_) => {\n             // As stated in https://github.com/microsoft/language-server-protocol/issues/676,\n             // this notification's parameters should be ignored and the actual config queried separately.\n             let request_id = loop_state.next_request_id();\n-            let request = request_new::<req::WorkspaceConfiguration>(\n+            let request = request_new::<lsp_types::request::WorkspaceConfiguration>(\n                 request_id.clone(),\n-                req::ConfigurationParams {\n-                    items: vec![req::ConfigurationItem {\n+                lsp_types::ConfigurationParams {\n+                    items: vec![lsp_types::ConfigurationItem {\n                         scope_uri: None,\n                         section: Some(\"rust-analyzer\".to_string()),\n                     }],\n@@ -640,7 +648,7 @@ fn on_notification(\n         }\n         Err(not) => not,\n     };\n-    let not = match notification_cast::<req::DidChangeWatchedFiles>(not) {\n+    let not = match notification_cast::<lsp_types::notification::DidChangeWatchedFiles>(not) {\n         Ok(params) => {\n             let mut vfs = state.vfs.write();\n             for change in params.changes {\n@@ -742,11 +750,11 @@ fn on_check_task(\n         }\n \n         CheckTask::Status(progress) => {\n-            let params = req::ProgressParams {\n-                token: req::ProgressToken::String(\"rustAnalyzer/cargoWatcher\".to_string()),\n-                value: req::ProgressParamsValue::WorkDone(progress),\n+            let params = lsp_types::ProgressParams {\n+                token: lsp_types::ProgressToken::String(\"rustAnalyzer/cargoWatcher\".to_string()),\n+                value: lsp_types::ProgressParamsValue::WorkDone(progress),\n             };\n-            let not = notification_new::<req::Progress>(params);\n+            let not = notification_new::<lsp_types::notification::Progress>(params);\n             task_sender.send(Task::Notify(not)).unwrap();\n         }\n     };\n@@ -768,8 +776,8 @@ fn on_diagnostic_task(task: DiagnosticTask, msg_sender: &Sender<Message>, state:\n         };\n \n         let diagnostics = state.diagnostics.diagnostics_for(file_id).cloned().collect();\n-        let params = req::PublishDiagnosticsParams { uri, diagnostics, version: None };\n-        let not = notification_new::<req::PublishDiagnostics>(params);\n+        let params = lsp_types::PublishDiagnosticsParams { uri, diagnostics, version: None };\n+        let not = notification_new::<lsp_types::notification::PublishDiagnostics>(params);\n         msg_sender.send(not.into()).unwrap();\n     }\n }\n@@ -782,10 +790,10 @@ fn send_startup_progress(sender: &Sender<Message>, loop_state: &mut LoopState) {\n \n     match (prev, loop_state.workspace_loaded) {\n         (None, false) => {\n-            let work_done_progress_create = request_new::<req::WorkDoneProgressCreate>(\n+            let work_done_progress_create = request_new::<lsp_types::request::WorkDoneProgressCreate>(\n                 loop_state.next_request_id(),\n                 WorkDoneProgressCreateParams {\n-                    token: req::ProgressToken::String(\"rustAnalyzer/startup\".into()),\n+                    token: lsp_types::ProgressToken::String(\"rustAnalyzer/startup\".into()),\n                 },\n             );\n             sender.send(work_done_progress_create.into()).unwrap();\n@@ -817,10 +825,11 @@ fn send_startup_progress(sender: &Sender<Message>, loop_state: &mut LoopState) {\n     }\n \n     fn send_startup_progress_notif(sender: &Sender<Message>, work_done_progress: WorkDoneProgress) {\n-        let notif = notification_new::<req::Progress>(req::ProgressParams {\n-            token: req::ProgressToken::String(\"rustAnalyzer/startup\".into()),\n-            value: req::ProgressParamsValue::WorkDone(work_done_progress),\n-        });\n+        let notif =\n+            notification_new::<lsp_types::notification::Progress>(lsp_types::ProgressParams {\n+                token: lsp_types::ProgressToken::String(\"rustAnalyzer/startup\".into()),\n+                value: lsp_types::ProgressParamsValue::WorkDone(work_done_progress),\n+            });\n         sender.send(notif.into()).unwrap();\n     }\n }\n@@ -842,7 +851,7 @@ impl<'a> PoolDispatcher<'a> {\n         f: fn(&mut WorldState, R::Params) -> Result<R::Result>,\n     ) -> Result<&mut Self>\n     where\n-        R: req::Request + 'static,\n+        R: lsp_types::request::Request + 'static,\n         R::Params: DeserializeOwned + panic::UnwindSafe + 'static,\n         R::Result: Serialize + 'static,\n     {\n@@ -865,7 +874,7 @@ impl<'a> PoolDispatcher<'a> {\n     /// Dispatches the request onto thread pool\n     fn on<R>(&mut self, f: fn(WorldSnapshot, R::Params) -> Result<R::Result>) -> Result<&mut Self>\n     where\n-        R: req::Request + 'static,\n+        R: lsp_types::request::Request + 'static,\n         R::Params: DeserializeOwned + Send + 'static,\n         R::Result: Serialize + 'static,\n     {\n@@ -891,7 +900,7 @@ impl<'a> PoolDispatcher<'a> {\n \n     fn parse<R>(&mut self) -> Option<(RequestId, R::Params)>\n     where\n-        R: req::Request + 'static,\n+        R: lsp_types::request::Request + 'static,\n         R::Params: DeserializeOwned + 'static,\n     {\n         let req = self.req.take()?;\n@@ -928,7 +937,7 @@ impl<'a> PoolDispatcher<'a> {\n \n fn result_to_task<R>(id: RequestId, result: Result<R::Result>) -> Task\n where\n-    R: req::Request + 'static,\n+    R: lsp_types::request::Request + 'static,\n     R::Params: DeserializeOwned + 'static,\n     R::Result: Serialize + 'static,\n {\n@@ -984,10 +993,14 @@ fn update_file_notifications_on_threadpool(\n     }\n }\n \n-pub fn show_message(typ: req::MessageType, message: impl Into<String>, sender: &Sender<Message>) {\n+pub fn show_message(\n+    typ: lsp_types::MessageType,\n+    message: impl Into<String>,\n+    sender: &Sender<Message>,\n+) {\n     let message = message.into();\n-    let params = req::ShowMessageParams { typ, message };\n-    let not = notification_new::<req::ShowMessage>(params);\n+    let params = lsp_types::ShowMessageParams { typ, message };\n+    let not = notification_new::<lsp_types::notification::ShowMessage>(params);\n     sender.send(not.into()).unwrap();\n }\n "}, {"sha": "7aa77d19a4908e52112275d3f0a57f99efda6155", "filename": "crates/rust-analyzer/src/main_loop/handlers.rs", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe", "patch": "@@ -81,12 +81,12 @@ pub fn handle_expand_macro(\n \n pub fn handle_selection_range(\n     world: WorldSnapshot,\n-    params: req::SelectionRangeParams,\n-) -> Result<Option<Vec<req::SelectionRange>>> {\n+    params: lsp_types::SelectionRangeParams,\n+) -> Result<Option<Vec<lsp_types::SelectionRange>>> {\n     let _p = profile(\"handle_selection_range\");\n     let file_id = from_proto::file_id(&world, &params.text_document.uri)?;\n     let line_index = world.analysis().file_line_index(file_id)?;\n-    let res: Result<Vec<req::SelectionRange>> = params\n+    let res: Result<Vec<lsp_types::SelectionRange>> = params\n         .positions\n         .into_iter()\n         .map(|position| {\n@@ -105,12 +105,12 @@ pub fn handle_selection_range(\n                     }\n                 }\n             }\n-            let mut range = req::SelectionRange {\n+            let mut range = lsp_types::SelectionRange {\n                 range: to_proto::range(&line_index, *ranges.last().unwrap()),\n                 parent: None,\n             };\n             for &r in ranges.iter().rev().skip(1) {\n-                range = req::SelectionRange {\n+                range = lsp_types::SelectionRange {\n                     range: to_proto::range(&line_index, r),\n                     parent: Some(Box::new(range)),\n                 }\n@@ -156,7 +156,7 @@ pub fn handle_join_lines(\n \n pub fn handle_on_enter(\n     world: WorldSnapshot,\n-    params: req::TextDocumentPositionParams,\n+    params: lsp_types::TextDocumentPositionParams,\n ) -> Result<Option<req::SourceChange>> {\n     let _p = profile(\"handle_on_enter\");\n     let position = from_proto::file_position(&world, params)?;\n@@ -169,7 +169,7 @@ pub fn handle_on_enter(\n // Don't forget to add new trigger characters to `ServerCapabilities` in `caps.rs`.\n pub fn handle_on_type_formatting(\n     world: WorldSnapshot,\n-    params: req::DocumentOnTypeFormattingParams,\n+    params: lsp_types::DocumentOnTypeFormattingParams,\n ) -> Result<Option<Vec<TextEdit>>> {\n     let _p = profile(\"handle_on_type_formatting\");\n     let mut position = from_proto::file_position(&world, params.text_document_position)?;\n@@ -208,8 +208,8 @@ pub fn handle_on_type_formatting(\n \n pub fn handle_document_symbol(\n     world: WorldSnapshot,\n-    params: req::DocumentSymbolParams,\n-) -> Result<Option<req::DocumentSymbolResponse>> {\n+    params: lsp_types::DocumentSymbolParams,\n+) -> Result<Option<lsp_types::DocumentSymbolResponse>> {\n     let _p = profile(\"handle_document_symbol\");\n     let file_id = from_proto::file_id(&world, &params.text_document.uri)?;\n     let line_index = world.analysis().file_line_index(file_id)?;\n@@ -276,7 +276,7 @@ pub fn handle_document_symbol(\n \n pub fn handle_workspace_symbol(\n     world: WorldSnapshot,\n-    params: req::WorkspaceSymbolParams,\n+    params: lsp_types::WorkspaceSymbolParams,\n ) -> Result<Option<Vec<SymbolInformation>>> {\n     let _p = profile(\"handle_workspace_symbol\");\n     let all_symbols = params.query.contains('#');\n@@ -320,8 +320,8 @@ pub fn handle_workspace_symbol(\n \n pub fn handle_goto_definition(\n     world: WorldSnapshot,\n-    params: req::GotoDefinitionParams,\n-) -> Result<Option<req::GotoDefinitionResponse>> {\n+    params: lsp_types::GotoDefinitionParams,\n+) -> Result<Option<lsp_types::GotoDefinitionResponse>> {\n     let _p = profile(\"handle_goto_definition\");\n     let position = from_proto::file_position(&world, params.text_document_position_params)?;\n     let nav_info = match world.analysis().goto_definition(position)? {\n@@ -338,8 +338,8 @@ pub fn handle_goto_definition(\n \n pub fn handle_goto_implementation(\n     world: WorldSnapshot,\n-    params: req::GotoImplementationParams,\n-) -> Result<Option<req::GotoImplementationResponse>> {\n+    params: lsp_types::request::GotoImplementationParams,\n+) -> Result<Option<lsp_types::request::GotoImplementationResponse>> {\n     let _p = profile(\"handle_goto_implementation\");\n     let position = from_proto::file_position(&world, params.text_document_position_params)?;\n     let nav_info = match world.analysis().goto_implementation(position)? {\n@@ -356,8 +356,8 @@ pub fn handle_goto_implementation(\n \n pub fn handle_goto_type_definition(\n     world: WorldSnapshot,\n-    params: req::GotoTypeDefinitionParams,\n-) -> Result<Option<req::GotoTypeDefinitionResponse>> {\n+    params: lsp_types::request::GotoTypeDefinitionParams,\n+) -> Result<Option<lsp_types::request::GotoTypeDefinitionResponse>> {\n     let _p = profile(\"handle_goto_type_definition\");\n     let position = from_proto::file_position(&world, params.text_document_position_params)?;\n     let nav_info = match world.analysis().goto_type_definition(position)? {\n@@ -374,7 +374,7 @@ pub fn handle_goto_type_definition(\n \n pub fn handle_parent_module(\n     world: WorldSnapshot,\n-    params: req::TextDocumentPositionParams,\n+    params: lsp_types::TextDocumentPositionParams,\n ) -> Result<Vec<Location>> {\n     let _p = profile(\"handle_parent_module\");\n     let position = from_proto::file_position(&world, params)?;\n@@ -447,8 +447,8 @@ pub fn handle_runnables(\n \n pub fn handle_completion(\n     world: WorldSnapshot,\n-    params: req::CompletionParams,\n-) -> Result<Option<req::CompletionResponse>> {\n+    params: lsp_types::CompletionParams,\n+) -> Result<Option<lsp_types::CompletionResponse>> {\n     let _p = profile(\"handle_completion\");\n     let position = from_proto::file_position(&world, params.text_document_position)?;\n     let completion_triggered_after_single_colon = {\n@@ -506,8 +506,8 @@ pub fn handle_folding_range(\n \n pub fn handle_signature_help(\n     world: WorldSnapshot,\n-    params: req::SignatureHelpParams,\n-) -> Result<Option<req::SignatureHelp>> {\n+    params: lsp_types::SignatureHelpParams,\n+) -> Result<Option<lsp_types::SignatureHelp>> {\n     let _p = profile(\"handle_signature_help\");\n     let position = from_proto::file_position(&world, params.text_document_position_params)?;\n     let call_info = match world.analysis().call_info(position)? {\n@@ -521,14 +521,14 @@ pub fn handle_signature_help(\n     }\n     let sig_info = to_proto::signature_information(call_info.signature, concise);\n \n-    Ok(Some(req::SignatureHelp {\n+    Ok(Some(lsp_types::SignatureHelp {\n         signatures: vec![sig_info],\n         active_signature: Some(0),\n         active_parameter,\n     }))\n }\n \n-pub fn handle_hover(world: WorldSnapshot, params: req::HoverParams) -> Result<Option<Hover>> {\n+pub fn handle_hover(world: WorldSnapshot, params: lsp_types::HoverParams) -> Result<Option<Hover>> {\n     let _p = profile(\"handle_hover\");\n     let position = from_proto::file_position(&world, params.text_document_position_params)?;\n     let info = match world.analysis().hover(position)? {\n@@ -549,7 +549,7 @@ pub fn handle_hover(world: WorldSnapshot, params: req::HoverParams) -> Result<Op\n \n pub fn handle_prepare_rename(\n     world: WorldSnapshot,\n-    params: req::TextDocumentPositionParams,\n+    params: lsp_types::TextDocumentPositionParams,\n ) -> Result<Option<PrepareRenameResponse>> {\n     let _p = profile(\"handle_prepare_rename\");\n     let position = from_proto::file_position(&world, params)?;\n@@ -589,7 +589,7 @@ pub fn handle_rename(world: WorldSnapshot, params: RenameParams) -> Result<Optio\n \n pub fn handle_references(\n     world: WorldSnapshot,\n-    params: req::ReferenceParams,\n+    params: lsp_types::ReferenceParams,\n ) -> Result<Option<Vec<Location>>> {\n     let _p = profile(\"handle_references\");\n     let position = from_proto::file_position(&world, params.text_document_position)?;\n@@ -692,7 +692,7 @@ pub fn handle_formatting(\n \n pub fn handle_code_action(\n     world: WorldSnapshot,\n-    params: req::CodeActionParams,\n+    params: lsp_types::CodeActionParams,\n ) -> Result<Option<CodeActionResponse>> {\n     let _p = profile(\"handle_code_action\");\n     let file_id = from_proto::file_id(&world, &params.text_document.uri)?;\n@@ -806,7 +806,7 @@ pub fn handle_code_action(\n \n pub fn handle_code_lens(\n     world: WorldSnapshot,\n-    params: req::CodeLensParams,\n+    params: lsp_types::CodeLensParams,\n ) -> Result<Option<Vec<CodeLens>>> {\n     let _p = profile(\"handle_code_lens\");\n     let file_id = from_proto::file_id(&world, &params.text_document.uri)?;\n@@ -875,8 +875,8 @@ pub fn handle_code_lens(\n             .map(|it| {\n                 let range = to_proto::range(&line_index, it.node_range);\n                 let pos = range.start;\n-                let lens_params = req::GotoImplementationParams {\n-                    text_document_position_params: req::TextDocumentPositionParams::new(\n+                let lens_params = lsp_types::request::GotoImplementationParams {\n+                    text_document_position_params: lsp_types::TextDocumentPositionParams::new(\n                         params.text_document.clone(),\n                         pos,\n                     ),\n@@ -897,7 +897,7 @@ pub fn handle_code_lens(\n #[derive(Debug, Serialize, Deserialize)]\n #[serde(rename_all = \"camelCase\")]\n enum CodeLensResolveData {\n-    Impls(req::GotoImplementationParams),\n+    Impls(lsp_types::request::GotoImplementationParams),\n }\n \n pub fn handle_code_lens_resolve(world: WorldSnapshot, code_lens: CodeLens) -> Result<CodeLens> {\n@@ -908,9 +908,9 @@ pub fn handle_code_lens_resolve(world: WorldSnapshot, code_lens: CodeLens) -> Re\n         Some(CodeLensResolveData::Impls(lens_params)) => {\n             let locations: Vec<Location> =\n                 match handle_goto_implementation(world, lens_params.clone())? {\n-                    Some(req::GotoDefinitionResponse::Scalar(loc)) => vec![loc],\n-                    Some(req::GotoDefinitionResponse::Array(locs)) => locs,\n-                    Some(req::GotoDefinitionResponse::Link(links)) => links\n+                    Some(lsp_types::GotoDefinitionResponse::Scalar(loc)) => vec![loc],\n+                    Some(lsp_types::GotoDefinitionResponse::Array(locs)) => locs,\n+                    Some(lsp_types::GotoDefinitionResponse::Link(links)) => links\n                         .into_iter()\n                         .map(|link| Location::new(link.target_uri, link.target_selection_range))\n                         .collect(),\n@@ -947,7 +947,7 @@ pub fn handle_code_lens_resolve(world: WorldSnapshot, code_lens: CodeLens) -> Re\n \n pub fn handle_document_highlight(\n     world: WorldSnapshot,\n-    params: req::DocumentHighlightParams,\n+    params: lsp_types::DocumentHighlightParams,\n ) -> Result<Option<Vec<DocumentHighlight>>> {\n     let _p = profile(\"handle_document_highlight\");\n     let position = from_proto::file_position(&world, params.text_document_position_params)?;"}, {"sha": "aeb29370c0d0ae31925d61dbd0f6b1303bc674ab", "filename": "crates/rust-analyzer/src/req.rs", "status": "modified", "additions": 5, "deletions": 18, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe/crates%2Frust-analyzer%2Fsrc%2Freq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe/crates%2Frust-analyzer%2Fsrc%2Freq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freq.rs?ref=bec3bf701c9e7d0a99c5a89e5c95ce543ce21dbe", "patch": "@@ -1,23 +1,10 @@\n //! Defines `rust-analyzer` specific custom messages.\n \n+use lsp_types::request::Request;\n use lsp_types::{Location, Position, Range, TextDocumentIdentifier};\n use rustc_hash::FxHashMap;\n use serde::{Deserialize, Serialize};\n \n-pub use lsp_types::{\n-    notification::*, request::*, ApplyWorkspaceEditParams, CodeActionParams, CodeLens,\n-    CodeLensParams, CompletionParams, CompletionResponse, ConfigurationItem, ConfigurationParams,\n-    DiagnosticTag, DidChangeConfigurationParams, DidChangeWatchedFilesParams,\n-    DidChangeWatchedFilesRegistrationOptions, DocumentHighlightParams,\n-    DocumentOnTypeFormattingParams, DocumentSymbolParams, DocumentSymbolResponse,\n-    FileSystemWatcher, GotoDefinitionParams, GotoDefinitionResponse, Hover, HoverParams,\n-    InitializeResult, MessageType, PartialResultParams, ProgressParams, ProgressParamsValue,\n-    ProgressToken, PublishDiagnosticsParams, ReferenceParams, Registration, RegistrationParams,\n-    SelectionRange, SelectionRangeParams, SemanticTokensParams, SemanticTokensRangeParams,\n-    SemanticTokensRangeResult, SemanticTokensResult, ServerCapabilities, ShowMessageParams,\n-    SignatureHelp, SignatureHelpParams, SymbolKind, TextDocumentEdit, TextDocumentPositionParams,\n-    TextEdit, WorkDoneProgressParams, WorkspaceEdit, WorkspaceSymbolParams,\n-};\n use std::path::PathBuf;\n \n pub enum AnalyzerStatus {}\n@@ -91,7 +78,7 @@ pub struct FindMatchingBraceParams {\n pub enum ParentModule {}\n \n impl Request for ParentModule {\n-    type Params = TextDocumentPositionParams;\n+    type Params = lsp_types::TextDocumentPositionParams;\n     type Result = Vec<Location>;\n     const METHOD: &'static str = \"rust-analyzer/parentModule\";\n }\n@@ -114,7 +101,7 @@ pub struct JoinLinesParams {\n pub enum OnEnter {}\n \n impl Request for OnEnter {\n-    type Params = TextDocumentPositionParams;\n+    type Params = lsp_types::TextDocumentPositionParams;\n     type Result = Option<SourceChange>;\n     const METHOD: &'static str = \"rust-analyzer/onEnter\";\n }\n@@ -150,8 +137,8 @@ pub struct Runnable {\n #[serde(rename_all = \"camelCase\")]\n pub struct SourceChange {\n     pub label: String,\n-    pub workspace_edit: WorkspaceEdit,\n-    pub cursor_position: Option<TextDocumentPositionParams>,\n+    pub workspace_edit: lsp_types::WorkspaceEdit,\n+    pub cursor_position: Option<lsp_types::TextDocumentPositionParams>,\n }\n \n pub enum InlayHints {}"}]}