{"sha": "e75937022e9df6ade583b11ee44038ef32d1299a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NTkzNzAyMmU5ZGY2YWRlNTgzYjExZWU0NDAzOGVmMzJkMTI5OWE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-06-03T16:14:29Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-06-13T16:32:39Z"}, "message": "Add docs to librustc/hir/check_attr.rs", "tree": {"sha": "bed73b9468edb7e0b86d0facdbeefa63933bff0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bed73b9468edb7e0b86d0facdbeefa63933bff0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e75937022e9df6ade583b11ee44038ef32d1299a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e75937022e9df6ade583b11ee44038ef32d1299a", "html_url": "https://github.com/rust-lang/rust/commit/e75937022e9df6ade583b11ee44038ef32d1299a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e75937022e9df6ade583b11ee44038ef32d1299a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4225019750f437c8c247a2682f01abe5ada69c46", "url": "https://api.github.com/repos/rust-lang/rust/commits/4225019750f437c8c247a2682f01abe5ada69c46", "html_url": "https://github.com/rust-lang/rust/commit/4225019750f437c8c247a2682f01abe5ada69c46"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "3034242b59408dbc8363ace84eb98fa8337c7f96", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e75937022e9df6ade583b11ee44038ef32d1299a/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e75937022e9df6ade583b11ee44038ef32d1299a/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=e75937022e9df6ade583b11ee44038ef32d1299a", "patch": "@@ -8,6 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! This module implements some validity checks for attributes.\n+//! In particular it verifies that `#[inline]` and `#[repr]` attributes are\n+//! attached to items that actually support them and if there are\n+//! conflicts between multiple such attributes attached to the same\n+//! item.\n+\n use session::Session;\n \n use syntax::ast;\n@@ -40,6 +46,18 @@ struct CheckAttrVisitor<'a> {\n }\n \n impl<'a> CheckAttrVisitor<'a> {\n+    /// Check any attribute.\n+    fn check_attribute(&self, attr: &ast::Attribute, target: Target) {\n+        if let Some(name) = attr.name() {\n+            match &*name.as_str() {\n+                \"inline\" => self.check_inline(attr, target),\n+                \"repr\" => self.check_repr(attr, target),\n+                _ => (),\n+            }\n+        }\n+    }\n+\n+    /// Check if an `#[inline]` is applied to a function.\n     fn check_inline(&self, attr: &ast::Attribute, target: Target) {\n         if target != Target::Fn {\n             struct_span_err!(self.sess, attr.span, E0518, \"attribute should be applied to function\")\n@@ -48,6 +66,7 @@ impl<'a> CheckAttrVisitor<'a> {\n         }\n     }\n \n+    /// Check if an `#[repr]` attr is valid.\n     fn check_repr(&self, attr: &ast::Attribute, target: Target) {\n         let words = match attr.meta_item_list() {\n             Some(words) => words,\n@@ -135,16 +154,6 @@ impl<'a> CheckAttrVisitor<'a> {\n                              \"conflicting packed and align representation hints\").emit();\n         }\n     }\n-\n-    fn check_attribute(&self, attr: &ast::Attribute, target: Target) {\n-        if let Some(name) = attr.name() {\n-            match &*name.as_str() {\n-                \"inline\" => self.check_inline(attr, target),\n-                \"repr\" => self.check_repr(attr, target),\n-                _ => (),\n-            }\n-        }\n-    }\n }\n \n impl<'a> Visitor<'a> for CheckAttrVisitor<'a> {"}]}