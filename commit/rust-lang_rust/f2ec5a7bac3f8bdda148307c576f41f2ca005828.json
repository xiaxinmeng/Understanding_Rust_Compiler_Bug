{"sha": "f2ec5a7bac3f8bdda148307c576f41f2ca005828", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZWM1YTdiYWMzZjhiZGRhMTQ4MzA3YzU3NmY0MWYyY2EwMDU4Mjg=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-19T10:31:01Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-23T02:37:12Z"}, "message": "Refactor source codes", "tree": {"sha": "344cf4f1c4bf6e4d79c18fb94df6d93c5f7c74e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/344cf4f1c4bf6e4d79c18fb94df6d93c5f7c74e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2ec5a7bac3f8bdda148307c576f41f2ca005828", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2ec5a7bac3f8bdda148307c576f41f2ca005828", "html_url": "https://github.com/rust-lang/rust/commit/f2ec5a7bac3f8bdda148307c576f41f2ca005828", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2ec5a7bac3f8bdda148307c576f41f2ca005828/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "520340481d4238d63a4eef2555fba45405dc74b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/520340481d4238d63a4eef2555fba45405dc74b4", "html_url": "https://github.com/rust-lang/rust/commit/520340481d4238d63a4eef2555fba45405dc74b4"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "fbc42a5d84e88ebd54f74ac8c99bffb553b6e4d5", "filename": "src/chains.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f2ec5a7bac3f8bdda148307c576f41f2ca005828/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2ec5a7bac3f8bdda148307c576f41f2ca005828/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=f2ec5a7bac3f8bdda148307c576f41f2ca005828", "patch": "@@ -173,7 +173,6 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n         if rewrites.len() > 1 {\n             true\n         } else if rewrites.len() == 1 {\n-            let one_line_len = parent_rewrite.len() + first_line_width(&rewrites[0]);\n             one_line_len > shape.width\n         } else {\n             false"}, {"sha": "7226357f7a38fce084165e611776ee73fe727622", "filename": "src/expr.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f2ec5a7bac3f8bdda148307c576f41f2ca005828/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2ec5a7bac3f8bdda148307c576f41f2ca005828/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=f2ec5a7bac3f8bdda148307c576f41f2ca005828", "patch": "@@ -286,7 +286,7 @@ pub fn rewrite_pair<LHS, RHS>(lhs: &LHS,\n \n                 let remaining_width = shape\n                     .width\n-                    .checked_sub(last_line_width(&result))\n+                    .checked_sub(last_line_width(&result) + suffix.len())\n                     .unwrap_or(0);\n \n                 if rhs_result.len() <= remaining_width {\n@@ -2106,10 +2106,7 @@ pub fn rewrite_assign_rhs<S: Into<String>>(context: &RewriteContext,\n             // Expression did not fit on the same line as the identifier or is\n             // at least three lines big. Try splitting the line and see\n             // if that works better.\n-            let new_offset = shape.indent.block_indent(context.config);\n-            let max_width = try_opt!((shape.width + shape.indent.width())\n-                                         .checked_sub(new_offset.width()));\n-            let new_shape = Shape::legacy(max_width, new_offset);\n+            let new_shape = try_opt!(shape.block_left(context.config.tab_spaces));\n             let new_rhs = ex.rewrite(context, new_shape);\n \n             // FIXME: DRY!\n@@ -2118,11 +2115,11 @@ pub fn rewrite_assign_rhs<S: Into<String>>(context: &RewriteContext,\n                     if count_line_breaks(orig_rhs) > count_line_breaks(replacement_rhs) + 1 ||\n                        (orig_rhs.rewrite(context, shape).is_none() &&\n                         replacement_rhs.rewrite(context, new_shape).is_some()) => {\n-                    result.push_str(&format!(\"\\n{}\", new_offset.to_string(context.config)));\n+                    result.push_str(&format!(\"\\n{}\", new_shape.indent.to_string(context.config)));\n                     result.push_str(replacement_rhs);\n                 }\n                 (None, Some(ref final_rhs)) => {\n-                    result.push_str(&format!(\"\\n{}\", new_offset.to_string(context.config)));\n+                    result.push_str(&format!(\"\\n{}\", new_shape.indent.to_string(context.config)));\n                     result.push_str(final_rhs);\n                 }\n                 (None, None) => return None,"}]}