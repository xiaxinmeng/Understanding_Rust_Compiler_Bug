{"sha": "c6aea8c2f995858bd6221530fb364dcb488ccc15", "node_id": "C_kwDOAAsO6NoAKGM2YWVhOGMyZjk5NTg1OGJkNjIyMTUzMGZiMzY0ZGNiNDg4Y2NjMTU", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-04-23T10:18:30Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-04-23T17:19:08Z"}, "message": "Minor refactorings", "tree": {"sha": "eb7472756d739fd9b3b3b58278fe47be4d2fc372", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb7472756d739fd9b3b3b58278fe47be4d2fc372"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6aea8c2f995858bd6221530fb364dcb488ccc15", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmRFaJkACgkQ4laYqTBY\nYXF0YhAAl600wV2qgE16CO5P26pDFiGPkiMt50s2802G5qJnV+XnE2GIefl5HnNy\nZwknklAqf3U48JMxfcGPn8+Ue5xw3XRFuNQxSwm+WSZ1vnnkN2YrXh8b/BjBvwvy\nfzpcpQ1gKMry4cA74tTRY718iR35Fk3f6Z7aWNwIKoKcOkqO2jivwWj+jjjeWFQn\no24mwGlBrvvttoi0wMSlhkM7C0JUqYFNiYeD5enXV8XD5RI7ZKx/a5bDbDadms5r\nA8GPB5jgHlIE/8M/zgln3ekPL+rgaz7WZsORqz4KFXlDbLvQ5zhy8TZyFuFXWljP\ngBOJ5ZWeXySEg3HQbaMf9/mGPjImfEpGv8VDZ7yv8KL/QhnH+PHGcWWsyk/OnXqe\nQbaY/+rMG4LtAtENbHmVFmhCADoUHWPNZvly/1fuoiH9M/lEkydTzv0ZvOU/Q9o1\njfjiKxWqEQzknAmIiij+KQ9QzXGTavpi/x9BJHzzIM5O+Mxjh5nM8gMr0GwSHwIW\nDMUYEZd5TjNKCdzeWWDPvolXwFycAPmARVQXDdA6tBtD70bOuwCwwNEwVg0J/9P6\npst8Z/5NuEMtF5fcg03WsEnhwSCiKaIn/4LmiJgdGM6PDocx78AJoxqpUYH9oHZx\nJtLSJWp9N3J7zUnonHJGCVsObGG02qMXWBYpW4EvO1Qh3hL3X5I=\n=BqQA\n-----END PGP SIGNATURE-----", "payload": "tree eb7472756d739fd9b3b3b58278fe47be4d2fc372\nparent 2feabc4dc462644287372922928110eea4c60ca7\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1682245110 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1682270348 +0900\n\nMinor refactorings\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6aea8c2f995858bd6221530fb364dcb488ccc15", "html_url": "https://github.com/rust-lang/rust/commit/c6aea8c2f995858bd6221530fb364dcb488ccc15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6aea8c2f995858bd6221530fb364dcb488ccc15/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2feabc4dc462644287372922928110eea4c60ca7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2feabc4dc462644287372922928110eea4c60ca7", "html_url": "https://github.com/rust-lang/rust/commit/2feabc4dc462644287372922928110eea4c60ca7"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "fb7d99711d945845b6d653f16c6cbd32e7ff25bd", "filename": "crates/hir-ty/src/chalk_db.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c6aea8c2f995858bd6221530fb364dcb488ccc15/crates%2Fhir-ty%2Fsrc%2Fchalk_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6aea8c2f995858bd6221530fb364dcb488ccc15/crates%2Fhir-ty%2Fsrc%2Fchalk_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fchalk_db.rs?ref=c6aea8c2f995858bd6221530fb364dcb488ccc15", "patch": "@@ -803,17 +803,17 @@ pub(crate) fn adt_variance_query(\n     )\n }\n \n+/// Returns instantiated predicates.\n pub(super) fn convert_where_clauses(\n     db: &dyn HirDatabase,\n     def: GenericDefId,\n     substs: &Substitution,\n ) -> Vec<chalk_ir::QuantifiedWhereClause<Interner>> {\n-    let generic_predicates = db.generic_predicates(def);\n-    let mut result = Vec::with_capacity(generic_predicates.len());\n-    for pred in generic_predicates.iter() {\n-        result.push(pred.clone().substitute(Interner, substs));\n-    }\n-    result\n+    db.generic_predicates(def)\n+        .iter()\n+        .cloned()\n+        .map(|pred| pred.substitute(Interner, substs))\n+        .collect()\n }\n \n pub(super) fn generic_predicate_to_inline_bound("}, {"sha": "9fb7fdcc5fcfbaa5a6984920fc04b2c2daf9d7d9", "filename": "crates/hir-ty/src/method_resolution.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c6aea8c2f995858bd6221530fb364dcb488ccc15/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6aea8c2f995858bd6221530fb364dcb488ccc15/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs?ref=c6aea8c2f995858bd6221530fb364dcb488ccc15", "patch": "@@ -742,9 +742,8 @@ fn find_matching_impl(\n     actual_trait_ref: TraitRef,\n ) -> Option<(Arc<ImplData>, Substitution)> {\n     let db = table.db;\n-    loop {\n-        let impl_ = impls.next()?;\n-        let r = table.run_in_snapshot(|table| {\n+    impls.find_map(|impl_| {\n+        table.run_in_snapshot(|table| {\n             let impl_data = db.impl_data(impl_);\n             let impl_substs =\n                 TyBuilder::subst_for_def(db, impl_, None).fill_with_inference_vars(table).build();\n@@ -762,11 +761,8 @@ fn find_matching_impl(\n                 .map(|b| b.cast(Interner));\n             let goal = crate::Goal::all(Interner, wcs);\n             table.try_obligation(goal).map(|_| (impl_data, table.resolve_completely(impl_substs)))\n-        });\n-        if r.is_some() {\n-            break r;\n-        }\n-    }\n+        })\n+    })\n }\n \n fn is_inherent_impl_coherent("}]}