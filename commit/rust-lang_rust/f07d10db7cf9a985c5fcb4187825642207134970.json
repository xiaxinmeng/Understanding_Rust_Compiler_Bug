{"sha": "f07d10db7cf9a985c5fcb4187825642207134970", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwN2QxMGRiN2NmOWE5ODVjNWZjYjQxODc4MjU2NDIyMDcxMzQ5NzA=", "commit": {"author": {"name": "Adam Perry", "email": "lol@anp.lol", "date": "2020-05-21T23:43:39Z"}, "committer": {"name": "Adam Perry", "email": "lol@anp.lol", "date": "2020-07-01T05:22:32Z"}, "message": "Stabilize `#[track_caller]`.\n\nDoes not yet make its constness stable, though. Use of\n`Location::caller` in const contexts is still gated by\n`#![feature(const_caller_location)]`.", "tree": {"sha": "0554dcfdae0a12bb52d427d9093ad59f238049c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0554dcfdae0a12bb52d427d9093ad59f238049c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f07d10db7cf9a985c5fcb4187825642207134970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f07d10db7cf9a985c5fcb4187825642207134970", "html_url": "https://github.com/rust-lang/rust/commit/f07d10db7cf9a985c5fcb4187825642207134970", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f07d10db7cf9a985c5fcb4187825642207134970/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d462551a8600e57d8b6f87e71ea56868bc5da6cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d462551a8600e57d8b6f87e71ea56868bc5da6cf", "html_url": "https://github.com/rust-lang/rust/commit/d462551a8600e57d8b6f87e71ea56868bc5da6cf"}], "stats": {"total": 135, "additions": 36, "deletions": 99}, "files": [{"sha": "afc11a2b9492cfa8ef06de26bebf2a1662a2d195", "filename": "src/doc/unstable-book/src/language-features/track-caller.md", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d462551a8600e57d8b6f87e71ea56868bc5da6cf/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftrack-caller.md", "raw_url": "https://github.com/rust-lang/rust/raw/d462551a8600e57d8b6f87e71ea56868bc5da6cf/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftrack-caller.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftrack-caller.md?ref=d462551a8600e57d8b6f87e71ea56868bc5da6cf", "patch": "@@ -1,5 +0,0 @@\n-# `track_caller`\n-\n-The tracking issue for this feature is: [#47809](https://github.com/rust-lang/rust/issues/47809).\n-\n-------------------------"}, {"sha": "b732dacae1c5b563bcfd60a80f69705bc37cd35e", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -118,7 +118,7 @@\n #![feature(staged_api)]\n #![feature(std_internals)]\n #![feature(stmt_expr_attributes)]\n-#![feature(track_caller)]\n+#![cfg_attr(bootstrap, feature(track_caller))]\n #![feature(transparent_unions)]\n #![feature(unboxed_closures)]\n #![feature(unsized_locals)]"}, {"sha": "13c0e8daf740f5aa66a0d94c71264f277afc167d", "filename": "src/libcore/macros/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibcore%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibcore%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros%2Fmod.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,6 +1,6 @@\n #[doc(include = \"panic.md\")]\n #[macro_export]\n-#[allow_internal_unstable(core_panic, track_caller)]\n+#[allow_internal_unstable(core_panic, const_caller_location)]\n #[stable(feature = \"core\", since = \"1.6.0\")]\n macro_rules! panic {\n     () => ("}, {"sha": "543aa969330aedbf8056a4dbf140a4ba815677f9", "filename": "src/libcore/panic.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibcore%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibcore%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanic.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -190,7 +190,6 @@ impl<'a> Location<'a> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(track_caller)]\n     /// use core::panic::Location;\n     ///\n     /// /// Returns the [`Location`] at which it is called.\n@@ -206,7 +205,7 @@ impl<'a> Location<'a> {\n     ///\n     /// let fixed_location = get_just_one_location();\n     /// assert_eq!(fixed_location.file(), file!());\n-    /// assert_eq!(fixed_location.line(), 15);\n+    /// assert_eq!(fixed_location.line(), 14);\n     /// assert_eq!(fixed_location.column(), 5);\n     ///\n     /// // running the same untracked function in a different location gives us the same result\n@@ -217,7 +216,7 @@ impl<'a> Location<'a> {\n     ///\n     /// let this_location = get_caller_location();\n     /// assert_eq!(this_location.file(), file!());\n-    /// assert_eq!(this_location.line(), 29);\n+    /// assert_eq!(this_location.line(), 28);\n     /// assert_eq!(this_location.column(), 21);\n     ///\n     /// // running the tracked function in a different location produces a different value\n@@ -226,13 +225,8 @@ impl<'a> Location<'a> {\n     /// assert_ne!(this_location.line(), another_location.line());\n     /// assert_ne!(this_location.column(), another_location.column());\n     /// ```\n-    // FIXME: When stabilizing this method, please also update the documentation\n-    // of `intrinsics::caller_location`.\n-    #[unstable(\n-        feature = \"track_caller\",\n-        reason = \"uses #[track_caller] which is not yet stable\",\n-        issue = \"47809\"\n-    )]\n+    #[stable(feature = \"track_caller\", since = \"1.46.0\")]\n+    #[rustc_const_unstable(feature = \"const_caller_location\", issue = \"47809\")]\n     #[track_caller]\n     pub const fn caller() -> &'static Location<'static> {\n         crate::intrinsics::caller_location()"}, {"sha": "0f3d41ba66dc4efe95f4ed957e96c309a4f97659", "filename": "src/librustc_error_codes/error_codes/E0736.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_error_codes%2Ferror_codes%2FE0736.md", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_error_codes%2Ferror_codes%2FE0736.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0736.md?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -3,8 +3,6 @@\n Erroneous code example:\n \n ```compile_fail,E0736\n-#![feature(track_caller)]\n-\n #[naked]\n #[track_caller]\n fn foo() {}"}, {"sha": "ab5e60692b4da157ff645a8ccb6aab36efb31690", "filename": "src/librustc_error_codes/error_codes/E0737.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_error_codes%2Ferror_codes%2FE0737.md", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_error_codes%2Ferror_codes%2FE0737.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0737.md?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -5,8 +5,6 @@ restrictions.\n Erroneous code example:\n \n ```compile_fail,E0737\n-#![feature(track_caller)]\n-\n #[track_caller]\n extern \"C\" fn foo() {}\n ```"}, {"sha": "8d9039bef93f6da0bedc75231f51bb5b403d73d0", "filename": "src/librustc_error_codes/error_codes/E0739.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_error_codes%2Ferror_codes%2FE0739.md", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_error_codes%2Ferror_codes%2FE0739.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0739.md?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -3,7 +3,6 @@\n Erroneous code example:\n \n ```compile_fail,E0739\n-#![feature(track_caller)]\n #[track_caller]\n struct Bar {\n     a: u8,"}, {"sha": "362913ceadf18aa4e911617156cacd2e16c260e9", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -5,7 +5,7 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![feature(crate_visibility_modifier)]\n #![feature(nll)]\n-#![feature(track_caller)]\n+#![cfg_attr(bootstrap, feature(track_caller))]\n \n pub use emitter::ColorConfig;\n "}, {"sha": "d93c17b05b498c02baa6225f0173191cc519cca3", "filename": "src/librustc_feature/accepted.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_feature%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_feature%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_feature%2Faccepted.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -265,6 +265,9 @@ declare_features! (\n     (accepted, const_if_match, \"1.45.0\", Some(49146), None),\n     /// Allows the use of `loop` and `while` in constants.\n     (accepted, const_loop, \"1.45.0\", Some(52000), None),\n+    /// Allows `#[track_caller]` to be used which provides\n+    /// accurate caller location reporting during panic (RFC 2091).\n+    (accepted, track_caller, \"1.46.0\", Some(47809), None),\n \n     // -------------------------------------------------------------------------\n     // feature-group-end: accepted features"}, {"sha": "b9a55377949f2bf9297909c0e0434ed3e02663b8", "filename": "src/librustc_feature/active.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_feature%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_feature%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_feature%2Factive.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -494,10 +494,6 @@ declare_features! (\n     /// Allows the use of raw-dylibs (RFC 2627).\n     (active, raw_dylib, \"1.40.0\", Some(58713), None),\n \n-    /// Allows `#[track_caller]` to be used which provides\n-    /// accurate caller location reporting during panic (RFC 2091).\n-    (active, track_caller, \"1.40.0\", Some(47809), None),\n-\n     /// Allows making `dyn Trait` well-formed even if `Trait` is not object safe.\n     /// In that case, `dyn Trait: Trait` does not hold. Moreover, coercions and\n     /// casts in safe Rust to `dyn Trait` for such a `Trait` is also forbidden."}, {"sha": "c9a34f033758b66721b60ebdd381fc07ae2484ba", "filename": "src/librustc_feature/builtin_attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_feature%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_feature%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_feature%2Fbuiltin_attrs.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -260,6 +260,7 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     ungated!(cold, Whitelisted, template!(Word)),\n     ungated!(no_builtins, Whitelisted, template!(Word)),\n     ungated!(target_feature, Whitelisted, template!(List: r#\"enable = \"name\"\"#)),\n+    ungated!(track_caller, Whitelisted, template!(Word)),\n     gated!(\n         no_sanitize, Whitelisted,\n         template!(List: \"address, memory, thread\"),\n@@ -333,7 +334,6 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     gated!(ffi_returns_twice, Whitelisted, template!(Word), experimental!(ffi_returns_twice)),\n     gated!(ffi_pure, Whitelisted, template!(Word), experimental!(ffi_pure)),\n     gated!(ffi_const, Whitelisted, template!(Word), experimental!(ffi_const)),\n-    gated!(track_caller, Whitelisted, template!(Word), experimental!(track_caller)),\n     gated!(\n         register_attr, CrateLevel, template!(List: \"attr1, attr2, ...\"),\n         experimental!(register_attr),"}, {"sha": "96b8ca27183ede146602121022eeef25bc074976", "filename": "src/librustc_middle/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_middle%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibrustc_middle%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Flib.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -42,7 +42,7 @@\n #![feature(or_patterns)]\n #![feature(range_is_empty)]\n #![feature(min_specialization)]\n-#![feature(track_caller)]\n+#![cfg_attr(bootstrap, feature(track_caller))]\n #![feature(trusted_len)]\n #![feature(stmt_expr_attributes)]\n #![feature(test)]"}, {"sha": "372038df54f2e39c568f499f9f7eb402756c136c", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -316,7 +316,7 @@\n #![feature(toowned_clone_into)]\n #![feature(total_cmp)]\n #![feature(trace_macros)]\n-#![feature(track_caller)]\n+#![cfg_attr(bootstrap, feature(track_caller))]\n #![feature(try_reserve)]\n #![feature(unboxed_closures)]\n #![feature(untagged_unions)]"}, {"sha": "9931697e4129c2b7dfa6a0bb83f4343f65a4d38f", "filename": "src/test/ui/asm/sym.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Fasm%2Fsym.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Fasm%2Fsym.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fsym.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -3,7 +3,7 @@\n // only-linux\n // run-pass\n \n-#![feature(asm, track_caller, thread_local)]\n+#![feature(asm, thread_local)]\n \n extern \"C\" fn f1() -> i32 {\n     111"}, {"sha": "5865cf0a4f754facf2d04bdfd7ecfb49502b41fb", "filename": "src/test/ui/feature-gates/feature-gate-track_caller.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d462551a8600e57d8b6f87e71ea56868bc5da6cf/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-track_caller.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d462551a8600e57d8b6f87e71ea56868bc5da6cf/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-track_caller.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-track_caller.rs?ref=d462551a8600e57d8b6f87e71ea56868bc5da6cf", "patch": "@@ -1,5 +0,0 @@\n-#[track_caller]\n-fn f() {}\n-//~^^ ERROR the `#[track_caller]` attribute is an experimental feature\n-\n-fn main() {}"}, {"sha": "8ceab501617eec6539ad1ac93d31acea7b05fde7", "filename": "src/test/ui/feature-gates/feature-gate-track_caller.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d462551a8600e57d8b6f87e71ea56868bc5da6cf/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-track_caller.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d462551a8600e57d8b6f87e71ea56868bc5da6cf/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-track_caller.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-track_caller.stderr?ref=d462551a8600e57d8b6f87e71ea56868bc5da6cf", "patch": "@@ -1,12 +0,0 @@\n-error[E0658]: the `#[track_caller]` attribute is an experimental feature\n-  --> $DIR/feature-gate-track_caller.rs:1:1\n-   |\n-LL | #[track_caller]\n-   | ^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #47809 <https://github.com/rust-lang/rust/issues/47809> for more information\n-   = help: add `#![feature(track_caller)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "8772e98b6e9bb584be90dca90902dd91b8a90ec5", "filename": "src/test/ui/macros/issue-68060.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,5 +1,3 @@\n-#![feature(track_caller)]\n-\n fn main() {\n     (0..)\n         .map("}, {"sha": "b9b2f946c5967bc6915bb9cd9b26efb39b11c084", "filename": "src/test/ui/macros/issue-68060.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.stderr?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: `#[target_feature(..)]` can only be applied to `unsafe` functions\n-  --> $DIR/issue-68060.rs:6:13\n+  --> $DIR/issue-68060.rs:4:13\n    |\n LL |             #[target_feature(enable = \"\")]\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -11,13 +11,13 @@ LL |             |_| (),\n    = help: add `#![feature(target_feature_11)]` to the crate attributes to enable\n \n error: the feature named `` is not valid for this target\n-  --> $DIR/issue-68060.rs:6:30\n+  --> $DIR/issue-68060.rs:4:30\n    |\n LL |             #[target_feature(enable = \"\")]\n    |                              ^^^^^^^^^^^ `` is not valid for this target\n \n error[E0737]: `#[track_caller]` requires Rust ABI\n-  --> $DIR/issue-68060.rs:9:13\n+  --> $DIR/issue-68060.rs:7:13\n    |\n LL |             #[track_caller]\n    |             ^^^^^^^^^^^^^^^"}, {"sha": "825a11972aeebc517d63eed12f0cbbfd304c6c9d", "filename": "src/test/ui/numbers-arithmetic/saturating-float-casts.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Fsaturating-float-casts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Fsaturating-float-casts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Fsaturating-float-casts.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -9,7 +9,6 @@\n // merged.\n \n #![feature(test, stmt_expr_attributes)]\n-#![feature(track_caller)]\n #![deny(overflowing_literals)]\n extern crate test;\n "}, {"sha": "fefb84de729fed481dec362ebebbe72bb983872d", "filename": "src/test/ui/rfc-2091-track-caller/call-chain.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcall-chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcall-chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcall-chain.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(track_caller)]\n-\n use std::panic::Location;\n \n struct Foo;"}, {"sha": "05240908917bc0f37e55ead53e56ab9a1dd67f15", "filename": "src/test/ui/rfc-2091-track-caller/caller-location-fnptr-rt-ctfe-equiv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-fnptr-rt-ctfe-equiv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-fnptr-rt-ctfe-equiv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-fnptr-rt-ctfe-equiv.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -6,7 +6,7 @@\n // run-pass\n // compile-flags: -Z unleash-the-miri-inside-of-you\n \n-#![feature(core_intrinsics, const_caller_location, track_caller, const_fn)]\n+#![feature(core_intrinsics, const_caller_location, const_fn)]\n \n type L = &'static std::panic::Location<'static>;\n "}, {"sha": "f244b74e391ffa4a2d098947fffb0ca7a3638fc1", "filename": "src/test/ui/rfc-2091-track-caller/caller-location-intrinsic.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-intrinsic.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(track_caller)]\n-\n #[inline(never)]\n #[track_caller]\n fn codegen_caller_loc() -> &'static core::panic::Location<'static> {\n@@ -15,13 +13,13 @@ macro_rules! caller_location_from_macro {\n fn main() {\n     let loc = codegen_caller_loc();\n     assert_eq!(loc.file(), file!());\n-    assert_eq!(loc.line(), 16);\n+    assert_eq!(loc.line(), 14);\n     assert_eq!(loc.column(), 15);\n \n     // `Location::caller()` in a macro should behave similarly to `file!` and `line!`,\n     // i.e. point to where the macro was invoked, instead of the macro itself.\n     let loc2 = caller_location_from_macro!();\n     assert_eq!(loc2.file(), file!());\n-    assert_eq!(loc2.line(), 23);\n+    assert_eq!(loc2.line(), 21);\n     assert_eq!(loc2.column(), 16);\n }"}, {"sha": "8030a4d967a676dfe98eec70cb745ddd6677f647", "filename": "src/test/ui/rfc-2091-track-caller/const-caller-location.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fconst-caller-location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fconst-caller-location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fconst-caller-location.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n \n-#![feature(const_fn, track_caller)]\n+#![feature(const_caller_location, const_fn)]\n \n use std::panic::Location;\n "}, {"sha": "6681119557d797616a37273a6d10160fdea21b16", "filename": "src/test/ui/rfc-2091-track-caller/diverging-caller-location.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fdiverging-caller-location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fdiverging-caller-location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fdiverging-caller-location.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -6,8 +6,6 @@\n //! we don't inspect the location returned -- it would be difficult to distinguish between the\n //! explicit panic and a failed assertion. That it compiles and runs is enough for this one.\n \n-#![feature(track_caller)]\n-\n #[track_caller]\n fn doesnt_return() -> ! {\n     let _location = core::panic::Location::caller();"}, {"sha": "6f4290e2a5ee955287429fd4b357b8bb5aadc8a7", "filename": "src/test/ui/rfc-2091-track-caller/error-odd-syntax.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-odd-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-odd-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-odd-syntax.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,5 +1,3 @@\n-#![feature(track_caller)]\n-\n #[track_caller(1)]\n fn f() {}\n //~^^ ERROR malformed `track_caller` attribute input"}, {"sha": "e7ddf8df4ab53fcb8e8554aac3816045b1f15a75", "filename": "src/test/ui/rfc-2091-track-caller/error-odd-syntax.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-odd-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-odd-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-odd-syntax.stderr?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,5 +1,5 @@\n error: malformed `track_caller` attribute input\n-  --> $DIR/error-odd-syntax.rs:3:1\n+  --> $DIR/error-odd-syntax.rs:1:1\n    |\n LL | #[track_caller(1)]\n    | ^^^^^^^^^^^^^^^^^^ help: must be of the form: `#[track_caller]`"}, {"sha": "074e1ceb791cef1ebc67632211a898edcf330660", "filename": "src/test/ui/rfc-2091-track-caller/error-with-invalid-abi.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,5 +1,3 @@\n-#![feature(track_caller)]\n-\n #[track_caller]\n extern \"C\" fn f() {}\n //~^^ ERROR `#[track_caller]` requires Rust ABI"}, {"sha": "bcc0c8170e655f9261e43dd60d2614cb6173d71d", "filename": "src/test/ui/rfc-2091-track-caller/error-with-invalid-abi.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.stderr?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,11 +1,11 @@\n error[E0737]: `#[track_caller]` requires Rust ABI\n-  --> $DIR/error-with-invalid-abi.rs:3:1\n+  --> $DIR/error-with-invalid-abi.rs:1:1\n    |\n LL | #[track_caller]\n    | ^^^^^^^^^^^^^^^\n \n error[E0737]: `#[track_caller]` requires Rust ABI\n-  --> $DIR/error-with-invalid-abi.rs:8:5\n+  --> $DIR/error-with-invalid-abi.rs:6:5\n    |\n LL |     #[track_caller]\n    |     ^^^^^^^^^^^^^^^"}, {"sha": "2b110c9a325156081c18b7edb19d8e78eaf79c1f", "filename": "src/test/ui/rfc-2091-track-caller/error-with-naked.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-naked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-naked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-naked.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,4 +1,4 @@\n-#![feature(naked_functions, track_caller)]\n+#![feature(naked_functions)]\n \n #[track_caller] //~ ERROR cannot use `#[track_caller]` with `#[naked]`\n #[naked]"}, {"sha": "74217f47084a33f2aee0bd8bbdae1be0c741ec26", "filename": "src/test/ui/rfc-2091-track-caller/intrinsic-wrapper.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fintrinsic-wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fintrinsic-wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fintrinsic-wrapper.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,21 +1,19 @@\n // run-pass\n \n-#![feature(track_caller)]\n-\n macro_rules! caller_location_from_macro {\n     () => (core::panic::Location::caller());\n }\n \n fn main() {\n     let loc = core::panic::Location::caller();\n     assert_eq!(loc.file(), file!());\n-    assert_eq!(loc.line(), 10);\n+    assert_eq!(loc.line(), 8);\n     assert_eq!(loc.column(), 15);\n \n     // `Location::caller()` in a macro should behave similarly to `file!` and `line!`,\n     // i.e. point to where the macro was invoked, instead of the macro itself.\n     let loc2 = caller_location_from_macro!();\n     assert_eq!(loc2.file(), file!());\n-    assert_eq!(loc2.line(), 17);\n+    assert_eq!(loc2.line(), 15);\n     assert_eq!(loc2.column(), 16);\n }"}, {"sha": "bc0ca9552806f6ca9c8eb331d7dc53ca7b665c70", "filename": "src/test/ui/rfc-2091-track-caller/only-for-fns.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fonly-for-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fonly-for-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fonly-for-fns.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,5 +1,3 @@\n-#![feature(track_caller)]\n-\n #[track_caller]\n struct S;\n //~^^ ERROR attribute should be applied to function"}, {"sha": "6666dcfa6e5995421e58365ec2782fa4d548a73b", "filename": "src/test/ui/rfc-2091-track-caller/only-for-fns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fonly-for-fns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fonly-for-fns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fonly-for-fns.stderr?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,5 +1,5 @@\n error[E0739]: attribute should be applied to function\n-  --> $DIR/only-for-fns.rs:3:1\n+  --> $DIR/only-for-fns.rs:1:1\n    |\n LL | #[track_caller]\n    | ^^^^^^^^^^^^^^^"}, {"sha": "ada150b25cf2c6830dd363123574151f75d4faaa", "filename": "src/test/ui/rfc-2091-track-caller/pass.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fpass.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,6 +1,4 @@\n // run-pass\n-#![feature(track_caller)]\n-\n #[track_caller]\n fn f() {}\n "}, {"sha": "efcc1f6942de18f4dbb5033e68aff8daa7587a61", "filename": "src/test/ui/rfc-2091-track-caller/track-caller-attribute.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftrack-caller-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftrack-caller-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftrack-caller-attribute.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(track_caller)]\n-\n use std::panic::Location;\n \n #[track_caller]\n@@ -20,21 +18,21 @@ fn nested_tracked() -> &'static Location<'static> {\n fn main() {\n     let location = Location::caller();\n     assert_eq!(location.file(), file!());\n-    assert_eq!(location.line(), 21);\n+    assert_eq!(location.line(), 19);\n     assert_eq!(location.column(), 20);\n \n     let tracked = tracked();\n     assert_eq!(tracked.file(), file!());\n-    assert_eq!(tracked.line(), 26);\n+    assert_eq!(tracked.line(), 24);\n     assert_eq!(tracked.column(), 19);\n \n     let nested = nested_intrinsic();\n     assert_eq!(nested.file(), file!());\n-    assert_eq!(nested.line(), 13);\n+    assert_eq!(nested.line(), 11);\n     assert_eq!(nested.column(), 5);\n \n     let contained = nested_tracked();\n     assert_eq!(contained.file(), file!());\n-    assert_eq!(contained.line(), 17);\n+    assert_eq!(contained.line(), 15);\n     assert_eq!(contained.column(), 5);\n }"}, {"sha": "5115f687c26328943da96d38f0c1a30beaa997a2", "filename": "src/test/ui/rfc-2091-track-caller/track-caller-ffi.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftrack-caller-ffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftrack-caller-ffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftrack-caller-ffi.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(track_caller)]\n-\n use std::panic::Location;\n \n extern \"Rust\" {\n@@ -30,21 +28,21 @@ mod provides {\n fn main() {\n     let location = Location::caller();\n     assert_eq!(location.file(), file!());\n-    assert_eq!(location.line(), 31);\n+    assert_eq!(location.line(), 29);\n     assert_eq!(location.column(), 20);\n \n     let tracked = unsafe { rust_track_caller_ffi_test_tracked() };\n     assert_eq!(tracked.file(), file!());\n-    assert_eq!(tracked.line(), 36);\n+    assert_eq!(tracked.line(), 34);\n     assert_eq!(tracked.column(), 28);\n \n     let untracked = unsafe { rust_track_caller_ffi_test_untracked() };\n     assert_eq!(untracked.file(), file!());\n-    assert_eq!(untracked.line(), 26);\n+    assert_eq!(untracked.line(), 24);\n     assert_eq!(untracked.column(), 9);\n \n     let contained = rust_track_caller_ffi_test_nested_tracked();\n     assert_eq!(contained.file(), file!());\n-    assert_eq!(contained.line(), 14);\n+    assert_eq!(contained.line(), 12);\n     assert_eq!(contained.column(), 14);\n }"}, {"sha": "5fcfea96d547ab79cb25fe5cb1378b3542a7f5b7", "filename": "src/test/ui/rfc-2091-track-caller/tracked-fn-ptr-with-arg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-fn-ptr-with-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-fn-ptr-with-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-fn-ptr-with-arg.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(track_caller)]\n-\n fn pass_to_ptr_call<T>(f: fn(T), x: T) {\n     f(x);\n }"}, {"sha": "4415d850c241ce9516b7f852e9fe38d423a46047", "filename": "src/test/ui/rfc-2091-track-caller/tracked-fn-ptr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-fn-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-fn-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-fn-ptr.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(track_caller)]\n-\n fn ptr_call(f: fn()) {\n     f();\n }"}, {"sha": "4db4c29e53d580b8b37191d1d4459d0b27512141", "filename": "src/test/ui/rfc-2091-track-caller/tracked-trait-impls.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-trait-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07d10db7cf9a985c5fcb4187825642207134970/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-trait-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-trait-impls.rs?ref=f07d10db7cf9a985c5fcb4187825642207134970", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(track_caller)]\n-\n macro_rules! assert_expansion_site_is_tracked {\n     () => {{\n         let location = std::panic::Location::caller();"}]}