{"sha": "dd81c9102863a9d8b965628c87cb639430d233f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkODFjOTEwMjg2M2E5ZDhiOTY1NjI4Yzg3Y2I2Mzk0MzBkMjMzZjk=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-19T07:44:57Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-19T07:44:57Z"}, "message": "Update mir-opt test output for new assert macro implementation.", "tree": {"sha": "e77ad1868f923ea1447f2d3cdb5110a079c2b360", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e77ad1868f923ea1447f2d3cdb5110a079c2b360"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd81c9102863a9d8b965628c87cb639430d233f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd81c9102863a9d8b965628c87cb639430d233f9", "html_url": "https://github.com/rust-lang/rust/commit/dd81c9102863a9d8b965628c87cb639430d233f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd81c9102863a9d8b965628c87cb639430d233f9/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1fcc4dea319e1024b681f347cfb5ec307aaf743", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1fcc4dea319e1024b681f347cfb5ec307aaf743", "html_url": "https://github.com/rust-lang/rust/commit/f1fcc4dea319e1024b681f347cfb5ec307aaf743"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "dac9ec3b443d769fbf01856ae5eccfcee05198ac", "filename": "src/test/mir-opt/inst_combine_deref.do_not_miscompile.InstCombine.diff", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd81c9102863a9d8b965628c87cb639430d233f9/src%2Ftest%2Fmir-opt%2Finst_combine_deref.do_not_miscompile.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/dd81c9102863a9d8b965628c87cb639430d233f9/src%2Ftest%2Fmir-opt%2Finst_combine_deref.do_not_miscompile.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finst_combine_deref.do_not_miscompile.InstCombine.diff?ref=dd81c9102863a9d8b965628c87cb639430d233f9", "patch": "@@ -10,7 +10,7 @@\n       let mut _8: bool;                    // in scope 0 at $DIR/inst_combine_deref.rs:60:5: 60:23\n       let mut _9: bool;                    // in scope 0 at $DIR/inst_combine_deref.rs:60:13: 60:21\n       let mut _10: i32;                    // in scope 0 at $DIR/inst_combine_deref.rs:60:13: 60:15\n-      let mut _11: !;                      // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let mut _11: !;                      // in scope 0 at $DIR/inst_combine_deref.rs:60:5: 60:23\n       scope 1 {\n           debug x => _1;                   // in scope 1 at $DIR/inst_combine_deref.rs:55:9: 55:10\n           let _2: i32;                     // in scope 1 at $DIR/inst_combine_deref.rs:56:9: 56:10\n@@ -69,11 +69,11 @@\n       }\n   \n       bb2: {\n-          StorageLive(_11);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          begin_panic::<&str>(const \"assertion failed: *y == 99\"); // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_11);                // scope 4 at $DIR/inst_combine_deref.rs:60:5: 60:23\n+          core::panicking::panic(const \"assertion failed: *y == 99\"); // scope 4 at $DIR/inst_combine_deref.rs:60:5: 60:23\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n-                                           // + literal: Const { ty: fn(&str) -> ! {std::rt::begin_panic::<&str>}, val: Value(Scalar(<ZST>)) }\n+                                           // + span: $DIR/inst_combine_deref.rs:60:5: 60:23\n+                                           // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(Scalar(<ZST>)) }\n                                            // ty::Const\n                                            // + ty: &str\n                                            // + val: Value(Slice { data: Allocation { bytes: [97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 58, 32, 42, 121, 32, 61, 61, 32, 57, 57], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [67108863], len: Size { raw: 26 } }, size: Size { raw: 26 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 26 })"}]}