{"sha": "3114e2bcf3a2308dd798b91feefb17d74c6a7bd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMTRlMmJjZjNhMjMwOGRkNzk4YjkxZmVlZmIxN2Q3NGM2YTdiZDQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-03-08T19:08:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-08T19:08:56Z"}, "message": "Rollup merge of #82711 - notriddle:string-cow-docs, r=Mark-Simulacrum\n\nAdd documentation for string->Cow conversions\n\nMostly, it's just to reassure everyone that these functions don't allocate.\n\nPart of #51430", "tree": {"sha": "b31ae2628f0af500379f0361236dcead7fbdd353", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b31ae2628f0af500379f0361236dcead7fbdd353"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3114e2bcf3a2308dd798b91feefb17d74c6a7bd4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgRnZJCRBK7hj4Ov3rIwAAdHIIACdT0OkPMY0tPZbj2cwWz5u8\n1Xcoo+dyrNy/gBl2aCVCM/Fctu+MujOqi6urlWBO3HJ3Z907z68ow1ji6ZIoiilx\nvhz8n8X8AJuYE13TBOM6E3f6R/X/PVrCVlwhE6t02FrdpkWr5JLQW5E7oQ2gklAv\nNIk5qasQOllgK5GlKehCw6FpixtIvYm4Jkhyz7c1H1BvP7qqR4iD9fWgD8RT2m7X\nJqpU7RMMY9gmJu0oVQhZj5GxMfDYac2eRy3z1xQwDGR3yXCJH4SxLyIRJvLAuIk5\nTVzqcMW8h1b9Q9lxnloBlRArpmX57F+W5zJNdnJ7k41I1shWDSKmoGKBp3hqOjw=\n=A1te\n-----END PGP SIGNATURE-----\n", "payload": "tree b31ae2628f0af500379f0361236dcead7fbdd353\nparent 8f349be27815d43d462a32faeb270a22a68486b6\nparent 69a37a63fa1d20286ffb7c6e74060634bc8ad5a4\nauthor Mara Bos <m-ou.se@m-ou.se> 1615230536 +0100\ncommitter GitHub <noreply@github.com> 1615230536 +0100\n\nRollup merge of #82711 - notriddle:string-cow-docs, r=Mark-Simulacrum\n\nAdd documentation for string->Cow conversions\n\nMostly, it's just to reassure everyone that these functions don't allocate.\n\nPart of #51430\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3114e2bcf3a2308dd798b91feefb17d74c6a7bd4", "html_url": "https://github.com/rust-lang/rust/commit/3114e2bcf3a2308dd798b91feefb17d74c6a7bd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3114e2bcf3a2308dd798b91feefb17d74c6a7bd4/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f349be27815d43d462a32faeb270a22a68486b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f349be27815d43d462a32faeb270a22a68486b6", "html_url": "https://github.com/rust-lang/rust/commit/8f349be27815d43d462a32faeb270a22a68486b6"}, {"sha": "69a37a63fa1d20286ffb7c6e74060634bc8ad5a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/69a37a63fa1d20286ffb7c6e74060634bc8ad5a4", "html_url": "https://github.com/rust-lang/rust/commit/69a37a63fa1d20286ffb7c6e74060634bc8ad5a4"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "e2e705d7980caf71ce4a38d344fa5d601d7d77e9", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/3114e2bcf3a2308dd798b91feefb17d74c6a7bd4/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3114e2bcf3a2308dd798b91feefb17d74c6a7bd4/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=3114e2bcf3a2308dd798b91feefb17d74c6a7bd4", "patch": "@@ -2352,6 +2352,16 @@ impl<'a> From<Cow<'a, str>> for String {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> From<&'a str> for Cow<'a, str> {\n+    /// Converts a string slice into a Borrowed variant.\n+    /// No heap allocation is performed, and the string\n+    /// is not copied.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// # use std::borrow::Cow;\n+    /// assert_eq!(Cow::from(\"eggplant\"), Cow::Borrowed(\"eggplant\"));\n+    /// ```\n     #[inline]\n     fn from(s: &'a str) -> Cow<'a, str> {\n         Cow::Borrowed(s)\n@@ -2360,6 +2370,18 @@ impl<'a> From<&'a str> for Cow<'a, str> {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> From<String> for Cow<'a, str> {\n+    /// Converts a String into an Owned variant.\n+    /// No heap allocation is performed, and the string\n+    /// is not copied.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// # use std::borrow::Cow;\n+    /// let s = \"eggplant\".to_string();\n+    /// let s2 = \"eggplant\".to_string();\n+    /// assert_eq!(Cow::from(s), Cow::<'static, str>::Owned(s2));\n+    /// ```\n     #[inline]\n     fn from(s: String) -> Cow<'a, str> {\n         Cow::Owned(s)\n@@ -2368,6 +2390,17 @@ impl<'a> From<String> for Cow<'a, str> {\n \n #[stable(feature = \"cow_from_string_ref\", since = \"1.28.0\")]\n impl<'a> From<&'a String> for Cow<'a, str> {\n+    /// Converts a String reference into a Borrowed variant.\n+    /// No heap allocation is performed, and the string\n+    /// is not copied.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// # use std::borrow::Cow;\n+    /// let s = \"eggplant\".to_string();\n+    /// assert_eq!(Cow::from(&s), Cow::Borrowed(\"eggplant\"));\n+    /// ```\n     #[inline]\n     fn from(s: &'a String) -> Cow<'a, str> {\n         Cow::Borrowed(s.as_str())"}]}