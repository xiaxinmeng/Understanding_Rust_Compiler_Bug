{"sha": "6b5cbc540d294f437785eeb678867ee753c6243b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNWNiYzU0MGQyOTRmNDM3Nzg1ZWViNjc4ODY3ZWU3NTNjNjI0M2I=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-01-19T11:07:42Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-01-26T10:59:57Z"}, "message": "Use gimli's byteorder in debuginfo.rs", "tree": {"sha": "9132c63e954e63b9a8c3cf7221d190b4f962d744", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9132c63e954e63b9a8c3cf7221d190b4f962d744"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b5cbc540d294f437785eeb678867ee753c6243b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b5cbc540d294f437785eeb678867ee753c6243b", "html_url": "https://github.com/rust-lang/rust/commit/6b5cbc540d294f437785eeb678867ee753c6243b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b5cbc540d294f437785eeb678867ee753c6243b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bddc783e0bf4281a47f30002f6e7f4de1e21ea5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bddc783e0bf4281a47f30002f6e7f4de1e21ea5", "html_url": "https://github.com/rust-lang/rust/commit/8bddc783e0bf4281a47f30002f6e7f4de1e21ea5"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "585271bb3cdbde3b53cb7c40d0aab075d2f50fca", "filename": "src/debuginfo.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6b5cbc540d294f437785eeb678867ee753c6243b/src%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b5cbc540d294f437785eeb678867ee753c6243b/src%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo.rs?ref=6b5cbc540d294f437785eeb678867ee753c6243b", "patch": "@@ -4,16 +4,13 @@ use crate::prelude::*;\n \n use std::marker::PhantomData;\n \n+use gimli::{Endianity, Format, RunTimeEndian};\n use gimli::write::{\n     Address, AttributeValue, CompilationUnit, DebugAbbrev, DebugInfo, DebugLine, DebugRanges,\n     DebugRngLists, DebugStr, EndianVec, LineProgram, LineProgramId, LineProgramTable, Range,\n     RangeList, RangeListTable, Result, SectionId, StringTable, UnitEntryId, UnitId, UnitTable, Writer,\n };\n-use gimli::Format;\n \n-// FIXME: use target endian\n-use byteorder::ByteOrder;\n-use gimli::RunTimeEndian;\n \n use faerie::*;\n \n@@ -25,6 +22,7 @@ fn target_endian(tcx: TyCtxt) -> RunTimeEndian {\n         Endian::Little => RunTimeEndian::Little,\n     }\n }\n+\n struct DebugReloc {\n     offset: u32,\n     size: u8,\n@@ -390,7 +388,7 @@ impl<'a, 'b, 'tcx: 'b> FunctionDebugContext<'a, 'tcx> {\n         // FIXME: add to appropriate scope intead of root\n         let entry = unit.get_mut(self.entry_id);\n         let mut size_array = [0; 8];\n-        byteorder::LittleEndian::write_u64(&mut size_array, size as u64);\n+        target_endian(tcx).write_u64(&mut size_array, size as u64);\n         entry.set(gimli::DW_AT_high_pc, AttributeValue::Data8(size_array));\n \n         self.debug_context.unit_range_list.0.push(Range {"}]}