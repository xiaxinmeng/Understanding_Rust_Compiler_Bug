{"sha": "49f793ac17b66c2f81c19e310523a0f11e03d92a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5Zjc5M2FjMTdiNjZjMmY4MWMxOWUzMTA1MjNhMGYxMWUwM2Q5MmE=", "commit": {"author": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2017-05-06T00:46:16Z"}, "committer": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2017-05-09T18:40:30Z"}, "message": "ci: Update android ndk and sdk", "tree": {"sha": "2e8e445291e7996f9622770b1bfb16a9fe453729", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e8e445291e7996f9622770b1bfb16a9fe453729"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49f793ac17b66c2f81c19e310523a0f11e03d92a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49f793ac17b66c2f81c19e310523a0f11e03d92a", "html_url": "https://github.com/rust-lang/rust/commit/49f793ac17b66c2f81c19e310523a0f11e03d92a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49f793ac17b66c2f81c19e310523a0f11e03d92a/comments", "author": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8aad3a3524fd04db3e6ddf59604d33c8e3797108", "url": "https://api.github.com/repos/rust-lang/rust/commits/8aad3a3524fd04db3e6ddf59604d33c8e3797108", "html_url": "https://github.com/rust-lang/rust/commit/8aad3a3524fd04db3e6ddf59604d33c8e3797108"}], "stats": {"total": 258, "additions": 139, "deletions": 119}, "files": [{"sha": "86f0cc5d467d72bd708a7d3f2373a846ed7eaeed", "filename": "src/ci/docker/arm-android/Dockerfile", "status": "modified", "additions": 38, "deletions": 20, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Fci%2Fdocker%2Farm-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Fci%2Fdocker%2Farm-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farm-android%2FDockerfile?ref=49f793ac17b66c2f81c19e310523a0f11e03d92a", "patch": "@@ -1,7 +1,6 @@\n FROM ubuntu:16.04\n \n-RUN dpkg --add-architecture i386 && \\\n-    apt-get update && \\\n+RUN apt-get update && \\\n     apt-get install -y --no-install-recommends \\\n   g++ \\\n   make \\\n@@ -12,35 +11,54 @@ RUN dpkg --add-architecture i386 && \\\n   git \\\n   cmake \\\n   unzip \\\n-  expect \\\n-  openjdk-9-jre-headless \\\n   sudo \\\n-  libstdc++6:i386 \\\n   xz-utils \\\n   libssl-dev \\\n   pkg-config\n \n-WORKDIR /android/\n-ENV PATH=$PATH:/android/ndk-arm-9/bin:/android/sdk/tools:/android/sdk/platform-tools\n-\n-COPY install-ndk.sh install-sdk.sh accept-licenses.sh /android/\n-RUN sh /android/install-ndk.sh\n-RUN sh /android/install-sdk.sh\n-\n RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n     dpkg -i dumb-init_*.deb && \\\n     rm dumb-init_*.deb\n \n-COPY start-emulator.sh /android/\n+RUN curl -o /usr/local/bin/sccache \\\n+      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-29-sccache-x86_64-unknown-linux-musl && \\\n+    chmod +x /usr/local/bin/sccache\n \n-ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\", \"/android/start-emulator.sh\"]\n+# Install NDK\n+COPY install-ndk.sh /tmp\n+RUN . /tmp/install-ndk.sh && \\\n+    download_ndk android-ndk-r13b-linux-x86_64.zip && \\\n+    make_standalone_toolchain arm 9 && \\\n+    remove_ndk\n \n-RUN curl -o /usr/local/bin/sccache \\\n-      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-02-24-sccache-x86_64-unknown-linux-gnu && \\\n-      chmod +x /usr/local/bin/sccache\n+# Install SDK\n+RUN dpkg --add-architecture i386 && \\\n+    apt-get update && \\\n+    apt-get install -y --no-install-recommends \\\n+  openjdk-9-jre-headless \\\n+  tzdata \\\n+  libstdc++6:i386 \\\n+  libgl1-mesa-glx \\\n+  libpulse0\n+\n+COPY install-sdk.sh /tmp\n+RUN . /tmp/install-sdk.sh && \\\n+    download_sdk tools_r25.2.5-linux.zip && \\\n+    download_sysimage armeabi-v7a 18 && \\\n+    create_avd armeabi-v7a 18\n+\n+# Setup env\n+ENV PATH=$PATH:/android/sdk/tools\n+ENV PATH=$PATH:/android/sdk/platform-tools\n+\n+ENV TARGETS=arm-linux-androideabi\n \n ENV RUST_CONFIGURE_ARGS \\\n-      --target=arm-linux-androideabi \\\n-      --arm-linux-androideabi-ndk=/android/ndk-arm-9\n+      --target=$TARGETS \\\n+      --arm-linux-androideabi-ndk=/android/ndk/arm-9\n+\n+ENV SCRIPT python2.7 ../x.py test --target $TARGETS --verbose\n \n-ENV SCRIPT python2.7 ../x.py test --target arm-linux-androideabi\n+# Entrypoint\n+COPY start-emulator.sh /android/\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\", \"/android/start-emulator.sh\"]"}, {"sha": "8d8f60a5ec2604606571cdb6a7d231d5754aa38f", "filename": "src/ci/docker/arm-android/accept-licenses.sh", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8aad3a3524fd04db3e6ddf59604d33c8e3797108/src%2Fci%2Fdocker%2Farm-android%2Faccept-licenses.sh", "raw_url": "https://github.com/rust-lang/rust/raw/8aad3a3524fd04db3e6ddf59604d33c8e3797108/src%2Fci%2Fdocker%2Farm-android%2Faccept-licenses.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farm-android%2Faccept-licenses.sh?ref=8aad3a3524fd04db3e6ddf59604d33c8e3797108", "patch": "@@ -1,15 +0,0 @@\n-#!/usr/bin/expect -f\n-# ignore-license\n-\n-set timeout 1800\n-set cmd [lindex $argv 0]\n-set licenses [lindex $argv 1]\n-\n-spawn {*}$cmd\n-expect {\n-  \"Do you accept the license '*'*\" {\n-        exp_send \"y\\r\"\n-        exp_continue\n-  }\n-  eof\n-}"}, {"sha": "80818721199838adf8fa0a6b509739366098e9c5", "filename": "src/ci/docker/arm-android/install-ndk.sh", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Fci%2Fdocker%2Farm-android%2Finstall-ndk.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Fci%2Fdocker%2Farm-android%2Finstall-ndk.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farm-android%2Finstall-ndk.sh?ref=49f793ac17b66c2f81c19e310523a0f11e03d92a", "patch": "@@ -11,23 +11,25 @@\n \n set -ex\n \n-cpgdb() {\n-  cp android-ndk-r11c/prebuilt/linux-x86_64/bin/gdb /android/$1/bin/$2-gdb\n-  cp android-ndk-r11c/prebuilt/linux-x86_64/bin/gdb-orig /android/$1/bin/gdb-orig\n-  cp -r android-ndk-r11c/prebuilt/linux-x86_64/share /android/$1/share\n+URL=https://dl.google.com/android/repository\n+\n+download_ndk() {\n+    mkdir -p /android/ndk\n+    cd /android/ndk\n+    curl -O $URL/$1\n+    unzip -q $1\n+    rm $1\n+    mv android-ndk-* ndk\n }\n \n-# Prep the Android NDK\n-#\n-# See https://github.com/servo/servo/wiki/Building-for-Android\n-curl -O https://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip\n-unzip -q android-ndk-r11c-linux-x86_64.zip\n-bash android-ndk-r11c/build/tools/make-standalone-toolchain.sh \\\n-        --platform=android-9 \\\n-        --toolchain=arm-linux-androideabi-4.9 \\\n-        --install-dir=/android/ndk-arm-9 \\\n-        --ndk-dir=/android/android-ndk-r11c \\\n-        --arch=arm\n-cpgdb ndk-arm-9 arm-linux-androideabi\n+make_standalone_toolchain() {\n+    # See https://developer.android.com/ndk/guides/standalone_toolchain.html\n+    python2.7 /android/ndk/ndk/build/tools/make_standalone_toolchain.py \\\n+        --install-dir /android/ndk/$1-$2 \\\n+        --arch $1 \\\n+        --api $2\n+}\n \n-rm -rf ./android-ndk-r11c-linux-x86_64.zip ./android-ndk-r11c\n+remove_ndk() {\n+    rm -rf /android/ndk/ndk\n+}"}, {"sha": "258fc47a7a6927e573ad534e26352c7c5cb7e417", "filename": "src/ci/docker/arm-android/install-sdk.sh", "status": "modified", "additions": 33, "deletions": 17, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Fci%2Fdocker%2Farm-android%2Finstall-sdk.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Fci%2Fdocker%2Farm-android%2Finstall-sdk.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farm-android%2Finstall-sdk.sh?ref=49f793ac17b66c2f81c19e310523a0f11e03d92a", "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT.\n #\n@@ -11,23 +11,39 @@\n \n set -ex\n \n-# Prep the SDK and emulator\n-#\n-# Note that the update process requires that we accept a bunch of licenses, and\n-# we can't just pipe `yes` into it for some reason, so we take the same strategy\n-# located in https://github.com/appunite/docker by just wrapping it in a script\n-# which apparently magically accepts the licenses.\n+URL=https://dl.google.com/android/repository\n+\n+download_sdk() {\n+    mkdir -p /android/sdk\n+    cd /android/sdk\n+    curl -O $URL/$1\n+    unzip -q $1\n+    rm -rf $1\n+}\n+\n+download_sysimage() {\n+    # See https://developer.android.com/studio/tools/help/android.html\n+    abi=$1\n+    api=$2\n+\n+    filter=\"platform-tools,android-$api\"\n+    filter=\"$filter,sys-img-$abi-android-$api\"\n \n-mkdir sdk\n-curl https://dl.google.com/android/android-sdk_r24.4-linux.tgz | \\\n-    tar xzf - -C sdk --strip-components=1\n+    # Keep printing yes to accept the licenses\n+    while true; do echo yes; sleep 10; done | \\\n+        /android/sdk/tools/android update sdk -a --no-ui \\\n+            --filter \"$filter\"\n+}\n \n-filter=\"platform-tools,android-18\"\n-filter=\"$filter,sys-img-armeabi-v7a-android-18\"\n+create_avd() {\n+    # See https://developer.android.com/studio/tools/help/android.html\n+    abi=$1\n+    api=$2\n \n-./accept-licenses.sh \"android - update sdk -a --no-ui --filter $filter\"\n+    echo no | \\\n+        /android/sdk/tools/android create avd \\\n+            --name $abi-$api \\\n+            --target android-$api \\\n+            --abi $abi\n+}\n \n-echo \"no\" | android create avd \\\n-                --name arm-18 \\\n-                --target android-18 \\\n-                --abi armeabi-v7a"}, {"sha": "cd3369d5eaddc7da93f844b4fa3fd7ceceee021f", "filename": "src/ci/docker/arm-android/start-emulator.sh", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Fci%2Fdocker%2Farm-android%2Fstart-emulator.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Fci%2Fdocker%2Farm-android%2Fstart-emulator.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farm-android%2Fstart-emulator.sh?ref=49f793ac17b66c2f81c19e310523a0f11e03d92a", "patch": "@@ -14,5 +14,12 @@ set -ex\n # Setting SHELL to a file instead on a symlink helps android\n # emulator identify the system\n export SHELL=/bin/bash\n-nohup nohup emulator @arm-18 -no-window -partition-size 2047 0<&- &>/dev/null &\n+\n+# Using the default qemu2 engine makes time::tests::since_epoch fails because\n+# the emulator date is set to unix epoch (in armeabi-v7a-18 image). Using\n+# classic engine the emulator starts with the current date and the tests run\n+# fine. If another image is used, this need to be evaluated again.\n+nohup nohup emulator @armeabi-v7a-18 \\\n+    -engine classic -no-window -partition-size 2047 0<&- &>/dev/null &\n+\n exec \"$@\""}, {"sha": "a3658225bc47c3f89b0343b8d21d177732859fc7", "filename": "src/ci/docker/dist-android/Dockerfile", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Fci%2Fdocker%2Fdist-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Fci%2Fdocker%2Fdist-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-android%2FDockerfile?ref=49f793ac17b66c2f81c19e310523a0f11e03d92a", "patch": "@@ -1,7 +1,6 @@\n FROM ubuntu:16.04\n \n-RUN dpkg --add-architecture i386 && \\\n-    apt-get update && \\\n+RUN apt-get update && \\\n     apt-get install -y --no-install-recommends \\\n   g++ \\\n   make \\\n@@ -12,28 +11,30 @@ RUN dpkg --add-architecture i386 && \\\n   git \\\n   cmake \\\n   unzip \\\n-  expect \\\n-  openjdk-9-jre \\\n   sudo \\\n-  libstdc++6:i386 \\\n   xz-utils \\\n   libssl-dev \\\n   pkg-config\n \n-WORKDIR /android/\n-ENV PATH=$PATH:/android/ndk-arm-9/bin:/android/sdk/tools:/android/sdk/platform-tools\n-\n-COPY install-ndk.sh /android/\n-RUN sh /android/install-ndk.sh\n-\n RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n     dpkg -i dumb-init_*.deb && \\\n     rm dumb-init_*.deb\n-ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n \n RUN curl -o /usr/local/bin/sccache \\\n       https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-04-29-sccache-x86_64-unknown-linux-musl && \\\n-      chmod +x /usr/local/bin/sccache\n+    chmod +x /usr/local/bin/sccache\n+\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+\n+# Install NDK\n+COPY install-ndk.sh /tmp\n+RUN . /tmp/install-ndk.sh && \\\n+    download_ndk android-ndk-r13b-linux-x86_64.zip && \\\n+    make_standalone_toolchain arm 9 && \\\n+    make_standalone_toolchain x86 9 && \\\n+    make_standalone_toolchain arm64 21 && \\\n+    make_standalone_toolchain x86_64 21 && \\\n+    remove_ndk\n \n ENV TARGETS=arm-linux-androideabi\n ENV TARGETS=$TARGETS,armv7-linux-androideabi\n@@ -44,10 +45,10 @@ ENV TARGETS=$TARGETS,x86_64-linux-android\n ENV RUST_CONFIGURE_ARGS \\\n       --target=$TARGETS \\\n       --enable-extended \\\n-      --arm-linux-androideabi-ndk=/android/ndk-arm-9 \\\n-      --armv7-linux-androideabi-ndk=/android/ndk-arm-9 \\\n-      --i686-linux-android-ndk=/android/ndk-x86-9 \\\n-      --aarch64-linux-android-ndk=/android/ndk-arm64-21 \\\n-      --x86_64-linux-android-ndk=/android/ndk-x86_64-21\n+      --arm-linux-androideabi-ndk=/android/ndk/arm-9 \\\n+      --armv7-linux-androideabi-ndk=/android/ndk/arm-9 \\\n+      --i686-linux-android-ndk=/android/ndk/x86-9 \\\n+      --aarch64-linux-android-ndk=/android/ndk/arm64-21 \\\n+      --x86_64-linux-android-ndk=/android/ndk/x86_64-21\n \n ENV SCRIPT python2.7 ../x.py dist --target $TARGETS"}, {"sha": "80818721199838adf8fa0a6b509739366098e9c5", "filename": "src/ci/docker/dist-android/install-ndk.sh", "status": "modified", "additions": 21, "deletions": 30, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Fci%2Fdocker%2Fdist-android%2Finstall-ndk.sh", "raw_url": "https://github.com/rust-lang/rust/raw/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Fci%2Fdocker%2Fdist-android%2Finstall-ndk.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-android%2Finstall-ndk.sh?ref=49f793ac17b66c2f81c19e310523a0f11e03d92a", "patch": "@@ -11,34 +11,25 @@\n \n set -ex\n \n-# Prep the Android NDK\n-#\n-# See https://github.com/servo/servo/wiki/Building-for-Android\n-curl -O https://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip\n-unzip -q android-ndk-r11c-linux-x86_64.zip\n-bash android-ndk-r11c/build/tools/make-standalone-toolchain.sh \\\n-        --platform=android-9 \\\n-        --toolchain=arm-linux-androideabi-4.9 \\\n-        --install-dir=/android/ndk-arm-9 \\\n-        --ndk-dir=/android/android-ndk-r11c \\\n-        --arch=arm\n-bash android-ndk-r11c/build/tools/make-standalone-toolchain.sh \\\n-        --platform=android-21 \\\n-        --toolchain=aarch64-linux-android-4.9 \\\n-        --install-dir=/android/ndk-arm64-21 \\\n-        --ndk-dir=/android/android-ndk-r11c \\\n-        --arch=arm64\n-bash android-ndk-r11c/build/tools/make-standalone-toolchain.sh \\\n-        --platform=android-9 \\\n-        --toolchain=x86-4.9 \\\n-        --install-dir=/android/ndk-x86-9 \\\n-        --ndk-dir=/android/android-ndk-r11c \\\n-        --arch=x86\n-bash android-ndk-r11c/build/tools/make-standalone-toolchain.sh \\\n-        --platform=android-21 \\\n-        --toolchain=x86_64-4.9 \\\n-        --install-dir=/android/ndk-x86_64-21 \\\n-        --ndk-dir=/android/android-ndk-r11c \\\n-        --arch=x86_64\n+URL=https://dl.google.com/android/repository\n+\n+download_ndk() {\n+    mkdir -p /android/ndk\n+    cd /android/ndk\n+    curl -O $URL/$1\n+    unzip -q $1\n+    rm $1\n+    mv android-ndk-* ndk\n+}\n+\n+make_standalone_toolchain() {\n+    # See https://developer.android.com/ndk/guides/standalone_toolchain.html\n+    python2.7 /android/ndk/ndk/build/tools/make_standalone_toolchain.py \\\n+        --install-dir /android/ndk/$1-$2 \\\n+        --arch $1 \\\n+        --api $2\n+}\n \n-rm -rf ./android-ndk-r11c-linux-x86_64.zip ./android-ndk-r11c\n+remove_ndk() {\n+    rm -rf /android/ndk/ndk\n+}"}, {"sha": "7fe8c1041a7297a55aa027f8ee7ad9dbba20d960", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49f793ac17b66c2f81c19e310523a0f11e03d92a/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=49f793ac17b66c2f81c19e310523a0f11e03d92a", "patch": "@@ -570,7 +570,7 @@ actual:\\n\\\n                          format!(\"-command={}\", debugger_script.to_str().unwrap())];\n \n                 let mut gdb_path = tool_path;\n-                gdb_path.push_str(&format!(\"/bin/{}-gdb\", self.config.target));\n+                gdb_path.push_str(\"/bin/gdb\");\n                 let procsrv::Result {\n                     out,\n                     err,"}]}