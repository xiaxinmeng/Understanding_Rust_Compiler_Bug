{"sha": "8846970bba8d529f4361eec65d39254060483e03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NDY5NzBiYmE4ZDUyOWY0MzYxZWVjNjVkMzkyNTQwNjA0ODNlMDM=", "commit": {"author": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-25T01:38:40Z"}, "committer": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-27T12:35:17Z"}, "message": "Implement Eq for Cell<T>", "tree": {"sha": "57911ffcfc3b3e1109e882dc9e78e5851ba187bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57911ffcfc3b3e1109e882dc9e78e5851ba187bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8846970bba8d529f4361eec65d39254060483e03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8846970bba8d529f4361eec65d39254060483e03", "html_url": "https://github.com/rust-lang/rust/commit/8846970bba8d529f4361eec65d39254060483e03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8846970bba8d529f4361eec65d39254060483e03/comments", "author": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e6151a77067d3fcb9a101cb5ee66e7252571845", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e6151a77067d3fcb9a101cb5ee66e7252571845", "html_url": "https://github.com/rust-lang/rust/commit/1e6151a77067d3fcb9a101cb5ee66e7252571845"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "bc28f2f445ee086468603b717f1e425f2ec77ae8", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8846970bba8d529f4361eec65d39254060483e03/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8846970bba8d529f4361eec65d39254060483e03/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=8846970bba8d529f4361eec65d39254060483e03", "patch": "@@ -55,6 +55,12 @@ impl<T:Pod> Clone for Cell<T> {\n     }\n }\n \n+impl<T:Eq + Pod> Eq for Cell<T> {\n+    fn eq(&self, other: &Cell<T>) -> bool {\n+        self.get() == other.get()\n+    }\n+}\n+\n /// A mutable memory location with dynamically checked borrow rules\n pub struct RefCell<T> {\n     priv value: T,\n@@ -273,11 +279,14 @@ mod test {\n     #[test]\n     fn smoketest_cell() {\n         let x = Cell::new(10);\n+        assert_eq!(x, Cell::new(10));\n         assert_eq!(x.get(), 10);\n         x.set(20);\n+        assert_eq!(x, Cell::new(20));\n         assert_eq!(x.get(), 20);\n \n         let y = Cell::new((30, 40));\n+        assert_eq!(y, Cell::new((30, 40)));\n         assert_eq!(y.get(), (30, 40));\n     }\n "}]}