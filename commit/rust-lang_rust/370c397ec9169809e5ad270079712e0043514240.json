{"sha": "370c397ec9169809e5ad270079712e0043514240", "node_id": "C_kwDOAAsO6NoAKDM3MGMzOTdlYzkxNjk4MDllNWFkMjcwMDc5NzEyZTAwNDM1MTQyNDA", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-19T15:32:07Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-20T11:14:24Z"}, "message": "Run part of the simd test suite", "tree": {"sha": "7c75fe935b7c3a0259c5d1a3b6da5bb034179a5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c75fe935b7c3a0259c5d1a3b6da5bb034179a5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/370c397ec9169809e5ad270079712e0043514240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/370c397ec9169809e5ad270079712e0043514240", "html_url": "https://github.com/rust-lang/rust/commit/370c397ec9169809e5ad270079712e0043514240", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/370c397ec9169809e5ad270079712e0043514240/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "636fb020c445baf1b3172d7df2dab745b46093c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/636fb020c445baf1b3172d7df2dab745b46093c3", "html_url": "https://github.com/rust-lang/rust/commit/636fb020c445baf1b3172d7df2dab745b46093c3"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "a32e6df220832847efaef3e86f5dd1b402dc3d5f", "filename": "scripts/test_rustc_tests.sh", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/370c397ec9169809e5ad270079712e0043514240/scripts%2Ftest_rustc_tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/370c397ec9169809e5ad270079712e0043514240/scripts%2Ftest_rustc_tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Ftest_rustc_tests.sh?ref=370c397ec9169809e5ad270079712e0043514240", "patch": "@@ -10,7 +10,7 @@ pushd rust\n \n command -v rg >/dev/null 2>&1 || cargo install ripgrep\n \n-rm -r src/test/ui/{extern/,unsized-locals/,lto/,simd*,linkage*} || true\n+rm -r src/test/ui/{extern/,unsized-locals/,lto/,linkage*} || true\n for test in $(rg --files-with-matches \"asm!|lto|// needs-asm-support|// needs-unwind\" src/test/{ui,incremental}); do\n   rm $test\n done\n@@ -43,6 +43,16 @@ rm src/test/ui/generator/size-moved-locals.rs # same\n # vendor intrinsics\n rm src/test/ui/sse2.rs # cpuid not supported, so sse2 not detected\n rm src/test/ui/intrinsics/const-eval-select-x86_64.rs # requires x86_64 vendor intrinsics\n+rm src/test/ui/simd/array-type.rs # \"Index argument for `simd_insert` is not a constant\"\n+rm src/test/ui/simd/intrinsic/generic-bitmask-pass.rs # simd_bitmask unimplemented\n+rm src/test/ui/simd/intrinsic/generic-as.rs # simd_as unimplemented\n+rm src/test/ui/simd/intrinsic/generic-arithmetic-saturating-pass.rs # simd_saturating_add unimplemented\n+rm src/test/ui/simd/intrinsic/float-math-pass.rs # simd_fcos unimplemented\n+rm src/test/ui/simd/intrinsic/generic-gather-pass.rs # simd_gather unimplemented\n+rm src/test/ui/simd/intrinsic/generic-select-pass.rs # simd_select_bitmask unimplemented\n+rm src/test/ui/simd/issue-85915-simd-ptrs.rs # simd_gather unimplemented\n+rm src/test/ui/simd/issue-89193.rs # simd_gather unimplemented\n+rm src/test/ui/simd/simd-bitmask.rs # simd_bitmask unimplemented\n \n # exotic linkages\n rm src/test/ui/issues/issue-33992.rs # unsupported linkages\n@@ -76,6 +86,7 @@ rm src/test/ui/abi/stack-protector.rs # requires stack protector support\n # giving different but possibly correct results\n # =============================================\n rm src/test/ui/numbers-arithmetic/saturating-float-casts.rs # intrinsic gives different but valid result\n+rm src/test/ui/simd/intrinsic/float-minmax-pass.rs # same\n rm src/test/ui/mir/mir_misc_casts.rs # depends on deduplication of constants\n rm src/test/ui/mir/mir_raw_fat_ptr.rs # same\n rm src/test/ui/consts/issue-33537.rs # same\n@@ -99,6 +110,8 @@ rm src/test/incremental/spike-neg2.rs # same\n rm src/test/ui/issues/issue-74564-if-expr-stack-overflow.rs # gives a stackoverflow before the backend runs\n rm src/test/ui/mir/ssa-analysis-regression-50041.rs # produces ICE\n \n+rm src/test/ui/simd/intrinsic/generic-reduction-pass.rs # simd_reduce_add_unordered doesn't accept an accumulator for integer vectors\n+\n # bugs in the test suite\n # ======================\n rm src/test/ui/unsafe/union.rs # has UB caught by cg_clif. see rust-lang/rust#95075"}, {"sha": "bc21d736166277ce3f664fe926b17adb34841578", "filename": "src/intrinsics/simd.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/370c397ec9169809e5ad270079712e0043514240/src%2Fintrinsics%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/370c397ec9169809e5ad270079712e0043514240/src%2Fintrinsics%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fsimd.rs?ref=370c397ec9169809e5ad270079712e0043514240", "patch": "@@ -409,6 +409,7 @@ pub(super) fn codegen_simd_intrinsic_call<'tcx>(\n         };\n \n         simd_reduce_add_ordered | simd_reduce_add_unordered, (c v, v acc) {\n+            // FIXME there must be no acc param for integer vectors\n             if !v.layout().ty.is_simd() {\n                 report_simd_type_validation_error(fx, intrinsic, span, v.layout().ty);\n                 return;\n@@ -424,6 +425,7 @@ pub(super) fn codegen_simd_intrinsic_call<'tcx>(\n         };\n \n         simd_reduce_mul_ordered | simd_reduce_mul_unordered, (c v, v acc) {\n+            // FIXME there must be no acc param for integer vectors\n             if !v.layout().ty.is_simd() {\n                 report_simd_type_validation_error(fx, intrinsic, span, v.layout().ty);\n                 return;"}]}