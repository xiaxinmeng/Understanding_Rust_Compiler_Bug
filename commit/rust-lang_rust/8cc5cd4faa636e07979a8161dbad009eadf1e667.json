{"sha": "8cc5cd4faa636e07979a8161dbad009eadf1e667", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYzVjZDRmYWE2MzZlMDc5NzlhODE2MWRiYWQwMDllYWRmMWU2Njc=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-19T17:40:02Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-21T20:11:02Z"}, "message": "Always ignore build failure of failable tools (rls, rustfmt, clippy, miri).\n\nIf build failed for these tools, they will be automatically skipped from\ndistribution, and will not fail the whole build.\n\nTest failures are *not* ignored, nor build failure of other tools (e.g.\ncargo). Therefore it should have no observable effect to the current CI\nsystem.\n\nThis is step 1/8 of automatic management of broken tools #45861.", "tree": {"sha": "122a538205bee2f7570a66b783b6914182b39162", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/122a538205bee2f7570a66b783b6914182b39162"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cc5cd4faa636e07979a8161dbad009eadf1e667", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAloUiFYACgkQ/vbIBR0O\nATwoWw//Z9p+WjHXCNm8gGjpVsSrdy0yEHXKcCEYfbzkh52rpLuN1XxqVZdkEhCk\ngZdB+M0Q65mKef+S4W6lIZ7FEOhY6uZUHrn/WhlQFybkRc1H6RStddrniMLRUKvD\noicDA19velifiR9/h3tQJpWiJFdqawF5sbOCdhAT0SNNl4fLKjRXzwPzVavVNQXu\nd3UpQdgM1TqBTH6+IXBzW8RgslW2YnTH0CIRL1Y+i9/RhHdyGmLVC3/YztcsRtBU\nl7kp34eehzMYl8hH5Dr1iSnn5tkkcGluzoIELVxmjrVkE7e/sPz0gUxTWBgtk2YR\nmjeJ8eMItmMk7j4+raySSpiHy9eSiIISjL0Qtyyu5tSqF3+EwX2ZXN6dZ4BR9Vll\n3dU+fYJ3MP9FWsGHXbRboWEZD3W55/5Vg/aRh04tt+ef/cqeAiDyrUrbYk4BwR7M\nuSumblvfIG04CsVEmnAewh5qTgXr30l2YgU7PjBSCSfHYbxX5rjY4n/4AFypbIrE\nrQBZK4mAWSoC92JBdqA3ZSQs4SqapoXjL8RVT84xIYtzkrpQeep1z82OEkkmCqcW\npugC+kD9Wlf4FFS6Y7df9TY1Q89AF3TCEgirP2g4indfxIznVL51kMqLwIgF8CnA\nJS0MJouoZj6lR78sdgjx3JysYHAkh5DcKp2w6Gc89zSE6gJBl8c=\n=a5+j\n-----END PGP SIGNATURE-----", "payload": "tree 122a538205bee2f7570a66b783b6914182b39162\nparent 63739ab7b210c1a8c890c2ea5238a3284877daa3\nauthor kennytm <kennytm@gmail.com> 1511113202 +0800\ncommitter kennytm <kennytm@gmail.com> 1511295062 +0800\n\nAlways ignore build failure of failable tools (rls, rustfmt, clippy, miri).\n\nIf build failed for these tools, they will be automatically skipped from\ndistribution, and will not fail the whole build.\n\nTest failures are *not* ignored, nor build failure of other tools (e.g.\ncargo). Therefore it should have no observable effect to the current CI\nsystem.\n\nThis is step 1/8 of automatic management of broken tools #45861.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cc5cd4faa636e07979a8161dbad009eadf1e667", "html_url": "https://github.com/rust-lang/rust/commit/8cc5cd4faa636e07979a8161dbad009eadf1e667", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cc5cd4faa636e07979a8161dbad009eadf1e667/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63739ab7b210c1a8c890c2ea5238a3284877daa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/63739ab7b210c1a8c890c2ea5238a3284877daa3", "html_url": "https://github.com/rust-lang/rust/commit/63739ab7b210c1a8c890c2ea5238a3284877daa3"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "bfe2a64f5ba489ad27436936261e6236ac88b8fe", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8cc5cd4faa636e07979a8161dbad009eadf1e667/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cc5cd4faa636e07979a8161dbad009eadf1e667/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=8cc5cd4faa636e07979a8161dbad009eadf1e667", "patch": "@@ -1083,7 +1083,8 @@ impl Step for Rls {\n         let rls = builder.ensure(tool::Rls {\n             compiler: builder.compiler(stage, build.build),\n             target\n-        }).expect(\"Rls to build: toolstate is testing\");\n+        }).or_else(|| { println!(\"Unable to build RLS, skipping dist\"); None })?;\n+\n         install(&rls, &image.join(\"bin\"), 0o755);\n         let doc = image.join(\"share/doc/rls\");\n         install(&src.join(\"README.md\"), &doc, 0o644);\n@@ -1167,11 +1168,12 @@ impl Step for Rustfmt {\n         let rustfmt = builder.ensure(tool::Rustfmt {\n             compiler: builder.compiler(stage, build.build),\n             target\n-        }).expect(\"Rustfmt to build: toolstate is testing\");\n+        }).or_else(|| { println!(\"Unable to build Rustfmt, skipping dist\"); None })?;\n         let cargofmt = builder.ensure(tool::Cargofmt {\n             compiler: builder.compiler(stage, build.build),\n             target\n-        }).expect(\"Cargofmt to build: toolstate is testing\");\n+        }).or_else(|| { println!(\"Unable to build Cargofmt, skipping dist\"); None })?;\n+\n         install(&rustfmt, &image.join(\"bin\"), 0o755);\n         install(&cargofmt, &image.join(\"bin\"), 0o755);\n         let doc = image.join(\"share/doc/rustfmt\");"}, {"sha": "fe1c82923405b6b955551e80263d2a687b2a64e9", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8cc5cd4faa636e07979a8161dbad009eadf1e667/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cc5cd4faa636e07979a8161dbad009eadf1e667/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=8cc5cd4faa636e07979a8161dbad009eadf1e667", "patch": "@@ -11,7 +11,7 @@\n use std::fs;\n use std::env;\n use std::path::PathBuf;\n-use std::process::Command;\n+use std::process::{Command, exit};\n \n use Mode;\n use Compiler;\n@@ -115,7 +115,14 @@ impl Step for ToolBuild {\n         println!(\"Building stage{} tool {} ({})\", compiler.stage, tool, target);\n \n         let mut cargo = prepare_tool_cargo(builder, compiler, target, \"build\", path);\n-        build.run_expecting(&mut cargo, expectation);\n+        if !build.try_run(&mut cargo, expectation) {\n+            if expectation == BuildExpectation::None {\n+                exit(1);\n+            } else {\n+                return None;\n+            }\n+        }\n+\n         if expectation == BuildExpectation::Succeeding || expectation == BuildExpectation::None {\n             let cargo_out = build.cargo_out(compiler, Mode::Tool, target)\n                 .join(exe(tool, &compiler.host));"}]}