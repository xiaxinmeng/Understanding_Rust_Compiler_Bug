{"sha": "14a3a713c74108626fe356dad21d93b84792878a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YTNhNzEzYzc0MTA4NjI2ZmUzNTZkYWQyMWQ5M2I4NDc5Mjg3OGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-24T14:28:19Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-24T14:28:19Z"}, "message": "Revert \"Merge #5516\"\n\nThis reverts commit 5b13c2411f025a16495f5828afe2def6e9220102, reversing\nchanges made to c3defe2532ba6ffd12a13bcbc8fdeda037665efc.", "tree": {"sha": "008442e4def4bd19df278c8284494f49771408d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/008442e4def4bd19df278c8284494f49771408d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14a3a713c74108626fe356dad21d93b84792878a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14a3a713c74108626fe356dad21d93b84792878a", "html_url": "https://github.com/rust-lang/rust/commit/14a3a713c74108626fe356dad21d93b84792878a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14a3a713c74108626fe356dad21d93b84792878a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d799b66df8550a21523d42116a9b83116aa92d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d799b66df8550a21523d42116a9b83116aa92d8", "html_url": "https://github.com/rust-lang/rust/commit/3d799b66df8550a21523d42116a9b83116aa92d8"}], "stats": {"total": 75, "additions": 32, "deletions": 43}, "files": [{"sha": "8947ccf07ecfe3ad66a4356c9fda2c13d8b93d6b", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14a3a713c74108626fe356dad21d93b84792878a/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14a3a713c74108626fe356dad21d93b84792878a/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=14a3a713c74108626fe356dad21d93b84792878a", "patch": "@@ -128,7 +128,6 @@ pub struct ClientCapsConfig {\n     pub hover_actions: bool,\n     pub status_notification: bool,\n     pub signature_help_label_offsets: bool,\n-    pub dynamic_watched_files: bool,\n }\n \n impl Config {\n@@ -291,13 +290,6 @@ impl Config {\n     }\n \n     pub fn update_caps(&mut self, caps: &ClientCapabilities) {\n-        if let Some(ws_caps) = caps.workspace.as_ref() {\n-            if let Some(did_change_watched_files) = ws_caps.did_change_watched_files.as_ref() {\n-                self.client_caps.dynamic_watched_files =\n-                    did_change_watched_files.dynamic_registration.unwrap_or(false);\n-            }\n-        }\n-\n         if let Some(doc_caps) = caps.text_document.as_ref() {\n             if let Some(value) = doc_caps.definition.as_ref().and_then(|it| it.link_support) {\n                 self.client_caps.location_link = value;"}, {"sha": "e95d4157c006cabcb6c32aff152c083665531dc9", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 32, "deletions": 35, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/14a3a713c74108626fe356dad21d93b84792878a/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14a3a713c74108626fe356dad21d93b84792878a/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=14a3a713c74108626fe356dad21d93b84792878a", "patch": "@@ -106,41 +106,38 @@ impl GlobalState {\n             );\n         };\n \n-        if self.config.client_caps.dynamic_watched_files {\n-            let save_registration_options = lsp_types::TextDocumentSaveRegistrationOptions {\n-                include_text: Some(false),\n-                text_document_registration_options: lsp_types::TextDocumentRegistrationOptions {\n-                    document_selector: Some(vec![\n-                        lsp_types::DocumentFilter {\n-                            language: None,\n-                            scheme: None,\n-                            pattern: Some(\"**/*.rs\".into()),\n-                        },\n-                        lsp_types::DocumentFilter {\n-                            language: None,\n-                            scheme: None,\n-                            pattern: Some(\"**/Cargo.toml\".into()),\n-                        },\n-                        lsp_types::DocumentFilter {\n-                            language: None,\n-                            scheme: None,\n-                            pattern: Some(\"**/Cargo.lock\".into()),\n-                        },\n-                    ]),\n-                },\n-            };\n-\n-            let registration = lsp_types::Registration {\n-                id: \"textDocument/didSave\".to_string(),\n-                method: \"textDocument/didSave\".to_string(),\n-                register_options: Some(serde_json::to_value(save_registration_options).unwrap()),\n-            };\n-\n-            self.send_request::<lsp_types::request::RegisterCapability>(\n-                lsp_types::RegistrationParams { registrations: vec![registration] },\n-                |_, _| (),\n-            );\n-        }\n+        let save_registration_options = lsp_types::TextDocumentSaveRegistrationOptions {\n+            include_text: Some(false),\n+            text_document_registration_options: lsp_types::TextDocumentRegistrationOptions {\n+                document_selector: Some(vec![\n+                    lsp_types::DocumentFilter {\n+                        language: None,\n+                        scheme: None,\n+                        pattern: Some(\"**/*.rs\".into()),\n+                    },\n+                    lsp_types::DocumentFilter {\n+                        language: None,\n+                        scheme: None,\n+                        pattern: Some(\"**/Cargo.toml\".into()),\n+                    },\n+                    lsp_types::DocumentFilter {\n+                        language: None,\n+                        scheme: None,\n+                        pattern: Some(\"**/Cargo.lock\".into()),\n+                    },\n+                ]),\n+            },\n+        };\n+\n+        let registration = lsp_types::Registration {\n+            id: \"textDocument/didSave\".to_string(),\n+            method: \"textDocument/didSave\".to_string(),\n+            register_options: Some(serde_json::to_value(save_registration_options).unwrap()),\n+        };\n+        self.send_request::<lsp_types::request::RegisterCapability>(\n+            lsp_types::RegistrationParams { registrations: vec![registration] },\n+            |_, _| (),\n+        );\n \n         self.fetch_workspaces();\n "}]}