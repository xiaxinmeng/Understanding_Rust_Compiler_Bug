{"sha": "70f3409875be7c2d0f9d48092eb98f11ee734378", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwZjM0MDk4NzViZTdjMmQwZjlkNDgwOTJlYjk4ZjExZWU3MzQzNzg=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-04-22T00:53:51Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-04-22T16:20:13Z"}, "message": "rustc: de-@ llvm.", "tree": {"sha": "e9230f307cc63b4c487d165edebb52270f140b9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9230f307cc63b4c487d165edebb52270f140b9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70f3409875be7c2d0f9d48092eb98f11ee734378", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70f3409875be7c2d0f9d48092eb98f11ee734378", "html_url": "https://github.com/rust-lang/rust/commit/70f3409875be7c2d0f9d48092eb98f11ee734378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70f3409875be7c2d0f9d48092eb98f11ee734378/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "637addde1f9d6f830115fa6b71c74bb43675fa2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/637addde1f9d6f830115fa6b71c74bb43675fa2c", "html_url": "https://github.com/rust-lang/rust/commit/637addde1f9d6f830115fa6b71c74bb43675fa2c"}], "stats": {"total": 51, "additions": 12, "deletions": 39}, "files": [{"sha": "ba7c50547947eee59087723bde1b05cd8e84cd09", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 12, "deletions": 39, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/70f3409875be7c2d0f9d48092eb98f11ee734378/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70f3409875be7c2d0f9d48092eb98f11ee734378/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=70f3409875be7c2d0f9d48092eb98f11ee734378", "patch": "@@ -1882,37 +1882,23 @@ impl TypeNames {\n \n /* Memory-managed interface to target data. */\n \n-pub struct target_data_res {\n-    pub td: TargetDataRef,\n+pub struct TargetData {\n+    pub lltd: TargetDataRef\n }\n \n-impl Drop for target_data_res {\n+impl Drop for TargetData {\n     fn drop(&mut self) {\n         unsafe {\n-            llvm::LLVMDisposeTargetData(self.td);\n+            llvm::LLVMDisposeTargetData(self.lltd);\n         }\n     }\n }\n \n-pub fn target_data_res(td: TargetDataRef) -> target_data_res {\n-    target_data_res {\n-        td: td\n-    }\n-}\n-\n-pub struct TargetData {\n-    pub lltd: TargetDataRef,\n-    dtor: @target_data_res\n-}\n-\n pub fn mk_target_data(string_rep: &str) -> TargetData {\n-    let lltd = string_rep.with_c_str(|buf| {\n-        unsafe { llvm::LLVMCreateTargetData(buf) }\n-    });\n-\n     TargetData {\n-        lltd: lltd,\n-        dtor: @target_data_res(lltd)\n+        lltd: string_rep.with_c_str(|buf| {\n+            unsafe { llvm::LLVMCreateTargetData(buf) }\n+        })\n     }\n }\n \n@@ -1949,35 +1935,22 @@ impl Drop for ObjectFile {\n \n /* Memory-managed interface to section iterators. */\n \n-pub struct section_iter_res {\n-    pub si: SectionIteratorRef,\n+pub struct SectionIter {\n+    pub llsi: SectionIteratorRef\n }\n \n-impl Drop for section_iter_res {\n+impl Drop for SectionIter {\n     fn drop(&mut self) {\n         unsafe {\n-            llvm::LLVMDisposeSectionIterator(self.si);\n+            llvm::LLVMDisposeSectionIterator(self.llsi);\n         }\n     }\n }\n \n-pub fn section_iter_res(si: SectionIteratorRef) -> section_iter_res {\n-    section_iter_res {\n-        si: si\n-    }\n-}\n-\n-pub struct SectionIter {\n-    pub llsi: SectionIteratorRef,\n-    dtor: @section_iter_res\n-}\n-\n pub fn mk_section_iter(llof: ObjectFileRef) -> SectionIter {\n     unsafe {\n-        let llsi = llvm::LLVMGetSections(llof);\n         SectionIter {\n-            llsi: llsi,\n-            dtor: @section_iter_res(llsi)\n+            llsi: llvm::LLVMGetSections(llof)\n         }\n     }\n }"}]}