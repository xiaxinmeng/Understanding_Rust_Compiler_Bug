{"sha": "48c46f275b6431966edf243965b027aaf0f4e09d", "node_id": "C_kwDOAAsO6NoAKDQ4YzQ2ZjI3NWI2NDMxOTY2ZWRmMjQzOTY1YjAyN2FhZjBmNGUwOWQ", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-06-05T13:31:18Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-06-05T13:31:18Z"}, "message": "Move write! arguments directly into the string", "tree": {"sha": "91c6ab88e4e4d1c2a3853b57f44c21acd6e74fbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91c6ab88e4e4d1c2a3853b57f44c21acd6e74fbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48c46f275b6431966edf243965b027aaf0f4e09d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48c46f275b6431966edf243965b027aaf0f4e09d", "html_url": "https://github.com/rust-lang/rust/commit/48c46f275b6431966edf243965b027aaf0f4e09d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48c46f275b6431966edf243965b027aaf0f4e09d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c77a0d7a7543addab9ca5c4c32c330fb8620e83", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c77a0d7a7543addab9ca5c4c32c330fb8620e83", "html_url": "https://github.com/rust-lang/rust/commit/5c77a0d7a7543addab9ca5c4c32c330fb8620e83"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "d9b1cfcc11190cca473c0a6e6663ab6c52184312", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48c46f275b6431966edf243965b027aaf0f4e09d/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48c46f275b6431966edf243965b027aaf0f4e09d/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=48c46f275b6431966edf243965b027aaf0f4e09d", "patch": "@@ -1039,8 +1039,8 @@ fn render_attributes_in_pre<'a, 'b: 'a>(\n // When an attribute is rendered inside a <code> tag, it is formatted using\n // a div to produce a newline after it.\n fn render_attributes_in_code(w: &mut impl fmt::Write, it: &clean::Item, tcx: TyCtxt<'_>) {\n-    for a in it.attributes(tcx, false) {\n-        write!(w, \"<div class=\\\"code-attribute\\\">{}</div>\", a).unwrap();\n+    for attr in it.attributes(tcx, false) {\n+        write!(w, \"<div class=\\\"code-attribute\\\">{attr}</div>\").unwrap();\n     }\n }\n "}, {"sha": "0ddd1a9ff7b73f0271ed8684f5f38ab37d068da3", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48c46f275b6431966edf243965b027aaf0f4e09d/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48c46f275b6431966edf243965b027aaf0f4e09d/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=48c46f275b6431966edf243965b027aaf0f4e09d", "patch": "@@ -1435,17 +1435,17 @@ fn item_proc_macro(\n         let name = it.name.expect(\"proc-macros always have names\");\n         match m.kind {\n             MacroKind::Bang => {\n-                write!(buffer, \"{}!() {{ /* proc-macro */ }}\", name).unwrap();\n+                write!(buffer, \"{name}!() {{ /* proc-macro */ }}\").unwrap();\n             }\n             MacroKind::Attr => {\n-                write!(buffer, \"#[{}]\", name).unwrap();\n+                write!(buffer, \"#[{name}]\").unwrap();\n             }\n             MacroKind::Derive => {\n-                write!(buffer, \"#[derive({})]\", name).unwrap();\n+                write!(buffer, \"#[derive({name})]\").unwrap();\n                 if !m.helpers.is_empty() {\n                     buffer.write_str(\"\\n{\\n    // Attributes available to this derive:\\n\").unwrap();\n                     for attr in &m.helpers {\n-                        writeln!(buffer, \"    #[{}]\", attr).unwrap();\n+                        writeln!(buffer, \"    #[{attr}]\").unwrap();\n                     }\n                     buffer.write_str(\"}\\n\").unwrap();\n                 }"}]}