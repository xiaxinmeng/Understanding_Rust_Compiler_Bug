{"sha": "a7d57c61c2422b7942575936faf9a62d9e5e1599", "node_id": "C_kwDOAAsO6NoAKGE3ZDU3YzYxYzI0MjJiNzk0MjU3NTkzNmZhZjlhNjJkOWU1ZTE1OTk", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-05-09T16:06:27Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-06-23T20:10:47Z"}, "message": "Don't eagerly scan for `is_known_utf8` in `to_ascii_lowercase`/`uppercase`.", "tree": {"sha": "a8c73d17085c853f509976194b2992f85d339907", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8c73d17085c853f509976194b2992f85d339907"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7d57c61c2422b7942575936faf9a62d9e5e1599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7d57c61c2422b7942575936faf9a62d9e5e1599", "html_url": "https://github.com/rust-lang/rust/commit/a7d57c61c2422b7942575936faf9a62d9e5e1599", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7d57c61c2422b7942575936faf9a62d9e5e1599/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3a585e593f441405fd30d082b8eb70e0b4c0d62", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3a585e593f441405fd30d082b8eb70e0b4c0d62", "html_url": "https://github.com/rust-lang/rust/commit/d3a585e593f441405fd30d082b8eb70e0b4c0d62"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "86d173d8fcde0c115d6f27678ad94f06ce882bf4", "filename": "library/std/src/sys_common/wtf8.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a7d57c61c2422b7942575936faf9a62d9e5e1599/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d57c61c2422b7942575936faf9a62d9e5e1599/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8.rs?ref=a7d57c61c2422b7942575936faf9a62d9e5e1599", "patch": "@@ -762,18 +762,12 @@ impl Wtf8 {\n \n     #[inline]\n     pub fn to_ascii_lowercase(&self) -> Wtf8Buf {\n-        Wtf8Buf {\n-            bytes: self.bytes.to_ascii_lowercase(),\n-            is_known_utf8: self.next_surrogate(0).is_none(),\n-        }\n+        Wtf8Buf { bytes: self.bytes.to_ascii_lowercase(), is_known_utf8: false }\n     }\n \n     #[inline]\n     pub fn to_ascii_uppercase(&self) -> Wtf8Buf {\n-        Wtf8Buf {\n-            bytes: self.bytes.to_ascii_uppercase(),\n-            is_known_utf8: self.next_surrogate(0).is_none(),\n-        }\n+        Wtf8Buf { bytes: self.bytes.to_ascii_uppercase(), is_known_utf8: false }\n     }\n \n     #[inline]"}, {"sha": "ba2bdc76e3b449b1d0c8741c16d7cb82f26d5878", "filename": "library/std/src/sys_common/wtf8/tests.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7d57c61c2422b7942575936faf9a62d9e5e1599/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d57c61c2422b7942575936faf9a62d9e5e1599/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8%2Ftests.rs?ref=a7d57c61c2422b7942575936faf9a62d9e5e1599", "patch": "@@ -635,12 +635,10 @@ fn wtf8_make_ascii_lowercase() {\n     let mut lowercase = Wtf8Buf::from_str(\"\");\n     lowercase.make_ascii_lowercase();\n     assert_eq!(lowercase.bytes, b\"\");\n-    assert!(lowercase.is_known_utf8);\n \n     let mut lowercase = Wtf8Buf::from_str(\"GrEeN gRaPeS! \ud83c\udf47\");\n     lowercase.make_ascii_lowercase();\n     assert_eq!(lowercase.bytes, b\"green grapes! \\xf0\\x9f\\x8d\\x87\");\n-    assert!(lowercase.is_known_utf8);\n \n     let mut lowercase = unsafe { Wtf8::from_bytes_unchecked(b\"\\xED\\xA0\\x80\").to_owned() };\n     lowercase.make_ascii_lowercase();\n@@ -653,12 +651,10 @@ fn wtf8_make_ascii_uppercase() {\n     let mut uppercase = Wtf8Buf::from_str(\"\");\n     uppercase.make_ascii_uppercase();\n     assert_eq!(uppercase.bytes, b\"\");\n-    assert!(uppercase.is_known_utf8);\n \n     let mut uppercase = Wtf8Buf::from_str(\"GrEeN gRaPeS! \ud83c\udf47\");\n     uppercase.make_ascii_uppercase();\n     assert_eq!(uppercase.bytes, b\"GREEN GRAPES! \\xf0\\x9f\\x8d\\x87\");\n-    assert!(uppercase.is_known_utf8);\n \n     let mut uppercase = unsafe { Wtf8::from_bytes_unchecked(b\"\\xED\\xA0\\x80\").to_owned() };\n     uppercase.make_ascii_uppercase();"}]}