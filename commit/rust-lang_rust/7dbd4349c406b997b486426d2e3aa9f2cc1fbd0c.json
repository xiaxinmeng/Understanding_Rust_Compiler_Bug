{"sha": "7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkYmQ0MzQ5YzQwNmI5OTdiNDg2NDI2ZDJlM2FhOWYyY2MxZmJkMGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-13T10:32:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-13T10:32:43Z"}, "message": "auto merge of #17975 : thestinger/rust/fPIE, r=eddyb\n\nPosition independent code has fewer requirements in executables, so pass\r\nthe appropriate flag to LLVM in order to allow more optimization. At the\r\nmoment this means faster thread-local storage.", "tree": {"sha": "170f3590a7b841e48d9ebb9823719a33398ae6ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/170f3590a7b841e48d9ebb9823719a33398ae6ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c", "html_url": "https://github.com/rust-lang/rust/commit/7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0ea210b394aa1b61d341593a3f9098fe5bf7806", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0ea210b394aa1b61d341593a3f9098fe5bf7806", "html_url": "https://github.com/rust-lang/rust/commit/a0ea210b394aa1b61d341593a3f9098fe5bf7806"}, {"sha": "4deb4bcba590e707e23670d8b40bc5520c5ab7fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/4deb4bcba590e707e23670d8b40bc5520c5ab7fe", "html_url": "https://github.com/rust-lang/rust/commit/4deb4bcba590e707e23670d8b40bc5520c5ab7fe"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "f1cd8b52e5ed3103fa8e2b0a09c87dcecfdae0d0", "filename": "src/librustc/back/write.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c/src%2Flibrustc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c/src%2Flibrustc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fwrite.rs?ref=7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c", "patch": "@@ -34,7 +34,6 @@ use std::sync::{Arc, Mutex};\n use std::task::TaskBuilder;\n use libc::{c_uint, c_int, c_void};\n \n-\n #[deriving(Clone, PartialEq, PartialOrd, Ord, Eq)]\n pub enum OutputType {\n     OutputTypeBitcode,\n@@ -44,7 +43,6 @@ pub enum OutputType {\n     OutputTypeExe,\n }\n \n-\n pub fn llvm_err(handler: &diagnostic::Handler, msg: String) -> ! {\n     unsafe {\n         let cstr = llvm::LLVMRustGetLastError();\n@@ -202,6 +200,10 @@ fn create_target_machine(sess: &Session) -> TargetMachineRef {\n                      (sess.targ_cfg.os == abi::OsMacos &&\n                       sess.targ_cfg.arch == abi::X86_64);\n \n+    let any_library = sess.crate_types.borrow().iter().any(|ty| {\n+        *ty != config::CrateTypeExecutable\n+    });\n+\n     // OSX has -dead_strip, which doesn't rely on ffunction_sections\n     // FIXME(#13846) this should be enabled for windows\n     let ffunction_sections = sess.targ_cfg.os != abi::OsMacos &&\n@@ -240,6 +242,7 @@ fn create_target_machine(sess: &Session) -> TargetMachineRef {\n                         true /* EnableSegstk */,\n                         use_softfp,\n                         no_fp_elim,\n+                        !any_library && reloc_model == llvm::RelocPIC,\n                         ffunction_sections,\n                         fdata_sections,\n                     )"}, {"sha": "a1a6412af1135605891132e4df57ad1f20788541", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c", "patch": "@@ -353,6 +353,7 @@ pub enum CodeGenOptLevel {\n     CodeGenLevelAggressive = 3,\n }\n \n+#[deriving(PartialEq)]\n #[repr(C)]\n pub enum RelocMode {\n     RelocDefault = 0,\n@@ -1907,6 +1908,7 @@ extern {\n                                        EnableSegstk: bool,\n                                        UseSoftFP: bool,\n                                        NoFramePointerElim: bool,\n+                                       PositionIndependentExecutable: bool,\n                                        FunctionSections: bool,\n                                        DataSections: bool) -> TargetMachineRef;\n     pub fn LLVMRustDisposeTargetMachine(T: TargetMachineRef);"}, {"sha": "ce3090390db8e73ac904ee6fc6f742a2960fb8dc", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=7dbd4349c406b997b486426d2e3aa9f2cc1fbd0c", "patch": "@@ -71,6 +71,7 @@ LLVMRustCreateTargetMachine(const char *triple,\n                             bool EnableSegmentedStacks,\n                             bool UseSoftFloat,\n                             bool NoFramePointerElim,\n+                            bool PositionIndependentExecutable,\n                             bool FunctionSections,\n                             bool DataSections) {\n     std::string Error;\n@@ -83,6 +84,7 @@ LLVMRustCreateTargetMachine(const char *triple,\n     }\n \n     TargetOptions Options;\n+    Options.PositionIndependentExecutable = PositionIndependentExecutable;\n     Options.NoFramePointerElim = NoFramePointerElim;\n #if LLVM_VERSION_MINOR < 5\n     Options.EnableSegmentedStacks = EnableSegmentedStacks;"}]}