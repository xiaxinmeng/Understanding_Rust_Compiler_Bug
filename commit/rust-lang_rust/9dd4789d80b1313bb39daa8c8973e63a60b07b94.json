{"sha": "9dd4789d80b1313bb39daa8c8973e63a60b07b94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZDQ3ODlkODBiMTMxM2JiMzlkYWE4Yzg5NzNlNjNhNjBiMDdiOTQ=", "commit": {"author": {"name": "Elly Jones", "email": "elly@leptoquark.net", "date": "2011-11-22T22:09:35Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-22T22:43:18Z"}, "message": "Add fs::rmdir() and tempfile/gen_str() tests.", "tree": {"sha": "bdbc78c087b0ab333ca8b7cfbd33f7a78620e754", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdbc78c087b0ab333ca8b7cfbd33f7a78620e754"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dd4789d80b1313bb39daa8c8973e63a60b07b94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dd4789d80b1313bb39daa8c8973e63a60b07b94", "html_url": "https://github.com/rust-lang/rust/commit/9dd4789d80b1313bb39daa8c8973e63a60b07b94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dd4789d80b1313bb39daa8c8973e63a60b07b94/comments", "author": null, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d468af59ede45140fa531992829b30ecd9d57cc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d468af59ede45140fa531992829b30ecd9d57cc1", "html_url": "https://github.com/rust-lang/rust/commit/d468af59ede45140fa531992829b30ecd9d57cc1"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "5d4db459b5b581cc00f4226fad9f8cb296dea0cd", "filename": "src/lib/fs.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Flib%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Flib%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ffs.rs?ref=9dd4789d80b1313bb39daa8c8973e63a60b07b94", "patch": "@@ -119,7 +119,7 @@ fn file_is_dir(p: path) -> bool {\n /*\n Function: make_dir\n \n-Creates a directory at the specific path.\n+Creates a directory at the specified path.\n */\n fn make_dir(p: path, mode: int) -> bool {\n     ret mkdir(p, mode);\n@@ -157,6 +157,26 @@ fn list_dir(p: path) -> [str] {\n     ret full_paths;\n }\n \n+/*\n+Function: remove_dir\n+\n+Removes a directory at the specified path.\n+*/\n+fn remove_dir(p: path) -> bool {\n+   ret rmdir(p);\n+\n+    #[cfg(target_os = \"win32\")]\n+    fn rmdir(_p: path) -> bool {\n+        ret str::as_buf(_p, {|buf| os::kernel32::RemoveDirectory(buf)});\n+    }\n+\n+    #[cfg(target_os = \"linux\")]\n+    #[cfg(target_os = \"macos\")]\n+    fn rmdir(_p: path) -> bool {\n+        ret str::as_buf(_p, {|buf| os::libc::rmdir(buf) == 0 });\n+    }\n+}\n+\n /*\n Function: path_is_absolute\n "}, {"sha": "255cbb97410951a648120760301e9a6b1a013c4a", "filename": "src/lib/linux_os.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Flib%2Flinux_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Flib%2Flinux_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Flinux_os.rs?ref=9dd4789d80b1313bb39daa8c8973e63a60b07b94", "patch": "@@ -52,6 +52,7 @@ native mod libc {\n     fn waitpid(pid: pid_t, &status: c_int, options: c_int) -> pid_t;\n     fn readlink(path: str::sbuf, buf: str::sbuf, bufsize: size_t) -> ssize_t;\n     fn mkdir(path: str::sbuf, mode: int) -> int;\n+    fn rmdir(path: str::sbuf) -> int;\n }\n \n mod libc_constants {"}, {"sha": "7424668e509cc8a33b6d37051c4e766bd80fb9fc", "filename": "src/lib/macos_os.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Flib%2Fmacos_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Flib%2Fmacos_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmacos_os.rs?ref=9dd4789d80b1313bb39daa8c8973e63a60b07b94", "patch": "@@ -45,6 +45,7 @@ native mod libc {\n     fn pipe(buf: *mutable int) -> int;\n     fn waitpid(pid: int, &status: int, options: int) -> int;\n     fn mkdir(s: str::sbuf, mode: int) -> int;\n+    fn rmdir(s: str::sbuf) -> int;\n }\n \n mod libc_constants {"}, {"sha": "db9568c39a4fdb78adb5f0ed34294f66c71082e5", "filename": "src/lib/win32_os.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Flib%2Fwin32_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Flib%2Fwin32_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fwin32_os.rs?ref=9dd4789d80b1313bb39daa8c8973e63a60b07b94", "patch": "@@ -54,6 +54,7 @@ native mod kernel32 {\n                           nSize: DWORD) -> DWORD;\n     fn CreateDirectory(lpPathName: LPCTSTR,\n                        lpSecurityAttributes: LPSECURITY_ATTRIBUTES) -> bool;\n+    fn RemoveDirectory(lpPathName: LPCTSTR) -> bool;\n }\n \n // FIXME turn into constants"}, {"sha": "b0d71d0e431dbc13cddd51ef177098d0eebb0d6b", "filename": "src/test/stdtest/rand.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Ftest%2Fstdtest%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Ftest%2Fstdtest%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Frand.rs?ref=9dd4789d80b1313bb39daa8c8973e63a60b07b94", "patch": "@@ -3,6 +3,7 @@\n // -*- rust -*-\n use std;\n import std::rand;\n+import std::str;\n \n #[test]\n fn test() {\n@@ -27,3 +28,13 @@ fn test() {\n     log r1.next();\n     log r1.next();\n }\n+\n+#[test]\n+fn genstr() {\n+    let r: rand::rng = rand::mk_rng();\n+    log r.gen_str(10u);\n+    log r.gen_str(10u);\n+    log r.gen_str(10u);\n+    assert(str::char_len(r.gen_str(10u)) == 10u);\n+    assert(str::char_len(r.gen_str(16u)) == 16u);\n+}"}, {"sha": "a31f2430629b358ad4c96eb8acc1bd7d492b3862", "filename": "src/test/stdtest/stdtest.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Ftest%2Fstdtest%2Fstdtest.rc", "raw_url": "https://github.com/rust-lang/rust/raw/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Ftest%2Fstdtest%2Fstdtest.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fstdtest.rc?ref=9dd4789d80b1313bb39daa8c8973e63a60b07b94", "patch": "@@ -33,6 +33,7 @@ mod sort;\n mod str;\n mod sys;\n mod task;\n+mod tempfile;\n mod test;\n mod tri;\n mod treemap;"}, {"sha": "2f78d3e8a92bba57c1b7fe352047e1c965553aae", "filename": "src/test/stdtest/tempfile.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Ftest%2Fstdtest%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd4789d80b1313bb39daa8c8973e63a60b07b94/src%2Ftest%2Fstdtest%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Ftempfile.rs?ref=9dd4789d80b1313bb39daa8c8973e63a60b07b94", "patch": "@@ -0,0 +1,17 @@\n+use std;\n+import std::fs;\n+import std::option::some;\n+import std::str;\n+import std::tempfile;\n+\n+#[test]\n+fn mkdtemp() {\n+    let r = tempfile::mkdtemp(\"./\", \"foobar\");\n+    alt r {\n+        some(p) {\n+            fs::remove_dir(p);\n+            assert(str::ends_with(p, \"foobar\"));\n+        }\n+        _ { assert(false); }\n+    }\n+}"}]}