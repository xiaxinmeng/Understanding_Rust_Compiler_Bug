{"sha": "2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMzdlZDg3ZmM1ZWM4MjdiMmFjZWJmZThiOGU5YzdiMGRkYTlmMzA=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-02T19:19:28Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-09-10T18:19:25Z"}, "message": "Record call_site parent for macros.", "tree": {"sha": "6b5eef83fc486b7f2c20dcefa530615527978b1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b5eef83fc486b7f2c20dcefa530615527978b1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30", "html_url": "https://github.com/rust-lang/rust/commit/2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e026eacb1eaa0e56bb2adcc3fa86ace8542866f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e026eacb1eaa0e56bb2adcc3fa86ace8542866f", "html_url": "https://github.com/rust-lang/rust/commit/5e026eacb1eaa0e56bb2adcc3fa86ace8542866f"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "416f8bdcbf6c25f1b8d5bd888236c7e93081783c", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30", "patch": "@@ -15,7 +15,7 @@ use rustc_lint_defs::builtin::PROC_MACRO_BACK_COMPAT;\n use rustc_lint_defs::BuiltinLintDiagnostics;\n use rustc_parse::{self, nt_to_tokenstream, parser, MACRO_ARGUMENTS};\n use rustc_session::{parse::ParseSess, Limit, Session};\n-use rustc_span::def_id::{CrateNum, DefId};\n+use rustc_span::def_id::{CrateNum, DefId, LocalDefId};\n use rustc_span::edition::Edition;\n use rustc_span::hygiene::{AstPass, ExpnData, ExpnKind, LocalExpnId};\n use rustc_span::source_map::SourceMap;\n@@ -843,6 +843,7 @@ pub type DeriveResolutions = Vec<(ast::Path, Annotatable, Option<Lrc<SyntaxExten\n \n pub trait ResolverExpand {\n     fn next_node_id(&mut self) -> NodeId;\n+    fn invocation_parent(&self, id: LocalExpnId) -> LocalDefId;\n \n     fn resolve_dollar_crates(&mut self);\n     fn visit_ast_fragment_with_placeholders("}, {"sha": "62066ca965784103fbc339d9005811601ab471f1", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30", "patch": "@@ -588,7 +588,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n         // Resolve `$crate`s in the fragment for pretty-printing.\n         self.cx.resolver.resolve_dollar_crates();\n \n-        let invocations = {\n+        let mut invocations = {\n             let mut collector = InvocationCollector {\n                 // Non-derive macro invocations cannot see the results of cfg expansion - they\n                 // will either be removed along with the item, or invoked before the cfg/cfg_attr\n@@ -613,6 +613,19 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n             self.cx\n                 .resolver\n                 .visit_ast_fragment_with_placeholders(self.cx.current_expansion.id, &fragment);\n+\n+            if self.cx.sess.opts.debugging_opts.incremental_relative_spans {\n+                for (invoc, _) in invocations.iter_mut() {\n+                    let expn_id = invoc.expansion_data.id;\n+                    let parent_def = self.cx.resolver.invocation_parent(expn_id);\n+                    let span = match &mut invoc.kind {\n+                        InvocationKind::Bang { ref mut span, .. } => span,\n+                        InvocationKind::Attr { attr, .. } => &mut attr.span,\n+                        InvocationKind::Derive { path, .. } => &mut path.span,\n+                    };\n+                    *span = span.with_parent(Some(parent_def));\n+                }\n+            }\n         }\n \n         (fragment, invocations)"}, {"sha": "5879cb1daa582f5360bb69a332cbf53d3d426635", "filename": "compiler/rustc_resolve/src/def_collector.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs?ref=2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30", "patch": "@@ -32,7 +32,13 @@ impl<'a, 'b> DefCollector<'a, 'b> {\n     fn create_def(&mut self, node_id: NodeId, data: DefPathData, span: Span) -> LocalDefId {\n         let parent_def = self.parent_def;\n         debug!(\"create_def(node_id={:?}, data={:?}, parent_def={:?})\", node_id, data, parent_def);\n-        self.resolver.create_def(parent_def, node_id, data, self.expansion.to_expn_id(), span)\n+        self.resolver.create_def(\n+            parent_def,\n+            node_id,\n+            data,\n+            self.expansion.to_expn_id(),\n+            span.with_parent(None),\n+        )\n     }\n \n     fn with_parent<F: FnOnce(&mut Self)>(&mut self, parent_def: LocalDefId, f: F) {"}, {"sha": "4dbac47c3cc8e35202613a948b6622e5d52a0779", "filename": "compiler/rustc_resolve/src/macros.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs?ref=2e37ed87fc5ec827b2acebfe8b8e9c7b0dda9f30", "patch": "@@ -180,6 +180,10 @@ impl<'a> ResolverExpand for Resolver<'a> {\n         self.next_node_id()\n     }\n \n+    fn invocation_parent(&self, id: LocalExpnId) -> LocalDefId {\n+        self.invocation_parents[&id].0\n+    }\n+\n     fn resolve_dollar_crates(&mut self) {\n         hygiene::update_dollar_crate_names(|ctxt| {\n             let ident = Ident::new(kw::DollarCrate, DUMMY_SP.with_ctxt(ctxt));"}]}