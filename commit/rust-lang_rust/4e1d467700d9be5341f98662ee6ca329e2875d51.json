{"sha": "4e1d467700d9be5341f98662ee6ca329e2875d51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlMWQ0Njc3MDBkOWJlNTM0MWY5ODY2MmVlNmNhMzI5ZTI4NzVkNTE=", "commit": {"author": {"name": "Dodo", "email": "kasper199914@gmail.com", "date": "2019-07-13T15:15:16Z"}, "committer": {"name": "Dodo", "email": "kasper199914@gmail.com", "date": "2019-07-13T15:15:16Z"}, "message": "add spaces in front of trait requirements", "tree": {"sha": "928120c72b3cf82afb168ea056c96e2b39831e95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/928120c72b3cf82afb168ea056c96e2b39831e95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e1d467700d9be5341f98662ee6ca329e2875d51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e1d467700d9be5341f98662ee6ca329e2875d51", "html_url": "https://github.com/rust-lang/rust/commit/4e1d467700d9be5341f98662ee6ca329e2875d51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e1d467700d9be5341f98662ee6ca329e2875d51/comments", "author": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b468c6360cba002ba1e97b70cf51223a498442e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b468c6360cba002ba1e97b70cf51223a498442e", "html_url": "https://github.com/rust-lang/rust/commit/6b468c6360cba002ba1e97b70cf51223a498442e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "f74e945b3cc1bf58b652e938f4629ce727026e87", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4e1d467700d9be5341f98662ee6ca329e2875d51/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e1d467700d9be5341f98662ee6ca329e2875d51/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=4e1d467700d9be5341f98662ee6ca329e2875d51", "patch": "@@ -290,7 +290,7 @@ impl<T:Copy> Clone for Cell<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T:Default> Default for Cell<T> {\n+impl<T: Default> Default for Cell<T> {\n     /// Creates a `Cell<T>`, with the `Default` value for T.\n     #[inline]\n     fn default() -> Cell<T> {\n@@ -299,18 +299,18 @@ impl<T:Default> Default for Cell<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T:PartialEq + Copy> PartialEq for Cell<T> {\n+impl<T: PartialEq + Copy> PartialEq for Cell<T> {\n     #[inline]\n     fn eq(&self, other: &Cell<T>) -> bool {\n         self.get() == other.get()\n     }\n }\n \n #[stable(feature = \"cell_eq\", since = \"1.2.0\")]\n-impl<T:Eq + Copy> Eq for Cell<T> {}\n+impl<T: Eq + Copy> Eq for Cell<T> {}\n \n #[stable(feature = \"cell_ord\", since = \"1.10.0\")]\n-impl<T:PartialOrd + Copy> PartialOrd for Cell<T> {\n+impl<T: PartialOrd + Copy> PartialOrd for Cell<T> {\n     #[inline]\n     fn partial_cmp(&self, other: &Cell<T>) -> Option<Ordering> {\n         self.get().partial_cmp(&other.get())\n@@ -338,7 +338,7 @@ impl<T:PartialOrd + Copy> PartialOrd for Cell<T> {\n }\n \n #[stable(feature = \"cell_ord\", since = \"1.10.0\")]\n-impl<T:Ord + Copy> Ord for Cell<T> {\n+impl<T: Ord + Copy> Ord for Cell<T> {\n     #[inline]\n     fn cmp(&self, other: &Cell<T>) -> Ordering {\n         self.get().cmp(&other.get())\n@@ -1008,7 +1008,7 @@ impl<T: Clone> Clone for RefCell<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T:Default> Default for RefCell<T> {\n+impl<T: Default> Default for RefCell<T> {\n     /// Creates a `RefCell<T>`, with the `Default` value for T.\n     #[inline]\n     fn default() -> RefCell<T> {"}]}