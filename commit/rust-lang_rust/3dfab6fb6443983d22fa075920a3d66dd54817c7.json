{"sha": "3dfab6fb6443983d22fa075920a3d66dd54817c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZmFiNmZiNjQ0Mzk4M2QyMmZhMDc1OTIwYTNkNjZkZDU0ODE3Yzc=", "commit": {"author": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-08-25T16:38:25Z"}, "committer": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-10-10T13:19:11Z"}, "message": "Add integer overflow check", "tree": {"sha": "312abd34768f62a556f47f7e02c5541910e3a354", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/312abd34768f62a556f47f7e02c5541910e3a354"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dfab6fb6443983d22fa075920a3d66dd54817c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dfab6fb6443983d22fa075920a3d66dd54817c7", "html_url": "https://github.com/rust-lang/rust/commit/3dfab6fb6443983d22fa075920a3d66dd54817c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dfab6fb6443983d22fa075920a3d66dd54817c7/comments", "author": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1084052a7f6d65a5c5e9656ba507ba42c4caacb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1084052a7f6d65a5c5e9656ba507ba42c4caacb", "html_url": "https://github.com/rust-lang/rust/commit/e1084052a7f6d65a5c5e9656ba507ba42c4caacb"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "8ba389762fbfe5302e42ca3b32209db81ebd4953", "filename": "library/std/src/sys/unix/ext/net/ancillary.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3dfab6fb6443983d22fa075920a3d66dd54817c7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dfab6fb6443983d22fa075920a3d66dd54817c7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs?ref=3dfab6fb6443983d22fa075920a3d66dd54817c7", "patch": "@@ -72,7 +72,15 @@ fn add_to_ancillary_data<T: Clone>(\n     cmsg_level: libc::c_int,\n     cmsg_type: libc::c_int,\n ) -> bool {\n-    let len = (source.len() * size_of::<T>()) as u32;\n+    let len = if let Some(len) = source.len().checked_mul(size_of::<T>()) {\n+        if let Ok(len) = u32::try_from(len) {\n+            len\n+        } else {\n+            return false;\n+        }\n+    } else {\n+        return false;\n+    };\n \n     unsafe {\n         let additional_space = libc::CMSG_SPACE(len) as usize;"}]}