{"sha": "ef2bf6d5053f55057aecd0f0cb35c13ef332d72a", "node_id": "C_kwDOAAsO6NoAKGVmMmJmNmQ1MDUzZjU1MDU3YWVjZDBmMGNiMzVjMTNlZjMzMmQ3MmE", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-03-09T13:52:45Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-04-03T07:24:14Z"}, "message": "implement --print=all-target-specs-json", "tree": {"sha": "2dfa4f45e2300390f6378cb5d43f45335b12d31a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dfa4f45e2300390f6378cb5d43f45335b12d31a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef2bf6d5053f55057aecd0f0cb35c13ef332d72a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmQqfx4ACgkQzXazX3c0\ndp5euw/8CGJrebfTrD9NqFb42lzWlaDj8DJohq3OfVWAPmktiou1WvxudeIagDPt\n6U0QZ2+YFmzRwK3Ww+F3FwOtBN3iHWV024q1boZgUTRbHX46P01X+kMgbVd1AdtH\nm0Wqfx/lK/FlROM9ygQVz6uXpYD3N0bNtmFKo1coJKeihCf/OLuq7kv+eEwYbjlM\nX4hNIGjG9kF/pnmUqgmWVcXcCSwGu9l9YVnA29iAwH6iJZYMTl7Z77IH8aa7i9M3\nSicTHMhZBK6czFWUF68HpdPT69Db3WPzV9jgoX6bbjZtpqzmApeM3CEMhTtkUDB6\nEce9faCkhk9c0jabk3cq/ZfK5H4WFOuAaC3wGv+eewVa5VIRhMj/nAuPszk6xaKE\ncrldT6Jr93JA+c+KJ8MPwS83lHXiH1uf/cjlD/Zolu8TpsjqzOAebK5B6gr7W2HV\nb9zRTyWn7KnoiIEKO0hysGLA4Ggw17ltGhxdFaPG/Q2pexsNmYgXoA0KBmfY+ypu\nMJs8xi6oPJP45a9TUljcp5K90WGB8rJaMxiH0zULnwdsvxRICfIxtUYyl2utD6o4\nAQcJt865SexnL/dCBbqMMV7W06l8VvriI2JDHxS1m9CFRhiNl5MlYA9T3FYpc0wb\nCE9eohsuBNE2U5mWLrgtkx84WUxxLoo9j58z41lJNHuJ1zxVSQ0=\n=3fQA\n-----END PGP SIGNATURE-----", "payload": "tree 2dfa4f45e2300390f6378cb5d43f45335b12d31a\nparent e592aaa70596741af5969a91f6054a0b16b60352\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1678369965 +0100\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1680506654 +0200\n\nimplement --print=all-target-specs-json\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef2bf6d5053f55057aecd0f0cb35c13ef332d72a", "html_url": "https://github.com/rust-lang/rust/commit/ef2bf6d5053f55057aecd0f0cb35c13ef332d72a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef2bf6d5053f55057aecd0f0cb35c13ef332d72a/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e592aaa70596741af5969a91f6054a0b16b60352", "url": "https://api.github.com/repos/rust-lang/rust/commits/e592aaa70596741af5969a91f6054a0b16b60352", "html_url": "https://github.com/rust-lang/rust/commit/e592aaa70596741af5969a91f6054a0b16b60352"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "730d41ab962f899838e9a974c364fa0aee832196", "filename": "compiler/rustc_driver_impl/src/lib.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ef2bf6d5053f55057aecd0f0cb35c13ef332d72a/compiler%2Frustc_driver_impl%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef2bf6d5053f55057aecd0f0cb35c13ef332d72a/compiler%2Frustc_driver_impl%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver_impl%2Fsrc%2Flib.rs?ref=ef2bf6d5053f55057aecd0f0cb35c13ef332d72a", "patch": "@@ -44,8 +44,10 @@ use rustc_session::{early_error, early_error_no_abort, early_warn};\n use rustc_span::source_map::{FileLoader, FileName};\n use rustc_span::symbol::sym;\n use rustc_target::json::ToJson;\n+use rustc_target::spec::{Target, TargetTriple};\n \n use std::cmp::max;\n+use std::collections::BTreeMap;\n use std::env;\n use std::ffi::OsString;\n use std::fs;\n@@ -648,6 +650,15 @@ fn print_crate_info(\n             TargetSpec => {\n                 println!(\"{}\", serde_json::to_string_pretty(&sess.target.to_json()).unwrap());\n             }\n+            AllTargetSpecs => {\n+                let mut targets = BTreeMap::new();\n+                for name in rustc_target::spec::TARGETS {\n+                    let triple = TargetTriple::from_triple(name);\n+                    let target = Target::expect_builtin(&triple);\n+                    targets.insert(name, target.to_json());\n+                }\n+                println!(\"{}\", serde_json::to_string_pretty(&targets).unwrap());\n+            }\n             FileNames | CrateName => {\n                 let Some(attrs) = attrs.as_ref() else {\n                     // no crate attributes, print out an error and exit"}, {"sha": "7ad3d59a1d3a29200dbf4a485e16e79f87a27b79", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ef2bf6d5053f55057aecd0f0cb35c13ef332d72a/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef2bf6d5053f55057aecd0f0cb35c13ef332d72a/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=ef2bf6d5053f55057aecd0f0cb35c13ef332d72a", "patch": "@@ -580,6 +580,7 @@ pub enum PrintRequest {\n     CodeModels,\n     TlsModels,\n     TargetSpec,\n+    AllTargetSpecs,\n     NativeStaticLibs,\n     StackProtectorStrategies,\n     LinkArgs,\n@@ -1439,8 +1440,8 @@ pub fn rustc_short_optgroups() -> Vec<RustcOptGroup> {\n             \"Compiler information to print on stdout\",\n             \"[crate-name|file-names|sysroot|target-libdir|cfg|calling-conventions|\\\n              target-list|target-cpus|target-features|relocation-models|code-models|\\\n-             tls-models|target-spec-json|native-static-libs|stack-protector-strategies|\\\n-             link-args]\",\n+             tls-models|target-spec-json|all-target-specs-json|native-static-libs|\\\n+             stack-protector-strategies|link-args]\",\n         ),\n         opt::flagmulti_s(\"g\", \"\", \"Equivalent to -C debuginfo=2\"),\n         opt::flagmulti_s(\"O\", \"\", \"Equivalent to -C opt-level=2\"),\n@@ -1887,6 +1888,7 @@ fn collect_print_requests(\n         (\"native-static-libs\", PrintRequest::NativeStaticLibs),\n         (\"stack-protector-strategies\", PrintRequest::StackProtectorStrategies),\n         (\"target-spec-json\", PrintRequest::TargetSpec),\n+        (\"all-target-specs-json\", PrintRequest::AllTargetSpecs),\n         (\"link-args\", PrintRequest::LinkArgs),\n         (\"split-debuginfo\", PrintRequest::SplitDebuginfo),\n     ];\n@@ -1900,7 +1902,18 @@ fn collect_print_requests(\n                     early_error(\n                         error_format,\n                         \"the `-Z unstable-options` flag must also be passed to \\\n-                     enable the target-spec-json print option\",\n+                         enable the target-spec-json print option\",\n+                    );\n+                }\n+            }\n+            Some((_, PrintRequest::AllTargetSpecs)) => {\n+                if unstable_opts.unstable_options {\n+                    PrintRequest::AllTargetSpecs\n+                } else {\n+                    early_error(\n+                        error_format,\n+                        \"the `-Z unstable-options` flag must also be passed to \\\n+                         enable the all-target-specs-json print option\",\n                     );\n                 }\n             }"}, {"sha": "bea6ce067f6e870a5446340017db73f1f78cfcf1", "filename": "tests/run-make/valid-print-requests/valid-print-requests.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef2bf6d5053f55057aecd0f0cb35c13ef332d72a/tests%2Frun-make%2Fvalid-print-requests%2Fvalid-print-requests.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef2bf6d5053f55057aecd0f0cb35c13ef332d72a/tests%2Frun-make%2Fvalid-print-requests%2Fvalid-print-requests.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fvalid-print-requests%2Fvalid-print-requests.stderr?ref=ef2bf6d5053f55057aecd0f0cb35c13ef332d72a", "patch": "@@ -1,2 +1,2 @@\n-error: unknown print request `uwu`. Valid print requests are: `crate-name`, `file-names`, `sysroot`, `target-libdir`, `cfg`, `calling-conventions`, `target-list`, `target-cpus`, `target-features`, `relocation-models`, `code-models`, `tls-models`, `native-static-libs`, `stack-protector-strategies`, `target-spec-json`, `link-args`, `split-debuginfo`\n+error: unknown print request `uwu`. Valid print requests are: `crate-name`, `file-names`, `sysroot`, `target-libdir`, `cfg`, `calling-conventions`, `target-list`, `target-cpus`, `target-features`, `relocation-models`, `code-models`, `tls-models`, `native-static-libs`, `stack-protector-strategies`, `target-spec-json`, `all-target-specs-json`, `link-args`, `split-debuginfo`\n "}]}