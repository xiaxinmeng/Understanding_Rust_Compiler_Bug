{"sha": "dc45eb93f7541b3033487abaee653cb5bf6602d5", "node_id": "C_kwDOAAsO6NoAKGRjNDVlYjkzZjc1NDFiMzAzMzQ4N2FiYWVlNjUzY2I1YmY2NjAyZDU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-02T04:53:36Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-02T05:05:35Z"}, "message": "Revert 88f2140", "tree": {"sha": "8bb8401922140b32aedefd199ee493d8d3f83a7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bb8401922140b32aedefd199ee493d8d3f83a7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc45eb93f7541b3033487abaee653cb5bf6602d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc45eb93f7541b3033487abaee653cb5bf6602d5", "html_url": "https://github.com/rust-lang/rust/commit/dc45eb93f7541b3033487abaee653cb5bf6602d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc45eb93f7541b3033487abaee653cb5bf6602d5/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ac7e08aaf10d2882c6addcf220872c9390ed91e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ac7e08aaf10d2882c6addcf220872c9390ed91e", "html_url": "https://github.com/rust-lang/rust/commit/5ac7e08aaf10d2882c6addcf220872c9390ed91e"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "23a33f9a953f647ad764761c79c1e1ab59a6ec2c", "filename": "compiler/rustc_hir_typeck/src/method/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dc45eb93f7541b3033487abaee653cb5bf6602d5/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc45eb93f7541b3033487abaee653cb5bf6602d5/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs?ref=dc45eb93f7541b3033487abaee653cb5bf6602d5", "patch": "@@ -20,7 +20,7 @@ use rustc_hir::def_id::DefId;\n use rustc_infer::infer::{self, InferOk};\n use rustc_middle::traits::ObligationCause;\n use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n-use rustc_middle::ty::{self, DefIdTree, GenericParamDefKind, Ty, TypeVisitable};\n+use rustc_middle::ty::{self, GenericParamDefKind, Ty, TypeVisitable};\n use rustc_span::symbol::Ident;\n use rustc_span::Span;\n use rustc_trait_selection::traits;\n@@ -217,7 +217,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n \n             // We probe again, taking all traits into account (not only those in scope).\n-            let mut candidates =\n+            let candidates =\n                 match self.lookup_probe(segment.ident, self_ty, call_expr, ProbeScope::AllTraits) {\n                     // If we find a different result the caller probably forgot to import a trait.\n                     Ok(ref new_pick) if pick.differs_from(new_pick) => {\n@@ -236,7 +236,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         .collect(),\n                     _ => Vec::new(),\n                 };\n-            candidates.retain(|candidate| *candidate != self.tcx.parent(result.callee.def_id));\n \n             return Err(IllegalSizedBound(candidates, needs_mut, span));\n         }"}, {"sha": "aa6f74cb5d45ae0ffd98fd5d231cd79d67198f91", "filename": "src/test/ui/issues/issue-35976.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dc45eb93f7541b3033487abaee653cb5bf6602d5/src%2Ftest%2Fui%2Fissues%2Fissue-35976.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc45eb93f7541b3033487abaee653cb5bf6602d5/src%2Ftest%2Fui%2Fissues%2Fissue-35976.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-35976.rs?ref=dc45eb93f7541b3033487abaee653cb5bf6602d5", "patch": "@@ -1,5 +1,9 @@\n+// revisions: imported unimported\n+//[imported] check-pass\n+\n mod private {\n     pub trait Future {\n+        //[unimported]~^^ HELP perhaps add a `use` for it\n         fn wait(&self) where Self: Sized;\n     }\n \n@@ -8,13 +12,13 @@ mod private {\n     }\n }\n \n-//use private::Future;\n+#[cfg(imported)]\n+use private::Future;\n \n fn bar(arg: Box<dyn private::Future>) {\n+    // Importing the trait means that we don't autoderef `Box<dyn Future>`\n     arg.wait();\n-    //~^ ERROR the `wait` method cannot be invoked on a trait object\n+    //[unimported]~^ ERROR the `wait` method cannot be invoked on a trait object\n }\n \n-fn main() {\n-\n-}\n+fn main() {}"}, {"sha": "5d61bb8ea379992abb59771028d5f1c466bc94f8", "filename": "src/test/ui/issues/issue-35976.unimported.stderr", "status": "renamed", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dc45eb93f7541b3033487abaee653cb5bf6602d5/src%2Ftest%2Fui%2Fissues%2Fissue-35976.unimported.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc45eb93f7541b3033487abaee653cb5bf6602d5/src%2Ftest%2Fui%2Fissues%2Fissue-35976.unimported.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-35976.unimported.stderr?ref=dc45eb93f7541b3033487abaee653cb5bf6602d5", "patch": "@@ -1,11 +1,16 @@\n error: the `wait` method cannot be invoked on a trait object\n-  --> $DIR/issue-35976.rs:14:9\n+  --> $DIR/issue-35976.rs:20:9\n    |\n LL |         fn wait(&self) where Self: Sized;\n    |                                    ----- this has a `Sized` requirement\n ...\n LL |     arg.wait();\n    |         ^^^^\n+   |\n+help: another candidate was found in the following trait, perhaps add a `use` for it:\n+   |\n+LL | use private::Future;\n+   |\n \n error: aborting due to previous error\n ", "previous_filename": "src/test/ui/issues/issue-35976.stderr"}]}