{"sha": "dcbeebc801e071394874843e0e4c7509a0fb46c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjYmVlYmM4MDFlMDcxMzk0ODc0ODQzZTBlNGM3NTA5YTBmYjQ2YzE=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-24T00:51:34Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-24T01:09:57Z"}, "message": "Make vec::zip not require T:copy (close #3254)", "tree": {"sha": "e445ade2a385952f12098b8f0a5374d74814c2b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e445ade2a385952f12098b8f0a5374d74814c2b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcbeebc801e071394874843e0e4c7509a0fb46c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcbeebc801e071394874843e0e4c7509a0fb46c1", "html_url": "https://github.com/rust-lang/rust/commit/dcbeebc801e071394874843e0e4c7509a0fb46c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcbeebc801e071394874843e0e4c7509a0fb46c1/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79266c614d7fc9f3bee68f13f0ef3fbee3fda9b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/79266c614d7fc9f3bee68f13f0ef3fbee3fda9b1", "html_url": "https://github.com/rust-lang/rust/commit/79266c614d7fc9f3bee68f13f0ef3fbee3fda9b1"}], "stats": {"total": 57, "additions": 44, "deletions": 13}, "files": [{"sha": "e9b42eb9c109debd01c4518b64823585e6c8c555", "filename": "src/libcore/tuple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcbeebc801e071394874843e0e4c7509a0fb46c1/src%2Flibcore%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcbeebc801e071394874843e0e4c7509a0fb46c1/src%2Flibcore%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftuple.rs?ref=dcbeebc801e071394874843e0e4c7509a0fb46c1", "patch": "@@ -41,7 +41,7 @@ impl<A: copy, B: copy> (&[A], &[B]): ExtendedTupleOps<A,B> {\n \n     fn zip() -> ~[(A, B)] {\n         let (a, b) = self;\n-        vec::zip(a, b)\n+        vec::zip_slice(a, b)\n     }\n \n     fn map<C>(f: fn(A, B) -> C) -> ~[C] {"}, {"sha": "15db86f937df94163ab1f74ddfb057366e3be7d1", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 43, "deletions": 12, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/dcbeebc801e071394874843e0e4c7509a0fb46c1/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcbeebc801e071394874843e0e4c7509a0fb46c1/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=dcbeebc801e071394874843e0e4c7509a0fb46c1", "patch": "@@ -70,7 +70,7 @@ export position_elem;\n export rposition;\n export rposition_between;\n export unzip;\n-export zip;\n+export zip, zip_slice;\n export swap;\n export reverse;\n export reversed;\n@@ -1019,14 +1019,9 @@ pure fn rposition_between<T>(v: &[T], start: uint, end: uint,\n // return a nominal record with a constraint saying that, instead of\n // returning a tuple (contingent on issue #869)\n /**\n- * Convert a vector of pairs into a pair of vectors\n- *\n- * Returns a tuple containing two vectors where the i-th element of the first\n- * vector contains the first element of the i-th tuple of the input vector,\n- * and the i-th element of the second vector contains the second element\n- * of the i-th tuple of the input vector.\n+ * Convert a vector of pairs into a pair of vectors, by reference. As unzip().\n  */\n-pure fn unzip<T: copy, U: copy>(v: &[(T, U)]) -> (~[T], ~[U]) {\n+pure fn unzip_slice<T: copy, U: copy>(v: &[(T, U)]) -> (~[T], ~[U]) {\n     let mut as = ~[], bs = ~[];\n     for each(v) |p| {\n         let (a, b) = p;\n@@ -1039,12 +1034,30 @@ pure fn unzip<T: copy, U: copy>(v: &[(T, U)]) -> (~[T], ~[U]) {\n }\n \n /**\n- * Convert two vectors to a vector of pairs\n+ * Convert a vector of pairs into a pair of vectors.\n  *\n- * Returns a vector of tuples, where the i-th tuple contains contains the\n- * i-th elements from each of the input vectors.\n+ * Returns a tuple containing two vectors where the i-th element of the first\n+ * vector contains the first element of the i-th tuple of the input vector,\n+ * and the i-th element of the second vector contains the second element\n+ * of the i-th tuple of the input vector.\n  */\n-pure fn zip<T: copy, U: copy>(v: &[const T], u: &[const U]) -> ~[(T, U)] {\n+pure fn unzip<T,U>(+v: ~[(T, U)]) -> (~[T], ~[U]) {\n+    let mut ts = ~[], us = ~[];\n+    unchecked {\n+        do consume(v) |_i, p| {\n+            let (a,b) = p;\n+            push(ts, a);\n+            push(us, b);\n+        }\n+    }\n+    (ts, us)\n+}\n+\n+/**\n+ * Convert two vectors to a vector of pairs, by reference. As zip().\n+ */\n+pure fn zip_slice<T: copy, U: copy>(v: &[const T], u: &[const U])\n+        -> ~[(T, U)] {\n     let mut zipped = ~[];\n     let sz = len(v);\n     let mut i = 0u;\n@@ -1053,6 +1066,24 @@ pure fn zip<T: copy, U: copy>(v: &[const T], u: &[const U]) -> ~[(T, U)] {\n     return zipped;\n }\n \n+/**\n+ * Convert two vectors to a vector of pairs.\n+ *\n+ * Returns a vector of tuples, where the i-th tuple contains contains the\n+ * i-th elements from each of the input vectors.\n+ */\n+pure fn zip<T, U>(+v: ~[const T], +u: ~[const U]) -> ~[(T, U)] {\n+    let mut v = v, u = u, i = len(v);\n+    assert i == len(u);\n+    let mut w = ~[mut];\n+    while i > 0 {\n+        unchecked { push(w, (pop(v),pop(u))); }\n+        i -= 1;\n+    }\n+    unchecked { reverse(w); }\n+    from_mut(w)\n+}\n+\n /**\n  * Swaps two elements in a vector\n  *"}]}