{"sha": "e737694a4d66b01308b73d4559a35b43e414faf9", "node_id": "C_kwDOAAsO6NoAKGU3Mzc2OTRhNGQ2NmIwMTMwOGI3M2Q0NTU5YTM1YjQzZTQxNGZhZjk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-03T21:44:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-03T21:44:10Z"}, "message": "Auto merge of #88175 - camsteffen:let-desugar-span, r=Manishearth\n\nAdd expansion to while desugar spans\n\nIn the same vein as #88163, this reverts a change in Clippy behavior as a result of #80357 (and reverts some `#[allow]`s): This changes `clippy::blocks_in_if_conditions` to not fire on `while` loops. Though we might actually want Clippy to lint those cases, we should introduce the change purposefully, with tests, and possibly under a different lint name.\n\nThe actual change here is to add a desugaring expansion to the spans when lowering a `while` loop.\n\nr? `@Manishearth`", "tree": {"sha": "f8ff047f173d115e77bcc349a0bb2d3bbaf0e77b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8ff047f173d115e77bcc349a0bb2d3bbaf0e77b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e737694a4d66b01308b73d4559a35b43e414faf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e737694a4d66b01308b73d4559a35b43e414faf9", "html_url": "https://github.com/rust-lang/rust/commit/e737694a4d66b01308b73d4559a35b43e414faf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e737694a4d66b01308b73d4559a35b43e414faf9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dbb26efe8a886f7bba94c2b996c9535ce07f917", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dbb26efe8a886f7bba94c2b996c9535ce07f917", "html_url": "https://github.com/rust-lang/rust/commit/9dbb26efe8a886f7bba94c2b996c9535ce07f917"}, {"sha": "67ea84d97a49434431b45a5b34f867df18f33116", "url": "https://api.github.com/repos/rust-lang/rust/commits/67ea84d97a49434431b45a5b34f867df18f33116", "html_url": "https://github.com/rust-lang/rust/commit/67ea84d97a49434431b45a5b34f867df18f33116"}], "stats": {"total": 52, "additions": 28, "deletions": 24}, "files": [{"sha": "6027027428eeecbbab7d293feaf6656727fa9071", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e737694a4d66b01308b73d4559a35b43e414faf9/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e737694a4d66b01308b73d4559a35b43e414faf9/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=e737694a4d66b01308b73d4559a35b43e414faf9", "patch": "@@ -100,10 +100,13 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 ExprKind::If(ref cond, ref then, ref else_opt) => {\n                     self.lower_expr_if(cond, then, else_opt.as_deref())\n                 }\n-                ExprKind::While(ref cond, ref body, opt_label) => self\n-                    .with_loop_scope(e.id, |this| {\n-                        this.lower_expr_while_in_loop_scope(e.span, cond, body, opt_label)\n-                    }),\n+                ExprKind::While(ref cond, ref body, opt_label) => {\n+                    self.with_loop_scope(e.id, |this| {\n+                        let span =\n+                            this.mark_span_with_reason(DesugaringKind::WhileLoop, e.span, None);\n+                        this.lower_expr_while_in_loop_scope(span, cond, body, opt_label)\n+                    })\n+                }\n                 ExprKind::Loop(ref body, opt_label) => self.with_loop_scope(e.id, |this| {\n                     hir::ExprKind::Loop(\n                         this.lower_block(body, false),"}, {"sha": "37fec0ac38cc5eee0c91f76d2e88f48b8f7233f6", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e737694a4d66b01308b73d4559a35b43e414faf9/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e737694a4d66b01308b73d4559a35b43e414faf9/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=e737694a4d66b01308b73d4559a35b43e414faf9", "patch": "@@ -389,9 +389,9 @@ pub fn struct_lint_level<'s, 'd>(\n pub fn in_external_macro(sess: &Session, span: Span) -> bool {\n     let expn_data = span.ctxt().outer_expn_data();\n     match expn_data.kind {\n-        ExpnKind::Inlined | ExpnKind::Root | ExpnKind::Desugaring(DesugaringKind::ForLoop(_)) => {\n-            false\n-        }\n+        ExpnKind::Inlined\n+        | ExpnKind::Root\n+        | ExpnKind::Desugaring(DesugaringKind::ForLoop(_) | DesugaringKind::WhileLoop) => false,\n         ExpnKind::AstPass(_) | ExpnKind::Desugaring(_) => true, // well, it's \"external\"\n         ExpnKind::Macro(MacroKind::Bang, _) => {\n             // Dummy span for the `def_site` means it's an external macro."}, {"sha": "aa15febe8853d709855a1ffc919dc18c67f4e5c9", "filename": "compiler/rustc_span/src/hygiene.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e737694a4d66b01308b73d4559a35b43e414faf9/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e737694a4d66b01308b73d4559a35b43e414faf9/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs?ref=e737694a4d66b01308b73d4559a35b43e414faf9", "patch": "@@ -1101,6 +1101,7 @@ pub enum DesugaringKind {\n     Await,\n     ForLoop(ForLoopLoc),\n     LetElse,\n+    WhileLoop,\n }\n \n /// A location in the desugaring of a `for` loop\n@@ -1122,6 +1123,7 @@ impl DesugaringKind {\n             DesugaringKind::OpaqueTy => \"`impl Trait`\",\n             DesugaringKind::ForLoop(_) => \"`for` loop\",\n             DesugaringKind::LetElse => \"`let...else`\",\n+            DesugaringKind::WhileLoop => \"`while` loop\",\n         }\n     }\n }"}, {"sha": "e34b8d998b1c9adf01f92263ec7329581c2ebee6", "filename": "compiler/rustc_typeck/src/check/coercion.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e737694a4d66b01308b73d4559a35b43e414faf9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e737694a4d66b01308b73d4559a35b43e414faf9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs?ref=e737694a4d66b01308b73d4559a35b43e414faf9", "patch": "@@ -54,7 +54,7 @@ use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, ToPredicate, Ty, TypeAndMut};\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::sym;\n-use rustc_span::{self, BytePos, Span};\n+use rustc_span::{self, BytePos, DesugaringKind, Span};\n use rustc_target::spec::abi::Abi;\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n use rustc_trait_selection::traits::{self, ObligationCause, ObligationCauseCode};\n@@ -1536,8 +1536,10 @@ impl<'tcx, 'exprs, E: AsCoercionSite> CoerceMany<'tcx, 'exprs, E> {\n                 // If the block is from an external macro or try (`?`) desugaring, then\n                 // do not suggest adding a semicolon, because there's nowhere to put it.\n                 // See issues #81943 and #87051.\n-                if cond_expr.span.desugaring_kind().is_none()\n-                    && !in_external_macro(fcx.tcx.sess, cond_expr.span)\n+                if matches!(\n+                    cond_expr.span.desugaring_kind(),\n+                    None | Some(DesugaringKind::WhileLoop)\n+                ) && !in_external_macro(fcx.tcx.sess, cond_expr.span)\n                     && !matches!(\n                         cond_expr.kind,\n                         hir::ExprKind::Match(.., hir::MatchSource::TryDesugar)"}, {"sha": "bb238c81ebc05376a3a60ffe49442101d5202b00", "filename": "src/tools/clippy/tests/ui/crashes/issues_loop_mut_cond.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e737694a4d66b01308b73d4559a35b43e414faf9/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fissues_loop_mut_cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e737694a4d66b01308b73d4559a35b43e414faf9/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fissues_loop_mut_cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fissues_loop_mut_cond.rs?ref=e737694a4d66b01308b73d4559a35b43e414faf9", "patch": "@@ -1,4 +1,3 @@\n-#![allow(clippy::blocks_in_if_conditions)]\n #![allow(dead_code)]\n \n /// Issue: https://github.com/rust-lang/rust-clippy/issues/2596"}, {"sha": "38e64b9ac0ada0a21fafdb086a9b3afa9c4f2200", "filename": "src/tools/clippy/tests/ui/infinite_loop.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e737694a4d66b01308b73d4559a35b43e414faf9/src%2Ftools%2Fclippy%2Ftests%2Fui%2Finfinite_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e737694a4d66b01308b73d4559a35b43e414faf9/src%2Ftools%2Fclippy%2Ftests%2Fui%2Finfinite_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Finfinite_loop.rs?ref=e737694a4d66b01308b73d4559a35b43e414faf9", "patch": "@@ -1,5 +1,3 @@\n-#![allow(clippy::blocks_in_if_conditions)]\n-\n fn fn_val(i: i32) -> i32 {\n     unimplemented!()\n }"}, {"sha": "4ec7d900ade3dda39dc9dad2a8aadedd6b7ba249", "filename": "src/tools/clippy/tests/ui/infinite_loop.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e737694a4d66b01308b73d4559a35b43e414faf9/src%2Ftools%2Fclippy%2Ftests%2Fui%2Finfinite_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e737694a4d66b01308b73d4559a35b43e414faf9/src%2Ftools%2Fclippy%2Ftests%2Fui%2Finfinite_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Finfinite_loop.stderr?ref=e737694a4d66b01308b73d4559a35b43e414faf9", "patch": "@@ -1,5 +1,5 @@\n error: variables in the condition are not mutated in the loop body\n-  --> $DIR/infinite_loop.rs:22:11\n+  --> $DIR/infinite_loop.rs:20:11\n    |\n LL |     while y < 10 {\n    |           ^^^^^^\n@@ -8,71 +8,71 @@ LL |     while y < 10 {\n    = note: this may lead to an infinite or to a never running loop\n \n error: variables in the condition are not mutated in the loop body\n-  --> $DIR/infinite_loop.rs:27:11\n+  --> $DIR/infinite_loop.rs:25:11\n    |\n LL |     while y < 10 && x < 3 {\n    |           ^^^^^^^^^^^^^^^\n    |\n    = note: this may lead to an infinite or to a never running loop\n \n error: variables in the condition are not mutated in the loop body\n-  --> $DIR/infinite_loop.rs:34:11\n+  --> $DIR/infinite_loop.rs:32:11\n    |\n LL |     while !cond {\n    |           ^^^^^\n    |\n    = note: this may lead to an infinite or to a never running loop\n \n error: variables in the condition are not mutated in the loop body\n-  --> $DIR/infinite_loop.rs:78:11\n+  --> $DIR/infinite_loop.rs:76:11\n    |\n LL |     while i < 3 {\n    |           ^^^^^\n    |\n    = note: this may lead to an infinite or to a never running loop\n \n error: variables in the condition are not mutated in the loop body\n-  --> $DIR/infinite_loop.rs:83:11\n+  --> $DIR/infinite_loop.rs:81:11\n    |\n LL |     while i < 3 && j > 0 {\n    |           ^^^^^^^^^^^^^^\n    |\n    = note: this may lead to an infinite or to a never running loop\n \n error: variables in the condition are not mutated in the loop body\n-  --> $DIR/infinite_loop.rs:87:11\n+  --> $DIR/infinite_loop.rs:85:11\n    |\n LL |     while i < 3 {\n    |           ^^^^^\n    |\n    = note: this may lead to an infinite or to a never running loop\n \n error: variables in the condition are not mutated in the loop body\n-  --> $DIR/infinite_loop.rs:102:11\n+  --> $DIR/infinite_loop.rs:100:11\n    |\n LL |     while i < 3 {\n    |           ^^^^^\n    |\n    = note: this may lead to an infinite or to a never running loop\n \n error: variables in the condition are not mutated in the loop body\n-  --> $DIR/infinite_loop.rs:107:11\n+  --> $DIR/infinite_loop.rs:105:11\n    |\n LL |     while i < 3 {\n    |           ^^^^^\n    |\n    = note: this may lead to an infinite or to a never running loop\n \n error: variables in the condition are not mutated in the loop body\n-  --> $DIR/infinite_loop.rs:173:15\n+  --> $DIR/infinite_loop.rs:171:15\n    |\n LL |         while self.count < n {\n    |               ^^^^^^^^^^^^^^\n    |\n    = note: this may lead to an infinite or to a never running loop\n \n error: variables in the condition are not mutated in the loop body\n-  --> $DIR/infinite_loop.rs:181:11\n+  --> $DIR/infinite_loop.rs:179:11\n    |\n LL |     while y < 10 {\n    |           ^^^^^^\n@@ -82,7 +82,7 @@ LL |     while y < 10 {\n    = help: rewrite it as `if cond { loop { } }`\n \n error: variables in the condition are not mutated in the loop body\n-  --> $DIR/infinite_loop.rs:188:11\n+  --> $DIR/infinite_loop.rs:186:11\n    |\n LL |     while y < 10 {\n    |           ^^^^^^"}]}