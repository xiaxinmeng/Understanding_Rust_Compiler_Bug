{"sha": "cf37af162721f897e6b3565ab368906621955d90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMzdhZjE2MjcyMWY4OTdlNmIzNTY1YWIzNjg5MDY2MjE5NTVkOTA=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2016-04-09T03:36:54Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2016-04-14T11:12:45Z"}, "message": "Specialize `Extend` to `append` for `{LinkedList, Vec}`", "tree": {"sha": "1f368491a8f61a58961c8c12c8fa84158f13856b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f368491a8f61a58961c8c12c8fa84158f13856b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf37af162721f897e6b3565ab368906621955d90", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXD3svAAoJENpc3BX5vtsr9xIP/2RsG/WJq8MKlfqoSVaSLer+\n8lWW/UkKisHR3lRyByIB8Xgv+dBBbbokQr0RZKSM/OeZ3fllUUcKUn3i6oSANgxx\nhZRs3KP5d8EltvacR6px5oa8G9Mt4e2vKxY7VfPQHOeUvvnXgGW4dwfe9BHXaiFF\nw6MG5OrEcuIbob7f2UY29DlfMkC/3Gnt39M/aEyAQde39iEBgkNcqV/RZaEycYCd\nuv4H+/cADjf/GXdcVyQDlNAtniAgkhBiBHxcupPPtEWDKtcqCAN4U1gzQ5zhVsXQ\ns9gcYalC3JypuFnCN8XX4s/iTi+MW02fzt6O4ccggnasLJpzXfcU5h47hX69Uovf\nLxOuIyg+Bh4mIB3Xww052yy9dA2i3rtWaTN+1BxM85OPYPFjUHkrpBcguyXiZttP\nHZcLdlr5RK2RzmWKlx5DXiVOiF54TXXcukVbrcYtZ7c9o1xn3WwPJ8VXQzQCGDP3\n6CM3Z/CL7CuU9ez0BJZ9haMVR7Vmf+xYJwS907kT1IhGUYDMsCvzsq4lzqtNkTsN\n31/YGscZ2SCXDZMl4ZZaOCLb93kYsXa7AMTt3uVm2wzCrj1uk8UJEYAQoXKpgMZW\nmPd583zScWUZ0O7GVOt/lM092MU9RUpqM2qMpmvbWTDpV3dVyLjjTuf7HgRc1twg\n2Z7LUsxUUqX4e579oVwp\n=Apuw\n-----END PGP SIGNATURE-----", "payload": "tree 1f368491a8f61a58961c8c12c8fa84158f13856b\nparent 7e996943784dcbabed433b6906510298ad80903b\nauthor Andrew Paseltiner <apaseltiner@gmail.com> 1460173014 -0400\ncommitter Andrew Paseltiner <apaseltiner@gmail.com> 1460632365 -0400\n\nSpecialize `Extend` to `append` for `{LinkedList, Vec}`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf37af162721f897e6b3565ab368906621955d90", "html_url": "https://github.com/rust-lang/rust/commit/cf37af162721f897e6b3565ab368906621955d90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf37af162721f897e6b3565ab368906621955d90/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e996943784dcbabed433b6906510298ad80903b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e996943784dcbabed433b6906510298ad80903b", "html_url": "https://github.com/rust-lang/rust/commit/7e996943784dcbabed433b6906510298ad80903b"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "05e87b2bb5e5219cb6e56844f75861dba519a821", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cf37af162721f897e6b3565ab368906621955d90/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf37af162721f897e6b3565ab368906621955d90/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=cf37af162721f897e6b3565ab368906621955d90", "patch": "@@ -133,3 +133,10 @@ pub enum Bound<T> {\n     /// An infinite endpoint. Indicates that there is no bound in this direction.\n     Unbounded,\n }\n+\n+/// An intermediate trait for specialization of `Extend`.\n+#[doc(hidden)]\n+trait SpecExtend<I: IntoIterator> {\n+    /// Extends `self` with the contents of the given iterator.\n+    fn spec_extend(&mut self, iter: I);\n+}"}, {"sha": "c974be54bd07d422a1e44507020ddb188683aa63", "filename": "src/libcollections/linked_list.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cf37af162721f897e6b3565ab368906621955d90/src%2Flibcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf37af162721f897e6b3565ab368906621955d90/src%2Flibcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flinked_list.rs?ref=cf37af162721f897e6b3565ab368906621955d90", "patch": "@@ -30,6 +30,8 @@ use core::mem;\n use core::ops::{BoxPlace, InPlace, Place, Placer};\n use core::ptr::{self, Shared};\n \n+use super::SpecExtend;\n+\n /// A doubly-linked list.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct LinkedList<T> {\n@@ -969,12 +971,24 @@ impl<'a, T> IntoIterator for &'a mut LinkedList<T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<A> Extend<A> for LinkedList<A> {\n     fn extend<T: IntoIterator<Item = A>>(&mut self, iter: T) {\n+        <Self as SpecExtend<T>>::spec_extend(self, iter);\n+    }\n+}\n+\n+impl<I: IntoIterator> SpecExtend<I> for LinkedList<I::Item> {\n+    default fn spec_extend(&mut self, iter: I) {\n         for elt in iter {\n             self.push_back(elt);\n         }\n     }\n }\n \n+impl<T> SpecExtend<LinkedList<T>> for LinkedList<T> {\n+    fn spec_extend(&mut self, ref mut other: LinkedList<T>) {\n+        self.append(other);\n+    }\n+}\n+\n #[stable(feature = \"extend_ref\", since = \"1.2.0\")]\n impl<'a, T: 'a + Copy> Extend<&'a T> for LinkedList<T> {\n     fn extend<I: IntoIterator<Item = &'a T>>(&mut self, iter: I) {"}, {"sha": "58d4a4ed4eb084c04e0f47279d2b96c891280a47", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cf37af162721f897e6b3565ab368906621955d90/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf37af162721f897e6b3565ab368906621955d90/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=cf37af162721f897e6b3565ab368906621955d90", "patch": "@@ -75,6 +75,7 @@ use core::ops;\n use core::ptr;\n use core::slice;\n \n+use super::SpecExtend;\n use super::range::RangeArgument;\n \n /// A contiguous growable array type, written `Vec<T>` but pronounced 'vector.'\n@@ -1390,10 +1391,22 @@ impl<'a, T> IntoIterator for &'a mut Vec<T> {\n impl<T> Extend<T> for Vec<T> {\n     #[inline]\n     fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {\n+        <Self as SpecExtend<I>>::spec_extend(self, iter);\n+    }\n+}\n+\n+impl<I: IntoIterator> SpecExtend<I> for Vec<I::Item> {\n+    default fn spec_extend(&mut self, iter: I) {\n         self.extend_desugared(iter.into_iter())\n     }\n }\n \n+impl<T> SpecExtend<Vec<T>> for Vec<T> {\n+    fn spec_extend(&mut self, ref mut other: Vec<T>) {\n+        self.append(other);\n+    }\n+}\n+\n impl<T> Vec<T> {\n     fn extend_desugared<I: Iterator<Item = T>>(&mut self, mut iterator: I) {\n         // This function should be the moral equivalent of:"}, {"sha": "3ad4790d36a675722819266bb8a822644dbb24e5", "filename": "src/libcollectionstest/linked_list.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cf37af162721f897e6b3565ab368906621955d90/src%2Flibcollectionstest%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf37af162721f897e6b3565ab368906621955d90/src%2Flibcollectionstest%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Flinked_list.rs?ref=cf37af162721f897e6b3565ab368906621955d90", "patch": "@@ -339,6 +339,22 @@ fn test_extend_ref() {\n     assert_eq!(a, list_from(&[1, 2, 3, 4, 5, 6]));\n }\n \n+#[test]\n+fn test_extend() {\n+    let mut a = LinkedList::new();\n+    a.push_back(1);\n+    a.extend(vec![2, 3, 4]); // uses iterator\n+\n+    assert_eq!(a.len(), 4);\n+    assert!(a.iter().eq(&[1, 2, 3, 4]));\n+\n+    let b: LinkedList<_> = vec![5, 6, 7].into_iter().collect();\n+    a.extend(b); // specializes to `append`\n+\n+    assert_eq!(a.len(), 7);\n+    assert!(a.iter().eq(&[1, 2, 3, 4, 5, 6, 7]));\n+}\n+\n #[bench]\n fn bench_collect_into(b: &mut test::Bencher) {\n     let v = &[0; 64];"}, {"sha": "0fb00543ddd9731e43d5ff7590b1902c217cf20a", "filename": "src/libcollectionstest/vec.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cf37af162721f897e6b3565ab368906621955d90/src%2Flibcollectionstest%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf37af162721f897e6b3565ab368906621955d90/src%2Flibcollectionstest%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fvec.rs?ref=cf37af162721f897e6b3565ab368906621955d90", "patch": "@@ -93,6 +93,9 @@ fn test_extend() {\n     for i in 3..10 { w.push(i) }\n \n     assert_eq!(v, w);\n+\n+    v.extend(w.clone()); // specializes to `append`\n+    assert!(v.iter().eq(w.iter().chain(w.iter())));\n }\n \n #[test]"}]}