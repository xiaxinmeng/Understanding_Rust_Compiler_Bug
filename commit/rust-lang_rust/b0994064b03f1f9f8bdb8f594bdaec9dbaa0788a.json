{"sha": "b0994064b03f1f9f8bdb8f594bdaec9dbaa0788a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwOTk0MDY0YjAzZjFmOWY4YmRiOGY1OTRiZGFlYzlkYmFhMDc4OGE=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2020-10-29T21:21:01Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2020-11-08T20:34:06Z"}, "message": "Make KNOW_TYPES static", "tree": {"sha": "fcea816db4a0bbc684268100529ca167269c750b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcea816db4a0bbc684268100529ca167269c750b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0994064b03f1f9f8bdb8f594bdaec9dbaa0788a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0994064b03f1f9f8bdb8f594bdaec9dbaa0788a", "html_url": "https://github.com/rust-lang/rust/commit/b0994064b03f1f9f8bdb8f594bdaec9dbaa0788a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0994064b03f1f9f8bdb8f594bdaec9dbaa0788a/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "040d0ca4dad523a029ec1186cd3b07bb2176a2a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/040d0ca4dad523a029ec1186cd3b07bb2176a2a1", "html_url": "https://github.com/rust-lang/rust/commit/040d0ca4dad523a029ec1186cd3b07bb2176a2a1"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "5309253531bc5684a14d9b52f04e16aeae47a703", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b0994064b03f1f9f8bdb8f594bdaec9dbaa0788a/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0994064b03f1f9f8bdb8f594bdaec9dbaa0788a/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=b0994064b03f1f9f8bdb8f594bdaec9dbaa0788a", "patch": "@@ -1803,6 +1803,14 @@ fn lint_or_fun_call<'tcx>(\n         or_has_args: bool,\n         span: Span,\n     ) {\n+        // (path, fn_has_argument, methods, suffix)\n+        static KNOW_TYPES: [(&[&str], bool, &[&str], &str); 4] = [\n+            (&paths::BTREEMAP_ENTRY, false, &[\"or_insert\"], \"with\"),\n+            (&paths::HASHMAP_ENTRY, false, &[\"or_insert\"], \"with\"),\n+            (&paths::OPTION, false, &[\"map_or\", \"ok_or\", \"or\", \"unwrap_or\"], \"else\"),\n+            (&paths::RESULT, true, &[\"or\", \"unwrap_or\"], \"else\"),\n+        ];\n+\n         if let hir::ExprKind::MethodCall(ref path, _, ref args, _) = &arg.kind {\n             if path.ident.as_str() == \"len\" {\n                 let ty = cx.typeck_results().expr_ty(&args[0]).peel_refs();\n@@ -1818,24 +1826,16 @@ fn lint_or_fun_call<'tcx>(\n             }\n         }\n \n-        // (path, fn_has_argument, methods, suffix)\n-        let know_types: &[(&[_], _, &[_], _)] = &[\n-            (&paths::BTREEMAP_ENTRY, false, &[\"or_insert\"], \"with\"),\n-            (&paths::HASHMAP_ENTRY, false, &[\"or_insert\"], \"with\"),\n-            (&paths::OPTION, false, &[\"map_or\", \"ok_or\", \"or\", \"unwrap_or\"], \"else\"),\n-            (&paths::RESULT, true, &[\"or\", \"unwrap_or\"], \"else\"),\n-        ];\n-\n         if_chain! {\n-            if know_types.iter().any(|k| k.2.contains(&name));\n+            if KNOW_TYPES.iter().any(|k| k.2.contains(&name));\n \n             if is_lazyness_candidate(cx, arg);\n             if !contains_return(&arg);\n \n             let self_ty = cx.typeck_results().expr_ty(self_expr);\n \n             if let Some(&(_, fn_has_arguments, poss, suffix)) =\n-                know_types.iter().find(|&&i| match_type(cx, self_ty, i.0));\n+                KNOW_TYPES.iter().find(|&&i| match_type(cx, self_ty, i.0));\n \n             if poss.contains(&name);\n "}]}