{"sha": "c220b340958c447b72330148e44f24c9204f84c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMjBiMzQwOTU4YzQ0N2I3MjMzMDE0OGU0NGYyNGM5MjA0Zjg0YzI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-23T16:44:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-23T16:44:28Z"}, "message": "Merge #8174\n\n8174: Simplify code r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "e9ab2300f32cb8a03dd6558e57c36dbb4fd31cb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9ab2300f32cb8a03dd6558e57c36dbb4fd31cb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c220b340958c447b72330148e44f24c9204f84c2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgWhrsCRBK7hj4Ov3rIwAAdHIIAGydYb9yT7BTkvyMxE/kkFwm\nY0Thnj6AtEzoJdVxmVDeybEU4unThQTMrP3ZFtMvchhPTcwGx6EJ0hQ7qXqS4xp4\nOCwduNFR3rPmHZNFggTKJ3JU0X15cJevJJFMxXR1mHnLawsztcIKQqR2a2VtU46d\na81PFlZS4/pppHx2N+mcwKw/iJ0pj3KkDKw/Xl7epZlq7hDigHNQTv61Blw0Mbuy\nenvNcsw0u+gMA7lxgq1ewqTpS5LMGcy5xwUXZptbSn5i+wt5B3g91muyVLAZiLFl\nvwQPFeSPuN5l6U+ly3nkaEhvcS/YjSwLevciK/p7yxXMX8YvycbtRDdUOj1clfA=\n=eW/+\n-----END PGP SIGNATURE-----\n", "payload": "tree e9ab2300f32cb8a03dd6558e57c36dbb4fd31cb3\nparent c88129d5634e4ca9b856c07d48a8161c3c8ec3f5\nparent e33959a8889104f6bda06755df9ade933aadcf4f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1616517868 +0000\ncommitter GitHub <noreply@github.com> 1616517868 +0000\n\nMerge #8174\n\n8174: Simplify code r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c220b340958c447b72330148e44f24c9204f84c2", "html_url": "https://github.com/rust-lang/rust/commit/c220b340958c447b72330148e44f24c9204f84c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c220b340958c447b72330148e44f24c9204f84c2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c88129d5634e4ca9b856c07d48a8161c3c8ec3f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c88129d5634e4ca9b856c07d48a8161c3c8ec3f5", "html_url": "https://github.com/rust-lang/rust/commit/c88129d5634e4ca9b856c07d48a8161c3c8ec3f5"}, {"sha": "e33959a8889104f6bda06755df9ade933aadcf4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e33959a8889104f6bda06755df9ade933aadcf4f", "html_url": "https://github.com/rust-lang/rust/commit/e33959a8889104f6bda06755df9ade933aadcf4f"}], "stats": {"total": 57, "additions": 18, "deletions": 39}, "files": [{"sha": "0148635f9eba29eb69a509966976a7132df8362d", "filename": "crates/ide_assists/src/handlers/add_missing_impl_members.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c220b340958c447b72330148e44f24c9204f84c2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c220b340958c447b72330148e44f24c9204f84c2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs?ref=c220b340958c447b72330148e44f24c9204f84c2", "patch": "@@ -3,9 +3,9 @@ use syntax::ast::{self, AstNode};\n \n use crate::{\n     assist_context::{AssistContext, Assists},\n-    utils::add_trait_assoc_items_to_impl,\n-    utils::DefaultMethods,\n-    utils::{filter_assoc_items, render_snippet, Cursor},\n+    utils::{\n+        add_trait_assoc_items_to_impl, filter_assoc_items, render_snippet, Cursor, DefaultMethods,\n+    },\n     AssistId, AssistKind,\n };\n "}, {"sha": "d202a85f958883845b0ee53f593fcf006dfaab77", "filename": "crates/ide_assists/src/handlers/convert_comment_block.rs", "status": "modified", "additions": 12, "deletions": 34, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/c220b340958c447b72330148e44f24c9204f84c2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_comment_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c220b340958c447b72330148e44f24c9204f84c2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_comment_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_comment_block.rs?ref=c220b340958c447b72330148e44f24c9204f84c2", "patch": "@@ -1,13 +1,6 @@\n use itertools::Itertools;\n use syntax::{\n-    ast::{\n-        self,\n-        edit::IndentLevel,\n-        Comment, CommentKind,\n-        CommentPlacement::{Inner, Outer},\n-        CommentShape::{self, Block, Line},\n-        Whitespace,\n-    },\n+    ast::{self, edit::IndentLevel, Comment, CommentKind, CommentShape, Whitespace},\n     AstToken, Direction, SyntaxElement, TextRange,\n };\n \n@@ -29,21 +22,18 @@ use crate::{AssistContext, AssistId, AssistKind, Assists};\n ///   */\n /// ```\n pub(crate) fn convert_comment_block(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n-    if let Some(comment) = ctx.find_token_at_offset::<ast::Comment>() {\n-        // Only allow comments which are alone on their line\n-        if let Some(prev) = comment.syntax().prev_token() {\n-            if Whitespace::cast(prev).filter(|w| w.text().contains('\\n')).is_none() {\n-                return None;\n-            }\n+    let comment = ctx.find_token_at_offset::<ast::Comment>()?;\n+    // Only allow comments which are alone on their line\n+    if let Some(prev) = comment.syntax().prev_token() {\n+        if Whitespace::cast(prev).filter(|w| w.text().contains('\\n')).is_none() {\n+            return None;\n         }\n-\n-        return match comment.kind().shape {\n-            ast::CommentShape::Block => block_to_line(acc, comment),\n-            ast::CommentShape::Line => line_to_block(acc, comment),\n-        };\n     }\n \n-    return None;\n+    match comment.kind().shape {\n+        ast::CommentShape::Block => block_to_line(acc, comment),\n+        ast::CommentShape::Line => line_to_block(acc, comment),\n+    }\n }\n \n fn block_to_line(acc: &mut Assists, comment: ast::Comment) -> Option<()> {\n@@ -55,8 +45,7 @@ fn block_to_line(acc: &mut Assists, comment: ast::Comment) -> Option<()> {\n         target,\n         |edit| {\n             let indentation = IndentLevel::from_token(comment.syntax());\n-            let line_prefix =\n-                comment_kind_prefix(CommentKind { shape: CommentShape::Line, ..comment.kind() });\n+            let line_prefix = CommentKind { shape: CommentShape::Line, ..comment.kind() }.prefix();\n \n             let text = comment.text();\n             let text = &text[comment.prefix().len()..(text.len() - \"*/\".len())].trim();\n@@ -105,7 +94,7 @@ fn line_to_block(acc: &mut Assists, comment: ast::Comment) -> Option<()> {\n                 comments.into_iter().map(|c| line_comment_text(indentation, c)).join(\"\\n\");\n \n             let block_prefix =\n-                comment_kind_prefix(CommentKind { shape: CommentShape::Block, ..comment.kind() });\n+                CommentKind { shape: CommentShape::Block, ..comment.kind() }.prefix();\n \n             let output =\n                 format!(\"{}\\n{}\\n{}*/\", block_prefix, block_comment_body, indentation.to_string());\n@@ -182,17 +171,6 @@ fn line_comment_text(indentation: IndentLevel, comm: ast::Comment) -> String {\n     }\n }\n \n-fn comment_kind_prefix(ck: ast::CommentKind) -> &'static str {\n-    match (ck.shape, ck.doc) {\n-        (Line, Some(Inner)) => \"//!\",\n-        (Line, Some(Outer)) => \"///\",\n-        (Line, None) => \"//\",\n-        (Block, Some(Inner)) => \"/*!\",\n-        (Block, Some(Outer)) => \"/**\",\n-        (Block, None) => \"/*\",\n-    }\n-}\n-\n #[cfg(test)]\n mod tests {\n     use crate::tests::{check_assist, check_assist_not_applicable};"}, {"sha": "29d25a58a310fa5409215f176001ab0eaf912d25", "filename": "crates/syntax/src/ast/token_ext.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c220b340958c447b72330148e44f24c9204f84c2/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c220b340958c447b72330148e44f24c9204f84c2/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs?ref=c220b340958c447b72330148e44f24c9204f84c2", "patch": "@@ -102,8 +102,9 @@ impl CommentKind {\n         kind\n     }\n \n-    fn prefix(&self) -> &'static str {\n-        let &(prefix, _) = CommentKind::BY_PREFIX.iter().find(|(_, kind)| kind == self).unwrap();\n+    pub fn prefix(&self) -> &'static str {\n+        let &(prefix, _) =\n+            CommentKind::BY_PREFIX.iter().rev().find(|(_, kind)| kind == self).unwrap();\n         prefix\n     }\n }"}]}