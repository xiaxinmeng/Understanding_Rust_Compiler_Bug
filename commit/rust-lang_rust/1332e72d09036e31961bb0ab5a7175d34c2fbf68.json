{"sha": "1332e72d09036e31961bb0ab5a7175d34c2fbf68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMzJlNzJkMDkwMzZlMzE5NjFiYjBhYjVhNzE3NWQzNGMyZmJmNjg=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-07T19:12:42Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-08T12:08:55Z"}, "message": "Fix TyBuilder methods", "tree": {"sha": "5066c834fca63df85a772f590967bd968d84713f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5066c834fca63df85a772f590967bd968d84713f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1332e72d09036e31961bb0ab5a7175d34c2fbf68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1332e72d09036e31961bb0ab5a7175d34c2fbf68", "html_url": "https://github.com/rust-lang/rust/commit/1332e72d09036e31961bb0ab5a7175d34c2fbf68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1332e72d09036e31961bb0ab5a7175d34c2fbf68/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b24e6f60300300125ff353073a36d1ef7a64e37f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b24e6f60300300125ff353073a36d1ef7a64e37f", "html_url": "https://github.com/rust-lang/rust/commit/b24e6f60300300125ff353073a36d1ef7a64e37f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9a698898bc4b035efd95781c1f0ba2120ca863cc", "filename": "crates/hir_ty/src/builder.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1332e72d09036e31961bb0ab5a7175d34c2fbf68/crates%2Fhir_ty%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1332e72d09036e31961bb0ab5a7175d34c2fbf68/crates%2Fhir_ty%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fbuilder.rs?ref=1332e72d09036e31961bb0ab5a7175d34c2fbf68", "patch": "@@ -4,6 +4,7 @@ use std::iter;\n \n use chalk_ir::{\n     cast::{Cast, CastTo, Caster},\n+    fold::Fold,\n     interner::HasInterner,\n     AdtId, BoundVar, DebruijnIndex, Safety, Scalar,\n };\n@@ -32,8 +33,7 @@ impl<D> TyBuilder<D> {\n \n     fn build_internal(self) -> (D, Substitution) {\n         assert_eq!(self.vec.len(), self.param_count);\n-        // FIXME: would be good to have a way to construct a chalk_ir::Substitution from the interned form\n-        let subst = Substitution::intern(self.vec);\n+        let subst = Substitution::from_iter(&Interner, self.vec);\n         (self.data, subst)\n     }\n \n@@ -141,7 +141,7 @@ impl TyBuilder<hir_def::AdtId> {\n                 self.vec.push(fallback().cast(&Interner));\n             } else {\n                 // each default can depend on the previous parameters\n-                let subst_so_far = Substitution::intern(self.vec.clone());\n+                let subst_so_far = Substitution::from_iter(&Interner, self.vec.clone());\n                 self.vec\n                     .push(default_ty.clone().substitute(&Interner, &subst_so_far).cast(&Interner));\n             }\n@@ -196,13 +196,13 @@ impl TyBuilder<TypeAliasId> {\n     }\n }\n \n-impl<T: TypeWalk + HasInterner<Interner = Interner>> TyBuilder<Binders<T>> {\n+impl<T: HasInterner<Interner = Interner> + Fold<Interner>> TyBuilder<Binders<T>> {\n     fn subst_binders(b: Binders<T>) -> Self {\n         let param_count = b.binders.len(&Interner);\n         TyBuilder::new(b, param_count)\n     }\n \n-    pub fn build(self) -> T {\n+    pub fn build(self) -> <T as Fold<Interner>>::Result {\n         let (b, subst) = self.build_internal();\n         b.substitute(&Interner, &subst)\n     }"}]}