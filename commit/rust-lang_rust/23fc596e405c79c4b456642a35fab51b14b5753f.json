{"sha": "23fc596e405c79c4b456642a35fab51b14b5753f", "node_id": "C_kwDOAAsO6NoAKDIzZmM1OTZlNDA1Yzc5YzRiNDU2NjQyYTM1ZmFiNTFiMTRiNTc1M2Y", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-02-15T13:15:22Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-02-15T13:15:22Z"}, "message": "Don't reconstruct ref match completion in to_proto manually", "tree": {"sha": "de4702125f13551d0c7ec0c6e6a0fb924d795475", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de4702125f13551d0c7ec0c6e6a0fb924d795475"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23fc596e405c79c4b456642a35fab51b14b5753f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23fc596e405c79c4b456642a35fab51b14b5753f", "html_url": "https://github.com/rust-lang/rust/commit/23fc596e405c79c4b456642a35fab51b14b5753f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23fc596e405c79c4b456642a35fab51b14b5753f/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "026a8c976dfc35174f9fa17af9e2784e73598ddb", "url": "https://api.github.com/repos/rust-lang/rust/commits/026a8c976dfc35174f9fa17af9e2784e73598ddb", "html_url": "https://github.com/rust-lang/rust/commit/026a8c976dfc35174f9fa17af9e2784e73598ddb"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "e607763560450ae0d417fd8583549acfcdf524b5", "filename": "crates/ide-completion/src/item.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/23fc596e405c79c4b456642a35fab51b14b5753f/crates%2Fide-completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23fc596e405c79c4b456642a35fab51b14b5753f/crates%2Fide-completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fitem.rs?ref=23fc596e405c79c4b456642a35fab51b14b5753f", "patch": "@@ -14,9 +14,9 @@ use crate::{\n     render::{render_path_resolution, RenderContext},\n };\n \n-/// `CompletionItem` describes a single completion variant in the editor pop-up.\n-/// It is basically a POD with various properties. To construct a\n-/// `CompletionItem`, use `new` method and the `Builder` struct.\n+/// `CompletionItem` describes a single completion entity which expands to 1 or more entries in the\n+/// editor pop-up. It is basically a POD with various properties. To construct a\n+/// [`CompletionItem`], use [`Builder::new`] method and the [`Builder`] struct.\n #[derive(Clone)]\n pub struct CompletionItem {\n     /// Label in the completion pop up which identifies completion.\n@@ -396,14 +396,20 @@ impl CompletionItem {\n         self.trigger_call_info\n     }\n \n-    pub fn ref_match(&self) -> Option<(Mutability, TextSize, CompletionRelevance)> {\n+    pub fn ref_match(&self) -> Option<(String, text_edit::Indel, CompletionRelevance)> {\n         // Relevance of the ref match should be the same as the original\n         // match, but with exact type match set because self.ref_match\n         // is only set if there is an exact type match.\n         let mut relevance = self.relevance;\n         relevance.type_match = Some(CompletionRelevanceTypeMatch::Exact);\n \n-        self.ref_match.map(|(mutability, offset)| (mutability, offset, relevance))\n+        self.ref_match.map(|(mutability, offset)| {\n+            (\n+                format!(\"&{}{}\", mutability.as_keyword_for_ref(), self.label()),\n+                text_edit::Indel::insert(offset, format!(\"&{}\", mutability.as_keyword_for_ref())),\n+                relevance,\n+            )\n+        })\n     }\n \n     pub fn imports_to_add(&self) -> &[LocatedImport] {"}, {"sha": "47d3e01aa7fcbbf19675f43361c3a14898e12349", "filename": "crates/ide-completion/src/render.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/23fc596e405c79c4b456642a35fab51b14b5753f/crates%2Fide-completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23fc596e405c79c4b456642a35fab51b14b5753f/crates%2Fide-completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender.rs?ref=23fc596e405c79c4b456642a35fab51b14b5753f", "patch": "@@ -529,8 +529,7 @@ mod tests {\n                 let relevance = display_relevance(it.relevance());\n                 items.push(format!(\"{tag} {} {relevance}\\n\", it.label()));\n \n-                if let Some((mutability, _offset, relevance)) = it.ref_match() {\n-                    let label = format!(\"&{}{}\", mutability.as_keyword_for_ref(), it.label());\n+                if let Some((label, _indel, relevance)) = it.ref_match() {\n                     let relevance = display_relevance(relevance);\n \n                     items.push(format!(\"{tag} {label} {relevance}\\n\"));"}, {"sha": "bee85cdd13e081805c4e7c3012f5259651b5eac5", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/23fc596e405c79c4b456642a35fab51b14b5753f/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23fc596e405c79c4b456642a35fab51b14b5753f/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=23fc596e405c79c4b456642a35fab51b14b5753f", "patch": "@@ -242,15 +242,16 @@ fn completion_item(\n     let text_edit = {\n         let mut text_edit = None;\n         let source_range = item.source_range();\n-        for indel in item.text_edit().iter() {\n+        for indel in item.text_edit() {\n             if indel.delete.contains_range(source_range) {\n+                // Extract this indel as the main edit\n                 text_edit = Some(if indel.delete == source_range {\n                     self::completion_text_edit(line_index, insert_replace_support, indel.clone())\n                 } else {\n                     assert!(source_range.end() == indel.delete.end());\n                     let range1 = TextRange::new(indel.delete.start(), source_range.start());\n                     let range2 = source_range;\n-                    let indel1 = Indel::replace(range1, String::new());\n+                    let indel1 = Indel::delete(range1);\n                     let indel2 = Indel::replace(range2, indel.insert.clone());\n                     additional_text_edits.push(self::text_edit(line_index, indel1));\n                     self::completion_text_edit(line_index, insert_replace_support, indel2)\n@@ -316,18 +317,13 @@ fn completion_item(\n         }\n     }\n \n-    if let Some((mutability, offset, relevance)) = item.ref_match() {\n-        let mut lsp_item_with_ref = lsp_item.clone();\n+    if let Some((label, indel, relevance)) = item.ref_match() {\n+        let mut lsp_item_with_ref = lsp_types::CompletionItem { label, ..lsp_item.clone() };\n+        lsp_item_with_ref\n+            .additional_text_edits\n+            .get_or_insert_with(Default::default)\n+            .push(self::text_edit(line_index, indel));\n         set_score(&mut lsp_item_with_ref, max_relevance, relevance);\n-        lsp_item_with_ref.label =\n-            format!(\"&{}{}\", mutability.as_keyword_for_ref(), lsp_item_with_ref.label);\n-        lsp_item_with_ref.additional_text_edits.get_or_insert_with(Default::default).push(\n-            self::text_edit(\n-                line_index,\n-                Indel::insert(offset, format!(\"&{}\", mutability.as_keyword_for_ref())),\n-            ),\n-        );\n-\n         acc.push(lsp_item_with_ref);\n     };\n "}]}