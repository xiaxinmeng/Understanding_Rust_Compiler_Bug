{"sha": "8a4e5933df9a9252080f445b29621acc4afb459a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNGU1OTMzZGY5YTkyNTIwODBmNDQ1YjI5NjIxYWNjNGFmYjQ1OWE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-22T18:40:47Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-22T18:40:47Z"}, "message": "add arielb1 example", "tree": {"sha": "0cca47126dd9408870042064a9282ff3d562e5ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cca47126dd9408870042064a9282ff3d562e5ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a4e5933df9a9252080f445b29621acc4afb459a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a4e5933df9a9252080f445b29621acc4afb459a", "html_url": "https://github.com/rust-lang/rust/commit/8a4e5933df9a9252080f445b29621acc4afb459a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a4e5933df9a9252080f445b29621acc4afb459a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19bf544b25c5a68d4fef5b948d6dc03613966f14", "url": "https://api.github.com/repos/rust-lang/rust/commits/19bf544b25c5a68d4fef5b948d6dc03613966f14", "html_url": "https://github.com/rust-lang/rust/commit/19bf544b25c5a68d4fef5b948d6dc03613966f14"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "a99e7b4be5768b81c9a5c06851b3dc20ed28c104", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8a4e5933df9a9252080f445b29621acc4afb459a/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a4e5933df9a9252080f445b29621acc4afb459a/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=8a4e5933df9a9252080f445b29621acc4afb459a", "patch": "@@ -441,6 +441,14 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n     /// We wish to pop the storage for X and Y after `bar()` is\n     /// called, not after the whole `let` is completed.\n     ///\n+    /// As another example, if the second argument diverges:\n+    ///\n+    ///     foo(Box::new(2), panic!())\n+    ///\n+    /// We would allocate the box but then free it on the unwinding\n+    /// path; we would also emit a free on the 'success' path from\n+    /// panic, but that will turn out to be removed as dead-code.\n+    ///\n     /// When building statics/constants, returns `None` since\n     /// intermediate values do not have to be dropped in that case.\n     pub fn local_scope(&self) -> Option<CodeExtent> {"}]}