{"sha": "4d889935443b7d5cd3c33b432c920807b1387340", "node_id": "C_kwDOAAsO6NoAKDRkODg5OTM1NDQzYjdkNWNkM2MzM2I0MzJjOTIwODA3YjEzODczNDA", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-16T14:00:32Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-16T14:00:32Z"}, "message": "bless clippy ui tests", "tree": {"sha": "1293119127d78a0db1580982ff7a97ddf1d57929", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1293119127d78a0db1580982ff7a97ddf1d57929"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d889935443b7d5cd3c33b432c920807b1387340", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d889935443b7d5cd3c33b432c920807b1387340", "html_url": "https://github.com/rust-lang/rust/commit/4d889935443b7d5cd3c33b432c920807b1387340", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d889935443b7d5cd3c33b432c920807b1387340/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd071bf5b2395edced30dfc5197eafb355c49b4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd071bf5b2395edced30dfc5197eafb355c49b4d", "html_url": "https://github.com/rust-lang/rust/commit/bd071bf5b2395edced30dfc5197eafb355c49b4d"}], "stats": {"total": 123, "additions": 102, "deletions": 21}, "files": [{"sha": "0152a93feee4274b4a27a61deadb19da8ffe21a4", "filename": "tests/ui/bind_instead_of_map_multipart.stderr", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fbind_instead_of_map_multipart.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fbind_instead_of_map_multipart.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbind_instead_of_map_multipart.stderr?ref=4d889935443b7d5cd3c33b432c920807b1387340", "patch": "@@ -56,7 +56,25 @@ LL |             if s == \"43\" {\n LL ~                 return 43;\n LL |             }\n LL |             s == \"42\"\n+LL |         } {\n+LL ~             return 45;\n+LL |         }\n+LL |         match s.len() {\n+LL ~             10 => 2,\n+LL |             20 => {\n  ...\n+LL |                         if foo() {\n+LL ~                             return 20;\n+LL |                         }\n+LL |                         println!(\"foo\");\n+LL ~                         3\n+LL |                     };\n+LL |                 }\n+LL ~                 20\n+LL |             },\n+LL ~             40 => 30,\n+LL ~             _ => 1,\n+   |\n \n error: using `Option.and_then(|x| Some(y))`, which is more succinctly expressed as `map(|x| y)`\n   --> $DIR/bind_instead_of_map_multipart.rs:61:13"}, {"sha": "37fe2f76f4a028445297515cef558b380fa4710b", "filename": "tests/ui/branches_sharing_code/shared_at_top_and_bottom.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.stderr?ref=4d889935443b7d5cd3c33b432c920807b1387340", "patch": "@@ -98,7 +98,8 @@ LL +         id: e_id,\n LL +         name: \"Player 1\".to_string(),\n LL +         some_data: vec![0x12, 0x34, 0x56, 0x78, 0x90],\n LL +     };\n- ...\n+LL +     process_data(pack);\n+   |\n \n error: all if blocks contain the same code at the start and the end. Here at the start\n   --> $DIR/shared_at_top_and_bottom.rs:94:5"}, {"sha": "2ef9966525cefbfaca089233e71a9c8f3a6a1ca4", "filename": "tests/ui/entry.stderr", "status": "modified", "additions": 35, "deletions": 6, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fentry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fentry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.stderr?ref=4d889935443b7d5cd3c33b432c920807b1387340", "patch": "@@ -28,7 +28,8 @@ LL +             v\n LL +         } else {\n LL +             v2\n LL +         }\n- ...\n+LL +     });\n+   |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:38:5\n@@ -50,7 +51,8 @@ LL +             v\n LL +         } else {\n LL +             v2\n LL +         }\n- ...\n+LL +     });\n+   |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:47:5\n@@ -72,7 +74,9 @@ LL +             e.insert(v);\n LL +         } else {\n LL +             e.insert(v2);\n LL +             return;\n- ...\n+LL +         }\n+LL +     }\n+   |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:57:5\n@@ -111,7 +115,11 @@ LL +             1 if true => {\n LL +                 v\n LL +             },\n LL +             _ => {\n- ...\n+LL +                 v2\n+LL +             },\n+LL +         }\n+LL +     });\n+   |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:75:5\n@@ -133,7 +141,9 @@ LL +             0 => foo(),\n LL +             _ => {\n LL +                 e.insert(v2);\n LL +             },\n- ...\n+LL +         };\n+LL +     }\n+   |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:85:5\n@@ -155,7 +165,26 @@ LL +         match 0 {\n LL +             0 if false => {\n LL +                 v\n LL +             },\n- ...\n+LL +             1 => {\n+LL +                 foo();\n+LL +                 v\n+LL +             },\n+LL +             2 | 3 => {\n+LL +                 for _ in 0..2 {\n+LL +                     foo();\n+LL +                 }\n+LL +                 if true {\n+LL +                     v\n+LL +                 } else {\n+LL +                     v2\n+LL +                 }\n+LL +             },\n+LL +             _ => {\n+LL +                 v2\n+LL +             },\n+LL +         }\n+LL +     });\n+   |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry.rs:119:5"}, {"sha": "e0f6671b460edc96084bbca3f6c54bbc838c6537", "filename": "tests/ui/entry_with_else.stderr", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fentry_with_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fentry_with_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry_with_else.stderr?ref=4d889935443b7d5cd3c33b432c920807b1387340", "patch": "@@ -17,7 +17,9 @@ LL +             e.insert(v);\n LL +         }\n LL +         std::collections::hash_map::Entry::Occupied(mut e) => {\n LL +             e.insert(v2);\n- ...\n+LL +         }\n+LL +     }\n+   |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry_with_else.rs:22:5\n@@ -37,7 +39,9 @@ LL +             e.insert(v);\n LL +         }\n LL +         std::collections::hash_map::Entry::Vacant(e) => {\n LL +             e.insert(v2);\n- ...\n+LL +         }\n+LL +     }\n+   |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry_with_else.rs:28:5\n@@ -95,7 +99,9 @@ LL +             e.insert(v);\n LL +         }\n LL +         std::collections::hash_map::Entry::Occupied(mut e) => {\n LL +             e.insert(v2);\n- ...\n+LL +         }\n+LL +     }\n+   |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry_with_else.rs:46:5\n@@ -115,7 +121,10 @@ LL +             if true { Some(e.insert(v)) } else { Some(e.insert(v2)) }\n LL +         }\n LL +         std::collections::hash_map::Entry::Vacant(e) => {\n LL +             e.insert(v);\n- ...\n+LL +             None\n+LL +         }\n+LL ~     };\n+   |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n   --> $DIR/entry_with_else.rs:52:5"}, {"sha": "45bf67acdb7361b20bea1636c0c8d3477eb8d3c3", "filename": "tests/ui/let_unit.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Flet_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Flet_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_unit.stderr?ref=4d889935443b7d5cd3c33b432c920807b1387340", "patch": "@@ -32,7 +32,8 @@ LL +         .map(|i| i * 2)\n LL +         .filter(|i| i % 2 == 0)\n LL +         .map(|_| ())\n LL +         .next()\n- ...\n+LL +         .unwrap();\n+   |\n \n error: this let-binding has unit value\n   --> $DIR/let_unit.rs:80:5"}, {"sha": "0a903ed6fd4363c3f247562074ccff0ce46875bc", "filename": "tests/ui/manual_async_fn.stderr", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fmanual_async_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fmanual_async_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_async_fn.stderr?ref=4d889935443b7d5cd3c33b432c920807b1387340", "patch": "@@ -122,7 +122,14 @@ LL +         let a = 42;\n LL +         let b = 21;\n LL +         if a < b {\n LL +             let c = 21;\n- ...\n+LL +             let d = 42;\n+LL +             if c < d {\n+LL +                 let _ = 42;\n+LL +             }\n+LL +         }\n+LL +         42\n+LL +     }\n+   |\n \n error: this function can be simplified using the `async fn` syntax\n   --> $DIR/manual_async_fn.rs:92:1"}, {"sha": "7893ff31a6fdb790c7b358471afd470e6ea13828", "filename": "tests/ui/needless_for_each_unfixable.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fneedless_for_each_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fneedless_for_each_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_for_each_unfixable.stderr?ref=4d889935443b7d5cd3c33b432c920807b1387340", "patch": "@@ -19,7 +19,8 @@ LL +             return;\n LL +         } else {\n LL +             println!(\"{}\", v);\n LL +         }\n- ...\n+LL +     }\n+   |\n help: ...and replace `return` with `continue`\n    |\n LL |             continue;"}, {"sha": "212a69ab94e6506d0aace70d6dee93b26aa205a3", "filename": "tests/ui/new_without_default.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fnew_without_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fnew_without_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.stderr?ref=4d889935443b7d5cd3c33b432c920807b1387340", "patch": "@@ -117,7 +117,8 @@ LL +             Self::new()\n LL +         }\n LL +     }\n LL + \n- ...\n+LL ~     impl<T> Foo<T> {\n+   |\n \n error: aborting due to 7 previous errors\n "}, {"sha": "7ec4a566ff34be186c0da78582bee69f398d4d82", "filename": "tests/ui/ptr_arg.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fptr_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fptr_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.stderr?ref=4d889935443b7d5cd3c33b432c920807b1387340", "patch": "@@ -56,7 +56,8 @@ LL |     let f = e.clone(); // OK\n LL |     let g = x;\n LL ~     let h = g.to_owned();\n LL |     let i = (e).clone();\n- ...\n+LL ~     x.to_owned()\n+   |\n \n error: writing `&String` instead of `&str` involves a new object where a slice will do\n   --> $DIR/ptr_arg.rs:57:18"}, {"sha": "5ce95204416371028446da63f3c90488d6c85524", "filename": "tests/ui/significant_drop_in_scrutinee.stderr", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fsignificant_drop_in_scrutinee.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Fsignificant_drop_in_scrutinee.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsignificant_drop_in_scrutinee.stderr?ref=4d889935443b7d5cd3c33b432c920807b1387340", "patch": "@@ -188,7 +188,9 @@ LL +         _ => mutex2.lock().unwrap(),\n LL +     }\n LL +     .s\n LL +     .len()\n- ...\n+LL +         > 1;\n+LL ~     match value\n+   |\n \n error: temporary with significant drop in match scrutinee\n   --> $DIR/significant_drop_in_scrutinee.rs:397:11\n@@ -211,7 +213,10 @@ LL +     } else {\n LL +         mutex2.lock().unwrap()\n LL +     }\n LL +     .s\n- ...\n+LL +     .len()\n+LL +         > 1;\n+LL ~     match value\n+   |\n \n error: temporary with significant drop in match scrutinee\n   --> $DIR/significant_drop_in_scrutinee.rs:451:11"}, {"sha": "11cfe66a30e850975c859a3822d2f8c34efa7ad3", "filename": "tests/ui/unit_arg.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Funit_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Funit_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.stderr?ref=4d889935443b7d5cd3c33b432c920807b1387340", "patch": "@@ -137,7 +137,13 @@ LL +         foo(1);\n LL +     };\n LL +     {\n LL +         foo(2);\n- ...\n+LL +         foo(3);\n+LL +     };\n+LL +     taking_multiple_units(\n+LL +         (),\n+LL +         (),\n+LL ~     );\n+   |\n \n error: passing a unit value to a function\n   --> $DIR/unit_arg.rs:85:13"}, {"sha": "a6a0b22cf689fffdda4211c7dd0643cca561edbe", "filename": "tests/ui/unnecessary_wraps.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Funnecessary_wraps.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d889935443b7d5cd3c33b432c920807b1387340/tests%2Fui%2Funnecessary_wraps.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_wraps.stderr?ref=4d889935443b7d5cd3c33b432c920807b1387340", "patch": "@@ -23,7 +23,8 @@ LL |     if a {\n LL |         Some(-1);\n LL ~         2\n LL |     } else {\n- ...\n+LL ~         return 1337;\n+   |\n \n error: this function's return value is unnecessarily wrapped by `Option`\n   --> $DIR/unnecessary_wraps.rs:21:1\n@@ -122,7 +123,8 @@ LL |     if a {\n LL |         Some(());\n LL ~         \n LL |     } else {\n- ...\n+LL ~         return ;\n+   |\n \n error: this function's return value is unnecessary\n   --> $DIR/unnecessary_wraps.rs:117:1"}]}