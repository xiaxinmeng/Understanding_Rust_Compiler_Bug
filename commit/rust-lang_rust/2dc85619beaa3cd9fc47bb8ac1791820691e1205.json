{"sha": "2dc85619beaa3cd9fc47bb8ac1791820691e1205", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYzg1NjE5YmVhYTNjZDlmYzQ3YmI4YWMxNzkxODIwNjkxZTEyMDU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T21:54:06Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T21:54:06Z"}, "message": "one more invalidation test", "tree": {"sha": "abbc3144715ea17006d125d2e57f7917d033abe8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abbc3144715ea17006d125d2e57f7917d033abe8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2dc85619beaa3cd9fc47bb8ac1791820691e1205", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2dc85619beaa3cd9fc47bb8ac1791820691e1205", "html_url": "https://github.com/rust-lang/rust/commit/2dc85619beaa3cd9fc47bb8ac1791820691e1205", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2dc85619beaa3cd9fc47bb8ac1791820691e1205/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcb6fabd15d2767c21b6a4f9d00389341ec6731e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcb6fabd15d2767c21b6a4f9d00389341ec6731e", "html_url": "https://github.com/rust-lang/rust/commit/bcb6fabd15d2767c21b6a4f9d00389341ec6731e"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "a19a6fe51de1685dc974b55f22cb43c314c706c1", "filename": "crates/ra_hir/src/nameres/tests.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/2dc85619beaa3cd9fc47bb8ac1791820691e1205/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dc85619beaa3cd9fc47bb8ac1791820691e1205/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs?ref=2dc85619beaa3cd9fc47bb8ac1791820691e1205", "patch": "@@ -368,12 +368,43 @@ fn typing_inside_a_function_should_not_invalidate_item_map() {\n         mod foo;\n \n         use crate::foo::bar::Baz;\n-\n+{\n         fn foo() -> i32 { 92 }\n         \",\n     );\n }\n \n+#[test]\n+fn adding_inner_items_should_not_invalidate_item_map() {\n+    check_item_map_is_not_recomputed(\n+        \"\n+        //- /lib.rs\n+        struct S { a: i32}\n+        mod foo;<|>\n+        enum E { A }\n+        use crate::foo::bar::Baz;\n+        trait T {\n+            fn a() {}\n+        }\n+        //- /foo/mod.rs\n+        pub mod bar;\n+\n+        //- /foo/bar.rs\n+        pub struct Baz;\n+        \",\n+        \"\n+        struct S { a: i32, b: () }\n+        mod foo;<|>\n+        enum E { A, B }\n+        use crate::foo::bar::Baz;\n+        trait T {\n+            fn a() {}\n+            fn b() {}\n+        }\n+        \",\n+    );\n+}\n+\n #[test]\n fn typing_inside_a_function_inside_a_macro_should_not_invalidate_item_map() {\n     check_item_map_is_not_recomputed("}]}