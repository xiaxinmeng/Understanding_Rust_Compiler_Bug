{"sha": "5e3160ca0bfa9e96ab81a0812a79ec41ad535d14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMzE2MGNhMGJmYTllOTZhYjgxYTA4MTJhNzllYzQxYWQ1MzVkMTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-03T14:44:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-03T14:44:44Z"}, "message": "Auto merge of #7156 - hellow554:single_char_strip, r=flip1995\n\n[single_char_pattern] add strip_prefix and strip_suffix\n\nTitle says it all. Adjusted ui tests.\n\nI added the second commit in case you don't like that I moved that table into `single_char_pattern.rs` directly. I don't see any reason why it shouldn't be in that file. It isn't used anywhere else.\n\n*Please write a short comment explaining your change (or \"none\" for internal only changes)*\n\nchangelog: add strip_prefix and strip_suffix to single_char_pattern lint", "tree": {"sha": "755d590662ca9ac45a98258bd20976a5297b6173", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/755d590662ca9ac45a98258bd20976a5297b6173"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14", "html_url": "https://github.com/rust-lang/rust/commit/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f41f38044f0d974eac15d58e6d3c6d59fa7413c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f41f38044f0d974eac15d58e6d3c6d59fa7413c7", "html_url": "https://github.com/rust-lang/rust/commit/f41f38044f0d974eac15d58e6d3c6d59fa7413c7"}, {"sha": "19e7448c7f6a4e3a07507c2742bef07d56f1a4a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/19e7448c7f6a4e3a07507c2742bef07d56f1a4a3", "html_url": "https://github.com/rust-lang/rust/commit/19e7448c7f6a4e3a07507c2742bef07d56f1a4a3"}], "stats": {"total": 83, "additions": 50, "deletions": 33}, "files": [{"sha": "0b1b6304defcb9246352a05df39c46239f23a312", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=5e3160ca0bfa9e96ab81a0812a79ec41ad535d14", "patch": "@@ -2189,27 +2189,6 @@ const TRAIT_METHODS: [ShouldImplTraitCase; 30] = [\n     ShouldImplTraitCase::new(\"std::ops::Sub\", \"sub\",  2,  FN_HEADER,  SelfKind::Value,  OutType::Any, true),\n ];\n \n-#[rustfmt::skip]\n-const PATTERN_METHODS: [(&str, usize); 17] = [\n-    (\"contains\", 1),\n-    (\"starts_with\", 1),\n-    (\"ends_with\", 1),\n-    (\"find\", 1),\n-    (\"rfind\", 1),\n-    (\"split\", 1),\n-    (\"rsplit\", 1),\n-    (\"split_terminator\", 1),\n-    (\"rsplit_terminator\", 1),\n-    (\"splitn\", 2),\n-    (\"rsplitn\", 2),\n-    (\"matches\", 1),\n-    (\"rmatches\", 1),\n-    (\"match_indices\", 1),\n-    (\"rmatch_indices\", 1),\n-    (\"trim_start_matches\", 1),\n-    (\"trim_end_matches\", 1),\n-];\n-\n #[derive(Clone, Copy, PartialEq, Debug)]\n enum SelfKind {\n     Value,"}, {"sha": "d313a3db479de6d51c5797985804403272cf32f0", "filename": "clippy_lints/src/methods/single_char_pattern.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14/clippy_lints%2Fsrc%2Fmethods%2Fsingle_char_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14/clippy_lints%2Fsrc%2Fmethods%2Fsingle_char_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fsingle_char_pattern.rs?ref=5e3160ca0bfa9e96ab81a0812a79ec41ad535d14", "patch": "@@ -9,9 +9,31 @@ use rustc_span::symbol::Symbol;\n \n use super::SINGLE_CHAR_PATTERN;\n \n+const PATTERN_METHODS: [(&str, usize); 19] = [\n+    (\"contains\", 1),\n+    (\"starts_with\", 1),\n+    (\"ends_with\", 1),\n+    (\"find\", 1),\n+    (\"rfind\", 1),\n+    (\"split\", 1),\n+    (\"rsplit\", 1),\n+    (\"split_terminator\", 1),\n+    (\"rsplit_terminator\", 1),\n+    (\"splitn\", 2),\n+    (\"rsplitn\", 2),\n+    (\"matches\", 1),\n+    (\"rmatches\", 1),\n+    (\"match_indices\", 1),\n+    (\"rmatch_indices\", 1),\n+    (\"strip_prefix\", 1),\n+    (\"strip_suffix\", 1),\n+    (\"trim_start_matches\", 1),\n+    (\"trim_end_matches\", 1),\n+];\n+\n /// lint for length-1 `str`s for methods in `PATTERN_METHODS`\n pub(super) fn check(cx: &LateContext<'_>, _expr: &hir::Expr<'_>, method_name: Symbol, args: &[hir::Expr<'_>]) {\n-    for &(method, pos) in &crate::methods::PATTERN_METHODS {\n+    for &(method, pos) in &PATTERN_METHODS {\n         if_chain! {\n             if let ty::Ref(_, ty, _) = cx.typeck_results().expr_ty_adjusted(&args[0]).kind();\n             if *ty.kind() == ty::Str;"}, {"sha": "fcbe9af9f5616c177b860960e5276fd2e735b86e", "filename": "tests/ui/single_char_pattern.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14/tests%2Fui%2Fsingle_char_pattern.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14/tests%2Fui%2Fsingle_char_pattern.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.fixed?ref=5e3160ca0bfa9e96ab81a0812a79ec41ad535d14", "patch": "@@ -33,6 +33,8 @@ fn main() {\n     x.rmatch_indices('x');\n     x.trim_start_matches('x');\n     x.trim_end_matches('x');\n+    x.strip_prefix('x');\n+    x.strip_suffix('x');\n     // Make sure we escape characters correctly.\n     x.split('\\n');\n     x.split('\\'');"}, {"sha": "b8bc20f4070fc4a91f797a8d3d6dc51c85223f6b", "filename": "tests/ui/single_char_pattern.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14/tests%2Fui%2Fsingle_char_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14/tests%2Fui%2Fsingle_char_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.rs?ref=5e3160ca0bfa9e96ab81a0812a79ec41ad535d14", "patch": "@@ -33,6 +33,8 @@ fn main() {\n     x.rmatch_indices(\"x\");\n     x.trim_start_matches(\"x\");\n     x.trim_end_matches(\"x\");\n+    x.strip_prefix(\"x\");\n+    x.strip_suffix(\"x\");\n     // Make sure we escape characters correctly.\n     x.split(\"\\n\");\n     x.split(\"'\");"}, {"sha": "6d94d8a34e39095dfe8c4086e5c8e05929d7e0ac", "filename": "tests/ui/single_char_pattern.stderr", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14/tests%2Fui%2Fsingle_char_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5e3160ca0bfa9e96ab81a0812a79ec41ad535d14/tests%2Fui%2Fsingle_char_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.stderr?ref=5e3160ca0bfa9e96ab81a0812a79ec41ad535d14", "patch": "@@ -121,64 +121,76 @@ LL |     x.trim_end_matches(\"x\");\n    |                        ^^^ help: try using a `char` instead: `'x'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:37:13\n+  --> $DIR/single_char_pattern.rs:36:20\n+   |\n+LL |     x.strip_prefix(\"x\");\n+   |                    ^^^ help: try using a `char` instead: `'x'`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:37:20\n+   |\n+LL |     x.strip_suffix(\"x\");\n+   |                    ^^^ help: try using a `char` instead: `'x'`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:39:13\n    |\n LL |     x.split(\"/n\");\n    |             ^^^^ help: try using a `char` instead: `'/n'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:38:13\n+  --> $DIR/single_char_pattern.rs:40:13\n    |\n LL |     x.split(\"'\");\n    |             ^^^ help: try using a `char` instead: `'/''`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:39:13\n+  --> $DIR/single_char_pattern.rs:41:13\n    |\n LL |     x.split(\"/'\");\n    |             ^^^^ help: try using a `char` instead: `'/''`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:44:31\n+  --> $DIR/single_char_pattern.rs:46:31\n    |\n LL |     x.replace(\";\", \",\").split(\",\"); // issue #2978\n    |                               ^^^ help: try using a `char` instead: `','`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:45:19\n+  --> $DIR/single_char_pattern.rs:47:19\n    |\n LL |     x.starts_with(\"/x03\"); // issue #2996\n    |                   ^^^^^^ help: try using a `char` instead: `'/x03'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:52:13\n+  --> $DIR/single_char_pattern.rs:54:13\n    |\n LL |     x.split(r\"a\");\n    |             ^^^^ help: try using a `char` instead: `'a'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:53:13\n+  --> $DIR/single_char_pattern.rs:55:13\n    |\n LL |     x.split(r#\"a\"#);\n    |             ^^^^^^ help: try using a `char` instead: `'a'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:54:13\n+  --> $DIR/single_char_pattern.rs:56:13\n    |\n LL |     x.split(r###\"a\"###);\n    |             ^^^^^^^^^^ help: try using a `char` instead: `'a'`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:55:13\n+  --> $DIR/single_char_pattern.rs:57:13\n    |\n LL |     x.split(r###\"'\"###);\n    |             ^^^^^^^^^^ help: try using a `char` instead: `'/''`\n \n error: single-character string constant used as pattern\n-  --> $DIR/single_char_pattern.rs:56:13\n+  --> $DIR/single_char_pattern.rs:58:13\n    |\n LL |     x.split(r###\"#\"###);\n    |             ^^^^^^^^^^ help: try using a `char` instead: `'#'`\n \n-error: aborting due to 30 previous errors\n+error: aborting due to 32 previous errors\n "}]}