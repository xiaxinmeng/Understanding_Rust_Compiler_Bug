{"sha": "e321ba989c9f03748d5c19aead84edfcc9e9e69a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMjFiYTk4OWM5ZjAzNzQ4ZDVjMTlhZWFkODRlZGZjYzllOWU2OWE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-27T12:24:19Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-27T12:24:19Z"}, "message": "Misc renames.", "tree": {"sha": "53aae10bf6a86d01a29b23cb808ef07b2f1ed52f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53aae10bf6a86d01a29b23cb808ef07b2f1ed52f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e321ba989c9f03748d5c19aead84edfcc9e9e69a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e321ba989c9f03748d5c19aead84edfcc9e9e69a", "html_url": "https://github.com/rust-lang/rust/commit/e321ba989c9f03748d5c19aead84edfcc9e9e69a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e321ba989c9f03748d5c19aead84edfcc9e9e69a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77a4c85e54401e06ea0cc8539a183ab8d08fa005", "url": "https://api.github.com/repos/rust-lang/rust/commits/77a4c85e54401e06ea0cc8539a183ab8d08fa005", "html_url": "https://github.com/rust-lang/rust/commit/77a4c85e54401e06ea0cc8539a183ab8d08fa005"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "3c1cfa3f79f37b5eadd345e78aea5d0fe3f43fbb", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e321ba989c9f03748d5c19aead84edfcc9e9e69a/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e321ba989c9f03748d5c19aead84edfcc9e9e69a/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=e321ba989c9f03748d5c19aead84edfcc9e9e69a", "patch": "@@ -1170,7 +1170,7 @@ impl<'tcx> TyCtxt<'tcx> {\n         local_providers: ty::query::Providers<'tcx>,\n         extern_providers: ty::query::Providers<'tcx>,\n         arenas: &'tcx AllArenas,\n-        local_arena: &'tcx WorkerLocal<Arena<'tcx>>,\n+        arena: &'tcx WorkerLocal<Arena<'tcx>>,\n         resolutions: ty::ResolverOutputs,\n         hir: hir_map::Map<'tcx>,\n         on_disk_query_result_cache: query::OnDiskCache<'tcx>,\n@@ -1226,7 +1226,7 @@ impl<'tcx> TyCtxt<'tcx> {\n             sess: s,\n             lint_store,\n             cstore,\n-            arena: local_arena,\n+            arena,\n             interners,\n             dep_graph,\n             prof: s.prof.clone(),"}, {"sha": "1df84ce0b73941ef55987580444b24ab535fd12f", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e321ba989c9f03748d5c19aead84edfcc9e9e69a/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e321ba989c9f03748d5c19aead84edfcc9e9e69a/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=e321ba989c9f03748d5c19aead84edfcc9e9e69a", "patch": "@@ -765,7 +765,7 @@ pub fn create_global_ctxt<'tcx>(\n     crate_name: &str,\n     global_ctxt: &'tcx Once<GlobalCtxt<'tcx>>,\n     all_arenas: &'tcx AllArenas,\n-    local_arena: &'tcx WorkerLocal<Arena<'tcx>>,\n+    arena: &'tcx WorkerLocal<Arena<'tcx>>,\n ) -> QueryContext<'tcx> {\n     let sess = &compiler.session();\n     let defs = mem::take(&mut resolver_outputs.definitions);\n@@ -788,8 +788,7 @@ pub fn create_global_ctxt<'tcx>(\n     default_provide_extern(&mut extern_providers);\n     codegen_backend.provide_extern(&mut extern_providers);\n \n-    let override_queries = compiler.override_queries;\n-    if let Some(callback) = override_queries {\n+    if let Some(callback) = compiler.override_queries {\n         callback(sess, &mut local_providers, &mut extern_providers);\n     }\n \n@@ -799,7 +798,7 @@ pub fn create_global_ctxt<'tcx>(\n         local_providers,\n         extern_providers,\n         &all_arenas,\n-        local_arena,\n+        arena,\n         resolver_outputs,\n         hir_map,\n         query_result_on_disk_cache,"}, {"sha": "53ab5eb990ddf4ac72af9ee6a5c1ae3918e24092", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e321ba989c9f03748d5c19aead84edfcc9e9e69a/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e321ba989c9f03748d5c19aead84edfcc9e9e69a/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=e321ba989c9f03748d5c19aead84edfcc9e9e69a", "patch": "@@ -75,7 +75,7 @@ pub struct Queries<'tcx> {\n     forest: Once<hir::map::Forest>,\n \n     all_arenas: AllArenas,\n-    local_arena: WorkerLocal<Arena<'tcx>>,\n+    arena: WorkerLocal<Arena<'tcx>>,\n \n     dep_graph_future: Query<Option<DepGraphFuture>>,\n     parse: Query<ast::Crate>,\n@@ -96,7 +96,7 @@ impl<'tcx> Queries<'tcx> {\n             gcx: Once::new(),\n             forest: Once::new(),\n             all_arenas: AllArenas::new(),\n-            local_arena: WorkerLocal::new(|_| Arena::default()),\n+            arena: WorkerLocal::new(|_| Arena::default()),\n             dep_graph_future: Default::default(),\n             parse: Default::default(),\n             crate_name: Default::default(),\n@@ -269,7 +269,7 @@ impl<'tcx> Queries<'tcx> {\n                 &crate_name,\n                 &self.gcx,\n                 &self.all_arenas,\n-                &self.local_arena,\n+                &self.arena,\n             ))\n         })\n     }"}]}