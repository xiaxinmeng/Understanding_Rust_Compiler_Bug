{"sha": "d3b129f04fcf635078738d7efca52566a00e4354", "node_id": "C_kwDOAAsO6NoAKGQzYjEyOWYwNGZjZjYzNTA3ODczOGQ3ZWZjYTUyNTY2YTAwZTQzNTQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-30T13:38:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-30T13:38:36Z"}, "message": "Auto merge of #14444 - zapkub:runable-debug-env-is-not-passing-properly, r=Veykril\n\nMissing runnable env on debug target\n\nFix bug in Rust Analyzer VSCode where runnable debugging did not pass\nenvironment variable from configuration to child process of Cargo on binary build stage\n\nThere is a missing env passing along to `cargo` in debug target which give an in-consistent result from debug and run target\n\nFor example\n```json\n{\n    \"rust-analyzer.runnableEnv\": {\n        \"OUT_DIR\": \"/test/path2\"\n    }\n}\n```\n\n## run\n![image](https://user-images.githubusercontent.com/4373581/228749503-fa55f62c-13d3-4d3c-bee6-1cfbe042bdd0.png)\n## debug\ncompiling binary is failed. Missing env\n![image](https://user-images.githubusercontent.com/4373581/228749688-3fe42efb-b5ca-41be-862d-f2d97ecab7be.png)\n\n## debug (after fix)\n![image](https://user-images.githubusercontent.com/4373581/228750057-1db60051-3465-47db-8b18-4159ec58cfdb.png)", "tree": {"sha": "9fd9ecad5039d40af46838cfa2b8f9fb0a664edd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fd9ecad5039d40af46838cfa2b8f9fb0a664edd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3b129f04fcf635078738d7efca52566a00e4354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3b129f04fcf635078738d7efca52566a00e4354", "html_url": "https://github.com/rust-lang/rust/commit/d3b129f04fcf635078738d7efca52566a00e4354", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3b129f04fcf635078738d7efca52566a00e4354/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "562477b4da54cfb9756a44328ceb51f0e10fb641", "url": "https://api.github.com/repos/rust-lang/rust/commits/562477b4da54cfb9756a44328ceb51f0e10fb641", "html_url": "https://github.com/rust-lang/rust/commit/562477b4da54cfb9756a44328ceb51f0e10fb641"}, {"sha": "fb9a1dd87ed3c44bb261958fbe2111f19e9185c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb9a1dd87ed3c44bb261958fbe2111f19e9185c9", "html_url": "https://github.com/rust-lang/rust/commit/fb9a1dd87ed3c44bb261958fbe2111f19e9185c9"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "cffee1de6af7b22fba32c481b954a5c132eaa044", "filename": "editors/code/src/debug.ts", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d3b129f04fcf635078738d7efca52566a00e4354/editors%2Fcode%2Fsrc%2Fdebug.ts", "raw_url": "https://github.com/rust-lang/rust/raw/d3b129f04fcf635078738d7efca52566a00e4354/editors%2Fcode%2Fsrc%2Fdebug.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fdebug.ts?ref=d3b129f04fcf635078738d7efca52566a00e4354", "patch": "@@ -118,8 +118,8 @@ async function getDebugConfiguration(\n         return path.normalize(p).replace(wsFolder, \"${workspaceFolder\" + workspaceQualifier + \"}\");\n     }\n \n-    const executable = await getDebugExecutable(runnable);\n     const env = prepareEnv(runnable, ctx.config.runnableEnv);\n+    const executable = await getDebugExecutable(runnable, env);\n     let sourceFileMap = debugOptions.sourceFileMap;\n     if (sourceFileMap === \"auto\") {\n         // let's try to use the default toolchain\n@@ -156,8 +156,11 @@ async function getDebugConfiguration(\n     return debugConfig;\n }\n \n-async function getDebugExecutable(runnable: ra.Runnable): Promise<string> {\n-    const cargo = new Cargo(runnable.args.workspaceRoot || \".\", debugOutput);\n+async function getDebugExecutable(\n+    runnable: ra.Runnable,\n+    env: Record<string, string>\n+): Promise<string> {\n+    const cargo = new Cargo(runnable.args.workspaceRoot || \".\", debugOutput, env);\n     const executable = await cargo.executableFromArgs(runnable.args.cargoArgs);\n \n     // if we are here, there were no compilation errors."}, {"sha": "917a1d6b0997b2df743ba788c8eec2d685453a51", "filename": "editors/code/src/toolchain.ts", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d3b129f04fcf635078738d7efca52566a00e4354/editors%2Fcode%2Fsrc%2Ftoolchain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/d3b129f04fcf635078738d7efca52566a00e4354/editors%2Fcode%2Fsrc%2Ftoolchain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftoolchain.ts?ref=d3b129f04fcf635078738d7efca52566a00e4354", "patch": "@@ -18,7 +18,11 @@ export interface ArtifactSpec {\n }\n \n export class Cargo {\n-    constructor(readonly rootFolder: string, readonly output: vscode.OutputChannel) {}\n+    constructor(\n+        readonly rootFolder: string,\n+        readonly output: vscode.OutputChannel,\n+        readonly env: Record<string, string>\n+    ) {}\n \n     // Made public for testing purposes\n     static artifactSpec(args: readonly string[]): ArtifactSpec {\n@@ -102,6 +106,7 @@ export class Cargo {\n             const cargo = cp.spawn(path, cargoArgs, {\n                 stdio: [\"ignore\", \"pipe\", \"pipe\"],\n                 cwd: this.rootFolder,\n+                env: this.env,\n             });\n \n             cargo.on(\"error\", (err) => reject(new Error(`could not launch cargo: ${err}`)));"}]}