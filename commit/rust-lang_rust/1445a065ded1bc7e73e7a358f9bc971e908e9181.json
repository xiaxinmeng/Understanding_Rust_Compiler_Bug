{"sha": "1445a065ded1bc7e73e7a358f9bc971e908e9181", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NDVhMDY1ZGVkMWJjN2U3M2U3YTM1OGY5YmM5NzFlOTA4ZTkxODE=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2019-01-12T16:17:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-12T16:17:49Z"}, "message": "bring back the example i removed, also add symmetry and simplify impl", "tree": {"sha": "a5a5b2cff7283afa7a6d887246b7974fb3dcc30e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5a5b2cff7283afa7a6d887246b7974fb3dcc30e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1445a065ded1bc7e73e7a358f9bc971e908e9181", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcOhMtCRBK7hj4Ov3rIwAAdHIIABqEoz1wltwrcyXpEFHO4i+5\nodeZ2ZkbvLZCKL13RHGZrh/nQ5EjKoUQRX/Y450z58xF5NEHaJVpN14P3YpYrNkc\nmJRIZqeX2G4mF2xU+TrxVZ8vCKx8g/J0s66Bx3/Qu8mvtYaZ76xPT3BtLAt7yss7\nlz/lO1vbCJ+5XhpGVlecIl11wG+/U+V2NmYWDP9Npg5wNaV+1wADVKytGSXg2f1B\n0f2hHecqORB93X07KK+1sMJnXhZXpHZUNrdiJXucap54VAjtXceuoss4tS0onCuz\nDNGLoYmkFjqN/Q35q61YXt0iZQx5v+y+V/E1XuIbvgXpEXbFnK09WqQUQ30/VZ4=\n=DAGs\n-----END PGP SIGNATURE-----\n", "payload": "tree a5a5b2cff7283afa7a6d887246b7974fb3dcc30e\nparent 423a5bb5c437c2ce81d4150490d0cccfdbc33a4c\nauthor Corey Farwell <coreyf@rwell.org> 1547309869 -0500\ncommitter GitHub <noreply@github.com> 1547309869 -0500\n\nbring back the example i removed, also add symmetry and simplify impl"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1445a065ded1bc7e73e7a358f9bc971e908e9181", "html_url": "https://github.com/rust-lang/rust/commit/1445a065ded1bc7e73e7a358f9bc971e908e9181", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1445a065ded1bc7e73e7a358f9bc971e908e9181/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "423a5bb5c437c2ce81d4150490d0cccfdbc33a4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/423a5bb5c437c2ce81d4150490d0cccfdbc33a4c", "html_url": "https://github.com/rust-lang/rust/commit/423a5bb5c437c2ce81d4150490d0cccfdbc33a4c"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "db72b7bb9d2da77b63a85f4cb21a9fd700fe01de", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/1445a065ded1bc7e73e7a358f9bc971e908e9181/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1445a065ded1bc7e73e7a358f9bc971e908e9181/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=1445a065ded1bc7e73e7a358f9bc971e908e9181", "patch": "@@ -132,6 +132,48 @@ use self::Ordering::*;\n /// By changing `impl PartialEq for Book` to `impl PartialEq<BookFormat> for Book`,\n /// we allow `BookFormat`s to be compared with `Book`s.\n ///\n+/// You can also combine these implementations to let the `==` operator work with\n+/// two different types:\n+///\n+/// ```\n+/// #[derive(PartialEq)]\n+/// enum BookFormat {\n+///     Paperback,\n+///     Hardback,\n+///     Ebook,\n+/// }\n+/// \n+/// struct Book {\n+///     isbn: i32,\n+///     format: BookFormat,\n+/// }\n+/// \n+/// impl PartialEq<BookFormat> for Book {\n+///     fn eq(&self, other: &BookFormat) -> bool {\n+///         self.format == *other\n+///     }\n+/// }\n+/// \n+/// impl PartialEq<Book> for BookFormat {\n+///     fn eq(&self, other: &Book) -> bool {\n+///         *self == other.format\n+///     }\n+/// }\n+/// \n+/// impl PartialEq for Book {\n+///     fn eq(&self, other: &Book) -> bool {\n+///         self.isbn == other.isbn\n+///     }\n+/// }\n+/// \n+/// let b1 = Book { isbn: 3, format: BookFormat::Paperback };\n+/// let b2 = Book { isbn: 3, format: BookFormat::Ebook };\n+/// \n+/// assert!(b1 == BookFormat::Paperback);\n+/// assert!(b1 != BookFormat::Ebook);\n+/// assert!(b1 == b2);\n+/// ```\n+///\n /// # Examples\n ///\n /// ```"}]}