{"sha": "b6b9611190905d75ad2abe3ae3f61835afc4c82c", "node_id": "C_kwDOAAsO6NoAKGI2Yjk2MTExOTA5MDVkNzVhZDJhYmUzYWUzZjYxODM1YWZjNGM4MmM", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-05-26T09:07:20Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-05-26T09:07:20Z"}, "message": "remove unnecessary `.ok()` calls", "tree": {"sha": "a0f14ab9787dc31dc78189bcc14901b6a0edbed9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0f14ab9787dc31dc78189bcc14901b6a0edbed9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6b9611190905d75ad2abe3ae3f61835afc4c82c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6b9611190905d75ad2abe3ae3f61835afc4c82c", "html_url": "https://github.com/rust-lang/rust/commit/b6b9611190905d75ad2abe3ae3f61835afc4c82c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6b9611190905d75ad2abe3ae3f61835afc4c82c/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7fa993d8980c4a0a199a5018a135e792c051117", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7fa993d8980c4a0a199a5018a135e792c051117", "html_url": "https://github.com/rust-lang/rust/commit/e7fa993d8980c4a0a199a5018a135e792c051117"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "56a254d9c07e124cc9afda57e7b7bea7571ff9af", "filename": "compiler/rustc_trait_selection/src/solve/mod.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b6b9611190905d75ad2abe3ae3f61835afc4c82c/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6b9611190905d75ad2abe3ae3f61835afc4c82c/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs?ref=b6b9611190905d75ad2abe3ae3f61835afc4c82c", "patch": "@@ -231,13 +231,21 @@ impl<'a, 'tcx> EvalCtxt<'a, 'tcx> {\n \n                 let mut candidates = Vec::new();\n                 // LHS normalizes-to RHS\n-                candidates.extend(\n-                    evaluate_normalizes_to(self, alias_lhs, rhs, direction, Invert::No).ok(),\n-                );\n+                candidates.extend(evaluate_normalizes_to(\n+                    self,\n+                    alias_lhs,\n+                    rhs,\n+                    direction,\n+                    Invert::No,\n+                ));\n                 // RHS normalizes-to RHS\n-                candidates.extend(\n-                    evaluate_normalizes_to(self, alias_rhs, lhs, direction, Invert::Yes).ok(),\n-                );\n+                candidates.extend(evaluate_normalizes_to(\n+                    self,\n+                    alias_rhs,\n+                    lhs,\n+                    direction,\n+                    Invert::Yes,\n+                ));\n                 // Relate via substs\n                 let subst_relate_response = self.probe(|ecx| {\n                     let span = tracing::span!("}]}