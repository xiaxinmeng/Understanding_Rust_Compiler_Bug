{"sha": "1c1add23f60d87bdb215f627896792748004552c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMWFkZDIzZjYwZDg3YmRiMjE1ZjYyNzg5Njc5Mjc0ODAwNDU1MmM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-05T07:32:46Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-05T07:36:02Z"}, "message": "std::rt: Use magic to make TLS work from annihilated boxes. #8302", "tree": {"sha": "f1e1c96229eeef290c15e2e09e90800f4a41dc35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1e1c96229eeef290c15e2e09e90800f4a41dc35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c1add23f60d87bdb215f627896792748004552c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c1add23f60d87bdb215f627896792748004552c", "html_url": "https://github.com/rust-lang/rust/commit/1c1add23f60d87bdb215f627896792748004552c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c1add23f60d87bdb215f627896792748004552c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83d2a0431cf722f3a4cc1c51cdc05f544c3d1cb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/83d2a0431cf722f3a4cc1c51cdc05f544c3d1cb1", "html_url": "https://github.com/rust-lang/rust/commit/83d2a0431cf722f3a4cc1c51cdc05f544c3d1cb1"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "cb949edd7bb4a76e1ca00e02e12baa9bfd1a8ceb", "filename": "src/libstd/rt/task.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1c1add23f60d87bdb215f627896792748004552c/src%2Flibstd%2Frt%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c1add23f60d87bdb215f627896792748004552c/src%2Flibstd%2Frt%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftask.rs?ref=1c1add23f60d87bdb215f627896792748004552c", "patch": "@@ -228,6 +228,19 @@ impl Task {\n                     _ => ()\n                 }\n \n+                // FIXME #8302: Dear diary. I'm so tired and confused.\n+                // There's some interaction in rustc between the box\n+                // annihilator and the TLS dtor by which TLS is\n+                // accessed from annihilated box dtors *after* TLS is\n+                // destroyed. Somehow setting TLS back to null, as the\n+                // old runtime did, makes this work, but I don't currently\n+                // understand how. I would expect that, if the annihilator\n+                // reinvokes TLS while TLS is uninitialized, that\n+                // TLS would be reinitialized but never destroyed,\n+                // but somehow this works. I have no idea what's going\n+                // on but this seems to make things magically work. FML.\n+                self.storage = LocalStorage(ptr::null(), None);\n+\n                 // Destroy remaining boxes. Also may run user dtors.\n                 unsafe { cleanup::annihilate(); }\n             }"}]}