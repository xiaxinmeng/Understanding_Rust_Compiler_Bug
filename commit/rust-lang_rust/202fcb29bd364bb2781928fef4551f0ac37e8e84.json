{"sha": "202fcb29bd364bb2781928fef4551f0ac37e8e84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMmZjYjI5YmQzNjRiYjI3ODE5MjhmZWY0NTUxZjBhYzM3ZThlODQ=", "commit": {"author": {"name": "Brendan Cully", "email": "brendan@kublai.com", "date": "2013-07-11T05:12:30Z"}, "committer": {"name": "Brendan Cully", "email": "brendan@kublai.com", "date": "2013-07-11T05:12:30Z"}, "message": "unnecessarily mutable variables", "tree": {"sha": "850bbf350f3a9969dbd7395eb02e20e8c9f085e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/850bbf350f3a9969dbd7395eb02e20e8c9f085e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/202fcb29bd364bb2781928fef4551f0ac37e8e84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/202fcb29bd364bb2781928fef4551f0ac37e8e84", "html_url": "https://github.com/rust-lang/rust/commit/202fcb29bd364bb2781928fef4551f0ac37e8e84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/202fcb29bd364bb2781928fef4551f0ac37e8e84/comments", "author": {"login": "bcully", "id": 206236, "node_id": "MDQ6VXNlcjIwNjIzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/206236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcully", "html_url": "https://github.com/bcully", "followers_url": "https://api.github.com/users/bcully/followers", "following_url": "https://api.github.com/users/bcully/following{/other_user}", "gists_url": "https://api.github.com/users/bcully/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcully/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcully/subscriptions", "organizations_url": "https://api.github.com/users/bcully/orgs", "repos_url": "https://api.github.com/users/bcully/repos", "events_url": "https://api.github.com/users/bcully/events{/privacy}", "received_events_url": "https://api.github.com/users/bcully/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bcully", "id": 206236, "node_id": "MDQ6VXNlcjIwNjIzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/206236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcully", "html_url": "https://github.com/bcully", "followers_url": "https://api.github.com/users/bcully/followers", "following_url": "https://api.github.com/users/bcully/following{/other_user}", "gists_url": "https://api.github.com/users/bcully/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcully/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcully/subscriptions", "organizations_url": "https://api.github.com/users/bcully/orgs", "repos_url": "https://api.github.com/users/bcully/repos", "events_url": "https://api.github.com/users/bcully/events{/privacy}", "received_events_url": "https://api.github.com/users/bcully/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6e4f52bcf67e78bc0c796cd780fa01791923fdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e4f52bcf67e78bc0c796cd780fa01791923fdb", "html_url": "https://github.com/rust-lang/rust/commit/e6e4f52bcf67e78bc0c796cd780fa01791923fdb"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "36ef4edce1e6843521becc611aba8b0f0dc0ddbe", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/202fcb29bd364bb2781928fef4551f0ac37e8e84/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/202fcb29bd364bb2781928fef4551f0ac37e8e84/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=202fcb29bd364bb2781928fef4551f0ac37e8e84", "patch": "@@ -248,7 +248,7 @@ pub fn trans_break_cont(bcx: block,\n     let mut unwind = bcx;\n     let mut cur_scope = unwind.scope;\n     let mut target = unwind;\n-    let mut quit = false;\n+    let quit = false;\n     loop {\n         cur_scope = match cur_scope {\n             Some(@scope_info {"}, {"sha": "fed8c5e800e846d3c9c7359274f89ca8566d8565", "filename": "src/librustc/middle/trans/meth.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/202fcb29bd364bb2781928fef4551f0ac37e8e84/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/202fcb29bd364bb2781928fef4551f0ac37e8e84/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs?ref=202fcb29bd364bb2781928fef4551f0ac37e8e84", "patch": "@@ -548,7 +548,7 @@ pub fn trans_trait_callee_from_llval(bcx: block,\n \n     let _icx = push_ctxt(\"impl::trans_trait_callee\");\n     let ccx = bcx.ccx();\n-    let mut bcx = bcx;\n+    let bcx = bcx;\n \n     // Load the vtable from the @Trait pair\n     debug!(\"(translating trait callee) loading vtable from pair %s\","}, {"sha": "05dda16214a8fb522d49ba8a8725605e999fbc10", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/202fcb29bd364bb2781928fef4551f0ac37e8e84/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/202fcb29bd364bb2781928fef4551f0ac37e8e84/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=202fcb29bd364bb2781928fef4551f0ac37e8e84", "patch": "@@ -1074,7 +1074,7 @@ impl Parser {\n     // This version of parse arg doesn't necessarily require\n     // identifier names.\n     pub fn parse_arg_general(&self, require_name: bool) -> arg {\n-        let mut is_mutbl = self.eat_keyword(keywords::Mut);\n+        let is_mutbl = self.eat_keyword(keywords::Mut);\n         let pat = if require_name || self.is_named_argument() {\n             self.parse_arg_mode();\n             let pat = self.parse_pat();"}]}