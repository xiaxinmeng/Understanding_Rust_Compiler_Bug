{"sha": "44eb953adc210a20d0e2770ac310ebed66097846", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZWI5NTNhZGMyMTBhMjBkMGUyNzcwYWMzMTBlYmVkNjYwOTc4NDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-25T21:29:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-25T21:29:03Z"}, "message": "Auto merge of #5525 - flip1995:issue_1654, r=phansch\n\n Don't trigger while_let_on_iterator when the iterator is recreated every iteration\n\nr? @phansch\n\nFixes #1654\n\nchangelog: Fix false positive in [`while_let_on_iterator`]", "tree": {"sha": "8e701bcaeb900b72651c1e5244658a854911683b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e701bcaeb900b72651c1e5244658a854911683b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44eb953adc210a20d0e2770ac310ebed66097846", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44eb953adc210a20d0e2770ac310ebed66097846", "html_url": "https://github.com/rust-lang/rust/commit/44eb953adc210a20d0e2770ac310ebed66097846", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44eb953adc210a20d0e2770ac310ebed66097846/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a76bfd46c5596cb90465c3accad09250e8204dad", "url": "https://api.github.com/repos/rust-lang/rust/commits/a76bfd46c5596cb90465c3accad09250e8204dad", "html_url": "https://github.com/rust-lang/rust/commit/a76bfd46c5596cb90465c3accad09250e8204dad"}, {"sha": "a1826222cf5f0298353cc9f9893e86babdaac770", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1826222cf5f0298353cc9f9893e86babdaac770", "html_url": "https://github.com/rust-lang/rust/commit/a1826222cf5f0298353cc9f9893e86babdaac770"}], "stats": {"total": 67, "additions": 52, "deletions": 15}, "files": [{"sha": "6e9b7f685eb11bb1f2f0e340f2fe50f62d4a4291", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/44eb953adc210a20d0e2770ac310ebed66097846/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44eb953adc210a20d0e2770ac310ebed66097846/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=44eb953adc210a20d0e2770ac310ebed66097846", "patch": "@@ -566,6 +566,17 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Loops {\n             ) = (pat, &match_expr.kind)\n             {\n                 let iter_expr = &method_args[0];\n+\n+                // Don't lint when the iterator is recreated on every iteration\n+                if_chain! {\n+                    if let ExprKind::MethodCall(..) | ExprKind::Call(..) = iter_expr.kind;\n+                    if let Some(iter_def_id) = get_trait_def_id(cx, &paths::ITERATOR);\n+                    if implements_trait(cx, cx.tables.expr_ty(iter_expr), iter_def_id, &[]);\n+                    then {\n+                        return;\n+                    }\n+                }\n+\n                 let lhs_constructor = last_path_segment(qpath);\n                 if method_path.ident.name == sym!(next)\n                     && match_trait_method(cx, match_expr, &paths::ITERATOR)"}, {"sha": "f5fcabf63fd392e6a5abee3fb5df203b86f2f312", "filename": "tests/ui/while_let_on_iterator.fixed", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/44eb953adc210a20d0e2770ac310ebed66097846/tests%2Fui%2Fwhile_let_on_iterator.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/44eb953adc210a20d0e2770ac310ebed66097846/tests%2Fui%2Fwhile_let_on_iterator.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.fixed?ref=44eb953adc210a20d0e2770ac310ebed66097846", "patch": "@@ -119,10 +119,7 @@ fn issue2965() {\n     let mut values = HashSet::new();\n     values.insert(1);\n \n-    for _ in values.iter() {\n-        // FIXME(flip1995): Linting this with the following line uncommented is a FP, see #1654\n-        // values.remove(&1);\n-    }\n+    while let Some(..) = values.iter().next() {}\n }\n \n fn issue3670() {\n@@ -134,11 +131,30 @@ fn issue3670() {\n     }\n }\n \n+fn issue1654() {\n+    // should not lint if the iterator is generated on every iteration\n+    use std::collections::HashSet;\n+    let mut values = HashSet::new();\n+    values.insert(1);\n+\n+    while let Some(..) = values.iter().next() {\n+        values.remove(&1);\n+    }\n+\n+    while let Some(..) = values.iter().map(|x| x + 1).next() {}\n+\n+    let chars = \"Hello, World!\".char_indices();\n+    while let Some((i, ch)) = chars.clone().next() {\n+        println!(\"{}: {}\", i, ch);\n+    }\n+}\n+\n fn main() {\n     base();\n     refutable();\n     nested_loops();\n     issue1121();\n     issue2965();\n     issue3670();\n+    issue1654();\n }"}, {"sha": "04dce8a0289845b0c86518bf4cda1b7fc7383e10", "filename": "tests/ui/while_let_on_iterator.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/44eb953adc210a20d0e2770ac310ebed66097846/tests%2Fui%2Fwhile_let_on_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44eb953adc210a20d0e2770ac310ebed66097846/tests%2Fui%2Fwhile_let_on_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.rs?ref=44eb953adc210a20d0e2770ac310ebed66097846", "patch": "@@ -119,10 +119,7 @@ fn issue2965() {\n     let mut values = HashSet::new();\n     values.insert(1);\n \n-    while let Some(..) = values.iter().next() {\n-        // FIXME(flip1995): Linting this with the following line uncommented is a FP, see #1654\n-        // values.remove(&1);\n-    }\n+    while let Some(..) = values.iter().next() {}\n }\n \n fn issue3670() {\n@@ -134,11 +131,30 @@ fn issue3670() {\n     }\n }\n \n+fn issue1654() {\n+    // should not lint if the iterator is generated on every iteration\n+    use std::collections::HashSet;\n+    let mut values = HashSet::new();\n+    values.insert(1);\n+\n+    while let Some(..) = values.iter().next() {\n+        values.remove(&1);\n+    }\n+\n+    while let Some(..) = values.iter().map(|x| x + 1).next() {}\n+\n+    let chars = \"Hello, World!\".char_indices();\n+    while let Some((i, ch)) = chars.clone().next() {\n+        println!(\"{}: {}\", i, ch);\n+    }\n+}\n+\n fn main() {\n     base();\n     refutable();\n     nested_loops();\n     issue1121();\n     issue2965();\n     issue3670();\n+    issue1654();\n }"}, {"sha": "6de138d7227b20b9f50a72f68dafe305b572a6d1", "filename": "tests/ui/while_let_on_iterator.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/44eb953adc210a20d0e2770ac310ebed66097846/tests%2Fui%2Fwhile_let_on_iterator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/44eb953adc210a20d0e2770ac310ebed66097846/tests%2Fui%2Fwhile_let_on_iterator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.stderr?ref=44eb953adc210a20d0e2770ac310ebed66097846", "patch": "@@ -24,11 +24,5 @@ error: this loop could be written as a `for` loop\n LL |         while let Some(_) = y.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in y`\n \n-error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:122:5\n-   |\n-LL |     while let Some(..) = values.iter().next() {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in values.iter()`\n-\n-error: aborting due to 5 previous errors\n+error: aborting due to 4 previous errors\n "}]}