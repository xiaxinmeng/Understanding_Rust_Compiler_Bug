{"sha": "e6e8c919613615d2e296e5a4adbe81c57c0dbce9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZThjOTE5NjEzNjE1ZDJlMjk2ZTVhNGFkYmU4MWM1N2MwZGJjZTk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-23T22:46:40Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-24T16:59:18Z"}, "message": "appveyor: Upgrade MinGW toolchains we use\n\nIn debugging #40546 I was able to reproduce locally finally using\nthe literal toolchain that the bots were using. I reproduced the error maybe 4\nin 10 builds. I also have the 6.3.0 toolchain installed through `pacman` which\nhas yet to have a failed build.\n\nWhen attempting to reproduce the bug with the toolchain that this commit\nswitches to I was unable to reproduce anything after a few builds. I have no\nidea what the original problem was, but I'm hoping that it was just some random\nbug fixed somewhere along the way.\n\nI don't currently know of a technical reason to stick to the 4.9.2 toolchains we\nwere previously using. Historcal 5.3.* toolchains would cause llvm to segfault\n(maybe a miscompile?) but this seems to have been fixed recently. To me if it\npasses CI then I think we're good.\n\nCloses #40546", "tree": {"sha": "bca2bc918626e84fcc28fa4be6142d205613b4a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bca2bc918626e84fcc28fa4be6142d205613b4a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6e8c919613615d2e296e5a4adbe81c57c0dbce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e8c919613615d2e296e5a4adbe81c57c0dbce9", "html_url": "https://github.com/rust-lang/rust/commit/e6e8c919613615d2e296e5a4adbe81c57c0dbce9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6e8c919613615d2e296e5a4adbe81c57c0dbce9/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5580374d7eb8795a8188be4650bd5079a25c6b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5580374d7eb8795a8188be4650bd5079a25c6b3", "html_url": "https://github.com/rust-lang/rust/commit/d5580374d7eb8795a8188be4650bd5079a25c6b3"}], "stats": {"total": 62, "additions": 33, "deletions": 29}, "files": [{"sha": "146b0ba1b3d028e8347c7b286aef2671e1838b5d", "filename": "appveyor.yml", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e6e8c919613615d2e296e5a4adbe81c57c0dbce9/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/e6e8c919613615d2e296e5a4adbe81c57c0dbce9/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=e6e8c919613615d2e296e5a4adbe81c57c0dbce9", "patch": "@@ -45,14 +45,14 @@ environment:\n   - MSYS_BITS: 32\n     RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-ninja\n     SCRIPT: python x.py test\n-    MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n-    MINGW_ARCHIVE: i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z\n+    MINGW_URL: https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror\n+    MINGW_ARCHIVE: i686-6.3.0-release-win32-dwarf-rt_v5-rev1.7z\n     MINGW_DIR: mingw32\n   - MSYS_BITS: 64\n     SCRIPT: python x.py test\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-ninja\n-    MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n-    MINGW_ARCHIVE: x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z\n+    MINGW_URL: https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror\n+    MINGW_ARCHIVE: x86_64-6.3.0-release-win32-seh-rt_v5-rev1.7z\n     MINGW_DIR: mingw64\n \n   # 32/64 bit MSVC and GNU deployment\n@@ -70,15 +70,15 @@ environment:\n   - MSYS_BITS: 32\n     RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-extended --enable-ninja\n     SCRIPT: python x.py dist\n-    MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n-    MINGW_ARCHIVE: i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z\n+    MINGW_URL: https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror\n+    MINGW_ARCHIVE: i686-6.3.0-release-win32-dwarf-rt_v5-rev1.7z\n     MINGW_DIR: mingw32\n     DEPLOY: 1\n   - MSYS_BITS: 64\n     SCRIPT: python x.py dist\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-extended --enable-ninja\n-    MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n-    MINGW_ARCHIVE: x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z\n+    MINGW_URL: https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror\n+    MINGW_ARCHIVE: x86_64-6.3.0-release-win32-seh-rt_v5-rev1.7z\n     MINGW_DIR: mingw64\n     DEPLOY: 1\n "}, {"sha": "71a19d98190548f8ba068b968eeff75895b25d92", "filename": "src/test/run-pass/issue-16671.rs", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e6e8c919613615d2e296e5a4adbe81c57c0dbce9/src%2Ftest%2Frun-pass%2Fissue-16671.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e8c919613615d2e296e5a4adbe81c57c0dbce9/src%2Ftest%2Frun-pass%2Fissue-16671.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16671.rs?ref=e6e8c919613615d2e296e5a4adbe81c57c0dbce9", "patch": "@@ -8,26 +8,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// DON'T REENABLE THIS UNLESS YOU'VE ACTUALLY FIXED THE UNDERLYING ISSUE\n-// ignore-android seems to block forever\n+#![deny(warnings)]\n \n-// ignore-emscripten no threads support\n+fn foo<F: FnOnce()>(_f: F) { }\n \n-#![forbid(warnings)]\n-\n-// Pretty printing tests complain about `use std::predule::*`\n-#![allow(unused_imports)]\n-\n-// A var moved into a proc, that has a mutable loan path should\n-// not trigger a misleading unused_mut warning.\n-\n-use std::io::prelude::*;\n-use std::thread;\n-\n-pub fn main() {\n-    let mut stdin = std::io::stdin();\n-    thread::spawn(move|| {\n-        let mut v = Vec::new();\n-        let _ = stdin.read_to_end(&mut v);\n-    }).join().ok().unwrap();\n+fn main() {\n+    let mut var = Vec::new();;\n+    foo(move|| {\n+        var.push(1);\n+    });\n }"}, {"sha": "f55667f93c031939c534cd8d79ced66704d71e91", "filename": "src/tools/compiletest/src/procsrv.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e6e8c919613615d2e296e5a4adbe81c57c0dbce9/src%2Ftools%2Fcompiletest%2Fsrc%2Fprocsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e8c919613615d2e296e5a4adbe81c57c0dbce9/src%2Ftools%2Fcompiletest%2Fsrc%2Fprocsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fprocsrv.rs?ref=e6e8c919613615d2e296e5a4adbe81c57c0dbce9", "patch": "@@ -57,9 +57,26 @@ pub fn run(lib_path: &str,\n \n     let mut cmd = Command::new(prog);\n     cmd.args(args)\n-        .stdin(Stdio::piped())\n         .stdout(Stdio::piped())\n         .stderr(Stdio::piped());\n+\n+    // Why oh why do we sometimes make a pipe and sometimes inherit the stdin\n+    // stream, well that's an excellent question! In theory it should suffice to\n+    // always create a pipe here and be done with it. Unfortunately though\n+    // there's apparently something odd with the gdb that comes with gcc 6.3.0\n+    // on MinGW. Tracked at rust-lang/rust#40184 when stdin is piped here\n+    // (unconditionally) then all gdb tests will fail on MinGW when using gcc\n+    // 6.3.0. WHen using an inherited stdin though they happen to all work!\n+    //\n+    // As to why this fixes the issue, well, I have no idea. If you can remove\n+    // this branch and unconditionally use `piped` and it gets past @bors please\n+    // feel free to send a PR!\n+    if input.is_some() || !cfg!(windows) {\n+        cmd.stdin(Stdio::piped());\n+    } else {\n+        cmd.stdin(Stdio::inherit());\n+    }\n+\n     add_target_env(&mut cmd, lib_path, aux_path);\n     for (key, val) in env {\n         cmd.env(&key, &val);"}]}