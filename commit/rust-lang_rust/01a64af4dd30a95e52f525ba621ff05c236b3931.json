{"sha": "01a64af4dd30a95e52f525ba621ff05c236b3931", "node_id": "C_kwDOAAsO6NoAKDAxYTY0YWY0ZGQzMGE5NWU1MmY1MjViYTYyMWZmMDVjMjM2YjM5MzE", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-28T13:04:42Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:22Z"}, "message": "lint: port type alias bounds diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "ad95c3941566ab1c2e08dda279f9f20690390183", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad95c3941566ab1c2e08dda279f9f20690390183"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01a64af4dd30a95e52f525ba621ff05c236b3931", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01a64af4dd30a95e52f525ba621ff05c236b3931", "html_url": "https://github.com/rust-lang/rust/commit/01a64af4dd30a95e52f525ba621ff05c236b3931", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01a64af4dd30a95e52f525ba621ff05c236b3931/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbced105db2b417d40b90a55c4c1a68a4f0ee6aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbced105db2b417d40b90a55c4c1a68a4f0ee6aa", "html_url": "https://github.com/rust-lang/rust/commit/dbced105db2b417d40b90a55c4c1a68a4f0ee6aa"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "bf69db38b42ebad99a80e964bdd93f3d91dbf00c", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/01a64af4dd30a95e52f525ba621ff05c236b3931/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/01a64af4dd30a95e52f525ba621ff05c236b3931/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=01a64af4dd30a95e52f525ba621ff05c236b3931", "patch": "@@ -358,3 +358,11 @@ lint-builtin-unstable-features = unstable feature\n lint-builtin-unreachable-pub = unreachable `pub` {$what}\n     .suggestion = consider restricting its visibility\n     .help = or consider exporting it for use by other crates\n+\n+lint-builtin-type-alias-bounds-help = use fully disambiguated paths (i.e., `<T as Trait>::Assoc`) to refer to associated types in type aliases\n+\n+lint-builtin-type-alias-where-clause = where clauses are not enforced in type aliases\n+    .suggestion = the clause will not be checked when the type alias is used, and should be removed\n+\n+lint-builtin-type-alias-generic-bounds = bounds on generic parameters are not enforced in type aliases\n+    .suggestion = the bound will not be checked when the type alias is used, and should be removed"}, {"sha": "0c109763d50e5922c5a87d81e3f334e1091c126f", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/01a64af4dd30a95e52f525ba621ff05c236b3931/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01a64af4dd30a95e52f525ba621ff05c236b3931/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=01a64af4dd30a95e52f525ba621ff05c236b3931", "patch": "@@ -1499,11 +1499,7 @@ impl TypeAliasBounds {\n         impl Visitor<'_> for WalkAssocTypes<'_> {\n             fn visit_qpath(&mut self, qpath: &hir::QPath<'_>, id: hir::HirId, span: Span) {\n                 if TypeAliasBounds::is_type_variable_assoc(qpath) {\n-                    self.err.span_help(\n-                        span,\n-                        \"use fully disambiguated paths (i.e., `<T as Trait>::Assoc`) to refer to \\\n-                         associated types in type aliases\",\n-                    );\n+                    self.err.span_help(span, fluent::lint::builtin_type_alias_bounds_help);\n                 }\n                 intravisit::walk_qpath(self, qpath, id, span)\n             }\n@@ -1547,11 +1543,11 @@ impl<'tcx> LateLintPass<'tcx> for TypeAliasBounds {\n         let mut suggested_changing_assoc_types = false;\n         if !where_spans.is_empty() {\n             cx.lint(TYPE_ALIAS_BOUNDS, |lint| {\n-                let mut err = lint.build(\"where clauses are not enforced in type aliases\");\n+                let mut err = lint.build(fluent::lint::builtin_type_alias_where_clause);\n                 err.set_span(where_spans);\n                 err.span_suggestion(\n                     type_alias_generics.where_clause_span,\n-                    \"the clause will not be checked when the type alias is used, and should be removed\",\n+                    fluent::lint::suggestion,\n                     \"\",\n                     Applicability::MachineApplicable,\n                 );\n@@ -1565,11 +1561,10 @@ impl<'tcx> LateLintPass<'tcx> for TypeAliasBounds {\n \n         if !inline_spans.is_empty() {\n             cx.lint(TYPE_ALIAS_BOUNDS, |lint| {\n-                let mut err =\n-                    lint.build(\"bounds on generic parameters are not enforced in type aliases\");\n+                let mut err = lint.build(fluent::lint::builtin_type_alias_generic_bounds);\n                 err.set_span(inline_spans);\n                 err.multipart_suggestion(\n-                    \"the bound will not be checked when the type alias is used, and should be removed\",\n+                    fluent::lint::suggestion,\n                     inline_sugg,\n                     Applicability::MachineApplicable,\n                 );"}]}