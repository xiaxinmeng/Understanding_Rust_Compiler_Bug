{"sha": "a186eb2fb220fe7055528a2245fc7289e5972625", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExODZlYjJmYjIyMGZlNzA1NTUyOGEyMjQ1ZmM3Mjg5ZTU5NzI2MjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-27T03:30:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-27T03:30:14Z"}, "message": "Auto merge of #30859 - aliclark:musl-nx-issue, r=brson\n\nThis explicitly adds an option telling the linker on these platforms to make the stack and heap non-executable (should already be the case for Windows, and likely OS X).\n\nWithout this option there is some risk of accidentally losing NX protection, as the linker will not enable NX if any of the binary's constituent objects don't contain the .note.GNU-stack header.\n\nWe're not aware of any users who would want a binary with executable stack or heap, but in future this could be made possible by passing a flag to disable the protection, which would also help document the fact to the crate's users.\n\nEdit: older discussion of previous quickfix to add a .note.GNU-stack header to libunwind's assembly:\n\nShort term solution for issue #30824 to ensure that object files generated from assembler contain the .note.GNU-stack header.\n\nWhen this header is not present in any constituent object files, the linker refrains from making the stack NX in the final executable.\n\nFurther actions:\n\nI'll try to get this change merged in with upstream too, and then update these instructions to just compile the fixed version.\n\nIt seems a good idea to use issue #30824 or some other issue to add a test that similar security regressions can be automatically caught in future.", "tree": {"sha": "395d6d60efd040fc9281952239d3f8699143994a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/395d6d60efd040fc9281952239d3f8699143994a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a186eb2fb220fe7055528a2245fc7289e5972625", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a186eb2fb220fe7055528a2245fc7289e5972625", "html_url": "https://github.com/rust-lang/rust/commit/a186eb2fb220fe7055528a2245fc7289e5972625", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a186eb2fb220fe7055528a2245fc7289e5972625/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b694d1b1d11b5fa41f5a019b1251124a133d031d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b694d1b1d11b5fa41f5a019b1251124a133d031d", "html_url": "https://github.com/rust-lang/rust/commit/b694d1b1d11b5fa41f5a019b1251124a133d031d"}, {"sha": "8e36b3ac4d8cf773d84231ad0958eda781c64139", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e36b3ac4d8cf773d84231ad0958eda781c64139", "html_url": "https://github.com/rust-lang/rust/commit/8e36b3ac4d8cf773d84231ad0958eda781c64139"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "ead16f957079c1996b17bdd9171e202c68fe43a4", "filename": "src/librustc_back/target/dragonfly_base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a186eb2fb220fe7055528a2245fc7289e5972625/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a186eb2fb220fe7055528a2245fc7289e5972625/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs?ref=a186eb2fb220fe7055528a2245fc7289e5972625", "patch": "@@ -24,6 +24,9 @@ pub fn opts() -> TargetOptions {\n             // libraries which follow this flag.  Thus, use it before\n             // specifying libraries to link to.\n             \"-Wl,--as-needed\".to_string(),\n+\n+            // Always enable NX protection when it is available\n+            \"-Wl,-z,noexecstack\".to_string(),\n         ),\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),"}, {"sha": "946e529502e7d6ebb144fb86e51182a841faced3", "filename": "src/librustc_back/target/freebsd_base.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a186eb2fb220fe7055528a2245fc7289e5972625/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a186eb2fb220fe7055528a2245fc7289e5972625/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs?ref=a186eb2fb220fe7055528a2245fc7289e5972625", "patch": "@@ -17,6 +17,10 @@ pub fn opts() -> TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n         has_rpath: true,\n+        pre_link_args: vec![\n+            // Always enable NX protection when it is available\n+            \"-Wl,-z,noexecstack\".to_string(),\n+        ],\n         archive_format: \"gnu\".to_string(),\n         exe_allocation_crate: super::maybe_jemalloc(),\n "}, {"sha": "20aae113f7bb34f4026e78672804b99b82e9cb0e", "filename": "src/librustc_back/target/linux_base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a186eb2fb220fe7055528a2245fc7289e5972625/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a186eb2fb220fe7055528a2245fc7289e5972625/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs?ref=a186eb2fb220fe7055528a2245fc7289e5972625", "patch": "@@ -26,6 +26,9 @@ pub fn opts() -> TargetOptions {\n             // following libraries so we're sure to pass it as one of the first\n             // arguments.\n             \"-Wl,--as-needed\".to_string(),\n+\n+            // Always enable NX protection when it is available\n+            \"-Wl,-z,noexecstack\".to_string(),\n         ],\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),"}, {"sha": "ead8a7259f03b0a1f8906f877f96cf9f16eaf8da", "filename": "src/librustc_back/target/netbsd_base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a186eb2fb220fe7055528a2245fc7289e5972625/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a186eb2fb220fe7055528a2245fc7289e5972625/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs?ref=a186eb2fb220fe7055528a2245fc7289e5972625", "patch": "@@ -24,6 +24,9 @@ pub fn opts() -> TargetOptions {\n             // libraries which follow this flag.  Thus, use it before\n             // specifying libraries to link to.\n             \"-Wl,--as-needed\".to_string(),\n+\n+            // Always enable NX protection when it is available\n+            \"-Wl,-z,noexecstack\".to_string(),\n         ),\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),"}, {"sha": "e0c2d062949d877a25883e334fc54011e368425b", "filename": "src/librustc_back/target/openbsd_base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a186eb2fb220fe7055528a2245fc7289e5972625/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a186eb2fb220fe7055528a2245fc7289e5972625/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs?ref=a186eb2fb220fe7055528a2245fc7289e5972625", "patch": "@@ -24,6 +24,9 @@ pub fn opts() -> TargetOptions {\n             // libraries which follow this flag.  Thus, use it before\n             // specifying libraries to link to.\n             \"-Wl,--as-needed\".to_string(),\n+\n+            // Always enable NX protection when it is available\n+            \"-Wl,-z,noexecstack\".to_string(),\n         ),\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),"}]}