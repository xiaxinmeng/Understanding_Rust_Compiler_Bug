{"sha": "a34b9c7b70f52b10becbee7606c10afd13712f95", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNGI5YzdiNzBmNTJiMTBiZWNiZWU3NjA2YzEwYWZkMTM3MTJmOTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-24T09:39:31Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-24T09:39:31Z"}, "message": "make some things public for the benefit of priroda", "tree": {"sha": "e368bbae4109112dd0f4c5a5380f7c6b66ded9e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e368bbae4109112dd0f4c5a5380f7c6b66ded9e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a34b9c7b70f52b10becbee7606c10afd13712f95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a34b9c7b70f52b10becbee7606c10afd13712f95", "html_url": "https://github.com/rust-lang/rust/commit/a34b9c7b70f52b10becbee7606c10afd13712f95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a34b9c7b70f52b10becbee7606c10afd13712f95/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "356369dd08f968b74b8bdee3a177f9919194914b", "url": "https://api.github.com/repos/rust-lang/rust/commits/356369dd08f968b74b8bdee3a177f9919194914b", "html_url": "https://github.com/rust-lang/rust/commit/356369dd08f968b74b8bdee3a177f9919194914b"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "50b1305e52c8346eab7e09d9abf2286145fd1ca8", "filename": "src/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a34b9c7b70f52b10becbee7606c10afd13712f95/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a34b9c7b70f52b10becbee7606c10afd13712f95/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=a34b9c7b70f52b10becbee7606c10afd13712f95", "patch": "@@ -44,8 +44,12 @@ use range_map::RangeMap;\n #[allow(unused_imports)] // FIXME rustc bug https://github.com/rust-lang/rust/issues/53682\n use helpers::{ScalarExt, EvalContextExt as HelpersEvalContextExt};\n use mono_hash_map::MonoHashMap;\n-use stacked_borrows::{EvalContextExt as StackedBorEvalContextExt, Borrow};\n+use stacked_borrows::{EvalContextExt as StackedBorEvalContextExt};\n \n+// Used by priroda\n+pub use stacked_borrows::{Borrow, Stacks, Mut as MutBorrow};\n+\n+// Used by priroda\n pub fn create_ecx<'a, 'mir: 'a, 'tcx: 'mir>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     main_id: DefId,"}, {"sha": "96ae2aa5c5769064d1ad7188c5c0c13aed20b2f7", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a34b9c7b70f52b10becbee7606c10afd13712f95/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a34b9c7b70f52b10becbee7606c10afd13712f95/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=a34b9c7b70f52b10becbee7606c10afd13712f95", "patch": "@@ -21,12 +21,20 @@ pub enum Mut {\n \n impl Mut {\n     #[inline(always)]\n-    fn is_raw(self) -> bool {\n+    pub fn is_raw(self) -> bool {\n         match self {\n             Mut::Raw => true,\n             _ => false,\n         }\n     }\n+\n+    #[inline(always)]\n+    pub fn is_uniq(self) -> bool {\n+        match self {\n+            Mut::Uniq(_) => true,\n+            _ => false,\n+        }\n+    }\n }\n \n /// Information about any kind of borrow\n@@ -40,9 +48,17 @@ pub enum Borrow {\n \n impl Borrow {\n     #[inline(always)]\n-    fn is_uniq(self) -> bool {\n+    pub fn is_uniq(self) -> bool {\n+        match self {\n+            Borrow::Mut(m) => m.is_uniq(),\n+            _ => false,\n+        }\n+    }\n+\n+    #[inline(always)]\n+    pub fn is_frz(self) -> bool {\n         match self {\n-            Borrow::Mut(Mut::Uniq(_)) => true,\n+            Borrow::Frz(_) => true,\n             _ => false,\n         }\n     }"}]}