{"sha": "ec76b6eedddfd601a9684db945ff927e57f2aa03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNzZiNmVlZGRkZmQ2MDFhOTY4NGRiOTQ1ZmY5MjdlNTdmMmFhMDM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-07-25T12:48:57Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-07-25T19:19:21Z"}, "message": "Add support for tuple structs' fields documentation", "tree": {"sha": "31d00149e55177fd477fe082a2a632ae550c582d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31d00149e55177fd477fe082a2a632ae550c582d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec76b6eedddfd601a9684db945ff927e57f2aa03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec76b6eedddfd601a9684db945ff927e57f2aa03", "html_url": "https://github.com/rust-lang/rust/commit/ec76b6eedddfd601a9684db945ff927e57f2aa03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec76b6eedddfd601a9684db945ff927e57f2aa03/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "478126c0f3520ccd95a6f16be2812a78e3da711c", "url": "https://api.github.com/repos/rust-lang/rust/commits/478126c0f3520ccd95a6f16be2812a78e3da711c", "html_url": "https://github.com/rust-lang/rust/commit/478126c0f3520ccd95a6f16be2812a78e3da711c"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "5298a560627cbad05de70f865784c07a0260984b", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ec76b6eedddfd601a9684db945ff927e57f2aa03/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec76b6eedddfd601a9684db945ff927e57f2aa03/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=ec76b6eedddfd601a9684db945ff927e57f2aa03", "patch": "@@ -2007,6 +2007,9 @@ fn sidebar_struct(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, s: &clea\n             }\n \n             sidebar.push_str(\"</div>\");\n+        } else if let CtorKind::Fn = s.struct_type {\n+            sidebar\n+                .push_str(\"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#fields\\\">Tuple Fields</a></h3>\");\n         }\n     }\n "}, {"sha": "8f7e84428956a9d7e394c88b97600d12b3e3da6a", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ec76b6eedddfd601a9684db945ff927e57f2aa03/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec76b6eedddfd601a9684db945ff927e57f2aa03/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=ec76b6eedddfd601a9684db945ff927e57f2aa03", "patch": "@@ -1176,21 +1176,21 @@ fn item_struct(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::St\n             _ => None,\n         })\n         .peekable();\n-    if let CtorKind::Fictive = s.struct_type {\n+    if let CtorKind::Fictive | CtorKind::Fn = s.struct_type {\n         if fields.peek().is_some() {\n             write!(\n                 w,\n                 \"<h2 id=\\\"fields\\\" class=\\\"fields small-section-header\\\">\\\n-                       Fields{}<a href=\\\"#fields\\\" class=\\\"anchor\\\"></a></h2>\",\n+                     {}{}<a href=\\\"#fields\\\" class=\\\"anchor\\\"></a>\\\n+                 </h2>\",\n+                if let CtorKind::Fictive = s.struct_type { \"Fields\" } else { \"Tuple Fields\" },\n                 document_non_exhaustive_header(it)\n             );\n             document_non_exhaustive(w, it);\n-            for (field, ty) in fields {\n-                let id = cx.derive_id(format!(\n-                    \"{}.{}\",\n-                    ItemType::StructField,\n-                    field.name.as_ref().unwrap()\n-                ));\n+            for (index, (field, ty)) in fields.enumerate() {\n+                let field_name =\n+                    field.name.map_or_else(|| index.to_string(), |sym| (*sym.as_str()).to_string());\n+                let id = cx.derive_id(format!(\"{}.{}\", ItemType::StructField, field_name));\n                 write!(\n                     w,\n                     \"<span id=\\\"{id}\\\" class=\\\"{item_type} small-section-header\\\">\\\n@@ -1199,7 +1199,7 @@ fn item_struct(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::St\n                      </span>\",\n                     item_type = ItemType::StructField,\n                     id = id,\n-                    name = field.name.as_ref().unwrap(),\n+                    name = field_name,\n                     ty = ty.print(cx)\n                 );\n                 document(w, cx, field, Some(it));"}]}