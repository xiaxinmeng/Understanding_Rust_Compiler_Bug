{"sha": "ae369340473fc4bb5b30d20d32022f7ae9f8324c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMzY5MzQwNDczZmM0YmI1YjMwZDIwZDMyMDIyZjdhZTlmODMyNGM=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-12-07T01:34:55Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-12-15T16:16:38Z"}, "message": "Document how `BTreeSet` iterator structures are created.", "tree": {"sha": "26db055e74eda730f6883ca2a446b66130b04f93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26db055e74eda730f6883ca2a446b66130b04f93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae369340473fc4bb5b30d20d32022f7ae9f8324c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae369340473fc4bb5b30d20d32022f7ae9f8324c", "html_url": "https://github.com/rust-lang/rust/commit/ae369340473fc4bb5b30d20d32022f7ae9f8324c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae369340473fc4bb5b30d20d32022f7ae9f8324c/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf56c1f744c3e7c71a1d5a80b8889b9fab8f6de7", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf56c1f744c3e7c71a1d5a80b8889b9fab8f6de7", "html_url": "https://github.com/rust-lang/rust/commit/cf56c1f744c3e7c71a1d5a80b8889b9fab8f6de7"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "91da8e8b0795150b6b982ca88e8213690ada442b", "filename": "src/libcollections/btree/set.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ae369340473fc4bb5b30d20d32022f7ae9f8324c/src%2Flibcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae369340473fc4bb5b30d20d32022f7ae9f8324c/src%2Flibcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fset.rs?ref=ae369340473fc4bb5b30d20d32022f7ae9f8324c", "patch": "@@ -75,44 +75,80 @@ pub struct BTreeSet<T> {\n }\n \n /// An iterator over a `BTreeSet`'s items.\n+///\n+/// This structure is created by the [`iter`] method on [`BTreeSet`].\n+///\n+/// [`BTreeSet`]: struct.BTreeSet.html\n+/// [`iter`]: struct.BTreeSet.html#method.iter\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Iter<'a, T: 'a> {\n     iter: Keys<'a, T, ()>,\n }\n \n /// An owning iterator over a `BTreeSet`'s items.\n+///\n+/// This structure is created by the `into_iter` method on [`BTreeSet`]\n+/// [`BTreeSet`] (provided by the `IntoIterator` trait).\n+///\n+/// [`BTreeSet`]: struct.BTreeSet.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct IntoIter<T> {\n     iter: ::btree_map::IntoIter<T, ()>,\n }\n \n /// An iterator over a sub-range of `BTreeSet`'s items.\n+///\n+/// This structure is created by the [`range`] method on [`BTreeSet`].\n+///\n+/// [`BTreeSet`]: struct.BTreeSet.html\n+/// [`range`]: struct.BTreeSet.html#method.range\n pub struct Range<'a, T: 'a> {\n     iter: ::btree_map::Range<'a, T, ()>,\n }\n \n /// A lazy iterator producing elements in the set difference (in-order).\n+///\n+/// This structure is created by the [`difference`] method on [`BTreeSet`].\n+///\n+/// [`BTreeSet`]: struct.BTreeSet.html\n+/// [`difference`]: struct.BTreeSet.html#method.difference\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Difference<'a, T: 'a> {\n     a: Peekable<Iter<'a, T>>,\n     b: Peekable<Iter<'a, T>>,\n }\n \n /// A lazy iterator producing elements in the set symmetric difference (in-order).\n+///\n+/// This structure is created by the [`symmetric_difference`] method on\n+/// [`BTreeSet`].\n+///\n+/// [`BTreeSet`]: struct.BTreeSet.html\n+/// [`symmetric_difference`]: struct.BTreeSet.html#method.symmetric_difference\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct SymmetricDifference<'a, T: 'a> {\n     a: Peekable<Iter<'a, T>>,\n     b: Peekable<Iter<'a, T>>,\n }\n \n /// A lazy iterator producing elements in the set intersection (in-order).\n+///\n+/// This structure is created by the [`intersection`] method on [`BTreeSet`].\n+///\n+/// [`BTreeSet`]: struct.BTreeSet.html\n+/// [`intersection`]: struct.BTreeSet.html#method.intersection\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Intersection<'a, T: 'a> {\n     a: Peekable<Iter<'a, T>>,\n     b: Peekable<Iter<'a, T>>,\n }\n \n /// A lazy iterator producing elements in the set union (in-order).\n+///\n+/// This structure is created by the [`union`] method on [`BTreeSet`].\n+///\n+/// [`BTreeSet`]: struct.BTreeSet.html\n+/// [`union`]: struct.BTreeSet.html#method.union\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Union<'a, T: 'a> {\n     a: Peekable<Iter<'a, T>>,"}]}