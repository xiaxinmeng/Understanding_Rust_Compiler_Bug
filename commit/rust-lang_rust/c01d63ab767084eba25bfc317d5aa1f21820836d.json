{"sha": "c01d63ab767084eba25bfc317d5aa1f21820836d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMWQ2M2FiNzY3MDg0ZWJhMjViZmMzMTdkNWFhMWYyMTgyMDgzNmQ=", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-06-07T11:05:17Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-06-07T12:20:39Z"}, "message": "Add E0316.md", "tree": {"sha": "b44032b0cd65e0b80324ae16f7528738619f5acb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b44032b0cd65e0b80324ae16f7528738619f5acb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c01d63ab767084eba25bfc317d5aa1f21820836d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c01d63ab767084eba25bfc317d5aa1f21820836d", "html_url": "https://github.com/rust-lang/rust/commit/c01d63ab767084eba25bfc317d5aa1f21820836d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c01d63ab767084eba25bfc317d5aa1f21820836d/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20870bdb9ecce8af7acb2db13177fc52f890f92", "url": "https://api.github.com/repos/rust-lang/rust/commits/a20870bdb9ecce8af7acb2db13177fc52f890f92", "html_url": "https://github.com/rust-lang/rust/commit/a20870bdb9ecce8af7acb2db13177fc52f890f92"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "f10efd832361c252715a628de77127f7f4dae5b7", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c01d63ab767084eba25bfc317d5aa1f21820836d/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c01d63ab767084eba25bfc317d5aa1f21820836d/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=c01d63ab767084eba25bfc317d5aa1f21820836d", "patch": "@@ -157,6 +157,7 @@ E0308: include_str!(\"./error_codes/E0308.md\"),\n E0309: include_str!(\"./error_codes/E0309.md\"),\n E0310: include_str!(\"./error_codes/E0310.md\"),\n E0312: include_str!(\"./error_codes/E0312.md\"),\n+E0316: include_str!(\"./error_codes/E0316.md\"),\n E0317: include_str!(\"./error_codes/E0317.md\"),\n E0321: include_str!(\"./error_codes/E0321.md\"),\n E0322: include_str!(\"./error_codes/E0322.md\"),\n@@ -555,7 +556,6 @@ E0783: include_str!(\"./error_codes/E0783.md\"),\n            // variable\n //  E0314, // closure outlives stack frame\n //  E0315, // cannot invoke closure outside of its lifetime\n-    E0316, // nested quantification of lifetimes\n //  E0319, // trait impls for defaulted traits allowed just for structs/enums\n     E0320, // recursive overflow during dropck\n //  E0372, // coherence not object safe"}, {"sha": "4368c321737b2b0ea0349ad05824334741deaefb", "filename": "compiler/rustc_error_codes/src/error_codes/E0316.md", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c01d63ab767084eba25bfc317d5aa1f21820836d/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0316.md", "raw_url": "https://github.com/rust-lang/rust/raw/c01d63ab767084eba25bfc317d5aa1f21820836d/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0316.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0316.md?ref=c01d63ab767084eba25bfc317d5aa1f21820836d", "patch": "@@ -0,0 +1,32 @@\n+A `where` clause contains a nested quantification over lifetimes.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0316\n+trait Tr<'a, 'b> {}\n+\n+fn foo<T>(t: T)\n+where\n+    for<'a> &'a T: for<'b> Tr<'a, 'b>, // error: nested quantification\n+{\n+}\n+```\n+\n+Rust syntax allows lifetime quantifications in two places within\n+`where` clauses: Quantifying over the trait bound only (as in\n+`Ty: for<'l> Trait<'l>`) and quantifying over the whole clause\n+(as in `for<'l> &'l Ty: Trait<'l>`). Using both in the same clause\n+leads to a nested lifetime quantification, which is not supported.\n+\n+The following example compiles, because the clause with the nested\n+quantification has been rewritten to use only one `for<>`:\n+\n+```\n+trait Tr<'a, 'b> {}\n+\n+fn foo<T>(t: T)\n+where\n+    for<'a, 'b> &'a T: Tr<'a, 'b>, // ok\n+{\n+}\n+```"}]}