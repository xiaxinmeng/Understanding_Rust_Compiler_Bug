{"sha": "754c4a4f6dc9c5a561e619db76dbc815ff80be1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NGM0YTRmNmRjOWM1YTU2MWU2MTlkYjc2ZGJjODE1ZmY4MGJlMWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-06T08:57:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-06T08:57:18Z"}, "message": "Auto merge of #1104 - RalfJung:readme, r=oli-obk\n\nupdate README\n\nr? @oli-obk", "tree": {"sha": "86600f6b5ab2fbe01ecc726ffedeb37d9b263973", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86600f6b5ab2fbe01ecc726ffedeb37d9b263973"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/754c4a4f6dc9c5a561e619db76dbc815ff80be1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/754c4a4f6dc9c5a561e619db76dbc815ff80be1c", "html_url": "https://github.com/rust-lang/rust/commit/754c4a4f6dc9c5a561e619db76dbc815ff80be1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/754c4a4f6dc9c5a561e619db76dbc815ff80be1c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b84d77be4f901cba3c08d332263c2fa79cb0224a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b84d77be4f901cba3c08d332263c2fa79cb0224a", "html_url": "https://github.com/rust-lang/rust/commit/b84d77be4f901cba3c08d332263c2fa79cb0224a"}, {"sha": "e0619b717ce2957dda6040b6996ceebb9539f30b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0619b717ce2957dda6040b6996ceebb9539f30b", "html_url": "https://github.com/rust-lang/rust/commit/e0619b717ce2957dda6040b6996ceebb9539f30b"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "92423c73c9ca58d05d1429904bcc56bc2e838c9c", "filename": "README.md", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/754c4a4f6dc9c5a561e619db76dbc815ff80be1c/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/754c4a4f6dc9c5a561e619db76dbc815ff80be1c/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=754c4a4f6dc9c5a561e619db76dbc815ff80be1c", "patch": "@@ -39,10 +39,9 @@ program, and cannot run all programs:\n   addresses or other non-deterministic data, try running Miri with different\n   values for `-Zmiri-seed` to test different executions.\n * Miri runs the program as a platform-independent interpreter, so the program\n-  has no access to any platform-specific APIs or FFI. A few APIs have been\n+  has no access to most platform-specific APIs or FFI. A few APIs have been\n   implemented (such as printing to stdout) but most have not: for example, Miri\n-  currently does not support concurrency, or SIMD, or networking, or file system\n-  access.\n+  currently does not support concurrency, or SIMD, or networking.\n \n [rust]: https://www.rust-lang.org/\n [mir]: https://github.com/rust-lang/rfcs/blob/master/text/1211-mir.md\n@@ -78,9 +77,7 @@ dependencies.  It will ask you for confirmation before installing anything.\n You can pass arguments to Miri after the first `--`, and pass arguments to the\n interpreted program or test suite after the second `--`.  For example, `cargo\n miri run -- -Zmiri-disable-validation` runs the program without validation of\n-basic type invariants and references.  `cargo miri test -- -- -Zunstable-options\n---exclude-should-panic` skips `#[should_panic]` tests, which is a good idea\n-because Miri does not support unwinding or catching panics.\n+basic type invariants and without checking the aliasing of references.\n \n When running code via `cargo miri`, the `miri` config flag is set.  You can\n use this to exclude test cases that will fail under Miri because they do things\n@@ -90,8 +87,9 @@ Miri does not support:\n #[cfg(not(miri))]\n #[test]\n fn does_not_work_on_miri() {\n-    let x = 0u8;\n-    assert!(&x as *const _ as usize % 4 < 4);\n+    std::thread::spawn(|| println!(\"Hello Thread!\"))\n+        .join()\n+        .unwrap();\n }\n ```\n \n@@ -111,7 +109,7 @@ rustup default \"$MIRI_NIGHTLY\"\n rustup component add miri\n cargo miri setup\n \n-cargo miri test -- -- -Zunstable-options --exclude-should-panic\n+cargo miri test\n ```\n \n We use `cargo miri setup` to avoid getting interactive questions about the extra\n@@ -154,10 +152,10 @@ Several `-Z` flags are relevant for Miri:\n   **NOTE**: This entropy is not good enough for cryptographic use!  Do not\n   generate secret keys in Miri or perform other kinds of cryptographic\n   operations that rely on proper random numbers.\n-* `-Zmiri-disable-validation` disables enforcing the validity invariant, which\n-  is enforced by default.  This is mostly useful for debugging; it means Miri\n-  will miss bugs in your program.  However, this can also help to make Miri run\n-  faster.\n+* `-Zmiri-disable-validation` disables enforcing validity invariants and\n+  reference aliasing rules, which are enforced by default.  This is mostly\n+  useful for debugging.  It means Miri will miss bugs in your program.  However,\n+  this can also help to make Miri run faster.\n * `-Zmiri-disable-isolation` disables host host isolation.  As a consequence,\n   the program has access to host resources such as environment variables and\n   randomness (and, eventually, file systems and more)."}]}