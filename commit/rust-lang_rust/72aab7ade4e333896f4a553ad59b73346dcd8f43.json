{"sha": "72aab7ade4e333896f4a553ad59b73346dcd8f43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyYWFiN2FkZTRlMzMzODk2ZjRhNTUzYWQ1OWI3MzM0NmRjZDhmNDM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-05-07T14:30:55Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-05-13T14:42:59Z"}, "message": "rustc_mir: remove unnecessary drop scope for constants.", "tree": {"sha": "1e0840eacb21790243a3044cd8d386bffeba517a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e0840eacb21790243a3044cd8d386bffeba517a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72aab7ade4e333896f4a553ad59b73346dcd8f43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72aab7ade4e333896f4a553ad59b73346dcd8f43", "html_url": "https://github.com/rust-lang/rust/commit/72aab7ade4e333896f4a553ad59b73346dcd8f43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72aab7ade4e333896f4a553ad59b73346dcd8f43/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9809fe0d021ebed29d13a4f7fa58c660107da384", "url": "https://api.github.com/repos/rust-lang/rust/commits/9809fe0d021ebed29d13a4f7fa58c660107da384", "html_url": "https://github.com/rust-lang/rust/commit/9809fe0d021ebed29d13a4f7fa58c660107da384"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "b441f509b5354ef6af3075c79e9e47e070c28e5a", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/72aab7ade4e333896f4a553ad59b73346dcd8f43/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72aab7ade4e333896f4a553ad59b73346dcd8f43/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=72aab7ade4e333896f4a553ad59b73346dcd8f43", "patch": "@@ -401,22 +401,15 @@ pub fn construct_const<'a, 'gcx, 'tcx>(hir: Cx<'a, 'gcx, 'tcx>,\n     let span = tcx.hir.span(owner_id);\n     let mut builder = Builder::new(hir.clone(), span, 0, ty);\n \n-    let extent = hir.region_maps.temporary_scope(tcx, ast_expr.id)\n-                                .unwrap_or(tcx.item_extent(owner_id));\n     let mut block = START_BLOCK;\n-    let _ = builder.in_scope(extent, block, |builder| {\n-        let expr = builder.hir.mirror(ast_expr);\n-        unpack!(block = builder.into(&Lvalue::Local(RETURN_POINTER), block, expr));\n+    let expr = builder.hir.mirror(ast_expr);\n+    unpack!(block = builder.into_expr(&Lvalue::Local(RETURN_POINTER), block, expr));\n \n-        let source_info = builder.source_info(span);\n-        let return_block = builder.return_block();\n-        builder.cfg.terminate(block, source_info,\n-                              TerminatorKind::Goto { target: return_block });\n-        builder.cfg.terminate(return_block, source_info,\n-                              TerminatorKind::Return);\n+    let source_info = builder.source_info(span);\n+    builder.cfg.terminate(block, source_info, TerminatorKind::Return);\n \n-        return_block.unit()\n-    });\n+    // Constants can't `return` so a return block should not be created.\n+    assert_eq!(builder.cached_return_block, None);\n \n     builder.finish(vec![], ty)\n }"}]}