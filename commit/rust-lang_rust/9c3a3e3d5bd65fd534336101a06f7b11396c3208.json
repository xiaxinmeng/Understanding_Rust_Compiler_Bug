{"sha": "9c3a3e3d5bd65fd534336101a06f7b11396c3208", "node_id": "C_kwDOAAsO6NoAKDljM2EzZTNkNWJkNjVmZDUzNDMzNjEwMWEwNmY3YjExMzk2YzMyMDg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-12T14:01:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-12T14:01:13Z"}, "message": "Auto merge of #93697 - the8472:fix-windows-path-hash, r=Mark-Simulacrum\n\nFix hashing for windows paths containing a CurDir component\n\n* the logic only checked for / but not for \\\n* verbatim paths shouldn't skip items at all since they don't get normalized\n* the extra branches get optimized out on unix since is_sep_byte is a trivial comparison and is_verbatim is always-false\n* tests lacked windows coverage for these cases\n\nThat lead to equal paths not having equal hashes and to unnecessary collisions.", "tree": {"sha": "35eee2e993e3a03d52ca18e23600052c30aa8032", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35eee2e993e3a03d52ca18e23600052c30aa8032"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c3a3e3d5bd65fd534336101a06f7b11396c3208", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c3a3e3d5bd65fd534336101a06f7b11396c3208", "html_url": "https://github.com/rust-lang/rust/commit/9c3a3e3d5bd65fd534336101a06f7b11396c3208", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c3a3e3d5bd65fd534336101a06f7b11396c3208/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8f175199e8db959cf25f1582157ca89ecf6210a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8f175199e8db959cf25f1582157ca89ecf6210a", "html_url": "https://github.com/rust-lang/rust/commit/f8f175199e8db959cf25f1582157ca89ecf6210a"}, {"sha": "1d21ce723cfbadb711eab1cf21df28a1636b7230", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d21ce723cfbadb711eab1cf21df28a1636b7230", "html_url": "https://github.com/rust-lang/rust/commit/1d21ce723cfbadb711eab1cf21df28a1636b7230"}], "stats": {"total": 62, "additions": 53, "deletions": 9}, "files": [{"sha": "551b66891c92fb537ccaf519c8c2f6a719bbc92e", "filename": "library/std/src/path.rs", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9c3a3e3d5bd65fd534336101a06f7b11396c3208/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c3a3e3d5bd65fd534336101a06f7b11396c3208/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=9c3a3e3d5bd65fd534336101a06f7b11396c3208", "patch": "@@ -2922,32 +2922,40 @@ impl cmp::PartialEq for Path {\n impl Hash for Path {\n     fn hash<H: Hasher>(&self, h: &mut H) {\n         let bytes = self.as_u8_slice();\n-        let prefix_len = match parse_prefix(&self.inner) {\n+        let (prefix_len, verbatim) = match parse_prefix(&self.inner) {\n             Some(prefix) => {\n                 prefix.hash(h);\n-                prefix.len()\n+                (prefix.len(), prefix.is_verbatim())\n             }\n-            None => 0,\n+            None => (0, false),\n         };\n         let bytes = &bytes[prefix_len..];\n \n         let mut component_start = 0;\n         let mut bytes_hashed = 0;\n \n         for i in 0..bytes.len() {\n-            if is_sep_byte(bytes[i]) {\n+            let is_sep = if verbatim { is_verbatim_sep(bytes[i]) } else { is_sep_byte(bytes[i]) };\n+            if is_sep {\n                 if i > component_start {\n                     let to_hash = &bytes[component_start..i];\n                     h.write(to_hash);\n                     bytes_hashed += to_hash.len();\n                 }\n \n                 // skip over separator and optionally a following CurDir item\n-                // since components() would normalize these away\n-                component_start = i + match bytes[i..] {\n-                    [_, b'.', b'/', ..] | [_, b'.'] => 2,\n-                    _ => 1,\n-                };\n+                // since components() would normalize these away.\n+                component_start = i + 1;\n+\n+                let tail = &bytes[component_start..];\n+\n+                if !verbatim {\n+                    component_start += match tail {\n+                        [b'.'] => 1,\n+                        [b'.', sep @ _, ..] if is_sep_byte(*sep) => 1,\n+                        _ => 0,\n+                    };\n+                }\n             }\n         }\n "}, {"sha": "0ab5956e1bc6beb45c43768678da5dac5f268d86", "filename": "library/std/src/path/tests.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/9c3a3e3d5bd65fd534336101a06f7b11396c3208/library%2Fstd%2Fsrc%2Fpath%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c3a3e3d5bd65fd534336101a06f7b11396c3208/library%2Fstd%2Fsrc%2Fpath%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath%2Ftests.rs?ref=9c3a3e3d5bd65fd534336101a06f7b11396c3208", "patch": "@@ -1498,6 +1498,20 @@ pub fn test_compare() {\n     relative_from: Some(\"\")\n     );\n \n+    tc!(\"foo/.\", \"foo\",\n+    eq: true,\n+    starts_with: true,\n+    ends_with: true,\n+    relative_from: Some(\"\")\n+    );\n+\n+    tc!(\"foo/./bar\", \"foo/bar\",\n+    eq: true,\n+    starts_with: true,\n+    ends_with: true,\n+    relative_from: Some(\"\")\n+    );\n+\n     tc!(\"foo/bar\", \"foo\",\n     eq: false,\n     starts_with: true,\n@@ -1541,6 +1555,27 @@ pub fn test_compare() {\n         ends_with: true,\n         relative_from: Some(\"\")\n         );\n+\n+        tc!(r\"C:\\foo\\.\\bar.txt\", r\"C:\\foo\\bar.txt\",\n+        eq: true,\n+        starts_with: true,\n+        ends_with: true,\n+        relative_from: Some(\"\")\n+        );\n+\n+        tc!(r\"C:\\foo\\.\", r\"C:\\foo\",\n+        eq: true,\n+        starts_with: true,\n+        ends_with: true,\n+        relative_from: Some(\"\")\n+        );\n+\n+        tc!(r\"\\\\?\\C:\\foo\\.\\bar.txt\", r\"\\\\?\\C:\\foo\\bar.txt\",\n+        eq: false,\n+        starts_with: false,\n+        ends_with: false,\n+        relative_from: None\n+        );\n     }\n }\n "}, {"sha": "ac24648e49e915fda9e1e08a72cb55744c1c3155", "filename": "src/test/ui/issues/issue-23036.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9c3a3e3d5bd65fd534336101a06f7b11396c3208/src%2Ftest%2Fui%2Fissues%2Fissue-23036.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c3a3e3d5bd65fd534336101a06f7b11396c3208/src%2Ftest%2Fui%2Fissues%2Fissue-23036.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23036.rs?ref=9c3a3e3d5bd65fd534336101a06f7b11396c3208", "patch": "@@ -1,4 +1,5 @@\n // run-pass\n+// ignore-wasm32-bare FIXME(#93923) llvm miscompilation\n \n use std::collections::HashMap;\n use std::path::Path;"}]}