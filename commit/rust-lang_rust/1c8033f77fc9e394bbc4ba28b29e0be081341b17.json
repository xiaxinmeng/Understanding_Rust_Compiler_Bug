{"sha": "1c8033f77fc9e394bbc4ba28b29e0be081341b17", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjODAzM2Y3N2ZjOWUzOTRiYmM0YmEyOGIyOWUwYmUwODEzNDFiMTc=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-06-16T00:47:05Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-06-16T00:47:05Z"}, "message": "Split MaybeUninit::write into new feature gate and stabilize it", "tree": {"sha": "9a3c8c31da50df620a1306cd8e4927c89179b5ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a3c8c31da50df620a1306cd8e4927c89179b5ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c8033f77fc9e394bbc4ba28b29e0be081341b17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c8033f77fc9e394bbc4ba28b29e0be081341b17", "html_url": "https://github.com/rust-lang/rust/commit/1c8033f77fc9e394bbc4ba28b29e0be081341b17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c8033f77fc9e394bbc4ba28b29e0be081341b17/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "607d6b00d4e0e0475b8de9d0c870b7126fdcdf6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/607d6b00d4e0e0475b8de9d0c870b7126fdcdf6b", "html_url": "https://github.com/rust-lang/rust/commit/607d6b00d4e0e0475b8de9d0c870b7126fdcdf6b"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "ab8d6ace29bc23ffaddca9f6adeab0f18610a878", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1c8033f77fc9e394bbc4ba28b29e0be081341b17/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c8033f77fc9e394bbc4ba28b29e0be081341b17/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=1c8033f77fc9e394bbc4ba28b29e0be081341b17", "patch": "@@ -426,7 +426,6 @@ impl<T> MaybeUninit<T> {\n     /// Correct usage of this method:\n     ///\n     /// ```rust\n-    /// #![feature(maybe_uninit_extra)]\n     /// use std::mem::MaybeUninit;\n     ///\n     /// let mut x = MaybeUninit::<Vec<u8>>::uninit();\n@@ -445,7 +444,6 @@ impl<T> MaybeUninit<T> {\n     /// This usage of the method causes a leak:\n     ///\n     /// ```rust\n-    /// #![feature(maybe_uninit_extra)]\n     /// use std::mem::MaybeUninit;\n     ///\n     /// let mut x = MaybeUninit::<String>::uninit();\n@@ -456,8 +454,8 @@ impl<T> MaybeUninit<T> {\n     /// // x is initialized now:\n     /// let s = unsafe { x.assume_init() };\n     /// ```\n-    #[unstable(feature = \"maybe_uninit_extra\", issue = \"63567\")]\n-    #[rustc_const_unstable(feature = \"maybe_uninit_extra\", issue = \"63567\")]\n+    #[stable(feature = \"maybe_uninit_write\", since = \"1.55.0\")]\n+    #[rustc_const_unstable(feature = \"const_maybe_uninit_write\", issue = \"63567\")]\n     #[inline(always)]\n     pub const fn write(&mut self, val: T) -> &mut T {\n         *self = MaybeUninit::new(val);\n@@ -478,7 +476,7 @@ impl<T> MaybeUninit<T> {\n     /// use std::mem::MaybeUninit;\n     ///\n     /// let mut x = MaybeUninit::<Vec<u32>>::uninit();\n-    /// unsafe { x.as_mut_ptr().write(vec![0, 1, 2]); }\n+    /// x.write(vec![0, 1, 2]);\n     /// // Create a reference into the `MaybeUninit<T>`. This is okay because we initialized it.\n     /// let x_vec = unsafe { &*x.as_ptr() };\n     /// assert_eq!(x_vec.len(), 3);\n@@ -897,9 +895,9 @@ impl<T> MaybeUninit<T> {\n     /// use std::mem::MaybeUninit;\n     ///\n     /// let mut array: [MaybeUninit<i32>; 3] = MaybeUninit::uninit_array();\n-    /// array[0] = MaybeUninit::new(0);\n-    /// array[1] = MaybeUninit::new(1);\n-    /// array[2] = MaybeUninit::new(2);\n+    /// array[0].write(0);\n+    /// array[1].write(1);\n+    /// array[2].write(2);\n     ///\n     /// // SAFETY: Now safe as we initialised all elements\n     /// let array = unsafe {"}]}