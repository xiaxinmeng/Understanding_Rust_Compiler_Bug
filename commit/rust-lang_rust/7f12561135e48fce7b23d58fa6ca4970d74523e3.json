{"sha": "7f12561135e48fce7b23d58fa6ca4970d74523e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMTI1NjExMzVlNDhmY2U3YjIzZDU4ZmE2Y2E0OTcwZDc0NTIzZTM=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-30T17:09:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-30T17:09:59Z"}, "message": "dedup docs\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>", "tree": {"sha": "f1efe023bbde461bacb4a45de76fe0b9216266e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1efe023bbde461bacb4a45de76fe0b9216266e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f12561135e48fce7b23d58fa6ca4970d74523e3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJegifnCRBK7hj4Ov3rIwAAdHIIADlxwE/GKd1GVHQUZSpskQ+P\nCGhUmveCbAKLFWNyU0ikIk3vcC2m2pLOMYpJ0+Ub4ctWxhSnWvpt1zKXHiwx76ok\nZjvA+uinTQnf7iJ/yk9fONwgzUCVQVK//F6LuIfzfmhYBXncnZHTiqOnfDwPMoRA\ndKIRc/1bariOhb82+QYD3tPi7xm1qPE9I5syn3f4QNH5AFzym1w57EJ/3wKBpT2/\nqyrOF2zBDWUCdkOIYuMHFvn2KdmpWiaXTWzPbyTOQHKM7rUxG0ma7OB9anIX3fqj\nKQUPnUQlGHcpc1t50vQr038E6+2zpIHzEFievxsITSG5lBimh7i+S3iEpFQOWb8=\n=lck5\n-----END PGP SIGNATURE-----\n", "payload": "tree f1efe023bbde461bacb4a45de76fe0b9216266e2\nparent 50ab77384e8f990d64c7b7fd478b19da724d6e07\nauthor Bastian Kauschke <bastian_kauschke@hotmail.de> 1585588199 +0200\ncommitter GitHub <noreply@github.com> 1585588199 +0200\n\ndedup docs\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f12561135e48fce7b23d58fa6ca4970d74523e3", "html_url": "https://github.com/rust-lang/rust/commit/7f12561135e48fce7b23d58fa6ca4970d74523e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f12561135e48fce7b23d58fa6ca4970d74523e3/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50ab77384e8f990d64c7b7fd478b19da724d6e07", "url": "https://api.github.com/repos/rust-lang/rust/commits/50ab77384e8f990d64c7b7fd478b19da724d6e07", "html_url": "https://github.com/rust-lang/rust/commit/50ab77384e8f990d64c7b7fd478b19da724d6e07"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "9dbf0489470f7e7791db3a2d738b64e2b5b72d82", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7f12561135e48fce7b23d58fa6ca4970d74523e3/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f12561135e48fce7b23d58fa6ca4970d74523e3/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=7f12561135e48fce7b23d58fa6ca4970d74523e3", "patch": "@@ -1423,7 +1423,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         } else if slice.is_none() {\n             // We have a pattern with a fixed length,\n             // which we can use to infer the length of the array.\n-            // of the array.\n             let updated_arr_ty = self.tcx.mk_array(element_ty, min_len);\n             self.demand_eqtype(span, updated_arr_ty, arr_ty);\n             return (self.tcx.types.err, updated_arr_ty);"}]}