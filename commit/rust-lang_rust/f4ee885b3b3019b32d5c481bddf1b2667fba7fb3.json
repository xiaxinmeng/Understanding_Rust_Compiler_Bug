{"sha": "f4ee885b3b3019b32d5c481bddf1b2667fba7fb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ZWU4ODViM2IzMDE5YjMyZDVjNDgxYmRkZjFiMjY2N2ZiYTdmYjM=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-09-07T23:42:45Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-09-09T22:42:20Z"}, "message": "Add VirtualPath tests", "tree": {"sha": "f766edbf7d0a3f9fb26d743e07fceba7dc7fd41c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f766edbf7d0a3f9fb26d743e07fceba7dc7fd41c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4ee885b3b3019b32d5c481bddf1b2667fba7fb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4ee885b3b3019b32d5c481bddf1b2667fba7fb3", "html_url": "https://github.com/rust-lang/rust/commit/f4ee885b3b3019b32d5c481bddf1b2667fba7fb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4ee885b3b3019b32d5c481bddf1b2667fba7fb3/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7d75463c7d1473e4276601688baa22c10eec255", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7d75463c7d1473e4276601688baa22c10eec255", "html_url": "https://github.com/rust-lang/rust/commit/a7d75463c7d1473e4276601688baa22c10eec255"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "dac8393ea5e4eb490e8d74e7e7662debd3d59e33", "filename": "crates/vfs/src/vfs_path.rs", "status": "modified", "additions": 38, "deletions": 3, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f4ee885b3b3019b32d5c481bddf1b2667fba7fb3/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4ee885b3b3019b32d5c481bddf1b2667fba7fb3/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Fvfs_path.rs?ref=f4ee885b3b3019b32d5c481bddf1b2667fba7fb3", "patch": "@@ -290,9 +290,10 @@ impl VirtualPath {\n     // FIXME: Currently VirtualPath does is unable to distinguish a directory from a file\n     // hence this method will return `Some(\"directory_name\", None)` for a directory\n     pub fn file_name_and_extension(&self) -> Option<(&str, Option<&str>)> {\n-        let file_name = match self.0.rfind('/') {\n-            Some(position) => &self.0[position + 1..],\n-            None => &self.0,\n+        let file_path = if self.0.ends_with('/') { &self.0[..&self.0.len() - 1] } else { &self.0 };\n+        let file_name = match file_path.rfind('/') {\n+            Some(position) => &file_path[position + 1..],\n+            None => file_path,\n         };\n \n         if file_name.is_empty() {\n@@ -310,3 +311,37 @@ impl VirtualPath {\n         }\n     }\n }\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+\n+    #[test]\n+    fn virtual_path_extensions() {\n+        assert_eq!(VirtualPath(\"/\".to_string()).file_name_and_extension(), None);\n+        assert_eq!(\n+            VirtualPath(\"/directory\".to_string()).file_name_and_extension(),\n+            Some((\"directory\", None))\n+        );\n+        assert_eq!(\n+            VirtualPath(\"/directory/\".to_string()).file_name_and_extension(),\n+            Some((\"directory\", None))\n+        );\n+        assert_eq!(\n+            VirtualPath(\"/directory/file\".to_string()).file_name_and_extension(),\n+            Some((\"file\", None))\n+        );\n+        assert_eq!(\n+            VirtualPath(\"/directory/.file\".to_string()).file_name_and_extension(),\n+            Some((\".file\", None))\n+        );\n+        assert_eq!(\n+            VirtualPath(\"/directory/.file.rs\".to_string()).file_name_and_extension(),\n+            Some((\".file\", Some(\"rs\")))\n+        );\n+        assert_eq!(\n+            VirtualPath(\"/directory/file.rs\".to_string()).file_name_and_extension(),\n+            Some((\"file\", Some(\"rs\")))\n+        );\n+    }\n+}"}]}