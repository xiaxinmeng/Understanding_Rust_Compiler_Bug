{"sha": "e940de64ca7c31dcf1111406850eaa7a7e01cd36", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NDBkZTY0Y2E3YzMxZGNmMTExMTQwNjg1MGVhYTdhN2UwMWNkMzY=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-05-11T07:46:36Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-05-11T07:46:36Z"}, "message": "mir: drop temps outside-in by scheduling the drops inside-out.", "tree": {"sha": "44684d56e840fb1b149a5c8d4e6bfa89893dee8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44684d56e840fb1b149a5c8d4e6bfa89893dee8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e940de64ca7c31dcf1111406850eaa7a7e01cd36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e940de64ca7c31dcf1111406850eaa7a7e01cd36", "html_url": "https://github.com/rust-lang/rust/commit/e940de64ca7c31dcf1111406850eaa7a7e01cd36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e940de64ca7c31dcf1111406850eaa7a7e01cd36/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80ec1b9f1040fba67846924234167feeb24d1f68", "url": "https://api.github.com/repos/rust-lang/rust/commits/80ec1b9f1040fba67846924234167feeb24d1f68", "html_url": "https://github.com/rust-lang/rust/commit/80ec1b9f1040fba67846924234167feeb24d1f68"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "13686d24ffdede1dd105d71d4bcee7bb79ab8ffa", "filename": "src/librustc_mir/build/expr/as_temp.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e940de64ca7c31dcf1111406850eaa7a7e01cd36/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_temp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e940de64ca7c31dcf1111406850eaa7a7e01cd36/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_temp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_temp.rs?ref=e940de64ca7c31dcf1111406850eaa7a7e01cd36", "patch": "@@ -35,12 +35,8 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n \n         let expr_ty = expr.ty.clone();\n         let temp = this.temp(expr_ty.clone());\n-        // In constants, temp_lifetime is None. We should not need to drop\n-        // anything because no values with a destructor can be created in\n-        // a constant at this time, even if the type may need dropping.\n-        if let Some(temp_lifetime) = expr.temp_lifetime {\n-            this.schedule_drop(expr.span, temp_lifetime, &temp, expr_ty);\n-        }\n+        let temp_lifetime = expr.temp_lifetime;\n+        let expr_span = expr.span;\n \n         // Careful here not to cause an infinite cycle. If we always\n         // called `into`, then for lvalues like `x.f`, it would\n@@ -51,7 +47,6 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n         // course) `as_temp`.\n         match Category::of(&expr.kind).unwrap() {\n             Category::Lvalue => {\n-                let expr_span = expr.span;\n                 let lvalue = unpack!(block = this.as_lvalue(block, expr));\n                 let rvalue = Rvalue::Use(Operand::Consume(lvalue));\n                 let scope_id = this.innermost_scope_id();\n@@ -62,6 +57,13 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n             }\n         }\n \n+        // In constants, temp_lifetime is None. We should not need to drop\n+        // anything because no values with a destructor can be created in\n+        // a constant at this time, even if the type may need dropping.\n+        if let Some(temp_lifetime) = temp_lifetime {\n+            this.schedule_drop(expr_span, temp_lifetime, &temp, expr_ty);\n+        }\n+\n         block.and(temp)\n     }\n }"}, {"sha": "fb84e7bae514d25649de5866126f4c2695ab1f45", "filename": "src/test/run-pass/issue-23338-ensure-param-drop-order.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e940de64ca7c31dcf1111406850eaa7a7e01cd36/src%2Ftest%2Frun-pass%2Fissue-23338-ensure-param-drop-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e940de64ca7c31dcf1111406850eaa7a7e01cd36/src%2Ftest%2Frun-pass%2Fissue-23338-ensure-param-drop-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-23338-ensure-param-drop-order.rs?ref=e940de64ca7c31dcf1111406850eaa7a7e01cd36", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(rustc_attrs)]\n-\n // ignore-pretty : (#23623) problems when  ending with // comments\n \n // This test is ensuring that parameters are indeed dropped after\n@@ -42,11 +40,11 @@ pub fn main() {\n                    //    | | |     |                     eval tail of foo\n                    //    | | | +-- Make D(de_5, 6)\n                    //    | | | | +-- Make D(de_6, 7)\n-                   6, // | | | +-- Drop D(de_5, 6)\n-                   //    | | |   | |\n-                   5, // | | |   | +-- Drop D(de_4, 5)\n-                   //    | | |   |\n+                   5, // | | | | | +-- Drop D(de_4, 5)\n+                   //    | | | | |\n                    2, // | | +-- Drop D(de_2, 2)\n+                   //    | |   | |\n+                   6, // | |   +-- Drop D(de_5, 6)\n                    //    | |     |\n                    1, // | +-- Drop D(de_1, 1)\n                    //    |       |\n@@ -66,8 +64,8 @@ fn test<'a>(log: d::Log<'a>) {\n     d::println(&format!(\"result {}\", result));\n }\n \n-#[rustc_no_mir] // FIXME #29855 MIR doesn't handle all drops correctly.\n-fn foo<'a>(da0: D<'a>, de1: D<'a>) -> D<'a> {\n+// FIXME(#33490) Remove the double braces when old trans is gone.\n+fn foo<'a>(da0: D<'a>, de1: D<'a>) -> D<'a> {{\n     d::println(\"entered foo\");\n     let de2 = de1.incr();      // creates D(de_2, 2)\n     let de4 = {\n@@ -76,7 +74,7 @@ fn foo<'a>(da0: D<'a>, de1: D<'a>) -> D<'a> {\n     };\n     d::println(\"eval tail of foo\");\n     de4.incr().incr()          // creates D(de_5, 6) and D(de_6, 7)\n-}\n+}}\n \n // This module provides simultaneous printouts of the dynamic extents\n // of all of the D values, in addition to logging the order that each"}]}