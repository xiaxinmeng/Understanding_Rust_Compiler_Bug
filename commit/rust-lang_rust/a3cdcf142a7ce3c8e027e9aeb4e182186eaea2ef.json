{"sha": "a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzY2RjZjE0MmE3Y2UzYzhlMDI3ZTlhZWI0ZTE4MjE4NmVhZWEyZWY=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-04-03T20:30:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-03T20:30:14Z"}, "message": "Merge pull request #2622 from flip1995/imm_while_fields\n\nDon't trigger while_immutable_condition for mutable fields", "tree": {"sha": "4c51b18f524e1023d082afe92920c93c5a2cefe5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c51b18f524e1023d082afe92920c93c5a2cefe5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaw+RWCRBK7hj4Ov3rIwAAdHIIAELmzucx1Z7DOVtYaDRDbc1o\nRQsA/j42tY1aZ+9exPR4S2DJrKwRQRCH3z08m1bjiAJSDMSu0tPpPRaHov5m7OGW\nKlAwpwQOOPhYUnvlsiYjH5mY2MYlVKMRA1gH/mHO/gJvS+2McKdnFZ7cM5IJ4Zd1\nc5UvpecHOhbuUYOyH/fiHlD++HumPFcVP1xC8wD2hiQC04jMibZb4EgaM1goqDRi\nXnkj7Hk1G4BcL0oNLOSJzTGywla8+bUZNRyLSzjpgmQ3b31rJw+IQ7JVuFXwPIxn\nNCjiLYTQV70PHjSdnrhZZIyhvN0VmeDCJtqKdr3cacK2gsWFSk1A/RHaYcT/grk=\n=49Z6\n-----END PGP SIGNATURE-----\n", "payload": "tree 4c51b18f524e1023d082afe92920c93c5a2cefe5\nparent b7f5871aa04f7164c00dad43913c8e17f95c3fe6\nparent cecfdeab196f30cf12bfa757e3e15ce9e3417689\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1522787414 +0200\ncommitter GitHub <noreply@github.com> 1522787414 +0200\n\nMerge pull request #2622 from flip1995/imm_while_fields\n\nDon't trigger while_immutable_condition for mutable fields"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef", "html_url": "https://github.com/rust-lang/rust/commit/a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7f5871aa04f7164c00dad43913c8e17f95c3fe6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7f5871aa04f7164c00dad43913c8e17f95c3fe6", "html_url": "https://github.com/rust-lang/rust/commit/b7f5871aa04f7164c00dad43913c8e17f95c3fe6"}, {"sha": "cecfdeab196f30cf12bfa757e3e15ce9e3417689", "url": "https://api.github.com/repos/rust-lang/rust/commits/cecfdeab196f30cf12bfa757e3e15ce9e3417689", "html_url": "https://github.com/rust-lang/rust/commit/cecfdeab196f30cf12bfa757e3e15ce9e3417689"}], "stats": {"total": 42, "additions": 24, "deletions": 18}, "files": [{"sha": "9a6b7627b475285a2adfe1e2a8cf3b0dfbf6b2cb", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef", "patch": "@@ -2237,7 +2237,7 @@ struct MutVarsDelegate {\n }\n \n impl<'tcx> MutVarsDelegate {\n-    fn update(&mut self, cat: &'tcx Categorization, sp: Span) {\n+    fn update(&mut self, cat: &'tcx Categorization) {\n         match *cat {\n             Categorization::Local(id) =>\n                 if let Some(used) = self.used_mutably.get_mut(&id) {\n@@ -2249,7 +2249,7 @@ impl<'tcx> MutVarsDelegate {\n                 //`while`-body, not just the ones in the condition.\n                 self.skip = true\n             },\n-            Categorization::Deref(ref cmt, _) => self.update(&cmt.cat, sp),\n+            Categorization::Deref(ref cmt, _) | Categorization::Interior(ref cmt, _) => self.update(&cmt.cat),\n             _ => {}\n         }\n     }\n@@ -2263,14 +2263,14 @@ impl<'tcx> Delegate<'tcx> for MutVarsDelegate {\n \n     fn consume_pat(&mut self, _: &Pat, _: cmt<'tcx>, _: ConsumeMode) {}\n \n-    fn borrow(&mut self, _: NodeId, sp: Span, cmt: cmt<'tcx>, _: ty::Region, bk: ty::BorrowKind, _: LoanCause) {\n+    fn borrow(&mut self, _: NodeId, _: Span, cmt: cmt<'tcx>, _: ty::Region, bk: ty::BorrowKind, _: LoanCause) {\n         if let ty::BorrowKind::MutBorrow = bk {\n-            self.update(&cmt.cat, sp)\n+            self.update(&cmt.cat)\n         }\n     }\n \n-    fn mutate(&mut self, _: NodeId, sp: Span, cmt: cmt<'tcx>, _: MutateMode) {\n-        self.update(&cmt.cat, sp)\n+    fn mutate(&mut self, _: NodeId, _: Span, cmt: cmt<'tcx>, _: MutateMode) {\n+        self.update(&cmt.cat)\n     }\n \n     fn decl_without_init(&mut self, _: NodeId, _: Span) {}"}, {"sha": "353d34134eb60bd18753d81de07fd687f0731fca", "filename": "tests/ui/infinite_loop.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef/tests%2Fui%2Finfinite_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef/tests%2Fui%2Finfinite_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_loop.rs?ref=a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef", "patch": "@@ -55,6 +55,12 @@ fn immutable_condition() {\n         }\n     };\n     c();\n+\n+    let mut tup = (0, 0);\n+    while tup.0 < 5 {\n+        tup.0 += 1;\n+        println!(\"OK - tup.0 gets mutated\")\n+    }\n }\n \n fn unused_var() {"}, {"sha": "26ec9582fb403e73c6e2ec4bdd05804bd8a6443f", "filename": "tests/ui/infinite_loop.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef/tests%2Fui%2Finfinite_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef/tests%2Fui%2Finfinite_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_loop.stderr?ref=a3cdcf142a7ce3c8e027e9aeb4e182186eaea2ef", "patch": "@@ -19,39 +19,39 @@ error: Variable in the condition are not mutated in the loop body. This either l\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:64:11\n+  --> $DIR/infinite_loop.rs:70:11\n    |\n-64 |     while i < 3 {\n+70 |     while i < 3 {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:69:11\n+  --> $DIR/infinite_loop.rs:75:11\n    |\n-69 |     while i < 3 && j > 0 {\n+75 |     while i < 3 && j > 0 {\n    |           ^^^^^^^^^^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:73:11\n+  --> $DIR/infinite_loop.rs:79:11\n    |\n-73 |     while i < 3 {\n+79 |     while i < 3 {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:88:11\n+  --> $DIR/infinite_loop.rs:94:11\n    |\n-88 |     while i < 3 {\n+94 |     while i < 3 {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:93:11\n+  --> $DIR/infinite_loop.rs:99:11\n    |\n-93 |     while i < 3 {\n+99 |     while i < 3 {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-   --> $DIR/infinite_loop.rs:156:15\n+   --> $DIR/infinite_loop.rs:162:15\n     |\n-156 |         while self.count < n {\n+162 |         while self.count < n {\n     |               ^^^^^^^^^^^^^^\n \n error: aborting due to 9 previous errors"}]}