{"sha": "9cad88dd95773f9ede6233fd7d0f3a076c5cda61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYWQ4OGRkOTU3NzNmOWVkZTYyMzNmZDdkMGYzYTA3NmM1Y2RhNjE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-12-30T11:32:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-30T11:32:34Z"}, "message": "Merge #2685\n\n2685: Simplify r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "82feefd2f534063d7bf7c58b200bc287e7860115", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82feefd2f534063d7bf7c58b200bc287e7860115"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cad88dd95773f9ede6233fd7d0f3a076c5cda61", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeCeBSCRBK7hj4Ov3rIwAAdHIIAAeLOVQ3kC/iX/qRe/CfZCVC\nxfeAQ3/p+TC+uTrIZKy51ZYJWFwQ11GwZ8gP/QqELY8pczbB6WJDwzRoaEE8UaMs\nKx7exIsJ6ogw4VQ+EEgoPdZng7V1QR4J0C9bxT1UDe6LzLIdwIuNUG5hb7k4HlQ/\nKCjw9SL1AH4aPI5uGD+n6djipvnvkjdC5o23mu44mVAfmatd5EdhyIpmfKu2wRxc\n69iZHFV/VIbFLmDy1n/PsHRhEB1W7FVyneJ5fSL1WBh1OGQNj1xMT0kwp13mkIqZ\nL8HsXcZmJLmWOAhv022bLrVEgYen7+Y/Poeg5zxKQKca/oKJyXVkQRGvMuzQj0I=\n=nKBq\n-----END PGP SIGNATURE-----\n", "payload": "tree 82feefd2f534063d7bf7c58b200bc287e7860115\nparent 0c371d2128a7efc8a82d905a97a7f7501098c441\nparent 2008f9e0b97a28833ba666694b9f4ce40833ac23\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1577705554 +0000\ncommitter GitHub <noreply@github.com> 1577705554 +0000\n\nMerge #2685\n\n2685: Simplify r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cad88dd95773f9ede6233fd7d0f3a076c5cda61", "html_url": "https://github.com/rust-lang/rust/commit/9cad88dd95773f9ede6233fd7d0f3a076c5cda61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cad88dd95773f9ede6233fd7d0f3a076c5cda61/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c371d2128a7efc8a82d905a97a7f7501098c441", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c371d2128a7efc8a82d905a97a7f7501098c441", "html_url": "https://github.com/rust-lang/rust/commit/0c371d2128a7efc8a82d905a97a7f7501098c441"}, {"sha": "2008f9e0b97a28833ba666694b9f4ce40833ac23", "url": "https://api.github.com/repos/rust-lang/rust/commits/2008f9e0b97a28833ba666694b9f4ce40833ac23", "html_url": "https://github.com/rust-lang/rust/commit/2008f9e0b97a28833ba666694b9f4ce40833ac23"}], "stats": {"total": 69, "additions": 33, "deletions": 36}, "files": [{"sha": "9bcd28e6122e4fbaa470adc0c7300efdf8c9137d", "filename": "editors/code/.vscodeignore", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cad88dd95773f9ede6233fd7d0f3a076c5cda61/editors%2Fcode%2F.vscodeignore", "raw_url": "https://github.com/rust-lang/rust/raw/9cad88dd95773f9ede6233fd7d0f3a076c5cda61/editors%2Fcode%2F.vscodeignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2F.vscodeignore?ref=9cad88dd95773f9ede6233fd7d0f3a076c5cda61", "patch": "@@ -1,4 +1,4 @@\n **\n-!out/extension.js\n+!out/main.js\n !package.json\n !package-lock.json"}, {"sha": "d14a36f8c4f074932a6736bbe9bd006566b1413b", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cad88dd95773f9ede6233fd7d0f3a076c5cda61/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/9cad88dd95773f9ede6233fd7d0f3a076c5cda61/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=9cad88dd95773f9ede6233fd7d0f3a076c5cda61", "patch": "@@ -43,7 +43,7 @@\n         \"onCommand:rust-analyzer.collectGarbage\",\n         \"workspaceContains:**/Cargo.toml\"\n     ],\n-    \"main\": \"./out/extension\",\n+    \"main\": \"./out/main\",\n     \"contributes\": {\n         \"taskDefinitions\": [\n             {"}, {"sha": "4c001f8993c5048c8fe96c7e8c4f83a47adc92aa", "filename": "editors/code/rollup.config.js", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9cad88dd95773f9ede6233fd7d0f3a076c5cda61/editors%2Fcode%2Frollup.config.js", "raw_url": "https://github.com/rust-lang/rust/raw/9cad88dd95773f9ede6233fd7d0f3a076c5cda61/editors%2Fcode%2Frollup.config.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Frollup.config.js?ref=9cad88dd95773f9ede6233fd7d0f3a076c5cda61", "patch": "@@ -4,7 +4,7 @@ import commonjs from '@rollup/plugin-commonjs';\n import nodeBuiltins from 'builtin-modules';\n \n export default {\n-    input: 'src/extension.ts',\n+    input: 'src/main.ts',\n     plugins: [\n         typescript(),\n         resolve({\n@@ -19,7 +19,7 @@ export default {\n     ],\n     external: [...nodeBuiltins, 'vscode'],\n     output: {\n-        file: './out/extension.js',\n+        file: './out/main.js',\n         format: 'cjs'\n     }\n };"}, {"sha": "5840e8fc08256bef106a4934334b084d07d7bb39", "filename": "editors/code/src/commands/analyzer_status.ts", "status": "modified", "additions": 29, "deletions": 32, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/9cad88dd95773f9ede6233fd7d0f3a076c5cda61/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9cad88dd95773f9ede6233fd7d0f3a076c5cda61/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts?ref=9cad88dd95773f9ede6233fd7d0f3a076c5cda61", "patch": "@@ -1,41 +1,15 @@\n import * as vscode from 'vscode';\n import { Server } from '../server';\n-\n-const statusUri = vscode.Uri.parse('rust-analyzer-status://status');\n-\n-export class TextDocumentContentProvider\n-    implements vscode.TextDocumentContentProvider {\n-    public eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n-    public syntaxTree: string = 'Not available';\n-\n-    public provideTextDocumentContent(\n-        _uri: vscode.Uri,\n-    ): vscode.ProviderResult<string> {\n-        const editor = vscode.window.activeTextEditor;\n-        if (editor == null) {\n-            return '';\n-        }\n-        return Server.client.sendRequest<string>(\n-            'rust-analyzer/analyzerStatus',\n-            null,\n-        );\n-    }\n-\n-    get onDidChange(): vscode.Event<vscode.Uri> {\n-        return this.eventEmitter.event;\n-    }\n-}\n-\n-let poller: NodeJS.Timer | null = null;\n-\n // Shows status of rust-analyzer (for debugging)\n \n export function makeCommand(context: vscode.ExtensionContext) {\n-    const textDocumentContentProvider = new TextDocumentContentProvider();\n+    let poller: NodeJS.Timer | null = null;\n+    const tdcp = new TextDocumentContentProvider();\n+\n     context.subscriptions.push(\n         vscode.workspace.registerTextDocumentContentProvider(\n             'rust-analyzer-status',\n-            textDocumentContentProvider,\n+            tdcp,\n         ),\n     );\n \n@@ -50,15 +24,38 @@ export function makeCommand(context: vscode.ExtensionContext) {\n     return async function handle() {\n         if (poller == null) {\n             poller = setInterval(\n-                () => textDocumentContentProvider.eventEmitter.fire(statusUri),\n+                () => tdcp.eventEmitter.fire(tdcp.uri),\n                 1000,\n             );\n         }\n-        const document = await vscode.workspace.openTextDocument(statusUri);\n+        const document = await vscode.workspace.openTextDocument(tdcp.uri);\n         return vscode.window.showTextDocument(\n             document,\n             vscode.ViewColumn.Two,\n             true,\n         );\n     };\n }\n+\n+class TextDocumentContentProvider\n+    implements vscode.TextDocumentContentProvider {\n+    uri = vscode.Uri.parse('rust-analyzer-status://status');\n+    eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n+\n+    provideTextDocumentContent(\n+        _uri: vscode.Uri,\n+    ): vscode.ProviderResult<string> {\n+        const editor = vscode.window.activeTextEditor;\n+        if (editor == null) {\n+            return '';\n+        }\n+        return Server.client.sendRequest<string>(\n+            'rust-analyzer/analyzerStatus',\n+            null,\n+        );\n+    }\n+\n+    get onDidChange(): vscode.Event<vscode.Uri> {\n+        return this.eventEmitter.event;\n+    }\n+}"}, {"sha": "1da10ebd06fc1de9edf7d6677a0aab55bf5d42a8", "filename": "editors/code/src/main.ts", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9cad88dd95773f9ede6233fd7d0f3a076c5cda61/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9cad88dd95773f9ede6233fd7d0f3a076c5cda61/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=9cad88dd95773f9ede6233fd7d0f3a076c5cda61", "previous_filename": "editors/code/src/extension.ts"}]}