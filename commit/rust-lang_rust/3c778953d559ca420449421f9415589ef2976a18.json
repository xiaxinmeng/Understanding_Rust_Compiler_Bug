{"sha": "3c778953d559ca420449421f9415589ef2976a18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNzc4OTUzZDU1OWNhNDIwNDQ5NDIxZjk0MTU1ODllZjI5NzZhMTg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-06-20T17:02:48Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-06-20T17:05:26Z"}, "message": "configure: Remove clang version checks\n\nWe no C++ and an incredibly small amount of C code as part of the build, so\nthere's not really much need for us to strictly check the version of compilers\nas we're not really stressing anything. LLVM is a pretty huge chunk of C++ but\nit should be the responsibility of LLVM to ensure that it can build with a\nparticular clang/gcc version, not ours (as this logic changes over time).\n\nThese version checks seem to basically just by us a regular stream of PRs every\nsix weeks or so when a new version is releases, so they're not really buying us\nmuch. As a result, remove them and we can add then back piecemeal perhaps as a\nblacklist if we really need to.", "tree": {"sha": "73357583a3b0c49256ea44ac92511122ba61e21b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73357583a3b0c49256ea44ac92511122ba61e21b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c778953d559ca420449421f9415589ef2976a18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c778953d559ca420449421f9415589ef2976a18", "html_url": "https://github.com/rust-lang/rust/commit/3c778953d559ca420449421f9415589ef2976a18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c778953d559ca420449421f9415589ef2976a18/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5522e678bcefe14cc2ab3d0ab329b7059ce52b36", "url": "https://api.github.com/repos/rust-lang/rust/commits/5522e678bcefe14cc2ab3d0ab329b7059ce52b36", "html_url": "https://github.com/rust-lang/rust/commit/5522e678bcefe14cc2ab3d0ab329b7059ce52b36"}], "stats": {"total": 31, "additions": 0, "deletions": 31}, "files": [{"sha": "c08e8d39154dc119d42e1acf0c9c9ae192867ee1", "filename": "configure", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/3c778953d559ca420449421f9415589ef2976a18/configure", "raw_url": "https://github.com/rust-lang/rust/raw/3c778953d559ca420449421f9415589ef2976a18/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=3c778953d559ca420449421f9415589ef2976a18", "patch": "@@ -1040,37 +1040,6 @@ if [ -n \"$CFG_ENABLE_CLANG\" ]\n then\n     case \"$CC\" in\n         (''|*clang)\n-        CFG_CLANG_REPORTED_VERSION=$($CFG_CC --version | grep version)\n-\n-        if echo $CFG_CLANG_REPORTED_VERSION | grep -q \"(based on LLVM \"; then\n-            CFG_CLANG_VERSION=$(echo $CFG_CLANG_REPORTED_VERSION | sed 's/.*(based on LLVM \\(.*\\))/\\1/')\n-        elif echo $CFG_CLANG_REPORTED_VERSION | grep -q \"Apple LLVM\"; then\n-            CFG_OSX_CLANG_VERSION=$(echo $CFG_CLANG_REPORTED_VERSION | sed 's/.*version \\(.*\\) .*/\\1/')\n-        else\n-            CFG_CLANG_VERSION=$(echo $CFG_CLANG_REPORTED_VERSION | sed 's/.*version \\(.*\\) .*/\\1/')\n-        fi\n-\n-        if [ -n \"$CFG_OSX_CLANG_VERSION\" ]\n-        then\n-            case $CFG_OSX_CLANG_VERSION in\n-                (7.0* | 7.1* | 7.2* | 7.3* | 8.0*)\n-                step_msg \"found ok version of APPLE CLANG: $CFG_OSX_CLANG_VERSION\"\n-                ;;\n-                (*)\n-                err \"bad APPLE CLANG version: $CFG_OSX_CLANG_VERSION, need >=7.0\"\n-                ;;\n-            esac\n-        else\n-            case $CFG_CLANG_VERSION in\n-                (3.2* | 3.3* | 3.4* | 3.5* | 3.6* | 3.7* | 3.8* | 3.9*)\n-                step_msg \"found ok version of CLANG: $CFG_CLANG_VERSION\"\n-                ;;\n-                (*)\n-                err \"bad CLANG version: $CFG_CLANG_VERSION, need >=3.0svn\"\n-                ;;\n-            esac\n-        fi\n-\n         if [ -z \"$CC\" ]\n         then\n             CFG_CC=\"clang\""}]}