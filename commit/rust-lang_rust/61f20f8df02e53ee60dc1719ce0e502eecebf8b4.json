{"sha": "61f20f8df02e53ee60dc1719ce0e502eecebf8b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZjIwZjhkZjAyZTUzZWU2MGRjMTcxOWNlMGU1MDJlZWNlYmY4YjQ=", "commit": {"author": {"name": "Jacob Kiesel", "email": "kieseljake@gmail.com", "date": "2017-08-26T23:53:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-26T23:53:01Z"}, "message": "Fix f32 examples.", "tree": {"sha": "f02d8ea7a648e1b0e6755451b0e9a266cb583952", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f02d8ea7a648e1b0e6755451b0e9a266cb583952"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61f20f8df02e53ee60dc1719ce0e502eecebf8b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61f20f8df02e53ee60dc1719ce0e502eecebf8b4", "html_url": "https://github.com/rust-lang/rust/commit/61f20f8df02e53ee60dc1719ce0e502eecebf8b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61f20f8df02e53ee60dc1719ce0e502eecebf8b4/comments", "author": {"login": "Xaeroxe", "id": 6182002, "node_id": "MDQ6VXNlcjYxODIwMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6182002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xaeroxe", "html_url": "https://github.com/Xaeroxe", "followers_url": "https://api.github.com/users/Xaeroxe/followers", "following_url": "https://api.github.com/users/Xaeroxe/following{/other_user}", "gists_url": "https://api.github.com/users/Xaeroxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xaeroxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xaeroxe/subscriptions", "organizations_url": "https://api.github.com/users/Xaeroxe/orgs", "repos_url": "https://api.github.com/users/Xaeroxe/repos", "events_url": "https://api.github.com/users/Xaeroxe/events{/privacy}", "received_events_url": "https://api.github.com/users/Xaeroxe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f74c5d2e18e50c24de2cc1192bf2088cdaa61916", "url": "https://api.github.com/repos/rust-lang/rust/commits/f74c5d2e18e50c24de2cc1192bf2088cdaa61916", "html_url": "https://github.com/rust-lang/rust/commit/f74c5d2e18e50c24de2cc1192bf2088cdaa61916"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "6b6bd39e7e84ccf63d2a48aeeb6e69cccb01bfaa", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/61f20f8df02e53ee60dc1719ce0e502eecebf8b4/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61f20f8df02e53ee60dc1719ce0e502eecebf8b4/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=61f20f8df02e53ee60dc1719ce0e502eecebf8b4", "patch": "@@ -1081,15 +1081,17 @@ impl f32 {\n     }\n \n     /// Returns max if self is greater than max, and min if self is less than min.\n-    /// Otherwise this returns self.  Panics if min > max, min equals NaN, or max equals NaN.\n+    /// Otherwise this returns self.  Panics if min > max, min is NaN, or max is NaN.\n     ///\n     /// # Examples\n     ///\n     /// ```\n+    /// #![feature(clamp)]\n+    /// use std::f32::NAN;\n     /// assert!((-3.0f32).clamp(-2.0f32, 1.0f32) == -2.0f32);\n     /// assert!((0.0f32).clamp(-2.0f32, 1.0f32) == 0.0f32);\n     /// assert!((2.0f32).clamp(-2.0f32, 1.0f32) == 1.0f32);\n-    /// assert!((NAN).clamp(-2.0f32, 1.0f32) == NAN);\n+    /// assert!((NAN).clamp(-2.0f32, 1.0f32).is_nan());\n     /// ```\n     #[unstable(feature = \"clamp\", issue = \"44095\")]\n     #[inline]"}]}