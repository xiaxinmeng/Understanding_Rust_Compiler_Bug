{"sha": "97f5db97c464bfa44467ccff5c0ff6ac2a681d85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3ZjVkYjk3YzQ2NGJmYTQ0NDY3Y2NmZjVjMGZmNmFjMmE2ODFkODU=", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2020-12-20T15:53:23Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2020-12-20T16:14:24Z"}, "message": "Website issue tracker link and better search performance\n\n* last minor improvements", "tree": {"sha": "41d9128b74e739b9512f6dce915178d7b2b6260f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41d9128b74e739b9512f6dce915178d7b2b6260f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97f5db97c464bfa44467ccff5c0ff6ac2a681d85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97f5db97c464bfa44467ccff5c0ff6ac2a681d85", "html_url": "https://github.com/rust-lang/rust/commit/97f5db97c464bfa44467ccff5c0ff6ac2a681d85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97f5db97c464bfa44467ccff5c0ff6ac2a681d85/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12a35abba12f003bfc12c2b982051c3f49d9b70e", "url": "https://api.github.com/repos/rust-lang/rust/commits/12a35abba12f003bfc12c2b982051c3f49d9b70e", "html_url": "https://github.com/rust-lang/rust/commit/12a35abba12f003bfc12c2b982051c3f49d9b70e"}], "stats": {"total": 54, "additions": 31, "deletions": 23}, "files": [{"sha": "ad48294b84437d337b83f66a276ae331eadfef90", "filename": "util/gh-pages/index.html", "status": "modified", "additions": 31, "deletions": 23, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/97f5db97c464bfa44467ccff5c0ff6ac2a681d85/util%2Fgh-pages%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/97f5db97c464bfa44467ccff5c0ff6ac2a681d85/util%2Fgh-pages%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fgh-pages%2Findex.html?ref=97f5db97c464bfa44467ccff5c0ff6ac2a681d85", "patch": "@@ -77,7 +77,7 @@ <h1>ALL the Clippy Lints</h1>\n                     <div class=\"col-md-12 form-horizontal\">\n                         <div class=\"input-group\">\n                             <label class=\"input-group-addon\" id=\"filter-label\" for=\"filter-input\">Filter:</label>\n-                            <input type=\"text\" class=\"form-control\" placeholder=\"Keywords or search string\" id=\"filter-input\" ng-model=\"search\" />\n+                            <input type=\"text\" class=\"form-control\" placeholder=\"Keywords or search string\" id=\"filter-input\" ng-model=\"search\" ng-model-options=\"{debounce: 50}\"/>\n                             <span class=\"input-group-btn\">\n                                 <button class=\"btn btn-default\" type=\"button\" ng-click=\"search = ''\">\n                                     Clear\n@@ -119,6 +119,7 @@ <h4 class=\"list-group-item-heading\">\n                             {{title}}\n                         </h4>\n                         <div class=\"list-group-item-text\" ng-bind-html=\"text | markdown\"></div>\n+                        <a ng-if=\"title == 'Known problems'\" href=\"https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+is%3Aopen+{{lint.id}}\">Search on GitHub</a>\n                     </li>\n                 </ul>\n             </article>\n@@ -180,6 +181,22 @@ <h4 class=\"list-group-item-heading\">\n             }\n         }\n \n+        function searchLint(lint, therm) {\n+            for (const field in lint.docs) {\n+                // Continue if it's not a property\n+                if (!lint.docs.hasOwnProperty(field)) {\n+                    continue;\n+                }\n+\n+                // Return if not found\n+                if (lint.docs[field].toLowerCase().indexOf(therm) !== -1) {\n+                    return true;\n+                }\n+            }\n+\n+            return false;\n+        }\n+\n         angular.module(\"clippy\", [])\n         .filter('markdown', function ($sce) {\n             return function (text) {\n@@ -216,40 +233,31 @@ <h4 class=\"list-group-item-heading\">\n             };\n \n             $scope.bySearch = function (lint, index, array) {\n-                let search_str = $scope.search;\n+                let searchStr = $scope.search;\n                 // It can be `null` I haven't missed this value \n-                if (search_str == null || search_str.length == 0) {\n+                if (searchStr == null || searchStr.length < 3) {\n                     return true;\n                 }\n-                search_str = search_str.toLowerCase();\n+                searchStr = searchStr.toLowerCase();\n \n                 // Search by id\n-                let id_search = search_str.trim().replace(/(\\-| )/g, \"_\");\n-                if (lint.id.includes(id_search)) {\n+                if (lint.id.indexOf(searchStr.replace(\"-\", \"_\")) !== -1) {\n                     return true;\n                 }\n \n                 // Search the description\n                 // The use of `for`-loops instead of `foreach` enables us to return early \n-                let search_lint = (lint, therm) => {\n-                    for (const field in lint.docs) {\n-                        // Continue if it's not a property\n-                        if (!lint.docs.hasOwnProperty(field)) {\n-                            continue;\n-                        }\n-\n-                        // Return if not found\n-                        if (lint.docs[field].toLowerCase().includes(therm)) {\n-                            return true;\n-                        }\n-                    }\n-                    return false;\n-                };\n-                let therms = search_str.split(\" \");\n+                let therms = searchStr.split(\" \");\n                 for (index = 0; index < therms.length; index++) {\n-                    if (!search_lint(lint, therms[index])) {\n-                        return false;\n+                    if (lint.id.indexOf(therms[index]) !== -1) {\n+                        continue;\n                     }\n+\n+                    if (searchLint(lint, therms[index])) {\n+                        continue;\n+                    }\n+\n+                    return false;\n                 }\n \n                 return true;"}]}