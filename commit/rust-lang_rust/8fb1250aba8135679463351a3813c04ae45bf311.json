{"sha": "8fb1250aba8135679463351a3813c04ae45bf311", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmYjEyNTBhYmE4MTM1Njc5NDYzMzUxYTM4MTNjMDRhZTQ1YmYzMTE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-10-10T21:39:10Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-10-27T21:09:18Z"}, "message": "Improve sidebar rendering and add methods list", "tree": {"sha": "0caf59306de5fc82cb7720e580ca11b7af62d4c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0caf59306de5fc82cb7720e580ca11b7af62d4c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fb1250aba8135679463351a3813c04ae45bf311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fb1250aba8135679463351a3813c04ae45bf311", "html_url": "https://github.com/rust-lang/rust/commit/8fb1250aba8135679463351a3813c04ae45bf311", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fb1250aba8135679463351a3813c04ae45bf311/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bed9a85c40f98ab8f4445b66d285d4108de9ad21", "url": "https://api.github.com/repos/rust-lang/rust/commits/bed9a85c40f98ab8f4445b66d285d4108de9ad21", "html_url": "https://github.com/rust-lang/rust/commit/bed9a85c40f98ab8f4445b66d285d4108de9ad21"}], "stats": {"total": 89, "additions": 69, "deletions": 20}, "files": [{"sha": "b73988823f44846b9cb01aad7240b969ae2f60de", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 48, "deletions": 14, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/8fb1250aba8135679463351a3813c04ae45bf311/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fb1250aba8135679463351a3813c04ae45bf311/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=8fb1250aba8135679463351a3813c04ae45bf311", "patch": "@@ -3513,12 +3513,29 @@ impl<'a> fmt::Display for Sidebar<'a> {\n     }\n }\n \n+fn get_methods(i: &clean::Impl) -> Vec<String> {\n+    i.items.iter().filter_map(|item| {\n+        match item.name {\n+            // Maybe check with clean::Visibility::Public as well?\n+            Some(ref name) if !name.is_empty() && item.visibility.is_some() && item.is_method() => {\n+                Some(format!(\"<a href=\\\"#method.{name}\\\">{name}</a>\", name = name))\n+            }\n+            _ => None,\n+        }\n+    }).collect::<Vec<_>>()\n+}\n+\n fn sidebar_assoc_items(it: &clean::Item) -> String {\n     let mut out = String::new();\n     let c = cache();\n     if let Some(v) = c.impls.get(&it.def_id) {\n-        if v.iter().any(|i| i.inner_impl().trait_.is_none()) {\n-            out.push_str(\"<li><a href=\\\"#methods\\\">Methods</a></li>\");\n+        let ret = v.iter()\n+                   .filter(|i| i.inner_impl().trait_.is_none())\n+                   .flat_map(|i| get_methods(i.inner_impl()))\n+                   .collect::<String>();\n+        if !ret.is_empty() {\n+            out.push_str(&format!(\"<a class=\\\"sidebar-title\\\" href=\\\"#methods\\\">Methods\\\n+                                   </a><div class=\\\"sidebar-links\\\">{}</div>\", ret));\n         }\n \n         if v.iter().any(|i| i.inner_impl().trait_.is_some()) {\n@@ -3534,16 +3551,33 @@ fn sidebar_assoc_items(it: &clean::Item) -> String {\n                     let inner_impl = target.def_id().or(target.primitive_type().and_then(|prim| {\n                         c.primitive_locations.get(&prim).cloned()\n                     })).and_then(|did| c.impls.get(&did));\n-                    if inner_impl.is_some() {\n-                        out.push_str(\"<li><a href=\\\"#deref-methods\\\">\");\n+                    if let Some(impls) = inner_impl {\n+                        out.push_str(\"<a class=\\\"sidebar-title\\\" href=\\\"#deref-methods\\\">\");\n                         out.push_str(&format!(\"Methods from {:#}&lt;Target={:#}&gt;\",\n-                                                  impl_.inner_impl().trait_.as_ref().unwrap(),\n-                                                  target));\n-                        out.push_str(\"</a></li>\");\n+                                              impl_.inner_impl().trait_.as_ref().unwrap(),\n+                                              target));\n+                        out.push_str(\"</a>\");\n+                        let ret = impls.iter()\n+                                       .filter(|i| i.inner_impl().trait_.is_none())\n+                                       .flat_map(|i| get_methods(i.inner_impl()))\n+                                       .collect::<String>();\n+                        out.push_str(&format!(\"<div class=\\\"sidebar-links\\\">{}</div>\", ret));\n                     }\n                 }\n             }\n-            out.push_str(\"<li><a href=\\\"#implementations\\\">Trait Implementations</a></li>\");\n+            let ret = v.iter()\n+                       .filter_map(|i| if let Some(ref i) = i.inner_impl().trait_ {\n+                           let out = format!(\"{:#}\", i).replace(\"<\", \"&lt;\").replace(\">\", \"&gt;\");\n+                           Some(format!(\"<a href=\\\"#impl-{:#}\\\">{name}</a>\", i, out))\n+                       } else {\n+                           None\n+                       })\n+                       .collect::<String>();\n+            if !ret.is_empty() {\n+                out.push_str(\"<a class=\\\"sidebar-title\\\" href=\\\"#implementations\\\">\\\n+                              Trait Implementations</a>\");\n+                out.push_str(&format!(\"<div class=\\\"sidebar-links\\\">{}</div>\", ret));\n+            }\n         }\n     }\n \n@@ -3564,7 +3598,7 @@ fn sidebar_struct(fmt: &mut fmt::Formatter, it: &clean::Item,\n     sidebar.push_str(&sidebar_assoc_items(it));\n \n     if !sidebar.is_empty() {\n-        write!(fmt, \"<div class=\\\"block items\\\"><ul>{}</ul></div>\", sidebar)?;\n+        write!(fmt, \"<div class=\\\"block items\\\">{}</div>\", sidebar)?;\n     }\n     Ok(())\n }\n@@ -3606,15 +3640,15 @@ fn sidebar_trait(fmt: &mut fmt::Formatter, it: &clean::Item,\n \n     sidebar.push_str(\"<li><a href=\\\"#implementors\\\">Implementors</a></li>\");\n \n-    write!(fmt, \"<div class=\\\"block items\\\"><ul>{}</ul></div>\", sidebar)\n+    write!(fmt, \"<div class=\\\"block items\\\">{}</div>\", sidebar)\n }\n \n fn sidebar_primitive(fmt: &mut fmt::Formatter, it: &clean::Item,\n                      _p: &clean::PrimitiveType) -> fmt::Result {\n     let sidebar = sidebar_assoc_items(it);\n \n     if !sidebar.is_empty() {\n-        write!(fmt, \"<div class=\\\"block items\\\"><ul>{}</ul></div>\", sidebar)?;\n+        write!(fmt, \"<div class=\\\"block items\\\">{}</div>\", sidebar)?;\n     }\n     Ok(())\n }\n@@ -3624,7 +3658,7 @@ fn sidebar_typedef(fmt: &mut fmt::Formatter, it: &clean::Item,\n     let sidebar = sidebar_assoc_items(it);\n \n     if !sidebar.is_empty() {\n-        write!(fmt, \"<div class=\\\"block items\\\"><ul>{}</ul></div>\", sidebar)?;\n+        write!(fmt, \"<div class=\\\"block items\\\">{}</div>\", sidebar)?;\n     }\n     Ok(())\n }\n@@ -3641,7 +3675,7 @@ fn sidebar_union(fmt: &mut fmt::Formatter, it: &clean::Item,\n     sidebar.push_str(&sidebar_assoc_items(it));\n \n     if !sidebar.is_empty() {\n-        write!(fmt, \"<div class=\\\"block items\\\"><ul>{}</ul></div>\", sidebar)?;\n+        write!(fmt, \"<div class=\\\"block items\\\">{}</div>\", sidebar)?;\n     }\n     Ok(())\n }\n@@ -3657,7 +3691,7 @@ fn sidebar_enum(fmt: &mut fmt::Formatter, it: &clean::Item,\n     sidebar.push_str(&sidebar_assoc_items(it));\n \n     if !sidebar.is_empty() {\n-        write!(fmt, \"<div class=\\\"block items\\\"><ul>{}</ul></div>\", sidebar)?;\n+        write!(fmt, \"<div class=\\\"block items\\\">{}</div>\", sidebar)?;\n     }\n     Ok(())\n }"}, {"sha": "dcb0de3bb92de8fb0d06ef569c861799c5040ca2", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8fb1250aba8135679463351a3813c04ae45bf311/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/8fb1250aba8135679463351a3813c04ae45bf311/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=8fb1250aba8135679463351a3813c04ae45bf311", "patch": "@@ -188,18 +188,16 @@ nav.sub {\n \n .js-only, .hidden { display: none !important; }\n \n-.sidebar {\n-\tpadding: 10px;\n-}\n .sidebar img {\n \tmargin: 20px auto;\n \tdisplay: block;\n+\tmargin-top: 10px;\n }\n \n .sidebar .location {\n \tborder: 1px solid;\n \tfont-size: 17px;\n-\tmargin: 30px 0 20px 0;\n+\tmargin: 30px 10px 20px 10px;\n \ttext-align: center;\n \tword-wrap: break-word;\n }\n@@ -220,7 +218,7 @@ nav.sub {\n .location a:first-child { font-weight: 500; }\n \n .block {\n-\tpadding: 0 10px;\n+\tpadding: 0;\n \tmargin-bottom: 14px;\n }\n .block h2, .block h3 {\n@@ -229,7 +227,7 @@ nav.sub {\n \ttext-align: center;\n }\n .block ul, .block li {\n-\tmargin: 0;\n+\tmargin: 0 10px;\n \tpadding: 0;\n \tlist-style: none;\n }\n@@ -245,6 +243,23 @@ nav.sub {\n \ttransition: border 500ms ease-out;\n }\n \n+.sidebar-title {\n+\tborder-top: 1px solid #777;\n+\tborder-bottom: 1px solid #777;\n+\ttext-align: center;\n+\tfont-size: 17px;\n+\tmargin-bottom: 5px;\n+}\n+\n+.sidebar-links {\n+\tmargin-bottom: 15px;\n+}\n+\n+.sidebar-links > a {\n+\tpadding-left: 10px;\n+\twidth: 100%;\n+}\n+\n .content {\n \tpadding: 15px 0;\n }"}]}