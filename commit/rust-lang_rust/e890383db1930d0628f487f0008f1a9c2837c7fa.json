{"sha": "e890383db1930d0628f487f0008f1a9c2837c7fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4OTAzODNkYjE5MzBkMDYyOGY0ODdmMDAwOGYxYTljMjgzN2M3ZmE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-23T00:27:57Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-23T00:29:23Z"}, "message": "stdlib: Add a convenience method for opening paths as a FILE", "tree": {"sha": "bc2283a5c3e977b6fb45ba40439793f8762de008", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc2283a5c3e977b6fb45ba40439793f8762de008"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e890383db1930d0628f487f0008f1a9c2837c7fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e890383db1930d0628f487f0008f1a9c2837c7fa", "html_url": "https://github.com/rust-lang/rust/commit/e890383db1930d0628f487f0008f1a9c2837c7fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e890383db1930d0628f487f0008f1a9c2837c7fa/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a251343fabe5fbb02481f042f38d3a401601ccb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a251343fabe5fbb02481f042f38d3a401601ccb6", "html_url": "https://github.com/rust-lang/rust/commit/a251343fabe5fbb02481f042f38d3a401601ccb6"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "80597ea275a92a3198206571f9d32d261172e0a0", "filename": "src/lib/io.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e890383db1930d0628f487f0008f1a9c2837c7fa/src%2Flib%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e890383db1930d0628f487f0008f1a9c2837c7fa/src%2Flib%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fio.rs?ref=e890383db1930d0628f487f0008f1a9c2837c7fa", "patch": "@@ -266,6 +266,16 @@ fn file_writer(str path, vec[fileflag] flags) -> writer {\n     ret new_writer(file_buf_writer(path, flags));\n }\n \n+// TODO: fileflags\n+fn buffered_file_buf_writer(str path) -> buf_writer {\n+    auto f = os.libc.fopen(_str.buf(path), _str.buf(\"w\"));\n+    if (f as uint == 0u) {\n+        log \"error opening \" + path;\n+        fail;\n+    }\n+    ret FILE_writer(f, true);\n+}\n+\n // FIXME it would be great if this could be a const\n fn stdout() -> writer {\n     ret new_writer(fd_buf_writer(1, false));"}]}