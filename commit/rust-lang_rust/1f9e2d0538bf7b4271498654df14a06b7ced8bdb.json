{"sha": "1f9e2d0538bf7b4271498654df14a06b7ced8bdb", "node_id": "C_kwDOAAsO6NoAKDFmOWUyZDA1MzhiZjdiNDI3MTQ5ODY1NGRmMTRhMDZiN2NlZDhiZGI", "commit": {"author": {"name": "Patrik K\u00e5rlin", "email": "patrik.karlin@gmail.com", "date": "2023-03-30T13:46:34Z"}, "committer": {"name": "Patrik K\u00e5rlin", "email": "patrik.karlin@gmail.com", "date": "2023-03-30T13:46:34Z"}, "message": "rustdoc: tidy excess whitespace", "tree": {"sha": "162b2704c56bad43d6b56bae43da315b89bce26d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/162b2704c56bad43d6b56bae43da315b89bce26d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f9e2d0538bf7b4271498654df14a06b7ced8bdb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgh2d+T/QMoKuxUQmn1LuLfU+BwZ\nEuSNYGnaFxqueP1i8AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQAV4LenxvD0tY7YLOHgLT7Af/U9B9RDgQAOnFFlb4sa9Y1MztZgS3tOXuaT2k4NS/4\nDutw4TRHPkld6duIP5bAg=\n-----END SSH SIGNATURE-----", "payload": "tree 162b2704c56bad43d6b56bae43da315b89bce26d\nparent df556a31774781ef645e286ee3ccaa816622f95a\nauthor Patrik K\u00e5rlin <patrik.karlin@gmail.com> 1680183994 +0200\ncommitter Patrik K\u00e5rlin <patrik.karlin@gmail.com> 1680183994 +0200\n\nrustdoc: tidy excess whitespace\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f9e2d0538bf7b4271498654df14a06b7ced8bdb", "html_url": "https://github.com/rust-lang/rust/commit/1f9e2d0538bf7b4271498654df14a06b7ced8bdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f9e2d0538bf7b4271498654df14a06b7ced8bdb/comments", "author": {"login": "megakorre", "id": 208460, "node_id": "MDQ6VXNlcjIwODQ2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/208460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/megakorre", "html_url": "https://github.com/megakorre", "followers_url": "https://api.github.com/users/megakorre/followers", "following_url": "https://api.github.com/users/megakorre/following{/other_user}", "gists_url": "https://api.github.com/users/megakorre/gists{/gist_id}", "starred_url": "https://api.github.com/users/megakorre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/megakorre/subscriptions", "organizations_url": "https://api.github.com/users/megakorre/orgs", "repos_url": "https://api.github.com/users/megakorre/repos", "events_url": "https://api.github.com/users/megakorre/events{/privacy}", "received_events_url": "https://api.github.com/users/megakorre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "megakorre", "id": 208460, "node_id": "MDQ6VXNlcjIwODQ2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/208460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/megakorre", "html_url": "https://github.com/megakorre", "followers_url": "https://api.github.com/users/megakorre/followers", "following_url": "https://api.github.com/users/megakorre/following{/other_user}", "gists_url": "https://api.github.com/users/megakorre/gists{/gist_id}", "starred_url": "https://api.github.com/users/megakorre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/megakorre/subscriptions", "organizations_url": "https://api.github.com/users/megakorre/orgs", "repos_url": "https://api.github.com/users/megakorre/repos", "events_url": "https://api.github.com/users/megakorre/events{/privacy}", "received_events_url": "https://api.github.com/users/megakorre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df556a31774781ef645e286ee3ccaa816622f95a", "url": "https://api.github.com/repos/rust-lang/rust/commits/df556a31774781ef645e286ee3ccaa816622f95a", "html_url": "https://github.com/rust-lang/rust/commit/df556a31774781ef645e286ee3ccaa816622f95a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "8f4172c0cbbbf8d30be44eb696917fa67af8df24", "filename": "tests/rustdoc-ui/issue-105742.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1f9e2d0538bf7b4271498654df14a06b7ced8bdb/tests%2Frustdoc-ui%2Fissue-105742.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f9e2d0538bf7b4271498654df14a06b7ced8bdb/tests%2Frustdoc-ui%2Fissue-105742.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissue-105742.rs?ref=1f9e2d0538bf7b4271498654df14a06b7ced8bdb", "patch": "@@ -6,30 +6,30 @@ pub fn next<'a, T>(s: &'a mut dyn SVec<Item = T, Output = T>) {\n     //~| expected 1 generic argument\n     //~| the trait `SVec` cannot be made into an object\n     //~| `SVec` cannot be made into an object\n-    //~| missing generics for associated type `SVec::Item` \n+    //~| missing generics for associated type `SVec::Item`\n     //~| missing generics for associated type `SVec::Item`\n     let _ = s;\n }\n \n pub trait SVec: Index<\n     <Self as SVec>::Item,\n     //~^ expected 1 lifetime argument\n-    //~| expected 1 generic argument \n+    //~| expected 1 generic argument\n     //~| missing generics for associated type `SVec::Item`\n     //~| missing generics for associated type `SVec::Item`\n     //~| missing generics for associated type `SVec::Item`\n     //~| missing generics for associated type `SVec::Item`\n     Output = <Index<<Self as SVec>::Item,\n     //~^ expected 1 lifetime argument\n     //~| expected 1 generic argument\n-    //~| missing generics for associated type `SVec::Item` \n+    //~| missing generics for associated type `SVec::Item`\n     //~| missing generics for associated type `SVec::Item`\n     //~| missing generics for associated type `SVec::Item`\n     //~| missing generics for associated type `SVec::Item`\n     Output = <Self as SVec>::Item> as SVec>::Item,\n     //~^ expected 1 lifetime argument\n     //~| expected 1 generic argument\n-    //~| expected 1 lifetime argument \n+    //~| expected 1 lifetime argument\n     //~| missing generics for associated type `SVec::Item`\n     //~| missing generics for associated type `SVec::Item`\n     //~| missing generics for associated type `SVec::Item`"}]}