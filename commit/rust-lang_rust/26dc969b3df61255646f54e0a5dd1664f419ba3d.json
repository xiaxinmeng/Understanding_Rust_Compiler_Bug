{"sha": "26dc969b3df61255646f54e0a5dd1664f419ba3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZGM5NjliM2RmNjEyNTU2NDZmNTRlMGE1ZGQxNjY0ZjQxOWJhM2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-10T02:45:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-10T02:45:37Z"}, "message": "Auto merge of #38934 - Manishearth:nodrop, r=eddyb\n\nRemove destructor-related restrictions from unions\n\nThey don't have drop glue.\n\nThis doesn't fix the rvalue promotion issues when trying to do things like `static FOO: NoDrop<Bar> = NoDrop {inner: Bar}`. I'm not sure if we should fix that.", "tree": {"sha": "40effe36a5f2cbd7a9e3b938c70201046dcd6eef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40effe36a5f2cbd7a9e3b938c70201046dcd6eef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26dc969b3df61255646f54e0a5dd1664f419ba3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26dc969b3df61255646f54e0a5dd1664f419ba3d", "html_url": "https://github.com/rust-lang/rust/commit/26dc969b3df61255646f54e0a5dd1664f419ba3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26dc969b3df61255646f54e0a5dd1664f419ba3d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76bc5e1c800eedc7cc3729dc6529ea196822d2bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/76bc5e1c800eedc7cc3729dc6529ea196822d2bf", "html_url": "https://github.com/rust-lang/rust/commit/76bc5e1c800eedc7cc3729dc6529ea196822d2bf"}, {"sha": "b9b0732d2a8bfed04d3102706f8d03ad5709b4a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9b0732d2a8bfed04d3102706f8d03ad5709b4a0", "html_url": "https://github.com/rust-lang/rust/commit/b9b0732d2a8bfed04d3102706f8d03ad5709b4a0"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "ed5b470849c41f4ef948c095443cee2ba0e974f2", "filename": "src/librustc/ty/contents.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26dc969b3df61255646f54e0a5dd1664f419ba3d/src%2Flibrustc%2Fty%2Fcontents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26dc969b3df61255646f54e0a5dd1664f419ba3d/src%2Flibrustc%2Fty%2Fcontents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontents.rs?ref=26dc969b3df61255646f54e0a5dd1664f419ba3d", "patch": "@@ -235,6 +235,11 @@ impl<'a, 'tcx> ty::TyS<'tcx> {\n                             })\n                         });\n \n+                    if def.is_union() {\n+                        // unions don't have destructors regardless of the child types\n+                        res = res - TC::NeedsDrop;\n+                    }\n+\n                     if def.has_dtor() {\n                         res = res | TC::OwnsDtor;\n                     }"}, {"sha": "22f00be3066dcbeb81f0011715542b20e723a55d", "filename": "src/test/run-pass/union/union-nodrop.rs", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/26dc969b3df61255646f54e0a5dd1664f419ba3d/src%2Ftest%2Frun-pass%2Funion%2Funion-nodrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26dc969b3df61255646f54e0a5dd1664f419ba3d/src%2Ftest%2Frun-pass%2Funion%2Funion-nodrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Funion-nodrop.rs?ref=26dc969b3df61255646f54e0a5dd1664f419ba3d", "patch": "@@ -0,0 +1,63 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(core_intrinsics)]\n+#![feature(untagged_unions)]\n+\n+#![allow(unions_with_drop_fields)]\n+#![allow(dead_code)]\n+\n+use std::intrinsics::needs_drop;\n+\n+// drop types in destructors should not require\n+// drop_types_in_const\n+static X: Option<NoDrop<Box<u8>>> = None;\n+\n+// A union that scrubs the drop glue from its inner type\n+union NoDrop<T> {inner: T}\n+\n+// Copy currently can't be implemented on drop-containing unions,\n+// this may change later\n+// https://github.com/rust-lang/rust/pull/38934#issuecomment-271219289\n+\n+// // We should be able to implement Copy for NoDrop\n+// impl<T> Copy for NoDrop<T> {}\n+// impl<T> Clone for NoDrop<T> {fn clone(&self) -> Self { *self }}\n+\n+// // We should be able to implement Copy for things using NoDrop\n+// #[derive(Copy, Clone)]\n+struct Foo {\n+    x: NoDrop<Box<u8>>\n+}\n+\n+struct Baz {\n+    x: NoDrop<Box<u8>>,\n+    y: Box<u8>,\n+}\n+\n+union ActuallyDrop<T> {inner: T}\n+\n+impl<T> Drop for ActuallyDrop<T> {\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {\n+    unsafe {\n+        // NoDrop should not make needs_drop true\n+        assert!(!needs_drop::<Foo>());\n+        assert!(!needs_drop::<NoDrop<u8>>());\n+        assert!(!needs_drop::<NoDrop<Box<u8>>>());\n+        // presence of other drop types should still work\n+        assert!(needs_drop::<Baz>());\n+        // drop impl on union itself should work\n+        assert!(needs_drop::<ActuallyDrop<u8>>());\n+        assert!(needs_drop::<ActuallyDrop<Box<u8>>>());\n+    }\n+}"}]}