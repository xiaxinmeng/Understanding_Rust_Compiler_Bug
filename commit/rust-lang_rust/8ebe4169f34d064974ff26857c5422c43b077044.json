{"sha": "8ebe4169f34d064974ff26857c5422c43b077044", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlYmU0MTY5ZjM0ZDA2NDk3NGZmMjY4NTdjNTQyMmM0M2IwNzcwNDQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2012-01-19T03:43:03Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2012-01-19T03:43:03Z"}, "message": "Merge pull request #1564 from elly/cargo\n\n[cargo] refactor test_one_crate", "tree": {"sha": "ad89ff4d5f7d159c8769b70aab538dae407aee70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad89ff4d5f7d159c8769b70aab538dae407aee70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ebe4169f34d064974ff26857c5422c43b077044", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ebe4169f34d064974ff26857c5422c43b077044", "html_url": "https://github.com/rust-lang/rust/commit/8ebe4169f34d064974ff26857c5422c43b077044", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ebe4169f34d064974ff26857c5422c43b077044/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ce288d5aa976428950cd76882a1ae5cee1ca245", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ce288d5aa976428950cd76882a1ae5cee1ca245", "html_url": "https://github.com/rust-lang/rust/commit/1ce288d5aa976428950cd76882a1ae5cee1ca245"}, {"sha": "4bd713bb8410d4711fe01377a687cd5a595e2dca", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd713bb8410d4711fe01377a687cd5a595e2dca", "html_url": "https://github.com/rust-lang/rust/commit/4bd713bb8410d4711fe01377a687cd5a595e2dca"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "c5cfca01b8af145117681daa32694f372e6cd839", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 26, "deletions": 12, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/8ebe4169f34d064974ff26857c5422c43b077044/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ebe4169f34d064974ff26857c5422c43b077044/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=8ebe4169f34d064974ff26857c5422c43b077044", "patch": "@@ -357,23 +357,37 @@ fn for_each_package(c: cargo, b: block(source, package)) {\n \n // FIXME: deduplicate code with install_one_crate\n fn test_one_crate(c: cargo, _path: str, cf: str, _p: pkg) {\n-    let name = fs::basename(cf);\n-    let ri = str::index(name, '.' as u8);\n-    if ri != -1 {\n-        name = str::slice(name, 0u, ri as uint);\n-    }\n-    #debug(\"Installing: %s\", name);\n-    let old = fs::list_dir(\".\");\n-    let p = run::program_output(\"rustc\", [\"--test\", name + \".rc\"]);\n+    let buildpath = fs::connect(_path, \"/test\");\n+    need_dir(buildpath);\n+    #debug(\"Testing: %s -> %s\", cf, buildpath);\n+    let p = run::program_output(\"rustc\", [\"--out-dir\", buildpath, \"--test\",\n+                                          cf]);\n+    if p.status != 0 {\n+        error(#fmt[\"rustc failed: %d\\n%s\\n%s\", p.status, p.err, p.out]);\n+        ret;\n+    }\n+    let new = fs::list_dir(buildpath);\n+    let exec_suffix = os::exec_suffix();\n+    for ct: str in new {\n+        if (exec_suffix != \"\" && str::ends_with(ct, exec_suffix)) ||\n+            (exec_suffix == \"\" && !str::starts_with(ct, \"./lib\")) {\n+            run::run_program(ct, []);\n+        }\n+    }\n+}\n+\n+fn install_one_crate(c: cargo, _path: str, cf: str, _p: pkg) {\n+    let buildpath = fs::connect(_path, \"/build\");\n+    need_dir(buildpath);\n+    #debug(\"Installing: %s -> %s\", cf, buildpath);\n+    let p = run::program_output(\"rustc\", [\"--out-dir\", buildpath, cf]);\n     if p.status != 0 {\n         error(#fmt[\"rustc failed: %d\\n%s\\n%s\", p.status, p.err, p.out]);\n         ret;\n     }\n-    let new = fs::list_dir(\".\");\n-    let created =\n-        vec::filter::<str>(new, { |n| !vec::member::<str>(n, old) });\n+    let new = fs::list_dir(buildpath);\n     let exec_suffix = os::exec_suffix();\n-    for ct: str in created {\n+    for ct: str in new {\n         if (exec_suffix != \"\" && str::ends_with(ct, exec_suffix)) ||\n             (exec_suffix == \"\" && !str::starts_with(ct, \"./lib\")) {\n             // FIXME: need libstd fs::copy or something"}]}