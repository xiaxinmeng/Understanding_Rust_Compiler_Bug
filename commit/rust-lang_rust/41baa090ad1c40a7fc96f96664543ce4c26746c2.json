{"sha": "41baa090ad1c40a7fc96f96664543ce4c26746c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxYmFhMDkwYWQxYzQwYTdmYzk2Zjk2NjY0NTQzY2U0YzI2NzQ2YzI=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-09-27T01:43:19Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-10-01T04:58:13Z"}, "message": "Skip dropck::check_drop_impl in is_const_item_without_destructor\n\nadt_destructor by default also validates the Drop impl using\ndropck::check_drop_impl, which contains an expect_local(). This\nleads to ICE in check_const_item_mutation if the const's type is\nnot a local type.\n\n    thread 'rustc' panicked at 'DefId::expect_local: `DefId(5:4805 ~ alloc[d7e9]::vec::{impl#50})` isn't local', compiler/rustc_span/src/def_id.rs:174:43\n    stack backtrace:\n       0: rust_begin_unwind\n       1: rustc_span::def_id::DefId::expect_local::{{closure}}\n       2: rustc_typeck::check::dropck::check_drop_impl\n       3: rustc_middle::ty::util::<impl rustc_middle::ty::context::TyCtxt>::calculate_dtor::{{closure}}\n       4: rustc_middle::ty::trait_def::<impl rustc_middle::ty::context::TyCtxt>::for_each_relevant_impl\n       5: rustc_middle::ty::util::<impl rustc_middle::ty::context::TyCtxt>::calculate_dtor\n       6: rustc_typeck::check::adt_destructor\n       7: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::adt_destructor>::compute\n       8: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\n       9: rustc_query_system::query::plumbing::get_query_impl\n      10: rustc_mir::transform::check_const_item_mutation::ConstMutationChecker::is_const_item_without_destructor", "tree": {"sha": "b0e594ee19363d2e783669c865e942cd71b0ee8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0e594ee19363d2e783669c865e942cd71b0ee8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41baa090ad1c40a7fc96f96664543ce4c26746c2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAl91YeUACgkQ+boUO5X/\nbYKi5Q/+P5seXWGkKnTgImc/hYNX0RAscG88T5WhPXNbxXgT87Te/C3fEyVNKEhX\nQdiQC6xk23priaDqVhOWm0k5O7bZlwhwPgJiZ50sYyaLyfI4DZvzpctQySzAh1km\nipeUJO968xRgj5mvhNulnB4oD1mY/m8TWkKvtqkl9i0P8msfdNLz5oGuRFXOFdZL\nn0CsuHhXreQ0kLq0JAcrIrTer+JtYdfsoPG6SB15EHOVmlh3hmfTFUWct+WL4m6v\nwcqrCqGRRCG//aHrPCiW9ctLzzajC+ksDfmVD3o4bsdihUJN9u64IzPmQYReWEuM\nQJwV24rlJu+xfypNI/y+eZxKkY8N5L5mBM2Cm9hZqZyCJkJBjvVziuf0niU18wjQ\ndYnyPtsdLUnlUqKdaq/xTwaVtMa14WzCKvF9+zlBga9iasjuTp7yq7tb1vuGN1B4\nvM6lhTSqZpnmLWQlfODk/obbywnYrVFBMygmZwXbEuo70Ige1D6H0NjnqDPWRBRb\nP3h1nT2vcWkfdhuzt0ZhfojPpFh6P1OIsp5rxF4hhA1PmMTzqwPjOP344m3ngMm6\nEM68P5ks1ukW+o2VyiQWFXb+8xhHeVsYFdFnILy/QuoSM26ldb5kXTWU5W3TNidh\nzA4srS/wcP6c7E6pRj63RcwYup9BjygxovtSQk29zenGZn8IMyE=\n=blYf\n-----END PGP SIGNATURE-----", "payload": "tree b0e594ee19363d2e783669c865e942cd71b0ee8a\nparent 352ce8b29990d62465675b46b42a695a4206d5be\nauthor David Tolnay <dtolnay@gmail.com> 1601170999 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1601528293 -0700\n\nSkip dropck::check_drop_impl in is_const_item_without_destructor\n\nadt_destructor by default also validates the Drop impl using\ndropck::check_drop_impl, which contains an expect_local(). This\nleads to ICE in check_const_item_mutation if the const's type is\nnot a local type.\n\n    thread 'rustc' panicked at 'DefId::expect_local: `DefId(5:4805 ~ alloc[d7e9]::vec::{impl#50})` isn't local', compiler/rustc_span/src/def_id.rs:174:43\n    stack backtrace:\n       0: rust_begin_unwind\n       1: rustc_span::def_id::DefId::expect_local::{{closure}}\n       2: rustc_typeck::check::dropck::check_drop_impl\n       3: rustc_middle::ty::util::<impl rustc_middle::ty::context::TyCtxt>::calculate_dtor::{{closure}}\n       4: rustc_middle::ty::trait_def::<impl rustc_middle::ty::context::TyCtxt>::for_each_relevant_impl\n       5: rustc_middle::ty::util::<impl rustc_middle::ty::context::TyCtxt>::calculate_dtor\n       6: rustc_typeck::check::adt_destructor\n       7: rustc_middle::ty::query::<impl rustc_query_system::query::config::QueryAccessors<rustc_middle::ty::context::TyCtxt> for rustc_middle::ty::query::queries::adt_destructor>::compute\n       8: rustc_query_system::dep_graph::graph::DepGraph<K>::with_task_impl\n       9: rustc_query_system::query::plumbing::get_query_impl\n      10: rustc_mir::transform::check_const_item_mutation::ConstMutationChecker::is_const_item_without_destructor\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41baa090ad1c40a7fc96f96664543ce4c26746c2", "html_url": "https://github.com/rust-lang/rust/commit/41baa090ad1c40a7fc96f96664543ce4c26746c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41baa090ad1c40a7fc96f96664543ce4c26746c2/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "352ce8b29990d62465675b46b42a695a4206d5be", "url": "https://api.github.com/repos/rust-lang/rust/commits/352ce8b29990d62465675b46b42a695a4206d5be", "html_url": "https://github.com/rust-lang/rust/commit/352ce8b29990d62465675b46b42a695a4206d5be"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "98477b032372ec2f0574a335b2deae737da0c7b6", "filename": "compiler/rustc_mir/src/transform/check_const_item_mutation.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/41baa090ad1c40a7fc96f96664543ce4c26746c2/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_const_item_mutation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41baa090ad1c40a7fc96f96664543ce4c26746c2/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_const_item_mutation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_const_item_mutation.rs?ref=41baa090ad1c40a7fc96f96664543ce4c26746c2", "patch": "@@ -34,6 +34,7 @@ impl<'a, 'tcx> ConstMutationChecker<'a, 'tcx> {\n \n     fn is_const_item_without_destructor(&self, local: Local) -> Option<DefId> {\n         let def_id = self.is_const_item(local)?;\n+        let mut any_dtor = |_tcx, _def_id| Ok(());\n \n         // We avoid linting mutation of a const item if the const's type has a\n         // Drop impl. The Drop logic observes the mutation which was performed.\n@@ -46,7 +47,7 @@ impl<'a, 'tcx> ConstMutationChecker<'a, 'tcx> {\n         //\n         //     LOG.msg = \"wow\";  // prints \"wow\"\n         //\n-        match self.tcx.adt_destructor(def_id) {\n+        match self.tcx.calculate_dtor(def_id, &mut any_dtor) {\n             Some(_) => None,\n             None => Some(def_id),\n         }"}]}