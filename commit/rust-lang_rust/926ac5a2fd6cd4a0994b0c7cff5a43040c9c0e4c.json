{"sha": "926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyNmFjNWEyZmQ2Y2Q0YTA5OTRiMGM3Y2ZmNWE0MzA0MGM5YzBlNGM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-07-04T17:47:06Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-07-18T10:04:41Z"}, "message": "rustc_metadata: Remove some extra diagnostics for legacy plugins\n\nThey are deprecated so doing extra work for error recovery doesn't make sense", "tree": {"sha": "e8e010891c0568e84f6400a9b02d58f533d0be21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8e010891c0568e84f6400a9b02d58f533d0be21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c", "html_url": "https://github.com/rust-lang/rust/commit/926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de03a12675fe923a02589ce05afec8682194bfef", "url": "https://api.github.com/repos/rust-lang/rust/commits/de03a12675fe923a02589ce05afec8682194bfef", "html_url": "https://github.com/rust-lang/rust/commit/de03a12675fe923a02589ce05afec8682194bfef"}], "stats": {"total": 45, "additions": 8, "deletions": 37}, "files": [{"sha": "bbbd8359f0126b229ccf8f6f9bd79082a8819c2b", "filename": "src/librustc_error_codes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c/src%2Flibrustc_error_codes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c/src%2Flibrustc_error_codes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes.rs?ref=926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c", "patch": "@@ -554,7 +554,7 @@ E0770: include_str!(\"./error_codes/E0770.md\"),\n //  E0420, merged into 532\n //  E0421, merged into 531\n //  E0427, merged into 530\n-    E0456, // plugin `..` is not available for triple `..`\n+//  E0456, // plugin `..` is not available for triple `..`\n     E0457, // plugin `..` only found in rlib format, but must be available...\n     E0460, // found possibly newer version of crate `..`\n     E0461, // couldn't find crate `..` with expected target triple .."}, {"sha": "dfdedc9f27538f5285d45716d051f1c56fcc02df", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 2, "deletions": 31, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c", "patch": "@@ -1014,10 +1014,6 @@ pub fn find_plugin_registrar(\n     name: Symbol,\n ) -> Option<(PathBuf, CrateDisambiguator)> {\n     info!(\"find plugin registrar `{}`\", name);\n-    let target_triple = sess.opts.target_triple.clone();\n-    let host_triple = TargetTriple::from_triple(config::host_triple());\n-    let is_cross = target_triple != host_triple;\n-    let mut target_only = false;\n     let mut locator = CrateLocator::new(\n         sess,\n         metadata_loader,\n@@ -1032,36 +1028,11 @@ pub fn find_plugin_registrar(\n         None, // is_proc_macro\n     );\n \n-    let library = locator.maybe_load_library_crate().or_else(|| {\n-        if !is_cross {\n-            return None;\n-        }\n-        // Try loading from target crates. This will abort later if we\n-        // try to load a plugin registrar function,\n-        target_only = true;\n-\n-        locator.target = &sess.target.target;\n-        locator.triple = target_triple;\n-        locator.filesearch = sess.target_filesearch(PathKind::Crate);\n-\n-        locator.maybe_load_library_crate()\n-    });\n-    let library = match library {\n-        Some(l) => l,\n+    let library = match locator.maybe_load_library_crate() {\n+        Some(library) => library,\n         None => locator.report_errs(),\n     };\n \n-    if target_only {\n-        let message = format!(\n-            \"plugin `{}` is not available for triple `{}` (only found {})\",\n-            name,\n-            config::host_triple(),\n-            sess.opts.target_triple\n-        );\n-        struct_span_err!(sess, span, E0456, \"{}\", &message).emit();\n-        return None;\n-    }\n-\n     match library.source.dylib {\n         Some(dylib) => Some((dylib.0, library.metadata.get_root().disambiguator())),\n         None => {"}, {"sha": "51f135d37616125ad1b2e4a18aacf28631327c30", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=926ac5a2fd6cd4a0994b0c7cff5a43040c9c0e4c", "patch": "@@ -8,11 +8,11 @@ use std::path::Path;\n \n // A few of those error codes can't be tested but all the others can and *should* be tested!\n const EXEMPTED_FROM_TEST: &[&str] = &[\n-    \"E0183\", \"E0227\", \"E0279\", \"E0280\", \"E0311\", \"E0313\", \"E0314\", \"E0315\", \"E0377\", \"E0456\",\n-    \"E0461\", \"E0462\", \"E0464\", \"E0465\", \"E0472\", \"E0473\", \"E0474\", \"E0475\", \"E0476\", \"E0479\",\n-    \"E0480\", \"E0481\", \"E0482\", \"E0483\", \"E0484\", \"E0485\", \"E0486\", \"E0487\", \"E0488\", \"E0489\",\n-    \"E0514\", \"E0519\", \"E0523\", \"E0553\", \"E0554\", \"E0570\", \"E0629\", \"E0630\", \"E0640\", \"E0717\",\n-    \"E0727\", \"E0729\",\n+    \"E0183\", \"E0227\", \"E0279\", \"E0280\", \"E0311\", \"E0313\", \"E0314\", \"E0315\", \"E0377\", \"E0461\",\n+    \"E0462\", \"E0464\", \"E0465\", \"E0472\", \"E0473\", \"E0474\", \"E0475\", \"E0476\", \"E0479\", \"E0480\",\n+    \"E0481\", \"E0482\", \"E0483\", \"E0484\", \"E0485\", \"E0486\", \"E0487\", \"E0488\", \"E0489\", \"E0514\",\n+    \"E0519\", \"E0523\", \"E0553\", \"E0554\", \"E0570\", \"E0629\", \"E0630\", \"E0640\", \"E0717\", \"E0727\",\n+    \"E0729\",\n ];\n \n // Some error codes don't have any tests apparently..."}]}