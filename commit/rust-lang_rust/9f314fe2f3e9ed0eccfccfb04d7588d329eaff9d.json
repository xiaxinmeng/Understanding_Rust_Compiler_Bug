{"sha": "9f314fe2f3e9ed0eccfccfb04d7588d329eaff9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmMzE0ZmUyZjNlOWVkMGVjY2ZjY2ZiMDRkNzU4OGQzMjllYWZmOWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-08T01:33:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-08T01:33:58Z"}, "message": "Rollup merge of #61621 - Mark-Simulacrum:bootstrap-run-only-hosts, r=alexcrichton\n\nClarify when we run steps with ONLY_HOSTS\n\nJust some simple cleanup, no behavior changes.\n\nr? @alexcrichton", "tree": {"sha": "cf7506814d204f0b2df6dc4d76fcc5f9390f1164", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf7506814d204f0b2df6dc4d76fcc5f9390f1164"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f314fe2f3e9ed0eccfccfb04d7588d329eaff9d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc+xCGCRBK7hj4Ov3rIwAAdHIIAFsR2GKxu0ANmbbnHK6nxPpC\na2cs3ucmVE5bWc9KX1jqEdh/0nIqWmQf01PNI93N9pWqYB0jX2K1q/OTBLqWYo8O\nnO46Kw0T4HmU860W/cUJ0mLKa/BbTCaFRce/nyGpJSq85BfflfmWHt7tvu9frgBI\nglNw8Oj92sAYlbpGC80pIQkpY6iNg39CB2L+Jtri5/aglaXeHvc6TLtRJXgAMUp9\nO3SpWZsgErWxFrZu2Ol7L80iy/lod1ObHAB8EbuzYTnskEEMb0hZaZRFT9JUtca1\nfSjSe4cGtt+sCr/xhr5+iSegBudvXkb5q0KFSX+Wb+yzuEw/+MUzqJ+9wd0STIA=\n=prkx\n-----END PGP SIGNATURE-----\n", "payload": "tree cf7506814d204f0b2df6dc4d76fcc5f9390f1164\nparent ae487e04c89fe5295ed674cf08f0a86123304572\nparent 367b031d881cdb1f4fb6bd77f3d71a827ccd9735\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1559957638 +0200\ncommitter GitHub <noreply@github.com> 1559957638 +0200\n\nRollup merge of #61621 - Mark-Simulacrum:bootstrap-run-only-hosts, r=alexcrichton\n\nClarify when we run steps with ONLY_HOSTS\n\nJust some simple cleanup, no behavior changes.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f314fe2f3e9ed0eccfccfb04d7588d329eaff9d", "html_url": "https://github.com/rust-lang/rust/commit/9f314fe2f3e9ed0eccfccfb04d7588d329eaff9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f314fe2f3e9ed0eccfccfb04d7588d329eaff9d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae487e04c89fe5295ed674cf08f0a86123304572", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae487e04c89fe5295ed674cf08f0a86123304572", "html_url": "https://github.com/rust-lang/rust/commit/ae487e04c89fe5295ed674cf08f0a86123304572"}, {"sha": "367b031d881cdb1f4fb6bd77f3d71a827ccd9735", "url": "https://api.github.com/repos/rust-lang/rust/commits/367b031d881cdb1f4fb6bd77f3d71a827ccd9735", "html_url": "https://github.com/rust-lang/rust/commit/367b031d881cdb1f4fb6bd77f3d71a827ccd9735"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "2281a45e014a9cb0d89ddb4004bc8ae01c274076", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9f314fe2f3e9ed0eccfccfb04d7588d329eaff9d/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f314fe2f3e9ed0eccfccfb04d7588d329eaff9d/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=9f314fe2f3e9ed0eccfccfb04d7588d329eaff9d", "patch": "@@ -59,7 +59,7 @@ pub trait Step: 'static + Clone + Debug + PartialEq + Eq + Hash {\n \n     const DEFAULT: bool = false;\n \n-    /// Run this rule for all hosts without cross compiling.\n+    /// If true, then this rule should be skipped if --target was specified, but --host was not\n     const ONLY_HOSTS: bool = false;\n \n     /// Primary function to execute this rule. Can call `builder.ensure()`\n@@ -163,7 +163,7 @@ impl StepDescription {\n \n         // Determine the targets participating in this rule.\n         let targets = if self.only_hosts {\n-            if !builder.config.run_host_only {\n+            if builder.config.skip_only_host_steps {\n                 return; // don't run anything\n             } else {\n                 &builder.hosts\n@@ -1338,7 +1338,7 @@ mod __test {\n         let mut config = Config::default_opts();\n         // don't save toolstates\n         config.save_toolstates = None;\n-        config.run_host_only = true;\n+        config.skip_only_host_steps = false;\n         config.dry_run = true;\n         // try to avoid spurious failures in dist where we create/delete each others file\n         let dir = config.out.join(\"tmp-rustbuild-tests\").join(\n@@ -1583,7 +1583,7 @@ mod __test {\n     #[test]\n     fn dist_with_target_flag() {\n         let mut config = configure(&[\"B\"], &[\"C\"]);\n-        config.run_host_only = false; // as-if --target=C was passed\n+        config.skip_only_host_steps = true; // as-if --target=C was passed\n         let build = Build::new(config);\n         let mut builder = Builder::new(&build);\n         builder.run_step_descriptions(&Builder::get_step_descriptions(Kind::Dist), &[]);\n@@ -1831,7 +1831,7 @@ mod __test {\n     #[test]\n     fn build_with_target_flag() {\n         let mut config = configure(&[\"B\"], &[\"C\"]);\n-        config.run_host_only = false;\n+        config.skip_only_host_steps = true;\n         let build = Build::new(config);\n         let mut builder = Builder::new(&build);\n         builder.run_step_descriptions(&Builder::get_step_descriptions(Kind::Build), &[]);"}, {"sha": "66f504ea924e9b880b525ea47409d29db868286e", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f314fe2f3e9ed0eccfccfb04d7588d329eaff9d/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f314fe2f3e9ed0eccfccfb04d7588d329eaff9d/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=9f314fe2f3e9ed0eccfccfb04d7588d329eaff9d", "patch": "@@ -51,7 +51,7 @@ pub struct Config {\n     pub test_compare_mode: bool,\n     pub llvm_libunwind: bool,\n \n-    pub run_host_only: bool,\n+    pub skip_only_host_steps: bool,\n \n     pub on_fail: Option<String>,\n     pub stage: Option<u32>,\n@@ -416,7 +416,9 @@ impl Config {\n         }\n \n         // If --target was specified but --host wasn't specified, don't run any host-only tests.\n-        config.run_host_only = !(flags.host.is_empty() && !flags.target.is_empty());\n+        let has_hosts = !flags.host.is_empty();\n+        let has_targets = !flags.target.is_empty();\n+        config.skip_only_host_steps = !has_hosts && has_targets;\n \n         let toml = file.map(|file| {\n             let contents = t!(fs::read_to_string(&file));"}]}