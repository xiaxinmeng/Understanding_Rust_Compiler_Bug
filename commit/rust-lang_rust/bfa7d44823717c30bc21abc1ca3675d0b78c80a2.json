{"sha": "bfa7d44823717c30bc21abc1ca3675d0b78c80a2", "node_id": "C_kwDOAAsO6NoAKGJmYTdkNDQ4MjM3MTdjMzBiYzIxYWJjMWNhMzY3NWQwYjc4YzgwYTI", "commit": {"author": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2022-02-27T08:48:17Z"}, "committer": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2022-02-27T08:48:17Z"}, "message": "fix box icing when it has aggregate abi", "tree": {"sha": "346f9e6b4d595e4dc2b8f32327bf3f9b0aadcc03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/346f9e6b4d595e4dc2b8f32327bf3f9b0aadcc03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfa7d44823717c30bc21abc1ca3675d0b78c80a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfa7d44823717c30bc21abc1ca3675d0b78c80a2", "html_url": "https://github.com/rust-lang/rust/commit/bfa7d44823717c30bc21abc1ca3675d0b78c80a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfa7d44823717c30bc21abc1ca3675d0b78c80a2/comments", "author": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cbc6c35e4b0c948114619a1c883a75b731d32c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cbc6c35e4b0c948114619a1c883a75b731d32c5", "html_url": "https://github.com/rust-lang/rust/commit/6cbc6c35e4b0c948114619a1c883a75b731d32c5"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "aee385ab050e4cd08725e985de4c9274c7a04955", "filename": "compiler/rustc_codegen_ssa/src/mir/place.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bfa7d44823717c30bc21abc1ca3675d0b78c80a2/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa7d44823717c30bc21abc1ca3675d0b78c80a2/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fplace.rs?ref=bfa7d44823717c30bc21abc1ca3675d0b78c80a2", "patch": "@@ -453,7 +453,18 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         };\n         for elem in place_ref.projection[base..].iter() {\n             cg_base = match elem.clone() {\n-                mir::ProjectionElem::Deref => bx.load_operand(cg_base).deref(bx.cx()),\n+                mir::ProjectionElem::Deref => {\n+                    // custom allocators can change box's abi, making it unable to be derefed directly\n+                    if cg_base.layout.ty.is_box()\n+                        && matches!(cg_base.layout.abi, Abi::Aggregate { .. })\n+                    {\n+                        let ptr = cg_base.project_field(bx, 0).project_field(bx, 0);\n+\n+                        bx.load_operand(ptr).deref(bx.cx())\n+                    } else {\n+                        bx.load_operand(cg_base).deref(bx.cx())\n+                    }\n+                }\n                 mir::ProjectionElem::Field(ref field, _) => {\n                     cg_base.project_field(bx, field.index())\n                 }"}, {"sha": "fb42aed7aaebf0869f8e0a31a7e5313506e05a75", "filename": "src/test/ui/box/issue-81270-ice.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bfa7d44823717c30bc21abc1ca3675d0b78c80a2/src%2Ftest%2Fui%2Fbox%2Fissue-81270-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa7d44823717c30bc21abc1ca3675d0b78c80a2/src%2Ftest%2Fui%2Fbox%2Fissue-81270-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbox%2Fissue-81270-ice.rs?ref=bfa7d44823717c30bc21abc1ca3675d0b78c80a2", "patch": "@@ -0,0 +1,22 @@\n+// check-pass\n+#![feature(allocator_api)]\n+\n+use std::alloc::Allocator;\n+\n+struct BigAllocator([usize; 2]);\n+\n+unsafe impl Allocator for BigAllocator {\n+    fn allocate(\n+        &self,\n+        _: std::alloc::Layout,\n+    ) -> Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError> {\n+        todo!()\n+    }\n+    unsafe fn deallocate(&self, _: std::ptr::NonNull<u8>, _: std::alloc::Layout) {\n+        todo!()\n+    }\n+}\n+\n+fn main() {\n+    Box::new_in((), BigAllocator([0; 2]));\n+}"}]}