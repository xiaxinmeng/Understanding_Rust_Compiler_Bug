{"sha": "ab7d76965168f1104488549feaebd24ffa69b3b7", "node_id": "C_kwDOAAsO6NoAKGFiN2Q3Njk2NTE2OGYxMTA0NDg4NTQ5ZmVhZWJkMjRmZmE2OWIzYjc", "commit": {"author": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-11-21T23:38:50Z"}, "committer": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-12-17T13:32:13Z"}, "message": "poll rustfmt child processes", "tree": {"sha": "486d1226a4b0541c84374a4f1f767e384a20aa5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/486d1226a4b0541c84374a4f1f767e384a20aa5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab7d76965168f1104488549feaebd24ffa69b3b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab7d76965168f1104488549feaebd24ffa69b3b7", "html_url": "https://github.com/rust-lang/rust/commit/ab7d76965168f1104488549feaebd24ffa69b3b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab7d76965168f1104488549feaebd24ffa69b3b7/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5620afc4e088beb299dfdcc3c3a903ac1f80cc9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5620afc4e088beb299dfdcc3c3a903ac1f80cc9f", "html_url": "https://github.com/rust-lang/rust/commit/5620afc4e088beb299dfdcc3c3a903ac1f80cc9f"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "b2f6afead798088e12ae27425b354540ea6c302b", "filename": "src/bootstrap/format.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ab7d76965168f1104488549feaebd24ffa69b3b7/src%2Fbootstrap%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab7d76965168f1104488549feaebd24ffa69b3b7/src%2Fbootstrap%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fformat.rs?ref=ab7d76965168f1104488549feaebd24ffa69b3b7", "patch": "@@ -8,7 +8,7 @@ use std::path::{Path, PathBuf};\n use std::process::{Command, Stdio};\n use std::sync::mpsc::SyncSender;\n \n-fn rustfmt(src: &Path, rustfmt: &Path, paths: &[PathBuf], check: bool) -> impl FnMut() {\n+fn rustfmt(src: &Path, rustfmt: &Path, paths: &[PathBuf], check: bool) -> impl FnMut(bool) -> bool {\n     let mut cmd = Command::new(&rustfmt);\n     // avoid the submodule config paths from coming into play,\n     // we only allow a single global config for the workspace for now\n@@ -23,7 +23,13 @@ fn rustfmt(src: &Path, rustfmt: &Path, paths: &[PathBuf], check: bool) -> impl F\n     let cmd_debug = format!(\"{:?}\", cmd);\n     let mut cmd = cmd.spawn().expect(\"running rustfmt\");\n     // poor man's async: return a closure that'll wait for rustfmt's completion\n-    move || {\n+    move |block: bool| -> bool {\n+        if !block {\n+            match cmd.try_wait() {\n+                Ok(Some(_)) => {}\n+                _ => return false,\n+            }\n+        }\n         let status = cmd.wait().unwrap();\n         if !status.success() {\n             eprintln!(\n@@ -34,6 +40,7 @@ fn rustfmt(src: &Path, rustfmt: &Path, paths: &[PathBuf], check: bool) -> impl F\n             );\n             crate::detail_exit(1);\n         }\n+        true\n     }\n }\n \n@@ -146,15 +153,23 @@ pub fn format(build: &Builder<'_>, check: bool, paths: &[PathBuf]) {\n             let child = rustfmt(&src, &rustfmt_path, paths.as_slice(), check);\n             children.push_back(child);\n \n+            // poll completion before waiting\n+            for i in (0..children.len()).rev() {\n+                if children[i](false) {\n+                    children.swap_remove_back(i);\n+                    break;\n+                }\n+            }\n+\n             if children.len() >= max_processes {\n                 // await oldest child\n-                children.pop_front().unwrap()();\n+                children.pop_front().unwrap()(true);\n             }\n         }\n \n         // await remaining children\n         for mut child in children {\n-            child();\n+            child(true);\n         }\n     });\n "}]}