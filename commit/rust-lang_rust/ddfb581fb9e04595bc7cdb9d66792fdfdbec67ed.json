{"sha": "ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkZmI1ODFmYjllMDQ1OTViYzdjZGI5ZDY2NzkyZmRmZGJlYzY3ZWQ=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-29T01:25:41Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-29T02:13:55Z"}, "message": "Move `src/test/rustdoc` intra-doc link tests into a subdirectory\n\nThey were starting to get unwieldy.", "tree": {"sha": "ecf43b905627276e664d79d7ab93bba72f899fad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecf43b905627276e664d79d7ab93bba72f899fad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "html_url": "https://github.com/rust-lang/rust/commit/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e37f25aa3f356546ab851e394d5598fc575eabda", "url": "https://api.github.com/repos/rust-lang/rust/commits/e37f25aa3f356546ab851e394d5598fc575eabda", "html_url": "https://github.com/rust-lang/rust/commit/e37f25aa3f356546ab851e394d5598fc575eabda"}], "stats": {"total": 512, "additions": 254, "deletions": 258}, "files": [{"sha": "bd733e1023033963bcfc483e17ab37884f19d654", "filename": "src/test/rustdoc/intra-doc-link-mod-ambiguity.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-doc-link-mod-ambiguity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-doc-link-mod-ambiguity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc-link-mod-ambiguity.rs?ref=e37f25aa3f356546ab851e394d5598fc575eabda", "patch": "@@ -1,18 +0,0 @@\n-// ignore-tidy-linelength\n-\n-#![deny(broken_intra_doc_links)]\n-\n-\n-pub fn foo() {\n-\n-}\n-\n-pub mod foo {}\n-// @has intra_doc_link_mod_ambiguity/struct.A.html '//a/@href' '../intra_doc_link_mod_ambiguity/foo/index.html'\n-/// Module is [`module@foo`]\n-pub struct A;\n-\n-\n-// @has intra_doc_link_mod_ambiguity/struct.B.html '//a/@href' '../intra_doc_link_mod_ambiguity/fn.foo.html'\n-/// Function is [`fn@foo`]\n-pub struct B;"}, {"sha": "e4f0c737bdd3312be648ff318704194405ee7574", "filename": "src/test/rustdoc/intra-doc/anchors.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fanchors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fanchors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fanchors.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -3,8 +3,8 @@\n /// # Anchor!\n pub struct Something;\n \n-// @has intra_links_anchors/struct.SomeOtherType.html\n-// @has - '//a/@href' '../intra_links_anchors/struct.Something.html#Anchor!'\n+// @has anchors/struct.SomeOtherType.html\n+// @has - '//a/@href' '../anchors/struct.Something.html#Anchor!'\n \n /// I want...\n ///", "previous_filename": "src/test/rustdoc/intra-links-anchors.rs"}, {"sha": "f99d9b5baea4421108217cfc613eb10e001bd728", "filename": "src/test/rustdoc/intra-doc/associated-defaults.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-defaults.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -0,0 +1,27 @@\n+// ignore-tidy-linelength\n+#![deny(intra_doc_link_resolution_failure)]\n+#![feature(associated_type_defaults)]\n+\n+pub trait TraitWithDefault {\n+    type T = usize;\n+    fn f() -> Self::T {\n+        0\n+    }\n+}\n+\n+/// Link to [UsesDefaults::T] and [UsesDefaults::f]\n+// @has 'associated_defaults/struct.UsesDefaults.html' '//a[@href=\"../associated_defaults/struct.UsesDefaults.html#associatedtype.T\"]' 'UsesDefaults::T'\n+// @has 'associated_defaults/struct.UsesDefaults.html' '//a[@href=\"../associated_defaults/struct.UsesDefaults.html#method.f\"]' 'UsesDefaults::f'\n+pub struct UsesDefaults;\n+impl TraitWithDefault for UsesDefaults {}\n+\n+/// Link to [OverridesDefaults::T] and [OverridesDefaults::f]\n+// @has 'associated_defaults/struct.OverridesDefaults.html' '//a[@href=\"../associated_defaults/struct.OverridesDefaults.html#associatedtype.T\"]' 'OverridesDefaults::T'\n+// @has 'associated_defaults/struct.OverridesDefaults.html' '//a[@href=\"../associated_defaults/struct.OverridesDefaults.html#method.f\"]' 'OverridesDefaults::f'\n+pub struct OverridesDefaults;\n+impl TraitWithDefault for OverridesDefaults {\n+    type T = bool;\n+    fn f() -> bool {\n+        true\n+    }\n+}"}, {"sha": "09dfbfcf68a32f1c45a448a4512f3d32fe676917", "filename": "src/test/rustdoc/intra-doc/associated-items.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -0,0 +1,61 @@\n+// ignore-tidy-linelength\n+#![deny(intra_doc_link_resolution_failure)]\n+\n+/// [`std::collections::BTreeMap::into_iter`]\n+/// [`String::from`] is ambiguous as to which `From` impl\n+/// [Vec::into_iter()] uses a disambiguator\n+// @has 'associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/collections/btree/map/struct.BTreeMap.html#method.into_iter\"]' 'std::collections::BTreeMap::into_iter'\n+// @has 'associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html#method.from\"]' 'String::from'\n+// @has 'associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.into_iter\"]' 'Vec::into_iter'\n+pub fn foo() {}\n+\n+/// Link to [MyStruct], [link from struct][MyStruct::method], [MyStruct::clone], [MyStruct::Input]\n+// @has 'associated_items/struct.MyStruct.html' '//a[@href=\"../associated_items/struct.MyStruct.html\"]' 'MyStruct'\n+// @has 'associated_items/struct.MyStruct.html' '//a[@href=\"../associated_items/struct.MyStruct.html#method.method\"]' 'link from struct'\n+// @has 'associated_items/struct.MyStruct.html' '//a[@href=\"../associated_items/struct.MyStruct.html#method.clone\"]' 'MyStruct::clone'\n+// @has 'associated_items/struct.MyStruct.html' '//a[@href=\"../associated_items/struct.MyStruct.html#associatedtype.Input\"]' 'MyStruct::Input'\n+pub struct MyStruct { foo: () }\n+\n+impl Clone for MyStruct {\n+    fn clone(&self) -> Self {\n+        MyStruct\n+    }\n+}\n+\n+pub trait T {\n+    type Input;\n+    fn method(i: Self::Input);\n+}\n+\n+impl T for MyStruct {\n+    type Input = usize;\n+\n+    /// [link from method][MyStruct::method] on method\n+    // @has 'associated_items/struct.MyStruct.html' '//a[@href=\"../associated_items/struct.MyStruct.html#method.method\"]' 'link from method'\n+    fn method(i: usize) {\n+    }\n+}\n+\n+/// Ambiguity between which trait to use\n+pub trait T1 {\n+    fn ambiguous_method();\n+}\n+\n+pub trait T2 {\n+    fn ambiguous_method();\n+}\n+\n+/// Link to [S::ambiguous_method]\n+// FIXME: there is no way to disambiguate these.\n+// Since we have `#[deny(intra_doc_failure)]`, we still know it was one or the other.\n+pub struct S;\n+\n+impl T1 for S {\n+    fn ambiguous_method() {}\n+}\n+\n+impl T2 for S {\n+    fn ambiguous_method() {}\n+}\n+\n+fn main() {}"}, {"sha": "db3bb38ada0da9bda76e35202fd4fe0931e0557a", "filename": "src/test/rustdoc/intra-doc/auxiliary/intra-link-extern-crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-extern-crate.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/auxiliary/intra-link-extern-crate.rs"}, {"sha": "a4db2ffc445f8f9562681bd7cecd275c9a83c78e", "filename": "src/test/rustdoc/intra-doc/auxiliary/intra-link-pub-use.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-pub-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-pub-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-pub-use.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/auxiliary/intra-link-pub-use.rs"}, {"sha": "fc51995a94eccc7724f30c13a1a98f3c92269093", "filename": "src/test/rustdoc/intra-doc/auxiliary/intra-link-reexport-additional-docs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-reexport-additional-docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-reexport-additional-docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-link-reexport-additional-docs.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/auxiliary/intra-link-reexport-additional-docs.rs"}, {"sha": "6142dcda986cf0b951a30a664ce56685fa7e8349", "filename": "src/test/rustdoc/intra-doc/auxiliary/intra-links-external-traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-links-external-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-links-external-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fintra-links-external-traits.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/auxiliary/intra-links-external-traits.rs"}, {"sha": "54e986be9eccf2b2094796f2e68a9471070a3ebb", "filename": "src/test/rustdoc/intra-doc/auxiliary/my-core.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fmy-core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fmy-core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fmy-core.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/auxiliary/my-core.rs"}, {"sha": "5ba132f25b4710b6c4e0345b52193e3f8f93601e", "filename": "src/test/rustdoc/intra-doc/auxiliary/proc-macro-macro.rs", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fproc-macro-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fproc-macro-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fproc-macro-macro.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -3,7 +3,6 @@\n // compile-flags: --crate-type proc-macro\n \n #![crate_type=\"proc-macro\"]\n-#![crate_name=\"intra_link_proc_macro_macro\"]\n \n extern crate proc_macro;\n ", "previous_filename": "src/test/rustdoc/auxiliary/intra-link-proc-macro-macro.rs"}, {"sha": "5c4a01ee3a74a5e18c59c10b6a318e73da165447", "filename": "src/test/rustdoc/intra-doc/auxiliary/through-proc-macro-aux.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fthrough-proc-macro-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fthrough-proc-macro-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fauxiliary%2Fthrough-proc-macro-aux.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/auxiliary/through-proc-macro-aux.rs"}, {"sha": "7760546e1fa1cf288efff0c6676ff4ba49eaca0c", "filename": "src/test/rustdoc/intra-doc/basic.rs", "status": "renamed", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbasic.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -1,21 +1,21 @@\n-// @has intra_links/index.html\n-// @has - '//a/@href' '../intra_links/struct.ThisType.html'\n-// @has - '//a/@href' '../intra_links/struct.ThisType.html#method.this_method'\n-// @has - '//a/@href' '../intra_links/enum.ThisEnum.html'\n-// @has - '//a/@href' '../intra_links/enum.ThisEnum.html#variant.ThisVariant'\n-// @has - '//a/@href' '../intra_links/trait.ThisTrait.html'\n-// @has - '//a/@href' '../intra_links/trait.ThisTrait.html#tymethod.this_associated_method'\n-// @has - '//a/@href' '../intra_links/trait.ThisTrait.html#associatedtype.ThisAssociatedType'\n-// @has - '//a/@href' '../intra_links/trait.ThisTrait.html#associatedconstant.THIS_ASSOCIATED_CONST'\n-// @has - '//a/@href' '../intra_links/trait.ThisTrait.html'\n-// @has - '//a/@href' '../intra_links/type.ThisAlias.html'\n-// @has - '//a/@href' '../intra_links/union.ThisUnion.html'\n-// @has - '//a/@href' '../intra_links/fn.this_function.html'\n-// @has - '//a/@href' '../intra_links/constant.THIS_CONST.html'\n-// @has - '//a/@href' '../intra_links/static.THIS_STATIC.html'\n-// @has - '//a/@href' '../intra_links/macro.this_macro.html'\n-// @has - '//a/@href' '../intra_links/trait.SoAmbiguous.html'\n-// @has - '//a/@href' '../intra_links/fn.SoAmbiguous.html'\n+// @has basic/index.html\n+// @has - '//a/@href' '../basic/struct.ThisType.html'\n+// @has - '//a/@href' '../basic/struct.ThisType.html#method.this_method'\n+// @has - '//a/@href' '../basic/enum.ThisEnum.html'\n+// @has - '//a/@href' '../basic/enum.ThisEnum.html#variant.ThisVariant'\n+// @has - '//a/@href' '../basic/trait.ThisTrait.html'\n+// @has - '//a/@href' '../basic/trait.ThisTrait.html#tymethod.this_associated_method'\n+// @has - '//a/@href' '../basic/trait.ThisTrait.html#associatedtype.ThisAssociatedType'\n+// @has - '//a/@href' '../basic/trait.ThisTrait.html#associatedconstant.THIS_ASSOCIATED_CONST'\n+// @has - '//a/@href' '../basic/trait.ThisTrait.html'\n+// @has - '//a/@href' '../basic/type.ThisAlias.html'\n+// @has - '//a/@href' '../basic/union.ThisUnion.html'\n+// @has - '//a/@href' '../basic/fn.this_function.html'\n+// @has - '//a/@href' '../basic/constant.THIS_CONST.html'\n+// @has - '//a/@href' '../basic/static.THIS_STATIC.html'\n+// @has - '//a/@href' '../basic/macro.this_macro.html'\n+// @has - '//a/@href' '../basic/trait.SoAmbiguous.html'\n+// @has - '//a/@href' '../basic/fn.SoAmbiguous.html'\n //! In this crate we would like to link to:\n //!\n //! * [`ThisType`](ThisType)\n@@ -46,7 +46,7 @@ macro_rules! this_macro {\n     () => {};\n }\n \n-// @has intra_links/struct.ThisType.html '//a/@href' '../intra_links/macro.this_macro.html'\n+// @has basic/struct.ThisType.html '//a/@href' '../basic/macro.this_macro.html'\n /// another link to [`this_macro!()`]\n pub struct ThisType;\n \n@@ -72,10 +72,10 @@ pub trait SoAmbiguous {}\n pub fn SoAmbiguous() {}\n \n \n-// @has intra_links/struct.SomeOtherType.html '//a/@href' '../intra_links/struct.ThisType.html'\n-// @has - '//a/@href' '../intra_links/struct.ThisType.html#method.this_method'\n-// @has - '//a/@href' '../intra_links/enum.ThisEnum.html'\n-// @has - '//a/@href' '../intra_links/enum.ThisEnum.html#variant.ThisVariant'\n+// @has basic/struct.SomeOtherType.html '//a/@href' '../basic/struct.ThisType.html'\n+// @has - '//a/@href' '../basic/struct.ThisType.html#method.this_method'\n+// @has - '//a/@href' '../basic/enum.ThisEnum.html'\n+// @has - '//a/@href' '../basic/enum.ThisEnum.html#variant.ThisVariant'\n /// Shortcut links for:\n /// * [`ThisType`]\n /// * [`ThisType::this_method`]", "previous_filename": "src/test/rustdoc/intra-links.rs"}, {"sha": "74216a587e1da6f30129d22bcabc81e3cad1e49f", "filename": "src/test/rustdoc/intra-doc/builtin-macros.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbuiltin-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbuiltin-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fbuiltin-macros.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -1,3 +1,3 @@\n-// @has intra_link_builtin_macros/index.html\n+// @has builtin_macros/index.html\n // @has - '//a/@href' 'https://doc.rust-lang.org/nightly/core/macro.cfg.html'\n //! [cfg]", "previous_filename": "src/test/rustdoc/intra-link-builtin-macros.rs"}, {"sha": "837390b3c716102a0005a5a0a4eca8169f7fd1db", "filename": "src/test/rustdoc/intra-doc/cross-crate/additional_doc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fadditional_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fadditional_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fadditional_doc.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/additional_doc.rs"}, {"sha": "849d25687337b7f0af342659dc9fe893512bd783", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/additional_doc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fadditional_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fadditional_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fadditional_doc.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/additional_doc.rs"}, {"sha": "b543ae764c05bb9a014c74c66007dbc4985fe6c1", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/hidden.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fhidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fhidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fhidden.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/hidden.rs"}, {"sha": "5342baecbc4b89aa16cd1b11c0cd6ea279ca4fbb", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/intra-doc-basic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fintra-doc-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fintra-doc-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fintra-doc-basic.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/intra-doc-basic.rs"}, {"sha": "a37848e23d9931a27e52cb00cb230b2490fcc3e0", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/intra-link-cross-crate-crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fintra-link-cross-crate-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fintra-link-cross-crate-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fintra-link-cross-crate-crate.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/auxiliary/intra-link-cross-crate-crate.rs"}, {"sha": "a94f9e5dcca2ec5421f286e3ade6932038d556d1", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/macro_inner.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fmacro_inner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fmacro_inner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fmacro_inner.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/macro_inner.rs"}, {"sha": "b7e3913f108f7553d089dfd1885d29f430532d56", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/module.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fmodule.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/module.rs"}, {"sha": "0d5a954075df22c24bc813c3bccd7aaf6c2ac7ca", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/proc_macro.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fproc_macro.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/proc_macro.rs"}, {"sha": "8ae0f6c16b3d8113e67d8412c2207b3dfe9c0297", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/submodule-inner.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fsubmodule-inner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fsubmodule-inner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fsubmodule-inner.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/submodule-inner.rs"}, {"sha": "d90c529e3855280415bf0a2a7a65fa176e2d4f74", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/submodule-outer.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fsubmodule-outer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fsubmodule-outer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Fsubmodule-outer.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/submodule-outer.rs"}, {"sha": "c16e39d56f3d0d80dcb2b41e6457270ee18e0d9b", "filename": "src/test/rustdoc/intra-doc/cross-crate/auxiliary/traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fauxiliary%2Ftraits.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/auxiliary/traits.rs"}, {"sha": "6ab9140c3c385c85ae472281e65d76334df43a2b", "filename": "src/test/rustdoc/intra-doc/cross-crate/basic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fbasic.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/basic.rs"}, {"sha": "edf544708b628e9bcd081f5a3a26f2bf2bdd777c", "filename": "src/test/rustdoc/intra-doc/cross-crate/crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fcrate.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-link-cross-crate-crate.rs"}, {"sha": "9c9d4c649455ebe3c82c1088b9d0539d3985550d", "filename": "src/test/rustdoc/intra-doc/cross-crate/hidden.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fhidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fhidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fhidden.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/hidden.rs"}, {"sha": "311b16dff13bc67260c4942d353037000e0aa209", "filename": "src/test/rustdoc/intra-doc/cross-crate/macro.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmacro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmacro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmacro.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/macro.rs"}, {"sha": "9039e344f7b003711a1a7a60785f29683437d235", "filename": "src/test/rustdoc/intra-doc/cross-crate/module.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmodule.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/module.rs"}, {"sha": "e1465816368bf178ed9fd2e3b8e4faeaed08458e", "filename": "src/test/rustdoc/intra-doc/cross-crate/submodule-inner.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fsubmodule-inner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fsubmodule-inner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fsubmodule-inner.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/submodule-inner.rs"}, {"sha": "45f561328f279040293c625f41f678f86b1be403", "filename": "src/test/rustdoc/intra-doc/cross-crate/submodule-outer.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fsubmodule-outer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fsubmodule-outer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fsubmodule-outer.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/submodule-outer.rs"}, {"sha": "07decb48019da26c168cbcc031ba6df4f48e4bb7", "filename": "src/test/rustdoc/intra-doc/cross-crate/traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Ftraits.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-crate/traits.rs"}, {"sha": "aa0ced62aaf30bea333a6f35ed0582b6a41eb24d", "filename": "src/test/rustdoc/intra-doc/disambiguators-removed.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fdisambiguators-removed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fdisambiguators-removed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fdisambiguators-removed.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -0,0 +1,51 @@\n+// ignore-tidy-linelength\n+#![deny(intra_doc_link_resolution_failure)]\n+// first try backticks\n+/// Trait: [`trait@Name`], fn: [`fn@Name`], [`Name`][`macro@Name`]\n+// @has disambiguators_removed/struct.AtDisambiguator.html\n+// @has - '//a[@href=\"../disambiguators_removed/trait.Name.html\"][code]' \"Name\"\n+// @has - '//a[@href=\"../disambiguators_removed/fn.Name.html\"][code]' \"Name\"\n+// @has - '//a[@href=\"../disambiguators_removed/macro.Name.html\"][code]' \"Name\"\n+pub struct AtDisambiguator;\n+\n+/// fn: [`Name()`], macro: [`Name!`]\n+// @has disambiguators_removed/struct.SymbolDisambiguator.html\n+// @has - '//a[@href=\"../disambiguators_removed/fn.Name.html\"][code]' \"Name()\"\n+// @has - '//a[@href=\"../disambiguators_removed/macro.Name.html\"][code]' \"Name!\"\n+pub struct SymbolDisambiguator;\n+\n+// Now make sure that backticks aren't added if they weren't already there\n+/// [fn@Name]\n+// @has disambiguators_removed/trait.Name.html\n+// @has - '//a[@href=\"../disambiguators_removed/fn.Name.html\"]' \"Name\"\n+// @!has - '//a[@href=\"../disambiguators_removed/fn.Name.html\"][code]' \"Name\"\n+\n+// FIXME: this will turn !() into ! alone\n+/// [Name!()]\n+// @has - '//a[@href=\"../disambiguators_removed/macro.Name.html\"]' \"Name!\"\n+pub trait Name {}\n+\n+#[allow(non_snake_case)]\n+\n+// Try collapsed reference links\n+/// [macro@Name][]\n+// @has disambiguators_removed/fn.Name.html\n+// @has - '//a[@href=\"../disambiguators_removed/macro.Name.html\"]' \"Name\"\n+\n+// Try links that have the same text as a generated URL\n+/// Weird URL aligned [../disambiguators_removed/macro.Name.html][trait@Name]\n+// @has - '//a[@href=\"../disambiguators_removed/trait.Name.html\"]' \"../disambiguators_removed/macro.Name.html\"\n+pub fn Name() {}\n+\n+#[macro_export]\n+// Rustdoc doesn't currently handle links that have weird interspersing of inline code blocks.\n+/// [fn@Na`m`e]\n+// @has disambiguators_removed/macro.Name.html\n+// @has - '//a[@href=\"../disambiguators_removed/fn.Name.html\"]' \"fn@Name\"\n+\n+// It also doesn't handle any case where the code block isn't the whole link text:\n+/// [trait@`Name`]\n+// @has - '//a[@href=\"../disambiguators_removed/trait.Name.html\"]' \"trait@Name\"\n+macro_rules! Name {\n+    () => ()\n+}"}, {"sha": "70bf343a9a5e5a144950de51f51e3767bce088ff", "filename": "src/test/rustdoc/intra-doc/enum-struct-field.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fenum-struct-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fenum-struct-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fenum-struct-field.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-link-enum-struct-field.rs"}, {"sha": "193bca704bfbdffca4c18f58a174672715aec34d", "filename": "src/test/rustdoc/intra-doc/extern-crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-crate.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-link-extern-crate.rs"}, {"sha": "e1934698d1fadce81e0f04bed9b727333e6c0f5c", "filename": "src/test/rustdoc/intra-doc/extern-type.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-type.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -0,0 +1,17 @@\n+#![feature(extern_types)]\n+\n+extern {\n+    pub type ExternType;\n+}\n+\n+impl ExternType {\n+    pub fn f(&self) {\n+\n+    }\n+}\n+\n+// @has 'extern_type/foreigntype.ExternType.html'\n+// @has 'extern_type/fn.links_to_extern_type.html' \\\n+// 'href=\"../extern_type/foreigntype.ExternType.html#method.f\"'\n+/// See also [ExternType::f]\n+pub fn links_to_extern_type() {}"}, {"sha": "de76f29476c66818f8268035716ea855fb9897e7", "filename": "src/test/rustdoc/intra-doc/external-traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fexternal-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fexternal-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fexternal-traits.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-links-external-traits.rs"}, {"sha": "1de6410f10c430c2c4520d639349230a7f22112d", "filename": "src/test/rustdoc/intra-doc/generic-params.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-params.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-link-generic-params.rs"}, {"sha": "ec965a99dc240039c4e83cb80d0e02861f32d53f", "filename": "src/test/rustdoc/intra-doc/in-bodies.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fin-bodies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fin-bodies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fin-bodies.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-link-in-bodies.rs"}, {"sha": "d0af3aec6609782384c90afa9f80d5c263f68575", "filename": "src/test/rustdoc/intra-doc/libstd-re-export.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Flibstd-re-export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Flibstd-re-export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Flibstd-re-export.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-link-libstd-re-export.rs"}, {"sha": "feb013b22be65a7569333a883aafc00350793bc1", "filename": "src/test/rustdoc/intra-doc/mod-ambiguity.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fmod-ambiguity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fmod-ambiguity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fmod-ambiguity.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -0,0 +1,16 @@\n+#![deny(broken_intra_doc_links)]\n+\n+\n+pub fn foo() {\n+\n+}\n+\n+pub mod foo {}\n+// @has mod_ambiguity/struct.A.html '//a/@href' '../mod_ambiguity/foo/index.html'\n+/// Module is [`module@foo`]\n+pub struct A;\n+\n+\n+// @has mod_ambiguity/struct.B.html '//a/@href' '../mod_ambiguity/fn.foo.html'\n+/// Function is [`fn@foo`]\n+pub struct B;"}, {"sha": "d687cbd69bb18007186c6f12566bb5efe1dd4a8a", "filename": "src/test/rustdoc/intra-doc/prim-assoc.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-assoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-assoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-assoc.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -0,0 +1,5 @@\n+// ignore-tidy-linelength\n+#![deny(broken_intra_doc_links)]\n+\n+//! [i32::MAX]\n+// @has prim_assoc/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html#associatedconstant.MAX\"]' \"i32::MAX\""}, {"sha": "434e03389835fd552e1776d6089a3f9b0c990c3a", "filename": "src/test/rustdoc/intra-doc/prim-methods-external-core.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-external-core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-external-core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-external-core.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -9,7 +9,7 @@\n #![no_core]\n #![crate_type = \"rlib\"]\n \n-// @has intra_link_prim_methods_external_core/index.html\n+// @has prim_methods_external_core/index.html\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html#method.len_utf8\"]' 'char::len_utf8'\n ", "previous_filename": "src/test/rustdoc/intra-link-prim-methods-external-core.rs"}, {"sha": "9888f29db5bacc85cc09f2ad6ce6857513a2c0c0", "filename": "src/test/rustdoc/intra-doc/prim-methods-local.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-local.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -5,7 +5,7 @@\n \n // ignore-tidy-linelength\n \n-// @has intra_link_prim_methods_local/index.html\n+// @has prim_methods_local/index.html\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html#method.len_utf8\"]' 'char::len_utf8'\n ", "previous_filename": "src/test/rustdoc/intra-link-prim-methods-local.rs"}, {"sha": "f19cff7d34afa5d78730fc6a0da3e5738ddc3239", "filename": "src/test/rustdoc/intra-doc/prim-methods.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -2,7 +2,7 @@\n \n // ignore-tidy-linelength\n \n-// @has intra_link_prim_methods/index.html\n+// @has prim_methods/index.html\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html#method.len_utf8\"]' 'char::len_utf8'\n ", "previous_filename": "src/test/rustdoc/intra-link-prim-methods.rs"}, {"sha": "ed2c2cda7184dfa7df85be95e747d96eaec192e3", "filename": "src/test/rustdoc/intra-doc/prim-precedence.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-precedence.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -0,0 +1,17 @@\n+// ignore-tidy-linelength\n+#![deny(broken_intra_doc_links)]\n+\n+pub mod char {\n+    /// [char]\n+    // @has prim_precedence/char/struct.Inner.html '//a/@href' 'https://doc.rust-lang.org/nightly/std/primitive.char.html'\n+    pub struct Inner;\n+}\n+\n+/// See [prim@char]\n+// @has prim_precedence/struct.MyString.html '//a/@href' 'https://doc.rust-lang.org/nightly/std/primitive.char.html'\n+pub struct MyString;\n+\n+/// See also [crate::char] and [mod@char]\n+// @has prim_precedence/struct.MyString2.html '//*[@href=\"../prim_precedence/char/index.html\"]' 'crate::char'\n+// @has - '//*[@href=\"../prim_precedence/char/index.html\"]' 'mod@char'\n+pub struct MyString2;"}, {"sha": "548eb090a32762267f0f5248971faadf6484db47", "filename": "src/test/rustdoc/intra-doc/primitive-non-default-impl.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-non-default-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-non-default-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-non-default-impl.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -2,7 +2,7 @@\n \n // ignore-tidy-linelength\n \n-// @has intra_link_primitive_non_default_impl/fn.str_methods.html\n+// @has primitive_non_default_impl/fn.str_methods.html\n /// [`str::trim`]\n // @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html#method.trim\"]' 'str::trim'\n /// [`str::to_lowercase`]\n@@ -13,7 +13,7 @@\n // @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html#method.replace\"]' 'str::replace'\n pub fn str_methods() {}\n \n-// @has intra_link_primitive_non_default_impl/fn.f32_methods.html\n+// @has primitive_non_default_impl/fn.f32_methods.html\n /// [f32::powi]\n // @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html#method.powi\"]' 'f32::powi'\n /// [f32::sqrt]\n@@ -22,7 +22,7 @@ pub fn str_methods() {}\n // @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.f32.html#method.mul_add\"]' 'f32::mul_add'\n pub fn f32_methods() {}\n \n-// @has intra_link_primitive_non_default_impl/fn.f64_methods.html\n+// @has primitive_non_default_impl/fn.f64_methods.html\n /// [`f64::powi`]\n // @has - '//*[@href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html#method.powi\"]' 'f64::powi'\n /// [`f64::sqrt`]", "previous_filename": "src/test/rustdoc/intra-link-primitive-non-default-impl.rs"}, {"sha": "cf8bc0b15869f469a97066101c0ed14a5851dfce", "filename": "src/test/rustdoc/intra-doc/private-failures-ignored.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprivate-failures-ignored.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprivate-failures-ignored.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprivate-failures-ignored.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-link-private.rs"}, {"sha": "f86ca44403d93e42ae9b752d7bb3fdc588263ded", "filename": "src/test/rustdoc/intra-doc/private.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprivate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprivate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprivate.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-link-private.rs"}, {"sha": "ab4626ccfc3abfd4e46d87427a03f358d7035481", "filename": "src/test/rustdoc/intra-doc/proc-macro.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fproc-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fproc-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fproc-macro.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -0,0 +1,27 @@\n+// aux-build:proc-macro-macro.rs\n+// build-aux-docs\n+#![deny(broken_intra_doc_links)]\n+\n+extern crate proc_macro_macro;\n+\n+\n+pub use proc_macro_macro::{DeriveA, attr_a};\n+use proc_macro_macro::{DeriveB, attr_b};\n+\n+// @has proc_macro/struct.Foo.html\n+// @has - '//a/@href' '../proc_macro/derive.DeriveA.html'\n+// @has - '//a/@href' '../proc_macro/attr.attr_a.html'\n+// @has - '//a/@href' '../proc_macro/trait.DeriveTrait.html'\n+// @has - '//a/@href' '../proc_macro_macro/derive.DeriveB.html'\n+// @has - '//a/@href' '../proc_macro_macro/attr.attr_b.html'\n+/// Link to [DeriveA], [attr_a], [DeriveB], [attr_b], [DeriveTrait]\n+pub struct Foo;\n+\n+// @has proc_macro/struct.Bar.html\n+// @has - '//a/@href' '../proc_macro/derive.DeriveA.html'\n+// @has - '//a/@href' '../proc_macro/attr.attr_a.html'\n+/// Link to [deriveA](derive@DeriveA) [attr](macro@attr_a)\n+pub struct Bar;\n+\n+// this should not cause ambiguity errors\n+pub trait DeriveTrait {}"}, {"sha": "dd52249abc6d0ad27cab524bd0c82325ba7fa7e5", "filename": "src/test/rustdoc/intra-doc/pub-use.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fpub-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fpub-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fpub-use.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-link-pub-use.rs"}, {"sha": "96f3580f3055e8e2405fbfb5627c4c59ecb42f65", "filename": "src/test/rustdoc/intra-doc/reexport-additional-docs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Freexport-additional-docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Freexport-additional-docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Freexport-additional-docs.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-link-reexport-additional-docs.rs"}, {"sha": "81545fec7411bc0654e6bf399f135759f6e5f1e8", "filename": "src/test/rustdoc/intra-doc/self.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fself.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fself.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fself.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-link-self.rs"}, {"sha": "613410871f0d1c237e56b76ab59d81124cbbbfd5", "filename": "src/test/rustdoc/intra-doc/through-proc-macro.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fthrough-proc-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Fthrough-proc-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fthrough-proc-macro.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/through-proc-macro.rs"}, {"sha": "fab8406d525e5f83ca18ccd341b735ae2ad05d08", "filename": "src/test/rustdoc/intra-doc/trait-impl.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-impl.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-link-trait-impl.rs"}, {"sha": "de8585f4c9a781e9ea8b2541591234db95f94209", "filename": "src/test/rustdoc/intra-doc/trait-item.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-item.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "patch": "@@ -3,7 +3,7 @@\n \n /// Link to [S::assoc_fn()]\n /// Link to [Default::default()]\n-// @has intra_link_trait_item/struct.S.html '//*[@href=\"../intra_link_trait_item/struct.S.html#method.assoc_fn\"]' 'S::assoc_fn()'\n+// @has trait_item/struct.S.html '//*[@href=\"../trait_item/struct.S.html#method.assoc_fn\"]' 'S::assoc_fn()'\n // @has - '//*[@href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\"]' 'Default::default()'\n pub struct S;\n ", "previous_filename": "src/test/rustdoc/intra-link-trait-item.rs"}, {"sha": "7b21e9341474032b84064337a3d4280ea20b5752", "filename": "src/test/rustdoc/intra-doc/true-false.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrue-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrue-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrue-false.rs?ref=ddfb581fb9e04595bc7cdb9d66792fdfdbec67ed", "previous_filename": "src/test/rustdoc/intra-doc-link-true-false.rs"}, {"sha": "2051129b948f3ca71170ee2ed02ca09cbd1dfefc", "filename": "src/test/rustdoc/intra-link-associated-defaults.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-associated-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-associated-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-associated-defaults.rs?ref=e37f25aa3f356546ab851e394d5598fc575eabda", "patch": "@@ -1,27 +0,0 @@\n-// ignore-tidy-linelength\n-#![deny(intra_doc_link_resolution_failure)]\n-#![feature(associated_type_defaults)]\n-\n-pub trait TraitWithDefault {\n-    type T = usize;\n-    fn f() -> Self::T {\n-        0\n-    }\n-}\n-\n-/// Link to [UsesDefaults::T] and [UsesDefaults::f]\n-// @has 'intra_link_associated_defaults/struct.UsesDefaults.html' '//a[@href=\"../intra_link_associated_defaults/struct.UsesDefaults.html#associatedtype.T\"]' 'UsesDefaults::T'\n-// @has 'intra_link_associated_defaults/struct.UsesDefaults.html' '//a[@href=\"../intra_link_associated_defaults/struct.UsesDefaults.html#method.f\"]' 'UsesDefaults::f'\n-pub struct UsesDefaults;\n-impl TraitWithDefault for UsesDefaults {}\n-\n-/// Link to [OverridesDefaults::T] and [OverridesDefaults::f]\n-// @has 'intra_link_associated_defaults/struct.OverridesDefaults.html' '//a[@href=\"../intra_link_associated_defaults/struct.OverridesDefaults.html#associatedtype.T\"]' 'OverridesDefaults::T'\n-// @has 'intra_link_associated_defaults/struct.OverridesDefaults.html' '//a[@href=\"../intra_link_associated_defaults/struct.OverridesDefaults.html#method.f\"]' 'OverridesDefaults::f'\n-pub struct OverridesDefaults;\n-impl TraitWithDefault for OverridesDefaults {\n-    type T = bool;\n-    fn f() -> bool {\n-        true\n-    }\n-}"}, {"sha": "daf7075a91740359157af834bb7b50b42447d0c3", "filename": "src/test/rustdoc/intra-link-associated-items.rs", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-associated-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-associated-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-associated-items.rs?ref=e37f25aa3f356546ab851e394d5598fc575eabda", "patch": "@@ -1,61 +0,0 @@\n-// ignore-tidy-linelength\n-#![deny(intra_doc_link_resolution_failure)]\n-\n-/// [`std::collections::BTreeMap::into_iter`]\n-/// [`String::from`] is ambiguous as to which `From` impl\n-/// [Vec::into_iter()] uses a disambiguator\n-// @has 'intra_link_associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/collections/btree/map/struct.BTreeMap.html#method.into_iter\"]' 'std::collections::BTreeMap::into_iter'\n-// @has 'intra_link_associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html#method.from\"]' 'String::from'\n-// @has 'intra_link_associated_items/fn.foo.html' '//a[@href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html#method.into_iter\"]' 'Vec::into_iter'\n-pub fn foo() {}\n-\n-/// Link to [MyStruct], [link from struct][MyStruct::method], [MyStruct::clone], [MyStruct::Input]\n-// @has 'intra_link_associated_items/struct.MyStruct.html' '//a[@href=\"../intra_link_associated_items/struct.MyStruct.html\"]' 'MyStruct'\n-// @has 'intra_link_associated_items/struct.MyStruct.html' '//a[@href=\"../intra_link_associated_items/struct.MyStruct.html#method.method\"]' 'link from struct'\n-// @has 'intra_link_associated_items/struct.MyStruct.html' '//a[@href=\"../intra_link_associated_items/struct.MyStruct.html#method.clone\"]' 'MyStruct::clone'\n-// @has 'intra_link_associated_items/struct.MyStruct.html' '//a[@href=\"../intra_link_associated_items/struct.MyStruct.html#associatedtype.Input\"]' 'MyStruct::Input'\n-pub struct MyStruct { foo: () }\n-\n-impl Clone for MyStruct {\n-    fn clone(&self) -> Self {\n-        MyStruct\n-    }\n-}\n-\n-pub trait T {\n-    type Input;\n-    fn method(i: Self::Input);\n-}\n-\n-impl T for MyStruct {\n-    type Input = usize;\n-\n-    /// [link from method][MyStruct::method] on method\n-    // @has 'intra_link_associated_items/struct.MyStruct.html' '//a[@href=\"../intra_link_associated_items/struct.MyStruct.html#method.method\"]' 'link from method'\n-    fn method(i: usize) {\n-    }\n-}\n-\n-/// Ambiguity between which trait to use\n-pub trait T1 {\n-    fn ambiguous_method();\n-}\n-\n-pub trait T2 {\n-    fn ambiguous_method();\n-}\n-\n-/// Link to [S::ambiguous_method]\n-// FIXME: there is no way to disambiguate these.\n-// Since we have `#[deny(intra_doc_failure)]`, we still know it was one or the other.\n-pub struct S;\n-\n-impl T1 for S {\n-    fn ambiguous_method() {}\n-}\n-\n-impl T2 for S {\n-    fn ambiguous_method() {}\n-}\n-\n-fn main() {}"}, {"sha": "26d05b484b919b73ec6b0729eecfae0038b0d815", "filename": "src/test/rustdoc/intra-link-disambiguators-removed.rs", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-disambiguators-removed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-disambiguators-removed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-disambiguators-removed.rs?ref=e37f25aa3f356546ab851e394d5598fc575eabda", "patch": "@@ -1,51 +0,0 @@\n-// ignore-tidy-linelength\n-#![deny(intra_doc_link_resolution_failure)]\n-// first try backticks\n-/// Trait: [`trait@Name`], fn: [`fn@Name`], [`Name`][`macro@Name`]\n-// @has intra_link_disambiguators_removed/struct.AtDisambiguator.html\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/trait.Name.html\"][code]' \"Name\"\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/fn.Name.html\"][code]' \"Name\"\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/macro.Name.html\"][code]' \"Name\"\n-pub struct AtDisambiguator;\n-\n-/// fn: [`Name()`], macro: [`Name!`]\n-// @has intra_link_disambiguators_removed/struct.SymbolDisambiguator.html\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/fn.Name.html\"][code]' \"Name()\"\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/macro.Name.html\"][code]' \"Name!\"\n-pub struct SymbolDisambiguator;\n-\n-// Now make sure that backticks aren't added if they weren't already there\n-/// [fn@Name]\n-// @has intra_link_disambiguators_removed/trait.Name.html\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/fn.Name.html\"]' \"Name\"\n-// @!has - '//a[@href=\"../intra_link_disambiguators_removed/fn.Name.html\"][code]' \"Name\"\n-\n-// FIXME: this will turn !() into ! alone\n-/// [Name!()]\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/macro.Name.html\"]' \"Name!\"\n-pub trait Name {}\n-\n-#[allow(non_snake_case)]\n-\n-// Try collapsed reference links\n-/// [macro@Name][]\n-// @has intra_link_disambiguators_removed/fn.Name.html\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/macro.Name.html\"]' \"Name\"\n-\n-// Try links that have the same text as a generated URL\n-/// Weird URL aligned [../intra_link_disambiguators_removed/macro.Name.html][trait@Name]\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/trait.Name.html\"]' \"../intra_link_disambiguators_removed/macro.Name.html\"\n-pub fn Name() {}\n-\n-#[macro_export]\n-// Rustdoc doesn't currently handle links that have weird interspersing of inline code blocks.\n-/// [fn@Na`m`e]\n-// @has intra_link_disambiguators_removed/macro.Name.html\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/fn.Name.html\"]' \"fn@Name\"\n-\n-// It also doesn't handle any case where the code block isn't the whole link text:\n-/// [trait@`Name`]\n-// @has - '//a[@href=\"../intra_link_disambiguators_removed/trait.Name.html\"]' \"trait@Name\"\n-macro_rules! Name {\n-    () => ()\n-}"}, {"sha": "418e0d91ea7ef8afa16d94071f67ff30caf354c1", "filename": "src/test/rustdoc/intra-link-extern-type.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-extern-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-extern-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-extern-type.rs?ref=e37f25aa3f356546ab851e394d5598fc575eabda", "patch": "@@ -1,18 +0,0 @@\n-#![feature(extern_types)]\n-\n-extern {\n-    pub type ExternType;\n-}\n-\n-impl ExternType {\n-    pub fn f(&self) {\n-\n-    }\n-}\n-\n-// @has 'intra_link_extern_type/foreigntype.ExternType.html'\n-// @has 'intra_link_extern_type/fn.links_to_extern_type.html' \\\n-// 'href=\"../intra_link_extern_type/foreigntype.ExternType.html#method.f\"'\n-/// See also [ExternType::f]\n-pub fn links_to_extern_type() {\n-}"}, {"sha": "c0066885e19910dea807da1e54295e3bf374b30f", "filename": "src/test/rustdoc/intra-link-prim-assoc.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-prim-assoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-prim-assoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-prim-assoc.rs?ref=e37f25aa3f356546ab851e394d5598fc575eabda", "patch": "@@ -1,5 +0,0 @@\n-// ignore-tidy-linelength\n-#![deny(broken_intra_doc_links)]\n-\n-//! [i32::MAX]\n-// @has intra_link_prim_assoc/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html#associatedconstant.MAX\"]' \"i32::MAX\""}, {"sha": "0a4e57ef643e7824145262785828b4f9216192f0", "filename": "src/test/rustdoc/intra-link-prim-precedence.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-prim-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-prim-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-prim-precedence.rs?ref=e37f25aa3f356546ab851e394d5598fc575eabda", "patch": "@@ -1,17 +0,0 @@\n-// ignore-tidy-linelength\n-#![deny(broken_intra_doc_links)]\n-\n-pub mod char {\n-    /// [char]\n-    // @has intra_link_prim_precedence/char/struct.Inner.html '//a/@href' 'https://doc.rust-lang.org/nightly/std/primitive.char.html'\n-    pub struct Inner;\n-}\n-\n-/// See [prim@char]\n-// @has intra_link_prim_precedence/struct.MyString.html '//a/@href' 'https://doc.rust-lang.org/nightly/std/primitive.char.html'\n-pub struct MyString;\n-\n-/// See also [crate::char] and [mod@char]\n-// @has intra_link_prim_precedence/struct.MyString2.html '//*[@href=\"../intra_link_prim_precedence/char/index.html\"]' 'crate::char'\n-// @has - '//*[@href=\"../intra_link_prim_precedence/char/index.html\"]' 'mod@char'\n-pub struct MyString2;"}, {"sha": "7a8403255edb65fd058a89725d28c413f4acae1b", "filename": "src/test/rustdoc/intra-link-proc-macro.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-proc-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37f25aa3f356546ab851e394d5598fc575eabda/src%2Ftest%2Frustdoc%2Fintra-link-proc-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-proc-macro.rs?ref=e37f25aa3f356546ab851e394d5598fc575eabda", "patch": "@@ -1,27 +0,0 @@\n-// aux-build:intra-link-proc-macro-macro.rs\n-// build-aux-docs\n-#![deny(broken_intra_doc_links)]\n-\n-extern crate intra_link_proc_macro_macro;\n-\n-\n-pub use intra_link_proc_macro_macro::{DeriveA, attr_a};\n-use intra_link_proc_macro_macro::{DeriveB, attr_b};\n-\n-// @has intra_link_proc_macro/struct.Foo.html\n-// @has - '//a/@href' '../intra_link_proc_macro/derive.DeriveA.html'\n-// @has - '//a/@href' '../intra_link_proc_macro/attr.attr_a.html'\n-// @has - '//a/@href' '../intra_link_proc_macro/trait.DeriveTrait.html'\n-// @has - '//a/@href' '../intra_link_proc_macro_macro/derive.DeriveB.html'\n-// @has - '//a/@href' '../intra_link_proc_macro_macro/attr.attr_b.html'\n-/// Link to [DeriveA], [attr_a], [DeriveB], [attr_b], [DeriveTrait]\n-pub struct Foo;\n-\n-// @has intra_link_proc_macro/struct.Bar.html\n-// @has - '//a/@href' '../intra_link_proc_macro/derive.DeriveA.html'\n-// @has - '//a/@href' '../intra_link_proc_macro/attr.attr_a.html'\n-/// Link to [deriveA](derive@DeriveA) [attr](macro@attr_a)\n-pub struct Bar;\n-\n-// this should not cause ambiguity errors\n-pub trait DeriveTrait {}"}]}