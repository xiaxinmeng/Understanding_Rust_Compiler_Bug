{"sha": "250c1842b1e27c1eb6d174e8a954ea37a2f707bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MGMxODQyYjFlMjdjMWViNmQxNzRlOGE5NTRlYTM3YTJmNzA3YmI=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-04T16:02:46Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-06T18:15:01Z"}, "message": "Document the indent_relative_to arg of snippet_block", "tree": {"sha": "cd82cf09cc2c739dc5015a586dd1979d3a260a93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd82cf09cc2c739dc5015a586dd1979d3a260a93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/250c1842b1e27c1eb6d174e8a954ea37a2f707bb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl48V6UACgkQaTCGhp1Q\nZjeEug/6AvSZYXcY4I3zxTpJbBa43CwZaxXr6yx1EK+eCKYi0OSLBFBR3NoeHD0S\nx8n/U0ZC2ExEw8IG9EpqTWTUeKm5MshlGjCa8agC/tOlJ/9dmRGge8d6RDuJclAX\n33LzyvJQJ1WbDBiiHk3JkknFUGyCX62Ws5Mi5pbfG+9Wk/8VkPNJyKSm7lDA6Fe7\nXuSIvF0G8/SmpzepkW4t9Un1T72xOFVK3OvVCtUm5uMKZ1V3Buj3u30VksuOwVWo\nQokIcQavRc0AdDcelgc06Ps1+aZpqG496/aHiGhZ3xmWMjnUdxgZi91nxW05HDF5\nK7BmBiJr131r60GMXXlnkiO6UC5EaMfA/NujlVIuLv9MNzEJjmcVsI54mAO6wpH3\nzm1PYG8ZqmhVCG/eNp0480/Mm/wJ5JfXmckFDo4+Z4SKCL0SKQw1trI20xnygv/9\nfMaWvZL5SUqGbGBuOqzagcnFwFI6qdGM58VWFg5xxnUG2yRAgUaLAFiF8E8IEQt2\nlZ/kkW+Vc3gD4r/gGwnh01ftMxwqK/m6fXaw7uhf4OI76iZ8V3k7jj9YACngLV13\na87ce5N1lwpXZJtIRmBy7v4Iwbnjz9TO49psLf82WNotTceZpRFrQgs4qBlnzDcO\nyCeEA4j53Rhff1dMRdMMe4wi4HvZAV7A6AB9c8jdBQ/VI44Dd0o=\n=ozOr\n-----END PGP SIGNATURE-----", "payload": "tree cd82cf09cc2c739dc5015a586dd1979d3a260a93\nparent 7363728d18659c695453cc6f6923c70a2554b1d4\nauthor flip1995 <hello@philkrones.com> 1580832166 +0100\ncommitter flip1995 <hello@philkrones.com> 1581012901 +0100\n\nDocument the indent_relative_to arg of snippet_block\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/250c1842b1e27c1eb6d174e8a954ea37a2f707bb", "html_url": "https://github.com/rust-lang/rust/commit/250c1842b1e27c1eb6d174e8a954ea37a2f707bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/250c1842b1e27c1eb6d174e8a954ea37a2f707bb/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7363728d18659c695453cc6f6923c70a2554b1d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7363728d18659c695453cc6f6923c70a2554b1d4", "html_url": "https://github.com/rust-lang/rust/commit/7363728d18659c695453cc6f6923c70a2554b1d4"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "ed6d9f81cc9f5a482acc251c267f07064bffc36f", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 29, "deletions": 5, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/250c1842b1e27c1eb6d174e8a954ea37a2f707bb/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/250c1842b1e27c1eb6d174e8a954ea37a2f707bb/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=250c1842b1e27c1eb6d174e8a954ea37a2f707bb", "patch": "@@ -534,16 +534,40 @@ pub fn snippet_opt<T: LintContext>(cx: &T, span: Span) -> Option<String> {\n     cx.sess().source_map().span_to_snippet(span).ok()\n }\n \n-/// Converts a span (from a block) to a code snippet if available, otherwise use\n-/// default.\n-/// This trims the code of indentation, except for the first line. Use it for\n-/// blocks or block-like\n+/// Converts a span (from a block) to a code snippet if available, otherwise use default.\n+///\n+/// This trims the code of indentation, except for the first line. Use it for blocks or block-like\n /// things which need to be printed as such.\n ///\n+/// The `indent_relative_to` arg can be used, to provide a span, where the indentation of the\n+/// resulting snippet of the given span.\n+///\n /// # Example\n+///\n /// ```rust,ignore\n-/// snippet_block(cx, expr.span, \"..\", None)\n+/// snippet_block(cx, block.span, \"..\", None)\n+/// // where, `block` is the block of the if expr\n+///     if x {\n+///         y;\n+///     }\n+/// // will return the snippet\n+/// {\n+///     y;\n+/// }\n+/// ```\n+///\n+/// ```rust,ignore\n+/// snippet_block(cx, block.span, \"..\", Some(if_expr.span))\n+/// // where, `block` is the block of the if expr\n+///     if x {\n+///         y;\n+///     }\n+/// // will return the snippet\n+/// {\n+///         y;\n+///     } // aligned with `if`\n /// ```\n+/// Note that the first line of the snippet always has 0 indentation.\n pub fn snippet_block<'a, T: LintContext>(\n     cx: &T,\n     span: Span,"}]}