{"sha": "8f1c0d0a10761b70d74bec7a537a25cb54f42b61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMWMwZDBhMTA3NjFiNzBkNzRiZWM3YTUzN2EyNWNiNTRmNDJiNjE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-30T21:08:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-30T21:08:57Z"}, "message": "Rollup merge of #72728 - o01eg:fix-72661, r=Mark-Simulacrum\n\nMake bootstrap aware of relative libdir in stage0 compiler\n\nFollows up #72692\n\nFixes #72661", "tree": {"sha": "697e829cf22a03ca93be00a5232b6bc335193aa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/697e829cf22a03ca93be00a5232b6bc335193aa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f1c0d0a10761b70d74bec7a537a25cb54f42b61", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0stpCRBK7hj4Ov3rIwAAdHIIADqRqVZlFp7Zon+Ja56QekmG\nE/vOcj5DO+kQMelCq0CyUm1MjxLF6C/nqmQQAwiHOYr13+xxbHlOJW4rRq2tDtwx\nW6/0uYTll66TivYbehl8ymfx4X0H7TmMSmXQS6GmHXmss+Y20E/eWMxpTabBui0w\nTuoRfKH5uqgWzQtfVYl+Gdy0iixiMnZrfbrBlNu4T5AP064X1I7WmPhWVNttVpj+\nk9eKL0vsTOxe3CBkgi3dtkKy6u7R6Aqujyvu+fV9/2+zRogghleD4b8cgYar/G7R\n/FmK5YZWS5+xIx0jYFvUbySeeNfXTxzk7+8YkccS4tpLDEBYXyYxtrBe6M5nDR4=\n=FnDx\n-----END PGP SIGNATURE-----\n", "payload": "tree 697e829cf22a03ca93be00a5232b6bc335193aa6\nparent 278e26eaf6a2b8312aadb7b05d432182dae55ce4\nparent c0ac2e86f9d7545594fdb1be27f2fe9336699ca7\nauthor Ralf Jung <post@ralfj.de> 1590872937 +0200\ncommitter GitHub <noreply@github.com> 1590872937 +0200\n\nRollup merge of #72728 - o01eg:fix-72661, r=Mark-Simulacrum\n\nMake bootstrap aware of relative libdir in stage0 compiler\n\nFollows up #72692\n\nFixes #72661\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f1c0d0a10761b70d74bec7a537a25cb54f42b61", "html_url": "https://github.com/rust-lang/rust/commit/8f1c0d0a10761b70d74bec7a537a25cb54f42b61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f1c0d0a10761b70d74bec7a537a25cb54f42b61/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "278e26eaf6a2b8312aadb7b05d432182dae55ce4", "url": "https://api.github.com/repos/rust-lang/rust/commits/278e26eaf6a2b8312aadb7b05d432182dae55ce4", "html_url": "https://github.com/rust-lang/rust/commit/278e26eaf6a2b8312aadb7b05d432182dae55ce4"}, {"sha": "c0ac2e86f9d7545594fdb1be27f2fe9336699ca7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0ac2e86f9d7545594fdb1be27f2fe9336699ca7", "html_url": "https://github.com/rust-lang/rust/commit/c0ac2e86f9d7545594fdb1be27f2fe9336699ca7"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "c8a85eae252ff0c9e0d72dcbaf0447454d7f226a", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8f1c0d0a10761b70d74bec7a537a25cb54f42b61/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f1c0d0a10761b70d74bec7a537a25cb54f42b61/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=8f1c0d0a10761b70d74bec7a537a25cb54f42b61", "patch": "@@ -648,6 +648,7 @@ impl<'a> Builder<'a> {\n     pub fn sysroot_libdir_relative(&self, compiler: Compiler) -> &Path {\n         match self.config.libdir_relative() {\n             Some(relative_libdir) if compiler.stage >= 1 => relative_libdir,\n+            _ if compiler.stage == 0 => &self.build.initial_libdir,\n             _ => Path::new(\"lib\"),\n         }\n     }"}, {"sha": "c46c68e4d56824d9224868fb105c985a7e12c386", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 29, "deletions": 7, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/8f1c0d0a10761b70d74bec7a537a25cb54f42b61/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f1c0d0a10761b70d74bec7a537a25cb54f42b61/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=8f1c0d0a10761b70d74bec7a537a25cb54f42b61", "patch": "@@ -243,6 +243,7 @@ pub struct Build {\n     initial_rustc: PathBuf,\n     initial_cargo: PathBuf,\n     initial_lld: PathBuf,\n+    initial_libdir: PathBuf,\n \n     // Runtime state filled in later on\n     // C/C++ compilers and archiver for all targets\n@@ -344,18 +345,39 @@ impl Build {\n         // we always try to use git for LLVM builds\n         let in_tree_llvm_info = channel::GitInfo::new(false, &src.join(\"src/llvm-project\"));\n \n-        let initial_sysroot = config.initial_rustc.parent().unwrap().parent().unwrap();\n-        let initial_lld = initial_sysroot\n-            .join(\"lib\")\n-            .join(\"rustlib\")\n-            .join(config.build)\n-            .join(\"bin\")\n-            .join(\"rust-lld\");\n+        let initial_target_libdir_str = if config.dry_run {\n+            \"/dummy/lib/path/to/lib/\".to_string()\n+        } else {\n+            output(\n+                Command::new(&config.initial_rustc)\n+                    .arg(\"--target\")\n+                    .arg(config.build)\n+                    .arg(\"--print\")\n+                    .arg(\"target-libdir\"),\n+            )\n+        };\n+        let initial_target_dir = Path::new(&initial_target_libdir_str).parent().unwrap();\n+        let initial_lld = initial_target_dir.join(\"bin\").join(\"rust-lld\");\n+\n+        let initial_sysroot = if config.dry_run {\n+            \"/dummy\".to_string()\n+        } else {\n+            output(Command::new(&config.initial_rustc).arg(\"--print\").arg(\"sysroot\"))\n+        };\n+        let initial_libdir = initial_target_dir\n+            .parent()\n+            .unwrap()\n+            .parent()\n+            .unwrap()\n+            .strip_prefix(initial_sysroot.trim())\n+            .unwrap()\n+            .to_path_buf();\n \n         let mut build = Build {\n             initial_rustc: config.initial_rustc.clone(),\n             initial_cargo: config.initial_cargo.clone(),\n             initial_lld,\n+            initial_libdir,\n             local_rebuild: config.local_rebuild,\n             fail_fast: config.cmd.fail_fast(),\n             doc_tests: config.cmd.doc_tests(),"}]}