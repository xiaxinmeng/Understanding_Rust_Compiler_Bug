{"sha": "58c7b670adee30a3fb987297ceb03483756c8f0f", "node_id": "C_kwDOAAsO6NoAKDU4YzdiNjcwYWRlZTMwYTNmYjk4NzI5N2NlYjAzNDgzNzU2YzhmMGY", "commit": {"author": {"name": "ozkanonur", "email": "work@onurozkan.dev", "date": "2023-03-12T22:00:51Z"}, "committer": {"name": "ozkanonur", "email": "work@onurozkan.dev", "date": "2023-03-12T22:18:56Z"}, "message": "create `config::tests::detect_src_and_out` test for bootstrap\n\nSigned-off-by: ozkanonur <work@onurozkan.dev>", "tree": {"sha": "23af7423486b77ef34eaf9c82b035cbc86905acf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23af7423486b77ef34eaf9c82b035cbc86905acf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58c7b670adee30a3fb987297ceb03483756c8f0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58c7b670adee30a3fb987297ceb03483756c8f0f", "html_url": "https://github.com/rust-lang/rust/commit/58c7b670adee30a3fb987297ceb03483756c8f0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58c7b670adee30a3fb987297ceb03483756c8f0f/comments", "author": {"login": "ozkanonur", "id": 39852038, "node_id": "MDQ6VXNlcjM5ODUyMDM4", "avatar_url": "https://avatars.githubusercontent.com/u/39852038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozkanonur", "html_url": "https://github.com/ozkanonur", "followers_url": "https://api.github.com/users/ozkanonur/followers", "following_url": "https://api.github.com/users/ozkanonur/following{/other_user}", "gists_url": "https://api.github.com/users/ozkanonur/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozkanonur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozkanonur/subscriptions", "organizations_url": "https://api.github.com/users/ozkanonur/orgs", "repos_url": "https://api.github.com/users/ozkanonur/repos", "events_url": "https://api.github.com/users/ozkanonur/events{/privacy}", "received_events_url": "https://api.github.com/users/ozkanonur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ozkanonur", "id": 39852038, "node_id": "MDQ6VXNlcjM5ODUyMDM4", "avatar_url": "https://avatars.githubusercontent.com/u/39852038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozkanonur", "html_url": "https://github.com/ozkanonur", "followers_url": "https://api.github.com/users/ozkanonur/followers", "following_url": "https://api.github.com/users/ozkanonur/following{/other_user}", "gists_url": "https://api.github.com/users/ozkanonur/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozkanonur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozkanonur/subscriptions", "organizations_url": "https://api.github.com/users/ozkanonur/orgs", "repos_url": "https://api.github.com/users/ozkanonur/repos", "events_url": "https://api.github.com/users/ozkanonur/events{/privacy}", "received_events_url": "https://api.github.com/users/ozkanonur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1719530f44e3c8ec903f76020a52bd8764d5d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1719530f44e3c8ec903f76020a52bd8764d5d10", "html_url": "https://github.com/rust-lang/rust/commit/b1719530f44e3c8ec903f76020a52bd8764d5d10"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "16dc8c63abc96e989ac6016c37a80a378b46fee2", "filename": "src/bootstrap/config/tests.rs", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/58c7b670adee30a3fb987297ceb03483756c8f0f/src%2Fbootstrap%2Fconfig%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58c7b670adee30a3fb987297ceb03483756c8f0f/src%2Fbootstrap%2Fconfig%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig%2Ftests.rs?ref=58c7b670adee30a3fb987297ceb03483756c8f0f", "patch": "@@ -1,5 +1,5 @@\n use super::{Config, TomlConfig};\n-use std::path::Path;\n+use std::{env, path::Path};\n \n fn toml(config: &str) -> impl '_ + Fn(&Path) -> TomlConfig {\n     |&_| toml::from_str(config).unwrap()\n@@ -33,4 +33,35 @@ fn download_ci_llvm() {\n     ));\n }\n \n-// FIXME: add test for detecting `src` and `out`\n+#[test]\n+fn detect_src_and_out() {\n+    let cfg = parse(\"\");\n+\n+    // This will bring absolute form of `src/bootstrap` path\n+    let current_dir = std::env::current_dir().unwrap();\n+\n+    // get `src` by moving into project root path\n+    let expected_src = current_dir.ancestors().nth(2).unwrap();\n+\n+    assert_eq!(&cfg.src, expected_src);\n+\n+    // This should bring output path of bootstrap in absolute form\n+    let cargo_target_dir = env::var_os(\"CARGO_TARGET_DIR\")\n+        .expect(\"CARGO_TARGET_DIR must been provided for the test environment from bootstrap\");\n+\n+    // Move to `build` from `build/bootstrap`\n+    let expected_out = Path::new(&cargo_target_dir).parent().unwrap();\n+    assert_eq!(&cfg.out, expected_out);\n+\n+    let args: Vec<String> = env::args().collect();\n+\n+    // Another test for `out` as a sanity check\n+    //\n+    // This will bring something similar to:\n+    //     `{config_toml_place}/build/bootstrap/debug/deps/bootstrap-c7ee91d5661e2804`\n+    // `{config_toml_place}` can be anywhere, not just in the rust project directory.\n+    let dep = Path::new(args.first().unwrap());\n+    let expected_out = dep.ancestors().nth(4).unwrap();\n+\n+    assert_eq!(&cfg.out, expected_out);\n+}"}]}