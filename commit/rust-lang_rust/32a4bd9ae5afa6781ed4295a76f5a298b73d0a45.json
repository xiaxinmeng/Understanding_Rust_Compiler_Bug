{"sha": "32a4bd9ae5afa6781ed4295a76f5a298b73d0a45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYTRiZDlhZTVhZmE2NzgxZWQ0Mjk1YTc2ZjVhMjk4YjczZDBhNDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-17T06:16:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-17T06:16:09Z"}, "message": "Auto merge of #29102 - petrochenkov:spanvis, r=alexcrichton\n\nCloses https://github.com/rust-lang/rust/issues/28750\r\n`Arm` and `Generics` don't have spans at all, so it's not a visitor's problem, `visit_struct_def` was fixed in https://github.com/rust-lang/rust/pull/28816", "tree": {"sha": "133647c2d73532d6deda31546b2250d67cae8777", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/133647c2d73532d6deda31546b2250d67cae8777"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32a4bd9ae5afa6781ed4295a76f5a298b73d0a45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32a4bd9ae5afa6781ed4295a76f5a298b73d0a45", "html_url": "https://github.com/rust-lang/rust/commit/32a4bd9ae5afa6781ed4295a76f5a298b73d0a45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32a4bd9ae5afa6781ed4295a76f5a298b73d0a45/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ed46e7225bdf8ea80f93ae66eb3993dc09d957b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ed46e7225bdf8ea80f93ae66eb3993dc09d957b", "html_url": "https://github.com/rust-lang/rust/commit/4ed46e7225bdf8ea80f93ae66eb3993dc09d957b"}, {"sha": "a0f2a591e09fe96c7814d8376e06f4e3120f77e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0f2a591e09fe96c7814d8376e06f4e3120f77e6", "html_url": "https://github.com/rust-lang/rust/commit/a0f2a591e09fe96c7814d8376e06f4e3120f77e6"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "45671367a5c3c992e2f937354874d79dc8274a10", "filename": "src/librustc/middle/check_static_recursion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32a4bd9ae5afa6781ed4295a76f5a298b73d0a45/src%2Flibrustc%2Fmiddle%2Fcheck_static_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32a4bd9ae5afa6781ed4295a76f5a298b73d0a45/src%2Flibrustc%2Fmiddle%2Fcheck_static_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_static_recursion.rs?ref=32a4bd9ae5afa6781ed4295a76f5a298b73d0a45", "patch": "@@ -201,7 +201,7 @@ impl<'a, 'ast: 'a> Visitor<'ast> for CheckItemRecursionVisitor<'a, 'ast> {\n     }\n \n     fn visit_enum_def(&mut self, enum_definition: &'ast hir::EnumDef,\n-                      generics: &'ast hir::Generics, item_id: ast::NodeId) {\n+                      generics: &'ast hir::Generics, item_id: ast::NodeId, _: Span) {\n         self.populate_enum_discriminants(enum_definition);\n         visit::walk_enum_def(self, enum_definition, generics, item_id);\n     }"}, {"sha": "547651bef8670d21197400e1d71070aefe458d8e", "filename": "src/librustc_front/visit.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/32a4bd9ae5afa6781ed4295a76f5a298b73d0a45/src%2Flibrustc_front%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32a4bd9ae5afa6781ed4295a76f5a298b73d0a45/src%2Flibrustc_front%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fvisit.rs?ref=32a4bd9ae5afa6781ed4295a76f5a298b73d0a45", "patch": "@@ -120,7 +120,7 @@ pub trait Visitor<'v> : Sized {\n         walk_struct_field(self, s)\n     }\n     fn visit_enum_def(&mut self, enum_definition: &'v EnumDef,\n-                      generics: &'v Generics, item_id: NodeId) {\n+                      generics: &'v Generics, item_id: NodeId, _: Span) {\n         walk_enum_def(self, enum_definition, generics, item_id)\n     }\n     fn visit_variant(&mut self, v: &'v Variant, g: &'v Generics, item_id: NodeId) {\n@@ -293,7 +293,7 @@ pub fn walk_item<'v, V: Visitor<'v>>(visitor: &mut V, item: &'v Item) {\n         }\n         ItemEnum(ref enum_definition, ref type_parameters) => {\n             visitor.visit_generics(type_parameters);\n-            visitor.visit_enum_def(enum_definition, type_parameters, item.id)\n+            visitor.visit_enum_def(enum_definition, type_parameters, item.id, item.span)\n         }\n         ItemDefaultImpl(_, ref trait_ref) => {\n             visitor.visit_trait_ref(trait_ref)\n@@ -326,9 +326,7 @@ pub fn walk_enum_def<'v, V: Visitor<'v>>(visitor: &mut V,\n                                          enum_definition: &'v EnumDef,\n                                          generics: &'v Generics,\n                                          item_id: NodeId) {\n-    for variant in &enum_definition.variants {\n-        visitor.visit_variant(variant, generics, item_id);\n-    }\n+    walk_list!(visitor, visit_variant, &enum_definition.variants, generics, item_id);\n }\n \n pub fn walk_variant<'v, V: Visitor<'v>>(visitor: &mut V,"}, {"sha": "1614d7d4517f26a3f8409538ef0a89411db02884", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/32a4bd9ae5afa6781ed4295a76f5a298b73d0a45/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32a4bd9ae5afa6781ed4295a76f5a298b73d0a45/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=32a4bd9ae5afa6781ed4295a76f5a298b73d0a45", "patch": "@@ -86,7 +86,7 @@ pub trait Visitor<'v> : Sized {\n     }\n     fn visit_struct_field(&mut self, s: &'v StructField) { walk_struct_field(self, s) }\n     fn visit_enum_def(&mut self, enum_definition: &'v EnumDef,\n-                      generics: &'v Generics, item_id: NodeId) {\n+                      generics: &'v Generics, item_id: NodeId, _: Span) {\n         walk_enum_def(self, enum_definition, generics, item_id)\n     }\n     fn visit_variant(&mut self, v: &'v Variant, g: &'v Generics, item_id: NodeId) {\n@@ -136,6 +136,11 @@ macro_rules! walk_list {\n         for elem in $list {\n             $visitor.$method(elem)\n         }\n+    };\n+    ($visitor: expr, $method: ident, $list: expr, $($extra_args: expr),*) => {\n+        for elem in $list {\n+            $visitor.$method(elem, $($extra_args,)*)\n+        }\n     }\n }\n \n@@ -272,7 +277,7 @@ pub fn walk_item<'v, V: Visitor<'v>>(visitor: &mut V, item: &'v Item) {\n         }\n         ItemEnum(ref enum_definition, ref type_parameters) => {\n             visitor.visit_generics(type_parameters);\n-            visitor.visit_enum_def(enum_definition, type_parameters, item.id)\n+            visitor.visit_enum_def(enum_definition, type_parameters, item.id, item.span)\n         }\n         ItemDefaultImpl(_, ref trait_ref) => {\n             visitor.visit_trait_ref(trait_ref)\n@@ -306,9 +311,7 @@ pub fn walk_enum_def<'v, V: Visitor<'v>>(visitor: &mut V,\n                                          enum_definition: &'v EnumDef,\n                                          generics: &'v Generics,\n                                          item_id: NodeId) {\n-    for variant in &enum_definition.variants {\n-        visitor.visit_variant(variant, generics, item_id);\n-    }\n+    walk_list!(visitor, visit_variant, &enum_definition.variants, generics, item_id);\n }\n \n pub fn walk_variant<'v, V: Visitor<'v>>(visitor: &mut V,"}]}