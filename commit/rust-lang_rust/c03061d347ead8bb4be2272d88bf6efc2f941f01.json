{"sha": "c03061d347ead8bb4be2272d88bf6efc2f941f01", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMzA2MWQzNDdlYWQ4YmI0YmUyMjcyZDg4YmY2ZWZjMmY5NDFmMDE=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-04-11T22:36:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-04-11T22:36:14Z"}, "message": "Rollup merge of #41202 - brson:btree, r=nikomatsakis\n\nConvert HashMap to BTree in build-manifest\n\nThis is just for my peace of mind since it's important the output of this program be deterministic.", "tree": {"sha": "a65852bc6c38f0184f28065d089fa3e84d208f14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a65852bc6c38f0184f28065d089fa3e84d208f14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c03061d347ead8bb4be2272d88bf6efc2f941f01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c03061d347ead8bb4be2272d88bf6efc2f941f01", "html_url": "https://github.com/rust-lang/rust/commit/c03061d347ead8bb4be2272d88bf6efc2f941f01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c03061d347ead8bb4be2272d88bf6efc2f941f01/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b72c30a8dfe1f91209ff34f30026a43ffa6439c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b72c30a8dfe1f91209ff34f30026a43ffa6439c6", "html_url": "https://github.com/rust-lang/rust/commit/b72c30a8dfe1f91209ff34f30026a43ffa6439c6"}, {"sha": "1c3f34dba6a8219822a48f3db7e6f50ff04e0f78", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c3f34dba6a8219822a48f3db7e6f50ff04e0f78", "html_url": "https://github.com/rust-lang/rust/commit/1c3f34dba6a8219822a48f3db7e6f50ff04e0f78"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "a7a43e6858ef9dd267695177cafb36a21d8ea1f9", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c03061d347ead8bb4be2272d88bf6efc2f941f01/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c03061d347ead8bb4be2272d88bf6efc2f941f01/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=c03061d347ead8bb4be2272d88bf6efc2f941f01", "patch": "@@ -11,7 +11,7 @@\n extern crate toml;\n extern crate rustc_serialize;\n \n-use std::collections::{BTreeMap, HashMap};\n+use std::collections::BTreeMap;\n use std::env;\n use std::fs::File;\n use std::io::{self, Read, Write};\n@@ -101,13 +101,13 @@ static MINGW: &'static [&'static str] = &[\n struct Manifest {\n     manifest_version: String,\n     date: String,\n-    pkg: HashMap<String, Package>,\n+    pkg: BTreeMap<String, Package>,\n }\n \n #[derive(RustcEncodable)]\n struct Package {\n     version: String,\n-    target: HashMap<String, Target>,\n+    target: BTreeMap<String, Target>,\n }\n \n #[derive(RustcEncodable)]\n@@ -138,7 +138,7 @@ struct Builder {\n     input: PathBuf,\n     output: PathBuf,\n     gpg_passphrase: String,\n-    digests: HashMap<String, String>,\n+    digests: BTreeMap<String, String>,\n     s3_address: String,\n     date: String,\n     rust_version: String,\n@@ -162,7 +162,7 @@ fn main() {\n         input: input,\n         output: output,\n         gpg_passphrase: passphrase,\n-        digests: HashMap::new(),\n+        digests: BTreeMap::new(),\n         s3_address: s3_address,\n         date: date,\n         rust_version: String::new(),\n@@ -214,7 +214,7 @@ impl Builder {\n         let mut manifest = Manifest {\n             manifest_version: \"2\".to_string(),\n             date: self.date.to_string(),\n-            pkg: HashMap::new(),\n+            pkg: BTreeMap::new(),\n         };\n \n         self.package(\"rustc\", &mut manifest.pkg, HOSTS);\n@@ -230,7 +230,7 @@ impl Builder {\n \n         let mut pkg = Package {\n             version: self.cached_version(\"rust\").to_string(),\n-            target: HashMap::new(),\n+            target: BTreeMap::new(),\n         };\n         for host in HOSTS {\n             let filename = self.filename(\"rust\", host);\n@@ -299,7 +299,7 @@ impl Builder {\n \n     fn package(&mut self,\n                pkgname: &str,\n-               dst: &mut HashMap<String, Package>,\n+               dst: &mut BTreeMap<String, Package>,\n                targets: &[&str]) {\n         let targets = targets.iter().map(|name| {\n             let filename = self.filename(pkgname, name);"}]}