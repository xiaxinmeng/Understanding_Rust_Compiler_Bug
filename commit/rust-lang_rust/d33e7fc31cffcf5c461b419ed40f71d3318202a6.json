{"sha": "d33e7fc31cffcf5c461b419ed40f71d3318202a6", "node_id": "C_kwDOAAsO6NoAKGQzM2U3ZmMzMWNmZmNmNWM0NjFiNDE5ZWQ0MGY3MWQzMzE4MjAyYTY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-12T17:02:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-12T17:02:04Z"}, "message": "Auto merge of #2117 - RalfJung:rustup, r=RalfJung\n\nrustup\n\nCc https://github.com/rust-lang/rust/issues/96975", "tree": {"sha": "82c530cc96d09922aa41875e67cc3d1e387192cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82c530cc96d09922aa41875e67cc3d1e387192cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d33e7fc31cffcf5c461b419ed40f71d3318202a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d33e7fc31cffcf5c461b419ed40f71d3318202a6", "html_url": "https://github.com/rust-lang/rust/commit/d33e7fc31cffcf5c461b419ed40f71d3318202a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d33e7fc31cffcf5c461b419ed40f71d3318202a6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5887b2b185abd6e553068b977f8b7e75a4a502d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5887b2b185abd6e553068b977f8b7e75a4a502d2", "html_url": "https://github.com/rust-lang/rust/commit/5887b2b185abd6e553068b977f8b7e75a4a502d2"}, {"sha": "19e1c72a778d3f9762d08e90fb41b0afe04a7214", "url": "https://api.github.com/repos/rust-lang/rust/commits/19e1c72a778d3f9762d08e90fb41b0afe04a7214", "html_url": "https://github.com/rust-lang/rust/commit/19e1c72a778d3f9762d08e90fb41b0afe04a7214"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "630aee6793f38da24de0c91a95f396b4613a1ee5", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d33e7fc31cffcf5c461b419ed40f71d3318202a6/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/d33e7fc31cffcf5c461b419ed40f71d3318202a6/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=d33e7fc31cffcf5c461b419ed40f71d3318202a6", "patch": "@@ -1 +1 @@\n-8fbd92d0b95d847c68948d8dbbfaccb470db4f92\n+481db40311cdd241ae4d33f34f2f75732e44d8e8"}, {"sha": "30fb28436298800db5edcf33f83e4f53c7554a7b", "filename": "src/helpers.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d33e7fc31cffcf5c461b419ed40f71d3318202a6/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d33e7fc31cffcf5c461b419ed40f71d3318202a6/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=d33e7fc31cffcf5c461b419ed40f71d3318202a6", "patch": "@@ -13,7 +13,7 @@ use rustc_middle::ty::{\n     layout::{LayoutOf, TyAndLayout},\n     List, TyCtxt,\n };\n-use rustc_span::{def_id::CrateNum, Symbol};\n+use rustc_span::{def_id::CrateNum, sym, Symbol};\n use rustc_target::abi::{Align, FieldsShape, Size, Variants};\n use rustc_target::spec::abi::Abi;\n \n@@ -775,6 +775,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         this.alloc_mark_immutable(mplace.ptr.into_pointer_or_addr().unwrap().provenance.alloc_id)\n             .unwrap();\n     }\n+\n+    fn item_link_name(&self, def_id: DefId) -> Symbol {\n+        let tcx = self.eval_context_ref().tcx;\n+        match tcx.get_attrs(def_id, sym::link_name).filter_map(|a| a.value_str()).next() {\n+            Some(name) => name,\n+            None => tcx.item_name(def_id),\n+        }\n+    }\n }\n \n /// Check that the number of args is what we expect."}, {"sha": "5facc5327d3fd74e20c3cf4625861260a34b17ff", "filename": "src/machine.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d33e7fc31cffcf5c461b419ed40f71d3318202a6/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d33e7fc31cffcf5c461b419ed40f71d3318202a6/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=d33e7fc31cffcf5c461b419ed40f71d3318202a6", "patch": "@@ -24,7 +24,7 @@ use rustc_middle::{\n     },\n };\n use rustc_span::def_id::{CrateNum, DefId};\n-use rustc_span::symbol::{sym, Symbol};\n+use rustc_span::Symbol;\n use rustc_target::abi::Size;\n use rustc_target::spec::abi::Abi;\n \n@@ -548,11 +548,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n         ecx: &MiriEvalContext<'mir, 'tcx>,\n         def_id: DefId,\n     ) -> InterpResult<'tcx, Pointer<Tag>> {\n-        let attrs = ecx.tcx.get_attrs(def_id);\n-        let link_name = match ecx.tcx.sess.first_attr_value_str_by_name(attrs, sym::link_name) {\n-            Some(name) => name,\n-            None => ecx.tcx.item_name(def_id),\n-        };\n+        let link_name = ecx.item_link_name(def_id);\n         if let Some(&ptr) = ecx.machine.extern_statics.get(&link_name) {\n             Ok(ptr)\n         } else {"}, {"sha": "44bf4ba7e3696f464cb101a3362d2f58781d7d41", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d33e7fc31cffcf5c461b419ed40f71d3318202a6/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d33e7fc31cffcf5c461b419ed40f71d3318202a6/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=d33e7fc31cffcf5c461b419ed40f71d3318202a6", "patch": "@@ -15,7 +15,7 @@ use rustc_middle::middle::{\n use rustc_middle::mir;\n use rustc_middle::ty;\n use rustc_session::config::CrateType;\n-use rustc_span::{symbol::sym, Symbol};\n+use rustc_span::Symbol;\n use rustc_target::{\n     abi::{Align, Size},\n     spec::abi::Abi,\n@@ -236,12 +236,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         unwind: StackPopUnwind,\n     ) -> InterpResult<'tcx, Option<(&'mir mir::Body<'tcx>, ty::Instance<'tcx>)>> {\n         let this = self.eval_context_mut();\n-        let attrs = this.tcx.get_attrs(def_id);\n-        let link_name = this\n-            .tcx\n-            .sess\n-            .first_attr_value_str_by_name(attrs, sym::link_name)\n-            .unwrap_or_else(|| this.tcx.item_name(def_id));\n+        let link_name = this.item_link_name(def_id);\n         let tcx = this.tcx.tcx;\n \n         // First: functions that diverge."}]}