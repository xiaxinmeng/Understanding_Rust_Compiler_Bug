{"sha": "81edbbc2bfacd29558a5020990d49fc07ed80ac7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZWRiYmMyYmZhY2QyOTU1OGE1MDIwOTkwZDQ5ZmMwN2VkODBhYzc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-29T14:35:41Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-29T14:35:41Z"}, "message": "Implement TryFrom between NonZero types.", "tree": {"sha": "657ceca8e9bb0840185d294f76853915d44c1c39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/657ceca8e9bb0840185d294f76853915d44c1c39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81edbbc2bfacd29558a5020990d49fc07ed80ac7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81edbbc2bfacd29558a5020990d49fc07ed80ac7", "html_url": "https://github.com/rust-lang/rust/commit/81edbbc2bfacd29558a5020990d49fc07ed80ac7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81edbbc2bfacd29558a5020990d49fc07ed80ac7/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8363295d555494bbaa119eba8b16a3057e6728c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8363295d555494bbaa119eba8b16a3057e6728c", "html_url": "https://github.com/rust-lang/rust/commit/b8363295d555494bbaa119eba8b16a3057e6728c"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "173d824d3908359d9d4618694b1b7572c640c0d5", "filename": "library/core/src/convert/num.rs", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/81edbbc2bfacd29558a5020990d49fc07ed80ac7/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81edbbc2bfacd29558a5020990d49fc07ed80ac7/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs?ref=81edbbc2bfacd29558a5020990d49fc07ed80ac7", "patch": "@@ -485,3 +485,49 @@ nzint_impl_try_from_int! { i32, NonZeroI32, #[stable(feature = \"nzint_try_from_i\n nzint_impl_try_from_int! { i64, NonZeroI64, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n nzint_impl_try_from_int! { i128, NonZeroI128, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n nzint_impl_try_from_int! { isize, NonZeroIsize, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n+\n+macro_rules! nzint_impl_try_from_nzint {\n+    ($From:ty => $To:ty, $doc: expr) => {\n+        #[stable(feature = \"nzint_try_from_nzint_conv\", since = \"1.48.0\")]\n+        #[doc = $doc]\n+        impl TryFrom<$From> for $To {\n+            type Error = TryFromIntError;\n+\n+            #[inline]\n+            fn try_from(value: $From) -> Result<Self, Self::Error> {\n+                TryFrom::try_from(value.get()).map(|v| {\n+                    // SAFETY: $From is a NonZero type, so v is not zero.\n+                    unsafe { Self::new_unchecked(v) }\n+                })\n+            }\n+        }\n+    };\n+    ($To:ty: $($From: ty),*) => {$(\n+        nzint_impl_try_from_nzint!(\n+            $From => $To,\n+            concat!(\n+                \"Attempts to convert `\",\n+                stringify!($From),\n+                \"` to `\",\n+                stringify!($To),\n+                \"`.\",\n+            )\n+        );\n+    )*};\n+}\n+\n+// Non-zero int -> non-zero unsigned int\n+nzint_impl_try_from_nzint! { NonZeroU8: NonZeroI8, NonZeroU16, NonZeroI16, NonZeroU32, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroU16: NonZeroI8, NonZeroI16, NonZeroU32, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroU32: NonZeroI8, NonZeroI16, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroU64: NonZeroI8, NonZeroI16, NonZeroI32, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroU128: NonZeroI8, NonZeroI16, NonZeroI32, NonZeroI64, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroUsize: NonZeroI8, NonZeroI16, NonZeroU32, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroIsize }\n+\n+// Non-zero int -> non-zero signed int\n+nzint_impl_try_from_nzint! { NonZeroI8: NonZeroU8, NonZeroU16, NonZeroI16, NonZeroU32, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroI16: NonZeroU16, NonZeroU32, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroI32: NonZeroU32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroI64: NonZeroU64, NonZeroU128, NonZeroI128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroI128: NonZeroU128, NonZeroUsize, NonZeroIsize }\n+nzint_impl_try_from_nzint! { NonZeroIsize: NonZeroU16, NonZeroU32, NonZeroI32, NonZeroU64, NonZeroI64, NonZeroU128, NonZeroI128, NonZeroUsize }"}]}