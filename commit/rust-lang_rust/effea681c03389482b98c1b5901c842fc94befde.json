{"sha": "effea681c03389482b98c1b5901c842fc94befde", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZmVhNjgxYzAzMzg5NDgyYjk4YzFiNTkwMWM4NDJmYzk0YmVmZGU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-07-16T17:54:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-16T17:54:02Z"}, "message": "Rollup merge of #87158 - In-line:suggest-full-enum-variant-for-local-module, r=estebank\n\nSuggest full enum variant for local modules", "tree": {"sha": "c39693e44e9fd680c28cecd89f93623b2e63ada7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c39693e44e9fd680c28cecd89f93623b2e63ada7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/effea681c03389482b98c1b5901c842fc94befde", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg8ce7CRBK7hj4Ov3rIwAAc18IALKvCvS4RGQxGwNJqfkTpQA0\nUljJxJpqbtD+WF01zoWhEdXir6iIvU50Db800IMOrjrqDRvRzX4k8yoI3dtQ61sC\nX1SXviHROfGHGWxknueCOEs9P1zJ7PO4QT2gKcN8NoEmFwX9cz1KiMKm7ejtcghA\n38rC+/yvvnYe90etUcpGuflaGFXu/5A6IWUI9LKM4JGH2mjAX5ALJH6NpuYeGyym\ngChftOdEperPAFHK1u2YisYyE8i9EP3K85SAd+Nh2G/XTI8ntHZDSjg5uNe20S1j\nnqIl6EgN+rjbb3rtzouiMgbzynl5mcWrdyeC7bbZ6/Zys75qjUDnRvEIntBRcbw=\n=vK7q\n-----END PGP SIGNATURE-----\n", "payload": "tree c39693e44e9fd680c28cecd89f93623b2e63ada7\nparent 8273567a710df78dac143c2500a69ecc37fe5468\nparent b69090102e409fd8139ab554fcd38e567fda470f\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1626458042 +0200\ncommitter GitHub <noreply@github.com> 1626458042 +0200\n\nRollup merge of #87158 - In-line:suggest-full-enum-variant-for-local-module, r=estebank\n\nSuggest full enum variant for local modules\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/effea681c03389482b98c1b5901c842fc94befde", "html_url": "https://github.com/rust-lang/rust/commit/effea681c03389482b98c1b5901c842fc94befde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/effea681c03389482b98c1b5901c842fc94befde/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8273567a710df78dac143c2500a69ecc37fe5468", "url": "https://api.github.com/repos/rust-lang/rust/commits/8273567a710df78dac143c2500a69ecc37fe5468", "html_url": "https://github.com/rust-lang/rust/commit/8273567a710df78dac143c2500a69ecc37fe5468"}, {"sha": "b69090102e409fd8139ab554fcd38e567fda470f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b69090102e409fd8139ab554fcd38e567fda470f", "html_url": "https://github.com/rust-lang/rust/commit/b69090102e409fd8139ab554fcd38e567fda470f"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "3ea59906d3dcd326d241ecf902912180ce41247a", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/effea681c03389482b98c1b5901c842fc94befde/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effea681c03389482b98c1b5901c842fc94befde/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=effea681c03389482b98c1b5901c842fc94befde", "patch": "@@ -10,6 +10,7 @@ use rustc_hir::lang_items::LangItem;\n use rustc_hir::{is_range_literal, Node};\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::adjustment::AllowTwoPhase;\n+use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{self, AssocItem, Ty, TypeAndMut};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n@@ -201,7 +202,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     let sole_field = &variant.fields[0];\n                     let sole_field_ty = sole_field.ty(self.tcx, substs);\n                     if self.can_coerce(expr_ty, sole_field_ty) {\n-                        let variant_path = self.tcx.def_path_str(variant.def_id);\n+                        let variant_path =\n+                            with_no_trimmed_paths(|| self.tcx.def_path_str(variant.def_id));\n                         // FIXME #56861: DRYer prelude filtering\n                         if let Some(path) = variant_path.strip_prefix(\"std::prelude::\") {\n                             if let Some((_, path)) = path.split_once(\"::\") {"}, {"sha": "1dfc0786668f235dc2d57fec01286d1d880a17e1", "filename": "src/test/ui/suggestions/suggest-full-enum-variant-for-local-module.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/effea681c03389482b98c1b5901c842fc94befde/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-full-enum-variant-for-local-module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/effea681c03389482b98c1b5901c842fc94befde/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-full-enum-variant-for-local-module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-full-enum-variant-for-local-module.rs?ref=effea681c03389482b98c1b5901c842fc94befde", "patch": "@@ -0,0 +1,10 @@\n+mod option {\n+    pub enum O<T> {\n+        Some(T),\n+        None,\n+    }\n+}\n+\n+fn main() {\n+    let _: option::O<()> = (); //~ ERROR 9:28: 9:30: mismatched types [E0308]\n+}"}, {"sha": "22a0ce1e91d7243324dc0245a935d98f94024bbb", "filename": "src/test/ui/suggestions/suggest-full-enum-variant-for-local-module.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/effea681c03389482b98c1b5901c842fc94befde/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-full-enum-variant-for-local-module.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/effea681c03389482b98c1b5901c842fc94befde/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-full-enum-variant-for-local-module.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-full-enum-variant-for-local-module.stderr?ref=effea681c03389482b98c1b5901c842fc94befde", "patch": "@@ -0,0 +1,16 @@\n+error[E0308]: mismatched types\n+  --> $DIR/suggest-full-enum-variant-for-local-module.rs:9:28\n+   |\n+LL |     let _: option::O<()> = ();\n+   |            -------------   ^^\n+   |            |               |\n+   |            |               expected enum `O`, found `()`\n+   |            |               help: try using a variant of the expected enum: `option::O::Some(())`\n+   |            expected due to this\n+   |\n+   = note:   expected enum `O<()>`\n+           found unit type `()`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}