{"sha": "a421e51266940a5d7ebb791cb60639abbb75cc24", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MjFlNTEyNjY5NDBhNWQ3ZWJiNzkxY2I2MDYzOWFiYmI3NWNjMjQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-28T01:31:29Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-30T04:43:06Z"}, "message": "borrowck-migrate-to-nll: use #38899 for testing.", "tree": {"sha": "821a30ed657cd270331a035dc814b8921ba932ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/821a30ed657cd270331a035dc814b8921ba932ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a421e51266940a5d7ebb791cb60639abbb75cc24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a421e51266940a5d7ebb791cb60639abbb75cc24", "html_url": "https://github.com/rust-lang/rust/commit/a421e51266940a5d7ebb791cb60639abbb75cc24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a421e51266940a5d7ebb791cb60639abbb75cc24/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "513852f68b2f8436a8a3ec5b151568c09a751f3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/513852f68b2f8436a8a3ec5b151568c09a751f3c", "html_url": "https://github.com/rust-lang/rust/commit/513852f68b2f8436a8a3ec5b151568c09a751f3c"}], "stats": {"total": 62, "additions": 32, "deletions": 30}, "files": [{"sha": "a33a1d00a57869bcb33fe0b15757001925adacd3", "filename": "src/test/ui/borrowck/borrowck-migrate-to-nll.edition.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a421e51266940a5d7ebb791cb60639abbb75cc24/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a421e51266940a5d7ebb791cb60639abbb75cc24/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr?ref=a421e51266940a5d7ebb791cb60639abbb75cc24", "patch": "@@ -1,14 +1,14 @@\n-warning[E0507]: cannot move out of `foo` in pattern guard\n-  --> $DIR/borrowck-migrate-to-nll.rs:26:18\n+warning[E0502]: cannot borrow `*block.current` as immutable because it is also borrowed as mutable\n+  --> $DIR/borrowck-migrate-to-nll.rs:28:21\n    |\n-LL |                 (|| { let bar = foo; bar.take() })();\n-   |                  ^^             ---\n-   |                  |              |\n-   |                  |              move occurs because `foo` has type `&mut std::option::Option<&i32>`, which does not implement the `Copy` trait\n-   |                  |              move occurs due to use in closure\n-   |                  move out of `foo` occurs here\n+LL |     let x = &mut block;\n+   |             ---------- mutable borrow occurs here\n+LL |     let p: &'a u8 = &*block.current;\n+   |                     ^^^^^^^^^^^^^^^ immutable borrow occurs here\n+LL |     // (use `x` and `p` so enabling NLL doesn't assign overly short lifetimes)\n+LL |     drop(x);\n+   |          - mutable borrow later used here\n    |\n-   = note: variables bound in patterns cannot be moved from until after the end of the pattern guard\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n    = note: for more information, try `rustc --explain E0729`"}, {"sha": "6dda317e57efefce460ced9d5fe242870ac490f0", "filename": "src/test/ui/borrowck/borrowck-migrate-to-nll.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a421e51266940a5d7ebb791cb60639abbb75cc24/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a421e51266940a5d7ebb791cb60639abbb75cc24/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.rs?ref=a421e51266940a5d7ebb791cb60639abbb75cc24", "patch": "@@ -1,4 +1,4 @@\n-// This is a test of the borrowck migrate mode. It leverages #27282, a\n+// This is a test of the borrowck migrate mode. It leverages #38899, a\n // bug that is fixed by NLL: this code is (unsoundly) accepted by\n // AST-borrowck, but is correctly rejected by the NLL borrowck.\n //\n@@ -18,15 +18,17 @@\n //[zflag] run-pass\n //[edition] run-pass\n \n-fn main() {\n-    match Some(&4) {\n-        None => {},\n-        ref mut foo\n-            if {\n-                (|| { let bar = foo; bar.take() })();\n-                false\n-            } => {},\n-        Some(ref _s) => println!(\"Note this arm is bogus; the `Some` became `None` in the guard.\"),\n-        _ => println!(\"Here is some supposedly unreachable code.\"),\n-    }\n+pub struct Block<'a> {\n+    current: &'a u8,\n+    unrelated: &'a u8,\n }\n+\n+fn bump<'a>(mut block: &mut Block<'a>) {\n+    let x = &mut block;\n+    let p: &'a u8 = &*block.current;\n+    // (use `x` and `p` so enabling NLL doesn't assign overly short lifetimes)\n+    drop(x);\n+    drop(p);\n+}\n+\n+fn main() {}"}, {"sha": "a33a1d00a57869bcb33fe0b15757001925adacd3", "filename": "src/test/ui/borrowck/borrowck-migrate-to-nll.zflag.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a421e51266940a5d7ebb791cb60639abbb75cc24/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a421e51266940a5d7ebb791cb60639abbb75cc24/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr?ref=a421e51266940a5d7ebb791cb60639abbb75cc24", "patch": "@@ -1,14 +1,14 @@\n-warning[E0507]: cannot move out of `foo` in pattern guard\n-  --> $DIR/borrowck-migrate-to-nll.rs:26:18\n+warning[E0502]: cannot borrow `*block.current` as immutable because it is also borrowed as mutable\n+  --> $DIR/borrowck-migrate-to-nll.rs:28:21\n    |\n-LL |                 (|| { let bar = foo; bar.take() })();\n-   |                  ^^             ---\n-   |                  |              |\n-   |                  |              move occurs because `foo` has type `&mut std::option::Option<&i32>`, which does not implement the `Copy` trait\n-   |                  |              move occurs due to use in closure\n-   |                  move out of `foo` occurs here\n+LL |     let x = &mut block;\n+   |             ---------- mutable borrow occurs here\n+LL |     let p: &'a u8 = &*block.current;\n+   |                     ^^^^^^^^^^^^^^^ immutable borrow occurs here\n+LL |     // (use `x` and `p` so enabling NLL doesn't assign overly short lifetimes)\n+LL |     drop(x);\n+   |          - mutable borrow later used here\n    |\n-   = note: variables bound in patterns cannot be moved from until after the end of the pattern guard\n    = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n    = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n    = note: for more information, try `rustc --explain E0729`"}]}