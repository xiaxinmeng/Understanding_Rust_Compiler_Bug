{"sha": "224e2e5e9e1d03db1a80455d08bb1d6d8686ec3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNGUyZTVlOWUxZDAzZGIxYTgwNDU1ZDA4YmIxZDZkODY4NmVjM2E=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-28T07:44:48Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-09-15T12:25:30Z"}, "message": "explain ty == None", "tree": {"sha": "bf504fd4fa59d87cbc88fb081e36582e150b02ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf504fd4fa59d87cbc88fb081e36582e150b02ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/224e2e5e9e1d03db1a80455d08bb1d6d8686ec3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/224e2e5e9e1d03db1a80455d08bb1d6d8686ec3a", "html_url": "https://github.com/rust-lang/rust/commit/224e2e5e9e1d03db1a80455d08bb1d6d8686ec3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/224e2e5e9e1d03db1a80455d08bb1d6d8686ec3a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "342481185255acef5e44af8023bab372314afe51", "url": "https://api.github.com/repos/rust-lang/rust/commits/342481185255acef5e44af8023bab372314afe51", "html_url": "https://github.com/rust-lang/rust/commit/342481185255acef5e44af8023bab372314afe51"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "0031dbc4d0d40388177279cea61b50e96de01c1c", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/224e2e5e9e1d03db1a80455d08bb1d6d8686ec3a/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/224e2e5e9e1d03db1a80455d08bb1d6d8686ec3a/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=224e2e5e9e1d03db1a80455d08bb1d6d8686ec3a", "patch": "@@ -57,6 +57,8 @@ struct IsStaticOrFn;\n /// `mode` is the mode of the environment where we found this pointer.\n /// `mutablity` is the mutability of the place to be interned; even if that says\n /// `immutable` things might become mutable if `ty` is not frozen.\n+/// `ty` can be `None` if there is no potential interior mutability\n+/// to account for (e.g. for vtables).\n fn intern_shallow<'rt, 'mir, 'tcx>(\n     ecx: &'rt mut CompileTimeEvalContext<'mir, 'tcx>,\n     leftover_allocations: &'rt mut FxHashSet<AllocId>,\n@@ -97,6 +99,7 @@ fn intern_shallow<'rt, 'mir, 'tcx>(\n     // read-only memory, and also by Miri when evluating other constants/statics that\n     // access this one.\n     if mode == InternMode::Static {\n+        // When `ty` is `None`, we assume no interior mutability.\n         let frozen = ty.map_or(true, |ty| ty.is_freeze(\n             ecx.tcx.tcx,\n             ecx.param_env,"}]}