{"sha": "1e18cc916f653d5bea212bddded8960f548a975d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMThjYzkxNmY2NTNkNWJlYTIxMmJkZGRlZDg5NjBmNTQ4YTk3NWQ=", "commit": {"author": {"name": "Hidehito Yabuuchi", "email": "hdht.ybuc@gmail.com", "date": "2018-12-02T07:07:57Z"}, "committer": {"name": "Hidehito Yabuuchi", "email": "hdht.ybuc@gmail.com", "date": "2018-12-02T07:08:08Z"}, "message": "Update issue number of `shrink_to` methods to point the tracking issue", "tree": {"sha": "77b9e20a7058b9b9d6b0bebc478c5e4fba079e5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77b9e20a7058b9b9d6b0bebc478c5e4fba079e5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e18cc916f653d5bea212bddded8960f548a975d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e18cc916f653d5bea212bddded8960f548a975d", "html_url": "https://github.com/rust-lang/rust/commit/1e18cc916f653d5bea212bddded8960f548a975d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e18cc916f653d5bea212bddded8960f548a975d/comments", "author": {"login": "ordovicia", "id": 8240952, "node_id": "MDQ6VXNlcjgyNDA5NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/8240952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ordovicia", "html_url": "https://github.com/ordovicia", "followers_url": "https://api.github.com/users/ordovicia/followers", "following_url": "https://api.github.com/users/ordovicia/following{/other_user}", "gists_url": "https://api.github.com/users/ordovicia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ordovicia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ordovicia/subscriptions", "organizations_url": "https://api.github.com/users/ordovicia/orgs", "repos_url": "https://api.github.com/users/ordovicia/repos", "events_url": "https://api.github.com/users/ordovicia/events{/privacy}", "received_events_url": "https://api.github.com/users/ordovicia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ordovicia", "id": 8240952, "node_id": "MDQ6VXNlcjgyNDA5NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/8240952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ordovicia", "html_url": "https://github.com/ordovicia", "followers_url": "https://api.github.com/users/ordovicia/followers", "following_url": "https://api.github.com/users/ordovicia/following{/other_user}", "gists_url": "https://api.github.com/users/ordovicia/gists{/gist_id}", "starred_url": "https://api.github.com/users/ordovicia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ordovicia/subscriptions", "organizations_url": "https://api.github.com/users/ordovicia/orgs", "repos_url": "https://api.github.com/users/ordovicia/repos", "events_url": "https://api.github.com/users/ordovicia/events{/privacy}", "received_events_url": "https://api.github.com/users/ordovicia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af7554d3a2e9e6171ca44bd1d4828606a9868f74", "url": "https://api.github.com/repos/rust-lang/rust/commits/af7554d3a2e9e6171ca44bd1d4828606a9868f74", "html_url": "https://github.com/rust-lang/rust/commit/af7554d3a2e9e6171ca44bd1d4828606a9868f74"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "8c36962a299c2eef03ac89c4dae89cbbb35db1de", "filename": "src/liballoc/collections/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e18cc916f653d5bea212bddded8960f548a975d/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e18cc916f653d5bea212bddded8960f548a975d/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs?ref=1e18cc916f653d5bea212bddded8960f548a975d", "patch": "@@ -529,7 +529,7 @@ impl<T: Ord> BinaryHeap<T> {\n     /// assert!(heap.capacity() >= 10);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.data.shrink_to(min_capacity)\n     }"}, {"sha": "baa26ffd9376f9e784a65cfcbf88a10a83dcbf22", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e18cc916f653d5bea212bddded8960f548a975d/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e18cc916f653d5bea212bddded8960f548a975d/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=1e18cc916f653d5bea212bddded8960f548a975d", "patch": "@@ -701,7 +701,7 @@ impl<T> VecDeque<T> {\n     /// buf.shrink_to(0);\n     /// assert!(buf.capacity() >= 4);\n     /// ```\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         assert!(self.capacity() >= min_capacity, \"Tried to shrink to a larger capacity\");\n "}, {"sha": "662f8ae614fcbed729514b50ce9e70c897cd3c7a", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e18cc916f653d5bea212bddded8960f548a975d/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e18cc916f653d5bea212bddded8960f548a975d/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=1e18cc916f653d5bea212bddded8960f548a975d", "patch": "@@ -1050,7 +1050,7 @@ impl String {\n     /// assert!(s.capacity() >= 3);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.vec.shrink_to(min_capacity)\n     }"}, {"sha": "ca7c766e413307a268a828212b31f84ae57db622", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e18cc916f653d5bea212bddded8960f548a975d/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e18cc916f653d5bea212bddded8960f548a975d/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=1e18cc916f653d5bea212bddded8960f548a975d", "patch": "@@ -613,7 +613,7 @@ impl<T> Vec<T> {\n     /// vec.shrink_to(0);\n     /// assert!(vec.capacity() >= 3);\n     /// ```\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.buf.shrink_to_fit(cmp::max(self.len, min_capacity));\n     }"}, {"sha": "536ce2e16a09b5e03b84da937e6aa061669a791f", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e18cc916f653d5bea212bddded8960f548a975d/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e18cc916f653d5bea212bddded8960f548a975d/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=1e18cc916f653d5bea212bddded8960f548a975d", "patch": "@@ -1018,7 +1018,7 @@ impl<K, V, S> HashMap<K, V, S>\n     /// map.shrink_to(0);\n     /// assert!(map.capacity() >= 2);\n     /// ```\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         assert!(self.capacity() >= min_capacity, \"Tried to shrink to a larger capacity\");\n "}, {"sha": "4bb3ce0cf4489e76b7417cb04a4acbe2e732500b", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e18cc916f653d5bea212bddded8960f548a975d/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e18cc916f653d5bea212bddded8960f548a975d/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=1e18cc916f653d5bea212bddded8960f548a975d", "patch": "@@ -315,7 +315,7 @@ impl<T, S> HashSet<T, S>\n     /// assert!(set.capacity() >= 2);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.map.shrink_to(min_capacity)\n     }"}, {"sha": "edca8c9e5b591f4fdb8752b51d6fd8852f1e9e75", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e18cc916f653d5bea212bddded8960f548a975d/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e18cc916f653d5bea212bddded8960f548a975d/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=1e18cc916f653d5bea212bddded8960f548a975d", "patch": "@@ -324,7 +324,7 @@ impl OsString {\n     /// assert!(s.capacity() >= 3);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"0\")]\n+    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue=\"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.inner.shrink_to(min_capacity)\n     }"}]}