{"sha": "46c07ed57898251cd2821e41a3162d0c2d2e36d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YzA3ZWQ1Nzg5ODI1MWNkMjgyMWU0MWEzMTYyZDBjMmQyZTM2ZDU=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2019-07-28T11:28:14Z"}, "committer": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2019-07-28T11:28:14Z"}, "message": "Remove vertical ellipses from tests in complete_scope.rs", "tree": {"sha": "13befa2c436d6d51b6102444f980e9e64e1b582c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13befa2c436d6d51b6102444f980e9e64e1b582c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46c07ed57898251cd2821e41a3162d0c2d2e36d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46c07ed57898251cd2821e41a3162d0c2d2e36d5", "html_url": "https://github.com/rust-lang/rust/commit/46c07ed57898251cd2821e41a3162d0c2d2e36d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46c07ed57898251cd2821e41a3162d0c2d2e36d5/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c4df97996ac88133c12069debff1f86d3a9f7cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c4df97996ac88133c12069debff1f86d3a9f7cb", "html_url": "https://github.com/rust-lang/rust/commit/5c4df97996ac88133c12069debff1f86d3a9f7cb"}], "stats": {"total": 468, "additions": 225, "deletions": 243}, "files": [{"sha": "079ecfacc281dbd917dbc2caf38205c0908ae054", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 225, "deletions": 243, "changes": 468, "blob_url": "https://github.com/rust-lang/rust/blob/46c07ed57898251cd2821e41a3162d0c2d2e36d5/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c07ed57898251cd2821e41a3162d0c2d2e36d5/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=46c07ed57898251cd2821e41a3162d0c2d2e36d5", "patch": "@@ -131,51 +131,49 @@ mod tests {\n     #[test]\n     fn completes_bindings_from_let() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 fn quux(x: i32) {\n                     let y = 92;\n                     1 + <|>;\n                     let z = ();\n                 }\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"quux\",\n-       \u22ee        source_range: [91; 91),\n-       \u22ee        delete: [91; 91),\n-       \u22ee        insert: \"quux($0)\",\n-       \u22ee        kind: Function,\n-       \u22ee        detail: \"fn quux(x: i32)\",\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"x\",\n-       \u22ee        source_range: [91; 91),\n-       \u22ee        delete: [91; 91),\n-       \u22ee        insert: \"x\",\n-       \u22ee        kind: Binding,\n-       \u22ee        detail: \"i32\",\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"y\",\n-       \u22ee        source_range: [91; 91),\n-       \u22ee        delete: [91; 91),\n-       \u22ee        insert: \"y\",\n-       \u22ee        kind: Binding,\n-       \u22ee        detail: \"i32\",\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n-                );\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"quux\",\n+        source_range: [91; 91),\n+        delete: [91; 91),\n+        insert: \"quux($0)\",\n+        kind: Function,\n+        detail: \"fn quux(x: i32)\",\n+    },\n+    CompletionItem {\n+        label: \"x\",\n+        source_range: [91; 91),\n+        delete: [91; 91),\n+        insert: \"x\",\n+        kind: Binding,\n+        detail: \"i32\",\n+    },\n+    CompletionItem {\n+        label: \"y\",\n+        source_range: [91; 91),\n+        delete: [91; 91),\n+        insert: \"y\",\n+        kind: Binding,\n+        detail: \"i32\",\n+    },\n+]\"###\n+        );\n     }\n \n     #[test]\n     fn completes_bindings_from_if_let() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 fn quux() {\n                     if let Some(x) = foo() {\n                         let y = 92;\n@@ -186,188 +184,178 @@ mod tests {\n                     }\n                 }\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"a\",\n-       \u22ee        source_range: [242; 242),\n-       \u22ee        delete: [242; 242),\n-       \u22ee        insert: \"a\",\n-       \u22ee        kind: Binding,\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"b\",\n-       \u22ee        source_range: [242; 242),\n-       \u22ee        delete: [242; 242),\n-       \u22ee        insert: \"b\",\n-       \u22ee        kind: Binding,\n-       \u22ee        detail: \"i32\",\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"quux\",\n-       \u22ee        source_range: [242; 242),\n-       \u22ee        delete: [242; 242),\n-       \u22ee        insert: \"quux()$0\",\n-       \u22ee        kind: Function,\n-       \u22ee        detail: \"fn quux()\",\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n-                );\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"a\",\n+        source_range: [242; 242),\n+        delete: [242; 242),\n+        insert: \"a\",\n+        kind: Binding,\n+    },\n+    CompletionItem {\n+        label: \"b\",\n+        source_range: [242; 242),\n+        delete: [242; 242),\n+        insert: \"b\",\n+        kind: Binding,\n+        detail: \"i32\",\n+    },\n+    CompletionItem {\n+        label: \"quux\",\n+        source_range: [242; 242),\n+        delete: [242; 242),\n+        insert: \"quux()$0\",\n+        kind: Function,\n+        detail: \"fn quux()\",\n+    },\n+]\"###\n+        );\n     }\n \n     #[test]\n     fn completes_bindings_from_for() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 fn quux() {\n                     for x in &[1, 2, 3] {\n                         <|>\n                     }\n                 }\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"quux\",\n-       \u22ee        source_range: [95; 95),\n-       \u22ee        delete: [95; 95),\n-       \u22ee        insert: \"quux()$0\",\n-       \u22ee        kind: Function,\n-       \u22ee        detail: \"fn quux()\",\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"x\",\n-       \u22ee        source_range: [95; 95),\n-       \u22ee        delete: [95; 95),\n-       \u22ee        insert: \"x\",\n-       \u22ee        kind: Binding,\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n-                );\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"quux\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"quux()$0\",\n+        kind: Function,\n+        detail: \"fn quux()\",\n+    },\n+    CompletionItem {\n+        label: \"x\",\n+        source_range: [95; 95),\n+        delete: [95; 95),\n+        insert: \"x\",\n+        kind: Binding,\n+    },\n+]\"###\n+        );\n     }\n \n     #[test]\n     fn completes_generic_params() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 fn quux<T>() {\n                     <|>\n                 }\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"T\",\n-       \u22ee        source_range: [52; 52),\n-       \u22ee        delete: [52; 52),\n-       \u22ee        insert: \"T\",\n-       \u22ee        kind: TypeParam,\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"quux\",\n-       \u22ee        source_range: [52; 52),\n-       \u22ee        delete: [52; 52),\n-       \u22ee        insert: \"quux()$0\",\n-       \u22ee        kind: Function,\n-       \u22ee        detail: \"fn quux<T>()\",\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n-                );\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"T\",\n+        source_range: [52; 52),\n+        delete: [52; 52),\n+        insert: \"T\",\n+        kind: TypeParam,\n+    },\n+    CompletionItem {\n+        label: \"quux\",\n+        source_range: [52; 52),\n+        delete: [52; 52),\n+        insert: \"quux()$0\",\n+        kind: Function,\n+        detail: \"fn quux<T>()\",\n+    },\n+]\"###\n+        );\n     }\n \n     #[test]\n     fn completes_generic_params_in_struct() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 struct X<T> {\n                     x: <|>\n                 }\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"T\",\n-       \u22ee        source_range: [54; 54),\n-       \u22ee        delete: [54; 54),\n-       \u22ee        insert: \"T\",\n-       \u22ee        kind: TypeParam,\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"X\",\n-       \u22ee        source_range: [54; 54),\n-       \u22ee        delete: [54; 54),\n-       \u22ee        insert: \"X\",\n-       \u22ee        kind: Struct,\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n-                );\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"T\",\n+        source_range: [54; 54),\n+        delete: [54; 54),\n+        insert: \"T\",\n+        kind: TypeParam,\n+    },\n+    CompletionItem {\n+        label: \"X\",\n+        source_range: [54; 54),\n+        delete: [54; 54),\n+        insert: \"X\",\n+        kind: Struct,\n+    },\n+]\"###\n+        );\n     }\n \n     #[test]\n     fn completes_module_items() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 struct Foo;\n                 enum Baz {}\n                 fn quux() {\n                     <|>\n                 }\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"Baz\",\n-       \u22ee        source_range: [105; 105),\n-       \u22ee        delete: [105; 105),\n-       \u22ee        insert: \"Baz\",\n-       \u22ee        kind: Enum,\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"Foo\",\n-       \u22ee        source_range: [105; 105),\n-       \u22ee        delete: [105; 105),\n-       \u22ee        insert: \"Foo\",\n-       \u22ee        kind: Struct,\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"quux\",\n-       \u22ee        source_range: [105; 105),\n-       \u22ee        delete: [105; 105),\n-       \u22ee        insert: \"quux()$0\",\n-       \u22ee        kind: Function,\n-       \u22ee        detail: \"fn quux()\",\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Baz\",\n+        source_range: [105; 105),\n+        delete: [105; 105),\n+        insert: \"Baz\",\n+        kind: Enum,\n+    },\n+    CompletionItem {\n+        label: \"Foo\",\n+        source_range: [105; 105),\n+        delete: [105; 105),\n+        insert: \"Foo\",\n+        kind: Struct,\n+    },\n+    CompletionItem {\n+        label: \"quux\",\n+        source_range: [105; 105),\n+        delete: [105; 105),\n+        insert: \"quux()$0\",\n+        kind: Function,\n+        detail: \"fn quux()\",\n+    },\n+]\"###\n                 );\n     }\n \n     #[test]\n     fn completes_extern_prelude() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 //- /lib.rs\n                 use <|>;\n \n                 //- /other_crate/lib.rs\n                 // nothing here\n                 \"\n-                    ),\n-        @r#\"[\n+            ),\n+            @r#\"[\n     CompletionItem {\n         label: \"other_crate\",\n         source_range: [4; 4),\n@@ -376,79 +364,75 @@ mod tests {\n         kind: Module,\n     },\n ]\"#\n-                );\n+        );\n     }\n \n     #[test]\n     fn completes_module_items_in_nested_modules() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 struct Foo;\n                 mod m {\n                     struct Bar;\n                     fn quux() { <|> }\n                 }\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"Bar\",\n-       \u22ee        source_range: [117; 117),\n-       \u22ee        delete: [117; 117),\n-       \u22ee        insert: \"Bar\",\n-       \u22ee        kind: Struct,\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"quux\",\n-       \u22ee        source_range: [117; 117),\n-       \u22ee        delete: [117; 117),\n-       \u22ee        insert: \"quux()$0\",\n-       \u22ee        kind: Function,\n-       \u22ee        detail: \"fn quux()\",\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n-                );\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Bar\",\n+        source_range: [117; 117),\n+        delete: [117; 117),\n+        insert: \"Bar\",\n+        kind: Struct,\n+    },\n+    CompletionItem {\n+        label: \"quux\",\n+        source_range: [117; 117),\n+        delete: [117; 117),\n+        insert: \"quux()$0\",\n+        kind: Function,\n+        detail: \"fn quux()\",\n+    },\n+]\"###\n+        );\n     }\n \n     #[test]\n     fn completes_return_type() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 struct Foo;\n                 fn x() -> <|>\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"Foo\",\n-       \u22ee        source_range: [55; 55),\n-       \u22ee        delete: [55; 55),\n-       \u22ee        insert: \"Foo\",\n-       \u22ee        kind: Struct,\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"x\",\n-       \u22ee        source_range: [55; 55),\n-       \u22ee        delete: [55; 55),\n-       \u22ee        insert: \"x()$0\",\n-       \u22ee        kind: Function,\n-       \u22ee        detail: \"fn x()\",\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n-                );\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"Foo\",\n+        source_range: [55; 55),\n+        delete: [55; 55),\n+        insert: \"Foo\",\n+        kind: Struct,\n+    },\n+    CompletionItem {\n+        label: \"x\",\n+        source_range: [55; 55),\n+        delete: [55; 55),\n+        insert: \"x()$0\",\n+        kind: Function,\n+        detail: \"fn x()\",\n+    },\n+]\"###\n+        );\n     }\n \n     #[test]\n     fn dont_show_both_completions_for_shadowing() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        r\"\n+            do_reference_completion(\n+                r\"\n                 fn foo() {\n                     let bar = 92;\n                     {\n@@ -457,35 +441,33 @@ mod tests {\n                     }\n                 }\n                 \"\n-                    ),\n-        @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"bar\",\n-       \u22ee        source_range: [146; 146),\n-       \u22ee        delete: [146; 146),\n-       \u22ee        insert: \"bar\",\n-       \u22ee        kind: Binding,\n-       \u22ee        detail: \"i32\",\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"foo\",\n-       \u22ee        source_range: [146; 146),\n-       \u22ee        delete: [146; 146),\n-       \u22ee        insert: \"foo()$0\",\n-       \u22ee        kind: Function,\n-       \u22ee        detail: \"fn foo()\",\n-       \u22ee    },\n-       \u22ee]\n-        \"###\n-                );\n+            ),\n+            @r###\"[\n+    CompletionItem {\n+        label: \"bar\",\n+        source_range: [146; 146),\n+        delete: [146; 146),\n+        insert: \"bar\",\n+        kind: Binding,\n+        detail: \"i32\",\n+    },\n+    CompletionItem {\n+        label: \"foo\",\n+        source_range: [146; 146),\n+        delete: [146; 146),\n+        insert: \"foo()$0\",\n+        kind: Function,\n+        detail: \"fn foo()\",\n+    },\n+]\"###\n+        );\n     }\n \n     #[test]\n     fn completes_self_in_methods() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(r\"impl S { fn foo(&self) { <|> } }\"),\n-        @r#\"[\n+            do_reference_completion(r\"impl S { fn foo(&self) { <|> } }\"),\n+            @r#\"[\n     CompletionItem {\n         label: \"Self\",\n         source_range: [25; 25),\n@@ -502,14 +484,14 @@ mod tests {\n         detail: \"&{unknown}\",\n     },\n ]\"#\n-                );\n+        );\n     }\n \n     #[test]\n     fn completes_prelude() {\n         assert_debug_snapshot_matches!(\n-                    do_reference_completion(\n-                        \"\n+            do_reference_completion(\n+                \"\n                 //- /main.rs\n                 fn foo() { let x: <|> }\n \n@@ -521,8 +503,8 @@ mod tests {\n                     struct Option;\n                 }\n                 \"\n-                    ),\n-        @r#\"[\n+            ),\n+            @r#\"[\n     CompletionItem {\n         label: \"Option\",\n         source_range: [18; 18),\n@@ -546,6 +528,6 @@ mod tests {\n         kind: Module,\n     },\n ]\"#\n-                );\n+        );\n     }\n }"}]}