{"sha": "3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZjhiOGFmOTg4ZmE1ZmZjYjEyYWRlMzZmNmRhNDkzMzhkZjQxZWE=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-01-11T20:47:14Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-01-15T01:38:22Z"}, "message": "s/moved variable/moved value/", "tree": {"sha": "d5dd2272b0e2803fe74d38d151214d7f3aa470db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5dd2272b0e2803fe74d38d151214d7f3aa470db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "html_url": "https://github.com/rust-lang/rust/commit/3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1be4bfb8ccfd6a91fe63cc2808f3c5e9177d52dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1be4bfb8ccfd6a91fe63cc2808f3c5e9177d52dd", "html_url": "https://github.com/rust-lang/rust/commit/1be4bfb8ccfd6a91fe63cc2808f3c5e9177d52dd"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "fead1f3352ec81b0feac93732a2e5f1478cd0000", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -1662,7 +1662,7 @@ fn check_fn(_fk: visit::fn_kind, _decl: fn_decl,\n enum ReadKind {\n     PossiblyUninitializedVariable,\n     PossiblyUninitializedField,\n-    MovedVariable\n+    MovedValue\n }\n \n impl @Liveness {\n@@ -1815,7 +1815,7 @@ impl @Liveness {\n                            lnk: LiveNodeKind,\n                            var: Variable) {\n \n-        // the only time that it is possible to have a moved variable\n+        // the only time that it is possible to have a moved value\n         // used by ExitNode would be arguments or fields in a ctor.\n         // we give a slightly different error message in those cases.\n         if lnk == ExitNode {\n@@ -1837,7 +1837,7 @@ impl @Liveness {\n             }\n         }\n \n-        self.report_illegal_read(move_span, lnk, var, MovedVariable);\n+        self.report_illegal_read(move_span, lnk, var, MovedValue);\n         self.tcx.sess.span_note(\n             move_span, ~\"move of variable occurred here\");\n \n@@ -1852,7 +1852,7 @@ impl @Liveness {\n             ~\"possibly uninitialized variable\"\n           }\n           PossiblyUninitializedField => ~\"possibly uninitialized field\",\n-          MovedVariable => ~\"moved variable\"\n+          MovedValue => ~\"moved value\"\n         };\n         let name = (*self.ir).variable_name(var);\n         match lnk {"}, {"sha": "cd85cb197781ff7a12bd87d44d88bc3f058acc46", "filename": "src/test/compile-fail/alt-vec-tail-move.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Falt-vec-tail-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Falt-vec-tail-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Falt-vec-tail-move.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -4,5 +4,5 @@ fn main() {\n         [1, 2, ..move tail] => tail,\n         _ => core::util::unreachable()\n     };\n-    a[0] = 0; //~ ERROR: use of moved variable\n+    a[0] = 0; //~ ERROR: use of moved value\n }"}, {"sha": "097158843a295a2e37ab163423092492ce222958", "filename": "src/test/compile-fail/cap-clause-use-after-move.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fcap-clause-use-after-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fcap-clause-use-after-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcap-clause-use-after-move.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -11,5 +11,5 @@\n fn main() {\n     let x = 5;\n     let _y = fn~(move x) { }; //~ WARNING captured variable `x` not used in closure\n-    let _z = x; //~ ERROR use of moved variable: `x`\n+    let _z = x; //~ ERROR use of moved value: `x`\n }"}, {"sha": "383bd02c0c240175200df0ffdf9981bb0c2e0ab7", "filename": "src/test/compile-fail/liveness-move-from-mode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fliveness-move-from-mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fliveness-move-from-mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-move-from-mode.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -14,7 +14,7 @@ fn main() {\n \n     let x: int = 25;\n     loop {\n-        take(move x); //~ ERROR use of moved variable: `x`\n+        take(move x); //~ ERROR use of moved value: `x`\n         //~^ NOTE move of variable occurred here\n     }\n }"}, {"sha": "0935d429966549d3a8665939066a0a8bf8e7c1c1", "filename": "src/test/compile-fail/liveness-move-in-loop.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fliveness-move-in-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fliveness-move-in-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-move-in-loop.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -18,10 +18,10 @@ fn main() {\n             loop {\n                 loop {\n // tjc: Not sure why it prints the same error twice\n-                    x = move y; //~ ERROR use of moved variable\n-                    //~^ NOTE move of variable occurred here\n-                    //~^^ ERROR use of moved variable\n-                    //~^^^ NOTE move of variable occurred here\n+                    x = move y; //~ ERROR use of moved value\n+                    //~^ NOTE move of value occurred here\n+                    //~^^ ERROR use of moved value\n+                    //~^^^ NOTE move of value occurred here\n \n                     copy x;\n                 }"}, {"sha": "9f261fdb2d1ba74569d4e1beb869f5d50ec2a14e", "filename": "src/test/compile-fail/liveness-move-in-while.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fliveness-move-in-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fliveness-move-in-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-move-in-while.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -16,9 +16,9 @@ fn main() {\n         log(debug, y);\n // tjc: not sure why it prints the same error twice\n         while true { while true { while true { x = move y; copy x; } } }\n-        //~^ ERROR use of moved variable: `y`\n-        //~^^ NOTE move of variable occurred here\n-        //~^^^ ERROR use of moved variable: `y`\n-        //~^^^^ NOTE move of variable occurred here\n+        //~^ ERROR use of moved value: `y`\n+        //~^^ NOTE move of value occurred here\n+        //~^^^ ERROR use of moved value: `y`\n+        //~^^^^ NOTE move of value occurred here\n     }\n }"}, {"sha": "d48cbc23e158e63f7735ec0538c2d906bd698cf4", "filename": "src/test/compile-fail/liveness-use-after-move.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fliveness-use-after-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fliveness-use-after-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-use-after-move.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -10,7 +10,7 @@\n \n fn main() {\n     let x = @5;\n-    let y = move x; //~ NOTE move of variable occurred here\n-    log(debug, *x); //~ ERROR use of moved variable: `x`\n+    let y = move x; //~ NOTE move of value occurred here\n+    log(debug, *x); //~ ERROR use of moved value: `x`\n     copy y;\n }"}, {"sha": "2a1e486d133563feb251bdd3a639008a38238a7a", "filename": "src/test/compile-fail/liveness-use-after-send.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fliveness-use-after-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fliveness-use-after-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-use-after-send.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -19,8 +19,8 @@ enum _chan<T> = int;\n // Tests that \"log(debug, message);\" is flagged as using\n // message after the send deinitializes it\n fn test00_start(ch: _chan<int>, message: int, _count: int) {\n-    send(ch, move message); //~ NOTE move of variable occurred here\n-    log(debug, message); //~ ERROR use of moved variable: `message`\n+    send(ch, move message); //~ NOTE move of value occurred here\n+    log(debug, message); //~ ERROR use of moved value: `message`\n }\n \n fn main() { fail; }"}, {"sha": "6d5bb638be69bd3bd885627cfc030b1cecc60de6", "filename": "src/test/compile-fail/move-based-on-type-tuple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fmove-based-on-type-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fmove-based-on-type-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmove-based-on-type-tuple.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn dup(x: ~int) -> ~(~int,~int) { ~(x, x) } //~ ERROR use of moved variable\n+fn dup(x: ~int) -> ~(~int,~int) { ~(x, x) } //~ ERROR use of moved value\n fn main() {\n     dup(~3);\n }"}, {"sha": "57829e72674e6f135bfc9910a04b167f380731aa", "filename": "src/test/compile-fail/moves-based-on-type-capture-clause-bad.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-capture-clause-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-capture-clause-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-capture-clause-bad.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -3,6 +3,6 @@ fn main() {\n     do task::spawn {\n         io::println(x);\n     }\n-    io::println(x); //~ ERROR use of moved variable\n+    io::println(x); //~ ERROR use of moved value\n }\n "}, {"sha": "c5a5f9e74d0dbd17850617d5c2a7e7e7228d13fb", "filename": "src/test/compile-fail/no-capture-arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: use of moved variable\n+// error-pattern: use of moved value\n \n extern mod std;\n use std::arc;"}, {"sha": "a959772f5d246adc31e8b61f44d428763f17013f", "filename": "src/test/compile-fail/no-reuse-move-arc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -16,12 +16,12 @@ fn main() {\n     let v = ~[1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n     let arc_v = arc::ARC(v);\n \n-    do task::spawn() |move arc_v| { //~ NOTE move of variable occurred here\n+    do task::spawn() |move arc_v| { //~ NOTE move of value occurred here\n         let v = *arc::get(&arc_v);\n         assert v[3] == 4;\n     };\n \n-    assert (*arc::get(&arc_v))[2] == 3; //~ ERROR use of moved variable: `arc_v`\n+    assert (*arc::get(&arc_v))[2] == 3; //~ ERROR use of moved value: `arc_v`\n \n     log(info, arc_v);\n }"}, {"sha": "2afecee6e1c55fe48cb3a0ae37c2062afc1eb8c8", "filename": "src/test/compile-fail/unary-move.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Funary-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Funary-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funary-move.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: use of moved variable\n+// error-pattern: use of moved value\n \n fn main() {\n     let x = 3;"}, {"sha": "6c268c5e13c83b6184f841c8b1e475b76a37d6a0", "filename": "src/test/compile-fail/use-after-move-based-on-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fuse-after-move-based-on-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fuse-after-move-based-on-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-after-move-based-on-type.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -11,6 +11,6 @@\n fn main() {\n     let x = ~\"Hello!\";\n     let _y = x;\n-    io::println(x); //~ ERROR use of moved variable\n+    io::println(x); //~ ERROR use of moved value\n }\n "}, {"sha": "270fe3626e8a7167d7b26223eab4a5c757b0b214", "filename": "src/test/compile-fail/use-after-move-self-based-on-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self-based-on-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self-based-on-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self-based-on-type.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -6,7 +6,7 @@ struct S {\n impl S {\n     fn foo(self) -> int {\n         self.bar();\n-        return self.x;  //~ ERROR use of moved variable\n+        return self.x;  //~ ERROR use of moved value\n     }\n \n     fn bar(self) {}"}, {"sha": "8ba58cf6f66fe3126d6e3bb3d964c11df0494ae8", "filename": "src/test/compile-fail/use-after-move-self.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf8b8af988fa5ffcb12ade36f6da49338df41ea/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self.rs?ref=3bf8b8af988fa5ffcb12ade36f6da49338df41ea", "patch": "@@ -5,7 +5,7 @@ struct S {\n impl S {\n     fn foo(self) -> int {\n         (move self).bar();\n-        return self.x;  //~ ERROR use of moved variable\n+        return self.x;  //~ ERROR use of moved value\n     }\n \n     fn bar(self) {}"}]}