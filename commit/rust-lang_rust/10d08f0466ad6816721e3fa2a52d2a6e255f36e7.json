{"sha": "10d08f0466ad6816721e3fa2a52d2a6e255f36e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZDA4ZjA0NjZhZDY4MTY3MjFlM2ZhMmE1MmQyYTZlMjU1ZjM2ZTc=", "commit": {"author": {"name": "Martin Wernst\u00e5l", "email": "m4rw3r@gmail.com", "date": "2015-08-17T18:24:28Z"}, "committer": {"name": "Martin Wernst\u00e5l", "email": "m4rw3r@gmail.com", "date": "2015-08-17T18:24:28Z"}, "message": "rustdoc: Removed command line option issue-tracker-base-url", "tree": {"sha": "648db98421d20ba11e32d9735265a0cfae5815ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/648db98421d20ba11e32d9735265a0cfae5815ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10d08f0466ad6816721e3fa2a52d2a6e255f36e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10d08f0466ad6816721e3fa2a52d2a6e255f36e7", "html_url": "https://github.com/rust-lang/rust/commit/10d08f0466ad6816721e3fa2a52d2a6e255f36e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10d08f0466ad6816721e3fa2a52d2a6e255f36e7/comments", "author": {"login": "m4rw3r", "id": 108100, "node_id": "MDQ6VXNlcjEwODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/108100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m4rw3r", "html_url": "https://github.com/m4rw3r", "followers_url": "https://api.github.com/users/m4rw3r/followers", "following_url": "https://api.github.com/users/m4rw3r/following{/other_user}", "gists_url": "https://api.github.com/users/m4rw3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/m4rw3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m4rw3r/subscriptions", "organizations_url": "https://api.github.com/users/m4rw3r/orgs", "repos_url": "https://api.github.com/users/m4rw3r/repos", "events_url": "https://api.github.com/users/m4rw3r/events{/privacy}", "received_events_url": "https://api.github.com/users/m4rw3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m4rw3r", "id": 108100, "node_id": "MDQ6VXNlcjEwODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/108100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m4rw3r", "html_url": "https://github.com/m4rw3r", "followers_url": "https://api.github.com/users/m4rw3r/followers", "following_url": "https://api.github.com/users/m4rw3r/following{/other_user}", "gists_url": "https://api.github.com/users/m4rw3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/m4rw3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m4rw3r/subscriptions", "organizations_url": "https://api.github.com/users/m4rw3r/orgs", "repos_url": "https://api.github.com/users/m4rw3r/repos", "events_url": "https://api.github.com/users/m4rw3r/events{/privacy}", "received_events_url": "https://api.github.com/users/m4rw3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d893145cae67032ebdc3cfc73396cab362840bb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d893145cae67032ebdc3cfc73396cab362840bb3", "html_url": "https://github.com/rust-lang/rust/commit/d893145cae67032ebdc3cfc73396cab362840bb3"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "d2c8078e62a4050141ce824b6f980d11eef64420", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/10d08f0466ad6816721e3fa2a52d2a6e255f36e7/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10d08f0466ad6816721e3fa2a52d2a6e255f36e7/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=10d08f0466ad6816721e3fa2a52d2a6e255f36e7", "patch": "@@ -306,8 +306,7 @@ thread_local!(pub static CURRENT_LOCATION_KEY: RefCell<Vec<String>> =\n pub fn run(mut krate: clean::Crate,\n            external_html: &ExternalHtml,\n            dst: PathBuf,\n-           passes: HashSet<String>,\n-           issue_tracker_base_url: Option<String>) -> io::Result<()> {\n+           passes: HashSet<String>) -> io::Result<()> {\n     let src_root = match krate.src.parent() {\n         Some(p) => p.to_path_buf(),\n         None => PathBuf::new(),\n@@ -327,7 +326,7 @@ pub fn run(mut krate: clean::Crate,\n         },\n         include_sources: true,\n         render_redirect_pages: false,\n-        issue_tracker_base_url: issue_tracker_base_url,\n+        issue_tracker_base_url: None,\n     };\n \n     try!(mkdir(&cx.dst));"}, {"sha": "a754fb058ee99bbab9a6ee07f52c224576a7c74d", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/10d08f0466ad6816721e3fa2a52d2a6e255f36e7/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10d08f0466ad6816721e3fa2a52d2a6e255f36e7/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=10d08f0466ad6816721e3fa2a52d2a6e255f36e7", "patch": "@@ -179,8 +179,6 @@ pub fn opts() -> Vec<getopts::OptGroup> {\n                  \"FILES\"),\n         optopt(\"\", \"markdown-playground-url\",\n                \"URL to send code snippets to\", \"URL\"),\n-        optopt(\"\", \"issue-tracker-base-url\",\n-               \"base URL for issue tracker\", \"URL\"),\n         optflag(\"\", \"markdown-no-toc\", \"don't include table of contents\")\n     )\n }\n@@ -287,8 +285,7 @@ pub fn main_args(args: &[String]) -> isize {\n         Some(\"html\") | None => {\n             match html::render::run(krate, &external_html,\n                                     output.unwrap_or(PathBuf::from(\"doc\")),\n-                                    passes.into_iter().collect(),\n-                                    matches.opt_str(\"issue-tracker-base-url\")) {\n+                                    passes.into_iter().collect()) {\n                 Ok(()) => {}\n                 Err(e) => panic!(\"failed to generate documentation: {}\", e),\n             }"}]}