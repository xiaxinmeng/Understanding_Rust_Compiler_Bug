{"sha": "fab0f47fdf989c7a395b25c3cbddaacee81356ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhYjBmNDdmZGY5ODljN2EzOTViMjVjM2NiZGRhYWNlZTgxMzU2YmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-28T17:27:01Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-31T22:47:36Z"}, "message": "workcache: Switch field privacy as necessary", "tree": {"sha": "b95723ce5224218d9c619b97391b1b6c4acfeb11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b95723ce5224218d9c619b97391b1b6c4acfeb11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fab0f47fdf989c7a395b25c3cbddaacee81356ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fab0f47fdf989c7a395b25c3cbddaacee81356ba", "html_url": "https://github.com/rust-lang/rust/commit/fab0f47fdf989c7a395b25c3cbddaacee81356ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fab0f47fdf989c7a395b25c3cbddaacee81356ba/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52974bd6950ce6672a526874c3d8bf273514f912", "url": "https://api.github.com/repos/rust-lang/rust/commits/52974bd6950ce6672a526874c3d8bf273514f912", "html_url": "https://github.com/rust-lang/rust/commit/52974bd6950ce6672a526874c3d8bf273514f912"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "571f43401205817c6ee13dba73e6f6b9a78200b5", "filename": "src/libworkcache/lib.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fab0f47fdf989c7a395b25c3cbddaacee81356ba/src%2Flibworkcache%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fab0f47fdf989c7a395b25c3cbddaacee81356ba/src%2Flibworkcache%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibworkcache%2Flib.rs?ref=fab0f47fdf989c7a395b25c3cbddaacee81356ba", "patch": "@@ -140,9 +140,9 @@ impl WorkMap {\n }\n \n pub struct Database {\n-    priv db_filename: Path,\n-    priv db_cache: TreeMap<~str, ~str>,\n-    db_dirty: bool\n+    db_filename: Path,\n+    db_cache: TreeMap<~str, ~str>,\n+    pub db_dirty: bool,\n }\n \n impl Database {\n@@ -225,26 +225,26 @@ pub type FreshnessMap = TreeMap<~str,extern fn(&str,&str)->bool>;\n \n #[deriving(Clone)]\n pub struct Context {\n-    db: Arc<RWLock<Database>>,\n-    priv cfg: Arc<json::Object>,\n+    pub db: Arc<RWLock<Database>>,\n+    cfg: Arc<json::Object>,\n     /// Map from kinds (source, exe, url, etc.) to a freshness function.\n     /// The freshness function takes a name (e.g. file path) and value\n     /// (e.g. hash of file contents) and determines whether it's up-to-date.\n     /// For example, in the file case, this would read the file off disk,\n     /// hash it, and return the result of comparing the given hash and the\n     /// read hash for equality.\n-    priv freshness: Arc<FreshnessMap>\n+    freshness: Arc<FreshnessMap>\n }\n \n pub struct Prep<'a> {\n-    priv ctxt: &'a Context,\n-    priv fn_name: &'a str,\n-    priv declared_inputs: WorkMap,\n+    ctxt: &'a Context,\n+    fn_name: &'a str,\n+    declared_inputs: WorkMap,\n }\n \n pub struct Exec {\n-    priv discovered_inputs: WorkMap,\n-    priv discovered_outputs: WorkMap\n+    discovered_inputs: WorkMap,\n+    discovered_outputs: WorkMap\n }\n \n enum Work<'a, T> {"}]}