{"sha": "7bfde778a419e0bd34c708ebe0c7eebab42f8637", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZmRlNzc4YTQxOWUwYmQzNGM3MDhlYmUwYzdlZWJhYjQyZjg2Mzc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-05T22:34:15Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-05T22:34:36Z"}, "message": "Add Keyed Events API to sys::windows::c.", "tree": {"sha": "3137fc967aaa03c653886b660e7a53254b87ee96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3137fc967aaa03c653886b660e7a53254b87ee96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bfde778a419e0bd34c708ebe0c7eebab42f8637", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bfde778a419e0bd34c708ebe0c7eebab42f8637", "html_url": "https://github.com/rust-lang/rust/commit/7bfde778a419e0bd34c708ebe0c7eebab42f8637", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bfde778a419e0bd34c708ebe0c7eebab42f8637/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92f7ba8446d397bb92f68ea1b45fd893d9410b86", "url": "https://api.github.com/repos/rust-lang/rust/commits/92f7ba8446d397bb92f68ea1b45fd893d9410b86", "html_url": "https://github.com/rust-lang/rust/commit/92f7ba8446d397bb92f68ea1b45fd893d9410b86"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "33de486c309b9ad58b8ea99c204de1eb209e2014", "filename": "library/std/src/sys/windows/c.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/7bfde778a419e0bd34c708ebe0c7eebab42f8637/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfde778a419e0bd34c708ebe0c7eebab42f8637/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs?ref=7bfde778a419e0bd34c708ebe0c7eebab42f8637", "patch": "@@ -31,6 +31,8 @@ pub type WORD = u16;\n pub type CHAR = c_char;\n pub type ULONG_PTR = usize;\n pub type ULONG = c_ulong;\n+pub type NTSTATUS = LONG;\n+pub type ACCESS_MASK = DWORD;\n \n pub type LPBOOL = *mut BOOL;\n pub type LPBYTE = *mut BYTE;\n@@ -286,6 +288,8 @@ pub const STACK_SIZE_PARAM_IS_A_RESERVATION: DWORD = 0x00010000;\n \n pub const HEAP_ZERO_MEMORY: DWORD = 0x00000008;\n \n+pub const STATUS_SUCCESS: NTSTATUS = 0x00000000;\n+\n #[repr(C)]\n #[cfg(not(target_pointer_width = \"64\"))]\n pub struct WSADATA {\n@@ -1111,3 +1115,31 @@ compat_fn! {\n         // WaitOnAddress would've panicked. So it's fine to do nothing here.\n     }\n }\n+\n+compat_fn! {\n+    \"ntdll\":\n+    pub fn NtCreateKeyedEvent(\n+        KeyedEventHandle: LPHANDLE,\n+        DesiredAccess: ACCESS_MASK,\n+        ObjectAttributes: LPVOID,\n+        Flags: ULONG\n+    ) -> NTSTATUS {\n+        panic!(\"keyed events not available\")\n+    }\n+    pub fn NtReleaseKeyedEvent(\n+        EventHandle: HANDLE,\n+        Key: LPVOID,\n+        Alertable: BOOLEAN,\n+        Timeout: PLARGE_INTEGER\n+    ) -> NTSTATUS {\n+        panic!(\"keyed events not available\")\n+    }\n+    pub fn NtWaitForKeyedEvent(\n+        EventHandle: HANDLE,\n+        Key: LPVOID,\n+        Alertable: BOOLEAN,\n+        Timeout: PLARGE_INTEGER\n+    ) -> NTSTATUS {\n+        panic!(\"keyed events not available\")\n+    }\n+}"}]}