{"sha": "5b57b5fc61fda228a8fb9f3cccecdc01dddf8480", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNTdiNWZjNjFmZGEyMjhhOGZiOWYzY2NjZWNkYzAxZGRkZjg0ODA=", "commit": {"author": {"name": "uHOOCCOOHu", "email": "hooccooh1896@gmail.com", "date": "2018-06-19T15:12:17Z"}, "committer": {"name": "uHOOCCOOHu", "email": "hooccooh1896@gmail.com", "date": "2018-06-19T15:18:53Z"}, "message": "Add notes for test examples.", "tree": {"sha": "fd1d82f4e92032b02e722b05b5ac8b5ef6b22d4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd1d82f4e92032b02e722b05b5ac8b5ef6b22d4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b57b5fc61fda228a8fb9f3cccecdc01dddf8480", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABAgAGBQJbKR7hAAoJEDlZOfCoAvxLPjkP/2GBgwKC7IY3EU3vRqB4N1SK\nMM3ctRvF1xplIFRkson9f7BrBzhzcX62xuqy7gZmSy+vi0DDZ8s7Hpz036LmFFBh\noFr3jsxiiDv6QfnVzC12bUgmDgxzwE6WcsMQXsUzt2JfQ1Ct7AmeFL/1HoWKDiIO\nvsRBgCFN1bGsm9lQWsd3OiLUyAaNm3JrhAQTrS5Hrv3S9v8nvhj3FKMeQIGuTdb2\nYnkGuF0BmfeobX87dZa0MruXGg+PxBchTuJuNJ/qUA8avS84eln+C1jUb5sScdrE\nrXH+2MUo4eJKDJl3lEK8KHcFh1J9HYGhrPxvqORWvgaox8u32ohOCpNihAjsBb1G\nXfuzZTc8KTwNA1IYf+11c2dBb2va6eb5RxQkWLAhsGIzGuPGtn+YThfRCwZbf+zZ\nycb0eD8+Z9jRLMUOUwtmBY7v9wnnhTpyWlfIewKjSgBnXvJzptT8uMANeYB0oA77\nQA3XReSX77jOlvVXzKbIO5vyPXso7UTtT7IQux7Zzdg/dSWbk/7VcTL49gRyHPB3\nlaxzXgv2H0d/IIGuO1XVzJN056o7yQhRF71neaUE3NPnJU7oDqOk9E26ERGIeFB8\nUW6twgsrJJEKf67ZPy5Nq1C+bBi8jn3Uv5HouQ7EPZIImQPtbyyUEe1PhQai6myc\nSy/6cdSxLserkX4qWxAn\n=m5h6\n-----END PGP SIGNATURE-----", "payload": "tree fd1d82f4e92032b02e722b05b5ac8b5ef6b22d4b\nparent ce1800d5998f92f27ba3415d584a621c01db309d\nauthor uHOOCCOOHu <hooccooh1896@gmail.com> 1529421137 +0800\ncommitter uHOOCCOOHu <hooccooh1896@gmail.com> 1529421533 +0800\n\nAdd notes for test examples.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b57b5fc61fda228a8fb9f3cccecdc01dddf8480", "html_url": "https://github.com/rust-lang/rust/commit/5b57b5fc61fda228a8fb9f3cccecdc01dddf8480", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b57b5fc61fda228a8fb9f3cccecdc01dddf8480/comments", "author": null, "committer": null, "parents": [{"sha": "ce1800d5998f92f27ba3415d584a621c01db309d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce1800d5998f92f27ba3415d584a621c01db309d", "html_url": "https://github.com/rust-lang/rust/commit/ce1800d5998f92f27ba3415d584a621c01db309d"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "0322d42e81febffaf34b866720f8ba007591c7b9", "filename": "tests/ui/lifetimes.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5b57b5fc61fda228a8fb9f3cccecdc01dddf8480/tests%2Fui%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b57b5fc61fda228a8fb9f3cccecdc01dddf8480/tests%2Fui%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.rs?ref=5b57b5fc61fda228a8fb9f3cccecdc01dddf8480", "patch": "@@ -53,9 +53,21 @@ fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n     where for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>\n { unreachable!() }\n \n-fn fn_bound_3<'a, F: FnOnce(&'a ())>(x: &'a (), f: F) {} // no error, referenced\n+fn fn_bound_3<'a, F: FnOnce(&'a i32)>(x: &'a i32, f: F) { // no error, see below\n+    f(x);\n+}\n+\n+fn fn_bound_3_cannot_elide() {\n+    let x = 42;\n+    let p = &x;\n+    let mut q = &x;\n+    fn_bound_3(p, |y| q = y); // this will fail if we elides lifetimes of `fn_bound_3`\n+}\n \n-fn fn_bound_4<'a, F: FnOnce() -> &'a ()>(x: &'a (), f: F) {} // no error, referenced\n+// no error, multiple input refs\n+fn fn_bound_4<'a, F: FnOnce() -> &'a ()>(cond: bool, x: &'a (), f: F) -> &'a () {\n+    if cond { x } else { f() }\n+}\n \n struct X {\n     x: u8,"}, {"sha": "b69438af9f8207c9faf151d5eb1c70bafa74b222", "filename": "tests/ui/lifetimes.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5b57b5fc61fda228a8fb9f3cccecdc01dddf8480/tests%2Fui%2Flifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5b57b5fc61fda228a8fb9f3cccecdc01dddf8480/tests%2Fui%2Flifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.stderr?ref=5b57b5fc61fda228a8fb9f3cccecdc01dddf8480", "patch": "@@ -45,45 +45,45 @@ error: explicit lifetimes given in parameter types where they could be elided\n    | |__________________^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:65:5\n+  --> $DIR/lifetimes.rs:77:5\n    |\n-65 |     fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n+77 |     fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:69:5\n+  --> $DIR/lifetimes.rs:81:5\n    |\n-69 |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n+81 |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:85:1\n+  --> $DIR/lifetimes.rs:97:1\n    |\n-85 | fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str { unimplemented!() }\n+97 | fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str { unimplemented!() }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:105:1\n+   --> $DIR/lifetimes.rs:117:1\n     |\n-105 | fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str { unimplemented!() }\n+117 | fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:109:1\n+   --> $DIR/lifetimes.rs:121:1\n     |\n-109 | fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str { unimplemented!() }\n+121 | fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:120:1\n+   --> $DIR/lifetimes.rs:132:1\n     |\n-120 | fn named_input_elided_output<'a>(_arg: &'a str) -> &str { unimplemented!() }\n+132 | fn named_input_elided_output<'a>(_arg: &'a str) -> &str { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:124:1\n+   --> $DIR/lifetimes.rs:136:1\n     |\n-124 | fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) { unimplemented!() }\n+136 | fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 14 previous errors"}]}