{"sha": "87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZGQyZTFkZjk1Zjk2ZGJmMDhhMGYzYWU3N2EyZGNiZDZkMzg0ZTk=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-02-11T19:16:22Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-02-11T19:16:22Z"}, "message": "Use hidden suggestions for unused imports lint", "tree": {"sha": "359b8c1ce7741448d2d33f09b0e6061d16e27a81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/359b8c1ce7741448d2d33f09b0e6061d16e27a81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "html_url": "https://github.com/rust-lang/rust/commit/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "235523c7d4acdbd38a6b31c53b7969475d460e97", "url": "https://api.github.com/repos/rust-lang/rust/commits/235523c7d4acdbd38a6b31c53b7969475d460e97", "html_url": "https://github.com/rust-lang/rust/commit/235523c7d4acdbd38a6b31c53b7969475d460e97"}], "stats": {"total": 108, "additions": 73, "deletions": 35}, "files": [{"sha": "98b9d637b720384158149938309118b94d35f5aa", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -557,7 +557,7 @@ impl BuiltinLintDiagnostics {\n             }\n             BuiltinLintDiagnostics::UnusedImports(message, replaces) => {\n                 if !replaces.is_empty() {\n-                    db.multipart_suggestion(\n+                    db.tool_only_multipart_suggestion(\n                         &message,\n                         replaces,\n                         Applicability::MachineApplicable,"}, {"sha": "f0083949396b437eed01896c035dc1ee3cec9554", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -250,6 +250,32 @@ impl Diagnostic {\n         self\n     }\n \n+    /// Prints out a message with for a multipart suggestion without showing the suggested code.\n+    ///\n+    /// This is intended to be used for suggestions that are obvious in what the changes need to\n+    /// be from the message, showing the span label inline would be visually unpleasant\n+    /// (marginally overlapping spans or multiline spans) and showing the snippet window wouldn't\n+    /// improve understandability.\n+    pub fn tool_only_multipart_suggestion(\n+        &mut self,\n+        msg: &str,\n+        suggestion: Vec<(Span, String)>,\n+        applicability: Applicability,\n+    ) -> &mut Self {\n+        self.suggestions.push(CodeSuggestion {\n+            substitutions: vec![Substitution {\n+                parts: suggestion\n+                    .into_iter()\n+                    .map(|(span, snippet)| SubstitutionPart { snippet, span })\n+                    .collect(),\n+            }],\n+            msg: msg.to_owned(),\n+            style: SuggestionStyle::CompletelyHidden,\n+            applicability,\n+        });\n+        self\n+    }\n+\n     /// Prints out a message with a suggested edit of the code.\n     ///\n     /// In case of short messages and a simple suggestion, rustc displays it as a label:\n@@ -318,7 +344,7 @@ impl Diagnostic {\n             }],\n             msg: msg.to_owned(),\n             style: SuggestionStyle::HideCodeInline,\n-            applicability: applicability,\n+            applicability,\n         });\n         self\n     }\n@@ -341,7 +367,7 @@ impl Diagnostic {\n             }],\n             msg: msg.to_owned(),\n             style: SuggestionStyle::HideCodeInline,\n-            applicability: applicability,\n+            applicability,\n         });\n         self\n     }"}, {"sha": "4ed7b0a2456e7889e9759329e94679cb2045a7e6", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -205,6 +205,24 @@ impl<'a> DiagnosticBuilder<'a> {\n         self\n     }\n \n+    pub fn tool_only_multipart_suggestion(\n+        &mut self,\n+        msg: &str,\n+        suggestion: Vec<(Span, String)>,\n+        applicability: Applicability,\n+    ) -> &mut Self {\n+        if !self.allow_suggestions {\n+            return self\n+        }\n+        self.diagnostic.tool_only_multipart_suggestion(\n+            msg,\n+            suggestion,\n+            applicability,\n+        );\n+        self\n+    }\n+\n+\n     pub fn span_suggestion(\n         &mut self,\n         sp: Span,"}, {"sha": "eaae1e9e84840682fbe659164fe23b4406e5bf0d", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -48,7 +48,9 @@ impl Emitter for EmitterWriter {\n                // don't display multiline suggestions as labels\n                !sugg.substitutions[0].parts[0].snippet.contains('\\n') &&\n                // when this style is set we want the suggestion to be a message, not inline\n-               sugg.style != SuggestionStyle::HideCodeAlways\n+               sugg.style != SuggestionStyle::HideCodeAlways &&\n+               // trivial suggestion for tooling's sake, never shown\n+               sugg.style != SuggestionStyle::CompletelyHidden\n             {\n                 let substitution = &sugg.substitutions[0].parts[0].snippet.trim();\n                 let msg = if substitution.len() == 0 || sugg.style.hide_inline() {"}, {"sha": "d7ec41489d15615b186138b92abd3f6f46a83905", "filename": "src/test/ui/bad/bad-lint-cap2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap2.stderr?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -2,7 +2,7 @@ error: unused import: `std::option`\n   --> $DIR/bad-lint-cap2.rs:6:5\n    |\n LL | use std::option; //~ ERROR\n-   | ----^^^^^^^^^^^- help: remove the whole `use` item\n+   |     ^^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/bad-lint-cap2.rs:4:9"}, {"sha": "5bf0b089afa20340b908341a8e8b4d00debec7e6", "filename": "src/test/ui/bad/bad-lint-cap3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-lint-cap3.stderr?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -2,7 +2,7 @@ warning: unused import: `std::option`\n   --> $DIR/bad-lint-cap3.rs:7:5\n    |\n LL | use std::option; //~ WARN\n-   | ----^^^^^^^^^^^- help: remove the whole `use` item\n+   |     ^^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/bad-lint-cap3.rs:4:9"}, {"sha": "b56e930158cc1be5ec073716719021c9421c7da8", "filename": "src/test/ui/imports/unused.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Fimports%2Funused.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Fimports%2Funused.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funused.stderr?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -2,7 +2,7 @@ error: unused import: `super::f`\n   --> $DIR/unused.rs:7:24\n    |\n LL |         pub(super) use super::f; //~ ERROR unused\n-   |         ---------------^^^^^^^^- help: remove the whole `use` item\n+   |                        ^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/unused.rs:1:9"}, {"sha": "0a901076f467aabf0b1e6627f364890e9d70db8e", "filename": "src/test/ui/issues/issue-30730.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Fissues%2Fissue-30730.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Fissues%2Fissue-30730.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30730.stderr?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -2,7 +2,7 @@ error: unused import: `std::thread`\n   --> $DIR/issue-30730.rs:3:5\n    |\n LL | use std::thread;\n-   | ----^^^^^^^^^^^- help: remove the whole `use` item\n+   |     ^^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/issue-30730.rs:2:9"}, {"sha": "170b98a12a848d275c311855be4273a1a93d0251", "filename": "src/test/ui/lint/lint-directives-on-use-items-issue-10534.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Flint%2Flint-directives-on-use-items-issue-10534.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Flint%2Flint-directives-on-use-items-issue-10534.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-directives-on-use-items-issue-10534.stderr?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -2,7 +2,7 @@ error: unused import: `a::x`\n   --> $DIR/lint-directives-on-use-items-issue-10534.rs:12:9\n    |\n LL |     use a::x; //~ ERROR: unused import\n-   |     ----^^^^- help: remove the whole `use` item\n+   |         ^^^^\n    |\n note: lint level defined here\n   --> $DIR/lint-directives-on-use-items-issue-10534.rs:1:9\n@@ -14,7 +14,7 @@ error: unused import: `a::y`\n   --> $DIR/lint-directives-on-use-items-issue-10534.rs:21:9\n    |\n LL |     use a::y; //~ ERROR: unused import\n-   |     ----^^^^- help: remove the whole `use` item\n+   |         ^^^^\n    |\n note: lint level defined here\n   --> $DIR/lint-directives-on-use-items-issue-10534.rs:20:12"}, {"sha": "18f2fae0067eb94cdd9c313f1ab6641ec1e62433", "filename": "src/test/ui/lint/lint-unused-imports.stderr", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Flint%2Flint-unused-imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Flint%2Flint-unused-imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-imports.stderr?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -2,7 +2,7 @@ error: unused import: `std::fmt::{}`\n   --> $DIR/lint-unused-imports.rs:8:5\n    |\n LL | use std::fmt::{};\n-   | ----^^^^^^^^^^^^- help: remove the whole `use` item\n+   |     ^^^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/lint-unused-imports.rs:1:9\n@@ -14,39 +14,37 @@ error: unused imports: `None`, `Some`\n   --> $DIR/lint-unused-imports.rs:12:27\n    |\n LL | use std::option::Option::{Some, None};\n-   | --------------------------^^^^--^^^^-- help: remove the whole `use` item\n+   |                           ^^^^  ^^^^\n \n error: unused import: `test::A`\n   --> $DIR/lint-unused-imports.rs:15:5\n    |\n LL | use test::A;       //~ ERROR unused import: `test::A`\n-   | ----^^^^^^^- help: remove the whole `use` item\n+   |     ^^^^^^^\n \n error: unused import: `bar`\n   --> $DIR/lint-unused-imports.rs:24:18\n    |\n LL | use test2::{foo, bar}; //~ ERROR unused import: `bar`\n-   |                --^^^\n-   |                |\n-   |                help: remove the unused import\n+   |                  ^^^\n \n error: unused import: `foo::Square`\n   --> $DIR/lint-unused-imports.rs:52:13\n    |\n LL |         use foo::Square; //~ ERROR unused import: `foo::Square`\n-   |         ----^^^^^^^^^^^- help: remove the whole `use` item\n+   |             ^^^^^^^^^^^\n \n error: unused import: `self::g`\n   --> $DIR/lint-unused-imports.rs:68:9\n    |\n LL |     use self::g; //~ ERROR unused import: `self::g`\n-   |     ----^^^^^^^- help: remove the whole `use` item\n+   |         ^^^^^^^\n \n error: unused import: `test2::foo`\n   --> $DIR/lint-unused-imports.rs:77:9\n    |\n LL |     use test2::foo; //~ ERROR unused import: `test2::foo`\n-   |     ----^^^^^^^^^^- help: remove the whole `use` item\n+   |         ^^^^^^^^^^\n \n error: unused import: `test::B2`\n   --> $DIR/lint-unused-imports.rs:20:5"}, {"sha": "8287ca5692bd98f3485f4d451bcc1166fd0954c0", "filename": "src/test/ui/lint/lints-in-foreign-macros.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.stderr?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -2,7 +2,7 @@ warning: unused import: `std::string::ToString`\n   --> $DIR/lints-in-foreign-macros.rs:11:16\n    |\n LL |     () => {use std::string::ToString;} //~ WARN: unused import\n-   |            ----^^^^^^^^^^^^^^^^^^^^^- help: remove the whole `use` item\n+   |                ^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | mod a { foo!(); }\n    |         ------- in this macro invocation\n@@ -17,13 +17,13 @@ warning: unused import: `std::string::ToString`\n   --> $DIR/lints-in-foreign-macros.rs:16:18\n    |\n LL | mod c { baz!(use std::string::ToString;); } //~ WARN: unused import\n-   |              ----^^^^^^^^^^^^^^^^^^^^^- help: remove the whole `use` item\n+   |                  ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused import: `std::string::ToString`\n   --> $DIR/lints-in-foreign-macros.rs:17:19\n    |\n LL | mod d { baz2!(use std::string::ToString;); } //~ WARN: unused import\n-   |               ----^^^^^^^^^^^^^^^^^^^^^- help: remove the whole `use` item\n+   |                   ^^^^^^^^^^^^^^^^^^^^^\n \n warning: missing documentation for crate\n   --> $DIR/lints-in-foreign-macros.rs:4:1"}, {"sha": "308035919260377fcf1e64ae1aded3dfbb9f4ec6", "filename": "src/test/ui/rfc-2166-underscore-imports/basic.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Frfc-2166-underscore-imports%2Fbasic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Frfc-2166-underscore-imports%2Fbasic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2166-underscore-imports%2Fbasic.stderr?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -2,7 +2,7 @@ warning: unused import: `m::Tr1 as _`\n   --> $DIR/basic.rs:26:9\n    |\n LL |     use m::Tr1 as _; //~ WARN unused import\n-   |     ----^^^^^^^^^^^- help: remove the whole `use` item\n+   |         ^^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/basic.rs:4:9\n@@ -14,5 +14,5 @@ warning: unused import: `S as _`\n   --> $DIR/basic.rs:27:9\n    |\n LL |     use S as _; //~ WARN unused import\n-   |     ----^^^^^^- help: remove the whole `use` item\n+   |         ^^^^^^\n "}, {"sha": "4163c2876074befdc95f7a8fda5184b84e03d9a2", "filename": "src/test/ui/rfc-2166-underscore-imports/unused-2018.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Frfc-2166-underscore-imports%2Funused-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Frfc-2166-underscore-imports%2Funused-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2166-underscore-imports%2Funused-2018.stderr?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -2,7 +2,7 @@ error: unused import: `core::any`\n   --> $DIR/unused-2018.rs:6:9\n    |\n LL |     use core::any; //~ ERROR unused import: `core::any`\n-   |     ----^^^^^^^^^- help: remove the whole `use` item\n+   |         ^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/unused-2018.rs:3:9\n@@ -14,7 +14,7 @@ error: unused import: `core`\n   --> $DIR/unused-2018.rs:10:9\n    |\n LL |     use core; //~ ERROR unused import: `core`\n-   |     ----^^^^- help: remove the whole `use` item\n+   |         ^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "a730d081b7c035e0e2330fc5fce8029f09033665", "filename": "src/test/ui/span/multispan-import-lint.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Fspan%2Fmultispan-import-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Fspan%2Fmultispan-import-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmultispan-import-lint.stderr?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -10,8 +10,4 @@ note: lint level defined here\n LL | #![warn(unused)]\n    |         ^^^^^^\n    = note: #[warn(unused_imports)] implied by #[warn(unused)]\n-help: remove the unused imports\n-   |\n-LL | use std::cmp::{min};\n-   |               -- --\n "}, {"sha": "c8df6cbc57dcab71de0cb3fdeb8a58dbeb07afbb", "filename": "src/test/ui/use/use-nested-groups-unused-imports.stderr", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Fuse%2Fuse-nested-groups-unused-imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9/src%2Ftest%2Fui%2Fuse%2Fuse-nested-groups-unused-imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-nested-groups-unused-imports.stderr?ref=87dd2e1df95f96dbf08a0f3ae77a2dcbd6d384e9", "patch": "@@ -2,7 +2,7 @@ error: unused imports: `*`, `Foo`, `baz::{}`, `foobar::*`\n   --> $DIR/use-nested-groups-unused-imports.rs:16:11\n    |\n LL | use foo::{Foo, bar::{baz::{}, foobar::*}, *};\n-   | ----------^^^--------^^^^^^^--^^^^^^^^^---^-- help: remove the whole `use` item\n+   |           ^^^        ^^^^^^^  ^^^^^^^^^   ^\n    |\n note: lint level defined here\n   --> $DIR/use-nested-groups-unused-imports.rs:3:9\n@@ -14,15 +14,13 @@ error: unused import: `*`\n   --> $DIR/use-nested-groups-unused-imports.rs:18:24\n    |\n LL | use foo::bar::baz::{*, *};\n-   |                      --^\n-   |                      |\n-   |                      help: remove the unused import\n+   |                        ^\n \n error: unused import: `foo::{}`\n   --> $DIR/use-nested-groups-unused-imports.rs:20:5\n    |\n LL | use foo::{};\n-   | ----^^^^^^^- help: remove the whole `use` item\n+   |     ^^^^^^^\n \n error: aborting due to 3 previous errors\n "}]}