{"sha": "75444e16fa78e54c75d47f8d6f4dee9544303364", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NDQ0ZTE2ZmE3OGU1NGM3NWQ0N2Y4ZDZmNGRlZTk1NDQzMDMzNjQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-08T11:14:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-08T11:14:15Z"}, "message": "Merge pull request #620 from RalfJung/stderr-flush\n\nwe don't need to flush stderr", "tree": {"sha": "ae2ab465be72c0a2992af09cc97fe8f5e87e8d63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae2ab465be72c0a2992af09cc97fe8f5e87e8d63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75444e16fa78e54c75d47f8d6f4dee9544303364", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcXWSHCRBK7hj4Ov3rIwAAdHIIABd4PbA4ofaZEaZbyFTE1ueq\nzVkhOGlDVt/9dz7Jt91PogFqFwykNH7byNEclpurO+rq7QRcgZNJJdLOk+S+7JYp\nXVEqRt5eFzNGV16rMV/Do/a/FFcoB7DJWnt+DwYITKiMU7/RScYbZwpbudl8WakI\n1zNNewF5Rzm9ShS46CYku+uJrXS1xkgVhGsaS5AkE3p63nCXejr6gUN/xVRKi7UC\ngIARg5CsU6uVU+Xbarv/yZR5IBkxZrzZvB3SyfyGt2bvy/f1MV8cctvaSihcPWpQ\nHbVOk+fbnjm+RrZpHZnM7RHbM1Sro8Pt1I6jPsRHWdh1bGKqw1D8CmJQokNgI8Q=\n=YFqL\n-----END PGP SIGNATURE-----\n", "payload": "tree ae2ab465be72c0a2992af09cc97fe8f5e87e8d63\nparent 77d12bb4656e8c4ecb21acdeede3ebc23248fff4\nparent 7af75abdd79c4c72f7eea5d136b95dc882c705f1\nauthor Ralf Jung <post@ralfj.de> 1549624455 +0100\ncommitter GitHub <noreply@github.com> 1549624455 +0100\n\nMerge pull request #620 from RalfJung/stderr-flush\n\nwe don't need to flush stderr"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75444e16fa78e54c75d47f8d6f4dee9544303364", "html_url": "https://github.com/rust-lang/rust/commit/75444e16fa78e54c75d47f8d6f4dee9544303364", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75444e16fa78e54c75d47f8d6f4dee9544303364/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77d12bb4656e8c4ecb21acdeede3ebc23248fff4", "url": "https://api.github.com/repos/rust-lang/rust/commits/77d12bb4656e8c4ecb21acdeede3ebc23248fff4", "html_url": "https://github.com/rust-lang/rust/commit/77d12bb4656e8c4ecb21acdeede3ebc23248fff4"}, {"sha": "7af75abdd79c4c72f7eea5d136b95dc882c705f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7af75abdd79c4c72f7eea5d136b95dc882c705f1", "html_url": "https://github.com/rust-lang/rust/commit/7af75abdd79c4c72f7eea5d136b95dc882c705f1"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "a5708305a9762be726b83edb810a9b9fffd0b4e5", "filename": "src/fn_call.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/75444e16fa78e54c75d47f8d6f4dee9544303364/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75444e16fa78e54c75d47f8d6f4dee9544303364/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=75444e16fa78e54c75d47f8d6f4dee9544303364", "patch": "@@ -392,13 +392,16 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a+'mir>: crate::MiriEvalContextExt<'a,\n                     let buf_cont = this.memory().read_bytes(buf, Size::from_bytes(n))?;\n                     // We need to flush to make sure this actually appears on the screen\n                     let res = if fd == 1 {\n+                        // Stdout is buffered, flush to make sure it appears on the screen.\n+                        // This is the write() syscall of the interpreted program, we want it\n+                        // to correspond to a write() syscall on the host -- there is no good\n+                        // in adding extra buffering here.\n                         let res = io::stdout().write(buf_cont);\n                         io::stdout().flush().unwrap();\n                         res\n                     } else {\n-                        let res = io::stderr().write(buf_cont);\n-                        io::stderr().flush().unwrap();\n-                        res\n+                        // No need to flush, stderr is not buffered.\n+                        io::stderr().write(buf_cont)\n                     };\n                     match res {\n                         Ok(n) => n as i64,"}]}