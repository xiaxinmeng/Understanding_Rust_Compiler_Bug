{"sha": "232364a580fb60199db8e3c9c1cfd391d0046a2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzMjM2NGE1ODBmYjYwMTk5ZGI4ZTNjOWMxY2ZkMzkxZDAwNDZhMmE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-18T22:58:19Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-26T08:22:45Z"}, "message": "Generalise QueryLatch.", "tree": {"sha": "aaf74eddaa9cdea625a4af48267c134c0b5ee85e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaf74eddaa9cdea625a4af48267c134c0b5ee85e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/232364a580fb60199db8e3c9c1cfd391d0046a2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/232364a580fb60199db8e3c9c1cfd391d0046a2a", "html_url": "https://github.com/rust-lang/rust/commit/232364a580fb60199db8e3c9c1cfd391d0046a2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/232364a580fb60199db8e3c9c1cfd391d0046a2a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a51ad889dd712e8b665656ebf08a2f85034f7415", "url": "https://api.github.com/repos/rust-lang/rust/commits/a51ad889dd712e8b665656ebf08a2f85034f7415", "html_url": "https://github.com/rust-lang/rust/commit/a51ad889dd712e8b665656ebf08a2f85034f7415"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "a4fb70f281c801c2b489ea75669c70e253be6070", "filename": "src/librustc/ty/query/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/232364a580fb60199db8e3c9c1cfd391d0046a2a/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/232364a580fb60199db8e3c9c1cfd391d0046a2a/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs?ref=232364a580fb60199db8e3c9c1cfd391d0046a2a", "patch": "@@ -2,6 +2,7 @@\n \n use crate::dep_graph::SerializedDepNodeIndex;\n use crate::ty::query::caches::QueryCache;\n+use crate::ty::query::job::QueryJobId;\n use crate::ty::query::plumbing::CycleError;\n use crate::ty::query::QueryState;\n use rustc_data_structures::profiling::ProfileCategory;\n@@ -30,6 +31,9 @@ pub trait QueryContext: DepContext {\n \n     /// Get string representation from DefPath.\n     fn def_path_str(&self, def_id: DefId) -> String;\n+\n+    /// Get the query information from the TLS context.\n+    fn read_query_job<R>(&self, op: impl FnOnce(Option<QueryJobId<Self::DepKind>>) -> R) -> R;\n }\n \n pub(crate) trait QueryAccessors<CTX: QueryContext>: QueryConfig<CTX> {"}, {"sha": "b4d986074a487f194f98dd024389e57b0461f1ea", "filename": "src/librustc/ty/query/job.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/232364a580fb60199db8e3c9c1cfd391d0046a2a/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/232364a580fb60199db8e3c9c1cfd391d0046a2a/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs?ref=232364a580fb60199db8e3c9c1cfd391d0046a2a", "patch": "@@ -53,11 +53,13 @@ pub struct QueryJobId<K> {\n     pub kind: K,\n }\n \n-impl QueryJobId<DepKind> {\n-    pub fn new(job: QueryShardJobId, shard: usize, kind: DepKind) -> Self {\n+impl<K> QueryJobId<K> {\n+    pub fn new(job: QueryShardJobId, shard: usize, kind: K) -> Self {\n         QueryJobId { job, shard: u16::try_from(shard).unwrap(), kind }\n     }\n+}\n \n+impl QueryJobId<DepKind> {\n     fn query<'tcx>(self, map: &QueryMap<'tcx>) -> Query<'tcx> {\n         map.get(&self).unwrap().info.query.clone()\n     }\n@@ -223,16 +225,16 @@ impl<CTX: QueryContext> QueryLatch<CTX> {\n }\n \n #[cfg(parallel_compiler)]\n-impl<'tcx> QueryLatch<TyCtxt<'tcx>> {\n+impl<K, CTX> QueryLatch<CTX>\n+where\n+    K: rustc_query_system::dep_graph::DepKind,\n+    CTX: QueryContext<DepKind = K>,\n+{\n     /// Awaits for the query job to complete.\n-    pub(super) fn wait_on(\n-        &self,\n-        tcx: TyCtxt<'tcx>,\n-        span: Span,\n-    ) -> Result<(), CycleError<TyCtxt<'tcx>>> {\n-        tls::with_related_context(tcx, move |icx| {\n+    pub(super) fn wait_on(&self, tcx: CTX, span: Span) -> Result<(), CycleError<CTX>> {\n+        tcx.read_query_job(move |query| {\n             let waiter = Lrc::new(QueryWaiter {\n-                query: icx.query,\n+                query,\n                 span,\n                 cycle: Lock::new(None),\n                 condvar: Condvar::new(),"}, {"sha": "6d01f34c630897e565daf53413a7dee71a66235a", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/232364a580fb60199db8e3c9c1cfd391d0046a2a/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/232364a580fb60199db8e3c9c1cfd391d0046a2a/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=232364a580fb60199db8e3c9c1cfd391d0046a2a", "patch": "@@ -367,6 +367,10 @@ impl QueryContext for TyCtxt<'tcx> {\n     fn def_path_str(&self, def_id: DefId) -> String {\n         TyCtxt::def_path_str(*self, def_id)\n     }\n+\n+    fn read_query_job<R>(&self, op: impl FnOnce(Option<QueryJobId<Self::DepKind>>) -> R) -> R {\n+        tls::with_related_context(*self, move |icx| op(icx.query))\n+    }\n }\n \n impl<'tcx> TyCtxt<'tcx> {"}]}