{"sha": "7da9ea0af48ccf9468863408b449d33c415cbde7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkYTllYTBhZjQ4Y2NmOTQ2ODg2MzQwOGI0NDlkMzNjNDE1Y2JkZTc=", "commit": {"author": {"name": "Val Vanderschaegen", "email": "valere.vanderschaegen@gmail.com", "date": "2016-05-13T01:56:20Z"}, "committer": {"name": "Val Vanderschaegen", "email": "valere.vanderschaegen@gmail.com", "date": "2016-05-13T01:56:20Z"}, "message": "Add a note about Higher-Ranked Trait Bounds in docs on Closures.\n\nWhen using closures that take references with explicit lifetimes sometimes\nit's required to use where F: for<..> ... syntax to express the right\nlifetimes. This adds a quick note to the docs so other users can discover\nit as well.", "tree": {"sha": "4be999628a5f3c4c771f1fa92cb17e3340f25776", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4be999628a5f3c4c771f1fa92cb17e3340f25776"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7da9ea0af48ccf9468863408b449d33c415cbde7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7da9ea0af48ccf9468863408b449d33c415cbde7", "html_url": "https://github.com/rust-lang/rust/commit/7da9ea0af48ccf9468863408b449d33c415cbde7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7da9ea0af48ccf9468863408b449d33c415cbde7/comments", "author": {"login": "vvanders", "id": 14142801, "node_id": "MDQ6VXNlcjE0MTQyODAx", "avatar_url": "https://avatars.githubusercontent.com/u/14142801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vvanders", "html_url": "https://github.com/vvanders", "followers_url": "https://api.github.com/users/vvanders/followers", "following_url": "https://api.github.com/users/vvanders/following{/other_user}", "gists_url": "https://api.github.com/users/vvanders/gists{/gist_id}", "starred_url": "https://api.github.com/users/vvanders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vvanders/subscriptions", "organizations_url": "https://api.github.com/users/vvanders/orgs", "repos_url": "https://api.github.com/users/vvanders/repos", "events_url": "https://api.github.com/users/vvanders/events{/privacy}", "received_events_url": "https://api.github.com/users/vvanders/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vvanders", "id": 14142801, "node_id": "MDQ6VXNlcjE0MTQyODAx", "avatar_url": "https://avatars.githubusercontent.com/u/14142801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vvanders", "html_url": "https://github.com/vvanders", "followers_url": "https://api.github.com/users/vvanders/followers", "following_url": "https://api.github.com/users/vvanders/following{/other_user}", "gists_url": "https://api.github.com/users/vvanders/gists{/gist_id}", "starred_url": "https://api.github.com/users/vvanders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vvanders/subscriptions", "organizations_url": "https://api.github.com/users/vvanders/orgs", "repos_url": "https://api.github.com/users/vvanders/repos", "events_url": "https://api.github.com/users/vvanders/events{/privacy}", "received_events_url": "https://api.github.com/users/vvanders/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e88defe71806ad190588e168e513bc1098f7c9fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e88defe71806ad190588e168e513bc1098f7c9fb", "html_url": "https://github.com/rust-lang/rust/commit/e88defe71806ad190588e168e513bc1098f7c9fb"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "7bfe67f4c8b0b38c4884acda5998c91efb199b13", "filename": "src/doc/book/closures.md", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/7da9ea0af48ccf9468863408b449d33c415cbde7/src%2Fdoc%2Fbook%2Fclosures.md", "raw_url": "https://github.com/rust-lang/rust/raw/7da9ea0af48ccf9468863408b449d33c415cbde7/src%2Fdoc%2Fbook%2Fclosures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fclosures.md?ref=7da9ea0af48ccf9468863408b449d33c415cbde7", "patch": "@@ -319,6 +319,53 @@ assert_eq!(3, answer);\n Now we take a trait object, a `&Fn`. And we have to make a reference\n to our closure when we pass it to `call_with_one`, so we use `&||`.\n \n+A quick note about closures that use explicit lifetimes. Sometimes you might have a closure\n+that takes a reference like so:\n+\n+```\n+fn call_with_ref<F>(some_closure:F) -> i32\n+    where F: Fn(&i32) -> i32 {\n+\n+    let mut value = 0;\n+    some_closure(&value)\n+}\n+```\n+\n+Normally you can specify the lifetime of the parameter to our closure. We\n+could annotate it on the function declaration:\n+\n+```\n+fn call_with_ref<'a, F>(some_closure:F) -> i32 \n+    where F: Fn(&'a 32) -> i32 {\n+```\n+\n+However this presents a problem with in our case. When you specify the explict\n+lifetime on a function it binds that lifetime to the *entire* scope of the function\n+instead of just the invocation scope of our closure. This means that the borrow checker\n+will see a mutable reference in the same lifetime as our immutable reference and fail\n+to compile.\n+\n+In order to say that we only need the lifetime to be valid for the invocation scope\n+of the closure we can use Higher-Ranked Trait Bounds with the `for<...>` syntax:\n+\n+```\n+fn call_with_ref<F>(some_closure:F) -> i32\n+    where F: for<'a> Fn(&'a 32) -> i32 {\n+```\n+\n+This lets the rust compiler find the minimum lifetime to invoke our closure and \n+satisfy the borrow checker's rules. Our function then compiles and excutes as we\n+expect.\n+\n+```\n+fn call_with_ref<F>(some_closure:F) -> i32\n+    where F: for<'a> Fn(&'a i32) -> i32 {\n+\n+    let mut value = 0;\n+    some_closure(&value)\n+}\n+```\n+\n # Function pointers and closures\n \n A function pointer is kind of like a closure that has no environment. As such,"}]}