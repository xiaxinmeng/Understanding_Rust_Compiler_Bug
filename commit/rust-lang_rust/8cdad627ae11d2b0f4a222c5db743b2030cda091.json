{"sha": "8cdad627ae11d2b0f4a222c5db743b2030cda091", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZGFkNjI3YWUxMWQyYjBmNGEyMjJjNWRiNzQzYjIwMzBjZGEwOTE=", "commit": {"author": {"name": "Steffen", "email": "steffen.butzer@outlook.com", "date": "2016-01-11T22:45:33Z"}, "committer": {"name": "Steffen", "email": "steffen.butzer@outlook.com", "date": "2016-01-11T22:45:33Z"}, "message": "add feature gate \"abi_vectorcall\" for the vectorcall calling convention", "tree": {"sha": "a8bc54431df3ca1219237a6dc881fef78242afe2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8bc54431df3ca1219237a6dc881fef78242afe2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cdad627ae11d2b0f4a222c5db743b2030cda091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cdad627ae11d2b0f4a222c5db743b2030cda091", "html_url": "https://github.com/rust-lang/rust/commit/8cdad627ae11d2b0f4a222c5db743b2030cda091", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cdad627ae11d2b0f4a222c5db743b2030cda091/comments", "author": {"login": "steffengy", "id": 1194855, "node_id": "MDQ6VXNlcjExOTQ4NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1194855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffengy", "html_url": "https://github.com/steffengy", "followers_url": "https://api.github.com/users/steffengy/followers", "following_url": "https://api.github.com/users/steffengy/following{/other_user}", "gists_url": "https://api.github.com/users/steffengy/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffengy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffengy/subscriptions", "organizations_url": "https://api.github.com/users/steffengy/orgs", "repos_url": "https://api.github.com/users/steffengy/repos", "events_url": "https://api.github.com/users/steffengy/events{/privacy}", "received_events_url": "https://api.github.com/users/steffengy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steffengy", "id": 1194855, "node_id": "MDQ6VXNlcjExOTQ4NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1194855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffengy", "html_url": "https://github.com/steffengy", "followers_url": "https://api.github.com/users/steffengy/followers", "following_url": "https://api.github.com/users/steffengy/following{/other_user}", "gists_url": "https://api.github.com/users/steffengy/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffengy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffengy/subscriptions", "organizations_url": "https://api.github.com/users/steffengy/orgs", "repos_url": "https://api.github.com/users/steffengy/repos", "events_url": "https://api.github.com/users/steffengy/events{/privacy}", "received_events_url": "https://api.github.com/users/steffengy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9af75d2bec9e98dd1cf4a24bd93a94a4e9ba47f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9af75d2bec9e98dd1cf4a24bd93a94a4e9ba47f9", "html_url": "https://github.com/rust-lang/rust/commit/9af75d2bec9e98dd1cf4a24bd93a94a4e9ba47f9"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "c00e6c0a07012010a77595686d089139bb63dedd", "filename": "src/doc/book/ffi.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8cdad627ae11d2b0f4a222c5db743b2030cda091/src%2Fdoc%2Fbook%2Fffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/8cdad627ae11d2b0f4a222c5db743b2030cda091/src%2Fdoc%2Fbook%2Fffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fffi.md?ref=8cdad627ae11d2b0f4a222c5db743b2030cda091", "patch": "@@ -479,6 +479,7 @@ are:\n * `cdecl`\n * `fastcall`\n * `vectorcall`\n+This is currently hidden behind the `abi_vectorcall` gate and is subject to change.\n * `Rust`\n * `rust-intrinsic`\n * `system`"}, {"sha": "1daf42d293dc8c26b9de62060bf4de4fdff45ab9", "filename": "src/doc/reference.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8cdad627ae11d2b0f4a222c5db743b2030cda091/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/8cdad627ae11d2b0f4a222c5db743b2030cda091/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=8cdad627ae11d2b0f4a222c5db743b2030cda091", "patch": "@@ -2390,6 +2390,9 @@ The currently implemented features of the reference compiler are:\n \n * - `type_ascription` - Allows type ascription expressions `expr: Type`.\n \n+* - `abi_vectorcall` - Allows the usage of the vectorcall calling convention\n+                             (e.g. `extern \"vectorcall\" func fn_();`)\n+\n If a feature is promoted to a language feature, then all existing programs will\n start to receive compilation warnings about `#![feature]` directives which enabled\n the new feature (because the directive is no longer necessary). However, if a"}, {"sha": "c168ea9ad75da2a00c7bfe8470e7a6cb9d36a3d8", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8cdad627ae11d2b0f4a222c5db743b2030cda091/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cdad627ae11d2b0f4a222c5db743b2030cda091/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=8cdad627ae11d2b0f4a222c5db743b2030cda091", "patch": "@@ -239,6 +239,9 @@ const KNOWN_FEATURES: &'static [(&'static str, &'static str, Option<u32>, Status\n \n     // Allows cfg(target_thread_local)\n     (\"cfg_target_thread_local\", \"1.7.0\", Some(29594), Active),\n+\n+    // rustc internal\n+    (\"abi_vectorcall\", \"1.7.0\", None, Active)\n ];\n // (changing above list without updating src/doc/reference.md makes @cmr sad)\n \n@@ -862,6 +865,11 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                     Abi::PlatformIntrinsic => {\n                         Some((\"platform_intrinsics\",\n                               \"platform intrinsics are experimental and possibly buggy\"))\n+                    },\n+                    Abi::Vectorcall => {\n+                        Some((\"abi_vectorcall\",\n+                            \"vectorcall is experimental and subject to change\"\n+                        ))\n                     }\n                     _ => None\n                 };\n@@ -1033,11 +1041,17 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                                   \"intrinsics are subject to change\")\n             }\n             FnKind::ItemFn(_, _, _, _, abi, _) |\n-            FnKind::Method(_, &ast::MethodSig { abi, .. }, _) if abi == Abi::RustCall => {\n-                self.gate_feature(\"unboxed_closures\",\n-                                  span,\n-                                  \"rust-call ABI is subject to change\")\n-            }\n+            FnKind::Method(_, &ast::MethodSig { abi, .. }, _) => match abi {\n+                Abi::RustCall => {\n+                    self.gate_feature(\"unboxed_closures\", span,\n+                        \"rust-call ABI is subject to change\");\n+                },\n+                Abi::Vectorcall => {\n+                    self.gate_feature(\"abi_vectorcall\", span,\n+                        \"vectorcall is experimental and subject to change\");\n+                },\n+                _ => {}\n+            },\n             _ => {}\n         }\n         visit::walk_fn(self, fn_kind, fn_decl, block, span);"}, {"sha": "79f3c8dc7762589a5d440a1011720b641f1da6f8", "filename": "src/test/compile-fail/feature-gate-abi-vectorcall.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8cdad627ae11d2b0f4a222c5db743b2030cda091/src%2Ftest%2Fcompile-fail%2Ffeature-gate-abi-vectorcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cdad627ae11d2b0f4a222c5db743b2030cda091/src%2Ftest%2Fcompile-fail%2Ffeature-gate-abi-vectorcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-abi-vectorcall.rs?ref=8cdad627ae11d2b0f4a222c5db743b2030cda091", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern \"vectorcall\" {   //~ ERROR vectorcall is experimental and subject to change\n+    fn bar();\n+}\n+\n+extern \"vectorcall\" fn baz() {  //~ ERROR vectorcall is experimental and subject to change\n+}\n+\n+fn main() {\n+}"}]}