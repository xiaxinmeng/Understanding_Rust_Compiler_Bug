{"sha": "2ed00ff9286a26119168e08f25cb33f25d39ef33", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlZDAwZmY5Mjg2YTI2MTE5MTY4ZTA4ZjI1Y2IzM2YyNWQzOWVmMzM=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-09-05T22:39:51Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-08T21:22:16Z"}, "message": "core: change notify_chan eq checks to is_none(), instead", "tree": {"sha": "5c8b10335777104909bcd7c7491e37ca98fc329a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c8b10335777104909bcd7c7491e37ca98fc329a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ed00ff9286a26119168e08f25cb33f25d39ef33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ed00ff9286a26119168e08f25cb33f25d39ef33", "html_url": "https://github.com/rust-lang/rust/commit/2ed00ff9286a26119168e08f25cb33f25d39ef33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ed00ff9286a26119168e08f25cb33f25d39ef33/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02ddbadc10d19a5cfa2dd6f8de89068bf4dfb852", "url": "https://api.github.com/repos/rust-lang/rust/commits/02ddbadc10d19a5cfa2dd6f8de89068bf4dfb852", "html_url": "https://github.com/rust-lang/rust/commit/02ddbadc10d19a5cfa2dd6f8de89068bf4dfb852"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "a0c7a61f29b22cd913eabb8864cf6e07fe9b13f8", "filename": "src/libcore/task.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2ed00ff9286a26119168e08f25cb33f25d39ef33/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ed00ff9286a26119168e08f25cb33f25d39ef33/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=2ed00ff9286a26119168e08f25cb33f25d39ef33", "patch": "@@ -246,14 +246,13 @@ fn task() -> TaskBuilder {\n         mut consumed: false,\n     })\n }\n-\n priv impl TaskBuilder {\n     fn consume() -> TaskBuilder {\n         if self.consumed {\n             fail ~\"Cannot copy a task_builder\"; // Fake move mode on self\n         }\n         self.consumed = true;\n-        let notify_chan = if self.opts.notify_chan == None {\n+        let notify_chan = if self.opts.notify_chan.is_none() {\n             None\n         } else {\n             Some(option::swap_unwrap(&mut self.opts.notify_chan))\n@@ -278,7 +277,7 @@ impl TaskBuilder {\n      * the other will not be killed.\n      */\n     fn unlinked() -> TaskBuilder {\n-        let notify_chan = if self.opts.notify_chan == None {\n+        let notify_chan = if self.opts.notify_chan.is_none() {\n             None\n         } else {\n             Some(option::swap_unwrap(&mut self.opts.notify_chan))\n@@ -300,7 +299,7 @@ impl TaskBuilder {\n      * the child.\n      */\n     fn supervised() -> TaskBuilder {\n-        let notify_chan = if self.opts.notify_chan == None {\n+        let notify_chan = if self.opts.notify_chan.is_none() {\n             None\n         } else {\n             Some(option::swap_unwrap(&mut self.opts.notify_chan))\n@@ -321,7 +320,7 @@ impl TaskBuilder {\n      * other will be killed.\n      */\n     fn linked() -> TaskBuilder {\n-        let notify_chan = if self.opts.notify_chan == None {\n+        let notify_chan = if self.opts.notify_chan.is_none() {\n             None\n         } else {\n             Some(option::swap_unwrap(&mut self.opts.notify_chan))\n@@ -388,7 +387,7 @@ impl TaskBuilder {\n     }\n     /// Configure a custom scheduler mode for the task.\n     fn sched_mode(mode: SchedMode) -> TaskBuilder {\n-        let notify_chan = if self.opts.notify_chan == None {\n+        let notify_chan = if self.opts.notify_chan.is_none() {\n             None\n         } else {\n             Some(option::swap_unwrap(&mut self.opts.notify_chan))\n@@ -419,7 +418,7 @@ impl TaskBuilder {\n      */\n     fn add_wrapper(wrapper: fn@(+fn~()) -> fn~()) -> TaskBuilder {\n         let prev_gen_body = self.gen_body;\n-        let notify_chan = if self.opts.notify_chan == None {\n+        let notify_chan = if self.opts.notify_chan.is_none() {\n             None\n         } else {\n             Some(option::swap_unwrap(&mut self.opts.notify_chan))\n@@ -450,7 +449,7 @@ impl TaskBuilder {\n      * must be greater than zero.\n      */\n     fn spawn(+f: fn~()) {\n-        let notify_chan = if self.opts.notify_chan == None {\n+        let notify_chan = if self.opts.notify_chan.is_none() {\n             None\n         } else {\n             let swapped_notify_chan =\n@@ -1267,7 +1266,7 @@ fn spawn_raw(+opts: TaskOpts, +f: fn~()) {\n             };\n             assert !new_task.is_null();\n             // Getting killed after here would leak the task.\n-            let mut notify_chan = if opts.notify_chan == None {\n+            let mut notify_chan = if opts.notify_chan.is_none() {\n                 None\n             } else {\n                 Some(option::swap_unwrap(&mut opts.notify_chan))"}]}