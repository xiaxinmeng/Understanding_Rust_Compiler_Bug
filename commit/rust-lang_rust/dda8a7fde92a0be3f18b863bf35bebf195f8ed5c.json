{"sha": "dda8a7fde92a0be3f18b863bf35bebf195f8ed5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkYThhN2ZkZTkyYTBiZTNmMThiODYzYmYzNWJlYmYxOTVmOGVkNWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-26T22:42:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-26T22:42:44Z"}, "message": "Auto merge of #73596 - petrochenkov:shebang2, r=Mark-Simulacrum\n\nrustc_lexer: Simplify shebang parsing once more\n\nFixes https://github.com/rust-lang/rust/issues/73250 (beta regression)\n\nTreat any line starting with `!#` as a shebang candidate, not only lines with something non-whitespace.\nThis way we no longer need to define what `is_whitespace` means ([Linux shebang whitespace](https://github.com/torvalds/linux/blob/master/fs/binfmt_script.c), ASCII whitespace, Rust lexer whitespace, etc), which is nice.\n\nThis change makes some invalid Rust code valid (see the regression above), but still never interprets a fragment of valid Rust code as a shebang.\n\n(This PR also removes one duplicate test.)", "tree": {"sha": "e48a9f031be0e9b623e40396c4f711d934058bae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e48a9f031be0e9b623e40396c4f711d934058bae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dda8a7fde92a0be3f18b863bf35bebf195f8ed5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dda8a7fde92a0be3f18b863bf35bebf195f8ed5c", "html_url": "https://github.com/rust-lang/rust/commit/dda8a7fde92a0be3f18b863bf35bebf195f8ed5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dda8a7fde92a0be3f18b863bf35bebf195f8ed5c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7750c3d46bc19784adb1ee6e37a5ec7e4cd7e772", "url": "https://api.github.com/repos/rust-lang/rust/commits/7750c3d46bc19784adb1ee6e37a5ec7e4cd7e772", "html_url": "https://github.com/rust-lang/rust/commit/7750c3d46bc19784adb1ee6e37a5ec7e4cd7e772"}, {"sha": "7b2064f4f969062312ec3144e7901ea7b6be5b62", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b2064f4f969062312ec3144e7901ea7b6be5b62", "html_url": "https://github.com/rust-lang/rust/commit/7b2064f4f969062312ec3144e7901ea7b6be5b62"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "77b3d26463dfe4aebeb1bca4df3b0eed5815f2ad", "filename": "src/librustc_lexer/src/lib.rs", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/dda8a7fde92a0be3f18b863bf35bebf195f8ed5c/src%2Flibrustc_lexer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda8a7fde92a0be3f18b863bf35bebf195f8ed5c/src%2Flibrustc_lexer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lexer%2Fsrc%2Flib.rs?ref=dda8a7fde92a0be3f18b863bf35bebf195f8ed5c", "patch": "@@ -179,21 +179,18 @@ pub enum Base {\n /// but shebang isn't a part of rust syntax.\n pub fn strip_shebang(input: &str) -> Option<usize> {\n     // Shebang must start with `#!` literally, without any preceding whitespace.\n-    if input.starts_with(\"#!\") {\n-        let input_tail = &input[2..];\n-        // Shebang must have something non-whitespace after `#!` on the first line.\n-        let first_line_tail = input_tail.lines().next()?;\n-        if first_line_tail.contains(|c| !is_whitespace(c)) {\n-            // Ok, this is a shebang but if the next non-whitespace token is `[` or maybe\n-            // a doc comment (due to `TokenKind::(Line,Block)Comment` ambiguity at lexer level),\n-            // then it may be valid Rust code, so consider it Rust code.\n-            let next_non_whitespace_token = tokenize(input_tail).map(|tok| tok.kind).find(|tok|\n-                !matches!(tok, TokenKind::Whitespace | TokenKind::LineComment | TokenKind::BlockComment { .. })\n-            );\n-            if next_non_whitespace_token != Some(TokenKind::OpenBracket) {\n-                // No other choice than to consider this a shebang.\n-                return Some(2 + first_line_tail.len());\n-            }\n+    // For simplicity we consider any line starting with `#!` a shebang,\n+    // regardless of restrictions put on shebangs by specific platforms.\n+    if let Some(input_tail) = input.strip_prefix(\"#!\") {\n+        // Ok, this is a shebang but if the next non-whitespace token is `[` or maybe\n+        // a doc comment (due to `TokenKind::(Line,Block)Comment` ambiguity at lexer level),\n+        // then it may be valid Rust code, so consider it Rust code.\n+        let next_non_whitespace_token = tokenize(input_tail).map(|tok| tok.kind).find(|tok|\n+            !matches!(tok, TokenKind::Whitespace | TokenKind::LineComment | TokenKind::BlockComment { .. })\n+        );\n+        if next_non_whitespace_token != Some(TokenKind::OpenBracket) {\n+            // No other choice than to consider this a shebang.\n+            return Some(2 + input_tail.lines().next().unwrap_or_default().len());\n         }\n     }\n     None"}, {"sha": "e38cc637e945eea7bd0cd3914517033505c2bcf7", "filename": "src/test/ui/parser/shebang/shebang-empty.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dda8a7fde92a0be3f18b863bf35bebf195f8ed5c/src%2Ftest%2Fui%2Fparser%2Fshebang%2Fshebang-empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda8a7fde92a0be3f18b863bf35bebf195f8ed5c/src%2Ftest%2Fui%2Fparser%2Fshebang%2Fshebang-empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fshebang%2Fshebang-empty.rs?ref=dda8a7fde92a0be3f18b863bf35bebf195f8ed5c", "patch": "@@ -0,0 +1,4 @@\n+#!\n+\n+// check-pass\n+fn main() {}"}, {"sha": "0978b759d2a6eeeb1691786e4e83df5e89e58219", "filename": "src/test/ui/parser/shebang/shebang-space.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dda8a7fde92a0be3f18b863bf35bebf195f8ed5c/src%2Ftest%2Fui%2Fparser%2Fshebang%2Fshebang-space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda8a7fde92a0be3f18b863bf35bebf195f8ed5c/src%2Ftest%2Fui%2Fparser%2Fshebang%2Fshebang-space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fshebang%2Fshebang-space.rs?ref=dda8a7fde92a0be3f18b863bf35bebf195f8ed5c", "patch": "@@ -0,0 +1,5 @@\n+#!    \n+\n+// check-pass\n+// ignore-tidy-end-whitespace\n+fn main() {}"}, {"sha": "3d3ba468be9558a81f75f031c3416990223130fa", "filename": "src/test/ui/shebang.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7750c3d46bc19784adb1ee6e37a5ec7e4cd7e772/src%2Ftest%2Fui%2Fshebang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7750c3d46bc19784adb1ee6e37a5ec7e4cd7e772/src%2Ftest%2Fui%2Fshebang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fshebang.rs?ref=7750c3d46bc19784adb1ee6e37a5ec7e4cd7e772", "patch": "@@ -1,5 +0,0 @@\n-#!/usr/bin/env rustx\n-\n-// run-pass\n-\n-pub fn main() { println!(\"Hello World\"); }"}]}