{"sha": "ed3014a2b9470a89165f2762ba746ee7736d5590", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkMzAxNGEyYjk0NzBhODkxNjVmMjc2MmJhNzQ2ZWU3NzM2ZDU1OTA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-06T17:14:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-08T21:04:54Z"}, "message": "use static strings instead of tcx", "tree": {"sha": "520bca38f392f1e93ba530aea66ca44b318f1a18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/520bca38f392f1e93ba530aea66ca44b318f1a18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed3014a2b9470a89165f2762ba746ee7736d5590", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed3014a2b9470a89165f2762ba746ee7736d5590", "html_url": "https://github.com/rust-lang/rust/commit/ed3014a2b9470a89165f2762ba746ee7736d5590", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed3014a2b9470a89165f2762ba746ee7736d5590/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85e1466232eadd2ec6b9c2ae0aa4030a39fde04f", "url": "https://api.github.com/repos/rust-lang/rust/commits/85e1466232eadd2ec6b9c2ae0aa4030a39fde04f", "html_url": "https://github.com/rust-lang/rust/commit/85e1466232eadd2ec6b9c2ae0aa4030a39fde04f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "b46095927b70910aee9e5ffaeefefd1906cb3914", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ed3014a2b9470a89165f2762ba746ee7736d5590/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed3014a2b9470a89165f2762ba746ee7736d5590/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=ed3014a2b9470a89165f2762ba746ee7736d5590", "patch": "@@ -304,7 +304,7 @@ impl fmt::Debug for InvalidProgramInfo<'_> {\n }\n \n /// Error information for when the program caused Undefined Behavior.\n-pub enum UndefinedBehaviorInfo<'tcx> {\n+pub enum UndefinedBehaviorInfo {\n     /// Free-form case. Only for errors that are never caught!\n     Ub(String),\n     /// Free-form case for experimental UB. Only for errors that are never caught!\n@@ -322,10 +322,10 @@ pub enum UndefinedBehaviorInfo<'tcx> {\n     /// Overflowing inbounds pointer arithmetic.\n     PointerArithOverflow,\n     /// Invalid metadata in a wide pointer (using `str` to avoid allocations).\n-    InvalidMeta(&'tcx str),\n+    InvalidMeta(&'static str),\n }\n \n-impl fmt::Debug for UndefinedBehaviorInfo<'_> {\n+impl fmt::Debug for UndefinedBehaviorInfo {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         use UndefinedBehaviorInfo::*;\n         match self {\n@@ -358,7 +358,7 @@ pub enum UnsupportedOpInfo<'tcx> {\n \n     /// When const-prop encounters a situation it does not support, it raises this error.\n     /// This must not allocate for performance reasons (hence `str`, not `String`).\n-    ConstPropUnsupported(&'tcx str),\n+    ConstPropUnsupported(&'static str),\n \n     // -- Everything below is not categorized yet --\n     FunctionAbiMismatch(Abi, Abi),\n@@ -580,7 +580,7 @@ impl fmt::Debug for ResourceExhaustionInfo {\n \n pub enum InterpError<'tcx> {\n     /// The program caused undefined behavior.\n-    UndefinedBehavior(UndefinedBehaviorInfo<'tcx>),\n+    UndefinedBehavior(UndefinedBehaviorInfo),\n     /// The program did something the interpreter does not support (some of these *might* be UB\n     /// but the interpreter is not sure).\n     Unsupported(UnsupportedOpInfo<'tcx>),"}]}