{"sha": "f8b7c3e1db93e20e3a778ce959552dfe6d908bab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YjdjM2UxZGI5M2UyMGUzYTc3OGNlOTU5NTUyZGZlNmQ5MDhiYWI=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-09-07T00:28:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-07T00:28:06Z"}, "message": "Rollup merge of #44361 - oli-obk:lit_sugg, r=nikomatsakis\n\nSuggest changing literals instead of calling methods (fixes #44307)", "tree": {"sha": "3e151de57f91d076886aeb729eeb5118b89dff0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e151de57f91d076886aeb729eeb5118b89dff0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8b7c3e1db93e20e3a778ce959552dfe6d908bab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b7c3e1db93e20e3a778ce959552dfe6d908bab", "html_url": "https://github.com/rust-lang/rust/commit/f8b7c3e1db93e20e3a778ce959552dfe6d908bab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8b7c3e1db93e20e3a778ce959552dfe6d908bab/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48dcebd5862a36644c06228cabcfa8b5d9060f1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/48dcebd5862a36644c06228cabcfa8b5d9060f1d", "html_url": "https://github.com/rust-lang/rust/commit/48dcebd5862a36644c06228cabcfa8b5d9060f1d"}, {"sha": "ddd01455e9eb7d6356c43e7802337d3e4202d846", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd01455e9eb7d6356c43e7802337d3e4202d846", "html_url": "https://github.com/rust-lang/rust/commit/ddd01455e9eb7d6356c43e7802337d3e4202d846"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "65900dc3f36e7d8242903846e0995187ac6858ee", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f8b7c3e1db93e20e3a778ce959552dfe6d908bab/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b7c3e1db93e20e3a778ce959552dfe6d908bab/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=f8b7c3e1db93e20e3a778ce959552dfe6d908bab", "patch": "@@ -207,7 +207,29 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                  expected: Ty<'tcx>)\n                  -> Option<String> {\n         match (&expected.sty, &checked_ty.sty) {\n-            (&ty::TyRef(_, _), &ty::TyRef(_, _)) => None,\n+            (&ty::TyRef(_, exp), &ty::TyRef(_, check)) => match (&exp.ty.sty, &check.ty.sty) {\n+                (&ty::TyStr, &ty::TyArray(arr, _)) |\n+                (&ty::TyStr, &ty::TySlice(arr)) if arr == self.tcx.types.u8 => {\n+                    if let hir::ExprLit(_) = expr.node {\n+                        let sp = self.sess().codemap().call_span_if_macro(expr.span);\n+                        if let Ok(src) = self.tcx.sess.codemap().span_to_snippet(sp) {\n+                            return Some(format!(\"try `{}`\", &src[1..]));\n+                        }\n+                    }\n+                    None\n+                },\n+                (&ty::TyArray(arr, _), &ty::TyStr) |\n+                (&ty::TySlice(arr), &ty::TyStr) if arr == self.tcx.types.u8 => {\n+                    if let hir::ExprLit(_) = expr.node {\n+                        let sp = self.sess().codemap().call_span_if_macro(expr.span);\n+                        if let Ok(src) = self.tcx.sess.codemap().span_to_snippet(sp) {\n+                            return Some(format!(\"try `b{}`\", src));\n+                        }\n+                    }\n+                    None\n+                }\n+                _ => None,\n+            },\n             (&ty::TyRef(_, mutability), _) => {\n                 // Check if it can work when put into a ref. For example:\n                 //"}, {"sha": "0fd7d3a9d869e82757f7c0d6af98719219862cf8", "filename": "src/test/ui/str-lit-type-mismatch.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f8b7c3e1db93e20e3a778ce959552dfe6d908bab/src%2Ftest%2Fui%2Fstr-lit-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b7c3e1db93e20e3a778ce959552dfe6d908bab/src%2Ftest%2Fui%2Fstr-lit-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstr-lit-type-mismatch.rs?ref=f8b7c3e1db93e20e3a778ce959552dfe6d908bab", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+fn main() {\n+    let x: &[u8] = \"foo\";\n+    let y: &[u8; 4] = \"baaa\";\n+    let z: &str = b\"foo\";\n+}"}, {"sha": "47418522df8ac611c92edc119db7fbcc3da7344f", "filename": "src/test/ui/str-lit-type-mismatch.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f8b7c3e1db93e20e3a778ce959552dfe6d908bab/src%2Ftest%2Fui%2Fstr-lit-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8b7c3e1db93e20e3a778ce959552dfe6d908bab/src%2Ftest%2Fui%2Fstr-lit-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstr-lit-type-mismatch.stderr?ref=f8b7c3e1db93e20e3a778ce959552dfe6d908bab", "patch": "@@ -0,0 +1,32 @@\n+error[E0308]: mismatched types\n+  --> $DIR/str-lit-type-mismatch.rs:13:20\n+   |\n+13 |     let x: &[u8] = \"foo\";\n+   |                    ^^^^^ expected slice, found str\n+   |\n+   = note: expected type `&[u8]`\n+              found type `&'static str`\n+   = help: try `b\"foo\"`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/str-lit-type-mismatch.rs:14:23\n+   |\n+14 |     let y: &[u8; 4] = \"baaa\";\n+   |                       ^^^^^^ expected array of 4 elements, found str\n+   |\n+   = note: expected type `&[u8; 4]`\n+              found type `&'static str`\n+   = help: try `b\"baaa\"`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/str-lit-type-mismatch.rs:15:19\n+   |\n+15 |     let z: &str = b\"foo\";\n+   |                   ^^^^^^ expected str, found array of 3 elements\n+   |\n+   = note: expected type `&str`\n+              found type `&'static [u8; 3]`\n+   = help: try `\"foo\"`\n+\n+error: aborting due to 3 previous errors\n+"}]}