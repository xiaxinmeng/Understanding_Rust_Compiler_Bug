{"sha": "0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiN2UwYWFiYTVjMTQwYTRkN2RiMDAyM2U1ZjhhNjg1YmNhZWM5YmQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-08-31T18:39:32Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-09-05T14:37:58Z"}, "message": "rustc: Classify two more CrateStore methods untracked\n\nThese are only called pre-TyCtxt (e.g. lowering/resolve), so make it explicit in\nthe name that they're untracked and therefore unsuitable to called elsewhere.", "tree": {"sha": "d4618c4b293316390351c911db0a162b307a9778", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4618c4b293316390351c911db0a162b307a9778"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd", "html_url": "https://github.com/rust-lang/rust/commit/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88399a985a5405b74b4b64d7790742152e5a2d1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/88399a985a5405b74b4b64d7790742152e5a2d1a", "html_url": "https://github.com/rust-lang/rust/commit/88399a985a5405b74b4b64d7790742152e5a2d1a"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "d657b9bbe67e3b03d94f2281c784c1c70fce7236", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd", "patch": "@@ -787,7 +787,7 @@ impl<'a> LoweringContext<'a> {\n                         return n;\n                     }\n                     assert!(!def_id.is_local());\n-                    let n = self.sess.cstore.item_generics_cloned(def_id).regions.len();\n+                    let n = self.sess.cstore.item_generics_cloned_untracked(def_id).regions.len();\n                     self.type_def_lifetime_params.insert(def_id, n);\n                     n\n                 });"}, {"sha": "0b4a2ce71b3c13081a076eb811b2bdbc964c489c", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd", "patch": "@@ -234,12 +234,6 @@ pub trait CrateStore {\n     // access to the metadata loader\n     fn metadata_loader(&self) -> &MetadataLoader;\n \n-    // item info\n-    fn item_generics_cloned(&self, def: DefId) -> ty::Generics;\n-\n-    // trait/impl-item info\n-    fn associated_item_cloned(&self, def: DefId) -> ty::AssociatedItem;\n-\n     // resolve\n     fn def_key(&self, def: DefId) -> DefKey;\n     fn def_path(&self, def: DefId) -> hir_map::DefPath;\n@@ -255,6 +249,8 @@ pub trait CrateStore {\n     fn item_children_untracked(&self, did: DefId, sess: &Session) -> Vec<def::Export>;\n     fn load_macro_untracked(&self, did: DefId, sess: &Session) -> LoadedMacro;\n     fn extern_mod_stmt_cnum_untracked(&self, emod_id: ast::NodeId) -> Option<CrateNum>;\n+    fn item_generics_cloned_untracked(&self, def: DefId) -> ty::Generics;\n+    fn associated_item_cloned_untracked(&self, def: DefId) -> ty::AssociatedItem;\n \n     // This is basically a 1-based range of ints, which is a little\n     // silly - I may fix that.\n@@ -308,11 +304,11 @@ impl CrateStore for DummyCrateStore {\n         { bug!(\"crate_data_as_rc_any\") }\n     // item info\n     fn visibility_untracked(&self, def: DefId) -> ty::Visibility { bug!(\"visibility\") }\n-    fn item_generics_cloned(&self, def: DefId) -> ty::Generics\n+    fn item_generics_cloned_untracked(&self, def: DefId) -> ty::Generics\n         { bug!(\"item_generics_cloned\") }\n \n     // trait/impl-item info\n-    fn associated_item_cloned(&self, def: DefId) -> ty::AssociatedItem\n+    fn associated_item_cloned_untracked(&self, def: DefId) -> ty::AssociatedItem\n         { bug!(\"associated_item_cloned\") }\n \n     // crate metadata"}, {"sha": "c53e255f0cdab5e5b3fa6ee27dbb77fa585f3197", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd", "patch": "@@ -978,7 +978,7 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n             } else {\n                 let cstore = &self.sess.cstore;\n                 self.xcrate_object_lifetime_defaults.entry(def_id).or_insert_with(|| {\n-                    cstore.item_generics_cloned(def_id).types.into_iter().map(|def| {\n+                    cstore.item_generics_cloned_untracked(def_id).types.into_iter().map(|def| {\n                         def.object_lifetime_default\n                     }).collect()\n                 })"}, {"sha": "0a14eac315728b80d8ee9f18a2e5cea477611cdc", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd", "patch": "@@ -350,12 +350,12 @@ impl CrateStore for cstore::CStore {\n         self.get_crate_data(def.krate).get_visibility(def.index)\n     }\n \n-    fn item_generics_cloned(&self, def: DefId) -> ty::Generics {\n+    fn item_generics_cloned_untracked(&self, def: DefId) -> ty::Generics {\n         self.read_dep_node(def);\n         self.get_crate_data(def.krate).get_generics(def.index)\n     }\n \n-    fn associated_item_cloned(&self, def: DefId) -> ty::AssociatedItem\n+    fn associated_item_cloned_untracked(&self, def: DefId) -> ty::AssociatedItem\n     {\n         self.read_dep_node(def);\n         self.get_crate_data(def.krate).get_associated_item(def.index)"}, {"sha": "e3589ad58cfa37c83dd2a1ef2611a8afa653b6c8", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=0b7e0aaba5c140a4d7db0023e5f8a685bcaec9bd", "patch": "@@ -490,7 +490,7 @@ impl<'a> Resolver<'a> {\n                     self.define(module, child.ident, ns,\n                                 (child.def, ty::Visibility::Public, DUMMY_SP, expansion));\n \n-                    if self.session.cstore.associated_item_cloned(child.def.def_id())\n+                    if self.session.cstore.associated_item_cloned_untracked(child.def.def_id())\n                            .method_has_self_argument {\n                         self.has_self.insert(child.def.def_id());\n                     }"}]}