{"sha": "3b8617b9b6718f04d412ffae52337053e79c3c6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiODYxN2I5YjY3MThmMDRkNDEyZmZhZTUyMzM3MDUzZTc5YzNjNmI=", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-11-26T22:22:36Z"}, "committer": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-11-26T22:22:36Z"}, "message": "Added [T; N]::zip()", "tree": {"sha": "58c61e6ba7244c5b3ac16c188b436f97dc4de1bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58c61e6ba7244c5b3ac16c188b436f97dc4de1bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b8617b9b6718f04d412ffae52337053e79c3c6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b8617b9b6718f04d412ffae52337053e79c3c6b", "html_url": "https://github.com/rust-lang/rust/commit/3b8617b9b6718f04d412ffae52337053e79c3c6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b8617b9b6718f04d412ffae52337053e79c3c6b/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72da5a9d85a522b11e80d0fdd1fd95247d442604", "url": "https://api.github.com/repos/rust-lang/rust/commits/72da5a9d85a522b11e80d0fdd1fd95247d442604", "html_url": "https://github.com/rust-lang/rust/commit/72da5a9d85a522b11e80d0fdd1fd95247d442604"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "02b771863e92bfeb229da33cdd665272294120ae", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3b8617b9b6718f04d412ffae52337053e79c3c6b/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b8617b9b6718f04d412ffae52337053e79c3c6b/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=3b8617b9b6718f04d412ffae52337053e79c3c6b", "patch": "@@ -463,6 +463,34 @@ impl<T, const N: usize> [T; N] {\n         unsafe { crate::mem::transmute_copy::<_, [U; N]>(&dst) }\n     }\n \n+    /// 'Zips up' two arrays into a single array of pairs.\n+    /// `zip()` returns a new array where every element is a tuple where the first element comes from the first array, and the second element comes from the second array.\n+    /// In other words, it zips two arrays together, into a single one.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(array_zip)]\n+    /// let x = [1, 2, 3];\n+    /// let y = [4, 5, 6];\n+    /// let z = x.zip(y);\n+    /// assert_eq!(z, [(1, 4), (2, 5), (3, 6)]);\n+    /// ```\n+    #[unstable(feature = \"array_zip\", issue = \"none\")]\n+    pub fn zip<U>(self, rhs: [U; N]) -> [(T, U); N] {\n+        use crate::mem::MaybeUninit;\n+\n+        let mut dst = MaybeUninit::uninit_array::<N>();\n+        for ((lhs, rhs), dst) in IntoIter::new(self).zip(IntoIter::new(rhs)).zip(&mut dst) {\n+            dst.write((lhs, rhs));\n+        }\n+        // FIXME: Convert to crate::mem::transmute once it works with generics.\n+        // unsafe { crate::mem::transmute::<[MaybeUninit<U>; N], [U; N]>(dst) }\n+        // SAFETY: At this point we've properly initialized the whole array\n+        // and we just need to cast it to the correct type.\n+        unsafe { crate::mem::transmute_copy::<_, [(T, U); N]>(&dst) }\n+    }\n+\n     /// Returns a slice containing the entire array. Equivalent to `&s[..]`.\n     #[unstable(feature = \"array_methods\", issue = \"76118\")]\n     pub fn as_slice(&self) -> &[T] {"}, {"sha": "9005e3d8f43e3f7e08189b155e73629a1bb1280b", "filename": "library/core/tests/array.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3b8617b9b6718f04d412ffae52337053e79c3c6b/library%2Fcore%2Ftests%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b8617b9b6718f04d412ffae52337053e79c3c6b/library%2Fcore%2Ftests%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Farray.rs?ref=3b8617b9b6718f04d412ffae52337053e79c3c6b", "patch": "@@ -317,6 +317,14 @@ fn array_map() {\n     assert_eq!(b, [1, 2, 3]);\n }\n \n+#[test]\n+fn array_zip() {\n+    let a = [1, 2, 3];\n+    let b = [4, 5, 6];\n+    let c = a.zip(b);\n+    assert_eq!(c, [(1, 4), (2, 5), (3, 6)]);\n+}\n+\n // See note on above test for why `should_panic` is used.\n #[test]\n #[should_panic(expected = \"test succeeded\")]"}, {"sha": "2daf2650b5822d4b534fdd7e38e703ae62c01f0e", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3b8617b9b6718f04d412ffae52337053e79c3c6b/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b8617b9b6718f04d412ffae52337053e79c3c6b/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=3b8617b9b6718f04d412ffae52337053e79c3c6b", "patch": "@@ -3,6 +3,7 @@\n #![feature(array_from_ref)]\n #![feature(array_methods)]\n #![feature(array_map)]\n+#![feature(array_zip)]\n #![feature(array_windows)]\n #![feature(bool_to_option)]\n #![feature(bound_cloned)]"}]}