{"sha": "43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8", "node_id": "C_kwDOAAsO6NoAKDQzZGM0MzBmNTI3NWE1MjBkYWIyNWE1YmMxYzhhMGQwYWQyY2I2Yjg", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-11-25T09:45:25Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-03-02T16:46:09Z"}, "message": "Test `expect` with `forbid` and fix doc errors (RFC-2383)\n\n* Add test to expect and the forbid a lint (RFC 2383)", "tree": {"sha": "5fd864006b16576c70c62852c32f930d70d15e58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fd864006b16576c70c62852c32f930d70d15e58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEsfZNmu/fmIv8KDcv/Ny/Ka9k1gEFAmIfn1EACgkQ/Ny/Ka9k\n1gGXTQ//RUTz0YpWlpNKIookiam/+ummO2XEkMGb919nX4I+yJztRYgd5cjv6Q0z\nIsmb6sPGyWu1J6gQwlVHXs8ScVzGAlXzorIE7jnpN7P4pLjiFT6mLwCOA76hKnOH\n2bgTjlCcwYdz3H69AC8HtjdC9cd7PZM8XnEPMmmxSI4MJqSohmiFhw/qxOG+AjIe\n0ISzjaT/PEWcwrhFSTHpgmPWZxwbwZG79/U48qCcDnXMmUtwUBXpe8Ww3efpKyJb\nJ+BBH30uc/zawhIVQOX3hB5jmXeAn4n1QKjllErqvWIidbUmZteYKFsKGKEbuwAA\nbLxo84b36pW16DEJ1UUF8R9jO1bwA+hX2VGZ2DkU8EvlT5WT2okNfZ1wRNna1Ynd\neMyTRxWsBYOchPzjaxasgtArT4csM3NLxV0qE/mx5wzJPqaZEf16NJjMjnFb6cfg\n6XMJOlJThrZsxDmShZ0UUx4E6oWDPWY1Y3mC2uWxtZBe00dxiyO41WCQ+5EMo0ep\nSLRzDKxVt1A/hGf31uKK8d5s1f8aS1o3HY6gcCucfmJa1o0tmAU7lx18z863k/59\n7wTmtS8i29D6SbaoFaNS7bx5pRUv8WXjmWTI/w8/PranfA1kZZYHs3kBmC2PIb5r\nCXcTuywFSq3fWeryom2bj1/4jYBw28tuBsJLriQapTP8ACuD+BQ=\n=XX40\n-----END PGP SIGNATURE-----", "payload": "tree 5fd864006b16576c70c62852c32f930d70d15e58\nparent aa2a0a83d9aa241bbce62797b1c2140c79389ef5\nauthor xFrednet <xFrednet@gmail.com> 1637833525 +0100\ncommitter xFrednet <xFrednet@gmail.com> 1646239569 +0100\n\nTest `expect` with `forbid` and fix doc errors (RFC-2383)\n\n* Add test to expect and the forbid a lint (RFC 2383)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8", "html_url": "https://github.com/rust-lang/rust/commit/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa2a0a83d9aa241bbce62797b1c2140c79389ef5", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa2a0a83d9aa241bbce62797b1c2140c79389ef5", "html_url": "https://github.com/rust-lang/rust/commit/aa2a0a83d9aa241bbce62797b1c2140c79389ef5"}], "stats": {"total": 137, "additions": 124, "deletions": 13}, "files": [{"sha": "66629195153b42a6e062490af43a6eaa7d3c0ecb", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8", "patch": "@@ -50,19 +50,17 @@ pub enum Applicability {\n     Unspecified,\n }\n \n-/// Each lint expectation has a `LintExpectationId` assigned by the\n-/// [`LintLevelsBuilder`][`rustc_lint::levels::LintLevelsBuilder`]. Expected\n-/// [`Diagnostic`][`rustc_errors::Diagnostic`]s get the lint level `Expect` which\n-/// stores the `LintExpectationId` to match it with the actual expectation later on.\n+/// Each lint expectation has a `LintExpectationId` assigned by the `LintLevelsBuilder`.\n+/// Expected `Diagnostic`s get the lint level `Expect` which stores the `LintExpectationId`\n+/// to match it with the actual expectation later on.\n ///\n /// The `LintExpectationId` has to be has stable between compilations, as diagnostic\n /// instances might be loaded from cache. Lint messages can be emitted during an\n /// `EarlyLintPass` operating on the AST and during a `LateLintPass` traversing the\n /// HIR tree. The AST doesn't have enough information to create a stable id. The\n /// `LintExpectationId` will instead store the [`AttrId`] defining the expectation.\n /// These `LintExpectationId` will be updated to use the stable [`HirId`] once the\n-/// AST has been lowered. The transformation is done by the\n-/// [`LintLevelsBuilder`][`rustc_lint::levels::LintLevelsBuilder`]\n+/// AST has been lowered. The transformation is done by the `LintLevelsBuilder`\n ///\n /// Each lint inside the `expect` attribute is tracked individually, the `lint_index`\n /// identifies the lint inside the attribute and ensures that the IDs are unique.\n@@ -135,7 +133,7 @@ impl<HCX: rustc_hir::HashStableContext> ToStableHashKey<HCX> for LintExpectation\n \n /// Setting for how to handle a lint.\n ///\n-/// See: https://doc.rust-lang.org/rustc/lints/levels.html\n+/// See: <https://doc.rust-lang.org/rustc/lints/levels.html>\n #[derive(Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Debug, Hash)]\n pub enum Level {\n     /// The `allow` level will not issue any message."}, {"sha": "cad6b836c7a72fa37bcd8bfb518cc17177c804af", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_nested_lint_levels.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_nested_lint_levels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_nested_lint_levels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_nested_lint_levels.rs?ref=43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8", "patch": "@@ -1,4 +1,3 @@\n-// check-pass\n // ignore-tidy-linelength\n \n #![feature(lint_reasons)]\n@@ -37,7 +36,18 @@ mod oof {\n         let mut v = 0;\n         //~^ WARNING variable does not need to be mutable [unused_mut]\n         //~| NOTE this overrides the previous `expect` lint level and warns about the `unused_mut` lint here\n+        //~| HELP remove this `mut`\n     }\n }\n \n+#[expect(unused_variables)]\n+//~^ WARNING this lint expectation is unfulfilled\n+#[forbid(unused_variables)]\n+//~^ NOTE the lint level is defined here\n+fn check_expect_then_forbid() {\n+    let this_is_my_function = 3;\n+    //~^ ERROR unused variable: `this_is_my_function` [unused_variables]\n+    //~| HELP if this is intentional, prefix it with an underscore\n+}\n+\n fn main() {}"}, {"sha": "353cbc341f24a2ea634dae65f3b0032e40690b69", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_nested_lint_levels.stderr", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_nested_lint_levels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_nested_lint_levels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_nested_lint_levels.stderr?ref=43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8", "patch": "@@ -1,5 +1,17 @@\n+error: unused variable: `this_is_my_function`\n+  --> $DIR/expect_nested_lint_levels.rs:48:9\n+   |\n+LL |     let this_is_my_function = 3;\n+   |         ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_this_is_my_function`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/expect_nested_lint_levels.rs:45:10\n+   |\n+LL | #[forbid(unused_variables)]\n+   |          ^^^^^^^^^^^^^^^^\n+\n warning: variable does not need to be mutable\n-  --> $DIR/expect_nested_lint_levels.rs:37:13\n+  --> $DIR/expect_nested_lint_levels.rs:36:13\n    |\n LL |         let mut v = 0;\n    |             ----^\n@@ -8,13 +20,13 @@ LL |         let mut v = 0;\n    |\n    = note: this overrides the previous `expect` lint level and warns about the `unused_mut` lint here\n note: the lint level is defined here\n-  --> $DIR/expect_nested_lint_levels.rs:32:9\n+  --> $DIR/expect_nested_lint_levels.rs:31:9\n    |\n LL |         unused_mut,\n    |         ^^^^^^^^^^\n \n warning: this lint expectation is unfulfilled\n-  --> $DIR/expect_nested_lint_levels.rs:24:5\n+  --> $DIR/expect_nested_lint_levels.rs:23:5\n    |\n LL |     unused_mut,\n    |     ^^^^^^^^^^\n@@ -23,12 +35,18 @@ LL |     unused_mut,\n    = note: this `expect` is overridden by a `warn` attribute before the `unused_mut` lint is triggered\n \n warning: this lint expectation is unfulfilled\n-  --> $DIR/expect_nested_lint_levels.rs:8:5\n+  --> $DIR/expect_nested_lint_levels.rs:7:5\n    |\n LL |     unused_mut,\n    |     ^^^^^^^^^^\n    |\n    = note: this `expect` is overridden by a `allow` attribute before the `unused_mut` lint is triggered\n \n-warning: 3 warnings emitted\n+warning: this lint expectation is unfulfilled\n+  --> $DIR/expect_nested_lint_levels.rs:43:10\n+   |\n+LL | #[expect(unused_variables)]\n+   |          ^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error; 4 warnings emitted\n "}, {"sha": "479ee198e1743f7e8eaf3a580c7ca2960d938bb3", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_with_forbid.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_with_forbid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_with_forbid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_with_forbid.rs?ref=43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8", "patch": "@@ -0,0 +1,34 @@\n+#![feature(lint_reasons)]\n+\n+#[forbid(unused_variables)]\n+//~^ NOTE `forbid` level set here\n+//~| NOTE `forbid` level set here\n+#[expect(unused_variables)]\n+//~^ ERROR incompatible with previous forbid [E0453]\n+//~| NOTE overruled by previous forbid\n+//~| ERROR incompatible with previous forbid [E0453]\n+//~| NOTE overruled by previous forbid\n+fn expect_forbidden_lint_1() {}\n+\n+#[forbid(while_true)]\n+//~^ NOTE `forbid` level set here\n+//~| NOTE `forbid` level set here\n+//~| NOTE the lint level is defined here\n+#[expect(while_true)]\n+//~^ ERROR incompatible with previous forbid [E0453]\n+//~| NOTE overruled by previous forbid\n+//~| ERROR incompatible with previous forbid [E0453]\n+//~| NOTE overruled by previous forbid\n+fn expect_forbidden_lint_2() {\n+    // This while loop will produce a `while_true` lint as the lint level\n+    // at this node is still `forbid` and the `while_true` check happens\n+    // before the compilation terminates due to `E0453`\n+    while true {}\n+    //~^ ERROR denote infinite loops with `loop { ... }`\n+    //~| HELP use `loop`\n+}\n+\n+fn main() {\n+    expect_forbidden_lint_1();\n+    expect_forbidden_lint_2();\n+}"}, {"sha": "a8116e93404f29396a25ffcc4be1c968433abff9", "filename": "src/test/ui/lint/rfc-2383-lint-reason/expect_with_forbid.stderr", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_with_forbid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_with_forbid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Fexpect_with_forbid.stderr?ref=43dc430f5275a520dab25a5bc1c8a0d0ad2cb6b8", "patch": "@@ -0,0 +1,51 @@\n+error[E0453]: expect(unused_variables) incompatible with previous forbid\n+  --> $DIR/expect_with_forbid.rs:6:10\n+   |\n+LL | #[forbid(unused_variables)]\n+   |          ---------------- `forbid` level set here\n+...\n+LL | #[expect(unused_variables)]\n+   |          ^^^^^^^^^^^^^^^^ overruled by previous forbid\n+\n+error[E0453]: expect(while_true) incompatible with previous forbid\n+  --> $DIR/expect_with_forbid.rs:17:10\n+   |\n+LL | #[forbid(while_true)]\n+   |          ---------- `forbid` level set here\n+...\n+LL | #[expect(while_true)]\n+   |          ^^^^^^^^^^ overruled by previous forbid\n+\n+error[E0453]: expect(unused_variables) incompatible with previous forbid\n+  --> $DIR/expect_with_forbid.rs:6:10\n+   |\n+LL | #[forbid(unused_variables)]\n+   |          ---------------- `forbid` level set here\n+...\n+LL | #[expect(unused_variables)]\n+   |          ^^^^^^^^^^^^^^^^ overruled by previous forbid\n+\n+error[E0453]: expect(while_true) incompatible with previous forbid\n+  --> $DIR/expect_with_forbid.rs:17:10\n+   |\n+LL | #[forbid(while_true)]\n+   |          ---------- `forbid` level set here\n+...\n+LL | #[expect(while_true)]\n+   |          ^^^^^^^^^^ overruled by previous forbid\n+\n+error: denote infinite loops with `loop { ... }`\n+  --> $DIR/expect_with_forbid.rs:26:5\n+   |\n+LL |     while true {}\n+   |     ^^^^^^^^^^ help: use `loop`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/expect_with_forbid.rs:13:10\n+   |\n+LL | #[forbid(while_true)]\n+   |          ^^^^^^^^^^\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0453`."}]}