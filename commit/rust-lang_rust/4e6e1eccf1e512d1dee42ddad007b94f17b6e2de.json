{"sha": "4e6e1eccf1e512d1dee42ddad007b94f17b6e2de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNmUxZWNjZjFlNTEyZDFkZWU0MmRkYWQwMDdiOTRmMTdiNmUyZGU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-15T17:02:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-15T17:02:01Z"}, "message": "Rollup merge of #66415 - tmandry:force-test-in-process, r=alexcrichton\n\nAdd --force-run-in-process unstable option to libtest\n\nWhen running tests with `-Zpanic_abort_tests`, it's sometimes desirable to fall back to the old behavior of only running tests in-process. This comes in handy if the system process launcher is unavailable, or the test code somehow expects all tests to be run in the same process.\n\nFor example, in Fuchsia we have unit tests that actually test the process launcher itself, in which case we can't use the process launcher to run the tests :).\n\nr? @alexcrichton\ncc @cramertj,@petrhosek", "tree": {"sha": "8f889a71b3af7e66bd8722fedd8b79d6fa640ae0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f889a71b3af7e66bd8722fedd8b79d6fa640ae0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdztoJCRBK7hj4Ov3rIwAAdHIIAGK4WrkxSryHkrtafF7tyAlx\nAicAA4agiGyouZdXlk/Lc7m3/IJD3HiGuqxhhSpw64kWOjk8RPKcmU5u43ItIv+x\n4wRikcaEjpiJGOWSS22EgbyVCPA9tSJjM1JgvBN4Ek8npXwxzZzp52fMQ//mJHoj\nzMjnIRIMrYGI+MHOIUT8B+PxeQbLwD8VrLFrlgEhE+zQCgP3xAaSlRTbFoHLVLiP\nZWlowWSKy+k2f1y2wHzPEX/4antZV+28XT4s8iZYIVYot7HUmtTZcy8uPDJREnBS\niz8iaoDwJqibqyBCkwruxM6u3+DvcCHDjNx1/oyyNSvhNyOpuDkxSMq7VZaNnzg=\n=uxrO\n-----END PGP SIGNATURE-----\n", "payload": "tree 8f889a71b3af7e66bd8722fedd8b79d6fa640ae0\nparent e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1\nparent d252ba35d490f16d2efefdedc581b1c9d6d64ecb\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1573837321 +0100\ncommitter GitHub <noreply@github.com> 1573837321 +0100\n\nRollup merge of #66415 - tmandry:force-test-in-process, r=alexcrichton\n\nAdd --force-run-in-process unstable option to libtest\n\nWhen running tests with `-Zpanic_abort_tests`, it's sometimes desirable to fall back to the old behavior of only running tests in-process. This comes in handy if the system process launcher is unavailable, or the test code somehow expects all tests to be run in the same process.\n\nFor example, in Fuchsia we have unit tests that actually test the process launcher itself, in which case we can't use the process launcher to run the tests :).\n\nr? @alexcrichton\ncc @cramertj,@petrhosek\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de", "html_url": "https://github.com/rust-lang/rust/commit/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1", "html_url": "https://github.com/rust-lang/rust/commit/e3c78d549e0d8cdd3c05190e93f4ec7ff09a9ed1"}, {"sha": "d252ba35d490f16d2efefdedc581b1c9d6d64ecb", "url": "https://api.github.com/repos/rust-lang/rust/commits/d252ba35d490f16d2efefdedc581b1c9d6d64ecb", "html_url": "https://github.com/rust-lang/rust/commit/d252ba35d490f16d2efefdedc581b1c9d6d64ecb"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "659780d7a434b61167b3deadb6fd2eccc8625dcb", "filename": "src/libsyntax_ext/test_harness.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/src%2Flibsyntax_ext%2Ftest_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/src%2Flibsyntax_ext%2Ftest_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Ftest_harness.rs?ref=4e6e1eccf1e512d1dee42ddad007b94f17b6e2de", "patch": "@@ -67,7 +67,8 @@ pub fn inject(\n                 PanicStrategy::Unwind\n             }\n             (PanicStrategy::Abort, false) => {\n-                span_diagnostic.err(\"building tests with panic=abort is not yet supported\");\n+                span_diagnostic.err(\"building tests with panic=abort is not supported \\\n+                                     without `-Zpanic_abort_tests`\");\n                 PanicStrategy::Unwind\n             }\n             (PanicStrategy::Unwind, _) => PanicStrategy::Unwind,"}, {"sha": "c97cb0e0605a220ba4afb255356de3f45493fb21", "filename": "src/libtest/cli.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/src%2Flibtest%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/src%2Flibtest%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Fcli.rs?ref=4e6e1eccf1e512d1dee42ddad007b94f17b6e2de", "patch": "@@ -13,6 +13,7 @@ pub struct TestOpts {\n     pub list: bool,\n     pub filter: Option<String>,\n     pub filter_exact: bool,\n+    pub force_run_in_process: bool,\n     pub exclude_should_panic: bool,\n     pub run_ignored: RunIgnored,\n     pub run_tests: bool,\n@@ -46,6 +47,7 @@ fn optgroups() -> getopts::Options {\n     let mut opts = getopts::Options::new();\n     opts.optflag(\"\", \"include-ignored\", \"Run ignored and not ignored tests\")\n         .optflag(\"\", \"ignored\", \"Run only ignored tests\")\n+        .optflag(\"\", \"force-run-in-process\", \"Forces tests to run in-process when panic=abort\")\n         .optflag(\"\", \"exclude-should-panic\", \"Excludes tests marked as should_panic\")\n         .optflag(\"\", \"test\", \"Run tests and not benchmarks\")\n         .optflag(\"\", \"bench\", \"Run benchmarks instead of tests\")\n@@ -233,6 +235,7 @@ fn parse_opts_impl(matches: getopts::Matches) -> OptRes {\n     let allow_unstable = get_allow_unstable(&matches)?;\n \n     // Unstable flags\n+    let force_run_in_process = unstable_optflag!(matches, allow_unstable, \"force-run-in-process\");\n     let exclude_should_panic = unstable_optflag!(matches, allow_unstable, \"exclude-should-panic\");\n     let include_ignored = unstable_optflag!(matches, allow_unstable, \"include-ignored\");\n     let time_options = get_time_options(&matches, allow_unstable)?;\n@@ -259,6 +262,7 @@ fn parse_opts_impl(matches: getopts::Matches) -> OptRes {\n         list,\n         filter,\n         filter_exact: exact,\n+        force_run_in_process,\n         exclude_should_panic,\n         run_ignored,\n         run_tests,"}, {"sha": "7647978b3d975dfd0f69667ecf4a95bc6953caf9", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=4e6e1eccf1e512d1dee42ddad007b94f17b6e2de", "patch": "@@ -254,7 +254,7 @@ where\n     let mut pending = 0;\n \n     let (tx, rx) = channel::<CompletedTest>();\n-    let run_strategy = if opts.options.panic_abort {\n+    let run_strategy = if opts.options.panic_abort && !opts.force_run_in_process {\n         RunStrategy::SpawnPrimary\n     } else {\n         RunStrategy::InProcess"}, {"sha": "5f55b647f5e78f6470ce34621df048bfbfd217eb", "filename": "src/libtest/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/src%2Flibtest%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/src%2Flibtest%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Ftests.rs?ref=4e6e1eccf1e512d1dee42ddad007b94f17b6e2de", "patch": "@@ -24,6 +24,7 @@ impl TestOpts {\n             list: false,\n             filter: None,\n             filter_exact: false,\n+            force_run_in_process: false,\n             exclude_should_panic: false,\n             run_ignored: RunIgnored::No,\n             run_tests: false,"}, {"sha": "4adb161d9ee4b09b17c2b2e2c4f8e676e9e22d2f", "filename": "src/test/ui/test-panic-abort-disabled.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/src%2Ftest%2Fui%2Ftest-panic-abort-disabled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/src%2Ftest%2Fui%2Ftest-panic-abort-disabled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-panic-abort-disabled.rs?ref=4e6e1eccf1e512d1dee42ddad007b94f17b6e2de", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:building tests with panic=abort is not yet supported\n+// error-pattern:building tests with panic=abort is not supported\n // no-prefer-dynamic\n // compile-flags: --test -Cpanic=abort\n // run-flags: --test-threads=1"}, {"sha": "9c65c7360c108792e1a2afe635734dff787c1516", "filename": "src/test/ui/test-panic-abort-disabled.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/src%2Ftest%2Fui%2Ftest-panic-abort-disabled.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e6e1eccf1e512d1dee42ddad007b94f17b6e2de/src%2Ftest%2Fui%2Ftest-panic-abort-disabled.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-panic-abort-disabled.stderr?ref=4e6e1eccf1e512d1dee42ddad007b94f17b6e2de", "patch": "@@ -1,4 +1,4 @@\n-error: building tests with panic=abort is not yet supported\n+error: building tests with panic=abort is not supported without `-Zpanic_abort_tests`\n \n error: aborting due to previous error\n "}]}