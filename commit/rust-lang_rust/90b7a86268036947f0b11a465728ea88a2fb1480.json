{"sha": "90b7a86268036947f0b11a465728ea88a2fb1480", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYjdhODYyNjgwMzY5NDdmMGIxMWE0NjU3MjhlYTg4YTJmYjE0ODA=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-04-28T14:13:44Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-05-16T07:13:42Z"}, "message": "`rustc_mir::pretty` refactoring: break `fn write_fn_intro` into two routines.\n\n(The crucial thing these changes are working toward (but are not yet\nin this commit) is a way to pretty-print MIR without having the\n`NodeId` for that MIR in hand.)", "tree": {"sha": "80154826e5c8d005b6192ec238ed3d0efc16d3f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80154826e5c8d005b6192ec238ed3d0efc16d3f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90b7a86268036947f0b11a465728ea88a2fb1480", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90b7a86268036947f0b11a465728ea88a2fb1480", "html_url": "https://github.com/rust-lang/rust/commit/90b7a86268036947f0b11a465728ea88a2fb1480", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90b7a86268036947f0b11a465728ea88a2fb1480/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "306ca4ca4fcad9b66d375cdd3329093aa7447575", "url": "https://api.github.com/repos/rust-lang/rust/commits/306ca4ca4fcad9b66d375cdd3329093aa7447575", "html_url": "https://github.com/rust-lang/rust/commit/306ca4ca4fcad9b66d375cdd3329093aa7447575"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "a6bbd55ffa7a4480a85035c87bcf9804e151f36c", "filename": "src/librustc_mir/pretty.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/90b7a86268036947f0b11a465728ea88a2fb1480/src%2Flibrustc_mir%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90b7a86268036947f0b11a465728ea88a2fb1480/src%2Flibrustc_mir%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fpretty.rs?ref=90b7a86268036947f0b11a465728ea88a2fb1480", "patch": "@@ -276,6 +276,14 @@ fn write_mir_intro<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                              mir: &Mir,\n                              w: &mut Write)\n                              -> io::Result<()> {\n+    write_mir_sig(tcx, src, mir, w)?;\n+    writeln!(w, \" {{\")?;\n+    write_mir_decls(tcx, mir, w)\n+}\n+\n+fn write_mir_sig(tcx: TyCtxt, src: MirSource, mir: &Mir, w: &mut Write)\n+                 -> io::Result<()>\n+{\n     match src {\n         MirSource::Fn(_) => write!(w, \"fn\")?,\n         MirSource::Const(_) => write!(w, \"const\")?,\n@@ -301,16 +309,18 @@ fn write_mir_intro<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n         // fn return type.\n         match mir.return_ty {\n-            ty::FnOutput::FnConverging(ty) => write!(w, \"{}\", ty)?,\n-            ty::FnOutput::FnDiverging => write!(w, \"!\")?,\n+            ty::FnOutput::FnConverging(ty) => write!(w, \"{}\", ty),\n+            ty::FnOutput::FnDiverging => write!(w, \"!\"),\n         }\n     } else {\n         assert!(mir.arg_decls.is_empty());\n-        write!(w, \": {} =\", mir.return_ty.unwrap())?;\n+        write!(w, \": {} =\", mir.return_ty.unwrap())\n     }\n+}\n \n-    writeln!(w, \" {{\")?;\n-\n+fn write_mir_decls(tcx: TyCtxt, mir: &Mir, w: &mut Write)\n+                   -> io::Result<()>\n+{\n     // User variable types (including the user's name in a comment).\n     for (i, var) in mir.var_decls.iter().enumerate() {\n         let mut_str = if var.mutability == Mutability::Mut {"}]}