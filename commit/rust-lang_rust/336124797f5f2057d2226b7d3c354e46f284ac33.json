{"sha": "336124797f5f2057d2226b7d3c354e46f284ac33", "node_id": "C_kwDOAAsO6NoAKDMzNjEyNDc5N2Y1ZjIwNTdkMjIyNmI3ZDNjMzU0ZTQ2ZjI4NGFjMzM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-04T06:28:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-04T06:28:55Z"}, "message": "Rollup merge of #106292 - Nilstrieb:box-uninit-test, r=RalfJung\n\nAdd codegen test for `Box::new(uninit)` of big arrays\n\nCloses #58201\n\nr? `@RalfJung`", "tree": {"sha": "8f6d19ea45e10ed3655f00250d182c332f0f5da8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f6d19ea45e10ed3655f00250d182c332f0f5da8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/336124797f5f2057d2226b7d3c354e46f284ac33", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjtRynCRBK7hj4Ov3rIwAAiYcIAFZOf2x+39cE+kPJFgS6DRnS\nOzFvZdam0+tiD0AEVY+xWLNy1mGBA/pX3WhWYnoSDxmAezZOnKIzuSPLJ49bsBKT\naRHlu2cMbbRgJVQOFP5ff4c7ac48HzrgDP67Bp0SZ98YLuNuUkuq9aTEUV8xep7V\nvqFP7uH4yahfqyawkelFPuz4ueeuxtRjBpDxZM3iohBxMMxkJpdBrI0t9ueXqGD2\nS6Y1u/hfC7TQfnQqQFMRkoLcg57z99Duf0s2nspuFDuhWfny4VfRopt662llSSz0\n7bYKhBkpglVnW8Pp2tksIZ3awN9ZRsoN/Cr5/MVZUnIqf2jYmaY0x9oAftb4DpI=\n=05Qs\n-----END PGP SIGNATURE-----\n", "payload": "tree 8f6d19ea45e10ed3655f00250d182c332f0f5da8\nparent fbfaeb67953b1ccaf09c5eacb8ff0dcc464c3274\nparent 2675848b0a5248afeee552aee0c473bad9b4d9a3\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1672813735 +0100\ncommitter GitHub <noreply@github.com> 1672813735 +0100\n\nRollup merge of #106292 - Nilstrieb:box-uninit-test, r=RalfJung\n\nAdd codegen test for `Box::new(uninit)` of big arrays\n\nCloses #58201\n\nr? `@RalfJung`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/336124797f5f2057d2226b7d3c354e46f284ac33", "html_url": "https://github.com/rust-lang/rust/commit/336124797f5f2057d2226b7d3c354e46f284ac33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/336124797f5f2057d2226b7d3c354e46f284ac33/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbfaeb67953b1ccaf09c5eacb8ff0dcc464c3274", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbfaeb67953b1ccaf09c5eacb8ff0dcc464c3274", "html_url": "https://github.com/rust-lang/rust/commit/fbfaeb67953b1ccaf09c5eacb8ff0dcc464c3274"}, {"sha": "2675848b0a5248afeee552aee0c473bad9b4d9a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/2675848b0a5248afeee552aee0c473bad9b4d9a3", "html_url": "https://github.com/rust-lang/rust/commit/2675848b0a5248afeee552aee0c473bad9b4d9a3"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "7b5ae894311eff15f8d2e9184a23fbe426a230ac", "filename": "src/test/codegen/box-maybe-uninit-llvm14.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/336124797f5f2057d2226b7d3c354e46f284ac33/src%2Ftest%2Fcodegen%2Fbox-maybe-uninit-llvm14.rs", "raw_url": "https://github.com/rust-lang/rust/raw/336124797f5f2057d2226b7d3c354e46f284ac33/src%2Ftest%2Fcodegen%2Fbox-maybe-uninit-llvm14.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fbox-maybe-uninit-llvm14.rs?ref=336124797f5f2057d2226b7d3c354e46f284ac33", "patch": "@@ -2,7 +2,7 @@\n \n // Once we're done with llvm 14 and earlier, this test can be deleted.\n \n-#![crate_type=\"lib\"]\n+#![crate_type = \"lib\"]\n \n use std::mem::MaybeUninit;\n \n@@ -17,8 +17,16 @@ pub fn box_uninitialized() -> Box<MaybeUninit<usize>> {\n     Box::new(MaybeUninit::uninit())\n }\n \n-// FIXME: add a test for a bigger box. Currently broken, see\n-// https://github.com/rust-lang/rust/issues/58201.\n+// https://github.com/rust-lang/rust/issues/58201\n+#[no_mangle]\n+pub fn box_uninitialized2() -> Box<MaybeUninit<[usize; 1024 * 1024]>> {\n+    // CHECK-LABEL: @box_uninitialized2\n+    // CHECK-NOT: store\n+    // CHECK-NOT: alloca\n+    // CHECK-NOT: memcpy\n+    // CHECK-NOT: memset\n+    Box::new(MaybeUninit::uninit())\n+}\n \n // Hide the LLVM 15+ `allocalign` attribute in the declaration of __rust_alloc\n // from the CHECK-NOT above. We don't check the attributes here because we can't rely"}, {"sha": "c82b56a71f5cfde9d3c9a90f2143841536110119", "filename": "src/test/codegen/box-maybe-uninit.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/336124797f5f2057d2226b7d3c354e46f284ac33/src%2Ftest%2Fcodegen%2Fbox-maybe-uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/336124797f5f2057d2226b7d3c354e46f284ac33/src%2Ftest%2Fcodegen%2Fbox-maybe-uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fbox-maybe-uninit.rs?ref=336124797f5f2057d2226b7d3c354e46f284ac33", "patch": "@@ -1,6 +1,6 @@\n // compile-flags: -O\n // min-llvm-version: 15.0\n-#![crate_type=\"lib\"]\n+#![crate_type = \"lib\"]\n \n use std::mem::MaybeUninit;\n \n@@ -15,8 +15,16 @@ pub fn box_uninitialized() -> Box<MaybeUninit<usize>> {\n     Box::new(MaybeUninit::uninit())\n }\n \n-// FIXME: add a test for a bigger box. Currently broken, see\n-// https://github.com/rust-lang/rust/issues/58201.\n+// https://github.com/rust-lang/rust/issues/58201\n+#[no_mangle]\n+pub fn box_uninitialized2() -> Box<MaybeUninit<[usize; 1024 * 1024]>> {\n+    // CHECK-LABEL: @box_uninitialized2\n+    // CHECK-NOT: store\n+    // CHECK-NOT: alloca\n+    // CHECK-NOT: memcpy\n+    // CHECK-NOT: memset\n+    Box::new(MaybeUninit::uninit())\n+}\n \n // Hide the `allocalign` attribute in the declaration of __rust_alloc\n // from the CHECK-NOT above, and also verify the attributes got set reasonably."}]}