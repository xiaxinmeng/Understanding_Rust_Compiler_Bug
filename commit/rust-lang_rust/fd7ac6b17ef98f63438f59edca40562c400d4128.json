{"sha": "fd7ac6b17ef98f63438f59edca40562c400d4128", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkN2FjNmIxN2VmOThmNjM0MzhmNTllZGNhNDA1NjJjNDAwZDQxMjg=", "commit": {"author": {"name": "BO41", "email": "botbob@disroot.org", "date": "2019-06-23T12:19:46Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-09T02:29:44Z"}, "message": "Deprecate `try!` macro\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>\nCo-Authored-By: Oliver Middleton <olliemail27@gmail.com>", "tree": {"sha": "cff821a785fc23a0c8e29df08793eb2215dc9bbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cff821a785fc23a0c8e29df08793eb2215dc9bbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd7ac6b17ef98f63438f59edca40562c400d4128", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd7ac6b17ef98f63438f59edca40562c400d4128", "html_url": "https://github.com/rust-lang/rust/commit/fd7ac6b17ef98f63438f59edca40562c400d4128", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd7ac6b17ef98f63438f59edca40562c400d4128/comments", "author": null, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d1a551e144335e0d60a637d12f410cf65849876", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d1a551e144335e0d60a637d12f410cf65849876", "html_url": "https://github.com/rust-lang/rust/commit/2d1a551e144335e0d60a637d12f410cf65849876"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "ba641f7dc5c12d73edfa6e53069a0d09583f82e7", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=fd7ac6b17ef98f63438f59edca40562c400d4128", "patch": "@@ -300,6 +300,7 @@ macro_rules! debug_assert_ne {\n ///     Ok(())\n /// }\n /// ```\n+#[rustc_deprecated(since = \"1.38.0\", reason = \"use the `?` operator instead\")]\n #[macro_export]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[doc(alias = \"?\")]"}, {"sha": "34956fc839450428dde9f73e48af5c191fc02008", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=fd7ac6b17ef98f63438f59edca40562c400d4128", "patch": "@@ -330,7 +330,10 @@ use prelude::v1::*;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::{assert_eq, assert_ne, debug_assert, debug_assert_eq, debug_assert_ne};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use core::{unreachable, unimplemented, write, writeln, r#try, todo};\n+pub use core::{unreachable, unimplemented, write, writeln, todo};\n+#[allow(deprecated)]\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub use core::r#try;\n \n #[allow(unused_imports)] // macros from `alloc` are not used on all platforms\n #[macro_use]"}, {"sha": "5c05240552761c0d3484ae4296c2af62eae4f878", "filename": "src/test/ui/associated-types/cache/chrono-scan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fchrono-scan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fchrono-scan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fchrono-scan.rs?ref=fd7ac6b17ef98f63438f59edca40562c400d4128", "patch": "@@ -18,7 +18,7 @@ pub fn timezone_offset_zulu<F>(s: &str, colon: F) -> ParseResult<(&str, i32)>\n pub fn parse<'a, I>(mut s: &str, items: I) -> ParseResult<()>\n         where I: Iterator<Item=Item<'a>> {\n     macro_rules! try_consume {\n-        ($e:expr) => ({ let (s_, v) = try!($e); s = s_; v })\n+        ($e:expr) => ({ let (s_, v) = $e?; s = s_; v })\n     }\n     let offset = try_consume!(timezone_offset_zulu(s.trim_start(), colon_or_space));\n     let offset = try_consume!(timezone_offset_zulu(s.trim_start(), colon_or_space));"}, {"sha": "6d7d21e367322034daa545eaa7eb43379fb65dd0", "filename": "src/test/ui/derived-errors/issue-31997.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Fderived-errors%2Fissue-31997.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Fderived-errors%2Fissue-31997.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderived-errors%2Fissue-31997.rs?ref=fd7ac6b17ef98f63438f59edca40562c400d4128", "patch": "@@ -10,7 +10,7 @@ fn closure<F, T>(x: F) -> Result<T, ()>\n }\n \n fn foo() -> Result<(), ()> {\n-    try!(closure(|| bar(core::ptr::null_mut()))); //~ ERROR cannot find function `bar` in this scope\n+    closure(|| bar(core::ptr::null_mut()))?; //~ ERROR cannot find function `bar` in this scope\n     Ok(())\n }\n "}, {"sha": "d9260f79f27423500996e0d576221f7048b64af8", "filename": "src/test/ui/derived-errors/issue-31997.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Fderived-errors%2Fissue-31997.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Fderived-errors%2Fissue-31997.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderived-errors%2Fissue-31997.stderr?ref=fd7ac6b17ef98f63438f59edca40562c400d4128", "patch": "@@ -1,8 +1,8 @@\n error[E0425]: cannot find function `bar` in this scope\n-  --> $DIR/issue-31997.rs:13:21\n+  --> $DIR/issue-31997.rs:13:16\n    |\n-LL |     try!(closure(|| bar(core::ptr::null_mut())));\n-   |                     ^^^ not found in this scope\n+LL |     closure(|| bar(core::ptr::null_mut()))?;\n+   |                ^^^ not found in this scope\n \n error: aborting due to previous error\n "}, {"sha": "d458c31dc4926797cb969dd4182fb93a6389394c", "filename": "src/test/ui/lint/lint-qualification.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Flint%2Flint-qualification.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Flint%2Flint-qualification.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-qualification.rs?ref=fd7ac6b17ef98f63438f59edca40562c400d4128", "patch": "@@ -9,7 +9,7 @@ fn main() {\n     foo::bar(); //~ ERROR: unnecessary qualification\n     bar();\n \n-    let _ = || -> Result<(), ()> { try!(Ok(())); Ok(()) }; // issue #37345\n+    let _ = || -> Result<(), ()> { Ok(())?; Ok(()) }; // issue #37345\n \n     macro_rules! m { () => {\n         $crate::foo::bar(); // issue #37357"}, {"sha": "17c27b7cda473cdc1023ea6fd9f4f25a7350939b", "filename": "src/test/ui/macros/macro-comma-support-rpass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-support-rpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-support-rpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-support-rpass.rs?ref=fd7ac6b17ef98f63438f59edca40562c400d4128", "patch": "@@ -261,7 +261,9 @@ fn thread_local() {\n #[test]\n fn try() {\n     fn inner() -> Result<(), ()> {\n+        #[allow(deprecated)]\n         try!(Ok(()));\n+        #[allow(deprecated)]\n         try!(Ok(()),);\n         Ok(())\n     }"}, {"sha": "643312654493ae089d0d570eb4f469075551087d", "filename": "src/test/ui/macros/try-macro.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Fmacros%2Ftry-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Fmacros%2Ftry-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftry-macro.rs?ref=fd7ac6b17ef98f63438f59edca40562c400d4128", "patch": "@@ -1,4 +1,5 @@\n // run-pass\n+#[allow(deprecated)]\n use std::num::{ParseFloatError, ParseIntError};\n \n fn main() {"}, {"sha": "a7b7d3faf5ee93ae2c694decddca2d1eb79faca6", "filename": "src/test/ui/rust-2018/try-macro.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.fixed?ref=fd7ac6b17ef98f63438f59edca40562c400d4128", "patch": "@@ -6,6 +6,7 @@\n #![warn(rust_2018_compatibility)]\n #![allow(unused_variables)]\n #![allow(dead_code)]\n+#![allow(deprecated)]\n \n fn foo() -> Result<usize, ()> {\n     let x: Result<usize, ()> = Ok(22);"}, {"sha": "986e158eb644e6b839816f9d2acc04af449dc670", "filename": "src/test/ui/rust-2018/try-macro.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.rs?ref=fd7ac6b17ef98f63438f59edca40562c400d4128", "patch": "@@ -6,6 +6,7 @@\n #![warn(rust_2018_compatibility)]\n #![allow(unused_variables)]\n #![allow(dead_code)]\n+#![allow(deprecated)]\n \n fn foo() -> Result<usize, ()> {\n     let x: Result<usize, ()> = Ok(22);"}, {"sha": "fad1bb9f1b06829f5f23fd0c0ccfdb463614f921", "filename": "src/test/ui/rust-2018/try-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd7ac6b17ef98f63438f59edca40562c400d4128/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.stderr?ref=fd7ac6b17ef98f63438f59edca40562c400d4128", "patch": "@@ -1,5 +1,5 @@\n warning: `try` is a keyword in the 2018 edition\n-  --> $DIR/try-macro.rs:12:5\n+  --> $DIR/try-macro.rs:13:5\n    |\n LL |     try!(x);\n    |     ^^^ help: you can use a raw identifier to stay compatible: `r#try`"}]}