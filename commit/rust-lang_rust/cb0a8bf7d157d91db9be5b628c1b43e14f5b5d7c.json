{"sha": "cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMGE4YmY3ZDE1N2Q5MWRiOWJlNWI2MjhjMWI0M2UxNGY1YjVkN2M=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-23T09:03:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-23T09:03:40Z"}, "message": "Rollup merge of #47610 - cuviper:captured-dwarf, r=eddyb\n\nLLVM5: Update DW_OP_plus to DW_OP_plus_uconst\n\nLLVM <= 4.0 used a non-standard interpretation of `DW_OP_plus`.  In the\nDWARF standard, this adds two items on the expressions stack.  LLVM's\nbehavior was more like DWARF's `DW_OP_plus_uconst` -- adding a constant\nthat follows the op.  The patch series starting with [D33892] switched\nto the standard DWARF interpretation, so we need to follow.\n\n[D33892]: https://reviews.llvm.org/D33892\n\nFixes #47464\nr? @eddyb", "tree": {"sha": "34bedf71d375c8431dd8664f5ba58f06e4a1b6b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34bedf71d375c8431dd8664f5ba58f06e4a1b6b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c", "html_url": "https://github.com/rust-lang/rust/commit/cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52f8d2dc35eea1029954b455d8a463a96cbb2d1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/52f8d2dc35eea1029954b455d8a463a96cbb2d1c", "html_url": "https://github.com/rust-lang/rust/commit/52f8d2dc35eea1029954b455d8a463a96cbb2d1c"}, {"sha": "e2f6b280ea13e48bff86254549988e61eee37139", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2f6b280ea13e48bff86254549988e61eee37139", "html_url": "https://github.com/rust-lang/rust/commit/e2f6b280ea13e48bff86254549988e61eee37139"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "f51e51a88b10f39a3583f0bcc701d2a4c7575d22", "filename": "src/librustc_llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c/src%2Flibrustc_llvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c/src%2Flibrustc_llvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fffi.rs?ref=cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c", "patch": "@@ -1546,7 +1546,7 @@ extern \"C\" {\n                                                 InlinedAt: MetadataRef)\n                                                 -> ValueRef;\n     pub fn LLVMRustDIBuilderCreateOpDeref() -> i64;\n-    pub fn LLVMRustDIBuilderCreateOpPlus() -> i64;\n+    pub fn LLVMRustDIBuilderCreateOpPlusUconst() -> i64;\n \n     pub fn LLVMRustWriteTypeToString(Type: TypeRef, s: RustStringRef);\n     pub fn LLVMRustWriteValueToString(value_ref: ValueRef, s: RustStringRef);"}, {"sha": "b367eb6548d01f9d89a68bae3891992ef464cb63", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c", "patch": "@@ -547,7 +547,7 @@ fn arg_local_refs<'a, 'tcx>(bx: &Builder<'a, 'tcx>,\n \n                 let ops = unsafe {\n                     [llvm::LLVMRustDIBuilderCreateOpDeref(),\n-                     llvm::LLVMRustDIBuilderCreateOpPlus(),\n+                     llvm::LLVMRustDIBuilderCreateOpPlusUconst(),\n                      byte_offset_of_var_in_env as i64,\n                      llvm::LLVMRustDIBuilderCreateOpDeref()]\n                 };"}, {"sha": "0fe533d447bc3e9dd8f6518afd00711881c609ea", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=cb0a8bf7d157d91db9be5b628c1b43e14f5b5d7c", "patch": "@@ -866,7 +866,14 @@ extern \"C\" int64_t LLVMRustDIBuilderCreateOpDeref() {\n   return dwarf::DW_OP_deref;\n }\n \n-extern \"C\" int64_t LLVMRustDIBuilderCreateOpPlus() { return dwarf::DW_OP_plus; }\n+extern \"C\" int64_t LLVMRustDIBuilderCreateOpPlusUconst() {\n+#if LLVM_VERSION_GE(5, 0)\n+  return dwarf::DW_OP_plus_uconst;\n+#else\n+  // older LLVM used `plus` to behave like `plus_uconst`.\n+  return dwarf::DW_OP_plus;\n+#endif\n+}\n \n extern \"C\" void LLVMRustWriteTypeToString(LLVMTypeRef Ty, RustStringRef Str) {\n   RawRustStringOstream OS(Str);"}]}