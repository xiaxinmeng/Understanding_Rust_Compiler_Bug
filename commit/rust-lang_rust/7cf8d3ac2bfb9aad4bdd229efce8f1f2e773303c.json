{"sha": "7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZjhkM2FjMmJmYjlhYWQ0YmRkMjI5ZWZjZThmMWYyZTc3MzMwM2M=", "commit": {"author": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-10-05T08:50:51Z"}, "committer": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2021-03-16T10:20:26Z"}, "message": "feat: Update hashbrown to instantiate less llvm IR\n\nIncludes https://github.com/rust-lang/hashbrown/pull/204 and https://github.com/rust-lang/hashbrown/pull/205 (not yet merged) which both server to reduce the amount of IR generated for hashmaps.\n\nInspired by the llvm-lines data gathered in https://github.com/rust-lang/rust/pull/76680", "tree": {"sha": "4a4de701bf3b3ea6f1c0ea53568a3c6cc0af0134", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a4de701bf3b3ea6f1c0ea53568a3c6cc0af0134"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c", "html_url": "https://github.com/rust-lang/rust/commit/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c/comments", "author": null, "committer": null, "parents": [{"sha": "195ad4830e11a544391abe296b146450dea8411b", "url": "https://api.github.com/repos/rust-lang/rust/commits/195ad4830e11a544391abe296b146450dea8411b", "html_url": "https://github.com/rust-lang/rust/commit/195ad4830e11a544391abe296b146450dea8411b"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "fd6fffe980bc5ade22cd887921e1954b6f99cbec", "filename": "Cargo.lock", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c", "patch": "@@ -1507,9 +1507,15 @@ dependencies = [\n \n [[package]]\n name = \"hashbrown\"\n-version = \"0.9.0\"\n+version = \"0.9.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"d7afe4a420e3fe79967a00898cc1f4db7c8a49a9333a29f8a4bd76a253d5cd04\"\n+\n+[[package]]\n+name = \"hashbrown\"\n+version = \"0.11.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"00d63df3d41950fb462ed38308eea019113ad1508da725bbedcd0fa5a85ef5f7\"\n+checksum = \"362385356d610bd1e5a408ddf8d022041774b683f345a1d2cfcb4f60f8ae2db5\"\n dependencies = [\n  \"compiler_builtins\",\n  \"rustc-std-workspace-alloc\",\n@@ -1653,7 +1659,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"55e2e4c765aa53a0424761bf9f41aa7a6ac1efa87238f59560640e27fca028f2\"\n dependencies = [\n  \"autocfg\",\n- \"hashbrown\",\n+ \"hashbrown 0.9.1\",\n ]\n \n [[package]]\n@@ -2351,9 +2357,9 @@ dependencies = [\n \n [[package]]\n name = \"once_cell\"\n-version = \"1.4.1\"\n+version = \"1.7.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"260e51e7efe62b592207e9e13a68e43692a7a279171d6ba57abd208bf23645ad\"\n+checksum = \"af8b08b04175473088b46763e51ee54da5f9a164bc162f615b91bc179dbf15a3\"\n \n [[package]]\n name = \"opaque-debug\"\n@@ -4987,7 +4993,7 @@ dependencies = [\n  \"core\",\n  \"dlmalloc\",\n  \"fortanix-sgx-abi\",\n- \"hashbrown\",\n+ \"hashbrown 0.11.0\",\n  \"hermit-abi\",\n  \"libc\",\n  \"miniz_oxide\","}, {"sha": "22ca7ed09b42a92f852367a6855c66921d97d6f2", "filename": "library/std/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c/library%2Fstd%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c/library%2Fstd%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2FCargo.toml?ref=7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c", "patch": "@@ -20,7 +20,7 @@ libc = { version = \"0.2.88\", default-features = false, features = ['rustc-dep-of\n compiler_builtins = { version = \"0.1.39\" }\n profiler_builtins = { path = \"../profiler_builtins\", optional = true }\n unwind = { path = \"../unwind\" }\n-hashbrown = { version = \"0.9.0\", default-features = false, features = ['rustc-dep-of-std'] }\n+hashbrown = { version = \"0.11\", default-features = false, features = ['rustc-dep-of-std'] }\n \n # Dependencies of the `backtrace` crate\n addr2line = { version = \"0.14.0\", optional = true, default-features = false }"}, {"sha": "f0ce13b269c59ae2163971a523ae04ba9088b355", "filename": "src/etc/gdb_providers.py", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c/src%2Fetc%2Fgdb_providers.py", "raw_url": "https://github.com/rust-lang/rust/raw/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c/src%2Fetc%2Fgdb_providers.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_providers.py?ref=7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c", "patch": "@@ -349,17 +349,18 @@ def __init__(self, valobj, show_values=True):\n         self.show_values = show_values\n \n         table = self.table()\n-        capacity = int(table[\"bucket_mask\"]) + 1\n-        ctrl = table[\"ctrl\"][\"pointer\"]\n+        table_inner = table[\"table\"]\n+        capacity = int(table_inner[\"bucket_mask\"]) + 1\n+        ctrl = table_inner[\"ctrl\"][\"pointer\"]\n \n-        self.size = int(table[\"items\"])\n+        self.size = int(table_inner[\"items\"])\n         self.pair_type = table.type.template_argument(0).strip_typedefs()\n \n-        self.new_layout = not table.type.has_key(\"data\")\n+        self.new_layout = not table_inner.type.has_key(\"data\")\n         if self.new_layout:\n             self.data_ptr = ctrl.cast(self.pair_type.pointer())\n         else:\n-            self.data_ptr = table[\"data\"][\"pointer\"]\n+            self.data_ptr = table_inner[\"data\"][\"pointer\"]\n \n         self.valid_indices = []\n         for idx in range(capacity):"}, {"sha": "702f2e82e4e2c8a7be3248190043ca119fb4bef0", "filename": "src/etc/lldb_providers.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c/src%2Fetc%2Flldb_providers.py", "raw_url": "https://github.com/rust-lang/rust/raw/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c/src%2Fetc%2Flldb_providers.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_providers.py?ref=7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c", "patch": "@@ -563,7 +563,7 @@ def table(self):\n             # HashSet wraps either std HashMap or hashbrown::HashSet, which both\n             # wrap hashbrown::HashMap, so either way we \"unwrap\" twice.\n             hashbrown_hashmap = self.valobj.GetChildAtIndex(0).GetChildAtIndex(0)\n-        return hashbrown_hashmap.GetChildMemberWithName(\"table\")\n+        return hashbrown_hashmap.GetChildMemberWithName(\"table\").GetChildMemberWithName(\"table\")\n \n     def has_children(self):\n         # type: () -> bool"}, {"sha": "216935a0ba5610ab3a6bcc3d9dec436e1dc51d7a", "filename": "src/etc/natvis/libstd.natvis", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c/src%2Fetc%2Fnatvis%2Flibstd.natvis", "raw_url": "https://github.com/rust-lang/rust/raw/7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c/src%2Fetc%2Fnatvis%2Flibstd.natvis", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fnatvis%2Flibstd.natvis?ref=7cf8d3ac2bfb9aad4bdd229efce8f1f2e773303c", "patch": "@@ -26,22 +26,22 @@\n   -->\n \n   <Type Name=\"std::collections::hash::map::HashMap&lt;*,*,*&gt;\">\n-    <DisplayString>{{ len={base.table.items} }}</DisplayString>\n+    <DisplayString>{{ len={base.table.table.items} }}</DisplayString>\n     <Expand>\n-      <Item Name=\"[len]\">base.table.items</Item>\n-      <Item Name=\"[capacity]\">base.table.items + base.table.growth_left</Item>\n+      <Item Name=\"[len]\">base.table.table.items</Item>\n+      <Item Name=\"[capacity]\">base.table.table.items + base.table.table.growth_left</Item>\n       <Item Name=\"[state]\">base.hash_builder</Item>\n \n       <CustomListItems>\n         <Variable Name=\"i\" InitialValue=\"0\" />\n-        <Variable Name=\"n\" InitialValue=\"base.table.items\" />\n-        <Size>base.table.items</Size>\n+        <Variable Name=\"n\" InitialValue=\"base.table.table.items\" />\n+        <Size>base.table.table.items</Size>\n         <Loop>\n           <Break Condition=\"n == 0\" />\n-          <If Condition=\"(base.table.ctrl.pointer[i] &amp; 0x80) == 0\">\n+          <If Condition=\"(base.table.table.ctrl.pointer[i] &amp; 0x80) == 0\">\n             <!-- Bucket is populated -->\n             <Exec>n--</Exec>\n-            <Item Name=\"{((tuple&lt;$T1, $T2&gt;*)base.table.ctrl.pointer)[-(i + 1)].__0}\">((tuple&lt;$T1, $T2&gt;*)base.table.ctrl.pointer)[-(i + 1)].__1</Item>\n+            <Item Name=\"{((tuple&lt;$T1, $T2&gt;*)base.table.table.ctrl.pointer)[-(i + 1)].__0}\">((tuple&lt;$T1, $T2&gt;*)base.table.table.ctrl.pointer)[-(i + 1)].__1</Item>\n           </If>\n           <Exec>i++</Exec>\n         </Loop>"}]}