{"sha": "145d7fc5298cec0995bdc4e71d09d275fcbcdcdb", "node_id": "C_kwDOAAsO6NoAKDE0NWQ3ZmM1Mjk4Y2VjMDk5NWJkYzRlNzFkMDlkMjc1ZmNiY2RjZGI", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-01-17T19:39:45Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-01-28T21:45:41Z"}, "message": "Factor out get_qpath_generics", "tree": {"sha": "4241fc16418c071b63459cbf5dd8b7e47c276820", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4241fc16418c071b63459cbf5dd8b7e47c276820"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/145d7fc5298cec0995bdc4e71d09d275fcbcdcdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/145d7fc5298cec0995bdc4e71d09d275fcbcdcdb", "html_url": "https://github.com/rust-lang/rust/commit/145d7fc5298cec0995bdc4e71d09d275fcbcdcdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/145d7fc5298cec0995bdc4e71d09d275fcbcdcdb/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20781f195d205dcc3fa244a659dfc5b3547a87d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/20781f195d205dcc3fa244a659dfc5b3547a87d3", "html_url": "https://github.com/rust-lang/rust/commit/20781f195d205dcc3fa244a659dfc5b3547a87d3"}], "stats": {"total": 30, "additions": 10, "deletions": 20}, "files": [{"sha": "82d5023866684b796c9ebdb425c7df4aa266b3ee", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 10, "deletions": 20, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/145d7fc5298cec0995bdc4e71d09d275fcbcdcdb/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/145d7fc5298cec0995bdc4e71d09d275fcbcdcdb/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=145d7fc5298cec0995bdc4e71d09d275fcbcdcdb", "patch": "@@ -77,9 +77,9 @@ use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::LangItem::{OptionNone, ResultErr, ResultOk};\n use rustc_hir::{\n     def, lang_items, Arm, ArrayLen, BindingAnnotation, Block, BlockCheckMode, Body, Constness, Destination, Expr,\n-    ExprKind, FnDecl, ForeignItem, GenericArgs, HirId, Impl, ImplItem, ImplItemKind, IsAsync, Item, ItemKind, LangItem,\n-    Local, MatchSource, Mutability, Node, Param, Pat, PatKind, Path, PathSegment, PrimTy, QPath, Stmt, StmtKind,\n-    Target, TraitItem, TraitItemKind, TraitRef, TyKind, UnOp,\n+    ExprKind, FnDecl, ForeignItem, HirId, Impl, ImplItem, ImplItemKind, IsAsync, Item, ItemKind, LangItem, Local,\n+    MatchSource, Mutability, Node, Param, Pat, PatKind, Path, PathSegment, PrimTy, QPath, Stmt, StmtKind, Target,\n+    TraitItem, TraitItemKind, TraitRef, TyKind, UnOp,\n };\n use rustc_lint::{LateContext, Level, Lint, LintContext};\n use rustc_middle::hir::place::PlaceBase;\n@@ -360,24 +360,14 @@ pub fn last_path_segment<'tcx>(path: &QPath<'tcx>) -> &'tcx PathSegment<'tcx> {\n     }\n }\n \n-pub fn get_qpath_generics<'tcx>(path: &QPath<'tcx>) -> Option<&'tcx GenericArgs<'tcx>> {\n-    match path {\n-        QPath::Resolved(_, p) => p.segments.last().and_then(|s| s.args),\n-        QPath::TypeRelative(_, s) => s.args,\n-        QPath::LangItem(..) => None,\n-    }\n-}\n-\n-pub fn qpath_generic_tys<'tcx>(path: &QPath<'tcx>) -> impl Iterator<Item = &'tcx hir::Ty<'tcx>> {\n-    get_qpath_generics(path)\n-        .map_or([].as_ref(), |a| a.args)\n+pub fn qpath_generic_tys<'tcx>(qpath: &QPath<'tcx>) -> impl Iterator<Item = &'tcx hir::Ty<'tcx>> {\n+    last_path_segment(qpath)\n+        .args\n+        .map_or(&[][..], |a| a.args)\n         .iter()\n-        .filter_map(|a| {\n-            if let hir::GenericArg::Type(ty) = a {\n-                Some(ty)\n-            } else {\n-                None\n-            }\n+        .filter_map(|a| match a {\n+            hir::GenericArg::Type(ty) => Some(ty),\n+            _ => None,\n         })\n }\n "}]}