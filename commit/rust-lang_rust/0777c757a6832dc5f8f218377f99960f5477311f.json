{"sha": "0777c757a6832dc5f8f218377f99960f5477311f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NzdjNzU3YTY4MzJkYzVmOGYyMTgzNzdmOTk5NjBmNTQ3NzMxMWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-24T22:18:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-24T22:18:16Z"}, "message": "Auto merge of #40123 - TimNN:llvm40, r=alexcrichton\n\nLLVM 4.0 Upgrade\n\nSince nobody has done this yet, I decided to get things started:\n\n**Todo:**\n\n* [x] push the relevant commits to `rust-lang/llvm` and `rust-lang/compiler-rt`\n* [x] cleanup `.gitmodules`\n* [x] Verify if there are any other commits from `rust-lang/llvm` which need backporting\n* [x] Investigate / fix debuginfo (\"`<optimized out>`\") failures\n* [x] Use correct emscripten version in docker image\n\n---\n\nCloses #37609.\n\n---\n\n**Test results:**\n\nEverything is green \ud83c\udf89", "tree": {"sha": "454c553052f609acf8aeb867b5e5645d3422d178", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/454c553052f609acf8aeb867b5e5645d3422d178"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0777c757a6832dc5f8f218377f99960f5477311f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0777c757a6832dc5f8f218377f99960f5477311f", "html_url": "https://github.com/rust-lang/rust/commit/0777c757a6832dc5f8f218377f99960f5477311f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0777c757a6832dc5f8f218377f99960f5477311f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63c77214c1d38789652b465694b254205d1886e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/63c77214c1d38789652b465694b254205d1886e0", "html_url": "https://github.com/rust-lang/rust/commit/63c77214c1d38789652b465694b254205d1886e0"}, {"sha": "899427765760068163c811fbe9e02ff953638698", "url": "https://api.github.com/repos/rust-lang/rust/commits/899427765760068163c811fbe9e02ff953638698", "html_url": "https://github.com/rust-lang/rust/commit/899427765760068163c811fbe9e02ff953638698"}], "stats": {"total": 86, "additions": 57, "deletions": 29}, "files": [{"sha": "f0589b0e645616d688884310a98c66fd5908510a", "filename": "appveyor.yml", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/0777c757a6832dc5f8f218377f99960f5477311f/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/0777c757a6832dc5f8f218377f99960f5477311f/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=0777c757a6832dc5f8f218377f99960f5477311f", "patch": "@@ -20,39 +20,28 @@ environment:\n \n   # 32/64-bit MinGW builds.\n   #\n-  # The MinGW builds unfortunately have to both download a custom toolchain and\n-  # avoid the one installed by AppVeyor by default. Interestingly, though, for\n-  # different reasons!\n+  # We are using MinGW with posix threads since LLVM does not compile with\n+  # the win32 threads version due to missing support for C++'s std::thread.\n   #\n-  # For 32-bit the installed gcc toolchain on AppVeyor uses the pthread\n-  # threading model. This is unfortunately not what we want, and if we compile\n-  # with it then there's lots of link errors in the standard library (undefined\n-  # references to pthread symbols).\n-  #\n-  # For 64-bit the installed gcc toolchain is currently 5.3.0 which\n-  # unfortunately segfaults on Windows with --enable-llvm-assertions (segfaults\n-  # in LLVM). See rust-lang/rust#28445 for more information, but to work around\n-  # this we go back in time to 4.9.2 specifically.\n+  # Instead of relying on the MinGW version installed on appveryor we download\n+  # and install one ourselves so we won't be surprised by changes to appveyor's\n+  # build image.\n   #\n   # Finally, note that the downloads below are all in the `rust-lang-ci` S3\n   # bucket, but they cleraly didn't originate there! The downloads originally\n   # came from the mingw-w64 SourceForge download site. Unfortunately\n   # SourceForge is notoriously flaky, so we mirror it on our own infrastructure.\n-  #\n-  # And as a final point of note, the 32-bit MinGW build using the makefiles do\n-  # *not* use debug assertions and llvm assertions. This is because they take\n-  # too long on appveyor and this is tested by rustbuild below.\n   - MSYS_BITS: 32\n     RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-ninja\n     SCRIPT: python x.py test\n     MINGW_URL: https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror\n-    MINGW_ARCHIVE: i686-6.2.0-release-win32-dwarf-rt_v5-rev1.7z\n+    MINGW_ARCHIVE: i686-6.2.0-release-posix-dwarf-rt_v5-rev1.7z\n     MINGW_DIR: mingw32\n   - MSYS_BITS: 64\n     SCRIPT: python x.py test\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-ninja\n     MINGW_URL: https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror\n-    MINGW_ARCHIVE: x86_64-6.2.0-release-win32-seh-rt_v5-rev1.7z\n+    MINGW_ARCHIVE: x86_64-6.2.0-release-posix-seh-rt_v5-rev1.7z\n     MINGW_DIR: mingw64\n \n   # 32/64 bit MSVC and GNU deployment\n@@ -71,14 +60,14 @@ environment:\n     RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-extended --enable-ninja\n     SCRIPT: python x.py dist\n     MINGW_URL: https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror\n-    MINGW_ARCHIVE: i686-6.2.0-release-win32-dwarf-rt_v5-rev1.7z\n+    MINGW_ARCHIVE: i686-6.2.0-release-posix-dwarf-rt_v5-rev1.7z\n     MINGW_DIR: mingw32\n     DEPLOY: 1\n   - MSYS_BITS: 64\n     SCRIPT: python x.py dist\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-extended --enable-ninja\n     MINGW_URL: https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror\n-    MINGW_ARCHIVE: x86_64-6.2.0-release-win32-seh-rt_v5-rev1.7z\n+    MINGW_ARCHIVE: x86_64-6.2.0-release-posix-seh-rt_v5-rev1.7z\n     MINGW_DIR: mingw64\n     DEPLOY: 1\n "}, {"sha": "6be1b9f3d38ecb2497cf3560fd7a2c5225f3f58d", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0777c757a6832dc5f8f218377f99960f5477311f/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0777c757a6832dc5f8f218377f99960f5477311f/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=0777c757a6832dc5f8f218377f99960f5477311f", "patch": "@@ -882,6 +882,13 @@ impl Build {\n         if target.contains(\"apple-darwin\") {\n             base.push(\"-stdlib=libc++\".into());\n         }\n+\n+        // Work around an apparently bad MinGW / GCC optimization,\n+        // See: http://lists.llvm.org/pipermail/cfe-dev/2016-December/051980.html\n+        // See: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78936\n+        if target == \"i686-pc-windows-gnu\" {\n+            base.push(\"-fno-omit-frame-pointer\".into());\n+        }\n         return base\n     }\n "}, {"sha": "cbbca23f6e3dbd5561927cdc48f4c9cd234b6e61", "filename": "src/ci/docker/emscripten/Dockerfile", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0777c757a6832dc5f8f218377f99960f5477311f/src%2Fci%2Fdocker%2Femscripten%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/0777c757a6832dc5f8f218377f99960f5477311f/src%2Fci%2Fdocker%2Femscripten%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Femscripten%2FDockerfile?ref=0777c757a6832dc5f8f218377f99960f5477311f", "patch": "@@ -27,10 +27,10 @@ WORKDIR /tmp\n COPY build-emscripten.sh /tmp/\n RUN ./build-emscripten.sh\n ENV PATH=$PATH:/tmp/emsdk_portable\n-ENV PATH=$PATH:/tmp/emsdk_portable/clang/tag-e1.37.1/build_tag-e1.37.1_32/bin\n+ENV PATH=$PATH:/tmp/emsdk_portable/clang/tag-e1.37.10/build_tag-e1.37.10_32/bin\n ENV PATH=$PATH:/tmp/emsdk_portable/node/4.1.1_32bit/bin\n-ENV PATH=$PATH:/tmp/emsdk_portable/emscripten/tag-1.37.1\n-ENV EMSCRIPTEN=/tmp/emsdk_portable/emscripten/tag-1.37.1\n+ENV PATH=$PATH:/tmp/emsdk_portable/emscripten/tag-1.37.10\n+ENV EMSCRIPTEN=/tmp/emsdk_portable/emscripten/tag-1.37.10\n \n ENV RUST_CONFIGURE_ARGS --target=asmjs-unknown-emscripten\n "}, {"sha": "8d6a28f418bf955b8d75b049d33f49794630e538", "filename": "src/ci/docker/emscripten/build-emscripten.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0777c757a6832dc5f8f218377f99960f5477311f/src%2Fci%2Fdocker%2Femscripten%2Fbuild-emscripten.sh", "raw_url": "https://github.com/rust-lang/rust/raw/0777c757a6832dc5f8f218377f99960f5477311f/src%2Fci%2Fdocker%2Femscripten%2Fbuild-emscripten.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Femscripten%2Fbuild-emscripten.sh?ref=0777c757a6832dc5f8f218377f99960f5477311f", "patch": "@@ -49,5 +49,5 @@ chmod 755 emsdk_portable\n \n source emsdk_portable/emsdk_env.sh\n hide_output emsdk update\n-hide_output emsdk install --build=Release sdk-tag-1.37.1-32bit\n-hide_output emsdk activate --build=Release sdk-tag-1.37.1-32bit\n+hide_output emsdk install --build=Release sdk-tag-1.37.10-32bit\n+hide_output emsdk activate --build=Release sdk-tag-1.37.10-32bit"}, {"sha": "c8a8767c56ad3d3f4eb45c87b95026936fb9aa35", "filename": "src/compiler-rt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiler-rt?ref=0777c757a6832dc5f8f218377f99960f5477311f", "patch": "@@ -1 +1 @@\n-Subproject commit d30da544a8afc5d78391dee270bdf40e74a215d3\n+Subproject commit c8a8767c56ad3d3f4eb45c87b95026936fb9aa35"}, {"sha": "8fe79057bd81738bdca8054bcdf6331fc78f052a", "filename": "src/libcompiler_builtins/build.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0777c757a6832dc5f8f218377f99960f5477311f/src%2Flibcompiler_builtins%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0777c757a6832dc5f8f218377f99960f5477311f/src%2Flibcompiler_builtins%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcompiler_builtins%2Fbuild.rs?ref=0777c757a6832dc5f8f218377f99960f5477311f", "patch": "@@ -293,6 +293,12 @@ fn main() {\n     }\n \n     if target.contains(\"arm\") && !target.contains(\"ios\") {\n+        // (At least) udivsi3.S is broken for Thumb 1 which our gcc uses by\n+        // default, we don't want Thumb 2 since it isn't supported on some\n+        // devices, so disable thumb entirely.\n+        // Upstream bug: https://bugs.llvm.org/show_bug.cgi?id=32492\n+        cfg.define(\"__ARM_ARCH_ISA_THUMB\", Some(\"0\"));\n+\n         sources.extend(&[\"arm/aeabi_cdcmp.S\",\n                          \"arm/aeabi_cdcmpeq_check_nan.c\",\n                          \"arm/aeabi_cfcmp.S\","}, {"sha": "4871f60466dfd1b8062c534254da2aeea1b637e0", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0777c757a6832dc5f8f218377f99960f5477311f/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0777c757a6832dc5f8f218377f99960f5477311f/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=0777c757a6832dc5f8f218377f99960f5477311f", "patch": "@@ -268,4 +268,8 @@ fn main() {\n     if target.contains(\"windows\") {\n         println!(\"cargo:rustc-link-lib=ole32\");\n     }\n+    if target.contains(\"windows-gnu\") {\n+        println!(\"cargo:rustc-link-lib=static-nobundle=gcc_s\");\n+        println!(\"cargo:rustc-link-lib=static-nobundle=pthread\");\n+    }\n }"}, {"sha": "7c52ceae459cdbef0fbb55f7a759c849fb85ef22", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0777c757a6832dc5f8f218377f99960f5477311f/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0777c757a6832dc5f8f218377f99960f5477311f/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=0777c757a6832dc5f8f218377f99960f5477311f", "patch": "@@ -29,6 +29,7 @@\n #![feature(link_args)]\n #![feature(staged_api)]\n #![feature(rustc_private)]\n+#![feature(static_nobundle)]\n \n extern crate libc;\n #[macro_use]"}, {"sha": "a884d21cc5f0b23a1693d1e872fd8998a4fdd17f", "filename": "src/llvm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm?ref=0777c757a6832dc5f8f218377f99960f5477311f", "patch": "@@ -1 +1 @@\n-Subproject commit 2e951c3ae354bcbd2e50b30798e232949a926b75\n+Subproject commit a884d21cc5f0b23a1693d1e872fd8998a4fdd17f"}, {"sha": "cf925662fc3f3ff0b9e94b73f57c40d9bba17b65", "filename": "src/test/run-pass/issue-29663.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0777c757a6832dc5f8f218377f99960f5477311f/src%2Ftest%2Frun-pass%2Fissue-29663.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0777c757a6832dc5f8f218377f99960f5477311f/src%2Ftest%2Frun-pass%2Fissue-29663.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-29663.rs?ref=0777c757a6832dc5f8f218377f99960f5477311f", "patch": "@@ -10,6 +10,8 @@\n \n // write_volatile causes an LLVM assert with composite types\n \n+// ignore-emscripten See #41299: probably a bad optimization\n+\n #![feature(volatile)]\n use std::ptr::{read_volatile, write_volatile};\n "}, {"sha": "ebbb00a4a9f2322f6c0664f73eeb26d9708bf0db", "filename": "src/test/run-pass/panic-runtime/abort-link-to-unwinding-crates.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0777c757a6832dc5f8f218377f99960f5477311f/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort-link-to-unwinding-crates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0777c757a6832dc5f8f218377f99960f5477311f/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort-link-to-unwinding-crates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort-link-to-unwinding-crates.rs?ref=0777c757a6832dc5f8f218377f99960f5477311f", "patch": "@@ -27,7 +27,17 @@ fn main() {\n             exit_success_if_unwind::bar(do_panic);\n         }\n     }\n-    let s = Command::new(env::args_os().next().unwrap()).arg(\"foo\").status();\n+\n+    let mut cmd = Command::new(env::args_os().next().unwrap());\n+    cmd.arg(\"foo\");\n+\n+\n+    // ARMv6 hanges while printing the backtrace, see #41004\n+    if cfg!(target_arch = \"arm\") && cfg!(target_env = \"gnu\") {\n+        cmd.env(\"RUST_BACKTRACE\", \"0\");\n+    }\n+\n+    let s = cmd.status();\n     assert!(s.unwrap().code() != Some(0));\n }\n "}, {"sha": "3ba3bd61c2e874db646cd8094e0a5e2fa254c3f2", "filename": "src/test/run-pass/panic-runtime/abort.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0777c757a6832dc5f8f218377f99960f5477311f/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0777c757a6832dc5f8f218377f99960f5477311f/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort.rs?ref=0777c757a6832dc5f8f218377f99960f5477311f", "patch": "@@ -35,6 +35,15 @@ fn main() {\n             panic!(\"try to catch me\");\n         }\n     }\n-    let s = Command::new(env::args_os().next().unwrap()).arg(\"foo\").status();\n+\n+    let mut cmd = Command::new(env::args_os().next().unwrap());\n+    cmd.arg(\"foo\");\n+\n+    // ARMv6 hanges while printing the backtrace, see #41004\n+    if cfg!(target_arch = \"arm\") && cfg!(target_env = \"gnu\") {\n+        cmd.env(\"RUST_BACKTRACE\", \"0\");\n+    }\n+\n+    let s = cmd.status();\n     assert!(s.unwrap().code() != Some(0));\n }"}]}