{"sha": "d5e9e94741fd16320f5491397645fb137195eb06", "node_id": "C_kwDOAAsO6NoAKGQ1ZTllOTQ3NDFmZDE2MzIwZjU0OTEzOTc2NDVmYjEzNzE5NWViMDY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-05T20:39:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-05T21:59:35Z"}, "message": "add method to get the mutability of an AllocId", "tree": {"sha": "66be391ec1bf891e65aa486bed1e8bdbf7383430", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66be391ec1bf891e65aa486bed1e8bdbf7383430"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5e9e94741fd16320f5491397645fb137195eb06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5e9e94741fd16320f5491397645fb137195eb06", "html_url": "https://github.com/rust-lang/rust/commit/d5e9e94741fd16320f5491397645fb137195eb06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5e9e94741fd16320f5491397645fb137195eb06/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "affe0d3a00e92fa7885e3f5d2c5073fde432d154", "url": "https://api.github.com/repos/rust-lang/rust/commits/affe0d3a00e92fa7885e3f5d2c5073fde432d154", "html_url": "https://github.com/rust-lang/rust/commit/affe0d3a00e92fa7885e3f5d2c5073fde432d154"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "75528d6140ce5da524076c5de688394326687cde", "filename": "compiler/rustc_const_eval/src/interpret/memory.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d5e9e94741fd16320f5491397645fb137195eb06/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5e9e94741fd16320f5491397645fb137195eb06/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmemory.rs?ref=d5e9e94741fd16320f5491397645fb137195eb06", "patch": "@@ -520,6 +520,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n     /// Gives raw access to the `Allocation`, without bounds or alignment checks.\n     /// The caller is responsible for calling the access hooks!\n+    ///\n+    /// You almost certainly want to use `get_ptr_alloc`/`get_ptr_alloc_mut` instead.\n     fn get_alloc_raw(\n         &self,\n         id: AllocId,\n@@ -589,6 +591,11 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         Ok(&self.get_alloc_raw(id)?.extra)\n     }\n \n+    /// Return the `mutability` field of the given allocation.\n+    pub fn get_alloc_mutability<'a>(&'a self, id: AllocId) -> InterpResult<'tcx, Mutability> {\n+        Ok(self.get_alloc_raw(id)?.mutability)\n+    }\n+\n     /// Gives raw mutable access to the `Allocation`, without bounds or alignment checks.\n     /// The caller is responsible for calling the access hooks!\n     ///"}]}