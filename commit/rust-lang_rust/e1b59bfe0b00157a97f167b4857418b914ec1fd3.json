{"sha": "e1b59bfe0b00157a97f167b4857418b914ec1fd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYjU5YmZlMGIwMDE1N2E5N2YxNjdiNDg1NzQxOGI5MTRlYzFmZDM=", "commit": {"author": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-03-02T19:57:40Z"}, "committer": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-03-04T13:27:08Z"}, "message": "Add NavigationTarget::from_impl_item", "tree": {"sha": "47a39f4b42cf9ba2ad5f290ee90189fc4b3da52d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47a39f4b42cf9ba2ad5f290ee90189fc4b3da52d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1b59bfe0b00157a97f167b4857418b914ec1fd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b59bfe0b00157a97f167b4857418b914ec1fd3", "html_url": "https://github.com/rust-lang/rust/commit/e1b59bfe0b00157a97f167b4857418b914ec1fd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1b59bfe0b00157a97f167b4857418b914ec1fd3/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad2da5b1dac87896772b4ae4087b4f9c83dc8ac9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad2da5b1dac87896772b4ae4087b4f9c83dc8ac9", "html_url": "https://github.com/rust-lang/rust/commit/ad2da5b1dac87896772b4ae4087b4f9c83dc8ac9"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "f16c3bda4bb016bd8681df3e9188d7a162a5330b", "filename": "crates/ra_ide_api/src/goto_definition.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e1b59bfe0b00157a97f167b4857418b914ec1fd3/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b59bfe0b00157a97f167b4857418b914ec1fd3/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs?ref=e1b59bfe0b00157a97f167b4857418b914ec1fd3", "patch": "@@ -5,7 +5,7 @@ use ra_syntax::{\n     SyntaxNode,\n };\n use test_utils::tested_by;\n-use hir::{ImplItem, Resolution};\n+use hir::Resolution;\n \n use crate::{FilePosition, NavigationTarget, db::RootDatabase, RangeInfo};\n \n@@ -138,18 +138,7 @@ pub(crate) fn reference_definition(\n                             .node_expr(expr)\n                             .and_then(|it| infer_result.assoc_resolutions(it.into()))\n                         {\n-                            match res {\n-                                ImplItem::Method(f) => {\n-                                    return Exact(NavigationTarget::from_function(db, f));\n-                                }\n-                                ImplItem::Const(c) => {\n-                                    let (file, node) = c.source(db);\n-                                    let file = file.original_file(db);\n-                                    let node = &*node;\n-                                    return Exact(NavigationTarget::from_named(file, node));\n-                                }\n-                                _ => {}\n-                            }\n+                            return Exact(NavigationTarget::from_impl_item(db, res));\n                         }\n                     }\n                 }"}, {"sha": "ff8d2f15bae63cea23d4fa3d4261e3a598cafb37", "filename": "crates/ra_ide_api/src/navigation_target.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e1b59bfe0b00157a97f167b4857418b914ec1fd3/crates%2Fra_ide_api%2Fsrc%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b59bfe0b00157a97f167b4857418b914ec1fd3/crates%2Fra_ide_api%2Fsrc%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fnavigation_target.rs?ref=e1b59bfe0b00157a97f167b4857418b914ec1fd3", "patch": "@@ -3,7 +3,7 @@ use ra_syntax::{\n     SyntaxNode, SyntaxNodePtr, AstNode, SmolStr, TextRange, ast,\n     SyntaxKind::{self, NAME},\n };\n-use hir::{ModuleSource, FieldSource, Name};\n+use hir::{ModuleSource, FieldSource, Name, ImplItem};\n \n use crate::{FileSymbol, db::RootDatabase};\n \n@@ -174,6 +174,25 @@ impl NavigationTarget {\n         )\n     }\n \n+    pub(crate) fn from_impl_item(\n+        db: &RootDatabase,\n+        impl_item: hir::ImplItem,\n+    ) -> NavigationTarget {\n+        match impl_item {\n+            ImplItem::Method(f) => {\n+                NavigationTarget::from_function(db, f)\n+            }\n+            ImplItem::Const(c) => {\n+                let (file_id, node) = c.source(db);\n+                NavigationTarget::from_named(file_id.original_file(db), &*node)\n+            }\n+            ImplItem::TypeAlias(a) => {\n+                let (file_id, node) = a.source(db);\n+                NavigationTarget::from_named(file_id.original_file(db), &*node)\n+            }\n+        }\n+    }\n+\n     #[cfg(test)]\n     pub(crate) fn assert_match(&self, expected: &str) {\n         let actual = self.debug_render();"}]}