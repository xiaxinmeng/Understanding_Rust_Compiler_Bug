{"sha": "2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023", "node_id": "C_kwDOAAsO6NoAKDJiYmNkYzczMzM5YzJiN2MzZTU3YzJmYzBkM2JjNTc0OTQ1YzAwMjM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-24T18:57:41Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-24T18:57:41Z"}, "message": "Handle additional lifetime bounds on GATs like on methods", "tree": {"sha": "5b89bcc0cf20fc69d97b5ec95c1e5507e265b62a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b89bcc0cf20fc69d97b5ec95c1e5507e265b62a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023", "html_url": "https://github.com/rust-lang/rust/commit/2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bb7581a5926365ec65d64d15386c3723beff330", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bb7581a5926365ec65d64d15386c3723beff330", "html_url": "https://github.com/rust-lang/rust/commit/6bb7581a5926365ec65d64d15386c3723beff330"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "a990c359e0a300fe14e1c587ae33f4eaf14d91e5", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023", "patch": "@@ -2351,18 +2351,24 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             GenericKind::Projection(ref p) => format!(\"the associated type `{}`\", p),\n         };\n \n-        if let Some(SubregionOrigin::CompareImplMethodObligation {\n-            span,\n-            impl_item_def_id,\n-            trait_item_def_id,\n-        }) = origin\n-        {\n-            return self.report_extra_impl_obligation(\n+        match origin {\n+            Some(SubregionOrigin::CompareImplMethodObligation {\n                 span,\n                 impl_item_def_id,\n                 trait_item_def_id,\n-                &format!(\"`{}: {}`\", bound_kind, sub),\n-            );\n+            } | SubregionOrigin::CompareImplTypeObligation {\n+                span,\n+                impl_item_def_id,\n+                trait_item_def_id,\n+            }) => {\n+                return self.report_extra_impl_obligation(\n+                    span,\n+                    impl_item_def_id,\n+                    trait_item_def_id,\n+                    &format!(\"`{}: {}`\", bound_kind, sub),\n+                );\n+            }\n+            _ => {}\n         }\n \n         fn binding_suggestion<'tcx, S: fmt::Display>("}, {"sha": "ec1d171c044701f7c9f30e025bbfc81a87e540e9", "filename": "src/test/ui/generic-associated-types/impl_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.rs?ref=2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023", "patch": "@@ -13,7 +13,7 @@ struct Fooy<T>(T);\n \n impl<T> Foo for Fooy<T> {\n     type A<'a> = (&'a ()) where Self: 'static;\n-    //~^ ERROR the parameter type `T` may not live long enoug\n+    //~^ ERROR impl has stricter requirements than trait\n     type B<'a, 'b> = (&'a(), &'b ()) where 'b: 'a;\n     //~^ ERROR impl has stricter requirements than trait\n     //~| ERROR lifetime bound not satisfied"}, {"sha": "c3311e21959fc45a8c14e301d08db5fc779e23f4", "filename": "src/test/ui/generic-associated-types/impl_bounds.stderr", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr?ref=2bbcdc73339c2b7c3e57c2fc0d3bc574945c0023", "patch": "@@ -1,13 +1,11 @@\n-error[E0310]: the parameter type `T` may not live long enough\n+error[E0276]: impl has stricter requirements than trait\n   --> $DIR/impl_bounds.rs:15:39\n    |\n+LL |     type A<'a> where Self: 'a;\n+   |     ---------- definition of `A` from trait\n+...\n LL |     type A<'a> = (&'a ()) where Self: 'static;\n-   |                                       ^^^^^^^ ...so that the definition in impl matches the definition from the trait\n-   |\n-help: consider adding an explicit lifetime bound...\n-   |\n-LL | impl<T: 'static> Foo for Fooy<T> {\n-   |       +++++++++\n+   |                                       ^^^^^^^ impl has extra requirement `T: 'static`\n \n error[E0276]: impl has stricter requirements than trait\n   --> $DIR/impl_bounds.rs:17:48\n@@ -90,5 +88,5 @@ LL | impl<T: std::marker::Copy> Foo for Fooy<T> {\n \n error: aborting due to 5 previous errors\n \n-Some errors have detailed explanations: E0276, E0277, E0310, E0478.\n+Some errors have detailed explanations: E0276, E0277, E0478.\n For more information about an error, try `rustc --explain E0276`."}]}