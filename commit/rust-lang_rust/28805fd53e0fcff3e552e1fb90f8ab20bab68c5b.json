{"sha": "28805fd53e0fcff3e552e1fb90f8ab20bab68c5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4ODA1ZmQ1M2UwZmNmZjNlNTUyZTFmYjkwZjhhYjIwYmFiNjhjNWI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-01-09T05:20:52Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-01-22T09:54:31Z"}, "message": "Better error message", "tree": {"sha": "532389dedb1bd1fa3ccabaea6ce111916cec590b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/532389dedb1bd1fa3ccabaea6ce111916cec590b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28805fd53e0fcff3e552e1fb90f8ab20bab68c5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28805fd53e0fcff3e552e1fb90f8ab20bab68c5b", "html_url": "https://github.com/rust-lang/rust/commit/28805fd53e0fcff3e552e1fb90f8ab20bab68c5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28805fd53e0fcff3e552e1fb90f8ab20bab68c5b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afe3e27085752efd1d9affe1f9c95e67de4dcf5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/afe3e27085752efd1d9affe1f9c95e67de4dcf5d", "html_url": "https://github.com/rust-lang/rust/commit/afe3e27085752efd1d9affe1f9c95e67de4dcf5d"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "4bc7b81b3f6eae05a925d99d25740815f3fb453b", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/28805fd53e0fcff3e552e1fb90f8ab20bab68c5b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28805fd53e0fcff3e552e1fb90f8ab20bab68c5b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=28805fd53e0fcff3e552e1fb90f8ab20bab68c5b", "patch": "@@ -926,12 +926,19 @@ impl Clean<Attributes> for [ast::Attribute] {\n                             // for structs, etc, and the link won't work.\n                             if let Ok(path) = resolve(false) {\n                                 path.def\n-                            } else if let Ok(_path) = resolve(true) {\n+                            } else if let Ok(path) = resolve(true) {\n+                                let kind = match path.def {\n+                                    Def::Variant(..) | Def::VariantCtor(..) => (\"variant\", format!(\"{}()\", path_str)),\n+                                    Def::Fn(..) => (\"function\", format!(\"{}()\", path_str)),\n+                                    Def::Method(..) => (\"method\", format!(\"{}()\", path_str)),\n+                                    Def::Const(..) => (\"const\", format!(\"const@{}\", path_str)),\n+                                    Def::Static(..) => (\"static\", format!(\"static@{}\", path_str)),\n+                                    _ => (\"value\", format!(\"static@{}\", path_str)),\n+                                };\n                                 let sp = attrs.doc_strings.first().map_or(DUMMY_SP, |a| a.span());\n-                                cx.sess().struct_span_err(sp, &format!(\"could not resolve `{}`\",\n-                                                                       path_str))\n-                                         .help(&format!(\"try `{0}()`, `static@{0}`, or `const@{0}`\",\n-                                                        path_str))\n+                                cx.sess().struct_span_err(sp, &format!(\"could not resolve `{}` as a type, it is a {}\",\n+                                                                       path_str, kind.0))\n+                                         .help(&format!(\"try `{}`\", kind.1))\n                                          .emit();\n                                 continue;\n                             } else {"}]}