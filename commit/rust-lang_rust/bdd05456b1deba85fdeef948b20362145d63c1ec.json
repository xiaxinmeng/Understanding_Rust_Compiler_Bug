{"sha": "bdd05456b1deba85fdeef948b20362145d63c1ec", "node_id": "C_kwDOAAsO6NoAKGJkZDA1NDU2YjFkZWJhODVmZGVlZjk0OGIyMDM2MjE0NWQ2M2MxZWM", "commit": {"author": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-04-23T10:05:52Z"}, "committer": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-04-23T10:09:36Z"}, "message": "Ignore `impl Trait`(s)", "tree": {"sha": "ff1b8db7c9ac0b696496046894387baf2b66a621", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff1b8db7c9ac0b696496046894387baf2b66a621"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdd05456b1deba85fdeef948b20362145d63c1ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEM3aofraJSaf7CtgpTTgXC1ovwzQFAmRFA+AACgkQTTgXC1ov\nwzTHNxAAqpAizWqbKf6RPGeUJmADGBQTkhSspiBE6phBf97CnyN/mtaF9TCsQyD8\nB6oVfDf0vY9xBDZFCPOeA7WuxG2QNgsMYPQw+02GozD7Fhc6xcZBe5hSbYCHPQEm\nHziqly7fRdY73kCWY/VuYKFIfgCGtm4WK9aXwErJtNgxGwiY6kiigP2ZwKtd2JZC\ng8WwOvCRhYgzOoDS1hNSQQmmn2GVCt0luQ/4LV55Gf3f0hmlOl4Xqkl6kP/kFo+Q\nKLl1bT48TPuL2Ziak/G2oQ3z4Xd+4PEvZn8aQYPOi+q5udYgL9843LiJVjpxotik\nlF3NuTwb9mVRVcekRenl37Ph1NyKRIFtlLsCEElmVGLN38Lf4CQew0MhlMxn8nED\nrMqEJsBObLAfuyXGozFn/5Ls9NN3okM/D1JN7kvhR76Zr6Z5eLs2hj34WXSmSYzO\nLuqArj2e22g36oxBrqF6l+f6K0FDeR4fFANHvBBWw7fRPwQEarN9T/p9ZSTYMWEu\nFijz/raMLYdiXGUQwiLBNxgdqyLAtyrfPzjF4dkK98kTOmYNYP+jIjGR5aSGvtYW\nYeIRlndG6DLjxdFACnLvj/GOPmm1nplao8lzPncmjLcAsruVwqmhgKm1sCc3bcXU\n+ZkrZtq5fC+MNkHo8iAbPw7a/a1AE3+r/iue0/n+8qpXObTsnNE=\n=JN91\n-----END PGP SIGNATURE-----", "payload": "tree ff1b8db7c9ac0b696496046894387baf2b66a621\nparent 928349795f9f28f54e69bd0f0ffeed33de5e272a\nauthor blyxyas <blyxyas@gmail.com> 1682244352 +0200\ncommitter blyxyas <blyxyas@gmail.com> 1682244576 +0200\n\nIgnore `impl Trait`(s)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdd05456b1deba85fdeef948b20362145d63c1ec", "html_url": "https://github.com/rust-lang/rust/commit/bdd05456b1deba85fdeef948b20362145d63c1ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdd05456b1deba85fdeef948b20362145d63c1ec/comments", "author": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "928349795f9f28f54e69bd0f0ffeed33de5e272a", "url": "https://api.github.com/repos/rust-lang/rust/commits/928349795f9f28f54e69bd0f0ffeed33de5e272a", "html_url": "https://github.com/rust-lang/rust/commit/928349795f9f28f54e69bd0f0ffeed33de5e272a"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "637b7de920e7902678c51556b170990caa34c4dd", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bdd05456b1deba85fdeef948b20362145d63c1ec/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd05456b1deba85fdeef948b20362145d63c1ec/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=bdd05456b1deba85fdeef948b20362145d63c1ec", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::ty::{implements_trait, is_must_use_ty, match_type};\n use clippy_utils::{is_must_use_func_call, paths};\n-use rustc_hir::{Local, PatKind};\n+use rustc_hir::{ExprKind, Local, PatKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::subst::GenericArgKind;\n@@ -189,7 +189,18 @@ impl<'tcx> LateLintPass<'tcx> for LetUnderscore {\n \n             if local.pat.default_binding_modes && local.ty.is_none() {\n                 // When `default_binding_modes` is true, the `let` keyword is present.\n-                span_lint_and_help(\n+\n+\t\t\t\t// Ignore function calls that return impl traits...\n+\t\t\t\tif let Some(init) = local.init &&\n+\t\t\t\tmatches!(init.kind, ExprKind::Call(_, _) | ExprKind::MethodCall(_, _, _, _)) {\n+\t\t\t\t\tlet expr_ty = cx.typeck_results().expr_ty(init);\n+\t\t\t\t\tif expr_ty.is_impl_trait() {\n+\t\t\t\t\t\treturn;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\n+\t\t\t\tspan_lint_and_help(\n                     cx,\n                     LET_UNDERSCORE_UNTYPED,\n                     local.span,"}, {"sha": "8486137d3a662f4b4e65d7230d187df3d1f8fa0d", "filename": "tests/ui/let_underscore_untyped.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bdd05456b1deba85fdeef948b20362145d63c1ec/tests%2Fui%2Flet_underscore_untyped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd05456b1deba85fdeef948b20362145d63c1ec/tests%2Fui%2Flet_underscore_untyped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_untyped.rs?ref=bdd05456b1deba85fdeef948b20362145d63c1ec", "patch": "@@ -28,13 +28,18 @@ fn f() -> Box<dyn Display> {\n     Box::new(1)\n }\n \n+fn g() -> impl Fn() {\n+    || {}\n+}\n+\n fn main() {\n     let _ = a();\n     let _ = b(1);\n     let _ = c();\n     let _ = d(&1);\n     let _ = e();\n     let _ = f();\n+    let _ = g();\n \n     _ = a();\n     _ = b(1);"}, {"sha": "47e76ea1d04e95d32f76d451ce40308647298332", "filename": "tests/ui/let_underscore_untyped.stderr", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bdd05456b1deba85fdeef948b20362145d63c1ec/tests%2Fui%2Flet_underscore_untyped.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdd05456b1deba85fdeef948b20362145d63c1ec/tests%2Fui%2Flet_underscore_untyped.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_untyped.stderr?ref=bdd05456b1deba85fdeef948b20362145d63c1ec", "patch": "@@ -1,5 +1,5 @@\n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:32:5\n+  --> $DIR/let_underscore_untyped.rs:36:5\n    |\n LL |     let _ = a();\n    |     ^^^^^^^^^^^^\n@@ -8,44 +8,36 @@ LL |     let _ = a();\n    = note: `-D clippy::let-underscore-untyped` implied by `-D warnings`\n \n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:33:5\n+  --> $DIR/let_underscore_untyped.rs:37:5\n    |\n LL |     let _ = b(1);\n    |     ^^^^^^^^^^^^^\n    |\n    = help: consider adding a type annotation or removing the `let` keyword\n \n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:34:5\n-   |\n-LL |     let _ = c();\n-   |     ^^^^^^^^^^^^\n-   |\n-   = help: consider adding a type annotation or removing the `let` keyword\n-\n-error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:35:5\n+  --> $DIR/let_underscore_untyped.rs:39:5\n    |\n LL |     let _ = d(&1);\n    |     ^^^^^^^^^^^^^^\n    |\n    = help: consider adding a type annotation or removing the `let` keyword\n \n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:36:5\n+  --> $DIR/let_underscore_untyped.rs:40:5\n    |\n LL |     let _ = e();\n    |     ^^^^^^^^^^^^\n    |\n    = help: consider adding a type annotation or removing the `let` keyword\n \n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:37:5\n+  --> $DIR/let_underscore_untyped.rs:41:5\n    |\n LL |     let _ = f();\n    |     ^^^^^^^^^^^^\n    |\n    = help: consider adding a type annotation or removing the `let` keyword\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 5 previous errors\n "}]}