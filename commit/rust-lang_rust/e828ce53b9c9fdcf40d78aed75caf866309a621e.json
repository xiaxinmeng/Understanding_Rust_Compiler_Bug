{"sha": "e828ce53b9c9fdcf40d78aed75caf866309a621e", "node_id": "C_kwDOAAsO6NoAKGU4MjhjZTUzYjljOWZkY2Y0MGQ3OGFlZDc1Y2FmODY2MzA5YTYyMWU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-10-09T16:15:16Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-10-09T16:18:16Z"}, "message": "Skip chained OpaqueCast when building captures.", "tree": {"sha": "c805b467b2e73950cf23e2ada98bca498a0a48c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c805b467b2e73950cf23e2ada98bca498a0a48c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e828ce53b9c9fdcf40d78aed75caf866309a621e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e828ce53b9c9fdcf40d78aed75caf866309a621e", "html_url": "https://github.com/rust-lang/rust/commit/e828ce53b9c9fdcf40d78aed75caf866309a621e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e828ce53b9c9fdcf40d78aed75caf866309a621e/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8796e7a9cfd4c5c4f1de15ec1c53994ddf288665", "url": "https://api.github.com/repos/rust-lang/rust/commits/8796e7a9cfd4c5c4f1de15ec1c53994ddf288665", "html_url": "https://github.com/rust-lang/rust/commit/8796e7a9cfd4c5c4f1de15ec1c53994ddf288665"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "396782d45d2891277e0d233afc149db6a693d35f", "filename": "compiler/rustc_mir_build/src/build/expr/as_place.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e828ce53b9c9fdcf40d78aed75caf866309a621e/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e828ce53b9c9fdcf40d78aed75caf866309a621e/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_place.rs?ref=e828ce53b9c9fdcf40d78aed75caf866309a621e", "patch": "@@ -17,6 +17,7 @@ use rustc_target::abi::VariantIdx;\n \n use rustc_index::vec::Idx;\n \n+use std::assert_matches::assert_matches;\n use std::iter;\n \n /// The \"outermost\" place that holds this value.\n@@ -232,22 +233,20 @@ fn strip_prefix<'tcx>(\n     projections: Vec<PlaceElem<'tcx>>,\n     prefix_projections: &[HirProjection<'tcx>],\n ) -> impl Iterator<Item = PlaceElem<'tcx>> {\n-    let mut iter = projections.into_iter();\n-    let mut next = || match iter.next()? {\n+    let mut iter = projections\n+        .into_iter()\n         // Filter out opaque casts, they are unnecessary in the prefix.\n-        ProjectionElem::OpaqueCast(..) => iter.next(),\n-        other => Some(other),\n-    };\n+        .filter(|elem| !matches!(elem, ProjectionElem::OpaqueCast(..)));\n     for projection in prefix_projections {\n         match projection.kind {\n             HirProjectionKind::Deref => {\n-                assert!(matches!(next(), Some(ProjectionElem::Deref)));\n+                assert_matches!(iter.next(), Some(ProjectionElem::Deref));\n             }\n             HirProjectionKind::Field(..) => {\n                 if base_ty.is_enum() {\n-                    assert!(matches!(next(), Some(ProjectionElem::Downcast(..))));\n+                    assert_matches!(iter.next(), Some(ProjectionElem::Downcast(..)));\n                 }\n-                assert!(matches!(next(), Some(ProjectionElem::Field(..))));\n+                assert_matches!(iter.next(), Some(ProjectionElem::Field(..)));\n             }\n             HirProjectionKind::Index | HirProjectionKind::Subslice => {\n                 bug!(\"unexpected projection kind: {:?}\", projection);"}, {"sha": "b53bd3d0710a6ad15c242d60d1d0633203aa3773", "filename": "compiler/rustc_mir_build/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e828ce53b9c9fdcf40d78aed75caf866309a621e/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e828ce53b9c9fdcf40d78aed75caf866309a621e/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs?ref=e828ce53b9c9fdcf40d78aed75caf866309a621e", "patch": "@@ -2,6 +2,7 @@\n //!\n //! This crate also contains the match exhaustiveness and usefulness checking.\n #![allow(rustc::potential_query_instability)]\n+#![feature(assert_matches)]\n #![feature(box_patterns)]\n #![feature(control_flow_enum)]\n #![feature(if_let_guard)]"}, {"sha": "043bf06a1f521633faa266f71d3dc9c5d3704458", "filename": "src/test/ui/closures/issue-102089-multiple-opaque-cast.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e828ce53b9c9fdcf40d78aed75caf866309a621e/src%2Ftest%2Fui%2Fclosures%2Fissue-102089-multiple-opaque-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e828ce53b9c9fdcf40d78aed75caf866309a621e/src%2Ftest%2Fui%2Fclosures%2Fissue-102089-multiple-opaque-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fissue-102089-multiple-opaque-cast.rs?ref=e828ce53b9c9fdcf40d78aed75caf866309a621e", "patch": "@@ -0,0 +1,17 @@\n+// edition:2021\n+// check-pass\n+\n+pub struct Example<'a, T> {\n+  a: T,\n+  b: &'a T,\n+}\n+\n+impl<'a, T> Example<'a, T> {\n+  pub fn error_trying_to_destructure_self_in_closure(self) {\n+    let closure = || {\n+      let Self { a, b } = self;\n+    };\n+  }\n+}\n+\n+fn main() {}"}]}