{"sha": "5dd6b931388dac00d272a41a139c4f0cc3c449dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZDZiOTMxMzg4ZGFjMDBkMjcyYTQxYTEzOWM0ZjBjYzNjNDQ5ZGM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-29T13:40:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-29T13:40:55Z"}, "message": "Merge #8231\n\n8231: Fold consecutive consts and statics r=matklad a=MozarellaMan\n\nPR to implement #8114\r\n\r\n![const_fold](https://user-images.githubusercontent.com/48062697/112835083-b584c600-9090-11eb-968a-a95f4e9c1f6c.gif)\r\n\n\nCo-authored-by: Ayomide Bamidele <ayoeze@hotmail.com>", "tree": {"sha": "5b0534a11fbe1ce3292c5d502506e303e90e9fa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b0534a11fbe1ce3292c5d502506e303e90e9fa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dd6b931388dac00d272a41a139c4f0cc3c449dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgYdjnCRBK7hj4Ov3rIwAAdHIIAIIgxfG5vYpDT/rxM2+IKqQR\nQO8ValkQbCxssSk77vIIBFG4GBe2cpT9BGo3Yur1nqZcnXWGhNQFvsqrVEjAAYp4\nvtpVyGSuF9vsNbUfHpNvAAJBso8QDBsJU9sWRdH/OV8Qv3InlwztjvspfsLIFtth\nmO/L8o5ZXuOAll+FLoWr/8CbLSuPkJREMsxjrHGexoLunnH1k9NCif/gFLBXOSSz\n7L9aWLL9Lk4/6u2gAYHw9y1tG+VLxzToloNV8WcmCvEs7HiRnKZPpKEr4WldKwJ4\nwNuEkOTyQQcxrKwgtAKKBsElctv63o3roOpxbtjxJol85tONwbDGJPl62yDUetc=\n=s4Kh\n-----END PGP SIGNATURE-----\n", "payload": "tree 5b0534a11fbe1ce3292c5d502506e303e90e9fa4\nparent c9810b9b556ec8660c37f1ceae9cf87f42f2b789\nparent 8e11796dc5fcaaeba7b4cc2e0096ed459ec9b899\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1617025255 +0000\ncommitter GitHub <noreply@github.com> 1617025255 +0000\n\nMerge #8231\n\n8231: Fold consecutive consts and statics r=matklad a=MozarellaMan\n\nPR to implement #8114\r\n\r\n![const_fold](https://user-images.githubusercontent.com/48062697/112835083-b584c600-9090-11eb-968a-a95f4e9c1f6c.gif)\r\n\n\nCo-authored-by: Ayomide Bamidele <ayoeze@hotmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dd6b931388dac00d272a41a139c4f0cc3c449dc", "html_url": "https://github.com/rust-lang/rust/commit/5dd6b931388dac00d272a41a139c4f0cc3c449dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dd6b931388dac00d272a41a139c4f0cc3c449dc/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9810b9b556ec8660c37f1ceae9cf87f42f2b789", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9810b9b556ec8660c37f1ceae9cf87f42f2b789", "html_url": "https://github.com/rust-lang/rust/commit/c9810b9b556ec8660c37f1ceae9cf87f42f2b789"}, {"sha": "8e11796dc5fcaaeba7b4cc2e0096ed459ec9b899", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e11796dc5fcaaeba7b4cc2e0096ed459ec9b899", "html_url": "https://github.com/rust-lang/rust/commit/8e11796dc5fcaaeba7b4cc2e0096ed459ec9b899"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "153726ce8b1042f096334751cbdca30a3f62930c", "filename": "crates/ide/src/folding_ranges.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/5dd6b931388dac00d272a41a139c4f0cc3c449dc/crates%2Fide%2Fsrc%2Ffolding_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dd6b931388dac00d272a41a139c4f0cc3c449dc/crates%2Fide%2Fsrc%2Ffolding_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ffolding_ranges.rs?ref=5dd6b931388dac00d272a41a139c4f0cc3c449dc", "patch": "@@ -17,6 +17,8 @@ pub enum FoldKind {\n     Block,\n     ArgList,\n     Region,\n+    Consts,\n+    Statics,\n }\n \n #[derive(Debug)]\n@@ -30,6 +32,8 @@ pub(crate) fn folding_ranges(file: &SourceFile) -> Vec<Fold> {\n     let mut visited_comments = FxHashSet::default();\n     let mut visited_imports = FxHashSet::default();\n     let mut visited_mods = FxHashSet::default();\n+    let mut visited_consts = FxHashSet::default();\n+    let mut visited_statics = FxHashSet::default();\n     // regions can be nested, here is a LIFO buffer\n     let mut regions_starts: Vec<TextSize> = vec![];\n \n@@ -91,6 +95,19 @@ pub(crate) fn folding_ranges(file: &SourceFile) -> Vec<Fold> {\n                         res.push(Fold { range, kind: FoldKind::Mods })\n                     }\n                 }\n+\n+                // Fold groups of consts\n+                if node.kind() == CONST && !visited_consts.contains(&node) {\n+                    if let Some(range) = contiguous_range_for_group(&node, &mut visited_consts) {\n+                        res.push(Fold { range, kind: FoldKind::Consts })\n+                    }\n+                }\n+                // Fold groups of consts\n+                if node.kind() == STATIC && !visited_statics.contains(&node) {\n+                    if let Some(range) = contiguous_range_for_group(&node, &mut visited_statics) {\n+                        res.push(Fold { range, kind: FoldKind::Statics })\n+                    }\n+                }\n             }\n         }\n     }\n@@ -250,6 +267,8 @@ mod tests {\n                 FoldKind::Block => \"block\",\n                 FoldKind::ArgList => \"arglist\",\n                 FoldKind::Region => \"region\",\n+                FoldKind::Consts => \"consts\",\n+                FoldKind::Statics => \"statics\",\n             };\n             assert_eq!(kind, &attr.unwrap());\n         }\n@@ -457,4 +476,24 @@ calling_function(x,y);\n \"#,\n         )\n     }\n+\n+    #[test]\n+    fn fold_consecutive_const() {\n+        check(\n+            r#\"\n+<fold consts>const FIRST_CONST: &str = \"first\";\n+const SECOND_CONST: &str = \"second\";</fold>\n+            \"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn fold_consecutive_static() {\n+        check(\n+            r#\"\n+<fold statics>static FIRST_STATIC: &str = \"first\";\n+static SECOND_STATIC: &str = \"second\";</fold>\n+            \"#,\n+        )\n+    }\n }"}, {"sha": "e297a72e649322f862694b938d30b6b9a23b4eef", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5dd6b931388dac00d272a41a139c4f0cc3c449dc/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dd6b931388dac00d272a41a139c4f0cc3c449dc/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=5dd6b931388dac00d272a41a139c4f0cc3c449dc", "patch": "@@ -492,7 +492,11 @@ pub(crate) fn folding_range(\n         FoldKind::Comment => Some(lsp_types::FoldingRangeKind::Comment),\n         FoldKind::Imports => Some(lsp_types::FoldingRangeKind::Imports),\n         FoldKind::Region => Some(lsp_types::FoldingRangeKind::Region),\n-        FoldKind::Mods | FoldKind::Block | FoldKind::ArgList => None,\n+        FoldKind::Mods\n+        | FoldKind::Block\n+        | FoldKind::ArgList\n+        | FoldKind::Consts\n+        | FoldKind::Statics => None,\n     };\n \n     let range = range(line_index, fold.range);"}]}