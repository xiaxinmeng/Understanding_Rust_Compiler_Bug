{"sha": "e6d1bf5acba29a8944f3bd537bcefb5e5972e5f1", "node_id": "C_kwDOAAsO6NoAKGU2ZDFiZjVhY2JhMjlhODk0NGYzYmQ1MzdiY2VmYjVlNTk3MmU1ZjE", "commit": {"author": {"name": "Wu Yu Wei", "email": "wusyong9104@gmail.com", "date": "2020-03-31T06:36:12Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-11-09T01:04:57Z"}, "message": "Link tracking issues in Configurations.md (#4096)\n\n# Conflicts:\n#\tConfigurations.md", "tree": {"sha": "cde3a7248c6099b1f414c0bd516d48c97e47ce52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cde3a7248c6099b1f414c0bd516d48c97e47ce52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6d1bf5acba29a8944f3bd537bcefb5e5972e5f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d1bf5acba29a8944f3bd537bcefb5e5972e5f1", "html_url": "https://github.com/rust-lang/rust/commit/e6d1bf5acba29a8944f3bd537bcefb5e5972e5f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6d1bf5acba29a8944f3bd537bcefb5e5972e5f1/comments", "author": null, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea199bacef07213dbe008841b89c450e3bf0c638", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea199bacef07213dbe008841b89c450e3bf0c638", "html_url": "https://github.com/rust-lang/rust/commit/ea199bacef07213dbe008841b89c450e3bf0c638"}], "stats": {"total": 94, "additions": 47, "deletions": 47}, "files": [{"sha": "4a281251f2275ba32b32d510281ae1f97c3e07d8", "filename": "Configurations.md", "status": "modified", "additions": 47, "deletions": 47, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/e6d1bf5acba29a8944f3bd537bcefb5e5972e5f1/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/e6d1bf5acba29a8944f3bd537bcefb5e5972e5f1/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=e6d1bf5acba29a8944f3bd537bcefb5e5972e5f1", "patch": "@@ -47,7 +47,7 @@ Where to put a binary operator when a binary expression goes multiline.\n \n - **Default value**: `\"Front\"`\n - **Possible values**: `\"Front\"`, `\"Back\"`\n-- **Stable**: No (tracking issue: #3368)\n+- **Stable**: No (tracking issue: [#3368](https://github.com/rust-lang/rustfmt/issues/3368))\n \n #### `\"Front\"` (default):\n \n@@ -88,7 +88,7 @@ them, additional blank lines are inserted.\n \n - **Default value**: `0`\n - **Possible values**: *unsigned integer*\n-- **Stable**: No (tracking issue: #3382)\n+- **Stable**: No (tracking issue: [#3382](https://github.com/rust-lang/rustfmt/issues/3382))\n \n ### Example\n Original Code (rustfmt will not change it with the default value of `0`):\n@@ -128,7 +128,7 @@ lines are found, they are trimmed down to match this integer.\n \n - **Default value**: `1`\n - **Possible values**: any non-negative integer\n-- **Stable**: No (tracking issue: #3381)\n+- **Stable**: No (tracking issue: [#3381](https://github.com/rust-lang/rustfmt/issues/3381))\n \n ### Example\n Original Code:\n@@ -186,7 +186,7 @@ Brace style for items\n \n - **Default value**: `\"SameLineWhere\"`\n - **Possible values**: `\"AlwaysNextLine\"`, `\"PreferSameLine\"`, `\"SameLineWhere\"`\n-- **Stable**: No (tracking issue: #3376)\n+- **Stable**: No (tracking issue: [#3376](https://github.com/rust-lang/rustfmt/issues/3376))\n \n ### Functions\n \n@@ -313,15 +313,15 @@ Whether to use colored output or not.\n \n - **Default value**: `\"Auto\"`\n - **Possible values**: \"Auto\", \"Always\", \"Never\"\n-- **Stable**: No (tracking issue: #3385)\n+- **Stable**: No (tracking issue: [#3385](https://github.com/rust-lang/rustfmt/issues/3385))\n \n ## `combine_control_expr`\n \n Combine control expressions with function calls.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3369)\n+- **Stable**: No (tracking issue: [#3369](https://github.com/rust-lang/rustfmt/issues/3369))\n \n #### `true` (default):\n \n@@ -429,7 +429,7 @@ Maximum length of comments. No effect unless`wrap_comments = true`.\n \n - **Default value**: `80`\n - **Possible values**: any positive integer\n-- **Stable**: No (tracking issue: #3349)\n+- **Stable**: No (tracking issue: [#3349](https://github.com/rust-lang/rustfmt/issues/3349))\n \n **Note:** A value of `0` results in [`wrap_comments`](#wrap_comments) being applied regardless of a line's width.\n \n@@ -452,7 +452,7 @@ Replace strings of _ wildcards by a single .. in tuple patterns\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3384)\n+- **Stable**: No (tracking issue: [#3384](https://github.com/rust-lang/rustfmt/issues/3384))\n \n #### `false` (default):\n \n@@ -477,7 +477,7 @@ Brace style for control flow constructs\n \n - **Default value**: `\"AlwaysSameLine\"`\n - **Possible values**: `\"AlwaysNextLine\"`, `\"AlwaysSameLine\"`, `\"ClosingNextLine\"`\n-- **Stable**: No (tracking issue: #3377)\n+- **Stable**: No (tracking issue: [#3377](https://github.com/rust-lang/rustfmt/issues/3377))\n \n #### `\"AlwaysSameLine\"` (default):\n \n@@ -551,7 +551,7 @@ Put empty-body functions and impls on a single line\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3356)\n+- **Stable**: No (tracking issue: [#3356](https://github.com/rust-lang/rustfmt/issues/3356))\n \n #### `true` (default):\n \n@@ -584,7 +584,7 @@ doesn't get ignored when aligning.\n \n - **Default value** : 0\n - **Possible values**: any positive integer\n-- **Stable**: No (tracking issue: #3372)\n+- **Stable**: No (tracking issue: [#3372](https://github.com/rust-lang/rustfmt/issues/3372))\n \n #### `0` (default):\n \n@@ -630,7 +630,7 @@ using a shorter name.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3391)\n+- **Stable**: No (tracking issue: [#3391](https://github.com/rust-lang/rustfmt/issues/3391))\n \n See also [`max_width`](#max_width).\n \n@@ -641,7 +641,7 @@ trailing whitespaces.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3392)\n+- **Stable**: No (tracking issue: [#3392](https://github.com/rust-lang/rustfmt/issues/3392))\n \n ## `fn_args_layout`\n \n@@ -771,7 +771,7 @@ Put single-expression functions on a single line\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3358)\n+- **Stable**: No (tracking issue: [#3358](https://github.com/rust-lang/rustfmt/issues/3358))\n \n #### `false` (default):\n \n@@ -832,7 +832,7 @@ Force multiline closure and match arm bodies to be wrapped in a block\n \n - **Default value**: `false`\n - **Possible values**: `false`, `true`\n-- **Stable**: No (tracking issue: #3374)\n+- **Stable**: No (tracking issue: [#3374](https://github.com/rust-lang/rustfmt/issues/3374))\n \n #### `false` (default):\n \n@@ -881,7 +881,7 @@ Format code snippet included in doc comments.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3348)\n+- **Stable**: No (tracking issue: [#3348](https://github.com/rust-lang/rustfmt/issues/3348))\n \n #### `false` (default):\n \n@@ -941,7 +941,7 @@ Format the metavariable matching patterns in macros.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3354)\n+- **Stable**: No (tracking issue: [#3354](https://github.com/rust-lang/rustfmt/issues/3354))\n \n #### `false` (default):\n \n@@ -978,7 +978,7 @@ Format the bodies of macros.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3355)\n+- **Stable**: No (tracking issue: [#3355](https://github.com/rust-lang/rustfmt/issues/3355))\n \n #### `true` (default):\n \n@@ -1011,7 +1011,7 @@ Format string literals where necessary\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3353)\n+- **Stable**: No (tracking issue: [#3353](https://github.com/rust-lang/rustfmt/issues/3353))\n \n #### `false` (default):\n \n@@ -1072,7 +1072,7 @@ Do not show parse errors if the parser failed to parse files.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3390)\n+- **Stable**: No (tracking issue: [#3390](https://github.com/rust-lang/rustfmt/issues/3390))\n \n ## `ignore`\n \n@@ -1081,7 +1081,7 @@ The pattern format is the same as [.gitignore](https://git-scm.com/docs/gitignor\n \n - **Default value**: format every file\n - **Possible values**: See an example below\n-- **Stable**: No (tracking issue: #3395)\n+- **Stable**: No (tracking issue: [#3395](https://github.com/rust-lang/rustfmt/issues/3395))\n \n ### Example\n \n@@ -1114,7 +1114,7 @@ Indent style of imports\n \n - **Default Value**: `\"Block\"`\n - **Possible values**: `\"Block\"`, `\"Visual\"`\n-- **Stable**: No (tracking issue: #3360)\n+- **Stable**: No (tracking issue: [#3360](https://github.com/rust-lang/rustfmt/issues/3360))\n \n #### `\"Block\"` (default):\n \n@@ -1140,7 +1140,7 @@ Item layout inside a imports block\n \n - **Default value**: \"Mixed\"\n - **Possible values**: \"Horizontal\", \"HorizontalVertical\", \"Mixed\", \"Vertical\"\n-- **Stable**: No (tracking issue: #3361)\n+- **Stable**: No (tracking issue: [#3361](https://github.com/rust-lang/rustfmt/issues/3361))\n \n #### `\"Mixed\"` (default):\n \n@@ -1203,7 +1203,7 @@ Indent on expressions or items.\n \n - **Default value**: `\"Block\"`\n - **Possible values**: `\"Block\"`, `\"Visual\"`\n-- **Stable**: No (tracking issue: #3346)\n+- **Stable**: No (tracking issue: [#3346](https://github.com/rust-lang/rustfmt/issues/3346))\n \n ### Array\n \n@@ -1456,7 +1456,7 @@ Write an item and its attribute on the same line if their combined width is belo\n \n - **Default value**: 0\n - **Possible values**: any positive integer\n-- **Stable**: No (tracking issue: #3343)\n+- **Stable**: No (tracking issue: [#3343](https://github.com/rust-lang/rustfmt/issues/3343))\n \n ### Example\n \n@@ -1477,7 +1477,7 @@ Check whether beginnings of files match a license template.\n \n - **Default value**: `\"\"`\n - **Possible values**: path to a license template file\n-- **Stable**: No (tracking issue: #3352)\n+- **Stable**: No (tracking issue: [#3352](https://github.com/rust-lang/rustfmt/issues/3352))\n \n A license template is a plain text file which is matched literally against the\n beginning of each source file, except for `{}`-delimited blocks, which are\n@@ -1499,7 +1499,7 @@ The Style Guide requires that bodies are block wrapped by default if a line brea\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3373)\n+- **Stable**: No (tracking issue: [#3373](https://github.com/rust-lang/rustfmt/issues/3373))\n \n #### `true` (default):\n \n@@ -1826,7 +1826,7 @@ Convert /* */ comments to // comments where possible\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3350)\n+- **Stable**: No (tracking issue: [#3350](https://github.com/rust-lang/rustfmt/issues/3350))\n \n #### `false` (default):\n \n@@ -1854,7 +1854,7 @@ Convert `#![doc]` and `#[doc]` attributes to `//!` and `///` doc comments.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3351)\n+- **Stable**: No (tracking issue: [#3351](https://github.com/rust-lang/rustfmt/issues/3351))\n \n #### `false` (default):\n \n@@ -1885,7 +1885,7 @@ instead of being indented on a new line.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3370)\n+- **Stable**: No (tracking issue: [#3370](https://github.com/rust-lang/rustfmt/issues/3370))\n \n #### `false` (default):\n \n@@ -1992,7 +1992,7 @@ Reorder impl items. `type` and `const` are put first, then macros and methods.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3363)\n+- **Stable**: No (tracking issue: [#3363](https://github.com/rust-lang/rustfmt/issues/3363))\n \n #### `false` (default)\n \n@@ -2166,7 +2166,7 @@ Report `FIXME` items in comments.\n \n - **Default value**: `\"Never\"`\n - **Possible values**: `\"Always\"`, `\"Unnumbered\"`, `\"Never\"`\n-- **Stable**: No (tracking issue: #3394)\n+- **Stable**: No (tracking issue: [#3394](https://github.com/rust-lang/rustfmt/issues/3394))\n \n Warns about any comments containing `FIXME` in them when set to `\"Always\"`. If\n it contains a `#X` (with `X` being a number) in parentheses following the\n@@ -2181,7 +2181,7 @@ Report `TODO` items in comments.\n \n - **Default value**: `\"Never\"`\n - **Possible values**: `\"Always\"`, `\"Unnumbered\"`, `\"Never\"`\n-- **Stable**: No (tracking issue: #3393)\n+- **Stable**: No (tracking issue: [#3393](https://github.com/rust-lang/rustfmt/issues/3393))\n \n Warns about any comments containing `TODO` in them when set to `\"Always\"`. If\n it contains a `#X` (with `X` being a number) in parentheses following the\n@@ -2196,15 +2196,15 @@ specific version of rustfmt is used in your CI, use this option.\n \n - **Default value**: `CARGO_PKG_VERSION`\n - **Possible values**: any published version (e.g. `\"0.3.8\"`)\n-- **Stable**: No (tracking issue: #3386)\n+- **Stable**: No (tracking issue: [#3386](https://github.com/rust-lang/rustfmt/issues/3386))\n \n ## `skip_children`\n \n Don't reformat out of line modules\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3389)\n+- **Stable**: No (tracking issue: [#3389](https://github.com/rust-lang/rustfmt/issues/3386))\n \n ## `single_line_if_else_max_width`\n \n@@ -2224,7 +2224,7 @@ Leave a space after the colon.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3366)\n+- **Stable**: No (tracking issue: [#3366](https://github.com/rust-lang/rustfmt/issues/3366))\n \n #### `true` (default):\n \n@@ -2256,7 +2256,7 @@ Leave a space before the colon.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3365)\n+- **Stable**: No (tracking issue: [#3365](https://github.com/rust-lang/rustfmt/issues/3365))\n \n #### `false` (default):\n \n@@ -2288,7 +2288,7 @@ Put spaces around the .., ..=, and ... range operators\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3367)\n+- **Stable**: No (tracking issue: [#3367](https://github.com/rust-lang/rustfmt/issues/3367))\n \n #### `false` (default):\n \n@@ -2344,7 +2344,7 @@ The maximum diff of width between struct fields to be aligned with each other.\n \n - **Default value** : 0\n - **Possible values**: any non-negative integer\n-- **Stable**: No (tracking issue: #3371)\n+- **Stable**: No (tracking issue: [#3371](https://github.com/rust-lang/rustfmt/issues/3371))\n \n #### `0` (default):\n \n@@ -2372,7 +2372,7 @@ Put small struct literals on a single line\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3357)\n+- **Stable**: No (tracking issue: [#3357](https://github.com/rust-lang/rustfmt/issues/3357))\n \n #### `true` (default):\n \n@@ -2460,7 +2460,7 @@ How to handle trailing commas for lists\n \n - **Default value**: `\"Vertical\"`\n - **Possible values**: `\"Always\"`, `\"Never\"`, `\"Vertical\"`\n-- **Stable**: No (tracking issue: #3379)\n+- **Stable**: No (tracking issue: [#3379](https://github.com/rust-lang/rustfmt/issues/3379))\n \n #### `\"Vertical\"` (default):\n \n@@ -2518,7 +2518,7 @@ Add trailing semicolon after break, continue and return\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3378)\n+- **Stable**: No (tracking issue: [#3378](https://github.com/rust-lang/rustfmt/issues/3378))\n \n #### `true` (default):\n ```rust\n@@ -2540,7 +2540,7 @@ Determines if `+` or `=` are wrapped in spaces in the punctuation of types\n \n - **Default value**: `\"Wide\"`\n - **Possible values**: `\"Compressed\"`, `\"Wide\"`\n-- **Stable**: No (tracking issue: #3364)\n+- **Stable**: No (tracking issue: [#3364](https://github.com/rust-lang/rustfmt/issues/3364))\n \n #### `\"Wide\"` (default):\n \n@@ -2564,7 +2564,7 @@ Enable unstable features on the unstable channel.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3387)\n+- **Stable**: No (tracking issue: [#3387](https://github.com/rust-lang/rustfmt/issues/3387))\n \n ## `use_field_init_shorthand`\n \n@@ -2779,7 +2779,7 @@ version number.\n \n - **Default value**: `One`\n - **Possible values**: `One`, `Two`\n-- **Stable**: No (tracking issue: #3383)\n+- **Stable**: No (tracking issue: [#3383](https://github.com/rust-lang/rustfmt/issues/3383))\n \n ### Example\n \n@@ -2793,7 +2793,7 @@ Forces the `where` clause to be laid out on a single line.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3359)\n+- **Stable**: No (tracking issue: [#3359](https://github.com/rust-lang/rustfmt/issues/3359))\n \n #### `false` (default):\n \n@@ -2825,7 +2825,7 @@ Break comments to fit on the line\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n-- **Stable**: No (tracking issue: #3347)\n+- **Stable**: No (tracking issue: [#3347](https://github.com/rust-lang/rustfmt/issues/3347))\n \n #### `false` (default):\n "}]}