{"sha": "d3028138889d8eb2aaa3dce899d556f8bbf04d13", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMDI4MTM4ODg5ZDhlYjJhYWEzZGNlODk5ZDU1NmY4YmJmMDRkMTM=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2014-07-29T19:35:38Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2014-08-12T02:20:10Z"}, "message": "Reenable ignored test and add run-pass test.", "tree": {"sha": "f7ea02b97f9cb08a2c73b666ce6faae9ed088f29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7ea02b97f9cb08a2c73b666ce6faae9ed088f29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3028138889d8eb2aaa3dce899d556f8bbf04d13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3028138889d8eb2aaa3dce899d556f8bbf04d13", "html_url": "https://github.com/rust-lang/rust/commit/d3028138889d8eb2aaa3dce899d556f8bbf04d13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3028138889d8eb2aaa3dce899d556f8bbf04d13/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68cbd6c9294cadd7ff868be0bd756fcde84d757d", "url": "https://api.github.com/repos/rust-lang/rust/commits/68cbd6c9294cadd7ff868be0bd756fcde84d757d", "html_url": "https://github.com/rust-lang/rust/commit/68cbd6c9294cadd7ff868be0bd756fcde84d757d"}], "stats": {"total": 97, "additions": 96, "deletions": 1}, "files": [{"sha": "51b8985e655a577ba8bbccb760898651b17716a2", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d3028138889d8eb2aaa3dce899d556f8bbf04d13/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3028138889d8eb2aaa3dce899d556f8bbf04d13/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=d3028138889d8eb2aaa3dce899d556f8bbf04d13", "patch": "@@ -2800,7 +2800,6 @@ mod tests {\n         }\n     }\n     #[test]\n-    #[ignore] // FIXME(#15763)\n     fn test_decode_errors_struct() {\n         check_err::<DecodeStruct>(\"[]\", ExpectedError(\"Object\".to_string(), \"[]\".to_string()));\n         check_err::<DecodeStruct>(\"{\\\"x\\\": true, \\\"y\\\": true, \\\"z\\\": \\\"\\\", \\\"w\\\": []}\","}, {"sha": "6e3599bda149acf5c9621061bc05c960842424bd", "filename": "src/test/run-pass/issue-15763.rs", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/d3028138889d8eb2aaa3dce899d556f8bbf04d13/src%2Ftest%2Frun-pass%2Fissue-15763.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3028138889d8eb2aaa3dce899d556f8bbf04d13/src%2Ftest%2Frun-pass%2Fissue-15763.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15763.rs?ref=d3028138889d8eb2aaa3dce899d556f8bbf04d13", "patch": "@@ -0,0 +1,96 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+#[deriving(PartialEq, Show)]\n+struct Bar {\n+    x: int\n+}\n+impl Drop for Bar {\n+    fn drop(&mut self) {\n+        assert_eq!(self.x, 22);\n+    }\n+}\n+\n+#[deriving(PartialEq, Show)]\n+struct Foo {\n+    x: Bar,\n+    a: int\n+}\n+\n+fn foo() -> Result<Foo, int> {\n+    return Ok(Foo {\n+        x: Bar { x: 22 },\n+        a: return Err(32)\n+    });\n+}\n+\n+fn baz() -> Result<Foo, int> {\n+    Ok(Foo {\n+        x: Bar { x: 22 },\n+        a: return Err(32)\n+    })\n+}\n+\n+// explicit immediate return\n+fn aa() -> int {\n+    return 3;\n+}\n+\n+// implicit immediate return\n+fn bb() -> int {\n+    3\n+}\n+\n+// implicit outptr return\n+fn cc() -> Result<int, int> {\n+    Ok(3)\n+}\n+\n+// explicit outptr return\n+fn dd() -> Result<int, int> {\n+    return Ok(3);\n+}\n+\n+trait A {\n+    fn aaa(self) -> int {\n+        3\n+    }\n+    fn bbb(self) -> int {\n+        return 3;\n+    }\n+    fn ccc(self) -> Result<int, int> {\n+        Ok(3)\n+    }\n+    fn ddd(self) -> Result<int, int> {\n+        return Ok(3);\n+    }\n+}\n+\n+impl A for int {}\n+\n+fn main() {\n+    assert_eq!(foo(), Err(32));\n+    assert_eq!(baz(), Err(32));\n+\n+    assert_eq!(aa(), 3);\n+    assert_eq!(bb(), 3);\n+    assert_eq!(cc().unwrap(), 3);\n+    assert_eq!(dd().unwrap(), 3);\n+\n+    let i = box 32i as Box<A>;\n+    assert_eq!(i.aaa(), 3);\n+    let i = box 32i as Box<A>;\n+    assert_eq!(i.bbb(), 3);\n+    let i = box 32i as Box<A>;\n+    assert_eq!(i.ccc().unwrap(), 3);\n+    let i = box 32i as Box<A>;\n+    assert_eq!(i.ddd().unwrap(), 3);\n+}"}]}