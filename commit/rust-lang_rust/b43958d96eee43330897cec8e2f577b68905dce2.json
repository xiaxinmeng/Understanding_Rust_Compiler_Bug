{"sha": "b43958d96eee43330897cec8e2f577b68905dce2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0Mzk1OGQ5NmVlZTQzMzMwODk3Y2VjOGUyZjU3N2I2ODkwNWRjZTI=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-05-26T05:40:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-26T05:40:23Z"}, "message": "Merge pull request #1589 from topecongiro/issue-1587\n\nPut closing paren on the next line when the last arg contains comment", "tree": {"sha": "724aa03997399fb85fa5ce3c7972f20ccfc7b6ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/724aa03997399fb85fa5ce3c7972f20ccfc7b6ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b43958d96eee43330897cec8e2f577b68905dce2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b43958d96eee43330897cec8e2f577b68905dce2", "html_url": "https://github.com/rust-lang/rust/commit/b43958d96eee43330897cec8e2f577b68905dce2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b43958d96eee43330897cec8e2f577b68905dce2/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d135ebba473afd378fd08d25e9caad8deaea8d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d135ebba473afd378fd08d25e9caad8deaea8d3", "html_url": "https://github.com/rust-lang/rust/commit/3d135ebba473afd378fd08d25e9caad8deaea8d3"}, {"sha": "0869bca85abefa73ee4c1998378cb0b5c50b783e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0869bca85abefa73ee4c1998378cb0b5c50b783e", "html_url": "https://github.com/rust-lang/rust/commit/0869bca85abefa73ee4c1998378cb0b5c50b783e"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "a23e69d688112255dcb5ab824cc1caac18190cc6", "filename": "src/items.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b43958d96eee43330897cec8e2f577b68905dce2/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43958d96eee43330897cec8e2f577b68905dce2/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=b43958d96eee43330897cec8e2f577b68905dce2", "patch": "@@ -1634,6 +1634,7 @@ fn rewrite_fn_base(context: &RewriteContext,\n         _ => false,\n     } && !fd.inputs.is_empty();\n \n+    let mut args_last_line_contains_comment = false;\n     if put_args_in_block {\n         arg_indent = indent.block_indent(context.config);\n         result.push('\\n');\n@@ -1647,6 +1648,16 @@ fn rewrite_fn_base(context: &RewriteContext,\n         if context.config.spaces_within_parens() && fd.inputs.len() > 0 {\n             result.push(' ')\n         }\n+        // If the last line of args contains comment, we cannot put the closing paren\n+        // on the same line.\n+        if arg_str\n+               .lines()\n+               .last()\n+               .map_or(false, |last_line| last_line.contains(\"//\")) {\n+            args_last_line_contains_comment = true;\n+            result.push('\\n');\n+            result.push_str(&arg_indent.to_string(context.config));\n+        }\n         result.push(')');\n     }\n \n@@ -1670,7 +1681,8 @@ fn rewrite_fn_base(context: &RewriteContext,\n \n                 let overlong_sig = sig_length > context.config.max_width();\n \n-                result.contains('\\n') || multi_line_ret_str || overlong_sig\n+                (!args_last_line_contains_comment) &&\n+                (result.contains('\\n') || multi_line_ret_str || overlong_sig)\n             }\n         };\n         let ret_indent = if ret_should_indent {"}, {"sha": "b2796ef6f3b250c6c42fde710a4fae272605184c", "filename": "tests/target/issue-1587.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b43958d96eee43330897cec8e2f577b68905dce2/tests%2Ftarget%2Fissue-1587.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43958d96eee43330897cec8e2f577b68905dce2/tests%2Ftarget%2Fissue-1587.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1587.rs?ref=b43958d96eee43330897cec8e2f577b68905dce2", "patch": "@@ -0,0 +1,8 @@\n+pub trait X {\n+    fn a(&self) -> &'static str;\n+    fn bcd(&self,\n+           c: &str, // comment on this arg\n+           d: u16, // comment on this arg\n+           e: &Vec<String> // comment on this arg\n+           ) -> Box<Q>;\n+}"}]}