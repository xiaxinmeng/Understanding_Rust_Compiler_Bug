{"sha": "169113935f0f0bdedaa94730f3f1eee16e254ff0", "node_id": "C_kwDOAAsO6NoAKDE2OTExMzkzNWYwZjBiZGVkYWE5NDczMGYzZjFlZWUxNmUyNTRmZjA", "commit": {"author": {"name": "John Kugelman", "email": "john@kugelman.name", "date": "2021-10-10T04:44:34Z"}, "committer": {"name": "John Kugelman", "email": "john@kugelman.name", "date": "2021-10-10T04:44:34Z"}, "message": "Fix spelling: Cannonical -> Canonical", "tree": {"sha": "f9ca426bb747effc1cc0fcec39835c17478c7e15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9ca426bb747effc1cc0fcec39835c17478c7e15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/169113935f0f0bdedaa94730f3f1eee16e254ff0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/169113935f0f0bdedaa94730f3f1eee16e254ff0", "html_url": "https://github.com/rust-lang/rust/commit/169113935f0f0bdedaa94730f3f1eee16e254ff0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/169113935f0f0bdedaa94730f3f1eee16e254ff0/comments", "author": {"login": "jkugelman", "id": 4551859, "node_id": "MDQ6VXNlcjQ1NTE4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/4551859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkugelman", "html_url": "https://github.com/jkugelman", "followers_url": "https://api.github.com/users/jkugelman/followers", "following_url": "https://api.github.com/users/jkugelman/following{/other_user}", "gists_url": "https://api.github.com/users/jkugelman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkugelman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkugelman/subscriptions", "organizations_url": "https://api.github.com/users/jkugelman/orgs", "repos_url": "https://api.github.com/users/jkugelman/repos", "events_url": "https://api.github.com/users/jkugelman/events{/privacy}", "received_events_url": "https://api.github.com/users/jkugelman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jkugelman", "id": 4551859, "node_id": "MDQ6VXNlcjQ1NTE4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/4551859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkugelman", "html_url": "https://github.com/jkugelman", "followers_url": "https://api.github.com/users/jkugelman/followers", "following_url": "https://api.github.com/users/jkugelman/following{/other_user}", "gists_url": "https://api.github.com/users/jkugelman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkugelman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkugelman/subscriptions", "organizations_url": "https://api.github.com/users/jkugelman/orgs", "repos_url": "https://api.github.com/users/jkugelman/repos", "events_url": "https://api.github.com/users/jkugelman/events{/privacy}", "received_events_url": "https://api.github.com/users/jkugelman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f086f4707757c679813a3e6cd44e7c502a668394", "url": "https://api.github.com/repos/rust-lang/rust/commits/f086f4707757c679813a3e6cd44e7c502a668394", "html_url": "https://github.com/rust-lang/rust/commit/f086f4707757c679813a3e6cd44e7c502a668394"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "6720493cd3cb19ba77400f82970fc08df7449cca", "filename": "compiler/rustc_middle/src/traits/select.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/169113935f0f0bdedaa94730f3f1eee16e254ff0/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/169113935f0f0bdedaa94730f3f1eee16e254ff0/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fselect.rs?ref=169113935f0f0bdedaa94730f3f1eee16e254ff0", "patch": "@@ -264,14 +264,14 @@ impl EvaluationResult {\n /// Indicates that trait evaluation caused overflow and in which pass.\n #[derive(Copy, Clone, Debug, PartialEq, Eq, HashStable)]\n pub enum OverflowError {\n-    Cannonical,\n+    Canonical,\n     ErrorReporting,\n }\n \n impl<'tcx> From<OverflowError> for SelectionError<'tcx> {\n     fn from(overflow_error: OverflowError) -> SelectionError<'tcx> {\n         match overflow_error {\n-            OverflowError::Cannonical => SelectionError::Overflow,\n+            OverflowError::Canonical => SelectionError::Overflow,\n             OverflowError::ErrorReporting => SelectionError::ErrorReporting,\n         }\n     }"}, {"sha": "2fa6c0c02597b77ebef3d29585b04f825ab7c46f", "filename": "compiler/rustc_trait_selection/src/traits/query/evaluate_obligation.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/169113935f0f0bdedaa94730f3f1eee16e254ff0/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fevaluate_obligation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/169113935f0f0bdedaa94730f3f1eee16e254ff0/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fevaluate_obligation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fevaluate_obligation.rs?ref=169113935f0f0bdedaa94730f3f1eee16e254ff0", "patch": "@@ -83,10 +83,10 @@ impl<'cx, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'cx, 'tcx> {\n     ) -> EvaluationResult {\n         match self.evaluate_obligation(obligation) {\n             Ok(result) => result,\n-            Err(OverflowError::Cannonical) => {\n+            Err(OverflowError::Canonical) => {\n                 let mut selcx = SelectionContext::with_query_mode(&self, TraitQueryMode::Standard);\n                 selcx.evaluate_root_obligation(obligation).unwrap_or_else(|r| match r {\n-                    OverflowError::Cannonical => {\n+                    OverflowError::Canonical => {\n                         span_bug!(\n                             obligation.cause.span,\n                             \"Overflow should be caught earlier in standard query mode: {:?}, {:?}\","}, {"sha": "0f6e2e0be52b74a076a18019fe8d48272f7599e0", "filename": "compiler/rustc_trait_selection/src/traits/select/candidate_assembly.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/169113935f0f0bdedaa94730f3f1eee16e254ff0/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/169113935f0f0bdedaa94730f3f1eee16e254ff0/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs?ref=169113935f0f0bdedaa94730f3f1eee16e254ff0", "patch": "@@ -161,7 +161,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                     Ok(Some(EvaluatedCandidate { candidate: c, evaluation: eval }))\n                 }\n                 Ok(_) => Ok(None),\n-                Err(OverflowError::Cannonical) => Err(Overflow),\n+                Err(OverflowError::Canonical) => Err(Overflow),\n                 Err(OverflowError::ErrorReporting) => Err(ErrorReporting),\n             })\n             .flat_map(Result::transpose)"}, {"sha": "85502a399dedac0bbc74781160255accebbba09d", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/169113935f0f0bdedaa94730f3f1eee16e254ff0/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/169113935f0f0bdedaa94730f3f1eee16e254ff0/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=169113935f0f0bdedaa94730f3f1eee16e254ff0", "patch": "@@ -900,7 +900,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         match self.candidate_from_obligation(stack) {\n             Ok(Some(c)) => self.evaluate_candidate(stack, &c),\n             Ok(None) => Ok(EvaluatedToAmbig),\n-            Err(Overflow) => Err(OverflowError::Cannonical),\n+            Err(Overflow) => Err(OverflowError::Canonical),\n             Err(ErrorReporting) => Err(OverflowError::ErrorReporting),\n             Err(..) => Ok(EvaluatedToErr),\n         }\n@@ -1064,7 +1064,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                     self.infcx.report_overflow_error(error_obligation, true);\n                 }\n                 TraitQueryMode::Canonical => {\n-                    return Err(OverflowError::Cannonical);\n+                    return Err(OverflowError::Canonical);\n                 }\n             }\n         }"}, {"sha": "843dda324da7fb75842b6ca3457f17f1b69bdcdc", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/169113935f0f0bdedaa94730f3f1eee16e254ff0/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/169113935f0f0bdedaa94730f3f1eee16e254ff0/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=169113935f0f0bdedaa94730f3f1eee16e254ff0", "patch": "@@ -78,7 +78,7 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n                             );\n                             match infcx.evaluate_obligation(&obligation) {\n                                 Ok(eval_result) if eval_result.may_apply() => {}\n-                                Err(traits::OverflowError::Cannonical) => {}\n+                                Err(traits::OverflowError::Canonical) => {}\n                                 Err(traits::OverflowError::ErrorReporting) => {}\n                                 _ => {\n                                     return false;"}]}