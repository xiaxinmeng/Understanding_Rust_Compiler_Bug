{"sha": "277df02ff562e152baac5cba93844d7499d806b5", "node_id": "C_kwDOAAsO6NoAKDI3N2RmMDJmZjU2MmUxNTJiYWFjNWNiYTkzODQ0ZDc0OTlkODA2YjU", "commit": {"author": {"name": "ice1000", "email": "ice1000kotlin@foxmail.com", "date": "2022-08-24T05:49:59Z"}, "committer": {"name": "ice1000", "email": "ice1000kotlin@foxmail.com", "date": "2022-09-02T21:18:36Z"}, "message": "This should work, but I got mysterious errors", "tree": {"sha": "549d9a088404eb2ba6884315074ab58dbd494809", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/549d9a088404eb2ba6884315074ab58dbd494809"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/277df02ff562e152baac5cba93844d7499d806b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/277df02ff562e152baac5cba93844d7499d806b5", "html_url": "https://github.com/rust-lang/rust/commit/277df02ff562e152baac5cba93844d7499d806b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/277df02ff562e152baac5cba93844d7499d806b5/comments", "author": {"login": "ice1000", "id": 16398479, "node_id": "MDQ6VXNlcjE2Mzk4NDc5", "avatar_url": "https://avatars.githubusercontent.com/u/16398479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ice1000", "html_url": "https://github.com/ice1000", "followers_url": "https://api.github.com/users/ice1000/followers", "following_url": "https://api.github.com/users/ice1000/following{/other_user}", "gists_url": "https://api.github.com/users/ice1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/ice1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ice1000/subscriptions", "organizations_url": "https://api.github.com/users/ice1000/orgs", "repos_url": "https://api.github.com/users/ice1000/repos", "events_url": "https://api.github.com/users/ice1000/events{/privacy}", "received_events_url": "https://api.github.com/users/ice1000/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ice1000", "id": 16398479, "node_id": "MDQ6VXNlcjE2Mzk4NDc5", "avatar_url": "https://avatars.githubusercontent.com/u/16398479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ice1000", "html_url": "https://github.com/ice1000", "followers_url": "https://api.github.com/users/ice1000/followers", "following_url": "https://api.github.com/users/ice1000/following{/other_user}", "gists_url": "https://api.github.com/users/ice1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/ice1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ice1000/subscriptions", "organizations_url": "https://api.github.com/users/ice1000/orgs", "repos_url": "https://api.github.com/users/ice1000/repos", "events_url": "https://api.github.com/users/ice1000/events{/privacy}", "received_events_url": "https://api.github.com/users/ice1000/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79e5c366cda0f03cc9a087e43152f8631e61d356", "url": "https://api.github.com/repos/rust-lang/rust/commits/79e5c366cda0f03cc9a087e43152f8631e61d356", "html_url": "https://github.com/rust-lang/rust/commit/79e5c366cda0f03cc9a087e43152f8631e61d356"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "a7f1cf49e3a45685c21564cd9835c133e136f63d", "filename": "crates/ide-assists/src/handlers/inline_type_alias.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/277df02ff562e152baac5cba93844d7499d806b5/crates%2Fide-assists%2Fsrc%2Fhandlers%2Finline_type_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/277df02ff562e152baac5cba93844d7499d806b5/crates%2Fide-assists%2Fsrc%2Fhandlers%2Finline_type_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Finline_type_alias.rs?ref=277df02ff562e152baac5cba93844d7499d806b5", "patch": "@@ -71,17 +71,14 @@ pub(crate) fn inline_type_alias_uses(acc: &mut Assists, ctx: &AssistContext<'_>)\n                         path_type.syntax().ancestors().nth(3).and_then(ast::PathType::cast)\n                     });\n \n+                path_type_uses.iter().for_each(remove_path_if_in_use_stmt);\n                 for (target, replacement) in path_types.into_iter().filter_map(|path_type| {\n                     let replacement = inline(&ast_alias, &path_type)?.to_text(&concrete_type);\n                     let target = path_type.syntax().text_range();\n                     Some((target, replacement))\n                 }) {\n                     builder.replace(target, replacement);\n                 }\n-                if !path_type_uses.is_empty() {\n-                    builder.edit_file(file_id);\n-                    path_type_uses.iter().for_each(remove_path_if_in_use_stmt);\n-                }\n             };\n \n             for (file_id, refs) in usages.into_iter() {\n@@ -1001,7 +998,6 @@ mod foo;\n \n \n //- /foo.rs\n-\n fn foo() {\n     let _: i32 = 0;\n }"}]}