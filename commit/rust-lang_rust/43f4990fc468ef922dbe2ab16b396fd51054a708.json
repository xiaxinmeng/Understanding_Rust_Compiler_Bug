{"sha": "43f4990fc468ef922dbe2ab16b396fd51054a708", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzZjQ5OTBmYzQ2OGVmOTIyZGJlMmFiMTZiMzk2ZmQ1MTA1NGE3MDg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-14T02:18:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-14T02:18:51Z"}, "message": "Rollup merge of #63508 - estebank:compromice, r=petrochenkov\n\nDo not ICE when synthesizing spans falling inside unicode chars\n\nFix https://github.com/rust-lang/rust/issues/61226.", "tree": {"sha": "31ccbdb082c129ad542086f0752ddcd4a1a34965", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31ccbdb082c129ad542086f0752ddcd4a1a34965"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43f4990fc468ef922dbe2ab16b396fd51054a708", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdU2+LCRBK7hj4Ov3rIwAAdHIIABcpYaflr4zr5x92yawP0kjR\nj+1+a98PJHK4KxdIDvgWZHBoFTTrz5zZ54u7ey+xEaBJWsiq32bFoVaVorlolEU1\n83wv408snK5osH7TDnabeCEANL3c056qwLgpwryihqS6aA5+1XRjH+3XCc8IL/07\nsqjOYr1Nz8mC2X1o5GyoTTsVFW7SfJ+CdBi/M6RUbQusLLAfcfHXNl3rinIXpGkr\nKmmnTSo9N8lF9noP9CwCSpp9xoFAa4KLuX0Ly5EoiD3Ml3R35UwV1DpfZDSJwbks\nNdi/I7PXA/vxISwCsIR6dmXxgImTr3A52NW2x/5BTX+w+ViCGiWAM6hK7lSaHqk=\n=kZnP\n-----END PGP SIGNATURE-----\n", "payload": "tree 31ccbdb082c129ad542086f0752ddcd4a1a34965\nparent 5741e2941797039abdfb91138abfa33e8631a578\nparent 84e202e6b36250dfc319aa5a869ad1df29b4b55a\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565749131 +0200\ncommitter GitHub <noreply@github.com> 1565749131 +0200\n\nRollup merge of #63508 - estebank:compromice, r=petrochenkov\n\nDo not ICE when synthesizing spans falling inside unicode chars\n\nFix https://github.com/rust-lang/rust/issues/61226.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43f4990fc468ef922dbe2ab16b396fd51054a708", "html_url": "https://github.com/rust-lang/rust/commit/43f4990fc468ef922dbe2ab16b396fd51054a708", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43f4990fc468ef922dbe2ab16b396fd51054a708/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5741e2941797039abdfb91138abfa33e8631a578", "url": "https://api.github.com/repos/rust-lang/rust/commits/5741e2941797039abdfb91138abfa33e8631a578", "html_url": "https://github.com/rust-lang/rust/commit/5741e2941797039abdfb91138abfa33e8631a578"}, {"sha": "84e202e6b36250dfc319aa5a869ad1df29b4b55a", "url": "https://api.github.com/repos/rust-lang/rust/commits/84e202e6b36250dfc319aa5a869ad1df29b4b55a", "html_url": "https://github.com/rust-lang/rust/commit/84e202e6b36250dfc319aa5a869ad1df29b4b55a"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "74cab00d3c1ebd67b225ca81038b0798e6a87cc3", "filename": "src/libsyntax/source_map.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/43f4990fc468ef922dbe2ab16b396fd51054a708/src%2Flibsyntax%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43f4990fc468ef922dbe2ab16b396fd51054a708/src%2Flibsyntax%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsource_map.rs?ref=43f4990fc468ef922dbe2ab16b396fd51054a708", "patch": "@@ -519,7 +519,7 @@ impl SourceMap {\n     /// extract function takes three arguments: a string slice containing the source, an index in\n     /// the slice for the beginning of the span and an index in the slice for the end of the span.\n     fn span_to_source<F>(&self, sp: Span, extract_source: F) -> Result<String, SpanSnippetError>\n-        where F: Fn(&str, usize, usize) -> String\n+        where F: Fn(&str, usize, usize) -> Result<String, SpanSnippetError>\n     {\n         if sp.lo() > sp.hi() {\n             return Err(SpanSnippetError::IllFormedSpan(sp));\n@@ -554,9 +554,9 @@ impl SourceMap {\n             }\n \n             if let Some(ref src) = local_begin.sf.src {\n-                return Ok(extract_source(src, start_index, end_index));\n+                return extract_source(src, start_index, end_index);\n             } else if let Some(src) = local_begin.sf.external_src.borrow().get_source() {\n-                return Ok(extract_source(src, start_index, end_index));\n+                return extract_source(src, start_index, end_index);\n             } else {\n                 return Err(SpanSnippetError::SourceNotAvailable {\n                     filename: local_begin.sf.name.clone()\n@@ -567,8 +567,9 @@ impl SourceMap {\n \n     /// Returns the source snippet as `String` corresponding to the given `Span`\n     pub fn span_to_snippet(&self, sp: Span) -> Result<String, SpanSnippetError> {\n-        self.span_to_source(sp, |src, start_index, end_index| src[start_index..end_index]\n-                                                                .to_string())\n+        self.span_to_source(sp, |src, start_index, end_index| src.get(start_index..end_index)\n+            .map(|s| s.to_string())\n+            .ok_or_else(|| SpanSnippetError::IllFormedSpan(sp)))\n     }\n \n     pub fn span_to_margin(&self, sp: Span) -> Option<usize> {\n@@ -582,7 +583,9 @@ impl SourceMap {\n \n     /// Returns the source snippet as `String` before the given `Span`\n     pub fn span_to_prev_source(&self, sp: Span) -> Result<String, SpanSnippetError> {\n-        self.span_to_source(sp, |src, start_index, _| src[..start_index].to_string())\n+        self.span_to_source(sp, |src, start_index, _| src.get(..start_index)\n+            .map(|s| s.to_string())\n+            .ok_or_else(|| SpanSnippetError::IllFormedSpan(sp)))\n     }\n \n     /// Extend the given `Span` to just after the previous occurrence of `c`. Return the same span"}, {"sha": "e83b0b4d6308da01bbdf473bdfd86488eaf7853d", "filename": "src/test/ui/suggestions/issue-61226.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/43f4990fc468ef922dbe2ab16b396fd51054a708/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61226.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43f4990fc468ef922dbe2ab16b396fd51054a708/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61226.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61226.rs?ref=43f4990fc468ef922dbe2ab16b396fd51054a708", "patch": "@@ -0,0 +1,5 @@\n+struct X {}\n+fn main() {\n+    vec![X]; //\u2026\n+    //~^ ERROR expected value, found struct `X`\n+}"}, {"sha": "6d7d98ac6a16bf64de285d90073f4a563e5239db", "filename": "src/test/ui/suggestions/issue-61226.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/43f4990fc468ef922dbe2ab16b396fd51054a708/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61226.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43f4990fc468ef922dbe2ab16b396fd51054a708/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61226.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61226.stderr?ref=43f4990fc468ef922dbe2ab16b396fd51054a708", "patch": "@@ -0,0 +1,9 @@\n+error[E0423]: expected value, found struct `X`\n+  --> $DIR/issue-61226.rs:3:10\n+   |\n+LL |     vec![X]; //\u2026\n+   |          ^ did you mean `X { /* fields */ }`?\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0423`."}]}