{"sha": "c5d2ed54a364776b1d3b7552bd474191df3619fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZDJlZDU0YTM2NDc3NmIxZDNiNzU1MmJkNDc0MTkxZGYzNjE5ZmI=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-10-01T06:10:10Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-10-01T19:42:30Z"}, "message": "Remove libuv, gyp\n\nThis commit removes the libuv and gyp submodules, as well as all build\ninfrastructure related to them.\n\nFor more context, see the [runtime removal\nRFC](https://github.com/rust-lang/rfcs/pull/230)\n\n[breaking-change]", "tree": {"sha": "8684c023bbcb725403bc149f7d0aa92e5a253291", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8684c023bbcb725403bc149f7d0aa92e5a253291"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5d2ed54a364776b1d3b7552bd474191df3619fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5d2ed54a364776b1d3b7552bd474191df3619fb", "html_url": "https://github.com/rust-lang/rust/commit/c5d2ed54a364776b1d3b7552bd474191df3619fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5d2ed54a364776b1d3b7552bd474191df3619fb/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "002643dcf0693de43801f500a689b84580c1b94e", "url": "https://api.github.com/repos/rust-lang/rust/commits/002643dcf0693de43801f500a689b84580c1b94e", "html_url": "https://github.com/rust-lang/rust/commit/002643dcf0693de43801f500a689b84580c1b94e"}], "stats": {"total": 215, "additions": 4, "deletions": 211}, "files": [{"sha": "987791ac9db5ffa9669465717082da697b84a1c6", "filename": ".gitmodules", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c5d2ed54a364776b1d3b7552bd474191df3619fb/.gitmodules", "raw_url": "https://github.com/rust-lang/rust/raw/c5d2ed54a364776b1d3b7552bd474191df3619fb/.gitmodules", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitmodules?ref=c5d2ed54a364776b1d3b7552bd474191df3619fb", "patch": "@@ -2,13 +2,6 @@\n \tpath = src/llvm\n \turl = https://github.com/rust-lang/llvm.git\n \tbranch = master\n-[submodule \"src/libuv\"]\n-\tpath = src/libuv\n-\turl = https://github.com/rust-lang/libuv.git\n-\tbranch = master\n-[submodule \"src/gyp\"]\n-\tpath = src/gyp\n-\turl = https://github.com/rust-lang/gyp.git\n [submodule \"src/compiler-rt\"]\n \tpath = src/compiler-rt\n \turl = https://github.com/rust-lang/compiler-rt.git"}, {"sha": "27bb172fa8514e38ced8304560a5a545a780ab56", "filename": "COPYRIGHT", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c5d2ed54a364776b1d3b7552bd474191df3619fb/COPYRIGHT", "raw_url": "https://github.com/rust-lang/rust/raw/c5d2ed54a364776b1d3b7552bd474191df3619fb/COPYRIGHT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/COPYRIGHT?ref=c5d2ed54a364776b1d3b7552bd474191df3619fb", "patch": "@@ -213,41 +213,6 @@ their own copyright notices and license terms:\n   as the Rust compiler or runtime libraries themselves).\n \n \n-* The libuv asynchronous I/O library. Code for this package\n-  is found in the src/libuv directory, within this\n-  distribution. This package is redistributed under the\n-  following terms, as noted in its source:\n-\n-    Copyright Joyent, Inc. and other Node contributors. All\n-    rights reserved.  Permission is hereby granted, free of\n-    charge, to any person obtaining a copy of this software\n-    and associated documentation files (the \"Software\"), to\n-    deal in the Software without restriction, including\n-    without limitation the rights to use, copy, modify,\n-    merge, publish, distribute, sublicense, and/or sell\n-    copies of the Software, and to permit persons to whom\n-    the Software is furnished to do so, subject to the\n-    following conditions:\n-\n-    The above copyright notice and this permission notice\n-    shall be included in all copies or substantial portions\n-    of the Software.\n-\n-    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n-    ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n-    TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n-    PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\n-    SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n-    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n-    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n-    IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n-    DEALINGS IN THE SOFTWARE.\n-\n-\n-* Additional libraries included in libuv carry separate\n-  BSD-compatible licenses. See src/libuv/LICENSE for\n-  details.\n-\n * The src/rt/miniz.c file, carrying an implementation of\n   RFC1950/RFC1951 DEFLATE, by Rich Geldreich\n   <richgel99@gmail.com>. All uses of this file are"}, {"sha": "35088064d15b1beb3c6320af614349762f333584", "filename": "configure", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c5d2ed54a364776b1d3b7552bd474191df3619fb/configure", "raw_url": "https://github.com/rust-lang/rust/raw/c5d2ed54a364776b1d3b7552bd474191df3619fb/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=c5d2ed54a364776b1d3b7552bd474191df3619fb", "patch": "@@ -438,7 +438,6 @@ valopt prefix \"/usr/local\" \"set installation prefix\"\n valopt local-rust-root \"/usr/local\" \"set prefix for local rust binary\"\n valopt llvm-root \"\" \"set LLVM root\"\n valopt jemalloc-root \"\" \"set directory where libjemalloc_pic.a is located\"\n-valopt libuv-root \"\" \"set directory where libuv.a is located\"\n valopt android-cross-path \"/opt/ndk_standalone\" \"Android NDK standalone path\"\n valopt mingw32-cross-path \"\" \"MinGW32 cross compiler path\"\n \n@@ -869,10 +868,6 @@ do\n   do\n     make_dir $t/rt/stage$s\n     make_dir $t/rt/jemalloc\n-    make_dir $t/rt/libuv\n-    make_dir $t/rt/libuv/src/ares\n-    make_dir $t/rt/libuv/src/eio\n-    make_dir $t/rt/libuv/src/ev\n     for i in                                          \\\n       isaac sync test \\\n       arch/i386 arch/x86_64 arch/arm arch/mips  \\\n@@ -952,10 +947,6 @@ then\n         msg \"git: submodule deinit src/jemalloc\"\n         \"${CFG_GIT}\" submodule deinit src/jemalloc\n     fi\n-    if [ ! -z \"${CFG_LIBUV_ROOT}\" ]; then\n-        msg \"git: submodule deinit src/libuv\"\n-        \"${CFG_GIT}\" submodule deinit src/libuv\n-    fi\n \n     msg \"git: submodule update\"\n     \"${CFG_GIT}\" submodule update\n@@ -1216,7 +1207,6 @@ putvar CFG_MINGW32_CROSS_PATH\n putvar CFG_MANDIR\n putvar CFG_DISABLE_INJECT_STD_VERSION\n putvar CFG_JEMALLOC_ROOT\n-putvar CFG_LIBUV_ROOT\n putvar CFG_DISABLE_JEMALLOC\n \n # Avoid spurious warnings from clang by feeding it original source on"}, {"sha": "93a04e4c93feace15e41609101d34f2d4a2d54ed", "filename": "mk/ctags.mk", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c5d2ed54a364776b1d3b7552bd474191df3619fb/mk%2Fctags.mk", "raw_url": "https://github.com/rust-lang/rust/raw/c5d2ed54a364776b1d3b7552bd474191df3619fb/mk%2Fctags.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fctags.mk?ref=c5d2ed54a364776b1d3b7552bd474191df3619fb", "patch": "@@ -16,13 +16,11 @@\n .PHONY: TAGS.emacs TAGS.vi\n \n # This is using a blacklist approach, probably more durable than a whitelist.\n-# We exclude: external dependencies (llvm, libuv, gyp, rt/{msvc,sundown,vg}),\n+# We exclude: external dependencies (llvm, rt/{msvc,sundown,vg}),\n # tests (compiletest, test) and a couple of other things (rt/arch, etc)\n CTAGS_LOCATIONS=$(patsubst ${CFG_SRC_DIR}src/llvm,, \\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/libuv,, \\\n \t\t\t\t$(patsubst ${CFG_SRC_DIR}src/compiletest,, \\\n \t\t\t\t$(patsubst ${CFG_SRC_DIR}src/test,, \\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/gyp,, \\\n \t\t\t\t$(patsubst ${CFG_SRC_DIR}src/etc,, \\\n \t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt,, \\\n \t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/arch,, \\"}, {"sha": "5f63baa980bdea044451ce4034d13457c16491eb", "filename": "mk/dist.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5d2ed54a364776b1d3b7552bd474191df3619fb/mk%2Fdist.mk", "raw_url": "https://github.com/rust-lang/rust/raw/c5d2ed54a364776b1d3b7552bd474191df3619fb/mk%2Fdist.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdist.mk?ref=c5d2ed54a364776b1d3b7552bd474191df3619fb", "patch": "@@ -35,7 +35,7 @@ LICENSE.txt: $(S)COPYRIGHT $(S)LICENSE-APACHE $(S)LICENSE-MIT\n \n PKG_TAR = dist/$(PKG_NAME).tar.gz\n \n-PKG_GITMODULES := $(S)src/libuv $(S)src/llvm $(S)src/gyp $(S)src/compiler-rt \\\n+PKG_GITMODULES := $(S)src/llvm $(S)src/compiler-rt \\\n \t\t  $(S)src/rt/hoedown $(S)src/jemalloc\n PKG_FILES := \\\n     $(S)COPYRIGHT                              \\"}, {"sha": "beefefcf5e5b9819cc10c84b820a2e1e0888071b", "filename": "mk/platform.mk", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c5d2ed54a364776b1d3b7552bd474191df3619fb/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/c5d2ed54a364776b1d3b7552bd474191df3619fb/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=c5d2ed54a364776b1d3b7552bd474191df3619fb", "patch": "@@ -118,7 +118,6 @@ CFG_GCCISH_POST_LIB_FLAGS_x86_64-unknown-linux-gnu := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_x86_64-unknown-linux-gnu := .linux.def\n CFG_LLC_FLAGS_x86_64-unknown-linux-gnu :=\n CFG_INSTALL_NAME_x86_64-unknown-linux-gnu =\n-CFG_LIBUV_LINK_FLAGS_x86_64-unknown-linux-gnu =\n CFG_EXE_SUFFIX_x86_64-unknown-linux-gnu =\n CFG_WINDOWSY_x86_64-unknown-linux-gnu :=\n CFG_UNIXY_x86_64-unknown-linux-gnu := 1\n@@ -146,7 +145,6 @@ CFG_GCCISH_POST_LIB_FLAGS_i686-unknown-linux-gnu := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_i686-unknown-linux-gnu := .linux.def\n CFG_LLC_FLAGS_i686-unknown-linux-gnu :=\n CFG_INSTALL_NAME_i686-unknown-linux-gnu =\n-CFG_LIBUV_LINK_FLAGS_i686-unknown-linux-gnu =\n CFG_EXE_SUFFIX_i686-unknown-linux-gnu =\n CFG_WINDOWSY_i686-unknown-linux-gnu :=\n CFG_UNIXY_i686-unknown-linux-gnu := 1\n@@ -180,7 +178,6 @@ CFG_GCCISH_POST_LIB_FLAGS_arm-apple-ios :=\n CFG_DEF_SUFFIX_arm-apple-ios := .darwin.def\n CFG_LLC_FLAGS_arm-apple-ios := -mattr=+vfp3,+v7,+thumb2,+neon -march=arm\n CFG_INSTALL_NAME_arm-apple-ios = -Wl,-install_name,@rpath/$(1)\n-CFG_LIBUV_LINK_FLAGS_arm-apple-ios =\n CFG_EXE_SUFFIX_arm-apple-ios :=\n CFG_WINDOWSY_arm-apple-ios :=\n CFG_UNIXY_arm-apple-ios := 1\n@@ -216,7 +213,6 @@ CFG_GCCISH_POST_LIB_FLAGS_i386-apple-ios =\n CFG_DEF_SUFFIX_i386-apple-ios = .darwin.def\n CFG_LLC_FLAGS_i386-apple-ios =\n CFG_INSTALL_NAME_i386-apple-ios = -Wl,-install_name,@rpath/$(1)\n-CFG_LIBUV_LINK_FLAGS_i386-apple-ios =\n CFG_EXE_SUFFIX_i386-apple-ios =\n CFG_WINDOWSY_i386-apple-ios =\n CFG_UNIXY_i386-apple-ios = 1\n@@ -245,7 +241,6 @@ CFG_GCCISH_POST_LIB_FLAGS_x86_64-apple-darwin :=\n CFG_DEF_SUFFIX_x86_64-apple-darwin := .darwin.def\n CFG_LLC_FLAGS_x86_64-apple-darwin :=\n CFG_INSTALL_NAME_x86_64-apple-darwin = -Wl,-install_name,@rpath/$(1)\n-CFG_LIBUV_LINK_FLAGS_x86_64-apple-darwin =\n CFG_EXE_SUFFIX_x86_64-apple-darwin :=\n CFG_WINDOWSY_x86_64-apple-darwin :=\n CFG_UNIXY_x86_64-apple-darwin := 1\n@@ -273,7 +268,6 @@ CFG_GCCISH_POST_LIB_FLAGS_i686-apple-darwin :=\n CFG_DEF_SUFFIX_i686-apple-darwin := .darwin.def\n CFG_LLC_FLAGS_i686-apple-darwin :=\n CFG_INSTALL_NAME_i686-apple-darwin = -Wl,-install_name,@rpath/$(1)\n-CFG_LIBUV_LINK_FLAGS_i686-apple-darwin =\n CFG_EXE_SUFFIX_i686-apple-darwin :=\n CFG_WINDOWSY_i686-apple-darwin :=\n CFG_UNIXY_i686-apple-darwin := 1\n@@ -301,7 +295,6 @@ CFG_GCCISH_POST_LIB_FLAGS_arm-linux-androideabi := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_arm-linux-androideabi := .android.def\n CFG_LLC_FLAGS_arm-linux-androideabi :=\n CFG_INSTALL_NAME_arm-linux-androideabi =\n-CFG_LIBUV_LINK_FLAGS_arm-linux-androideabi =\n CFG_EXE_SUFFIX_arm-linux-androideabi :=\n CFG_WINDOWSY_arm-linux-androideabi :=\n CFG_UNIXY_arm-linux-androideabi := 1\n@@ -332,7 +325,6 @@ CFG_GCCISH_POST_LIB_FLAGS_arm-unknown-linux-gnueabihf := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_arm-unknown-linux-gnueabihf := .linux.def\n CFG_LLC_FLAGS_arm-unknown-linux-gnueabihf :=\n CFG_INSTALL_NAME_ar,-unknown-linux-gnueabihf =\n-CFG_LIBUV_LINK_FLAGS_arm-unknown-linux-gnueabihf =\n CFG_EXE_SUFFIX_arm-unknown-linux-gnueabihf :=\n CFG_WINDOWSY_arm-unknown-linux-gnueabihf :=\n CFG_UNIXY_arm-unknown-linux-gnueabihf := 1\n@@ -363,7 +355,6 @@ CFG_GCCISH_POST_LIB_FLAGS_arm-unknown-linux-gnueabi := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_arm-unknown-linux-gnueabi := .linux.def\n CFG_LLC_FLAGS_arm-unknown-linux-gnueabi :=\n CFG_INSTALL_NAME_arm-unknown-linux-gnueabi =\n-CFG_LIBUV_LINK_FLAGS_arm-unknown-linux-gnueabi =\n CFG_EXE_SUFFIX_arm-unknown-linux-gnueabi :=\n CFG_WINDOWSY_arm-unknown-linux-gnueabi :=\n CFG_UNIXY_arm-unknown-linux-gnueabi := 1\n@@ -393,7 +384,6 @@ CFG_GCCISH_POST_LIB_FLAGS_mipsel-linux := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_mipsel-linux := .linux.def\n CFG_LLC_FLAGS_mipsel-linux :=\n CFG_INSTALL_NAME_mipsel-linux =\n-CFG_LIBUV_LINK_FLAGS_mipsel-linux =\n CFG_EXE_SUFFIX_mipsel-linux :=\n CFG_WINDOWSY_mipsel-linux :=\n CFG_UNIXY_mipsel-linux := 1\n@@ -423,7 +413,6 @@ CFG_GCCISH_POST_LIB_FLAGS_mips-unknown-linux-gnu := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_mips-unknown-linux-gnu := .linux.def\n CFG_LLC_FLAGS_mips-unknown-linux-gnu :=\n CFG_INSTALL_NAME_mips-unknown-linux-gnu =\n-CFG_LIBUV_LINK_FLAGS_mips-unknown-linux-gnu =\n CFG_EXE_SUFFIX_mips-unknown-linux-gnu :=\n CFG_WINDOWSY_mips-unknown-linux-gnu :=\n CFG_UNIXY_mips-unknown-linux-gnu := 1\n@@ -452,7 +441,6 @@ CFG_GCCISH_POST_LIB_FLAGS_i586-mingw32msvc :=\n CFG_DEF_SUFFIX_i586-mingw32msvc := .mingw32.def\n CFG_LLC_FLAGS_i586-mingw32msvc :=\n CFG_INSTALL_NAME_i586-mingw32msvc =\n-CFG_LIBUV_LINK_FLAGS_i586-mingw32msvc := -L$(CFG_MINGW32_CROSS_PATH)/i586-mingw32msvc/lib -lws2_32 -lpsapi -liphlpapi\n CFG_EXE_SUFFIX_i586-mingw32msvc := .exe\n CFG_WINDOWSY_i586-mingw32msvc := 1\n CFG_UNIXY_i586-mingw32msvc :=\n@@ -483,7 +471,6 @@ CFG_GCCISH_POST_LIB_FLAGS_i686-w64-mingw32 :=\n CFG_DEF_SUFFIX_i686-w64-mingw32 := .mingw32.def\n CFG_LLC_FLAGS_i686-w64-mingw32 :=\n CFG_INSTALL_NAME_i686-w64-mingw32 =\n-CFG_LIBUV_LINK_FLAGS_i686-w64-mingw32 := -lws2_32 -lpsapi -liphlpapi\n CFG_EXE_SUFFIX_i686-w64-mingw32 := .exe\n CFG_WINDOWSY_i686-w64-mingw32 := 1\n CFG_UNIXY_i686-w64-mingw32 :=\n@@ -515,7 +502,6 @@ CFG_GCCISH_POST_LIB_FLAGS_x86_64-w64-mingw32 :=\n CFG_DEF_SUFFIX_x86_64-w64-mingw32 := .mingw32.def\n CFG_LLC_FLAGS_x86_64-w64-mingw32 :=\n CFG_INSTALL_NAME_x86_64-w64-mingw32 =\n-CFG_LIBUV_LINK_FLAGS_x86_64-w64-mingw32 := -lws2_32 -lpsapi -liphlpapi\n CFG_EXE_SUFFIX_x86_64-w64-mingw32 := .exe\n CFG_WINDOWSY_x86_64-w64-mingw32 := 1\n CFG_UNIXY_x86_64-w64-mingw32 :=\n@@ -543,7 +529,6 @@ CFG_GCCISH_POST_LIB_FLAGS_x86_64-unknown-freebsd := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_x86_64-unknown-freebsd := .bsd.def\n CFG_LLC_FLAGS_x86_64-unknown-freebsd :=\n CFG_INSTALL_NAME_x86_64-unknown-freebsd =\n-CFG_LIBUV_LINK_FLAGS_x86_64-unknown-freebsd := -pthread  -lkvm\n CFG_EXE_SUFFIX_x86_64-unknown-freebsd :=\n CFG_WINDOWSY_x86_64-unknown-freebsd :=\n CFG_UNIXY_x86_64-unknown-freebsd := 1\n@@ -570,7 +555,6 @@ CFG_GCCISH_POST_LIB_FLAGS_x86_64-unknown-dragonfly := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_x86_64-unknown-dragonfly := .bsd.def\n CFG_LLC_FLAGS_x86_64-unknown-dragonfly :=\n CFG_INSTALL_NAME_x86_64-unknown-dragonfly =\n-CFG_LIBUV_LINK_FLAGS_x86_64-unknown-dragonfly := -pthread  -lkvm\n CFG_EXE_SUFFIX_x86_64-unknown-dragonfly :=\n CFG_WINDOWSY_x86_64-unknown-dragonfly :=\n CFG_UNIXY_x86_64-unknown-dragonfly := 1"}, {"sha": "1d800b54a1ff6699d3e535261960e5a00610f384", "filename": "mk/reconfig.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5d2ed54a364776b1d3b7552bd474191df3619fb/mk%2Freconfig.mk", "raw_url": "https://github.com/rust-lang/rust/raw/c5d2ed54a364776b1d3b7552bd474191df3619fb/mk%2Freconfig.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Freconfig.mk?ref=c5d2ed54a364776b1d3b7552bd474191df3619fb", "patch": "@@ -16,7 +16,7 @@ rwildcard=$(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2) \\\n ifndef CFG_DISABLE_MANAGE_SUBMODULES\n # This is a pretty expensive operation but I don't see any way to avoid it\n # NB: This only looks for '+' status (wrong commit checked out), not '-' status\n-# (nothing checked out at all).  `./configure --{llvm,jemalloc,libuv}-root`\n+# (nothing checked out at all).  `./configure --{llvm,jemalloc}-root`\n # will explicitly deinitialize the corresponding submodules, and we don't\n # want to force constant rebuilds in that case.\n NEED_GIT_RECONFIG=$(shell cd \"$(CFG_SRC_DIR)\" && \"$(CFG_GIT)\" submodule status | grep -c '^+')"}, {"sha": "6dcac0b95e85e3f25b0aa6b4e8f274f6fd4649a0", "filename": "mk/rt.mk", "status": "modified", "additions": 1, "deletions": 136, "changes": 137, "blob_url": "https://github.com/rust-lang/rust/blob/c5d2ed54a364776b1d3b7552bd474191df3619fb/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/c5d2ed54a364776b1d3b7552bd474191df3619fb/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=c5d2ed54a364776b1d3b7552bd474191df3619fb", "patch": "@@ -83,7 +83,7 @@ $$(RT_OUTPUT_DIR_$(1))/%.o: $(S)src/rt/%.c $$(MKFILE_DEPS)\n \t@$$(call E, compile: $$@)\n \t$$(Q)$$(call CFG_COMPILE_C_$(1), $$@, \\\n \t\t-I $$(S)src/rt/hoedown/src \\\n-\t\t-I $$(S)src/libuv/include -I $$(S)src/rt \\\n+\t\t-I $$(S)src/rt \\\n                  $$(RUNTIME_CFLAGS_$(1))) $$<\n \n $$(RT_OUTPUT_DIR_$(1))/%.o: $(S)src/rt/%.S $$(MKFILE_DEPS) \\\n@@ -129,155 +129,20 @@ $(foreach lib,$(NATIVE_LIBS), \\\n # in the correct location.\n ################################################################################\n \n-################################################################################\n-# libuv\n-################################################################################\n-\n-define DEF_LIBUV_ARCH_VAR\n-  LIBUV_ARCH_$(1) = $$(subst i386,ia32,$$(subst x86_64,x64,$$(HOST_$(1))))\n-endef\n-$(foreach t,$(CFG_TARGET),$(eval $(call DEF_LIBUV_ARCH_VAR,$(t))))\n-\n-ifdef CFG_ENABLE_FAST_MAKE\n-LIBUV_DEPS := $(S)/.gitmodules\n-else\n-LIBUV_DEPS := $(wildcard \\\n-              $(S)src/libuv/* \\\n-              $(S)src/libuv/*/* \\\n-              $(S)src/libuv/*/*/* \\\n-              $(S)src/libuv/*/*/*/*)\n-endif\n-\n-LIBUV_NO_LOAD = run-benchmarks.target.mk run-tests.target.mk \\\n-\t\tuv_dtrace_header.target.mk uv_dtrace_provider.target.mk\n-\n-export PYTHONPATH := $(PYTHONPATH):$(S)src/gyp/pylib\n-\n define DEF_THIRD_PARTY_TARGETS\n \n # $(1) is the target triple\n \n ifeq ($$(CFG_WINDOWSY_$(1)), 1)\n-  LIBUV_OSTYPE_$(1) := win\n   # This isn't necessarily a desired option, but it's harmless and works around\n   # what appears to be a mingw-w64 bug.\n   #\n   # https://sourceforge.net/p/mingw-w64/bugs/395/\n   JEMALLOC_ARGS_$(1) := --enable-lazy-lock\n-else ifeq ($(OSTYPE_$(1)), apple-darwin)\n-  LIBUV_OSTYPE_$(1) := mac\n else ifeq ($(OSTYPE_$(1)), apple-ios)\n-  LIBUV_OSTYPE_$(1) := ios\n   JEMALLOC_ARGS_$(1) := --disable-tls\n-else ifeq ($(OSTYPE_$(1)), unknown-freebsd)\n-  LIBUV_OSTYPE_$(1) := freebsd\n-else ifeq ($(OSTYPE_$(1)), unknown-dragonfly)\n-  LIBUV_OSTYPE_$(1) := freebsd\n-  # required on DragonFly, otherwise gyp fails with a Python exception\n-  LIBUV_GYP_ARGS_$(1) := --no-parallel\n else ifeq ($(OSTYPE_$(1)), linux-androideabi)\n-  LIBUV_OSTYPE_$(1) := android\n-  LIBUV_ARGS_$(1) := PLATFORM=android host=android OS=linux\n   JEMALLOC_ARGS_$(1) := --disable-tls\n-else\n-  LIBUV_OSTYPE_$(1) := linux\n-endif\n-\n-LIBUV_NAME_$(1) := $$(call CFG_STATIC_LIB_NAME_$(1),uv)\n-LIBUV_DIR_$(1) := $$(RT_OUTPUT_DIR_$(1))/libuv\n-LIBUV_LIB_$(1) := $$(RT_OUTPUT_DIR_$(1))/$$(LIBUV_NAME_$(1))\n-\n-LIBUV_MAKEFILE_$(1) := $$(CFG_BUILD_DIR)$$(RT_OUTPUT_DIR_$(1))/libuv/Makefile\n-LIBUV_BUILD_DIR_$(1) := $$(CFG_BUILD_DIR)$$(RT_OUTPUT_DIR_$(1))/libuv\n-LIBUV_XCODEPROJ_$(1) := $$(LIBUV_BUILD_DIR_$(1))/uv.xcodeproj\n-\n-LIBUV_STAMP_$(1) = $$(LIBUV_DIR_$(1))/libuv-auto-clean-stamp\n-\n-$$(LIBUV_STAMP_$(1)): $(S)src/rt/libuv-auto-clean-trigger\n-\t$$(Q)rm -rf $$(LIBUV_DIR_$(1))\n-\t$$(Q)mkdir -p $$(@D)\n-\ttouch $$@\n-\n-# libuv triggers a few warnings on some platforms\n-LIBUV_CFLAGS_$(1) := $(subst -Werror,,$(CFG_GCCISH_CFLAGS_$(1)))\n-\n-$$(LIBUV_MAKEFILE_$(1)): $$(LIBUV_DEPS) $$(MKFILE_DEPS) $$(LIBUV_STAMP_$(1))\n-\t(cd $(S)src/libuv/ && \\\n-\tCC=\"$$(CC_$(1))\" \\\n-\tCXX=\"$$(CXX_$(1))\" \\\n-\tAR=\"$$(AR_$(1))\" \\\n-\t $$(CFG_PYTHON) ./gyp_uv.py -f make -Dtarget_arch=$$(LIBUV_ARCH_$(1)) \\\n-\t   -D ninja \\\n-\t   -DOS=$$(LIBUV_OSTYPE_$(1)) \\\n-\t   -Goutput_dir=$$(@D) $$(LIBUV_GYP_ARGS_$(1)) --generator-output $$(@D))\n-\ttouch $$@\n-\n-# Windows has a completely different build system for libuv because of mingw. In\n-# theory when we support msvc then we should be using gyp's msvc output instead\n-# of mingw's makefile for windows\n-ifdef CFG_WINDOWSY_$(1)\n-LIBUV_LOCAL_$(1) := $$(S)src/libuv/libuv.a\n-$$(LIBUV_LOCAL_$(1)): $$(LIBUV_DEPS) $$(MKFILE_DEPS)\n-\t$$(Q)$$(MAKE) -C $$(S)src/libuv -f Makefile.mingw \\\n-\t\tLDFLAGS=\"$$(CFG_GCCISH_LINK_FLAGS_$(1))\" \\\n-\t\tCC=\"$$(CC_$(1)) $$(LIBUV_CFLAGS_$(1)) $$(SNAP_DEFINES)\" \\\n-\t\tCXX=\"$$(CXX_$(1))\" \\\n-\t\tAR=\"$$(AR_$(1))\" \\\n-\t\tV=$$(VERBOSE)\n-else ifeq ($(OSTYPE_$(1)), apple-ios) # iOS\n-$$(LIBUV_XCODEPROJ_$(1)): $$(LIBUV_DEPS) $$(MKFILE_DEPS) $$(LIBUV_STAMP_$(1))\n-\tcp -rf $(S)src/libuv/ $$(LIBUV_BUILD_DIR_$(1))\n-\t(cd $$(LIBUV_BUILD_DIR_$(1)) && \\\n-\tCC=\"$$(CC_$(1))\" \\\n-\tCXX=\"$$(CXX_$(1))\" \\\n-\tAR=\"$$(AR_$(1))\" \\\n-\t $$(CFG_PYTHON) ./gyp_uv.py -f xcode \\\n-\t   -D ninja \\\n-\t   -R libuv)\n-\ttouch $$@\n-\n-LIBUV_XCODE_OUT_LIB_$(1) := $$(LIBUV_BUILD_DIR_$(1))/build/Release-$$(CFG_SDK_NAME_$(1))/libuv.a\n-\n-$$(LIBUV_LIB_$(1)): $$(LIBUV_XCODE_OUT_LIB_$(1)) $$(MKFILE_DEPS)\n-\t$$(Q)cp $$< $$@\n-$$(LIBUV_XCODE_OUT_LIB_$(1)): $$(LIBUV_DEPS) $$(LIBUV_XCODEPROJ_$(1)) \\\n-\t\t\t\t    $$(MKFILE_DEPS)\n-\t$$(Q)xcodebuild -project $$(LIBUV_BUILD_DIR_$(1))/uv.xcodeproj \\\n-\t\tCFLAGS=\"$$(LIBUV_CFLAGS_$(1)) $$(SNAP_DEFINES)\" \\\n-\t\tLDFLAGS=\"$$(CFG_GCCISH_LINK_FLAGS_$(1))\" \\\n-\t\t$$(LIBUV_ARGS_$(1)) \\\n-\t\tV=$$(VERBOSE) \\\n-\t\t-configuration Release \\\n-\t\t-sdk \"$$(CFG_SDK_NAME_$(1))\" \\\n-\t\tARCHS=\"$$(CFG_SDK_ARCHS_$(1))\"\n-\t$$(Q)touch $$@\n-else\n-LIBUV_LOCAL_$(1) := $$(LIBUV_DIR_$(1))/Release/libuv.a\n-$$(LIBUV_LOCAL_$(1)): $$(LIBUV_DEPS) $$(LIBUV_MAKEFILE_$(1)) $$(MKFILE_DEPS)\n-\t$$(Q)$$(MAKE) -C $$(LIBUV_DIR_$(1)) \\\n-\t\tCFLAGS=\"$$(LIBUV_CFLAGS_$(1)) $$(SNAP_DEFINES)\" \\\n-\t\tLDFLAGS=\"$$(CFG_GCCISH_LINK_FLAGS_$(1))\" \\\n-\t\tCC=\"$$(CC_$(1))\" \\\n-\t\tCXX=\"$$(CXX_$(1))\" \\\n-\t\tAR=\"$$(AR_$(1))\" \\\n-\t\t$$(LIBUV_ARGS_$(1)) \\\n-\t\tBUILDTYPE=Release \\\n-\t\tNO_LOAD=\"$$(LIBUV_NO_LOAD)\" \\\n-\t\tV=$$(VERBOSE)\n-\t$$(Q)touch $$@\n-endif\n-\n-ifeq ($(1),$$(CFG_BUILD))\n-ifneq ($$(CFG_LIBUV_ROOT),)\n-$$(LIBUV_LIB_$(1)): $$(CFG_LIBUV_ROOT)/libuv.a\n-\t$$(Q)cp $$< $$@\n-else\n-$$(LIBUV_LIB_$(1)): $$(LIBUV_LOCAL_$(1))\n-\t$$(Q)cp $$< $$@\n-endif\n-else\n-$$(LIBUV_LIB_$(1)): $$(LIBUV_LOCAL_$(1))\n-\t$$(Q)cp $$< $$@\n endif\n \n ################################################################################"}, {"sha": "1e46da1000bc29679ab4cebf3c1034cb7d6f4487", "filename": "src/gyp", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgyp?ref=002643dcf0693de43801f500a689b84580c1b94e", "patch": "@@ -1 +0,0 @@\n-Subproject commit 1e46da1000bc29679ab4cebf3c1034cb7d6f4487"}, {"sha": "dec0561d198d86a274b1067b53b64fea3c659202", "filename": "src/libuv", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibuv?ref=002643dcf0693de43801f500a689b84580c1b94e", "patch": "@@ -1 +0,0 @@\n-Subproject commit dec0561d198d86a274b1067b53b64fea3c659202"}]}