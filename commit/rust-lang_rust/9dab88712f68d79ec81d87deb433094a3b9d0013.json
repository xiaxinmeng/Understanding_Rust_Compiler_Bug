{"sha": "9dab88712f68d79ec81d87deb433094a3b9d0013", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkYWI4ODcxMmY2OGQ3OWVjODFkODdkZWI0MzMwOTRhM2I5ZDAwMTM=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-10-26T15:29:27Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-10-27T15:15:50Z"}, "message": "Show a note when closure field is called as method\n\nCloses https://github.com/rust-lang/rust/issues/18343", "tree": {"sha": "5182840ab4f98c254acee41ff418f085a35defae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5182840ab4f98c254acee41ff418f085a35defae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dab88712f68d79ec81d87deb433094a3b9d0013", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dab88712f68d79ec81d87deb433094a3b9d0013", "html_url": "https://github.com/rust-lang/rust/commit/9dab88712f68d79ec81d87deb433094a3b9d0013", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dab88712f68d79ec81d87deb433094a3b9d0013/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a93e9c20f2a79eacad21592d0eb58e1a89648629", "url": "https://api.github.com/repos/rust-lang/rust/commits/a93e9c20f2a79eacad21592d0eb58e1a89648629", "html_url": "https://github.com/rust-lang/rust/commit/a93e9c20f2a79eacad21592d0eb58e1a89648629"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "53a301cc94bc34bb9b81c97a5e80a88e4336f116", "filename": "src/librustc/middle/typeck/check/method.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9dab88712f68d79ec81d87deb433094a3b9d0013/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dab88712f68d79ec81d87deb433094a3b9d0013/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=9dab88712f68d79ec81d87deb433094a3b9d0013", "patch": "@@ -223,17 +223,37 @@ pub fn report_error(fcx: &FnCtxt,\n {\n     match error {\n         NoMatch(static_sources) => {\n+            let cx = fcx.tcx();\n+            let method_ustring = method_name.user_string(cx);\n+\n+            // True if the type is a struct and contains a field with\n+            // the same name as the not-found method\n+            let is_field = match ty::get(rcvr_ty).sty {\n+                ty_struct(did, _) =>\n+                    ty::lookup_struct_fields(cx, did)\n+                        .iter()\n+                        .any(|f| f.name.user_string(cx) == method_ustring),\n+                _ => false\n+            };\n+\n             fcx.type_error_message(\n                 span,\n                 |actual| {\n                     format!(\"type `{}` does not implement any \\\n                              method in scope named `{}`\",\n                             actual,\n-                            method_name.user_string(fcx.tcx()))\n+                            method_ustring)\n                 },\n                 rcvr_ty,\n                 None);\n \n+            // If the method has the name of a field, give a help note\n+            if is_field {\n+                cx.sess.span_note(span,\n+                    format!(\"use `(s.{0})(...)` if you meant to call the \\\n+                            function stored in the `{0}` field\", method_ustring).as_slice());\n+            }\n+\n             if static_sources.len() > 0 {\n                 fcx.tcx().sess.fileline_note(\n                     span,"}]}