{"sha": "5786bbddc670597af286381b27fbb9f563cf7dc7", "node_id": "C_kwDOAAsO6NoAKDU3ODZiYmRkYzY3MDU5N2FmMjg2MzgxYjI3ZmJiOWY1NjNjZjdkYzc", "commit": {"author": {"name": "david-perez", "email": "d@vidp.dev", "date": "2022-01-10T22:18:34Z"}, "committer": {"name": "david-perez", "email": "d@vidp.dev", "date": "2022-01-10T22:18:34Z"}, "message": "Eliminate \"boxed\" wording in `std::error::Error` documentation\n\nIn commit 29403ee, documentation for the methods on `std::any::Any` was\nmodified so that they referred to the concrete value behind the trait\nobject as the \"inner\" value. This is a more accurate wording than\n\"boxed\": while putting trait objects inside boxes is arguably the most\ncommon use, they can also be placed behind other pointer types like\n`&mut` or `std::sync::Arc`.\n\nThis commit does the same documentation changes for `std::error::Error`.", "tree": {"sha": "640b0b4e5b077c9ee49d529d28bb90db0eb2aaca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/640b0b4e5b077c9ee49d529d28bb90db0eb2aaca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5786bbddc670597af286381b27fbb9f563cf7dc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5786bbddc670597af286381b27fbb9f563cf7dc7", "html_url": "https://github.com/rust-lang/rust/commit/5786bbddc670597af286381b27fbb9f563cf7dc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5786bbddc670597af286381b27fbb9f563cf7dc7/comments", "author": {"login": "david-perez", "id": 6341745, "node_id": "MDQ6VXNlcjYzNDE3NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6341745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-perez", "html_url": "https://github.com/david-perez", "followers_url": "https://api.github.com/users/david-perez/followers", "following_url": "https://api.github.com/users/david-perez/following{/other_user}", "gists_url": "https://api.github.com/users/david-perez/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-perez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-perez/subscriptions", "organizations_url": "https://api.github.com/users/david-perez/orgs", "repos_url": "https://api.github.com/users/david-perez/repos", "events_url": "https://api.github.com/users/david-perez/events{/privacy}", "received_events_url": "https://api.github.com/users/david-perez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "david-perez", "id": 6341745, "node_id": "MDQ6VXNlcjYzNDE3NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6341745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-perez", "html_url": "https://github.com/david-perez", "followers_url": "https://api.github.com/users/david-perez/followers", "following_url": "https://api.github.com/users/david-perez/following{/other_user}", "gists_url": "https://api.github.com/users/david-perez/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-perez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-perez/subscriptions", "organizations_url": "https://api.github.com/users/david-perez/orgs", "repos_url": "https://api.github.com/users/david-perez/repos", "events_url": "https://api.github.com/users/david-perez/events{/privacy}", "received_events_url": "https://api.github.com/users/david-perez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89b9f7b284aacc5f8613438b80e4dd7bdd10549e", "url": "https://api.github.com/repos/rust-lang/rust/commits/89b9f7b284aacc5f8613438b80e4dd7bdd10549e", "html_url": "https://github.com/rust-lang/rust/commit/89b9f7b284aacc5f8613438b80e4dd7bdd10549e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "526a1b92b19e295f7ad7ea1bd61fc59c15da36b3", "filename": "library/std/src/error.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5786bbddc670597af286381b27fbb9f563cf7dc7/library%2Fstd%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5786bbddc670597af286381b27fbb9f563cf7dc7/library%2Fstd%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror.rs?ref=5786bbddc670597af286381b27fbb9f563cf7dc7", "patch": "@@ -606,21 +606,21 @@ impl Error for time::FromSecsError {}\n \n // Copied from `any.rs`.\n impl dyn Error + 'static {\n-    /// Returns `true` if the boxed type is the same as `T`\n+    /// Returns `true` if the inner type is the same as `T`.\n     #[stable(feature = \"error_downcast\", since = \"1.3.0\")]\n     #[inline]\n     pub fn is<T: Error + 'static>(&self) -> bool {\n         // Get `TypeId` of the type this function is instantiated with.\n         let t = TypeId::of::<T>();\n \n-        // Get `TypeId` of the type in the trait object.\n-        let boxed = self.type_id(private::Internal);\n+        // Get `TypeId` of the type in the trait object (`self`).\n+        let concrete = self.type_id(private::Internal);\n \n         // Compare both `TypeId`s on equality.\n-        t == boxed\n+        t == concrete\n     }\n \n-    /// Returns some reference to the boxed value if it is of type `T`, or\n+    /// Returns some reference to the inner value if it is of type `T`, or\n     /// `None` if it isn't.\n     #[stable(feature = \"error_downcast\", since = \"1.3.0\")]\n     #[inline]\n@@ -632,7 +632,7 @@ impl dyn Error + 'static {\n         }\n     }\n \n-    /// Returns some mutable reference to the boxed value if it is of type `T`, or\n+    /// Returns some mutable reference to the inner value if it is of type `T`, or\n     /// `None` if it isn't.\n     #[stable(feature = \"error_downcast\", since = \"1.3.0\")]\n     #[inline]"}]}