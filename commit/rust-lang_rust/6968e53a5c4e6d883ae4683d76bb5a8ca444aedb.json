{"sha": "6968e53a5c4e6d883ae4683d76bb5a8ca444aedb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NjhlNTNhNWM0ZTZkODgzYWU0NjgzZDc2YmI1YThjYTQ0NGFlZGI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-06T07:36:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-06T07:36:42Z"}, "message": "Rollup merge of #64161 - estebank:point-variant, r=Centril\n\nPoint at variant on pattern field count mismatch", "tree": {"sha": "1fb8b3260deeb9e108b9401d4d6cc23388f609e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fb8b3260deeb9e108b9401d4d6cc23388f609e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdcgyKCRBK7hj4Ov3rIwAAdHIIAH9kSa3ASHSBluXAuiCsL1Nb\n1CprGz1RDn9wI6Jm2cTD8EZ1rZvH40l+m1UlztvhhWq8SHG062ixSqCPuASHc5JJ\nl4gDPv5mgX7UnAynyj69zaxBi5D/GcrUPRJ+wDHnoAIt6w8d/43i+fd0hNyMl8+i\nXYuXZuSbCSr/x9FRuJNpw8BM3qXG/Y46BG1IGH9dcDyqMXsSKfWHcPU7Zbb1Sovd\njMQvK83BmzQ7JUXBLW/BLA9EZz9kvD0gwHe4+jy4EWU2u5/8XCTZupatmvYf97sR\nd/wPkN6GBs7ZXHrhj88RoluF51k6/MIhnEE3oSZVu4NTYRDhmt4A57CqeoXnhK0=\n=KKw7\n-----END PGP SIGNATURE-----\n", "payload": "tree 1fb8b3260deeb9e108b9401d4d6cc23388f609e2\nparent 37a022ee43c95e815c458844b223ad73c11715d8\nparent 24d0a01b75c034d52bdca10cca08e69538e871ca\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567755402 +0200\ncommitter GitHub <noreply@github.com> 1567755402 +0200\n\nRollup merge of #64161 - estebank:point-variant, r=Centril\n\nPoint at variant on pattern field count mismatch\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb", "html_url": "https://github.com/rust-lang/rust/commit/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37a022ee43c95e815c458844b223ad73c11715d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/37a022ee43c95e815c458844b223ad73c11715d8", "html_url": "https://github.com/rust-lang/rust/commit/37a022ee43c95e815c458844b223ad73c11715d8"}, {"sha": "24d0a01b75c034d52bdca10cca08e69538e871ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/24d0a01b75c034d52bdca10cca08e69538e871ca", "html_url": "https://github.com/rust-lang/rust/commit/24d0a01b75c034d52bdca10cca08e69538e871ca"}], "stats": {"total": 57, "additions": 48, "deletions": 9}, "files": [{"sha": "24d0659391b040146b17adaae5e67f9a3671f267", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 27, "deletions": 9, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=6968e53a5c4e6d883ae4683d76bb5a8ca444aedb", "patch": "@@ -675,21 +675,39 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 self.tcx.check_stability(variant.fields[i].did, Some(pat.hir_id), subpat.span);\n             }\n         } else {\n-            let subpats_ending = if subpats.len() == 1 { \"\" } else { \"s\" };\n-            let fields_ending = if variant.fields.len() == 1 { \"\" } else { \"s\" };\n-            struct_span_err!(tcx.sess, pat.span, E0023,\n-                             \"this pattern has {} field{}, but the corresponding {} has {} field{}\",\n-                             subpats.len(), subpats_ending, res.descr(),\n-                             variant.fields.len(),  fields_ending)\n-                .span_label(pat.span, format!(\"expected {} field{}, found {}\",\n-                                              variant.fields.len(), fields_ending, subpats.len()))\n-                .emit();\n+            // Pattern has wrong number of fields.\n+            self.e0023(pat.span, res, &subpats, &variant.fields);\n             on_error();\n             return tcx.types.err;\n         }\n         pat_ty\n     }\n \n+    fn e0023(&self, pat_span: Span, res: Res, subpats: &'tcx [P<Pat>], fields: &[ty::FieldDef]) {\n+        let subpats_ending = if subpats.len() == 1 { \"\" } else { \"s\" };\n+        let fields_ending = if fields.len() == 1 { \"\" } else { \"s\" };\n+        let res_span = self.tcx.def_span(res.def_id());\n+        struct_span_err!(\n+            self.tcx.sess,\n+            pat_span,\n+            E0023,\n+            \"this pattern has {} field{}, but the corresponding {} has {} field{}\",\n+            subpats.len(),\n+            subpats_ending,\n+            res.descr(),\n+            fields.len(),\n+            fields_ending,\n+        )\n+            .span_label(pat_span, format!(\n+                \"expected {} field{}, found {}\",\n+                fields.len(),\n+                fields_ending,\n+                subpats.len(),\n+            ))\n+            .span_label(res_span, format!(\"{} defined here\", res.descr()))\n+            .emit();\n+    }\n+\n     fn check_pat_tuple(\n         &self,\n         span: Span,"}, {"sha": "d04e494c2585c0e8b342b1d5cea5b1e364bd61d9", "filename": "src/test/ui/error-codes/E0023.stderr", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr?ref=6968e53a5c4e6d883ae4683d76bb5a8ca444aedb", "patch": "@@ -1,18 +1,27 @@\n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n   --> $DIR/E0023.rs:10:9\n    |\n+LL |     Apple(String, String),\n+   |     --------------------- tuple variant defined here\n+...\n LL |         Fruit::Apple(a) => {},\n    |         ^^^^^^^^^^^^^^^ expected 2 fields, found 1\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n   --> $DIR/E0023.rs:11:9\n    |\n+LL |     Apple(String, String),\n+   |     --------------------- tuple variant defined here\n+...\n LL |         Fruit::Apple(a, b, c) => {},\n    |         ^^^^^^^^^^^^^^^^^^^^^ expected 2 fields, found 3\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field\n   --> $DIR/E0023.rs:12:9\n    |\n+LL |     Pear(u32),\n+   |     --------- tuple variant defined here\n+...\n LL |         Fruit::Pear(1, 2) => {},\n    |         ^^^^^^^^^^^^^^^^^ expected 1 field, found 2\n "}, {"sha": "c2298d6fbbf02a34dc50bc17df8b46781a5f3669", "filename": "src/test/ui/match/match-pattern-field-mismatch.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr?ref=6968e53a5c4e6d883ae4683d76bb5a8ca444aedb", "patch": "@@ -1,6 +1,9 @@\n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 3 fields\n   --> $DIR/match-pattern-field-mismatch.rs:10:11\n    |\n+LL |         Rgb(usize, usize, usize),\n+   |         ------------------------ tuple variant defined here\n+...\n LL |           Color::Rgb(_, _) => { }\n    |           ^^^^^^^^^^^^^^^^ expected 3 fields, found 2\n "}, {"sha": "e64b6efb08da8fabcdd34ae064e9d05608b8faef", "filename": "src/test/ui/pattern/pat-tuple-overfield.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr?ref=6968e53a5c4e6d883ae4683d76bb5a8ca444aedb", "patch": "@@ -19,12 +19,18 @@ LL |         (1, 2, .., 3, 4) => {}\n error[E0023]: this pattern has 4 fields, but the corresponding tuple struct has 3 fields\n   --> $DIR/pat-tuple-overfield.rs:10:9\n    |\n+LL | struct S(u8, u8, u8);\n+   | --------------------- tuple struct defined here\n+...\n LL |         S(1, 2, 3, 4) => {}\n    |         ^^^^^^^^^^^^^ expected 3 fields, found 4\n \n error[E0023]: this pattern has 4 fields, but the corresponding tuple struct has 3 fields\n   --> $DIR/pat-tuple-overfield.rs:12:9\n    |\n+LL | struct S(u8, u8, u8);\n+   | --------------------- tuple struct defined here\n+...\n LL |         S(1, 2, .., 3, 4) => {}\n    |         ^^^^^^^^^^^^^^^^^ expected 3 fields, found 4\n "}, {"sha": "4fbc630644baa5854bee04812f7fb6c39acc1b23", "filename": "src/test/ui/pattern/pattern-error-continue.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6968e53a5c4e6d883ae4683d76bb5a8ca444aedb/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr?ref=6968e53a5c4e6d883ae4683d76bb5a8ca444aedb", "patch": "@@ -15,6 +15,9 @@ LL |         A::D(_) => (),\n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n   --> $DIR/pattern-error-continue.rs:17:9\n    |\n+LL |     B(isize, isize),\n+   |     --------------- tuple variant defined here\n+...\n LL |         A::B(_, _, _) => (),\n    |         ^^^^^^^^^^^^^ expected 2 fields, found 3\n "}]}