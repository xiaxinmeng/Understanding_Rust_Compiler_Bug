{"sha": "81aeb0cddea5a614a4eebc0f0384fa27a7eb011f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYWViMGNkZGVhNWE2MTRhNGVlYmMwZjAzODRmYTI3YTdlYjAxMWY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-28T14:22:16Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-28T14:22:16Z"}, "message": "Rollup merge of #33854 - petrochenkov:prefvis, r=eddyb\n\nApply visit_path to import prefixes by default\n\nOverriding `visit_path` is not enough to visit all paths, some import prefixes are not visited and `visit_path_list_item` need to be overridden as well. This PR removes this catch, it should be less error prone this way. Also, the prefix is visited once now, not repeatedly for each path list item.\n\nr? @eddyb", "tree": {"sha": "ff8d50bbfe60ef76696169dbbbdc73f24097fa16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff8d50bbfe60ef76696169dbbbdc73f24097fa16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81aeb0cddea5a614a4eebc0f0384fa27a7eb011f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81aeb0cddea5a614a4eebc0f0384fa27a7eb011f", "html_url": "https://github.com/rust-lang/rust/commit/81aeb0cddea5a614a4eebc0f0384fa27a7eb011f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81aeb0cddea5a614a4eebc0f0384fa27a7eb011f/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edd7d422b7269d68e63d475869c287ef9fdad1cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/edd7d422b7269d68e63d475869c287ef9fdad1cd", "html_url": "https://github.com/rust-lang/rust/commit/edd7d422b7269d68e63d475869c287ef9fdad1cd"}, {"sha": "40285ca717f687f8c1df8f28e53fb97392ac6eb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/40285ca717f687f8c1df8f28e53fb97392ac6eb5", "html_url": "https://github.com/rust-lang/rust/commit/40285ca717f687f8c1df8f28e53fb97392ac6eb5"}], "stats": {"total": 34, "additions": 8, "deletions": 26}, "files": [{"sha": "80918ce68e26fc6c4dabc55d3c5392c25f59bf06", "filename": "src/librustc/hir/intravisit.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/81aeb0cddea5a614a4eebc0f0384fa27a7eb011f/src%2Flibrustc%2Fhir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81aeb0cddea5a614a4eebc0f0384fa27a7eb011f/src%2Flibrustc%2Fhir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fintravisit.rs?ref=81aeb0cddea5a614a4eebc0f0384fa27a7eb011f", "patch": "@@ -280,12 +280,9 @@ pub fn walk_item<'v, V: Visitor<'v>>(visitor: &mut V, item: &'v Item) {\n                     visitor.visit_path(path, item.id);\n                 }\n                 ViewPathList(ref prefix, ref list) => {\n-                    if !list.is_empty() {\n-                        for item in list {\n-                            visitor.visit_path_list_item(prefix, item)\n-                        }\n-                    } else {\n-                        visitor.visit_path(prefix, item.id);\n+                    visitor.visit_path(prefix, item.id);\n+                    for item in list {\n+                        visitor.visit_path_list_item(prefix, item)\n                     }\n                 }\n             }\n@@ -419,12 +416,8 @@ pub fn walk_path<'v, V: Visitor<'v>>(visitor: &mut V, path: &'v Path) {\n }\n \n pub fn walk_path_list_item<'v, V: Visitor<'v>>(visitor: &mut V,\n-                                               prefix: &'v Path,\n+                                               _prefix: &'v Path,\n                                                item: &'v PathListItem) {\n-    for segment in &prefix.segments {\n-        visitor.visit_path_segment(prefix.span, segment);\n-    }\n-\n     walk_opt_name(visitor, item.span, item.node.name());\n     walk_opt_name(visitor, item.span, item.node.rename());\n }"}, {"sha": "a039467c8afc05a18c112b044a837af48c3a588d", "filename": "src/librustc_incremental/calculate_svh.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81aeb0cddea5a614a4eebc0f0384fa27a7eb011f/src%2Flibrustc_incremental%2Fcalculate_svh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81aeb0cddea5a614a4eebc0f0384fa27a7eb011f/src%2Flibrustc_incremental%2Fcalculate_svh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fcalculate_svh.rs?ref=81aeb0cddea5a614a4eebc0f0384fa27a7eb011f", "patch": "@@ -401,10 +401,6 @@ mod svh_visitor {\n             SawPath.hash(self.st); visit::walk_path(self, path)\n         }\n \n-        fn visit_path_list_item(&mut self, prefix: &'a Path, item: &'a PathListItem) {\n-            SawPath.hash(self.st); visit::walk_path_list_item(self, prefix, item)\n-        }\n-\n         fn visit_block(&mut self, b: &'a Block) {\n             SawBlock.hash(self.st); visit::walk_block(self, b)\n         }"}, {"sha": "a1d8e056b0257d3a1a0fc80c9694e196b77e487a", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/81aeb0cddea5a614a4eebc0f0384fa27a7eb011f/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81aeb0cddea5a614a4eebc0f0384fa27a7eb011f/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=81aeb0cddea5a614a4eebc0f0384fa27a7eb011f", "patch": "@@ -233,12 +233,9 @@ pub fn walk_item<'v, V: Visitor<'v>>(visitor: &mut V, item: &'v Item) {\n                     visitor.visit_path(path, item.id);\n                 }\n                 ViewPathList(ref prefix, ref list) => {\n-                    if !list.is_empty() {\n-                        for item in list {\n-                            visitor.visit_path_list_item(prefix, item)\n-                        }\n-                    } else {\n-                        visitor.visit_path(prefix, item.id);\n+                    visitor.visit_path(prefix, item.id);\n+                    for item in list {\n+                        visitor.visit_path_list_item(prefix, item)\n                     }\n                 }\n             }\n@@ -368,12 +365,8 @@ pub fn walk_path<'v, V: Visitor<'v>>(visitor: &mut V, path: &'v Path) {\n     }\n }\n \n-pub fn walk_path_list_item<'v, V: Visitor<'v>>(visitor: &mut V, prefix: &'v Path,\n+pub fn walk_path_list_item<'v, V: Visitor<'v>>(visitor: &mut V, _prefix: &'v Path,\n                                                item: &'v PathListItem) {\n-    for segment in &prefix.segments {\n-        visitor.visit_path_segment(prefix.span, segment);\n-    }\n-\n     walk_opt_ident(visitor, item.span, item.node.name());\n     walk_opt_ident(visitor, item.span, item.node.rename());\n }"}]}