{"sha": "6c8d8d6a6055d19dc33cc8b33b082d17583a0e47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjOGQ4ZDZhNjA1NWQxOWRjMzNjYzhiMzNiMDgyZDE3NTgzYTBlNDc=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-08T17:17:05Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-08T17:34:34Z"}, "message": "Fix test call for error case", "tree": {"sha": "03f6f6017771982cffde57f2ff9a98909d88084e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03f6f6017771982cffde57f2ff9a98909d88084e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c8d8d6a6055d19dc33cc8b33b082d17583a0e47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c8d8d6a6055d19dc33cc8b33b082d17583a0e47", "html_url": "https://github.com/rust-lang/rust/commit/6c8d8d6a6055d19dc33cc8b33b082d17583a0e47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c8d8d6a6055d19dc33cc8b33b082d17583a0e47/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b8e2f836f59db23630a06554b8e1a33f6c502f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b8e2f836f59db23630a06554b8e1a33f6c502f5", "html_url": "https://github.com/rust-lang/rust/commit/2b8e2f836f59db23630a06554b8e1a33f6c502f5"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "48aec6d718d3d3c0c7ac472c9b895cc159d3dea1", "filename": "src/libcore/tests/nonzero.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6c8d8d6a6055d19dc33cc8b33b082d17583a0e47/src%2Flibcore%2Ftests%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c8d8d6a6055d19dc33cc8b33b082d17583a0e47/src%2Flibcore%2Ftests%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnonzero.rs?ref=6c8d8d6a6055d19dc33cc8b33b082d17583a0e47", "patch": "@@ -1,5 +1,5 @@\n use core::convert::TryFrom;\n-use core::num::{IntErrorKind, NonZeroI32, NonZeroI8, NonZeroU32, NonZeroU8, TryFromIntError};\n+use core::num::{IntErrorKind, NonZeroI32, NonZeroI8, NonZeroU32, NonZeroU8};\n use core::option::Option::{self, None, Some};\n use std::mem::size_of;\n \n@@ -180,18 +180,18 @@ fn test_nonzero_bitor_assign() {\n \n #[test]\n fn test_nonzero_from_int_on_success() {\n-    assert_eq!(NonZeroU8::try_from(5), Ok(NonZeroU8::new(5)));\n-    assert_eq!(NonZeroU32::try_from(5), Ok(NonZeroU32::new(5)));\n+    assert_eq!(NonZeroU8::try_from(5), Ok(NonZeroU8::new(5).unwrap()));\n+    assert_eq!(NonZeroU32::try_from(5), Ok(NonZeroU32::new(5).unwrap()));\n \n-    assert_eq!(NonZeroI8::try_from(-5), Ok(NonZeroI8::new(-5)));\n-    assert_eq!(NonZeroI32::try_from(-5), Ok(NonZeroI32::new(-5)));\n+    assert_eq!(NonZeroI8::try_from(-5), Ok(NonZeroI8::new(-5).unwrap()));\n+    assert_eq!(NonZeroI32::try_from(-5), Ok(NonZeroI32::new(-5).unwrap()));\n }\n \n #[test]\n fn test_nonzero_from_int_on_err() {\n-    assert_eq!(NonZeroU8::try_from(0), Err(TryFromIntError(())));\n-    assert_eq!(NonZeroU32::try_from(0), Err(TryFromIntError(())));\n+    assert!(NonZeroU8::try_from(0).is_err());\n+    assert!(NonZeroU32::try_from(0).is_err());\n \n-    assert_eq!(NonZeroI8::try_from(0), Err(TryFromIntError(())));\n-    assert_eq!(NonZeroI32::try_from(0), Err(TryFromIntError(())));\n+    assert!(NonZeroI8::try_from(0).is_err());\n+    assert!(NonZeroI32::try_from(0).is_err());\n }"}]}