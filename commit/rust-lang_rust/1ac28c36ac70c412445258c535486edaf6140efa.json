{"sha": "1ac28c36ac70c412445258c535486edaf6140efa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYzI4YzM2YWM3MGM0MTI0NDUyNThjNTM1NDg2ZWRhZjYxNDBlZmE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-16T22:35:43Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-16T22:35:43Z"}, "message": "Remove unused types from codemap", "tree": {"sha": "3d9882853a19ba877451cc9b39747c24c3e864ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d9882853a19ba877451cc9b39747c24c3e864ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ac28c36ac70c412445258c535486edaf6140efa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac28c36ac70c412445258c535486edaf6140efa", "html_url": "https://github.com/rust-lang/rust/commit/1ac28c36ac70c412445258c535486edaf6140efa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ac28c36ac70c412445258c535486edaf6140efa/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a5b28ff0cae0e48d8e3e0cf45728e438390d7ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a5b28ff0cae0e48d8e3e0cf45728e438390d7ee", "html_url": "https://github.com/rust-lang/rust/commit/4a5b28ff0cae0e48d8e3e0cf45728e438390d7ee"}], "stats": {"total": 19, "additions": 2, "deletions": 17}, "files": [{"sha": "8f42e1b1a59de264c1836c94e5385f4895399b1f", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1ac28c36ac70c412445258c535486edaf6140efa/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac28c36ac70c412445258c535486edaf6140efa/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=1ac28c36ac70c412445258c535486edaf6140efa", "patch": "@@ -147,28 +147,13 @@ pub struct Loc {\n     file: @FileMap, line: uint, col: CharPos\n }\n \n-/// An absolute offset within the CodeMap (not a relative offset within a\n-/// a single FileMap)\n-pub struct FilePos {\n-    ch: CharPos, byte: BytePos\n-}\n-\n-impl FilePos : cmp::Eq {\n-    pure fn eq(other: &FilePos) -> bool {\n-        self.ch == (*other).ch && self.byte == (*other).byte\n-    }\n-    pure fn ne(other: &FilePos) -> bool { !self.eq(other) }\n-}\n-\n pub enum ExpnInfo {\n     ExpandedFrom({call_site: span,\n                   callie: {name: ~str, span: Option<span>}})\n }\n \n pub type FileName = ~str;\n \n-pub type LookupFn = pure fn(FilePos) -> uint;\n-\n pub struct FileLines {\n     file: @FileMap,\n     lines: ~[uint]"}, {"sha": "593ff6d034ee007e9b70ac444e4e6f64e1daeedc", "filename": "src/libsyntax/parse.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ac28c36ac70c412445258c535486edaf6140efa/src%2Flibsyntax%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac28c36ac70c412445258c535486edaf6140efa/src%2Flibsyntax%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse.rs?ref=1ac28c36ac70c412445258c535486edaf6140efa", "patch": "@@ -20,7 +20,7 @@ use util::interner;\n use diagnostic::{span_handler, mk_span_handler, mk_handler, emitter};\n use lexer::{reader, string_reader};\n use parse::token::{ident_interner, mk_ident_interner};\n-use codemap::{CodeMap, FileMap, CharPos, BytePos, FilePos};\n+use codemap::{CodeMap, FileMap, CharPos, BytePos};\n \n type parse_sess = @{\n     cm: @codemap::CodeMap,"}, {"sha": "6f1f644ab27b14e72d6177768152248f3744f010", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ac28c36ac70c412445258c535486edaf6140efa/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac28c36ac70c412445258c535486edaf6140efa/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=1ac28c36ac70c412445258c535486edaf6140efa", "patch": "@@ -1,5 +1,5 @@\n use diagnostic::span_handler;\n-use codemap::{span, CodeMap, CharPos, BytePos, FilePos};\n+use codemap::{span, CodeMap, CharPos, BytePos};\n use ext::tt::transcribe::{tt_reader,  new_tt_reader, dup_tt_reader,\n                              tt_next_token};\n "}]}