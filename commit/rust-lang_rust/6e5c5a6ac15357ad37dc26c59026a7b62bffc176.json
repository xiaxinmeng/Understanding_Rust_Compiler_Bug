{"sha": "6e5c5a6ac15357ad37dc26c59026a7b62bffc176", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNWM1YTZhYzE1MzU3YWQzN2RjMjZjNTkwMjZhN2I2MmJmZmMxNzY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-06T01:41:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-06T01:41:18Z"}, "message": "auto merge of #10675 : LeoTestard/rust/lifetimes-no-keywords, r=brson\n\nFixes #10565.\r\n\r\n`'self` is still allowed for the moment, as it is used everywhere in the codebase. And I'm not sure if it still has a special meaning currently or not.", "tree": {"sha": "7569b98c151faec37e06f89711cbd109bc037b28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7569b98c151faec37e06f89711cbd109bc037b28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e5c5a6ac15357ad37dc26c59026a7b62bffc176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e5c5a6ac15357ad37dc26c59026a7b62bffc176", "html_url": "https://github.com/rust-lang/rust/commit/6e5c5a6ac15357ad37dc26c59026a7b62bffc176", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e5c5a6ac15357ad37dc26c59026a7b62bffc176/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6708c297a87a38a4120edfd6866767692c5e7a56", "url": "https://api.github.com/repos/rust-lang/rust/commits/6708c297a87a38a4120edfd6866767692c5e7a56", "html_url": "https://github.com/rust-lang/rust/commit/6708c297a87a38a4120edfd6866767692c5e7a56"}, {"sha": "74757af096e4418d410b3099622ddcdb13e87568", "url": "https://api.github.com/repos/rust-lang/rust/commits/74757af096e4418d410b3099622ddcdb13e87568", "html_url": "https://github.com/rust-lang/rust/commit/74757af096e4418d410b3099622ddcdb13e87568"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "9c35bb838a3267df6cb54ccc6b5bdc0b94300cce", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6e5c5a6ac15357ad37dc26c59026a7b62bffc176/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5c5a6ac15357ad37dc26c59026a7b62bffc176/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=6e5c5a6ac15357ad37dc26c59026a7b62bffc176", "patch": "@@ -774,7 +774,17 @@ fn next_token_inner(rdr: @mut StringReader) -> token::Token {\n                 bump(rdr);\n             }\n             return with_str_from(rdr, start, |lifetime_name| {\n-                token::LIFETIME(str_to_ident(lifetime_name))\n+                let ident = str_to_ident(lifetime_name);\n+                let tok = &token::IDENT(ident, false);\n+\n+                if token::is_any_keyword(tok)\n+                    && !token::is_keyword(token::keywords::Static, tok)\n+                    && !token::is_keyword(token::keywords::Self, tok) {\n+                    fatal_span(rdr, start, rdr.last_pos,\n+                        ~\"invalid lifetime name\");\n+                }\n+\n+                token::LIFETIME(ident)\n             })\n         }\n "}, {"sha": "593e1dc5e088921b52fc5ffddcaf5831bd262ffc", "filename": "src/test/compile-fail/lifetime-no-keyword.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6e5c5a6ac15357ad37dc26c59026a7b62bffc176/src%2Ftest%2Fcompile-fail%2Flifetime-no-keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5c5a6ac15357ad37dc26c59026a7b62bffc176/src%2Ftest%2Fcompile-fail%2Flifetime-no-keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flifetime-no-keyword.rs?ref=6e5c5a6ac15357ad37dc26c59026a7b62bffc176", "patch": "@@ -0,0 +1,16 @@\n+\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn foo(a: &'let int) { } //~ ERROR invalid lifetime name\n+fn bar(a: &'static int) {\u00a0}\n+fn baz<'self>(a: &'self int) {\u00a0}\n+\n+fn main() { }"}]}