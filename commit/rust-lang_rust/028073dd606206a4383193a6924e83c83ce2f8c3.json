{"sha": "028073dd606206a4383193a6924e83c83ce2f8c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyODA3M2RkNjA2MjA2YTQzODMxOTNhNjkyNGU4M2M4M2NlMmY4YzM=", "commit": {"author": {"name": "Srinivas Reddy Thatiparthy", "email": "thatiparthysreenivas@gmail.com", "date": "2016-06-11T13:35:31Z"}, "committer": {"name": "Srinivas Reddy Thatiparthy", "email": "thatiparthysreenivas@gmail.com", "date": "2016-06-11T13:35:31Z"}, "message": "run rustfmt on cargotest folder in src/tools/cargotest", "tree": {"sha": "b3445acf0a28d442f858550c05433ef06d920298", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3445acf0a28d442f858550c05433ef06d920298"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/028073dd606206a4383193a6924e83c83ce2f8c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/028073dd606206a4383193a6924e83c83ce2f8c3", "html_url": "https://github.com/rust-lang/rust/commit/028073dd606206a4383193a6924e83c83ce2f8c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/028073dd606206a4383193a6924e83c83ce2f8c3/comments", "author": {"login": "srinivasreddy", "id": 198396, "node_id": "MDQ6VXNlcjE5ODM5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/198396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srinivasreddy", "html_url": "https://github.com/srinivasreddy", "followers_url": "https://api.github.com/users/srinivasreddy/followers", "following_url": "https://api.github.com/users/srinivasreddy/following{/other_user}", "gists_url": "https://api.github.com/users/srinivasreddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/srinivasreddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srinivasreddy/subscriptions", "organizations_url": "https://api.github.com/users/srinivasreddy/orgs", "repos_url": "https://api.github.com/users/srinivasreddy/repos", "events_url": "https://api.github.com/users/srinivasreddy/events{/privacy}", "received_events_url": "https://api.github.com/users/srinivasreddy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "srinivasreddy", "id": 198396, "node_id": "MDQ6VXNlcjE5ODM5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/198396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srinivasreddy", "html_url": "https://github.com/srinivasreddy", "followers_url": "https://api.github.com/users/srinivasreddy/followers", "following_url": "https://api.github.com/users/srinivasreddy/following{/other_user}", "gists_url": "https://api.github.com/users/srinivasreddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/srinivasreddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srinivasreddy/subscriptions", "organizations_url": "https://api.github.com/users/srinivasreddy/orgs", "repos_url": "https://api.github.com/users/srinivasreddy/repos", "events_url": "https://api.github.com/users/srinivasreddy/events{/privacy}", "received_events_url": "https://api.github.com/users/srinivasreddy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "682abf79afa40ba17eb6dfe47f944544c966839c", "url": "https://api.github.com/repos/rust-lang/rust/commits/682abf79afa40ba17eb6dfe47f944544c966839c", "html_url": "https://github.com/rust-lang/rust/commit/682abf79afa40ba17eb6dfe47f944544c966839c"}], "stats": {"total": 76, "additions": 38, "deletions": 38}, "files": [{"sha": "8b7164819a7907390d3105335ae38039d47b9d65", "filename": "src/tools/cargotest/main.rs", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/028073dd606206a4383193a6924e83c83ce2f8c3/src%2Ftools%2Fcargotest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/028073dd606206a4383193a6924e83c83ce2f8c3/src%2Ftools%2Fcargotest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargotest%2Fmain.rs?ref=028073dd606206a4383193a6924e83c83ce2f8c3", "patch": "@@ -21,20 +21,18 @@ struct Test {\n     lock: Option<&'static str>,\n }\n \n-const TEST_REPOS: &'static [Test] = &[\n-    Test {\n-        name: \"cargo\",\n-        repo: \"https://github.com/rust-lang/cargo\",\n-        sha: \"7d79da08238e3d47e0bc4406155bdcc45ccb8c82\",\n-        lock: None,\n-    },\n-    Test {\n-        name: \"iron\",\n-        repo: \"https://github.com/iron/iron\",\n-        sha: \"16c858ec2901e2992fe5e529780f59fa8ed12903\",\n-        lock: Some(include_str!(\"lockfiles/iron-Cargo.lock\")),\n-    },\n-];\n+const TEST_REPOS: &'static [Test] = &[Test {\n+                                          name: \"cargo\",\n+                                          repo: \"https://github.com/rust-lang/cargo\",\n+                                          sha: \"7d79da08238e3d47e0bc4406155bdcc45ccb8c82\",\n+                                          lock: None,\n+                                      },\n+                                      Test {\n+                                          name: \"iron\",\n+                                          repo: \"https://github.com/iron/iron\",\n+                                          sha: \"16c858ec2901e2992fe5e529780f59fa8ed12903\",\n+                                          lock: Some(include_str!(\"lockfiles/iron-Cargo.lock\")),\n+                                      }];\n \n \n fn main() {\n@@ -52,8 +50,10 @@ fn test_repo(cargo: &Path, out_dir: &Path, test: &Test) {\n     println!(\"testing {}\", test.repo);\n     let dir = clone_repo(test, out_dir);\n     if let Some(lockfile) = test.lock {\n-        File::create(&dir.join(\"Cargo.lock\")).expect(\"\")\n-            .write_all(lockfile.as_bytes()).expect(\"\");\n+        File::create(&dir.join(\"Cargo.lock\"))\n+            .expect(\"\")\n+            .write_all(lockfile.as_bytes())\n+            .expect(\"\");\n     }\n     if !run_cargo_test(cargo, &dir) {\n         panic!(\"tests failed for {}\", test.repo);\n@@ -65,10 +65,10 @@ fn clone_repo(test: &Test, out_dir: &Path) -> PathBuf {\n \n     if !out_dir.join(\".git\").is_dir() {\n         let status = Command::new(\"git\")\n-            .arg(\"init\")\n-            .arg(&out_dir)\n-            .status()\n-            .expect(\"\");\n+                         .arg(\"init\")\n+                         .arg(&out_dir)\n+                         .status()\n+                         .expect(\"\");\n         assert!(status.success());\n     }\n \n@@ -77,23 +77,23 @@ fn clone_repo(test: &Test, out_dir: &Path) -> PathBuf {\n     for depth in &[0, 1, 10, 100, 1000, 100000] {\n         if *depth > 0 {\n             let status = Command::new(\"git\")\n-                .arg(\"fetch\")\n-                .arg(test.repo)\n-                .arg(\"master\")\n-                .arg(&format!(\"--depth={}\", depth))\n-                .current_dir(&out_dir)\n-                .status()\n-                .expect(\"\");\n+                             .arg(\"fetch\")\n+                             .arg(test.repo)\n+                             .arg(\"master\")\n+                             .arg(&format!(\"--depth={}\", depth))\n+                             .current_dir(&out_dir)\n+                             .status()\n+                             .expect(\"\");\n             assert!(status.success());\n         }\n \n         let status = Command::new(\"git\")\n-            .arg(\"reset\")\n-            .arg(test.sha)\n-            .arg(\"--hard\")\n-            .current_dir(&out_dir)\n-            .status()\n-            .expect(\"\");\n+                         .arg(\"reset\")\n+                         .arg(test.sha)\n+                         .arg(\"--hard\")\n+                         .current_dir(&out_dir)\n+                         .status()\n+                         .expect(\"\");\n \n         if status.success() {\n             found = true;\n@@ -105,11 +105,11 @@ fn clone_repo(test: &Test, out_dir: &Path) -> PathBuf {\n         panic!(\"unable to find commit {}\", test.sha)\n     }\n     let status = Command::new(\"git\")\n-        .arg(\"clean\")\n-        .arg(\"-fdx\")\n-        .current_dir(&out_dir)\n-        .status()\n-        .unwrap();\n+                     .arg(\"clean\")\n+                     .arg(\"-fdx\")\n+                     .current_dir(&out_dir)\n+                     .status()\n+                     .unwrap();\n     assert!(status.success());\n \n     out_dir"}]}