{"sha": "66808c1e776ca9303cc04abce4b3b95ee5b669fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ODA4YzFlNzc2Y2E5MzAzY2MwNGFiY2U0YjNiOTVlZTViNjY5ZmM=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-29T19:26:26Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-07-01T15:12:48Z"}, "message": "Use `utils::sugg` in `COLLAPSIBLE_IF`", "tree": {"sha": "08aca13498e7902388d441d332051aad2799903e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08aca13498e7902388d441d332051aad2799903e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66808c1e776ca9303cc04abce4b3b95ee5b669fc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXdohwAAoJEF5CfHlMukXoq9oP/0GqAJrcLhO4Xodmp0ocoY5l\nPjWLldsRaAXJ9LZai/hl/rYW3Bt/w/F9cpoj7QZLANpiB67KwpEXx7HLodQifSF5\nZsHjGl7GccuYAfrjbetBgcPIcCXg9n+EacIAJUIiS6XiKL/jV4PHezNwuBxiSfhs\na1fPt9qgidJdNeEb1DmujNdVKThnfsk1CfmDpVB0DuARFHR2a18QCL9OVh9DJ17r\nUv6+6/BR9uHqGBHBnc+V0NqAnndfVcRsHu4Q2lFceRJnecAi9fYDhPnKHbaIykQE\nqd1oiclK8oOKpjGlmVCj8gVvlGY0WdYnopE3qZYkPy3AHvJOHzZBQHK1pwhIsVkU\n/wPYJvIDUAXqlHE0FijjENj+TpvQs+gR9XfUtqJpxEIo2EgdzZbOYKfeT7uWopfz\nnKA5RU8iAPmQ+DyrHcjVPO24bYNLGtdq2n9hoOO+jz7zwKXJAjuYBG3jGbqxrfEO\nilDGp3bCvDys7zCwEQZswzOZxeoC6FmL4G9ZzIFyLcYcBzSE8wVcvN7Yed898nP4\n37/Ni67zdv+TvSA/uWnuuCJKO1KzPkGi5XkEdOyhhOa8gl44gSX3jd+Dp2/J/s1c\neIQZsNh/Cm/b0X5lq2Fa8X7nHppDUjrupJxhRFlRCEyRwIyEbHfD+xRoilZqNgie\ny5DaQVnLowZL4JqB6uV5\n=0YSk\n-----END PGP SIGNATURE-----", "payload": "tree 08aca13498e7902388d441d332051aad2799903e\nparent 2e8edde6e9b42b3a8c7e8aefb2ad6c86be404915\nauthor mcarton <cartonmartin+git@gmail.com> 1467228386 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1467385968 +0200\n\nUse `utils::sugg` in `COLLAPSIBLE_IF`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66808c1e776ca9303cc04abce4b3b95ee5b669fc", "html_url": "https://github.com/rust-lang/rust/commit/66808c1e776ca9303cc04abce4b3b95ee5b669fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66808c1e776ca9303cc04abce4b3b95ee5b669fc/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e8edde6e9b42b3a8c7e8aefb2ad6c86be404915", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e8edde6e9b42b3a8c7e8aefb2ad6c86be404915", "html_url": "https://github.com/rust-lang/rust/commit/2e8edde6e9b42b3a8c7e8aefb2ad6c86be404915"}], "stats": {"total": 63, "additions": 42, "deletions": 21}, "files": [{"sha": "350a3cc3ef214a1be748d48aa5604e9cb0557ed5", "filename": "clippy_lints/src/collapsible_if.rs", "status": "modified", "additions": 6, "deletions": 21, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/66808c1e776ca9303cc04abce4b3b95ee5b669fc/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66808c1e776ca9303cc04abce4b3b95ee5b669fc/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_if.rs?ref=66808c1e776ca9303cc04abce4b3b95ee5b669fc", "patch": "@@ -13,11 +13,10 @@\n //! This lint is **warn** by default\n \n use rustc::lint::*;\n-use std::borrow::Cow;\n-use syntax::codemap::Spanned;\n use syntax::ast;\n \n-use utils::{in_macro, snippet, snippet_block, span_lint_and_then};\n+use utils::{in_macro, snippet_block, span_lint_and_then};\n+use utils::sugg::Sugg;\n \n /// **What it does:** This lint checks for nested `if`-statements which can be collapsed by\n /// `&&`-combining their conditions and for `else { if .. }` expressions that can be collapsed to\n@@ -103,31 +102,17 @@ fn check_collapsible_no_if_let(\n             return;\n         }\n         span_lint_and_then(cx, COLLAPSIBLE_IF, expr.span, \"this if statement can be collapsed\", |db| {\n+            let lhs = Sugg::ast(cx, check, \"..\");\n+            let rhs = Sugg::ast(cx, check_inner, \"..\");\n             db.span_suggestion(expr.span,\n                                \"try\",\n-                               format!(\"if {} && {} {}\",\n-                                       check_to_string(cx, check),\n-                                       check_to_string(cx, check_inner),\n+                               format!(\"if {} {}\",\n+                                       lhs.and(&rhs),\n                                        snippet_block(cx, content.span, \"..\")));\n         });\n     }}\n }\n \n-fn requires_brackets(e: &ast::Expr) -> bool {\n-    match e.node {\n-        ast::ExprKind::Binary(Spanned { node: n, .. }, _, _) if n == ast::BinOpKind::Eq => false,\n-        _ => true,\n-    }\n-}\n-\n-fn check_to_string(cx: &EarlyContext, e: &ast::Expr) -> Cow<'static, str> {\n-    if requires_brackets(e) {\n-        format!(\"({})\", snippet(cx, e.span, \"..\")).into()\n-    } else {\n-        snippet(cx, e.span, \"..\")\n-    }\n-}\n-\n fn single_stmt_of_block(block: &ast::Block) -> Option<&ast::Expr> {\n     if block.stmts.len() == 1 && block.expr.is_none() {\n         if let ast::StmtKind::Expr(ref expr, _) = block.stmts[0].node {"}, {"sha": "f7e6f15b1212d7e0b059b611663828fd8f9aedcb", "filename": "tests/compile-fail/collapsible_if.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/66808c1e776ca9303cc04abce4b3b95ee5b669fc/tests%2Fcompile-fail%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66808c1e776ca9303cc04abce4b3b95ee5b669fc/tests%2Fcompile-fail%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcollapsible_if.rs?ref=66808c1e776ca9303cc04abce4b3b95ee5b669fc", "patch": "@@ -23,6 +23,42 @@ fn main() {\n         }\n     }\n \n+    if x == \"hello\" && x == \"world\" {\n+    //~^ ERROR this if statement can be collapsed\n+    //~| HELP try\n+    //~| SUGGESTION if x == \"hello\" && x == \"world\" && (y == \"world\" || y == \"hello\") {\n+        if y == \"world\" || y == \"hello\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n+\n+    if x == \"hello\" || x == \"world\" {\n+    //~^ ERROR this if statement can be collapsed\n+    //~| HELP try\n+    //~| SUGGESTION if (x == \"hello\" || x == \"world\") && y == \"world\" && y == \"hello\" {\n+        if y == \"world\" && y == \"hello\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n+\n+    if x == \"hello\" && x == \"world\" {\n+    //~^ ERROR this if statement can be collapsed\n+    //~| HELP try\n+    //~| SUGGESTION if x == \"hello\" && x == \"world\" && y == \"world\" && y == \"hello\" {\n+        if y == \"world\" && y == \"hello\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n+\n+    if 42 == 1337 {\n+    //~^ ERROR this if statement can be collapsed\n+    //~| HELP try\n+    //~| SUGGESTION if 42 == 1337 && 'a' != 'A' {\n+        if 'a' != 'A' {\n+            println!(\"world!\")\n+        }\n+    }\n+\n     // Collaspe `else { if .. }` to `else if ..`\n     if x == \"hello\" {\n         print!(\"Hello \");"}]}