{"sha": "0a6af989f60bd84a13cbcb77d2e9d1003ae8af5f", "node_id": "C_kwDOAAsO6NoAKDBhNmFmOTg5ZjYwYmQ4NGExM2NiY2I3N2QyZTlkMTAwM2FlOGFmNWY", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-08-23T17:04:07Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-08-23T17:04:07Z"}, "message": "Simplify unicode_downloads.rs\n\nReduce duplication by moving fetching logic into a dedicated function.", "tree": {"sha": "256639f69ca71fb20c13329f6b390f256453f3f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/256639f69ca71fb20c13329f6b390f256453f3f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a6af989f60bd84a13cbcb77d2e9d1003ae8af5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a6af989f60bd84a13cbcb77d2e9d1003ae8af5f", "html_url": "https://github.com/rust-lang/rust/commit/0a6af989f60bd84a13cbcb77d2e9d1003ae8af5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a6af989f60bd84a13cbcb77d2e9d1003ae8af5f/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a1f7afd2fe8f0a49cb702ac4ac4f1ff45d48ee5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a1f7afd2fe8f0a49cb702ac4ac4f1ff45d48ee5", "html_url": "https://github.com/rust-lang/rust/commit/6a1f7afd2fe8f0a49cb702ac4ac4f1ff45d48ee5"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "714bb53382e706c708ca294bd8b9e11e378474a9", "filename": "src/tools/unicode-table-generator/src/unicode_download.rs", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/0a6af989f60bd84a13cbcb77d2e9d1003ae8af5f/src%2Ftools%2Funicode-table-generator%2Fsrc%2Funicode_download.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a6af989f60bd84a13cbcb77d2e9d1003ae8af5f/src%2Ftools%2Funicode-table-generator%2Fsrc%2Funicode_download.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Funicode-table-generator%2Fsrc%2Funicode_download.rs?ref=0a6af989f60bd84a13cbcb77d2e9d1003ae8af5f", "patch": "@@ -1,6 +1,6 @@\n use crate::UNICODE_DIRECTORY;\n use std::path::Path;\n-use std::process::Command;\n+use std::process::{Command, Output};\n \n static URL_PREFIX: &str = \"https://www.unicode.org/Public/UCD/latest/ucd/\";\n \n@@ -9,6 +9,18 @@ static README: &str = \"ReadMe.txt\";\n static RESOURCES: &[&str] =\n     &[\"DerivedCoreProperties.txt\", \"PropList.txt\", \"UnicodeData.txt\", \"SpecialCasing.txt\"];\n \n+#[track_caller]\n+fn fetch(url: &str) -> Output {\n+    let output = Command::new(\"curl\").arg(URL_PREFIX.to_owned() + url).output().unwrap();\n+    if !output.status.success() {\n+        panic!(\n+            \"Failed to run curl to fetch {url}: stderr: {}\",\n+            String::from_utf8_lossy(&output.stderr)\n+        );\n+    }\n+    output\n+}\n+\n pub fn fetch_latest() {\n     let directory = Path::new(UNICODE_DIRECTORY);\n     if directory.exists() {\n@@ -20,27 +32,14 @@ pub fn fetch_latest() {\n     if let Err(e) = std::fs::create_dir_all(directory) {\n         panic!(\"Failed to create {UNICODE_DIRECTORY:?}: {e}\");\n     }\n-    let output = Command::new(\"curl\").arg(URL_PREFIX.to_owned() + README).output().unwrap();\n-    if !output.status.success() {\n-        panic!(\n-            \"Failed to run curl to fetch readme: stderr: {}\",\n-            String::from_utf8_lossy(&output.stderr)\n-        );\n-    }\n+    let output = fetch(README);\n     let current = std::fs::read_to_string(directory.join(README)).unwrap_or_default();\n     if current.as_bytes() != &output.stdout[..] {\n         std::fs::write(directory.join(README), output.stdout).unwrap();\n     }\n \n     for resource in RESOURCES {\n-        let output = Command::new(\"curl\").arg(URL_PREFIX.to_owned() + resource).output().unwrap();\n-        if !output.status.success() {\n-            panic!(\n-                \"Failed to run curl to fetch {}: stderr: {}\",\n-                resource,\n-                String::from_utf8_lossy(&output.stderr)\n-            );\n-        }\n+        let output = fetch(resource);\n         std::fs::write(directory.join(resource), output.stdout).unwrap();\n     }\n }"}]}