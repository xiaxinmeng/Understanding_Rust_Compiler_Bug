{"sha": "dedcd97e92f190ee99aa271c6cfd8978f123d731", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlZGNkOTdlOTJmMTkwZWU5OWFhMjcxYzZjZmQ4OTc4ZjEyM2Q3MzE=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-06-25T21:08:10Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-06-25T21:08:10Z"}, "message": "Use f{32,64}::from_bits", "tree": {"sha": "96de0d512673b5242c87d21c0a7c12db01df1ac9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96de0d512673b5242c87d21c0a7c12db01df1ac9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dedcd97e92f190ee99aa271c6cfd8978f123d731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dedcd97e92f190ee99aa271c6cfd8978f123d731", "html_url": "https://github.com/rust-lang/rust/commit/dedcd97e92f190ee99aa271c6cfd8978f123d731", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dedcd97e92f190ee99aa271c6cfd8978f123d731/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "303f77ee1d60e1b351ff6478143dd866403c27f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/303f77ee1d60e1b351ff6478143dd866403c27f5", "html_url": "https://github.com/rust-lang/rust/commit/303f77ee1d60e1b351ff6478143dd866403c27f5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "75988198eb9b5f98174a98913347f58d09f9fae2", "filename": "src/libserialize/opaque.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dedcd97e92f190ee99aa271c6cfd8978f123d731/src%2Flibserialize%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dedcd97e92f190ee99aa271c6cfd8978f123d731/src%2Flibserialize%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fopaque.rs?ref=dedcd97e92f190ee99aa271c6cfd8978f123d731", "patch": "@@ -296,13 +296,13 @@ impl<'a> serialize::Decoder for Decoder<'a> {\n     #[inline]\n     fn read_f64(&mut self) -> Result<f64, Self::Error> {\n         let bits = self.read_u64()?;\n-        Ok(unsafe { ::std::mem::transmute(bits) })\n+        Ok(f64::from_bits(bits))\n     }\n \n     #[inline]\n     fn read_f32(&mut self) -> Result<f32, Self::Error> {\n         let bits = self.read_u32()?;\n-        Ok(unsafe { ::std::mem::transmute(bits) })\n+        Ok(f32::from_bits(bits))\n     }\n \n     #[inline]"}]}