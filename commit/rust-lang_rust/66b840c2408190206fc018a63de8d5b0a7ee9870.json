{"sha": "66b840c2408190206fc018a63de8d5b0a7ee9870", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2Yjg0MGMyNDA4MTkwMjA2ZmMwMThhNjNkZThkNWIwYTdlZTk4NzA=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-06-05T16:19:01Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-06-05T16:19:01Z"}, "message": "Fix after rebase", "tree": {"sha": "d630921a973ffec5913d04c3592a12dea5e5b8ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d630921a973ffec5913d04c3592a12dea5e5b8ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66b840c2408190206fc018a63de8d5b0a7ee9870", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66b840c2408190206fc018a63de8d5b0a7ee9870", "html_url": "https://github.com/rust-lang/rust/commit/66b840c2408190206fc018a63de8d5b0a7ee9870", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66b840c2408190206fc018a63de8d5b0a7ee9870/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8577bb49bf0ba789e6eca6d6b328a65ca5d70695", "url": "https://api.github.com/repos/rust-lang/rust/commits/8577bb49bf0ba789e6eca6d6b328a65ca5d70695", "html_url": "https://github.com/rust-lang/rust/commit/8577bb49bf0ba789e6eca6d6b328a65ca5d70695"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "16b6792fde48fa525a4cca1d6b897fa565c317b3", "filename": "src/librustc/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66b840c2408190206fc018a63de8d5b0a7ee9870/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66b840c2408190206fc018a63de8d5b0a7ee9870/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=66b840c2408190206fc018a63de8d5b0a7ee9870", "patch": "@@ -122,8 +122,8 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             let mut printer = ty::print::FmtPrinter::new(self.tcx, &mut s, Namespace::TypeNS);\n             let ty_vars = self.type_variables.borrow();\n             let getter = move |ty_vid| {\n-                if let TypeVariableOrigin::TypeParameterDefinition(_, name) =\n-                    *ty_vars.var_origin(ty_vid) {\n+                if let TypeVariableOriginKind::TypeParameterDefinition(name) =\n+                    ty_vars.var_origin(ty_vid).kind {\n                     return Some(name.to_string());\n                 }\n                 None"}]}