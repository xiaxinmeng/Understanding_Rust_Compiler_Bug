{"sha": "fdc4f9028f838605d031248abda0ebfb7450bf9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYzRmOTAyOGY4Mzg2MDVkMDMxMjQ4YWJkYTBlYmZiNzQ1MGJmOWY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-08-28T11:21:47Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-08-30T08:38:11Z"}, "message": "Add missing examples for Option type", "tree": {"sha": "5dfa90845489bb8be1966bbb11645e5b0906588e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dfa90845489bb8be1966bbb11645e5b0906588e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdc4f9028f838605d031248abda0ebfb7450bf9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdc4f9028f838605d031248abda0ebfb7450bf9f", "html_url": "https://github.com/rust-lang/rust/commit/fdc4f9028f838605d031248abda0ebfb7450bf9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdc4f9028f838605d031248abda0ebfb7450bf9f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbd48e6f166739344528a5fff4f02516b77d7916", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbd48e6f166739344528a5fff4f02516b77d7916", "html_url": "https://github.com/rust-lang/rust/commit/bbd48e6f166739344528a5fff4f02516b77d7916"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "79bd04b724390dd297b859fe367b8f5b93838e13", "filename": "src/libcore/option.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/fdc4f9028f838605d031248abda0ebfb7450bf9f/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdc4f9028f838605d031248abda0ebfb7450bf9f/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=fdc4f9028f838605d031248abda0ebfb7450bf9f", "patch": "@@ -1110,6 +1110,18 @@ impl<T: Deref> Option<T> {\n     /// to the original one, additionally coercing the contents via [`Deref`].\n     ///\n     /// [`Deref`]: ../../std/ops/trait.Deref.html\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(inner_deref)]\n+    ///\n+    /// let x: Option<String> = Some(\"hey\".to_owned());\n+    /// assert_eq!(x.as_deref(), Some(\"hey\"));\n+    ///\n+    /// let x: Option<String> = None;\n+    /// assert_eq!(x.as_deref(), None);\n+    /// ```\n     pub fn as_deref(&self) -> Option<&T::Target> {\n         self.as_ref().map(|t| t.deref())\n     }\n@@ -1121,6 +1133,18 @@ impl<T: DerefMut> Option<T> {\n     ///\n     /// Leaves the original `Option` in-place, creating a new one containing a mutable reference to\n     /// the inner type's `Deref::Target` type.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(inner_deref)]\n+    ///\n+    /// let mut x: Option<String> = Some(\"hey\".to_owned());\n+    /// assert_eq!(x.as_deref_mut().map(|x| {\n+    ///     x.make_ascii_uppercase();\n+    ///     x\n+    /// }), Some(\"HEY\".to_owned().as_mut_str()));\n+    /// ```\n     pub fn as_deref_mut(&mut self) -> Option<&mut T::Target> {\n         self.as_mut().map(|t| t.deref_mut())\n     }\n@@ -1199,6 +1223,13 @@ impl<T: Clone> Clone for Option<T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> Default for Option<T> {\n     /// Returns [`None`][Option::None].\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// let opt: Option<u32> = Option::default();\n+    /// assert!(opt.is_none());\n+    /// ```\n     #[inline]\n     fn default() -> Option<T> { None }\n }"}]}