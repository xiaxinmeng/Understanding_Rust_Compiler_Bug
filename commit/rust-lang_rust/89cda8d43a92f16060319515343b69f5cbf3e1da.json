{"sha": "89cda8d43a92f16060319515343b69f5cbf3e1da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5Y2RhOGQ0M2E5MmYxNjA2MDMxOTUxNTM0M2I2OWY1Y2JmM2UxZGE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-01T05:06:41Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-01T05:06:41Z"}, "message": "Option to pack fn args on fewer lines", "tree": {"sha": "af31ba1bc2a983c718a72ebdb595d4d4ab115bf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af31ba1bc2a983c718a72ebdb595d4d4ab115bf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89cda8d43a92f16060319515343b69f5cbf3e1da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89cda8d43a92f16060319515343b69f5cbf3e1da", "html_url": "https://github.com/rust-lang/rust/commit/89cda8d43a92f16060319515343b69f5cbf3e1da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89cda8d43a92f16060319515343b69f5cbf3e1da/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71d24e91e3a2aeb0014fa041e474c84ad109213e", "url": "https://api.github.com/repos/rust-lang/rust/commits/71d24e91e3a2aeb0014fa041e474c84ad109213e", "html_url": "https://github.com/rust-lang/rust/commit/71d24e91e3a2aeb0014fa041e474c84ad109213e"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "1abdc9e80b778cc829115a1ff6e71198a8bd2181", "filename": "src/config.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/89cda8d43a92f16060319515343b69f5cbf3e1da/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89cda8d43a92f16060319515343b69f5cbf3e1da/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=89cda8d43a92f16060319515343b69f5cbf3e1da", "patch": "@@ -11,7 +11,7 @@\n extern crate toml;\n \n use {NewlineStyle, BraceStyle, ReturnIndent, StructLitStyle};\n-use lists::SeparatorTactic;\n+use lists::{SeparatorTactic, ListTactic};\n use issues::ReportTactic;\n \n #[derive(Copy, Clone, Eq, PartialEq, Debug)]\n@@ -26,6 +26,25 @@ pub enum BlockIndentStyle {\n \n impl_enum_decodable!(BlockIndentStyle, Inherit, Tabbed, Visual);\n \n+#[derive(Copy, Clone, Eq, PartialEq, Debug)]\n+pub enum Density {\n+    // Fit as much on one line as possible.\n+    Compressed,\n+    // Use more lines.\n+    Tall,\n+}\n+\n+impl_enum_decodable!(Density, Compressed, Tall);\n+\n+impl Density {\n+    pub fn to_list_tactic(self) -> ListTactic {\n+        match self {\n+            Density::Compressed => ListTactic::Mixed,\n+            Density::Tall => ListTactic::HorizontalVertical,\n+        }\n+    }\n+}\n+\n macro_rules! create_config {\n     ($($i:ident: $ty:ty),+ $(,)*) => (\n         #[derive(RustcDecodable, Clone)]\n@@ -70,6 +89,7 @@ create_config! {\n     fn_brace_style: BraceStyle,\n     fn_return_indent: ReturnIndent,\n     fn_args_paren_newline: bool,\n+    fn_args_layout: Density,\n     struct_trailing_comma: SeparatorTactic,\n     struct_lit_trailing_comma: SeparatorTactic,\n     struct_lit_style: StructLitStyle,\n@@ -94,6 +114,7 @@ impl Default for Config {\n             fn_brace_style: BraceStyle::SameLineWhere,\n             fn_return_indent: ReturnIndent::WithArgs,\n             fn_args_paren_newline: true,\n+            fn_args_layout: Density::Tall,\n             struct_trailing_comma: SeparatorTactic::Vertical,\n             struct_lit_trailing_comma: SeparatorTactic::Vertical,\n             struct_lit_style: StructLitStyle::BlockIndent,"}, {"sha": "18cf58b667b5aea67068c7dd886faa3022799ef3", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89cda8d43a92f16060319515343b69f5cbf3e1da/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89cda8d43a92f16060319515343b69f5cbf3e1da/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=89cda8d43a92f16060319515343b69f5cbf3e1da", "patch": "@@ -342,7 +342,7 @@ impl<'a> FmtVisitor<'a> {\n         }\n \n         let fmt = ListFormatting {\n-            tactic: ListTactic::HorizontalVertical,\n+            tactic: self.config.fn_args_layout.to_list_tactic(),\n             separator: \",\",\n             trailing_separator: SeparatorTactic::Never,\n             indent: arg_indent,"}, {"sha": "c05f173177b920d26b6f3bd09b5f37018c1f03ff", "filename": "tests/config/small_tabs.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89cda8d43a92f16060319515343b69f5cbf3e1da/tests%2Fconfig%2Fsmall_tabs.toml", "raw_url": "https://github.com/rust-lang/rust/raw/89cda8d43a92f16060319515343b69f5cbf3e1da/tests%2Fconfig%2Fsmall_tabs.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fsmall_tabs.toml?ref=89cda8d43a92f16060319515343b69f5cbf3e1da", "patch": "@@ -6,6 +6,7 @@ newline_style = \"Unix\"\n fn_brace_style = \"SameLineWhere\"\n fn_return_indent = \"WithArgs\"\n fn_args_paren_newline = true\n+fn_args_layout = \"Tall\"\n struct_trailing_comma = \"Vertical\"\n struct_lit_trailing_comma = \"Vertical\"\n struct_lit_style = \"BlockIndent\""}, {"sha": "77ced4c5e0e101cbf7f11f799efdc736ccae183d", "filename": "tests/source/fn-custom.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/89cda8d43a92f16060319515343b69f5cbf3e1da/tests%2Fsource%2Ffn-custom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89cda8d43a92f16060319515343b69f5cbf3e1da/tests%2Fsource%2Ffn-custom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom.rs?ref=89cda8d43a92f16060319515343b69f5cbf3e1da", "patch": "@@ -0,0 +1,13 @@\n+// rustfmt-fn_args_layout: Compressed\n+// Test some of the ways function signatures can be customised.\n+\n+// Test compressed layout of args.\n+fn foo(a: Aaaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbbbb, c: Ccccccccccccccccc, d: Ddddddddddddddddddddddddd, e: Eeeeeeeeeeeeeeeeeee) {\n+    foo();\n+}\n+\n+impl Foo {\n+    fn foo(self, a: Aaaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbbbb, c: Ccccccccccccccccc, d: Ddddddddddddddddddddddddd, e: Eeeeeeeeeeeeeeeeeee) {\n+        foo();\n+    }    \n+}"}, {"sha": "01abeaebb9e668c75fd68b5a30072e02ac30794a", "filename": "tests/target/fn-custom.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/89cda8d43a92f16060319515343b69f5cbf3e1da/tests%2Ftarget%2Ffn-custom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89cda8d43a92f16060319515343b69f5cbf3e1da/tests%2Ftarget%2Ffn-custom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom.rs?ref=89cda8d43a92f16060319515343b69f5cbf3e1da", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-fn_args_layout: Compressed\n+// Test some of the ways function signatures can be customised.\n+\n+// Test compressed layout of args.\n+fn foo(a: Aaaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbbbb, c: Ccccccccccccccccc,\n+       d: Ddddddddddddddddddddddddd, e: Eeeeeeeeeeeeeeeeeee) {\n+    foo();\n+}\n+\n+impl Foo {\n+    fn foo(self, a: Aaaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbbbb, c: Ccccccccccccccccc,\n+           d: Ddddddddddddddddddddddddd, e: Eeeeeeeeeeeeeeeeeee) {\n+        foo();\n+    }\n+}"}]}