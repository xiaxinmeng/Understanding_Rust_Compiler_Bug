{"sha": "de027b64f1052cbeed911b5e98aab8803cfe302e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMDI3YjY0ZjEwNTJjYmVlZDkxMWI1ZTk4YWFiODgwM2NmZTMwMmU=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2018-10-30T21:36:43Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2018-11-06T17:21:13Z"}, "message": "API changes as discussed in the comments", "tree": {"sha": "7626cebd7f6bb3ae376900c16558be812662ce1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7626cebd7f6bb3ae376900c16558be812662ce1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de027b64f1052cbeed911b5e98aab8803cfe302e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de027b64f1052cbeed911b5e98aab8803cfe302e", "html_url": "https://github.com/rust-lang/rust/commit/de027b64f1052cbeed911b5e98aab8803cfe302e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de027b64f1052cbeed911b5e98aab8803cfe302e/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94f3ce9def8659e281b398c1582036f181d62f44", "url": "https://api.github.com/repos/rust-lang/rust/commits/94f3ce9def8659e281b398c1582036f181d62f44", "html_url": "https://github.com/rust-lang/rust/commit/94f3ce9def8659e281b398c1582036f181d62f44"}], "stats": {"total": 23, "additions": 6, "deletions": 17}, "files": [{"sha": "a5cc58f0c92b1f26828dee7ac767d2c6fb4bc084", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/de027b64f1052cbeed911b5e98aab8803cfe302e/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de027b64f1052cbeed911b5e98aab8803cfe302e/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=de027b64f1052cbeed911b5e98aab8803cfe302e", "patch": "@@ -164,15 +164,13 @@ impl Layout {\n     /// alignment. In other words, if `K` has size 16, `K.align_to(32)`\n     /// will *still* have size 16.\n     ///\n-    /// # Panics\n-    ///\n-    /// Panics if the combination of `self.size()` and the given `align`\n-    /// violates the conditions listed in\n+    /// Returns an error if the combination of `self.size()` and the given\n+    /// `align` violates the conditions listed in\n     /// [`Layout::from_size_align`](#method.from_size_align).\n     #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n     #[inline]\n-    pub fn align_to(&self, align: usize) -> Self {\n-        Layout::from_size_align(self.size(), cmp::max(self.align(), align)).unwrap()\n+    pub fn align_to(&self, align: usize) -> Result<Self, LayoutErr> {\n+        Layout::from_size_align(self.size(), cmp::max(self.align(), align))\n     }\n \n     /// Returns the amount of padding we must insert after `self`\n@@ -296,23 +294,14 @@ impl Layout {\n     /// padding is inserted, the alignment of `next` is irrelevant,\n     /// and is not incorporated *at all* into the resulting layout.\n     ///\n-    /// Returns `(k, offset)`, where `k` is layout of the concatenated\n-    /// record and `offset` is the relative location, in bytes, of the\n-    /// start of the `next` embedded within the concatenated record\n-    /// (assuming that the record itself starts at offset 0).\n-    ///\n-    /// (The `offset` is always the same as `self.size()`; we use this\n-    ///  signature out of convenience in matching the signature of\n-    ///  `extend`.)\n-    ///\n     /// On arithmetic overflow, returns `LayoutErr`.\n     #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n     #[inline]\n-    pub fn extend_packed(&self, next: Self) -> Result<(Self, usize), LayoutErr> {\n+    pub fn extend_packed(&self, next: Self) -> Result<Self, LayoutErr> {\n         let new_size = self.size().checked_add(next.size())\n             .ok_or(LayoutErr { private: () })?;\n         let layout = Layout::from_size_align(new_size, self.align())?;\n-        Ok((layout, self.size()))\n+        Ok(layout)\n     }\n \n     /// Creates a layout describing the record for a `[T; n]`."}]}