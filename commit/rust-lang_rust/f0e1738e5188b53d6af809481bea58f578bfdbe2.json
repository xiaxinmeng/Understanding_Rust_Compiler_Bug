{"sha": "f0e1738e5188b53d6af809481bea58f578bfdbe2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZTE3MzhlNTE4OGI1M2Q2YWY4MDk0ODFiZWE1OGY1NzhiZmRiZTI=", "commit": {"author": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2016-09-26T15:21:45Z"}, "committer": {"name": "Tim Neumann", "email": "mail@timnn.me", "date": "2016-09-26T15:21:45Z"}, "message": "fix rebase fallout", "tree": {"sha": "5a79373bc614f4e86935aa316064a3bcc1224a58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a79373bc614f4e86935aa316064a3bcc1224a58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0e1738e5188b53d6af809481bea58f578bfdbe2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0e1738e5188b53d6af809481bea58f578bfdbe2", "html_url": "https://github.com/rust-lang/rust/commit/f0e1738e5188b53d6af809481bea58f578bfdbe2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0e1738e5188b53d6af809481bea58f578bfdbe2/comments", "author": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimNN", "id": 1178249, "node_id": "MDQ6VXNlcjExNzgyNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimNN", "html_url": "https://github.com/TimNN", "followers_url": "https://api.github.com/users/TimNN/followers", "following_url": "https://api.github.com/users/TimNN/following{/other_user}", "gists_url": "https://api.github.com/users/TimNN/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimNN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimNN/subscriptions", "organizations_url": "https://api.github.com/users/TimNN/orgs", "repos_url": "https://api.github.com/users/TimNN/repos", "events_url": "https://api.github.com/users/TimNN/events{/privacy}", "received_events_url": "https://api.github.com/users/TimNN/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf1fc2ce13793290240374f1e49613a5b8ce598c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf1fc2ce13793290240374f1e49613a5b8ce598c", "html_url": "https://github.com/rust-lang/rust/commit/cf1fc2ce13793290240374f1e49613a5b8ce598c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9240c35bfe4790892355d0957b7cffc462cbf028", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0e1738e5188b53d6af809481bea58f578bfdbe2/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e1738e5188b53d6af809481bea58f578bfdbe2/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=f0e1738e5188b53d6af809481bea58f578bfdbe2", "patch": "@@ -146,9 +146,9 @@ impl<'a> Resolver<'a> {\n \n     fn insert_custom_derive(&mut self, name: &str, ext: Rc<MultiItemModifier>, sp: Span) {\n         if !self.session.features.borrow().rustc_macro {\n-            let diagnostic = &self.session.parse_sess.span_diagnostic;\n+            let sess = &self.session.parse_sess;\n             let msg = \"loading custom derive macro crates is experimentally supported\";\n-            emit_feature_err(diagnostic, \"rustc_macro\", sp, feature_gate::GateIssue::Language, msg);\n+            emit_feature_err(sess, \"rustc_macro\", sp, feature_gate::GateIssue::Language, msg);\n         }\n         if self.derive_modes.insert(token::intern(name), ext).is_some() {\n             self.session.span_err(sp, &format!(\"cannot shadow existing derive mode `{}`\", name));"}]}