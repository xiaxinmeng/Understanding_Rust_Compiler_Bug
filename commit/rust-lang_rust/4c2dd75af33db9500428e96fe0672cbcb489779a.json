{"sha": "4c2dd75af33db9500428e96fe0672cbcb489779a", "node_id": "C_kwDOAAsO6NoAKDRjMmRkNzVhZjMzZGI5NTAwNDI4ZTk2ZmUwNjcyY2JjYjQ4OTc3OWE", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev+love@gmail.com", "date": "2022-12-21T23:32:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-21T23:32:12Z"}, "message": "Rollup merge of #106008 - uweigand:s390x-lintgroup-order, r=Nilstrieb\n\nSort lint_groups in no_lint_suggestion\n\nThe no_lint_suggestion routine passes a vector of lint group names to find_best_match_for_name.  That routine depends on the sort order of its input vector, which matters in case multiple inputs are at the same Levenshtein distance to the target name.\n\nHowever, no_lint_suggestion currently just passes lint_groups.keys() as input vector - this is sorted in hash value order, which is not guaranteed to be stable, and in fact differs between big- and little-endian host platforms, causing test failures on s390x.\n\nTo fix this, always sort the lint groups before using their names as input to find_best_match_for_name.  In doing so, prefer non- deprecated lint group names over deprecated ones, and then use alphabetical order.\n\nFixes https://github.com/rust-lang/rust/issues/105379", "tree": {"sha": "50c04cbfbb48deba7ab7200625b64924c15de673", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50c04cbfbb48deba7ab7200625b64924c15de673"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c2dd75af33db9500428e96fe0672cbcb489779a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjo5d8CRBK7hj4Ov3rIwAA0WkIAFeoFgbarLN9pUdRFlR3llem\npm8nFDAJ79HeC8ukFlVhCSy3wS+3xI3Z9Q+/t5ojUefq3ePLNxDP3cWU73pXSlVI\nJGT4cvhh30kiiDgbgGxY8oFkU5cZVt0oQfNoDlIncsd8theaBXhyC6PdEzTx6PfE\nu4sbOcHKVZG+GgRybz9YyJ6i0SvWZLT90xi/aLxqRux8kwE6U+98giCsg5HrHnms\ncU5jx7ZLLlvi2VuTTyjswonIm5/hHlV8DHSzElmpYcPBgZVTqLYhqSaaFPPG8ySH\ncOtv8J7JDnjCDFl3ujOSyzGUvaHFMzEHZwDQlr3EVaVysOyh4E3+WABngFRX5XU=\n=RJqg\n-----END PGP SIGNATURE-----\n", "payload": "tree 50c04cbfbb48deba7ab7200625b64924c15de673\nparent 6c0dedb445db61ba47d6d07f033c19f1d7631189\nparent 30fbfd5f05108d12f08711024db699e1b0632508\nauthor Yuki Okushi <huyuumi.dev+love@gmail.com> 1671665532 +0900\ncommitter GitHub <noreply@github.com> 1671665532 +0900\n\nRollup merge of #106008 - uweigand:s390x-lintgroup-order, r=Nilstrieb\n\nSort lint_groups in no_lint_suggestion\n\nThe no_lint_suggestion routine passes a vector of lint group names to find_best_match_for_name.  That routine depends on the sort order of its input vector, which matters in case multiple inputs are at the same Levenshtein distance to the target name.\n\nHowever, no_lint_suggestion currently just passes lint_groups.keys() as input vector - this is sorted in hash value order, which is not guaranteed to be stable, and in fact differs between big- and little-endian host platforms, causing test failures on s390x.\n\nTo fix this, always sort the lint groups before using their names as input to find_best_match_for_name.  In doing so, prefer non- deprecated lint group names over deprecated ones, and then use alphabetical order.\n\nFixes https://github.com/rust-lang/rust/issues/105379\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c2dd75af33db9500428e96fe0672cbcb489779a", "html_url": "https://github.com/rust-lang/rust/commit/4c2dd75af33db9500428e96fe0672cbcb489779a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c2dd75af33db9500428e96fe0672cbcb489779a/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c0dedb445db61ba47d6d07f033c19f1d7631189", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c0dedb445db61ba47d6d07f033c19f1d7631189", "html_url": "https://github.com/rust-lang/rust/commit/6c0dedb445db61ba47d6d07f033c19f1d7631189"}, {"sha": "30fbfd5f05108d12f08711024db699e1b0632508", "url": "https://api.github.com/repos/rust-lang/rust/commits/30fbfd5f05108d12f08711024db699e1b0632508", "html_url": "https://github.com/rust-lang/rust/commit/30fbfd5f05108d12f08711024db699e1b0632508"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "3c9ad410663f97f37346ea59c176fccbb36fb7f0", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4c2dd75af33db9500428e96fe0672cbcb489779a/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c2dd75af33db9500428e96fe0672cbcb489779a/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=4c2dd75af33db9500428e96fe0672cbcb489779a", "patch": "@@ -483,7 +483,16 @@ impl LintStore {\n             return CheckLintNameResult::NoLint(Some(Symbol::intern(&name_lower)));\n         }\n         // ...if not, search for lints with a similar name\n-        let groups = self.lint_groups.keys().copied().map(Symbol::intern);\n+        // Note: find_best_match_for_name depends on the sort order of its input vector.\n+        // To ensure deterministic output, sort elements of the lint_groups hash map.\n+        // Also, never suggest deprecated lint groups.\n+        let mut groups: Vec<_> = self\n+            .lint_groups\n+            .iter()\n+            .filter_map(|(k, LintGroup { depr, .. })| if depr.is_none() { Some(k) } else { None })\n+            .collect();\n+        groups.sort();\n+        let groups = groups.iter().map(|k| Symbol::intern(k));\n         let lints = self.lints.iter().map(|l| Symbol::intern(&l.name_lower()));\n         let names: Vec<Symbol> = groups.chain(lints).collect();\n         let suggestion = find_best_match_for_name(&names, Symbol::intern(&name_lower), None);"}]}