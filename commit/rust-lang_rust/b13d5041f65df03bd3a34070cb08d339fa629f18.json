{"sha": "b13d5041f65df03bd3a34070cb08d339fa629f18", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxM2Q1MDQxZjY1ZGYwM2JkM2EzNDA3MGNiMDhkMzM5ZmE2MjlmMTg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-08-02T23:11:46Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-08-02T23:11:46Z"}, "message": "improve log when something no longer exists", "tree": {"sha": "f2eb60aa0eaa392d3231cb16713bb5371d28f3b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2eb60aa0eaa392d3231cb16713bb5371d28f3b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b13d5041f65df03bd3a34070cb08d339fa629f18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b13d5041f65df03bd3a34070cb08d339fa629f18", "html_url": "https://github.com/rust-lang/rust/commit/b13d5041f65df03bd3a34070cb08d339fa629f18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b13d5041f65df03bd3a34070cb08d339fa629f18/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94acff180369077c64b19c1302dd48d390011ef5", "url": "https://api.github.com/repos/rust-lang/rust/commits/94acff180369077c64b19c1302dd48d390011ef5", "html_url": "https://github.com/rust-lang/rust/commit/94acff180369077c64b19c1302dd48d390011ef5"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "61c14adb3a0eaf3322e3ab62dd65ea5779e744ee", "filename": "src/librustc_incremental/persist/directory.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b13d5041f65df03bd3a34070cb08d339fa629f18/src%2Flibrustc_incremental%2Fpersist%2Fdirectory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b13d5041f65df03bd3a34070cb08d339fa629f18/src%2Flibrustc_incremental%2Fpersist%2Fdirectory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirectory.rs?ref=b13d5041f65df03bd3a34070cb08d339fa629f18", "patch": "@@ -53,6 +53,23 @@ impl DefIdDirectory {\n         DefIdDirectory { paths: vec![], krates: krates }\n     }\n \n+    fn max_current_crate(&self, tcx: TyCtxt) -> ast::CrateNum {\n+        tcx.sess.cstore.crates()\n+                       .into_iter()\n+                       .max()\n+                       .unwrap_or(LOCAL_CRATE)\n+    }\n+\n+    /// Returns a string form for `index`; useful for debugging\n+    pub fn def_path_string(&self, tcx: TyCtxt, index: DefPathIndex) -> String {\n+        let path = &self.paths[index.index as usize];\n+        if self.krate_still_valid(tcx, self.max_current_crate(tcx), path.krate) {\n+            path.to_string(tcx)\n+        } else {\n+            format!(\"<crate {} changed>\", path.krate)\n+        }\n+    }\n+\n     pub fn krate_still_valid(&self,\n                              tcx: TyCtxt,\n                              max_current_crate: ast::CrateNum,\n@@ -75,11 +92,7 @@ impl DefIdDirectory {\n     }\n \n     pub fn retrace(&self, tcx: TyCtxt) -> RetracedDefIdDirectory {\n-        let max_current_crate =\n-            tcx.sess.cstore.crates()\n-                           .into_iter()\n-                           .max()\n-                           .unwrap_or(LOCAL_CRATE);\n+        let max_current_crate = self.max_current_crate(tcx);\n \n         let ids = self.paths.iter()\n                             .map(|path| {"}, {"sha": "793a0466c31501dc611ac1a404b1519643062c89", "filename": "src/librustc_incremental/persist/load.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b13d5041f65df03bd3a34070cb08d339fa629f18/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b13d5041f65df03bd3a34070cb08d339fa629f18/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fload.rs?ref=b13d5041f65df03bd3a34070cb08d339fa629f18", "patch": "@@ -122,7 +122,9 @@ pub fn decode_dep_graph<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     // source is dirty, it removes it from that list and adds the\n     // target to `dirty_nodes`. It stops when it reaches a fixed\n     // point.\n-    let clean_edges = compute_clean_edges(&serialized_dep_graph.edges,\n+    let clean_edges = compute_clean_edges(tcx,\n+                                          &directory,\n+                                          &serialized_dep_graph.edges,\n                                           &retraced,\n                                           &mut dirty_nodes);\n \n@@ -190,7 +192,9 @@ fn initial_dirty_nodes<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     dirty_nodes\n }\n \n-fn compute_clean_edges(serialized_edges: &[(SerializedEdge)],\n+fn compute_clean_edges(tcx: TyCtxt,\n+                       directory: &DefIdDirectory,\n+                       serialized_edges: &[(SerializedEdge)],\n                        retraced: &RetracedDefIdDirectory,\n                        dirty_nodes: &mut DirtyNodes)\n                        -> CleanEdges {\n@@ -205,7 +209,11 @@ fn compute_clean_edges(serialized_edges: &[(SerializedEdge)],\n             } else {\n                 // source removed, target must be dirty\n                 debug!(\"compute_clean_edges: {:?} dirty because {:?} no longer exists\",\n-                       target, serialized_source);\n+                       target,\n+                       serialized_source.map_def(|&index| {\n+                           Some(directory.def_path_string(tcx, index))\n+                       }).unwrap());\n+\n                 dirty_nodes.insert(target);\n             }\n         } else {"}, {"sha": "b7bc9ee7566ce6404b25fee28fd2aa83cba90533", "filename": "src/librustc_incremental/persist/save.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b13d5041f65df03bd3a34070cb08d339fa629f18/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b13d5041f65df03bd3a34070cb08d339fa629f18/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs?ref=b13d5041f65df03bd3a34070cb08d339fa629f18", "patch": "@@ -14,7 +14,6 @@ use rustc::hir::def_id::DefId;\n use rustc::middle::cstore::LOCAL_CRATE;\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n-use rustc_data_structures::fnv::FnvHashMap;\n use rustc_serialize::{Encodable as RustcEncodable};\n use std::hash::{Hash, Hasher, SipHasher};\n use std::io::{self, Cursor, Write};"}]}