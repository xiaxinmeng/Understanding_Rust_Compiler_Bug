{"sha": "fa689f865e4096a1788c38fe9fef0c05dc15b9be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNjg5Zjg2NWU0MDk2YTE3ODhjMzhmZTlmZWYwYzA1ZGMxNWI5YmU=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-03-30T00:39:28Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-03-30T13:58:23Z"}, "message": "Fix `manual_map` at the end of an if chain", "tree": {"sha": "557cc064ef1408fdd95b8d599e27a46f8203af9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/557cc064ef1408fdd95b8d599e27a46f8203af9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa689f865e4096a1788c38fe9fef0c05dc15b9be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF4EABYKAAYFAmBjLocACgkQ2lnoZDo37QZZVgEAhYT37DToDsNOhKjIlrtA34io\nvgk4o6+/nqFjIb1vqtcBAN4rR7REB2WW/1ek3Cd1khvKV5j9TFyKVu6OCByXJm0B\n=Lgwp\n-----END PGP SIGNATURE-----", "payload": "tree 557cc064ef1408fdd95b8d599e27a46f8203af9d\nparent 8e56a2b27f005e7f81756ccc281eca69900dddd7\nauthor Jason Newcomb <jsnewcomb@pm.me> 1617064768 -0400\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1617112703 -0400\n\nFix `manual_map` at the end of an if chain\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa689f865e4096a1788c38fe9fef0c05dc15b9be", "html_url": "https://github.com/rust-lang/rust/commit/fa689f865e4096a1788c38fe9fef0c05dc15b9be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa689f865e4096a1788c38fe9fef0c05dc15b9be/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e56a2b27f005e7f81756ccc281eca69900dddd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e56a2b27f005e7f81756ccc281eca69900dddd7", "html_url": "https://github.com/rust-lang/rust/commit/8e56a2b27f005e7f81756ccc281eca69900dddd7"}], "stats": {"total": 99, "additions": 61, "deletions": 38}, "files": [{"sha": "d6ef3aa1e778961bcc3899740b87538495315490", "filename": "clippy_lints/src/manual_map.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fa689f865e4096a1788c38fe9fef0c05dc15b9be/clippy_lints%2Fsrc%2Fmanual_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa689f865e4096a1788c38fe9fef0c05dc15b9be/clippy_lints%2Fsrc%2Fmanual_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_map.rs?ref=fa689f865e4096a1788c38fe9fef0c05dc15b9be", "patch": "@@ -2,7 +2,7 @@ use crate::{map_unit_fn::OPTION_MAP_UNIT_FN, matches::MATCH_AS_REF};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::{snippet_with_applicability, snippet_with_context};\n use clippy_utils::ty::{can_partially_move_ty, is_type_diagnostic_item, peel_mid_ty_refs_is_mutable};\n-use clippy_utils::{is_allowed, is_else_clause_of_if_let_else, match_def_path, match_var, paths, peel_hir_expr_refs};\n+use clippy_utils::{is_allowed, is_else_clause, match_def_path, match_var, paths, peel_hir_expr_refs};\n use rustc_ast::util::parser::PREC_POSTFIX;\n use rustc_errors::Applicability;\n use rustc_hir::{\n@@ -181,8 +181,7 @@ impl LateLintPass<'_> for ManualMap {\n                 expr.span,\n                 \"manual implementation of `Option::map`\",\n                 \"try this\",\n-                if matches!(match_kind, MatchSource::IfLetDesugar { .. }) && is_else_clause_of_if_let_else(cx.tcx, expr)\n-                {\n+                if matches!(match_kind, MatchSource::IfLetDesugar { .. }) && is_else_clause(cx.tcx, expr) {\n                     format!(\"{{ {}{}.map({}) }}\", scrutinee_str, as_ref_str, body_str)\n                 } else {\n                     format!(\"{}{}.map({})\", scrutinee_str, as_ref_str, body_str)"}, {"sha": "d6364625e70417ab2e232e633581c9f61ddb6af5", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fa689f865e4096a1788c38fe9fef0c05dc15b9be/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa689f865e4096a1788c38fe9fef0c05dc15b9be/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=fa689f865e4096a1788c38fe9fef0c05dc15b9be", "patch": "@@ -797,22 +797,29 @@ pub fn get_parent_as_impl(tcx: TyCtxt<'_>, id: HirId) -> Option<&Impl<'_>> {\n     }\n }\n \n-/// Checks if the given expression is the else clause in the expression `if let .. {} else {}`\n-pub fn is_else_clause_of_if_let_else(tcx: TyCtxt<'_>, expr: &Expr<'_>) -> bool {\n+/// Checks if the given expression is the else clause of either an `if` or `if let` expression.\n+pub fn is_else_clause(tcx: TyCtxt<'_>, expr: &Expr<'_>) -> bool {\n     let map = tcx.hir();\n     let mut iter = map.parent_iter(expr.hir_id);\n-    let arm_id = match iter.next() {\n-        Some((id, Node::Arm(..))) => id,\n-        _ => return false,\n-    };\n     match iter.next() {\n+        Some((arm_id, Node::Arm(..))) => matches!(\n+            iter.next(),\n+            Some((\n+                _,\n+                Node::Expr(Expr {\n+                    kind: ExprKind::Match(_, [_, else_arm], MatchSource::IfLetDesugar { .. }),\n+                    ..\n+                })\n+            ))\n+            if else_arm.hir_id == arm_id\n+        ),\n         Some((\n             _,\n             Node::Expr(Expr {\n-                kind: ExprKind::Match(_, [_, else_arm], kind),\n+                kind: ExprKind::If(_, _, Some(else_expr)),\n                 ..\n             }),\n-        )) => else_arm.hir_id == arm_id && matches!(kind, MatchSource::IfLetDesugar { .. }),\n+        )) => else_expr.hir_id == expr.hir_id,\n         _ => false,\n     }\n }"}, {"sha": "5e26958041d383dd925b643c8ffed0d8fbb8c902", "filename": "tests/ui/manual_map_option.fixed", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fa689f865e4096a1788c38fe9fef0c05dc15b9be/tests%2Fui%2Fmanual_map_option.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/fa689f865e4096a1788c38fe9fef0c05dc15b9be/tests%2Fui%2Fmanual_map_option.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option.fixed?ref=fa689f865e4096a1788c38fe9fef0c05dc15b9be", "patch": "@@ -7,6 +7,7 @@\n     clippy::map_identity,\n     clippy::unit_arg,\n     clippy::match_ref_pats,\n+    clippy::redundant_pattern_matching,\n     dead_code\n )]\n \n@@ -130,7 +131,11 @@ fn main() {\n     }\n \n     // #6847\n-    if Some(0).is_some() {\n+    if let Some(_) = Some(0) {\n+        Some(0)\n+    } else { Some(0).map(|x| x + 1) };\n+\n+    if true {\n         Some(0)\n     } else { Some(0).map(|x| x + 1) };\n }"}, {"sha": "33eb81561050036d62459426bcdfe3a5ecf22149", "filename": "tests/ui/manual_map_option.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fa689f865e4096a1788c38fe9fef0c05dc15b9be/tests%2Fui%2Fmanual_map_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa689f865e4096a1788c38fe9fef0c05dc15b9be/tests%2Fui%2Fmanual_map_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option.rs?ref=fa689f865e4096a1788c38fe9fef0c05dc15b9be", "patch": "@@ -7,6 +7,7 @@\n     clippy::map_identity,\n     clippy::unit_arg,\n     clippy::match_ref_pats,\n+    clippy::redundant_pattern_matching,\n     dead_code\n )]\n \n@@ -195,4 +196,12 @@ fn main() {\n     } else {\n         None\n     };\n+\n+    if true {\n+        Some(0)\n+    } else if let Some(x) = Some(0) {\n+        Some(x + 1)\n+    } else {\n+        None\n+    };\n }"}, {"sha": "cdc2c0e62a9b9434838946240bbbc1f44e3a7f5c", "filename": "tests/ui/manual_map_option.stderr", "status": "modified", "additions": 29, "deletions": 26, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/fa689f865e4096a1788c38fe9fef0c05dc15b9be/tests%2Fui%2Fmanual_map_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa689f865e4096a1788c38fe9fef0c05dc15b9be/tests%2Fui%2Fmanual_map_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option.stderr?ref=fa689f865e4096a1788c38fe9fef0c05dc15b9be", "patch": "@@ -1,5 +1,5 @@\n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:14:5\n+  --> $DIR/manual_map_option.rs:15:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(_) => Some(2),\n@@ -10,7 +10,7 @@ LL | |     };\n    = note: `-D clippy::manual-map` implied by `-D warnings`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:19:5\n+  --> $DIR/manual_map_option.rs:20:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(x) => Some(x + 1),\n@@ -19,7 +19,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| x + 1)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:24:5\n+  --> $DIR/manual_map_option.rs:25:5\n    |\n LL | /     match Some(\"\") {\n LL | |         Some(x) => Some(x.is_empty()),\n@@ -28,7 +28,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(\"\").map(|x| x.is_empty())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:29:5\n+  --> $DIR/manual_map_option.rs:30:5\n    |\n LL | /     if let Some(x) = Some(0) {\n LL | |         Some(!x)\n@@ -38,7 +38,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| !x)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:36:5\n+  --> $DIR/manual_map_option.rs:37:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(x) => { Some(std::convert::identity(x)) }\n@@ -47,7 +47,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(std::convert::identity)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:41:5\n+  --> $DIR/manual_map_option.rs:42:5\n    |\n LL | /     match Some(&String::new()) {\n LL | |         Some(x) => Some(str::len(x)),\n@@ -56,7 +56,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(&String::new()).map(|x| str::len(x))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:51:5\n+  --> $DIR/manual_map_option.rs:52:5\n    |\n LL | /     match &Some([0, 1]) {\n LL | |         Some(x) => Some(x[0]),\n@@ -65,7 +65,7 @@ LL | |     };\n    | |_____^ help: try this: `Some([0, 1]).as_ref().map(|x| x[0])`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:56:5\n+  --> $DIR/manual_map_option.rs:57:5\n    |\n LL | /     match &Some(0) {\n LL | |         &Some(x) => Some(x * 2),\n@@ -74,7 +74,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| x * 2)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:61:5\n+  --> $DIR/manual_map_option.rs:62:5\n    |\n LL | /     match Some(String::new()) {\n LL | |         Some(ref x) => Some(x.is_empty()),\n@@ -83,7 +83,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.is_empty())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:66:5\n+  --> $DIR/manual_map_option.rs:67:5\n    |\n LL | /     match &&Some(String::new()) {\n LL | |         Some(x) => Some(x.len()),\n@@ -92,7 +92,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.len())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:71:5\n+  --> $DIR/manual_map_option.rs:72:5\n    |\n LL | /     match &&Some(0) {\n LL | |         &&Some(x) => Some(x + x),\n@@ -101,7 +101,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| x + x)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:84:9\n+  --> $DIR/manual_map_option.rs:85:9\n    |\n LL | /         match &mut Some(String::new()) {\n LL | |             Some(x) => Some(x.push_str(\"\")),\n@@ -110,7 +110,7 @@ LL | |         };\n    | |_________^ help: try this: `Some(String::new()).as_mut().map(|x| x.push_str(\"\"))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:90:5\n+  --> $DIR/manual_map_option.rs:91:5\n    |\n LL | /     match &mut Some(String::new()) {\n LL | |         Some(ref x) => Some(x.len()),\n@@ -119,7 +119,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.len())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:95:5\n+  --> $DIR/manual_map_option.rs:96:5\n    |\n LL | /     match &mut &Some(String::new()) {\n LL | |         Some(x) => Some(x.is_empty()),\n@@ -128,7 +128,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.is_empty())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:100:5\n+  --> $DIR/manual_map_option.rs:101:5\n    |\n LL | /     match Some((0, 1, 2)) {\n LL | |         Some((x, y, z)) => Some(x + y + z),\n@@ -137,7 +137,7 @@ LL | |     };\n    | |_____^ help: try this: `Some((0, 1, 2)).map(|(x, y, z)| x + y + z)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:105:5\n+  --> $DIR/manual_map_option.rs:106:5\n    |\n LL | /     match Some([1, 2, 3]) {\n LL | |         Some([first, ..]) => Some(first),\n@@ -146,7 +146,7 @@ LL | |     };\n    | |_____^ help: try this: `Some([1, 2, 3]).map(|[first, ..]| first)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:110:5\n+  --> $DIR/manual_map_option.rs:111:5\n    |\n LL | /     match &Some((String::new(), \"test\")) {\n LL | |         Some((x, y)) => Some((y, x)),\n@@ -155,7 +155,7 @@ LL | |     };\n    | |_____^ help: try this: `Some((String::new(), \"test\")).as_ref().map(|(x, y)| (y, x))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:168:5\n+  --> $DIR/manual_map_option.rs:169:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(x) => Some(vec![x]),\n@@ -164,24 +164,27 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| vec![x])`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:173:5\n+  --> $DIR/manual_map_option.rs:174:5\n    |\n LL | /     match option_env!(\"\") {\n LL | |         Some(x) => Some(String::from(x)),\n LL | |         None => None,\n LL | |     };\n    | |_____^ help: try this: `option_env!(\"\").map(String::from)`\n \n-error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/manual_map_option.rs:191:12\n-   |\n-LL |     if let Some(_) = Some(0) {\n-   |     -------^^^^^^^---------- help: try this: `if Some(0).is_some()`\n+error: manual implementation of `Option::map`\n+  --> $DIR/manual_map_option.rs:194:12\n    |\n-   = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n+LL |       } else if let Some(x) = Some(0) {\n+   |  ____________^\n+LL | |         Some(x + 1)\n+LL | |     } else {\n+LL | |         None\n+LL | |     };\n+   | |_____^ help: try this: `{ Some(0).map(|x| x + 1) }`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:193:12\n+  --> $DIR/manual_map_option.rs:202:12\n    |\n LL |       } else if let Some(x) = Some(0) {\n    |  ____________^"}]}