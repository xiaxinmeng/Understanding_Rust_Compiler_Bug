{"sha": "dddede4a2472127268295065c8496fa554237e93", "node_id": "C_kwDOAAsO6NoAKGRkZGVkZTRhMjQ3MjEyNzI2ODI5NTA2NWM4NDk2ZmE1NTQyMzdlOTM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-23T18:55:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-23T18:55:46Z"}, "message": "Rollup merge of #109472 - MU001999:patch-3, r=eholk\n\nAdd parentheses properly for method calls\n\nFixes #109436", "tree": {"sha": "acf5f37284c51dffc6642953a53d1b66cf09c1e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acf5f37284c51dffc6642953a53d1b66cf09c1e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dddede4a2472127268295065c8496fa554237e93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkHKCyCRBK7hj4Ov3rIwAAeUUIAGWBRsiubt6nZ7fBuhq1X4K8\nhzMNhLN5rhwJ5sQu5uN3HZfaRergqAVz7/pZshmPtggDAxE7LtESw0AJLFfuiAov\nEh4mmwAkTFMh8W8MzwAVlaiCw0dMjG3J9tGTbGgCb6ORLegfQH3Co8mpZeZl9QZj\nBucH1XEhJvP4HjudyglQTDXQ8Fi6KR24ZxNJhCREv9dbeG7Sz0FXWAhABKhmqjBZ\nJhHovu7yjlCOc2AyR5xZHu4StXUPYlCdQxhOlYRQL77EEWF2yuvuI8hutHGgje2h\npUf6f1wR5JSaG3VXNAxADKZaGZ/jTP0ExNB8OOWnIl4afLrN0X0dFuNPXOywZK0=\n=VVjL\n-----END PGP SIGNATURE-----\n", "payload": "tree acf5f37284c51dffc6642953a53d1b66cf09c1e3\nparent 2a39cf560f1e6d33a819a8d32827f03385996ace\nparent 2580348ca35270b5cefbd0f62ff4e6ccd44ef3be\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679597746 +0100\ncommitter GitHub <noreply@github.com> 1679597746 +0100\n\nRollup merge of #109472 - MU001999:patch-3, r=eholk\n\nAdd parentheses properly for method calls\n\nFixes #109436\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dddede4a2472127268295065c8496fa554237e93", "html_url": "https://github.com/rust-lang/rust/commit/dddede4a2472127268295065c8496fa554237e93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dddede4a2472127268295065c8496fa554237e93/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a39cf560f1e6d33a819a8d32827f03385996ace", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a39cf560f1e6d33a819a8d32827f03385996ace", "html_url": "https://github.com/rust-lang/rust/commit/2a39cf560f1e6d33a819a8d32827f03385996ace"}, {"sha": "2580348ca35270b5cefbd0f62ff4e6ccd44ef3be", "url": "https://api.github.com/repos/rust-lang/rust/commits/2580348ca35270b5cefbd0f62ff4e6ccd44ef3be", "html_url": "https://github.com/rust-lang/rust/commit/2580348ca35270b5cefbd0f62ff4e6ccd44ef3be"}], "stats": {"total": 60, "additions": 53, "deletions": 7}, "files": [{"sha": "be0817472ea414499ad52455d2063779db20bfd5", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/dddede4a2472127268295065c8496fa554237e93/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dddede4a2472127268295065c8496fa554237e93/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=dddede4a2472127268295065c8496fa554237e93", "patch": "@@ -1356,6 +1356,31 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                             Applicability::MaybeIncorrect,\n                         );\n                     } else {\n+                        let is_mut = mut_ref_self_ty_satisfies_pred || ref_inner_ty_mut;\n+                        let sugg_prefix = format!(\"&{}\", if is_mut { \"mut \" } else { \"\" });\n+                        let sugg_msg = &format!(\n+                            \"consider{} borrowing here\",\n+                            if is_mut { \" mutably\" } else { \"\" }\n+                        );\n+\n+                        // Issue #109436, we need to add parentheses properly for method calls\n+                        // for example, `foo.into()` should be `(&foo).into()`\n+                        if let Ok(snippet) = self.tcx.sess.source_map().span_to_snippet(\n+                            self.tcx.sess.source_map().span_look_ahead(span, Some(\".\"), Some(50)),\n+                        ) {\n+                            if snippet == \".\" {\n+                                err.multipart_suggestion_verbose(\n+                                    sugg_msg,\n+                                    vec![\n+                                        (span.shrink_to_lo(), format!(\"({}\", sugg_prefix)),\n+                                        (span.shrink_to_hi(), \")\".to_string()),\n+                                    ],\n+                                    Applicability::MaybeIncorrect,\n+                                );\n+                                return true;\n+                            }\n+                        }\n+\n                         // Issue #104961, we need to add parentheses properly for compond expressions\n                         // for example, `x.starts_with(\"hi\".to_string() + \"you\")`\n                         // should be `x.starts_with(&(\"hi\".to_string() + \"you\"))`\n@@ -1372,14 +1397,7 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                             _ => false,\n                         };\n \n-                        let is_mut = mut_ref_self_ty_satisfies_pred || ref_inner_ty_mut;\n                         let span = if needs_parens { span } else { span.shrink_to_lo() };\n-                        let sugg_prefix = format!(\"&{}\", if is_mut { \"mut \" } else { \"\" });\n-                        let sugg_msg = &format!(\n-                            \"consider{} borrowing here\",\n-                            if is_mut { \" mutably\" } else { \"\" }\n-                        );\n-\n                         let suggestions = if !needs_parens {\n                             vec![(span.shrink_to_lo(), format!(\"{}\", sugg_prefix))]\n                         } else {"}, {"sha": "e45ee5991db288c02b12b959b8b4fb3872cc3e3e", "filename": "tests/ui/suggestions/issue-109436.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/dddede4a2472127268295065c8496fa554237e93/tests%2Fui%2Fsuggestions%2Fissue-109436.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dddede4a2472127268295065c8496fa554237e93/tests%2Fui%2Fsuggestions%2Fissue-109436.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-109436.rs?ref=dddede4a2472127268295065c8496fa554237e93", "patch": "@@ -0,0 +1,13 @@\n+struct Foo;\n+struct Bar;\n+\n+impl From<&Foo> for Bar {\n+    fn from(foo: &Foo) -> Bar {\n+        Bar\n+    }\n+}\n+\n+fn main() {\n+    let foo = Foo;\n+    let b: Bar = foo.into(); //~ ERROR E0277\n+}"}, {"sha": "48518b33d12ac36c36afbe8c8cd7459db83a760a", "filename": "tests/ui/suggestions/issue-109436.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/dddede4a2472127268295065c8496fa554237e93/tests%2Fui%2Fsuggestions%2Fissue-109436.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dddede4a2472127268295065c8496fa554237e93/tests%2Fui%2Fsuggestions%2Fissue-109436.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-109436.stderr?ref=dddede4a2472127268295065c8496fa554237e93", "patch": "@@ -0,0 +1,15 @@\n+error[E0277]: the trait bound `Foo: Into<_>` is not satisfied\n+  --> $DIR/issue-109436.rs:12:22\n+   |\n+LL |     let b: Bar = foo.into();\n+   |                      ^^^^ the trait `~const Into<_>` is not implemented for `Foo`\n+   |\n+   = note: required for `Foo` to implement `Into<Bar>`\n+help: consider borrowing here\n+   |\n+LL |     let b: Bar = (&foo).into();\n+   |                  ++   +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}