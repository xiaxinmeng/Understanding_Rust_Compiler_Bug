{"sha": "a0e057540eb996ea43ba5e0dce2b69fa972f718f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZTA1NzU0MGViOTk2ZWE0M2JhNWUwZGNlMmI2OWZhOTcyZjcxOGY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-09T15:47:29Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-09T16:14:28Z"}, "message": "evaluate required_consts when pushing stack frame in Miri engine", "tree": {"sha": "c46e51cfdaa34c65f52653b793f3fe51ecb86614", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c46e51cfdaa34c65f52653b793f3fe51ecb86614"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0e057540eb996ea43ba5e0dce2b69fa972f718f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0e057540eb996ea43ba5e0dce2b69fa972f718f", "html_url": "https://github.com/rust-lang/rust/commit/a0e057540eb996ea43ba5e0dce2b69fa972f718f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0e057540eb996ea43ba5e0dce2b69fa972f718f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bff69c9525b8c498fb6485ac38b4b3497bb37c1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bff69c9525b8c498fb6485ac38b4b3497bb37c1a", "html_url": "https://github.com/rust-lang/rust/commit/bff69c9525b8c498fb6485ac38b4b3497bb37c1a"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "7c2f749c1567cf3e376899a06afd2f4d4d9fbbf5", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a0e057540eb996ea43ba5e0dce2b69fa972f718f/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0e057540eb996ea43ba5e0dce2b69fa972f718f/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=a0e057540eb996ea43ba5e0dce2b69fa972f718f", "patch": "@@ -652,6 +652,13 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         let frame = M::init_frame_extra(self, pre_frame)?;\n         self.stack_mut().push(frame);\n \n+        // Make sure all the constants required by this frame evaluate successfully (post-monomorphization check).\n+        for const_ in &body.required_consts {\n+            let const_ =\n+                self.subst_from_current_frame_and_normalize_erasing_regions(const_.literal);\n+            self.const_to_op(const_, None)?;\n+        }\n+\n         // Locals are initially uninitialized.\n         let dummy = LocalState { value: LocalValue::Uninitialized, layout: Cell::new(None) };\n         let mut locals = IndexVec::from_elem(dummy, &body.local_decls);"}]}