{"sha": "7e3224f419d17c95ea4344e58d3e26688c77c6d7", "node_id": "C_kwDOAAsO6NoAKDdlMzIyNGY0MTlkMTdjOTVlYTQzNDRlNThkM2UyNjY4OGM3N2M2ZDc", "commit": {"author": {"name": "longfangsong", "email": "longfangsong@icloud.com", "date": "2021-09-28T02:20:35Z"}, "committer": {"name": "longfangsong", "email": "longfangsong@icloud.com", "date": "2021-09-28T02:20:35Z"}, "message": "Address comments", "tree": {"sha": "35d50b92d15c1687a9e96c68abd76ad42e2dc56a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35d50b92d15c1687a9e96c68abd76ad42e2dc56a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e3224f419d17c95ea4344e58d3e26688c77c6d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e3224f419d17c95ea4344e58d3e26688c77c6d7", "html_url": "https://github.com/rust-lang/rust/commit/7e3224f419d17c95ea4344e58d3e26688c77c6d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e3224f419d17c95ea4344e58d3e26688c77c6d7/comments", "author": {"login": "longfangsong", "id": 13777628, "node_id": "MDQ6VXNlcjEzNzc3NjI4", "avatar_url": "https://avatars.githubusercontent.com/u/13777628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/longfangsong", "html_url": "https://github.com/longfangsong", "followers_url": "https://api.github.com/users/longfangsong/followers", "following_url": "https://api.github.com/users/longfangsong/following{/other_user}", "gists_url": "https://api.github.com/users/longfangsong/gists{/gist_id}", "starred_url": "https://api.github.com/users/longfangsong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/longfangsong/subscriptions", "organizations_url": "https://api.github.com/users/longfangsong/orgs", "repos_url": "https://api.github.com/users/longfangsong/repos", "events_url": "https://api.github.com/users/longfangsong/events{/privacy}", "received_events_url": "https://api.github.com/users/longfangsong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "longfangsong", "id": 13777628, "node_id": "MDQ6VXNlcjEzNzc3NjI4", "avatar_url": "https://avatars.githubusercontent.com/u/13777628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/longfangsong", "html_url": "https://github.com/longfangsong", "followers_url": "https://api.github.com/users/longfangsong/followers", "following_url": "https://api.github.com/users/longfangsong/following{/other_user}", "gists_url": "https://api.github.com/users/longfangsong/gists{/gist_id}", "starred_url": "https://api.github.com/users/longfangsong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/longfangsong/subscriptions", "organizations_url": "https://api.github.com/users/longfangsong/orgs", "repos_url": "https://api.github.com/users/longfangsong/repos", "events_url": "https://api.github.com/users/longfangsong/events{/privacy}", "received_events_url": "https://api.github.com/users/longfangsong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51b1f7707b0742d22241562158c8a2cf22e684d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/51b1f7707b0742d22241562158c8a2cf22e684d4", "html_url": "https://github.com/rust-lang/rust/commit/51b1f7707b0742d22241562158c8a2cf22e684d4"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "026f4aaf6c451ff83ef7dbf1477f4bc95f834826", "filename": "crates/ide_assists/src/handlers/move_from_mod_rs.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7e3224f419d17c95ea4344e58d3e26688c77c6d7/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_from_mod_rs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e3224f419d17c95ea4344e58d3e26688c77c6d7/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_from_mod_rs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_from_mod_rs.rs?ref=7e3224f419d17c95ea4344e58d3e26688c77c6d7", "patch": "@@ -2,9 +2,12 @@ use ide_db::{\n     assists::{AssistId, AssistKind},\n     base_db::AnchoredPathBuf,\n };\n-use syntax::{ast, AstNode, TextRange};\n+use syntax::{ast, AstNode};\n \n-use crate::{assist_context::{AssistContext, Assists}, utils::trimmed_text_range};\n+use crate::{\n+    assist_context::{AssistContext, Assists},\n+    utils::trimmed_text_range,\n+};\n \n // Assist: move_from_mod_rs\n //\n@@ -35,16 +38,13 @@ pub(crate) fn move_from_mod_rs(acc: &mut Assists, ctx: &AssistContext) -> Option\n         return None;\n     }\n \n-    let target = TextRange::new(\n-        source_file.syntax().text_range().start(),\n-        source_file.syntax().text_range().end(),\n-    );\n+    let target = source_file.syntax().text_range();\n     let module_name = module.name(ctx.db())?.to_string();\n     let path = format!(\"../{}.rs\", module_name);\n     let dst = AnchoredPathBuf { anchor: ctx.frange.file_id, path };\n     acc.add(\n         AssistId(\"move_from_mod_rs\", AssistKind::Refactor),\n-        format!(\"Turn {}/mod.rs to {}.rs\", module_name, module_name),\n+        format!(\"Convert {}/mod.rs to {}.rs\", module_name, module_name),\n         target,\n         |builder| {\n             builder.move_file(ctx.frange.file_id, dst);"}, {"sha": "6f505de4cf0c86c9ee315c42fe2ffc4b81276289", "filename": "crates/ide_assists/src/handlers/move_to_mod_rs.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7e3224f419d17c95ea4344e58d3e26688c77c6d7/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_to_mod_rs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e3224f419d17c95ea4344e58d3e26688c77c6d7/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_to_mod_rs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_to_mod_rs.rs?ref=7e3224f419d17c95ea4344e58d3e26688c77c6d7", "patch": "@@ -2,10 +2,12 @@ use ide_db::{\n     assists::{AssistId, AssistKind},\n     base_db::AnchoredPathBuf,\n };\n-use syntax::{ast, AstNode, TextRange};\n+use syntax::{ast, AstNode};\n \n-use crate::assist_context::{AssistContext, Assists};\n-use crate::utils::trimmed_text_range;\n+use crate::{\n+    assist_context::{AssistContext, Assists},\n+    utils::trimmed_text_range,\n+};\n \n // Assist: move_to_mod_rs\n //\n@@ -36,16 +38,13 @@ pub(crate) fn move_to_mod_rs(acc: &mut Assists, ctx: &AssistContext) -> Option<(\n         return None;\n     }\n \n-    let target = TextRange::new(\n-        source_file.syntax().text_range().start(),\n-        source_file.syntax().text_range().end(),\n-    );\n+    let target = source_file.syntax().text_range();\n     let module_name = module.name(ctx.db())?.to_string();\n     let path = format!(\"./{}/mod.rs\", module_name);\n     let dst = AnchoredPathBuf { anchor: ctx.frange.file_id, path };\n     acc.add(\n         AssistId(\"move_to_mod_rs\", AssistKind::Refactor),\n-        format!(\"Turn {}.rs to {}/mod.rs\", module_name, module_name),\n+        format!(\"Convert {}.rs to {}/mod.rs\", module_name, module_name),\n         target,\n         |builder| {\n             builder.move_file(ctx.frange.file_id, dst);"}]}