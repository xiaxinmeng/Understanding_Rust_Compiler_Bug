{"sha": "f526434197be4395709b6354d746d9954ff5471c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1MjY0MzQxOTdiZTQzOTU3MDliNjM1NGQ3NDZkOTk1NGZmNTQ3MWM=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-06-11T20:42:55Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-06-11T20:45:13Z"}, "message": "Codegen: Combine two PointerCasts into one\n\nShaves off a percent or so from the LLVM passes for librustc.", "tree": {"sha": "e8fd9cf6b96a4dc31141d26c20eb9c1eebe43748", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8fd9cf6b96a4dc31141d26c20eb9c1eebe43748"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f526434197be4395709b6354d746d9954ff5471c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f526434197be4395709b6354d746d9954ff5471c", "html_url": "https://github.com/rust-lang/rust/commit/f526434197be4395709b6354d746d9954ff5471c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f526434197be4395709b6354d746d9954ff5471c/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0b197900485c98cf2a09298823ea274db50c4d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0b197900485c98cf2a09298823ea274db50c4d9", "html_url": "https://github.com/rust-lang/rust/commit/d0b197900485c98cf2a09298823ea274db50c4d9"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "c1bc27bea3fdb65d80cdfb751988f12d802a8471", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f526434197be4395709b6354d746d9954ff5471c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f526434197be4395709b6354d746d9954ff5471c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=f526434197be4395709b6354d746d9954ff5471c", "patch": "@@ -268,9 +268,8 @@ pub fn opaque_box_body(bcx: block,\n                        boxptr: ValueRef) -> ValueRef {\n     let _icx = bcx.insn_ctxt(\"opaque_box_body\");\n     let ccx = bcx.ccx();\n-    let boxptr = PointerCast(bcx, boxptr, T_ptr(T_box_header(ccx)));\n-    let bodyptr = GEPi(bcx, boxptr, [1u]);\n-    PointerCast(bcx, bodyptr, T_ptr(type_of(ccx, body_t)))\n+    let boxptr = PointerCast(bcx, boxptr, T_ptr(T_box(ccx, type_of(ccx, body_t))));\n+    GEPi(bcx, boxptr, [0u, abi::box_field_body])\n }\n \n // malloc_raw_dyn: allocates a box to contain a given type, but with a"}]}