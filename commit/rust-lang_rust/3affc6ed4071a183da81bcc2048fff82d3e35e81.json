{"sha": "3affc6ed4071a183da81bcc2048fff82d3e35e81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhZmZjNmVkNDA3MWExODNkYTgxYmNjMjA0OGZmZjgyZDNlMzVlODE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-08T16:03:31Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-09T00:04:02Z"}, "message": "librustc: Fix merge fallout.", "tree": {"sha": "2afb55885640b3bc64925085b3519328c4854092", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2afb55885640b3bc64925085b3519328c4854092"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3affc6ed4071a183da81bcc2048fff82d3e35e81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3affc6ed4071a183da81bcc2048fff82d3e35e81", "html_url": "https://github.com/rust-lang/rust/commit/3affc6ed4071a183da81bcc2048fff82d3e35e81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3affc6ed4071a183da81bcc2048fff82d3e35e81/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d011ebf67272879b9883013f7796b7639ecfda3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d011ebf67272879b9883013f7796b7639ecfda3", "html_url": "https://github.com/rust-lang/rust/commit/9d011ebf67272879b9883013f7796b7639ecfda3"}], "stats": {"total": 19, "additions": 4, "deletions": 15}, "files": [{"sha": "b3bd60d8ac7be80f8bd67a7e3af0138e63bdf40b", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3affc6ed4071a183da81bcc2048fff82d3e35e81/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3affc6ed4071a183da81bcc2048fff82d3e35e81/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=3affc6ed4071a183da81bcc2048fff82d3e35e81", "patch": "@@ -196,13 +196,6 @@ static lint_table: &'static [(&'static str, LintSpec)] = &[\n         default: deny\n      }),\n \n-    (\"deprecated_mutable_fields\",\n-     LintSpec {\n-        lint: deprecated_mutable_fields,\n-        desc: \"deprecated mutable fields in structures\",\n-        default: deny\n-    }),\n-\n     (\"unused_unsafe\",\n      LintSpec {\n         lint: unused_unsafe,"}, {"sha": "d785f3816de30f0b07794b57882f71e2e89b2661", "filename": "src/libsyntax/ext/deriving/generic.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3affc6ed4071a183da81bcc2048fff82d3e35e81/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3affc6ed4071a183da81bcc2048fff82d3e35e81/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs?ref=3affc6ed4071a183da81bcc2048fff82d3e35e81", "patch": "@@ -818,12 +818,8 @@ fn summarise_struct(cx: @ext_ctxt, span: span,\n     let mut unnamed_count = 0;\n     for struct_def.fields.each |field| {\n         match field.node.kind {\n-            ast::named_field(ident, _, _) => {\n-                named_idents.push(ident)\n-            }\n-            ast::unnamed_field => {\n-                unnamed_count += 1;\n-            }\n+            ast::named_field(ident, _) => named_idents.push(ident),\n+            ast::unnamed_field => unnamed_count += 1,\n         }\n     }\n "}, {"sha": "2bd45e1466ce735e5f1aaadd7727abd3fcfaed91", "filename": "src/libsyntax/ext/deriving/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3affc6ed4071a183da81bcc2048fff82d3e35e81/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3affc6ed4071a183da81bcc2048fff82d3e35e81/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs?ref=3affc6ed4071a183da81bcc2048fff82d3e35e81", "patch": "@@ -281,8 +281,8 @@ pub fn create_struct_pattern(cx: @ext_ctxt,\n \n     for struct_def.fields.eachi |i, struct_field| {\n         let opt_id = match struct_field.node.kind {\n-            ast::named_field(ident, _, _) if (struct_type == Unknown ||\n-                                              struct_type == Record) => {\n+            ast::named_field(ident, _) if (struct_type == Unknown ||\n+                                           struct_type == Record) => {\n                 struct_type = Record;\n                 Some(ident)\n             }"}]}