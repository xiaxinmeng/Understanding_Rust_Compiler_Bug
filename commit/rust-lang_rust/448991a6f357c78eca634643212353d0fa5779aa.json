{"sha": "448991a6f357c78eca634643212353d0fa5779aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ODk5MWE2ZjM1N2M3OGVjYTYzNDY0MzIxMjM1M2QwZmE1Nzc5YWE=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-18T06:44:49Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-18T06:46:01Z"}, "message": "Handle multi-lined fn signature", "tree": {"sha": "e7719415c5704ed1f85a928dd0b231a88fc03659", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7719415c5704ed1f85a928dd0b231a88fc03659"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/448991a6f357c78eca634643212353d0fa5779aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/448991a6f357c78eca634643212353d0fa5779aa", "html_url": "https://github.com/rust-lang/rust/commit/448991a6f357c78eca634643212353d0fa5779aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/448991a6f357c78eca634643212353d0fa5779aa/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5152fc8c6d3725e236165e98690315f680eedec", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5152fc8c6d3725e236165e98690315f680eedec", "html_url": "https://github.com/rust-lang/rust/commit/d5152fc8c6d3725e236165e98690315f680eedec"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "2ac57557817425ac9ffaee47d47ca96668d55f82", "filename": "src/types.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/448991a6f357c78eca634643212353d0fa5779aa/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/448991a6f357c78eca634643212353d0fa5779aa/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=448991a6f357c78eca634643212353d0fa5779aa", "patch": "@@ -25,7 +25,8 @@ use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListTac\n             SeparatorPlace, SeparatorTactic};\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n-use utils::{colon_spaces, extra_offset, format_abi, format_mutability, last_line_width, mk_sp};\n+use utils::{colon_spaces, extra_offset, first_line_width, format_abi, format_mutability,\n+            last_line_width, mk_sp};\n \n #[derive(Copy, Clone, Debug, Eq, PartialEq)]\n pub enum PathContext {\n@@ -365,7 +366,8 @@ where\n     let list_str = write_list(&item_vec, &fmt)?;\n \n     let ty_shape = match context.config.indent_style() {\n-        IndentStyle::Block => shape.block().block_indent(context.config.tab_spaces()),\n+        // 4 = \" -> \"\n+        IndentStyle::Block => shape.offset_left(4)?,\n         IndentStyle::Visual => shape.block_left(4)?,\n     };\n     let output = match *output {\n@@ -376,24 +378,23 @@ where\n         FunctionRetTy::Default(..) => String::new(),\n     };\n \n-    let shape = shape.sub_width(output.len())?;\n-    let extendable = !list_str.contains('\\n') || list_str.is_empty();\n+    let extendable = (!list_str.contains('\\n') || list_str.is_empty()) && !output.contains(\"\\n\");\n     let args = wrap_args_with_parens(\n         context,\n         &list_str,\n         extendable,\n-        shape,\n+        shape.sub_width(first_line_width(&output))?,\n         Shape::indented(offset, context.config),\n     );\n-    if last_line_width(&args) + output.len() > shape.width {\n+    if last_line_width(&args) + first_line_width(&output) <= shape.width {\n+        Some(format!(\"{}{}\", args, output))\n+    } else {\n         Some(format!(\n             \"{}\\n{}{}\",\n             args,\n             offset.to_string(context.config),\n             output.trim_left()\n         ))\n-    } else {\n-        Some(format!(\"{}{}\", args, output))\n     }\n }\n "}]}