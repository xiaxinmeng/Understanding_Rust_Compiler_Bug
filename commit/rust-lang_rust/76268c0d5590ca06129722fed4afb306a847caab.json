{"sha": "76268c0d5590ca06129722fed4afb306a847caab", "node_id": "C_kwDOAAsO6NoAKDc2MjY4YzBkNTU5MGNhMDYxMjk3MjJmZWQ0YWZiMzA2YTg0N2NhYWI", "commit": {"author": {"name": "infrandomness", "email": "infrandomness@gmail.com", "date": "2022-04-10T21:42:33Z"}, "committer": {"name": "infrandomness", "email": "infrandomness@gmail.com", "date": "2022-04-14T11:16:20Z"}, "message": "Introduce new lint check\n\nThis checks if the expression has one of `core`, `option`, `Option` or\n`as_ref` in its path, this avoids false positives", "tree": {"sha": "2662c6926ad488643224a86cdb89a550fee7f0ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2662c6926ad488643224a86cdb89a550fee7f0ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76268c0d5590ca06129722fed4afb306a847caab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76268c0d5590ca06129722fed4afb306a847caab", "html_url": "https://github.com/rust-lang/rust/commit/76268c0d5590ca06129722fed4afb306a847caab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76268c0d5590ca06129722fed4afb306a847caab/comments", "author": {"login": "InfRandomness", "id": 43730933, "node_id": "MDQ6VXNlcjQzNzMwOTMz", "avatar_url": "https://avatars.githubusercontent.com/u/43730933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/InfRandomness", "html_url": "https://github.com/InfRandomness", "followers_url": "https://api.github.com/users/InfRandomness/followers", "following_url": "https://api.github.com/users/InfRandomness/following{/other_user}", "gists_url": "https://api.github.com/users/InfRandomness/gists{/gist_id}", "starred_url": "https://api.github.com/users/InfRandomness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/InfRandomness/subscriptions", "organizations_url": "https://api.github.com/users/InfRandomness/orgs", "repos_url": "https://api.github.com/users/InfRandomness/repos", "events_url": "https://api.github.com/users/InfRandomness/events{/privacy}", "received_events_url": "https://api.github.com/users/InfRandomness/received_events", "type": "User", "site_admin": false}, "committer": {"login": "InfRandomness", "id": 43730933, "node_id": "MDQ6VXNlcjQzNzMwOTMz", "avatar_url": "https://avatars.githubusercontent.com/u/43730933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/InfRandomness", "html_url": "https://github.com/InfRandomness", "followers_url": "https://api.github.com/users/InfRandomness/followers", "following_url": "https://api.github.com/users/InfRandomness/following{/other_user}", "gists_url": "https://api.github.com/users/InfRandomness/gists{/gist_id}", "starred_url": "https://api.github.com/users/InfRandomness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/InfRandomness/subscriptions", "organizations_url": "https://api.github.com/users/InfRandomness/orgs", "repos_url": "https://api.github.com/users/InfRandomness/repos", "events_url": "https://api.github.com/users/InfRandomness/events{/privacy}", "received_events_url": "https://api.github.com/users/InfRandomness/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b52bc9b96bb3b22b4ab4a793e3706e7a9b718952", "url": "https://api.github.com/repos/rust-lang/rust/commits/b52bc9b96bb3b22b4ab4a793e3706e7a9b718952", "html_url": "https://github.com/rust-lang/rust/commit/b52bc9b96bb3b22b4ab4a793e3706e7a9b718952"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "5596515637e54c048cb00ee85d11bc7280f80694", "filename": "clippy_lints/src/methods/needless_option_take.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/76268c0d5590ca06129722fed4afb306a847caab/clippy_lints%2Fsrc%2Fmethods%2Fneedless_option_take.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76268c0d5590ca06129722fed4afb306a847caab/clippy_lints%2Fsrc%2Fmethods%2Fneedless_option_take.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fneedless_option_take.rs?ref=76268c0d5590ca06129722fed4afb306a847caab", "patch": "@@ -1,4 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::match_def_path;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::is_type_diagnostic_item;\n use rustc_errors::Applicability;\n@@ -10,7 +11,7 @@ use super::NEEDLESS_OPTION_TAKE;\n \n pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, recv: &'tcx Expr<'_>) {\n     // Checks if expression type is equal to sym::Option and if the expr is not a syntactic place\n-    if is_expr_option(cx, recv) && !recv.is_syntactic_place_expr() {\n+    if !recv.is_syntactic_place_expr() && is_expr_option(cx, recv) && has_expr_as_ref_path(cx, recv) {\n         let mut applicability = Applicability::MachineApplicable;\n         span_lint_and_sugg(\n             cx,\n@@ -31,3 +32,10 @@ fn is_expr_option(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n     let expr_type = cx.typeck_results().expr_ty(expr);\n     is_type_diagnostic_item(cx, expr_type, sym::Option)\n }\n+\n+fn has_expr_as_ref_path(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n+    if let Some(ref_id) = cx.typeck_results().type_dependent_def_id(expr.hir_id) {\n+        return match_def_path(cx, ref_id, &[\"core\", \"option\", \"Option\", \"as_ref\"]);\n+    }\n+    false\n+}"}]}