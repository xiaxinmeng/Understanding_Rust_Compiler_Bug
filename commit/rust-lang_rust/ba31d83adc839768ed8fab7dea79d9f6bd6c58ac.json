{"sha": "ba31d83adc839768ed8fab7dea79d9f6bd6c58ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMzFkODNhZGM4Mzk3NjhlZDhmYWI3ZGVhNzlkOWY2YmQ2YzU4YWM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-01-10T00:58:38Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-01-13T22:10:26Z"}, "message": "Avoid some `TokenTree`-to-`TokenStream` conversions.\n\nThis avoids some allocations.", "tree": {"sha": "b3b73314ab91279dd3c6a3af838df8faa61efb0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3b73314ab91279dd3c6a3af838df8faa61efb0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba31d83adc839768ed8fab7dea79d9f6bd6c58ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba31d83adc839768ed8fab7dea79d9f6bd6c58ac", "html_url": "https://github.com/rust-lang/rust/commit/ba31d83adc839768ed8fab7dea79d9f6bd6c58ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba31d83adc839768ed8fab7dea79d9f6bd6c58ac/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce0d9949b817267e88e8d366a8cee929abf1e4ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce0d9949b817267e88e8d366a8cee929abf1e4ba", "html_url": "https://github.com/rust-lang/rust/commit/ce0d9949b817267e88e8d366a8cee929abf1e4ba"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "537d536ec62c1209810a7f05bd005dabf6c67329", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ba31d83adc839768ed8fab7dea79d9f6bd6c58ac/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba31d83adc839768ed8fab7dea79d9f6bd6c58ac/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ba31d83adc839768ed8fab7dea79d9f6bd6c58ac", "patch": "@@ -46,7 +46,7 @@ use print::pprust;\n use ptr::P;\n use parse::PResult;\n use ThinVec;\n-use tokenstream::{self, DelimSpan, TokenTree, TokenStream};\n+use tokenstream::{self, DelimSpan, TokenTree, TokenStream, TreeAndJoint};\n use symbol::{Symbol, keywords};\n \n use std::borrow::Cow;\n@@ -280,8 +280,8 @@ struct TokenCursorFrame {\n /// on the parser.\n #[derive(Clone)]\n enum LastToken {\n-    Collecting(Vec<TokenStream>),\n-    Was(Option<TokenStream>),\n+    Collecting(Vec<TreeAndJoint>),\n+    Was(Option<TreeAndJoint>),\n }\n \n impl TokenCursorFrame {\n@@ -7677,7 +7677,7 @@ impl<'a> Parser<'a> {\n             &mut self.token_cursor.stack[prev].last_token\n         };\n \n-        // Pull our the toekns that we've collected from the call to `f` above\n+        // Pull out the tokens that we've collected from the call to `f` above.\n         let mut collected_tokens = match *last_token {\n             LastToken::Collecting(ref mut v) => mem::replace(v, Vec::new()),\n             LastToken::Was(_) => panic!(\"our vector went away?\"),\n@@ -7696,10 +7696,9 @@ impl<'a> Parser<'a> {\n         // call. In that case we need to record all the tokens we collected in\n         // our parent list as well. To do that we push a clone of our stream\n         // onto the previous list.\n-        let stream = collected_tokens.into_iter().collect::<TokenStream>();\n         match prev_collecting {\n             Some(mut list) => {\n-                list.push(stream.clone());\n+                list.extend(collected_tokens.iter().cloned());\n                 list.extend(extra_token);\n                 *last_token = LastToken::Collecting(list);\n             }\n@@ -7708,7 +7707,7 @@ impl<'a> Parser<'a> {\n             }\n         }\n \n-        Ok((ret?, stream))\n+        Ok((ret?, TokenStream::new(collected_tokens)))\n     }\n \n     pub fn parse_item(&mut self) -> PResult<'a, Option<P<Item>>> {"}]}