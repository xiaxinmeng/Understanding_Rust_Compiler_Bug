{"sha": "c07a6a9c0c6c571d535de74d7ec28469fba46e37", "node_id": "C_kwDOAAsO6NoAKGMwN2E2YTljMGM2YzU3MWQ1MzVkZTc0ZDdlYzI4NDY5ZmJhNDZlMzc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-24T13:35:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-24T13:35:48Z"}, "message": "Auto merge of #94063 - Aaron1011:pretty-print-rental, r=lcnr\n\nOnly apply `ProceduralMasquerade` hack to older versions of `rental`\n\nThe latest version of `rental` (v0.5.6) contains a fix that allows it to\ncompile without relying on the pretty-print back-compat hack.\n\nHopefully, there are no longer any crates relying on the affected\nversions of the (much less popular) `procedural-masquerade` crate. This\nshould allow us to target the pretty-print back-compat hack specifically\nto older versions of `rental`, and specifically mention upgrading to\n`rental` v0.5.6 in the lint message.", "tree": {"sha": "a2fbbf9f91594b9fa4e0052c5caf2b491e683bae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2fbbf9f91594b9fa4e0052c5caf2b491e683bae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c07a6a9c0c6c571d535de74d7ec28469fba46e37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c07a6a9c0c6c571d535de74d7ec28469fba46e37", "html_url": "https://github.com/rust-lang/rust/commit/c07a6a9c0c6c571d535de74d7ec28469fba46e37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c07a6a9c0c6c571d535de74d7ec28469fba46e37/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1481fd964bac3c750c7e1b21206fdaa60346c456", "url": "https://api.github.com/repos/rust-lang/rust/commits/1481fd964bac3c750c7e1b21206fdaa60346c456", "html_url": "https://github.com/rust-lang/rust/commit/1481fd964bac3c750c7e1b21206fdaa60346c456"}, {"sha": "541128dcb374c7eaa36872eb3a9085c401db7938", "url": "https://api.github.com/repos/rust-lang/rust/commits/541128dcb374c7eaa36872eb3a9085c401db7938", "html_url": "https://github.com/rust-lang/rust/commit/541128dcb374c7eaa36872eb3a9085c401db7938"}], "stats": {"total": 478, "additions": 361, "deletions": 117}, "files": [{"sha": "c8de60ccb89b9830a5000f8ae0f7f970fac5fa1a", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 35, "deletions": 11, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6a9c0c6c571d535de74d7ec28469fba46e37/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6a9c0c6c571d535de74d7ec28469fba46e37/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=c07a6a9c0c6c571d535de74d7ec28469fba46e37", "patch": "@@ -22,7 +22,7 @@ use rustc_span::edition::Edition;\n use rustc_span::hygiene::{AstPass, ExpnData, ExpnKind, LocalExpnId};\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n-use rustc_span::{BytePos, FileName, Span, DUMMY_SP};\n+use rustc_span::{BytePos, FileName, RealFileName, Span, DUMMY_SP};\n use smallvec::{smallvec, SmallVec};\n \n use std::default::Default;\n@@ -1423,16 +1423,40 @@ fn pretty_printing_compatibility_hack(item: &Item, sess: &ParseSess) -> bool {\n         if let ast::ItemKind::Enum(enum_def, _) = &item.kind {\n             if let [variant] = &*enum_def.variants {\n                 if variant.ident.name == sym::Input {\n-                    sess.buffer_lint_with_diagnostic(\n-                        &PROC_MACRO_BACK_COMPAT,\n-                        item.ident.span,\n-                        ast::CRATE_NODE_ID,\n-                        \"using `procedural-masquerade` crate\",\n-                        BuiltinLintDiagnostics::ProcMacroBackCompat(\n-                        \"The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. \\\n-                        Versions of this crate below 0.1.7 will eventually stop compiling.\".to_string())\n-                    );\n-                    return true;\n+                    let filename = sess.source_map().span_to_filename(item.ident.span);\n+                    if let FileName::Real(RealFileName::LocalPath(path)) = filename {\n+                        if let Some(c) = path\n+                            .components()\n+                            .flat_map(|c| c.as_os_str().to_str())\n+                            .find(|c| c.starts_with(\"rental\") || c.starts_with(\"allsorts-rental\"))\n+                        {\n+                            let crate_matches = if c.starts_with(\"allsorts-rental\") {\n+                                true\n+                            } else {\n+                                let mut version = c.trim_start_matches(\"rental-\").split(\".\");\n+                                version.next() == Some(\"0\")\n+                                    && version.next() == Some(\"5\")\n+                                    && version\n+                                        .next()\n+                                        .and_then(|c| c.parse::<u32>().ok())\n+                                        .map_or(false, |v| v < 6)\n+                            };\n+\n+                            if crate_matches {\n+                                sess.buffer_lint_with_diagnostic(\n+                                        &PROC_MACRO_BACK_COMPAT,\n+                                        item.ident.span,\n+                                        ast::CRATE_NODE_ID,\n+                                        \"using an old version of `rental`\",\n+                                        BuiltinLintDiagnostics::ProcMacroBackCompat(\n+                                        \"older versions of the `rental` crate will stop compiling in future versions of Rust; \\\n+                                        please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\".to_string()\n+                                        )\n+                                    );\n+                                return true;\n+                            }\n+                        }\n+                    }\n                 }\n             }\n         }"}, {"sha": "a573c6e1c0b867d93e1e4fd73d7adfd610959b46", "filename": "src/test/ui/proc-macro/issue-73933-procedural-masquerade.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.rs?ref=c07a6a9c0c6c571d535de74d7ec28469fba46e37", "patch": "@@ -1,18 +1,11 @@\n // aux-build:test-macros.rs\n+// check-pass\n \n #[macro_use]\n extern crate test_macros;\n \n #[derive(Print)]\n enum ProceduralMasqueradeDummyType {\n-//~^ ERROR using\n-//~| WARN this was previously\n-//~| ERROR using\n-//~| WARN this was previously\n-//~| ERROR using\n-//~| WARN this was previously\n-//~| ERROR using\n-//~| WARN this was previously\n     Input\n }\n "}, {"sha": "ebb8e825e6a3b298d497d0db614837743539622c", "filename": "src/test/ui/proc-macro/issue-73933-procedural-masquerade.stderr", "status": "removed", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/1481fd964bac3c750c7e1b21206fdaa60346c456/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1481fd964bac3c750c7e1b21206fdaa60346c456/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stderr?ref=1481fd964bac3c750c7e1b21206fdaa60346c456", "patch": "@@ -1,91 +0,0 @@\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-   = note: `#[deny(proc_macro_back_compat)]` on by default\n-\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-\n-error: aborting due to 4 previous errors\n-\n-Future incompatibility report: Future breakage diagnostic:\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-   = note: `#[deny(proc_macro_back_compat)]` on by default\n-\n-Future breakage diagnostic:\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-   = note: `#[deny(proc_macro_back_compat)]` on by default\n-\n-Future breakage diagnostic:\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-   = note: `#[deny(proc_macro_back_compat)]` on by default\n-\n-Future breakage diagnostic:\n-error: using `procedural-masquerade` crate\n-  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n-   |\n-LL | enum ProceduralMasqueradeDummyType {\n-   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n-   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n-   = note: `#[deny(proc_macro_back_compat)]` on by default\n-"}, {"sha": "8cd981e03f118755b7f77e0c958aee3471865f33", "filename": "src/test/ui/proc-macro/issue-73933-procedural-masquerade.stdout", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stdout?ref=c07a6a9c0c6c571d535de74d7ec28469fba46e37", "patch": "@@ -1,22 +1,21 @@\n-PRINT-DERIVE INPUT (DISPLAY): enum ProceduralMasqueradeDummyType { Input, }\n-PRINT-DERIVE RE-COLLECTED (DISPLAY): enum ProceduralMasqueradeDummyType { Input }\n+PRINT-DERIVE INPUT (DISPLAY): enum ProceduralMasqueradeDummyType { Input }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"enum\",\n-        span: #0 bytes(86..90),\n+        span: #0 bytes(100..104),\n     },\n     Ident {\n         ident: \"ProceduralMasqueradeDummyType\",\n-        span: #0 bytes(91..120),\n+        span: #0 bytes(105..134),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Ident {\n                 ident: \"Input\",\n-                span: #0 bytes(315..320),\n+                span: #0 bytes(141..146),\n             },\n         ],\n-        span: #0 bytes(121..322),\n+        span: #0 bytes(135..148),\n     },\n ]"}, {"sha": "f53e8fe8252f89456dee641f54f1d25458a2e852", "filename": "src/test/ui/proc-macro/pretty-print-hack-hide.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-hide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-hide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-hide.rs?ref=c07a6a9c0c6c571d535de74d7ec28469fba46e37", "patch": "@@ -0,0 +1,12 @@\n+// aux-build:test-macros.rs\n+// compile-flags: -Z span-debug\n+// check-pass\n+\n+#![no_std] // Don't load unnecessary hygiene information from std\n+extern crate std;\n+\n+#[macro_use] extern crate test_macros;\n+\n+include!(\"pretty-print-hack/rental-0.5.6/src/lib.rs\");\n+\n+fn main() {}"}, {"sha": "ea796bb26976830798d219c3ae56c7d9b19a8f78", "filename": "src/test/ui/proc-macro/pretty-print-hack-hide.stdout", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-hide.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-hide.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-hide.stdout?ref=c07a6a9c0c6c571d535de74d7ec28469fba46e37", "patch": "@@ -0,0 +1,21 @@\n+PRINT-DERIVE INPUT (DISPLAY): enum ProceduralMasqueradeDummyType { Input }\n+PRINT-DERIVE INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"enum\",\n+        span: $DIR/pretty-print-hack/rental-0.5.6/src/lib.rs:4:1: 4:5 (#0),\n+    },\n+    Ident {\n+        ident: \"ProceduralMasqueradeDummyType\",\n+        span: $DIR/pretty-print-hack/rental-0.5.6/src/lib.rs:4:6: 4:35 (#0),\n+    },\n+    Group {\n+        delimiter: Brace,\n+        stream: TokenStream [\n+            Ident {\n+                ident: \"Input\",\n+                span: $DIR/pretty-print-hack/rental-0.5.6/src/lib.rs:13:5: 13:10 (#0),\n+            },\n+        ],\n+        span: $DIR/pretty-print-hack/rental-0.5.6/src/lib.rs:4:36: 14:2 (#0),\n+    },\n+]"}, {"sha": "9b1899e49220e16818f800e0f48008ed9872d3bf", "filename": "src/test/ui/proc-macro/pretty-print-hack-show.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.rs?ref=c07a6a9c0c6c571d535de74d7ec28469fba46e37", "patch": "@@ -0,0 +1,17 @@\n+// aux-build:test-macros.rs\n+// compile-flags: -Z span-debug\n+\n+#![no_std] // Don't load unnecessary hygiene information from std\n+extern crate std;\n+\n+#[macro_use] extern crate test_macros;\n+\n+mod first {\n+    include!(\"pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs\");\n+}\n+\n+mod second {\n+    include!(\"pretty-print-hack/rental-0.5.5/src/lib.rs\");\n+}\n+\n+fn main() {}"}, {"sha": "873054927c96279723f7b87ae31a908372109ca1", "filename": "src/test/ui/proc-macro/pretty-print-hack-show.stderr", "status": "added", "additions": 179, "deletions": 0, "changes": 179, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.stderr?ref=c07a6a9c0c6c571d535de74d7ec28469fba46e37", "patch": "@@ -0,0 +1,179 @@\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+\n+error: aborting due to 8 previous errors\n+\n+Future incompatibility report: Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+\n+Future breakage diagnostic:\n+error: using an old version of `rental`\n+  --> $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: older versions of the `rental` crate will stop compiling in future versions of Rust; please update to `rental` v0.5.6, or switch to one of the `rental` alternatives\n+   = note: `#[deny(proc_macro_back_compat)]` on by default\n+"}, {"sha": "3d793d2a0145c984f27fa8092f21df04c2ba724e", "filename": "src/test/ui/proc-macro/pretty-print-hack-show.stdout", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack-show.stdout?ref=c07a6a9c0c6c571d535de74d7ec28469fba46e37", "patch": "@@ -0,0 +1,44 @@\n+PRINT-DERIVE INPUT (DISPLAY): enum ProceduralMasqueradeDummyType { Input, }\n+PRINT-DERIVE RE-COLLECTED (DISPLAY): enum ProceduralMasqueradeDummyType { Input }\n+PRINT-DERIVE INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"enum\",\n+        span: $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:1: 4:5 (#0),\n+    },\n+    Ident {\n+        ident: \"ProceduralMasqueradeDummyType\",\n+        span: $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:6: 4:35 (#0),\n+    },\n+    Group {\n+        delimiter: Brace,\n+        stream: TokenStream [\n+            Ident {\n+                ident: \"Input\",\n+                span: $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:13:5: 13:10 (#0),\n+            },\n+        ],\n+        span: $DIR/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs:4:36: 14:2 (#0),\n+    },\n+]\n+PRINT-DERIVE INPUT (DISPLAY): enum ProceduralMasqueradeDummyType { Input, }\n+PRINT-DERIVE RE-COLLECTED (DISPLAY): enum ProceduralMasqueradeDummyType { Input }\n+PRINT-DERIVE INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"enum\",\n+        span: $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:1: 4:5 (#0),\n+    },\n+    Ident {\n+        ident: \"ProceduralMasqueradeDummyType\",\n+        span: $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:6: 4:35 (#0),\n+    },\n+    Group {\n+        delimiter: Brace,\n+        stream: TokenStream [\n+            Ident {\n+                ident: \"Input\",\n+                span: $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:13:5: 13:10 (#0),\n+            },\n+        ],\n+        span: $DIR/pretty-print-hack/rental-0.5.5/src/lib.rs:4:36: 14:2 (#0),\n+    },\n+]"}, {"sha": "9501980fa55dfc4456003b0bb5ee0ec221dd8c4d", "filename": "src/test/ui/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Fallsorts-rental-0.5.6%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Fallsorts-rental-0.5.6%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Fallsorts-rental-0.5.6%2Fsrc%2Flib.rs?ref=c07a6a9c0c6c571d535de74d7ec28469fba46e37", "patch": "@@ -0,0 +1,14 @@\n+// ignore-test\n+\n+#[derive(Print)]\n+enum ProceduralMasqueradeDummyType {\n+//~^ ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+    Input\n+}"}, {"sha": "9501980fa55dfc4456003b0bb5ee0ec221dd8c4d", "filename": "src/test/ui/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.5%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.5%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.5%2Fsrc%2Flib.rs?ref=c07a6a9c0c6c571d535de74d7ec28469fba46e37", "patch": "@@ -0,0 +1,14 @@\n+// ignore-test\n+\n+#[derive(Print)]\n+enum ProceduralMasqueradeDummyType {\n+//~^ ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+    Input\n+}"}, {"sha": "9501980fa55dfc4456003b0bb5ee0ec221dd8c4d", "filename": "src/test/ui/proc-macro/pretty-print-hack/rental-0.5.6/src/lib.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.6%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.6%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.6%2Fsrc%2Flib.rs?ref=c07a6a9c0c6c571d535de74d7ec28469fba46e37", "patch": "@@ -0,0 +1,14 @@\n+// ignore-test\n+\n+#[derive(Print)]\n+enum ProceduralMasqueradeDummyType {\n+//~^ ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+    Input\n+}"}, {"sha": "7044cb8928694fa16c958fed9bc8d5ba792c68b4", "filename": "src/tools/cargotest/main.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftools%2Fcargotest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07a6a9c0c6c571d535de74d7ec28469fba46e37/src%2Ftools%2Fcargotest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargotest%2Fmain.rs?ref=c07a6a9c0c6c571d535de74d7ec28469fba46e37", "patch": "@@ -73,7 +73,7 @@ const TEST_REPOS: &[Test] = &[\n     Test {\n         name: \"servo\",\n         repo: \"https://github.com/servo/servo\",\n-        sha: \"caac107ae8145ef2fd20365e2b8fadaf09c2eb3b\",\n+        sha: \"785a344e32db58d4e631fd3cae17fd1f29a721ab\",\n         lock: None,\n         // Only test Stylo a.k.a. Quantum CSS, the parts of Servo going into Firefox.\n         // This takes much less time to build than all of Servo and supports stable Rust.\n@@ -206,6 +206,10 @@ fn run_cargo_test(\n         .env(\"CFG_DISABLE_CROSS_TESTS\", \"1\")\n         // Relax #![deny(warnings)] in some crates\n         .env(\"RUSTFLAGS\", \"--cap-lints warn\")\n+        // servo tries to use 'lld-link.exe' on windows, but we don't\n+        // have lld on our PATH in CI. Override it to use 'link.exe'\n+        .env(\"CARGO_TARGET_X86_64_PC_WINDOWS_MSVC_LINKER\", \"link.exe\")\n+        .env(\"CARGO_TARGET_I686_PC_WINDOWS_MSVC_LINKER\", \"link.exe\")\n         .current_dir(crate_path)\n         .status()\n         .unwrap();"}]}