{"sha": "a524a9af918df6a6d3abd68a642e89f0d34b36f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MjRhOWFmOTE4ZGY2YTZkM2FiZDY4YTY0MmU4OWYwZDM0YjM2ZjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-04T13:53:47Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-05T17:23:35Z"}, "message": "Miri terminator handling: only do progress sanity check for 'Call' terminator", "tree": {"sha": "c153c99a37d7fe42a08d7ca5ccdbb7ef9ac3a352", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c153c99a37d7fe42a08d7ca5ccdbb7ef9ac3a352"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a524a9af918df6a6d3abd68a642e89f0d34b36f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a524a9af918df6a6d3abd68a642e89f0d34b36f5", "html_url": "https://github.com/rust-lang/rust/commit/a524a9af918df6a6d3abd68a642e89f0d34b36f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a524a9af918df6a6d3abd68a642e89f0d34b36f5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6cef0445779724b469ab7b9a8d3c05d9e848ca8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6cef0445779724b469ab7b9a8d3c05d9e848ca8", "html_url": "https://github.com/rust-lang/rust/commit/e6cef0445779724b469ab7b9a8d3c05d9e848ca8"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "2dd732e41eec2b1e7be03b86f11bf1e35c6c1ce2", "filename": "src/librustc_mir/interpret/step.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a524a9af918df6a6d3abd68a642e89f0d34b36f5/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a524a9af918df6a6d3abd68a642e89f0d34b36f5/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fstep.rs?ref=a524a9af918df6a6d3abd68a642e89f0d34b36f5", "patch": "@@ -279,13 +279,8 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         self.tcx.span = terminator.source_info.span;\n         self.memory.tcx.span = terminator.source_info.span;\n \n-        let old_stack = self.cur_frame();\n-        let old_bb = self.frame().block;\n-\n         self.eval_terminator(terminator)?;\n         if !self.stack.is_empty() {\n-            // This should change *something*\n-            assert!(self.cur_frame() != old_stack || self.frame().block != old_bb);\n             if let Some(block) = self.frame().block {\n                 info!(\"// executing {:?}\", block);\n             }"}, {"sha": "161fbdc9ed45a9210b38c9f36bb26cd8b7f81f86", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a524a9af918df6a6d3abd68a642e89f0d34b36f5/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a524a9af918df6a6d3abd68a642e89f0d34b36f5/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=a524a9af918df6a6d3abd68a642e89f0d34b36f5", "patch": "@@ -52,6 +52,8 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n \n             Call { ref func, ref args, destination, ref cleanup, .. } => {\n+                let old_stack = self.cur_frame();\n+                let old_bb = self.frame().block;\n                 let func = self.eval_operand(func, None)?;\n                 let (fn_val, abi) = match func.layout.ty.kind {\n                     ty::FnPtr(sig) => {\n@@ -72,6 +74,9 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     None => None,\n                 };\n                 self.eval_fn_call(fn_val, abi, &args[..], ret, *cleanup)?;\n+                // Sanity-check that `eval_fn_call` either pushed a new frame or\n+                // did a jump to another block.\n+                assert!(self.cur_frame() != old_stack || self.frame().block != old_bb);\n             }\n \n             Drop { location, target, unwind } => {"}]}