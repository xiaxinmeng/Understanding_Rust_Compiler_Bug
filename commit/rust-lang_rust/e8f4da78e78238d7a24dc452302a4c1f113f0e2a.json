{"sha": "e8f4da78e78238d7a24dc452302a4c1f113f0e2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4ZjRkYTc4ZTc4MjM4ZDdhMjRkYzQ1MjMwMmE0YzFmMTEzZjBlMmE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-01-24T07:21:47Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-01-24T07:21:47Z"}, "message": "doc: fix tutorial unsafe blocks, r=burningtree.", "tree": {"sha": "1b85c300cc7301c5d9b144d5b174850faf7dcd45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b85c300cc7301c5d9b144d5b174850faf7dcd45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8f4da78e78238d7a24dc452302a4c1f113f0e2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8f4da78e78238d7a24dc452302a4c1f113f0e2a", "html_url": "https://github.com/rust-lang/rust/commit/e8f4da78e78238d7a24dc452302a4c1f113f0e2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8f4da78e78238d7a24dc452302a4c1f113f0e2a/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07d0af151a5c2acf283b960eb34d769b0fb06c29", "url": "https://api.github.com/repos/rust-lang/rust/commits/07d0af151a5c2acf283b960eb34d769b0fb06c29", "html_url": "https://github.com/rust-lang/rust/commit/07d0af151a5c2acf283b960eb34d769b0fb06c29"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "c3def1f4b27c46d451d64f524a658bf0c7b027f6", "filename": "doc/tutorial-ffi.md", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e8f4da78e78238d7a24dc452302a4c1f113f0e2a/doc%2Ftutorial-ffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/e8f4da78e78238d7a24dc452302a4c1f113f0e2a/doc%2Ftutorial-ffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-ffi.md?ref=e8f4da78e78238d7a24dc452302a4c1f113f0e2a", "patch": "@@ -26,11 +26,14 @@ fn as_hex(data: ~[u8]) -> ~str {\n     return acc;\n }\n \n-fn sha1(data: ~str) -> ~str unsafe {\n-    let bytes = str::to_bytes(data);\n-    let hash = crypto::SHA1(vec::raw::to_ptr(bytes),\n-                            vec::len(bytes) as c_uint, ptr::null());\n-    return as_hex(vec::from_buf(hash, 20));\n+fn sha1(data: ~str) -> ~str {\n+    unsafe {\n+        let bytes = str::to_bytes(data);\n+        let hash = crypto::SHA1(vec::raw::to_ptr(bytes),\n+                                vec::len(bytes) as c_uint,\n+                                ptr::null());\n+        return as_hex(vec::from_buf(hash, 20));\n+    }\n }\n \n fn main() {\n@@ -225,13 +228,15 @@ struct timeval {\n extern mod lib_c {\n     fn gettimeofday(tv: *timeval, tz: *()) -> i32;\n }\n-fn unix_time_in_microseconds() -> u64 unsafe {\n-    let x = timeval {\n-        mut tv_sec: 0 as c_ulonglong,\n-        mut tv_usec: 0 as c_ulonglong\n-    };\n-    lib_c::gettimeofday(ptr::addr_of(&x), ptr::null());\n-    return (x.tv_sec as u64) * 1000_000_u64 + (x.tv_usec as u64);\n+fn unix_time_in_microseconds() -> u64 {\n+    unsafe {\n+        let x = timeval {\n+            mut tv_sec: 0 as c_ulonglong,\n+            mut tv_usec: 0 as c_ulonglong\n+        };\n+        lib_c::gettimeofday(ptr::addr_of(&x), ptr::null());\n+        return (x.tv_sec as u64) * 1000_000_u64 + (x.tv_usec as u64);\n+    }\n }\n \n # fn main() { assert fmt!(\"%?\", unix_time_in_microseconds()) != ~\"\"; }"}]}