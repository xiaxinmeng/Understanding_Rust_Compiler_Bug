{"sha": "a18813f6cc06917bf1babca87ec313aa680eceee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExODgxM2Y2Y2MwNjkxN2JmMWJhYmNhODdlYzMxM2FhNjgwZWNlZWU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-21T11:04:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-21T11:04:38Z"}, "message": "Rollup merge of #79655 - pickfire:visual-vec, r=m-ou-se\n\nAdd Vec visualization to understand capacity\n\nVisualize vector while differentiating between stack and heap.\n\nInspired by cheats.rs, as this is probably the first place beginner go,\nthey could understand stack and heap, length and capacity with this. Not\nsure if adding this means we should add to other places too.\n\nSuperseeds #76066\n\nr? `@m-ou-se`\n\ncc `@the8472` I put back the order of the fields as it feels weird, the note already explains that the order of fields is not guaranteed", "tree": {"sha": "1e015bed24019338fb4158f5b3bec417756317b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e015bed24019338fb4158f5b3bec417756317b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a18813f6cc06917bf1babca87ec313aa680eceee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgCV/GCRBK7hj4Ov3rIwAAdHIIAFOkufQtYQqesPGk6RWHv64B\nOHQ9iPbzWrKPK3ntNW4lD33/G+2vpZC2fkjPrKK6oEpGMk749xai+UL1be97rmPJ\nhMwyw6E8R7sjNJJrymJCk8nlCeS8YVw8dGnKlCh5ChszYQ2Zg79ZE/i6wzERWlTD\nH33O22O6YDgsMZ3rIPlmDU/D6PoRTCta4dYl4TXbrKFfCduX/fTrB5Sl793uabcv\n19HJC8thmuQtcauVQqVreFo0+wUPxAo9k4IQWUPZ19DI397vUZlIWTmaT1LcfwPM\nmawt5jSTCh8Sz2rb/MS6lnt/UpAvg60Qk4DRJbXzgc7I67RPAyhBKxYTJtgPBjc=\n=WtWK\n-----END PGP SIGNATURE-----\n", "payload": "tree 1e015bed24019338fb4158f5b3bec417756317b6\nparent 57a71ac0e17e4f7070b090ab7bdc5474d8e37ecc\nparent 9844d9ee97f27f3d603f633e64bd03e1cc14e55b\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1611227078 +0900\ncommitter GitHub <noreply@github.com> 1611227078 +0900\n\nRollup merge of #79655 - pickfire:visual-vec, r=m-ou-se\n\nAdd Vec visualization to understand capacity\n\nVisualize vector while differentiating between stack and heap.\n\nInspired by cheats.rs, as this is probably the first place beginner go,\nthey could understand stack and heap, length and capacity with this. Not\nsure if adding this means we should add to other places too.\n\nSuperseeds #76066\n\nr? `@m-ou-se`\n\ncc `@the8472` I put back the order of the fields as it feels weird, the note already explains that the order of fields is not guaranteed\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a18813f6cc06917bf1babca87ec313aa680eceee", "html_url": "https://github.com/rust-lang/rust/commit/a18813f6cc06917bf1babca87ec313aa680eceee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a18813f6cc06917bf1babca87ec313aa680eceee/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57a71ac0e17e4f7070b090ab7bdc5474d8e37ecc", "url": "https://api.github.com/repos/rust-lang/rust/commits/57a71ac0e17e4f7070b090ab7bdc5474d8e37ecc", "html_url": "https://github.com/rust-lang/rust/commit/57a71ac0e17e4f7070b090ab7bdc5474d8e37ecc"}, {"sha": "9844d9ee97f27f3d603f633e64bd03e1cc14e55b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9844d9ee97f27f3d603f633e64bd03e1cc14e55b", "html_url": "https://github.com/rust-lang/rust/commit/9844d9ee97f27f3d603f633e64bd03e1cc14e55b"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "0f5feb4ab8dc40a718177d284bf3852ecae66879", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a18813f6cc06917bf1babca87ec313aa680eceee/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a18813f6cc06917bf1babca87ec313aa680eceee/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=a18813f6cc06917bf1babca87ec313aa680eceee", "patch": "@@ -285,6 +285,27 @@ mod spec_extend;\n /// you would see if you coerced it to a slice), followed by [`capacity`]` -\n /// `[`len`] logically uninitialized, contiguous elements.\n ///\n+/// A vector containing the elements `'a'` and `'b'` with capacity 4 can be\n+/// visualized as below. The top part is the `Vec` struct, it contains a\n+/// pointer to the head of the allocation in the heap, length and capacity.\n+/// The bottom part is the allocation on the heap, a contiguous memory block.\n+///\n+/// ```text\n+///             ptr      len  capacity\n+///        +--------+--------+--------+\n+///        | 0x0123 |      2 |      4 |\n+///        +--------+--------+--------+\n+///             |\n+///             v\n+/// Heap   +--------+--------+--------+--------+\n+///        |    'a' |    'b' | uninit | uninit |\n+///        +--------+--------+--------+--------+\n+/// ```\n+///\n+/// - **uninit** represents memory that is not initialized, see [`MaybeUninit`].\n+/// - Note: the ABI is not stable and `Vec` makes no guarantees about its memory\n+///   layout (including the order of fields).\n+///\n /// `Vec` will never perform a \"small optimization\" where elements are actually\n /// stored on the stack for two reasons:\n ///\n@@ -345,6 +366,7 @@ mod spec_extend;\n /// [`push`]: Vec::push\n /// [`insert`]: Vec::insert\n /// [`reserve`]: Vec::reserve\n+/// [`MaybeUninit`]: core::mem::MaybeUninit\n /// [owned slice]: Box\n /// [slice]: ../../std/primitive.slice.html\n /// [`&`]: ../../std/primitive.reference.html"}]}