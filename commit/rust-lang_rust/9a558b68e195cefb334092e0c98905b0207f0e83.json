{"sha": "9a558b68e195cefb334092e0c98905b0207f0e83", "node_id": "C_kwDOAAsO6NoAKDlhNTU4YjY4ZTE5NWNlZmIzMzQwOTJlMGM5ODkwNWIwMjA3ZjBlODM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-24T20:34:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-24T20:34:53Z"}, "message": "Rollup merge of #104773 - oli-obk:overlap, r=lcnr\n\nOpaqueCast projections are always overlapping, they can't possibly be disjoint\n\nr? ``@lcnr``", "tree": {"sha": "b3bf59fb953abb900ad0abf5cfb435a70e1919b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3bf59fb953abb900ad0abf5cfb435a70e1919b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a558b68e195cefb334092e0c98905b0207f0e83", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjf9VtCRBK7hj4Ov3rIwAASfsIABFcDM6BgfmHurX3pt7slfPr\nTkINm0rIic81DumNHO9y1fUiNoHyrkJ2STZE3z4cT3MKEq9NQ+FRchJ8YVARch3Q\ngD8LUpND6KTJws5PfIQ8NEEe5YT9quDhUrp7J1KpHQnzF4vNkGlhpSV+Vm1HMe2i\nFqBsuMEqSPEVNwDOTGJunsxoLn3mHwKhGtooEAvgfOrkjs+ndQ8dbvmvWJXNEaNJ\nrL2DNb9sZpQIboGwWrf6GaKVt8n7Q0F8/Rv4bAL5uIrhRCRH2dyd3GFjjoTmGrxD\nuAxcYxrxSY8iLmXgybXGl4XPJgg5GAh2SRzKCYEZ1cGFvYLb2N5zNDodIijCSMc=\n=qV6v\n-----END PGP SIGNATURE-----\n", "payload": "tree b3bf59fb953abb900ad0abf5cfb435a70e1919b3\nparent 0e4eb0da3370e58b71485301640e699985f66a7e\nparent 46b37e20afe478be2661ec16fde835f5194b3203\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1669322093 +0100\ncommitter GitHub <noreply@github.com> 1669322093 +0100\n\nRollup merge of #104773 - oli-obk:overlap, r=lcnr\n\nOpaqueCast projections are always overlapping, they can't possibly be disjoint\n\nr? ``@lcnr``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a558b68e195cefb334092e0c98905b0207f0e83", "html_url": "https://github.com/rust-lang/rust/commit/9a558b68e195cefb334092e0c98905b0207f0e83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a558b68e195cefb334092e0c98905b0207f0e83/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e4eb0da3370e58b71485301640e699985f66a7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e4eb0da3370e58b71485301640e699985f66a7e", "html_url": "https://github.com/rust-lang/rust/commit/0e4eb0da3370e58b71485301640e699985f66a7e"}, {"sha": "46b37e20afe478be2661ec16fde835f5194b3203", "url": "https://api.github.com/repos/rust-lang/rust/commits/46b37e20afe478be2661ec16fde835f5194b3203", "html_url": "https://github.com/rust-lang/rust/commit/46b37e20afe478be2661ec16fde835f5194b3203"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "89ac0dfa4d6f51c2e61225b7d27b8fda4895bb57", "filename": "compiler/rustc_borrowck/src/places_conflict.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9a558b68e195cefb334092e0c98905b0207f0e83/compiler%2Frustc_borrowck%2Fsrc%2Fplaces_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a558b68e195cefb334092e0c98905b0207f0e83/compiler%2Frustc_borrowck%2Fsrc%2Fplaces_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fplaces_conflict.rs?ref=9a558b68e195cefb334092e0c98905b0207f0e83", "patch": "@@ -320,16 +320,10 @@ fn place_projection_conflict<'tcx>(\n             debug!(\"place_element_conflict: DISJOINT-OR-EQ-DEREF\");\n             Overlap::EqualOrDisjoint\n         }\n-        (ProjectionElem::OpaqueCast(v1), ProjectionElem::OpaqueCast(v2)) => {\n-            if v1 == v2 {\n-                // same type - recur.\n-                debug!(\"place_element_conflict: DISJOINT-OR-EQ-OPAQUE\");\n-                Overlap::EqualOrDisjoint\n-            } else {\n-                // Different types. Disjoint!\n-                debug!(\"place_element_conflict: DISJOINT-OPAQUE\");\n-                Overlap::Disjoint\n-            }\n+        (ProjectionElem::OpaqueCast(_), ProjectionElem::OpaqueCast(_)) => {\n+            // casts to other types may always conflict irrespective of the type being cast to.\n+            debug!(\"place_element_conflict: DISJOINT-OR-EQ-OPAQUE\");\n+            Overlap::EqualOrDisjoint\n         }\n         (ProjectionElem::Field(f1, _), ProjectionElem::Field(f2, _)) => {\n             if f1 == f2 {"}]}