{"sha": "e2f7108459baf3e3af1b7ed7d02c9100b2a413d8", "node_id": "C_kwDOAAsO6NoAKGUyZjcxMDg0NTliYWYzZTNhZjFiN2VkN2QwMmM5MTAwYjJhNDEzZDg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-03T16:12:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-03T16:12:13Z"}, "message": "Rollup merge of #106402 - Rageking8:fix_dupe_word_typos, r=Nilstrieb\n\nFix dupe word typos\n\nr? `@Nilstrieb`\nThanks!", "tree": {"sha": "2651ff5ded917a68d352a1dec8e6cee278af5bbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2651ff5ded917a68d352a1dec8e6cee278af5bbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2f7108459baf3e3af1b7ed7d02c9100b2a413d8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjtFPdCRBK7hj4Ov3rIwAAksgIAB4RIE8gA7pQ1+AzZPxbjRnG\nS4LNUul2hlykoTb8CaWfwgQMPRzUVc7AK0f51aRckwr4nPxvKGYJdcD2qMSWtNBl\nXBA5S8JVUlDOzEBO51EC/6RLtou55kk78gfYnVik644wYX44jAkKWyxvjIMlW9pw\nbULBsvNVdCg0fSjBFbdrMCEXUwbkh/Bhd7tkvRE1EFBlc/ASODtk30DitiPRoq2c\n2ivIjVdnte7MadWjAfLhODF5+pH13ByVYMurVyVLVKN9cO3EML2+vNgjHm+vZ6PF\nyrLfJgEQr8q6FX1WFpDb/rSgXI6Em6xGbbj7WE8kgpRZ4LhozHVkf4TyoAZrDIo=\n=wX2A\n-----END PGP SIGNATURE-----\n", "payload": "tree 2651ff5ded917a68d352a1dec8e6cee278af5bbc\nparent 9d1193310f5c08c34d4d8d806a8342634dce5eaf\nparent e808a69911c31609b67c1e94a940b398af324f34\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1672762333 +0100\ncommitter GitHub <noreply@github.com> 1672762333 +0100\n\nRollup merge of #106402 - Rageking8:fix_dupe_word_typos, r=Nilstrieb\n\nFix dupe word typos\n\nr? `@Nilstrieb`\nThanks!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2f7108459baf3e3af1b7ed7d02c9100b2a413d8", "html_url": "https://github.com/rust-lang/rust/commit/e2f7108459baf3e3af1b7ed7d02c9100b2a413d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2f7108459baf3e3af1b7ed7d02c9100b2a413d8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d1193310f5c08c34d4d8d806a8342634dce5eaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d1193310f5c08c34d4d8d806a8342634dce5eaf", "html_url": "https://github.com/rust-lang/rust/commit/9d1193310f5c08c34d4d8d806a8342634dce5eaf"}, {"sha": "e808a69911c31609b67c1e94a940b398af324f34", "url": "https://api.github.com/repos/rust-lang/rust/commits/e808a69911c31609b67c1e94a940b398af324f34", "html_url": "https://github.com/rust-lang/rust/commit/e808a69911c31609b67c1e94a940b398af324f34"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "10d8db5393da94bb6cd64bb73a2f884c6194488d", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2f7108459baf3e3af1b7ed7d02c9100b2a413d8/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2f7108459baf3e3af1b7ed7d02c9100b2a413d8/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=e2f7108459baf3e3af1b7ed7d02c9100b2a413d8", "patch": "@@ -1392,7 +1392,7 @@ declare_lint! {\n     ///\n     /// The attribute must be used in conjunction with the\n     /// [`closure_track_caller` feature flag]. Otherwise, the `#[track_caller]`\n-    /// annotation will function as as no-op.\n+    /// annotation will function as a no-op.\n     ///\n     /// [`closure_track_caller` feature flag]: https://doc.rust-lang.org/beta/unstable-book/language-features/closure-track-caller.html\n     UNGATED_ASYNC_FN_TRACK_CALLER,"}, {"sha": "c18abaef8e2565e450bffb1959adfdf5dde7532b", "filename": "compiler/rustc_lint/src/early.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2f7108459baf3e3af1b7ed7d02c9100b2a413d8/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2f7108459baf3e3af1b7ed7d02c9100b2a413d8/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fearly.rs?ref=e2f7108459baf3e3af1b7ed7d02c9100b2a413d8", "patch": "@@ -29,7 +29,7 @@ macro_rules! lint_callback { ($cx:expr, $f:ident, $($args:expr),*) => ({\n     $cx.pass.$f(&$cx.context, $($args),*);\n }) }\n \n-/// Implements the AST traversal for early lint passes. `T` provides the the\n+/// Implements the AST traversal for early lint passes. `T` provides the\n /// `check_*` methods.\n pub struct EarlyContextAndPass<'a, T: EarlyLintPass> {\n     context: EarlyContext<'a>,"}, {"sha": "b2a2656746eec8b45849ec4faf9ce905ef15ec69", "filename": "compiler/rustc_lint/src/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2f7108459baf3e3af1b7ed7d02c9100b2a413d8/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2f7108459baf3e3af1b7ed7d02c9100b2a413d8/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flate.rs?ref=e2f7108459baf3e3af1b7ed7d02c9100b2a413d8", "patch": "@@ -40,7 +40,7 @@ macro_rules! lint_callback { ($cx:expr, $f:ident, $($args:expr),*) => ({\n     $cx.pass.$f(&$cx.context, $($args),*);\n }) }\n \n-/// Implements the AST traversal for late lint passes. `T` provides the the\n+/// Implements the AST traversal for late lint passes. `T` provides the\n /// `check_*` methods.\n pub struct LateContextAndPass<'tcx, T: LateLintPass<'tcx>> {\n     context: LateContext<'tcx>,"}, {"sha": "7db470359672f834fdaff1017f3a496a5979e28f", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2f7108459baf3e3af1b7ed7d02c9100b2a413d8/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2f7108459baf3e3af1b7ed7d02c9100b2a413d8/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=e2f7108459baf3e3af1b7ed7d02c9100b2a413d8", "patch": "@@ -410,7 +410,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n \n     /// This method will create a new module and push it onto the \"modules stack\" then call\n     /// `visit_mod_contents`. Once done, it'll remove it from the \"modules stack\" and instead\n-    /// add into into the list of modules of the current module.\n+    /// add into the list of modules of the current module.\n     fn enter_mod(&mut self, id: hir::HirId, m: &'tcx hir::Mod<'tcx>, name: Symbol) {\n         self.modules.push(Module::new(name, id, m.spans.inner_span));\n "}]}