{"sha": "686986375b5c7ba19c936f96670566a05b73251e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4Njk4NjM3NWI1YzdiYTE5YzkzNmY5NjY3MDU2NmEwNWI3MzI1MWU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-04T15:28:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-02-04T15:28:53Z"}, "message": "Rollup merge of #47862 - GuillaumeGomez:const-evaluation-ice, r=eddyb\n\nFix const evaluation ICE in rustdoc\n\nFixes #47860.\n\nr? @eddyb", "tree": {"sha": "ac9cb53fc05051c465ecf212db651e0247d6b90c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac9cb53fc05051c465ecf212db651e0247d6b90c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/686986375b5c7ba19c936f96670566a05b73251e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJadya1CRBK7hj4Ov3rIwAAdHIIAG21AX9Cp4V4PRkeAG7cwnmL\n9x61VWEsp+9jx1w5htVaxtqBT2DQgnEWzTW+ANkM72g225lJVSAH0KUVooa+/gcz\nRmT7y3dd5AafCV3oRBBQeCu/SVICYMpRsRU45c+caoWowJo/OLV4/nNn2s+gjnth\nDcQoVO7cIonIJTcRn0yyWNmt60APBVufhE31HN2XzNSkczhFra6svtQIdnXg8w3s\ne4Muvn53Jjtl0Ic7isRrWdjrpotvWOVzbJ/v50UVOf4Ot+B7jwaVjZjfBXvv7afB\n2GU7vmAI5fIo0rpv44+d94NlasMQ57GLv90yKu7FI0iprLXKabndS98/0QBDAUU=\n=iamJ\n-----END PGP SIGNATURE-----\n", "payload": "tree ac9cb53fc05051c465ecf212db651e0247d6b90c\nparent 3986539df6eb3601cbd4e9c6c195583fca6dc10b\nparent 6b35d813826a8011e3b3f19206c22f6978173134\nauthor kennytm <kennytm@gmail.com> 1517758133 +0800\ncommitter GitHub <noreply@github.com> 1517758133 +0800\n\nRollup merge of #47862 - GuillaumeGomez:const-evaluation-ice, r=eddyb\n\nFix const evaluation ICE in rustdoc\n\nFixes #47860.\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/686986375b5c7ba19c936f96670566a05b73251e", "html_url": "https://github.com/rust-lang/rust/commit/686986375b5c7ba19c936f96670566a05b73251e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/686986375b5c7ba19c936f96670566a05b73251e/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3986539df6eb3601cbd4e9c6c195583fca6dc10b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3986539df6eb3601cbd4e9c6c195583fca6dc10b", "html_url": "https://github.com/rust-lang/rust/commit/3986539df6eb3601cbd4e9c6c195583fca6dc10b"}, {"sha": "6b35d813826a8011e3b3f19206c22f6978173134", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b35d813826a8011e3b3f19206c22f6978173134", "html_url": "https://github.com/rust-lang/rust/commit/6b35d813826a8011e3b3f19206c22f6978173134"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "7c9a49c82a9395b186eab37471140cd64c368ab6", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/686986375b5c7ba19c936f96670566a05b73251e/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/686986375b5c7ba19c936f96670566a05b73251e/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=686986375b5c7ba19c936f96670566a05b73251e", "patch": "@@ -2447,7 +2447,12 @@ impl Clean<Type> for hir::Ty {\n                 let def_id = cx.tcx.hir.body_owner_def_id(n);\n                 let param_env = cx.tcx.param_env(def_id);\n                 let substs = Substs::identity_for_item(cx.tcx, def_id);\n-                let n = cx.tcx.const_eval(param_env.and((def_id, substs))).unwrap();\n+                let n = cx.tcx.const_eval(param_env.and((def_id, substs))).unwrap_or_else(|_| {\n+                    cx.tcx.mk_const(ty::Const {\n+                        val: ConstVal::Unevaluated(def_id, substs),\n+                        ty: cx.tcx.types.usize\n+                    })\n+                });\n                 let n = if let ConstVal::Integral(ConstInt::Usize(n)) = n.val {\n                     n.to_string()\n                 } else if let ConstVal::Unevaluated(def_id, _) = n.val {\n@@ -2577,7 +2582,9 @@ impl<'tcx> Clean<Type> for Ty<'tcx> {\n                 let mut n = cx.tcx.lift(&n).unwrap();\n                 if let ConstVal::Unevaluated(def_id, substs) = n.val {\n                     let param_env = cx.tcx.param_env(def_id);\n-                    n = cx.tcx.const_eval(param_env.and((def_id, substs))).unwrap()\n+                    if let Ok(new_n) = cx.tcx.const_eval(param_env.and((def_id, substs))) {\n+                        n = new_n;\n+                    }\n                 };\n                 let n = if let ConstVal::Integral(ConstInt::Usize(n)) = n.val {\n                     n.to_string()"}, {"sha": "9fed67ee583d2f2a062d4c7b22fe504624182731", "filename": "src/test/rustdoc/const-evalutation-ice.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/686986375b5c7ba19c936f96670566a05b73251e/src%2Ftest%2Frustdoc%2Fconst-evalutation-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/686986375b5c7ba19c936f96670566a05b73251e/src%2Ftest%2Frustdoc%2Fconst-evalutation-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-evalutation-ice.rs?ref=686986375b5c7ba19c936f96670566a05b73251e", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Just check if we don't get an ICE for the _S type.\n+\n+#![feature(const_size_of)]\n+\n+use std::cell::Cell;\n+use std::mem;\n+\n+pub struct S {\n+    s: Cell<usize>\n+}\n+\n+pub type _S = [usize; 0 - (mem::size_of::<S>() != 4) as usize];"}]}