{"sha": "e5cd6534c1775531b4cfe374a5c81a5a2dd899b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1Y2Q2NTM0YzE3NzU1MzFiNGNmZTM3NGE1YzgxYTVhMmRkODk5YjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-27T02:58:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-27T02:58:15Z"}, "message": "Auto merge of #22765 - sanxiyn:dedup-rustdoc, r=alexcrichton\n\nrustdoc impl item did not include default methods for local crates, but did include them for external crates. This resulted in duplicate methods. Fix so that impl item does not include default methods for external crates.\r\n\r\nFix #22595.", "tree": {"sha": "5a1e1c7d6bd9fdf271573a7c7413391c75b8647f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a1e1c7d6bd9fdf271573a7c7413391c75b8647f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0", "html_url": "https://github.com/rust-lang/rust/commit/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b47aebe3fc2da06c760fd8ea19f84cbc41d34831", "url": "https://api.github.com/repos/rust-lang/rust/commits/b47aebe3fc2da06c760fd8ea19f84cbc41d34831", "html_url": "https://github.com/rust-lang/rust/commit/b47aebe3fc2da06c760fd8ea19f84cbc41d34831"}, {"sha": "695846331b1f0f39ce2fc6dff90edce03c958d12", "url": "https://api.github.com/repos/rust-lang/rust/commits/695846331b1f0f39ce2fc6dff90edce03c958d12", "html_url": "https://github.com/rust-lang/rust/commit/695846331b1f0f39ce2fc6dff90edce03c958d12"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "a212e3a04357eccc564097ab90b203d1afc38a8f", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=e5cd6534c1775531b4cfe374a5c81a5a2dd899b0", "patch": "@@ -96,6 +96,9 @@\n   highlights for example. If you want to simply check the presence of\n   given node or attribute, use an empty string (`\"\"`) as a `PATTERN`.\n \n+* `@count PATH XPATH COUNT' checks for the occurrence of given XPath\n+  in the given file. The number of occurrences must match the given count.\n+\n All conditions can be negated with `!`. `@!has foo/type.NoSuch.html`\n checks if the given file does not exist, for example.\n \n@@ -333,6 +336,11 @@ def check_tree_text(tree, path, pat, regexp):\n     return ret\n \n \n+def check_tree_count(tree, path, count):\n+    path = normalize_xpath(path)\n+    return len(tree.findall(path)) == count\n+\n+\n def check(target, commands):\n     cache = CachedFiles(target)\n     for c in commands:\n@@ -360,6 +368,13 @@ def check(target, commands):\n                 raise RuntimeError('Invalid number of @{} arguments \\\n                                     at line {}'.format(c.cmd, c.lineno))\n \n+        elif c.cmd == 'count': # count test\n+            if len(c.args) == 3: # @count <path> <pat> <count> = count test\n+                ret = check_tree_count(cache.get_tree(c.args[0]), c.args[1], int(c.args[2]))\n+            else:\n+                raise RuntimeError('Invalid number of @{} arguments \\\n+                                    at line {}'.format(c.cmd, c.lineno))\n+\n         elif c.cmd == 'valid-html':\n             raise RuntimeError('Unimplemented @valid-html at line {}'.format(c.lineno))\n "}, {"sha": "2bb4424822a4749c5b58b3537fee5d09cb860823", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=e5cd6534c1775531b4cfe374a5c81a5a2dd899b0", "patch": "@@ -308,6 +308,9 @@ fn build_impl(cx: &DocContext, tcx: &ty::ctxt,\n                 if method.vis != ast::Public && associated_trait.is_none() {\n                     return None\n                 }\n+                if method.provided_source.is_some() {\n+                    return None\n+                }\n                 let mut item = method.clean(cx);\n                 item.inner = match item.inner.clone() {\n                     clean::TyMethodItem(clean::TyMethod {"}, {"sha": "ffc4a08f8018bcad6127e192fbec8555f0230e8c", "filename": "src/test/run-make/rustdoc-extern-default-method/Makefile", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0/src%2Ftest%2Frun-make%2Frustdoc-extern-default-method%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0/src%2Ftest%2Frun-make%2Frustdoc-extern-default-method%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-extern-default-method%2FMakefile?ref=e5cd6534c1775531b4cfe374a5c81a5a2dd899b0", "patch": "@@ -0,0 +1,6 @@\n+-include ../tools.mk\n+\n+all: lib.rs ext.rs\n+\t$(HOST_RPATH_ENV) $(RUSTC) ext.rs\n+\t$(HOST_RPATH_ENV) $(RUSTDOC) -L $(TMPDIR) -w html -o $(TMPDIR)/doc lib.rs\n+\t$(HTMLDOCCK) $(TMPDIR)/doc lib.rs"}, {"sha": "861562753f991f62f488010c6c74e43fc40a03ff", "filename": "src/test/run-make/rustdoc-extern-default-method/ext.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0/src%2Ftest%2Frun-make%2Frustdoc-extern-default-method%2Fext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0/src%2Ftest%2Frun-make%2Frustdoc-extern-default-method%2Fext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-extern-default-method%2Fext.rs?ref=e5cd6534c1775531b4cfe374a5c81a5a2dd899b0", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub trait Trait {\n+    fn provided(&self) {}\n+}\n+\n+pub struct Struct;\n+\n+impl Trait for Struct {\n+    fn provided(&self) {}\n+}"}, {"sha": "df92764dc9aec03daca7e0e088af48de44f283ad", "filename": "src/test/run-make/rustdoc-extern-default-method/lib.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0/src%2Ftest%2Frun-make%2Frustdoc-extern-default-method%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5cd6534c1775531b4cfe374a5c81a5a2dd899b0/src%2Ftest%2Frun-make%2Frustdoc-extern-default-method%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-extern-default-method%2Flib.rs?ref=e5cd6534c1775531b4cfe374a5c81a5a2dd899b0", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate ext;\n+\n+// @count lib/struct.Struct.html '//*[@id=\"method.provided\"]' 1\n+pub use ext::Struct;"}]}