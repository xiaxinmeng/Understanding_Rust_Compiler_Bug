{"sha": "b673b26f03043f974682efceffbf40df9cf4bc84", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NzNiMjZmMDMwNDNmOTc0NjgyZWZjZWZmYmY0MGRmOWNmNGJjODQ=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-02-28T19:43:20Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-07T04:41:57Z"}, "message": "Factor out discriminant loading more, for use in casts.", "tree": {"sha": "b015b9be8f950226ff12e35d35aa1ccadb5f01b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b015b9be8f950226ff12e35d35aa1ccadb5f01b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b673b26f03043f974682efceffbf40df9cf4bc84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b673b26f03043f974682efceffbf40df9cf4bc84", "html_url": "https://github.com/rust-lang/rust/commit/b673b26f03043f974682efceffbf40df9cf4bc84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b673b26f03043f974682efceffbf40df9cf4bc84/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5030e7615f7d37acaee69b13f97b9ffa23159a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5030e7615f7d37acaee69b13f97b9ffa23159a5", "html_url": "https://github.com/rust-lang/rust/commit/a5030e7615f7d37acaee69b13f97b9ffa23159a5"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "6aab2af567fb94fac14b73cf6be1d55f618270be", "filename": "src/librustc/middle/trans/adt.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b673b26f03043f974682efceffbf40df9cf4bc84/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b673b26f03043f974682efceffbf40df9cf4bc84/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs?ref=b673b26f03043f974682efceffbf40df9cf4bc84", "patch": "@@ -159,19 +159,27 @@ fn load_discr(bcx: block, scrutinee: ValueRef, min: int, max: int)\n     }\n }\n \n-pub fn trans_switch(bcx: block, r: &Repr, scrutinee: ValueRef) ->\n-    (_match::branch_kind, Option<ValueRef>) {\n+pub fn trans_switch(bcx: block, r: &Repr, scrutinee: ValueRef)\n+    -> (_match::branch_kind, Option<ValueRef>) {\n     match *r {\n-        CEnum(min, max) => {\n-            (_match::switch, Some(load_discr(bcx, scrutinee, min, max)))\n+        CEnum(*) | General(*) => {\n+            (_match::switch, Some(trans_cast_to_int(bcx, r, scrutinee)))\n         }\n         Unit(*) | Univariant(*) => {\n             (_match::single, None)\n         }\n-        General(ref cases) => {\n-            (_match::switch, Some(load_discr(bcx, scrutinee, 0,\n-                                             (cases.len() - 1) as int)))\n-        }\n+    }\n+}\n+\n+pub fn trans_cast_to_int(bcx: block, r: &Repr, scrutinee: ValueRef)\n+    -> ValueRef {\n+    match *r {\n+        Unit(the_disc) => C_int(bcx.ccx(), the_disc),\n+        CEnum(min, max) => load_discr(bcx, scrutinee, min, max),\n+        Univariant(*) => bcx.ccx().sess.bug(~\"type has no explicit \\\n+                                              discriminant\"),\n+        General(ref cases) => load_discr(bcx, scrutinee, 0,\n+                                         (cases.len() - 1) as int)\n     }\n }\n "}]}