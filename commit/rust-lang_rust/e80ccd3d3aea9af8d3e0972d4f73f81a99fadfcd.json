{"sha": "e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd", "node_id": "C_kwDOAAsO6NoAKGU4MGNjZDNkM2FlYTlhZjhkM2UwOTcyZDRmNzNmODFhOTlmYWRmY2Q", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-09-13T17:34:15Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-09-13T17:34:15Z"}, "message": "Rustdoc-Json: Don't loose subitems of foreign traits.", "tree": {"sha": "8935f968335f4177bae3314ca3160228a3c1b94a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8935f968335f4177bae3314ca3160228a3c1b94a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd", "html_url": "https://github.com/rust-lang/rust/commit/e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e44c17c12cec45b6a682b1e53a04ac5b5fcc9d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e44c17c12cec45b6a682b1e53a04ac5b5fcc9d2", "html_url": "https://github.com/rust-lang/rust/commit/2e44c17c12cec45b6a682b1e53a04ac5b5fcc9d2"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "0026c4cbdca2ce609a64d5df04f02c3680bb1d33", "filename": "src/etc/check_missing_items.py", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd/src%2Fetc%2Fcheck_missing_items.py", "raw_url": "https://github.com/rust-lang/rust/raw/e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd/src%2Fetc%2Fcheck_missing_items.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcheck_missing_items.py?ref=e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd", "patch": "@@ -49,6 +49,8 @@ def check_generic_param(param):\n         ty = param[\"kind\"][\"type\"]\n         if ty[\"default\"]:\n             check_type(ty[\"default\"])\n+        for bound in ty[\"bounds\"]:\n+            check_generic_bound(bound)\n     elif \"const\" in param[\"kind\"]:\n         check_type(param[\"kind\"][\"const\"])\n \n@@ -88,8 +90,11 @@ def check_path(path):\n                 check_type(input_ty)\n             if args[\"parenthesized\"][\"output\"]:\n                 check_type(args[\"parenthesized\"][\"output\"])\n-    if not valid_id(path[\"id\"]):\n-        print(\"Type contained an invalid ID:\", path[\"id\"])\n+\n+    if path[\"id\"] in crate[\"index\"]:\n+        work_list.add(path[\"id\"])\n+    elif path[\"id\"] not in crate[\"paths\"]:\n+        print(\"Id not in index or paths:\", path[\"id\"])\n         sys.exit(1)\n \n def check_type(ty):"}, {"sha": "5e8f5f6fe3eb9309820afbf700f1c617928aeb8d", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd", "patch": "@@ -101,6 +101,7 @@ impl<'tcx> JsonRenderer<'tcx> {\n     }\n \n     fn get_trait_items(&mut self) -> Vec<(types::Id, types::Item)> {\n+        debug!(\"Adding foreign trait items\");\n         Rc::clone(&self.cache)\n             .traits\n             .iter()\n@@ -109,6 +110,7 @@ impl<'tcx> JsonRenderer<'tcx> {\n                 if !id.is_local() {\n                     let trait_item = &trait_item.trait_;\n                     for item in &trait_item.items {\n+                        trace!(\"Adding subitem to {id:?}: {:?}\", item.item_id);\n                         self.item(item.clone()).unwrap();\n                     }\n                     let item_id = from_item_id(id.into(), self.tcx);\n@@ -184,7 +186,9 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n     /// the hashmap because certain items (traits and types) need to have their mappings for trait\n     /// implementations filled out before they're inserted.\n     fn item(&mut self, item: clean::Item) -> Result<(), Error> {\n-        trace!(\"rendering {} {:?}\", item.type_(), item.name);\n+        let item_type = item.type_();\n+        let item_name = item.name;\n+        trace!(\"rendering {} {:?}\", item_type, item_name);\n \n         // Flatten items that recursively store other items. We include orphaned items from\n         // stripped modules and etc that are otherwise reachable.\n@@ -253,6 +257,7 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n             }\n         }\n \n+        trace!(\"done rendering {} {:?}\", item_type, item_name);\n         Ok(())\n     }\n \n@@ -263,14 +268,20 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n     fn after_krate(&mut self) -> Result<(), Error> {\n         debug!(\"Done with crate\");\n \n+        debug!(\"Adding Primitve impls\");\n         for primitive in Rc::clone(&self.cache).primitive_locations.values() {\n             self.get_impls(*primitive);\n         }\n \n         let e = ExternalCrate { crate_num: LOCAL_CRATE };\n \n+        // FIXME(adotinthevoid): Remove this, as it's not consistant with not\n+        // inlining foreign items.\n+        let foreign_trait_items = self.get_trait_items();\n         let mut index = (*self.index).clone().into_inner();\n-        index.extend(self.get_trait_items());\n+        index.extend(foreign_trait_items);\n+\n+        debug!(\"Constructing Output\");\n         // This needs to be the default HashMap for compatibility with the public interface for\n         // rustdoc-json-types\n         #[allow(rustc::default_hash_types)]"}, {"sha": "430dd1543f56180cc75bb4d6d77ee91e43240a89", "filename": "src/test/rustdoc-json/traits/uses_extern_trait.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd/src%2Ftest%2Frustdoc-json%2Ftraits%2Fuses_extern_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd/src%2Ftest%2Frustdoc-json%2Ftraits%2Fuses_extern_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Ftraits%2Fuses_extern_trait.rs?ref=e80ccd3d3aea9af8d3e0972d4f73f81a99fadfcd", "patch": "@@ -0,0 +1,7 @@\n+#![no_std]\n+pub fn drop_default<T: core::default::Default>(_x: T) {}\n+\n+// FIXME(adotinthevoid): Theses shouldn't be here\n+// @has \"$.index[*][?(@.name=='Debug')]\"\n+// @set Debug_fmt = \"$.index[*][?(@.name=='Debug')].inner.items[*]\"\n+// @has \"$.index[*][?(@.name=='fmt')].id\" $Debug_fmt"}]}