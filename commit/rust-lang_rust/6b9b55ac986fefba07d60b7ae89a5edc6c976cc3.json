{"sha": "6b9b55ac986fefba07d60b7ae89a5edc6c976cc3", "node_id": "C_kwDOAAsO6NoAKDZiOWI1NWFjOTg2ZmVmYmEwN2Q2MGI3YWU4OWE1ZWRjNmM5NzZjYzM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2023-06-15T20:04:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-15T20:04:57Z"}, "message": "Rollup merge of #112654 - aliemjay:closure-output-normalize, r=compiler-errors\n\nnormalize closure output in equate_inputs_and_outputs\n\nFixes #112604", "tree": {"sha": "e7692edbfd489e3f874459554d1d11465940acb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7692edbfd489e3f874459554d1d11465940acb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b9b55ac986fefba07d60b7ae89a5edc6c976cc3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJki27pCRBK7hj4Ov3rIwAA218IAFNfTTCiqRA/pNfOumbPUHag\nSl4swK29o9wAIoTShl53GdSNxRaQB5oVQ5FyQmG4sbOwm2ODV6ktkiaB6Xe7y1IO\nRGXBHjrPRN8uOXylywcEc32IeQd/pPcI8Y6TNJoFQBH2EcPmSrqVBm0eARs+B/ZR\nOfNcsRBd4b39ibWyLpC7wmw8ioHcR+N8lRrFik8UgLnIpUoElh5mkw+GMNl0n9tN\n/621dZuLuOnPDSqb8UameA7ygmQL6i95ScsmT4z5Aclr96nENMKVlqFR/HwzDFo0\nne0aob/u/2br/x4vsASLPHYDbHtewT9HZrp8uZ4JAghN5HGX3FVLWQ806Bf3xXo=\n=q7c/\n-----END PGP SIGNATURE-----\n", "payload": "tree e7692edbfd489e3f874459554d1d11465940acb2\nparent af955a647e538c3bc724cce84fb913d03e1d6c81\nparent c75e6e0f6c55d11ef06767cb42f617ae5e5b3870\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1686859497 +0200\ncommitter GitHub <noreply@github.com> 1686859497 +0200\n\nRollup merge of #112654 - aliemjay:closure-output-normalize, r=compiler-errors\n\nnormalize closure output in equate_inputs_and_outputs\n\nFixes #112604\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b9b55ac986fefba07d60b7ae89a5edc6c976cc3", "html_url": "https://github.com/rust-lang/rust/commit/6b9b55ac986fefba07d60b7ae89a5edc6c976cc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b9b55ac986fefba07d60b7ae89a5edc6c976cc3/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af955a647e538c3bc724cce84fb913d03e1d6c81", "url": "https://api.github.com/repos/rust-lang/rust/commits/af955a647e538c3bc724cce84fb913d03e1d6c81", "html_url": "https://github.com/rust-lang/rust/commit/af955a647e538c3bc724cce84fb913d03e1d6c81"}, {"sha": "c75e6e0f6c55d11ef06767cb42f617ae5e5b3870", "url": "https://api.github.com/repos/rust-lang/rust/commits/c75e6e0f6c55d11ef06767cb42f617ae5e5b3870", "html_url": "https://github.com/rust-lang/rust/commit/c75e6e0f6c55d11ef06767cb42f617ae5e5b3870"}], "stats": {"total": 65, "additions": 50, "deletions": 15}, "files": [{"sha": "eec886b7be48fcd01250cc065ee559b91a68c85b", "filename": "compiler/rustc_borrowck/src/type_check/input_output.rs", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6b9b55ac986fefba07d60b7ae89a5edc6c976cc3/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b9b55ac986fefba07d60b7ae89a5edc6c976cc3/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Finput_output.rs?ref=6b9b55ac986fefba07d60b7ae89a5edc6c976cc3", "patch": "@@ -124,21 +124,7 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n         // Return types are a bit more complex. They may contain opaque `impl Trait` types.\n         let mir_output_ty = body.local_decls[RETURN_PLACE].ty;\n         let output_span = body.local_decls[RETURN_PLACE].source_info.span;\n-        if let Err(terr) = self.eq_types(\n-            normalized_output_ty,\n-            mir_output_ty,\n-            Locations::All(output_span),\n-            ConstraintCategory::BoringNoLocation,\n-        ) {\n-            span_mirbug!(\n-                self,\n-                Location::START,\n-                \"equate_inputs_and_outputs: `{:?}=={:?}` failed with `{:?}`\",\n-                normalized_output_ty,\n-                mir_output_ty,\n-                terr\n-            );\n-        };\n+        self.equate_normalized_input_or_output(normalized_output_ty, mir_output_ty, output_span);\n     }\n \n     #[instrument(skip(self), level = \"debug\")]"}, {"sha": "e4c954eeb33d2bd3fa98af002c1e3366781bc6ba", "filename": "tests/ui/nll/issue-112604-closure-output-normalize.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/6b9b55ac986fefba07d60b7ae89a5edc6c976cc3/tests%2Fui%2Fnll%2Fissue-112604-closure-output-normalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b9b55ac986fefba07d60b7ae89a5edc6c976cc3/tests%2Fui%2Fnll%2Fissue-112604-closure-output-normalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnll%2Fissue-112604-closure-output-normalize.rs?ref=6b9b55ac986fefba07d60b7ae89a5edc6c976cc3", "patch": "@@ -0,0 +1,49 @@\n+//check-pass\n+\n+use higher_kinded_types::*;\n+mod higher_kinded_types {\n+    pub(crate) trait HKT {\n+        type Of<'lt>;\n+    }\n+\n+    pub(crate) trait WithLifetime<'lt> {\n+        type T;\n+    }\n+\n+    impl<T: ?Sized + for<'any> WithLifetime<'any>> HKT for T {\n+        type Of<'lt> = <T as WithLifetime<'lt>>::T;\n+    }\n+}\n+\n+trait Trait {\n+    type Gat<'lt>;\n+}\n+\n+impl Trait for () {\n+    type Gat<'lt> = ();\n+}\n+\n+/// Same as `Trait`, but using HKTs rather than GATs\n+trait HTrait {\n+    type Hat: ?Sized + HKT;\n+}\n+\n+impl<T: Trait> HTrait for T {\n+    type Hat = dyn for<'lt> WithLifetime<'lt, T = T::Gat<'lt>>;\n+}\n+\n+impl<Hat: ?Sized + HKT> Trait for Box<dyn '_ + HTrait<Hat = Hat>> {\n+    type Gat<'lt> = Hat::Of<'lt>;\n+}\n+\n+fn existential() -> impl for<'a> Trait<Gat<'a> = ()> {}\n+\n+fn dyn_hoops<T: Trait>(\n+    _: T,\n+) -> Box<dyn HTrait<Hat = dyn for<'a> WithLifetime<'a, T = T::Gat<'a>>>> {\n+    loop {}\n+}\n+\n+fn main() {\n+    let _ = || -> _ { dyn_hoops(existential()) };\n+}"}]}