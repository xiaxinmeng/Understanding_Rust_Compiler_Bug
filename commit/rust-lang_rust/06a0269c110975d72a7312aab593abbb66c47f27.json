{"sha": "06a0269c110975d72a7312aab593abbb66c47f27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2YTAyNjljMTEwOTc1ZDcyYTczMTJhYWI1OTNhYmJiNjZjNDdmMjc=", "commit": {"author": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2020-05-14T15:31:06Z"}, "committer": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2020-08-30T18:16:22Z"}, "message": "Add checking for no_mangle to unsafe_code lint", "tree": {"sha": "22630233ec479f6450935bee159664bd373445e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22630233ec479f6450935bee159664bd373445e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06a0269c110975d72a7312aab593abbb66c47f27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06a0269c110975d72a7312aab593abbb66c47f27", "html_url": "https://github.com/rust-lang/rust/commit/06a0269c110975d72a7312aab593abbb66c47f27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06a0269c110975d72a7312aab593abbb66c47f27/comments", "author": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85fbf49ce0e2274d0acf798f6e703747674feec3", "url": "https://api.github.com/repos/rust-lang/rust/commits/85fbf49ce0e2274d0acf798f6e703747674feec3", "html_url": "https://github.com/rust-lang/rust/commit/85fbf49ce0e2274d0acf798f6e703747674feec3"}], "stats": {"total": 96, "additions": 76, "deletions": 20}, "files": [{"sha": "ed6dab2f0a6e6694e89e9d33e13c7e854b671c34", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/06a0269c110975d72a7312aab593abbb66c47f27/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06a0269c110975d72a7312aab593abbb66c47f27/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=06a0269c110975d72a7312aab593abbb66c47f27", "patch": "@@ -277,6 +277,22 @@ impl EarlyLintPass for UnsafeCode {\n                 })\n             }\n \n+            ast::ItemKind::Fn(..) => {\n+                if attr::contains_name(&it.attrs, sym::no_mangle) {\n+                    self.report_unsafe(cx, it.span, |lint| {\n+                        lint.build(\"declaration of a `no_mangle` function\").emit();\n+                    })\n+                }\n+            }\n+\n+            ast::ItemKind::Static(..) => {\n+                if attr::contains_name(&it.attrs, sym::no_mangle) {\n+                    self.report_unsafe(cx, it.span, |lint| {\n+                        lint.build(\"declaration of a `no_mangle` static\").emit();\n+                    })\n+                }\n+            }\n+\n             _ => {}\n         }\n     }"}, {"sha": "79c44c57fc9e5eed272a3f3ab091027d699c1bad", "filename": "src/test/ui/lint/lint-unsafe-code.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/06a0269c110975d72a7312aab593abbb66c47f27/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06a0269c110975d72a7312aab593abbb66c47f27/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.rs?ref=06a0269c110975d72a7312aab593abbb66c47f27", "patch": "@@ -12,14 +12,20 @@ mod allowed_unsafe {\n     unsafe fn also_allowed() {}\n     unsafe trait AllowedUnsafe { }\n     unsafe impl AllowedUnsafe for super::Bar {}\n+    #[no_mangle] fn allowed2() {}\n }\n \n macro_rules! unsafe_in_macro {\n-    () => {\n+    () => {{\n+        #[no_mangle] fn foo() {} //~ ERROR: declaration of a `no_mangle` function\n+        #[no_mangle] static FOO: u32 = 5; //~ ERROR: declaration of a `no_mangle` static\n         unsafe {} //~ ERROR: usage of an `unsafe` block\n-    }\n+    }}\n }\n \n+#[no_mangle] fn foo() {} //~ ERROR: declaration of a `no_mangle` function\n+#[no_mangle] static FOO: u32 = 5; //~ ERROR: declaration of a `no_mangle` static\n+\n unsafe fn baz() {} //~ ERROR: declaration of an `unsafe` function\n unsafe trait Foo {} //~ ERROR: declaration of an `unsafe` trait\n unsafe impl Foo for Bar {} //~ ERROR: implementation of an `unsafe` trait"}, {"sha": "a674bdf0748d8b103f0456bd19c717d000fb15c5", "filename": "src/test/ui/lint/lint-unsafe-code.stderr", "status": "modified", "additions": 52, "deletions": 18, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/06a0269c110975d72a7312aab593abbb66c47f27/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06a0269c110975d72a7312aab593abbb66c47f27/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.stderr?ref=06a0269c110975d72a7312aab593abbb66c47f27", "patch": "@@ -1,89 +1,123 @@\n-error: declaration of an `unsafe` function\n-  --> $DIR/lint-unsafe-code.rs:23:1\n+error: declaration of a `no_mangle` function\n+  --> $DIR/lint-unsafe-code.rs:26:14\n    |\n-LL | unsafe fn baz() {}\n-   | ^^^^^^^^^^^^^^^^^^\n+LL | #[no_mangle] fn foo() {}\n+   |              ^^^^^^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/lint-unsafe-code.rs:3:9\n    |\n LL | #![deny(unsafe_code)]\n    |         ^^^^^^^^^^^\n \n+error: declaration of a `no_mangle` static\n+  --> $DIR/lint-unsafe-code.rs:27:14\n+   |\n+LL | #[no_mangle] static FOO: u32 = 5;\n+   |              ^^^^^^^^^^^^^^^^^^^^\n+\n+error: declaration of an `unsafe` function\n+  --> $DIR/lint-unsafe-code.rs:29:1\n+   |\n+LL | unsafe fn baz() {}\n+   | ^^^^^^^^^^^^^^^^^^\n+\n error: declaration of an `unsafe` trait\n-  --> $DIR/lint-unsafe-code.rs:24:1\n+  --> $DIR/lint-unsafe-code.rs:30:1\n    |\n LL | unsafe trait Foo {}\n    | ^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` trait\n-  --> $DIR/lint-unsafe-code.rs:25:1\n+  --> $DIR/lint-unsafe-code.rs:31:1\n    |\n LL | unsafe impl Foo for Bar {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: declaration of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:28:5\n+  --> $DIR/lint-unsafe-code.rs:34:5\n    |\n LL |     unsafe fn baz(&self);\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:29:5\n+  --> $DIR/lint-unsafe-code.rs:35:5\n    |\n LL |     unsafe fn provided(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:30:5\n+  --> $DIR/lint-unsafe-code.rs:36:5\n    |\n LL |     unsafe fn provided_override(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:34:5\n+  --> $DIR/lint-unsafe-code.rs:40:5\n    |\n LL |     unsafe fn baz(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:35:5\n+  --> $DIR/lint-unsafe-code.rs:41:5\n    |\n LL |     unsafe fn provided_override(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:54:5\n+  --> $DIR/lint-unsafe-code.rs:60:5\n    |\n LL |     unsafe fn provided_override(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:65:5\n+  --> $DIR/lint-unsafe-code.rs:71:5\n    |\n LL |     unsafe fn provided(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:71:5\n+  --> $DIR/lint-unsafe-code.rs:77:5\n    |\n LL |     unsafe fn provided(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:75:5\n+  --> $DIR/lint-unsafe-code.rs:81:5\n    |\n LL |     unsafe fn baz(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: usage of an `unsafe` block\n-  --> $DIR/lint-unsafe-code.rs:86:5\n+  --> $DIR/lint-unsafe-code.rs:92:5\n    |\n LL |     unsafe {}\n    |     ^^^^^^^^^\n \n+error: declaration of a `no_mangle` function\n+  --> $DIR/lint-unsafe-code.rs:20:22\n+   |\n+LL |         #[no_mangle] fn foo() {}\n+   |                      ^^^^^^^^^^^\n+...\n+LL |     unsafe_in_macro!()\n+   |     ------------------ in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: declaration of a `no_mangle` static\n+  --> $DIR/lint-unsafe-code.rs:21:22\n+   |\n+LL |         #[no_mangle] static FOO: u32 = 5;\n+   |                      ^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     unsafe_in_macro!()\n+   |     ------------------ in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n error: usage of an `unsafe` block\n-  --> $DIR/lint-unsafe-code.rs:19:9\n+  --> $DIR/lint-unsafe-code.rs:22:9\n    |\n LL |         unsafe {}\n    |         ^^^^^^^^^\n@@ -93,5 +127,5 @@ LL |     unsafe_in_macro!()\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 14 previous errors\n+error: aborting due to 18 previous errors\n "}]}