{"sha": "84f24ccb6e016d86bee18c6985d5cafcb02990ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0ZjI0Y2NiNmUwMTZkODZiZWUxOGM2OTg1ZDVjYWZjYjAyOTkwYWU=", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-08-03T17:09:44Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-08-03T18:29:31Z"}, "message": "delete expectations for `expect-region-supply-region`\n\nThe error output is now the same as the others, no need to bless\nanything.", "tree": {"sha": "056cf250c278d9b7efafe384201ec4dac18f448a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/056cf250c278d9b7efafe384201ec4dac18f448a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84f24ccb6e016d86bee18c6985d5cafcb02990ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84f24ccb6e016d86bee18c6985d5cafcb02990ae", "html_url": "https://github.com/rust-lang/rust/commit/84f24ccb6e016d86bee18c6985d5cafcb02990ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84f24ccb6e016d86bee18c6985d5cafcb02990ae/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f23d18b976387cf6a80d643943a29bcbbd9428fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f23d18b976387cf6a80d643943a29bcbbd9428fd", "html_url": "https://github.com/rust-lang/rust/commit/f23d18b976387cf6a80d643943a29bcbbd9428fd"}], "stats": {"total": 56, "additions": 0, "deletions": 56}, "files": [{"sha": "df60416709f13f8fdc24fedaf5809206474b38aa", "filename": "src/test/ui/closures/closure-expected-type/expect-region-supply-region.polonius.stderr", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/f23d18b976387cf6a80d643943a29bcbbd9428fd/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region.polonius.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f23d18b976387cf6a80d643943a29bcbbd9428fd/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region.polonius.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region.polonius.stderr?ref=f23d18b976387cf6a80d643943a29bcbbd9428fd", "patch": "@@ -1,56 +0,0 @@\n-error[E0521]: borrowed data escapes outside of closure\n-  --> $DIR/expect-region-supply-region.rs:18:9\n-   |\n-LL |     let mut f: Option<&u32> = None;\n-   |         ----- `f` declared here, outside of the closure body\n-LL |     closure_expecting_bound(|x| {\n-   |                              - `x` is a reference that is only valid in the closure body\n-LL |         f = Some(x);\n-   |         ^^^^^^^^^^^ `x` escapes the closure body here\n-\n-error[E0521]: borrowed data escapes outside of closure\n-  --> $DIR/expect-region-supply-region.rs:28:9\n-   |\n-LL |     let mut f: Option<&u32> = None;\n-   |         ----- `f` declared here, outside of the closure body\n-LL |     closure_expecting_bound(|x: &u32| {\n-   |                              - `x` is a reference that is only valid in the closure body\n-LL |         f = Some(x);\n-   |         ^^^^^^^^^^^ `x` escapes the closure body here\n-\n-error: lifetime may not live long enough\n-  --> $DIR/expect-region-supply-region.rs:37:30\n-   |\n-LL | fn expect_bound_supply_named<'x>() {\n-   |                              -- lifetime `'x` defined here\n-...\n-LL |     closure_expecting_bound(|x: &'x u32| {\n-   |                              ^  - let's call the lifetime of this reference `'1`\n-   |                              |\n-   |                              requires that `'1` must outlive `'x`\n-\n-error[E0521]: borrowed data escapes outside of closure\n-  --> $DIR/expect-region-supply-region.rs:42:9\n-   |\n-LL |     let mut f: Option<&u32> = None;\n-   |         ----- `f` declared here, outside of the closure body\n-...\n-LL |     closure_expecting_bound(|x: &'x u32| {\n-   |                              - `x` is a reference that is only valid in the closure body\n-...\n-LL |         f = Some(x);\n-   |         ^^^^^^^^^^^ `x` escapes the closure body here\n-\n-error: lifetime may not live long enough\n-  --> $DIR/expect-region-supply-region.rs:37:30\n-   |\n-LL | fn expect_bound_supply_named<'x>() {\n-   |                              -- lifetime `'x` defined here\n-...\n-LL |     closure_expecting_bound(|x: &'x u32| {\n-   |                              ^ requires that `'x` must outlive `'static`\n-   |\n-   = help: consider replacing `'x` with `'static`\n-\n-error: aborting due to 5 previous errors\n-"}]}