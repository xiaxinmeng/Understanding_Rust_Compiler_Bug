{"sha": "ba173d84098024d43628a250b0024ffe83b48558", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMTczZDg0MDk4MDI0ZDQzNjI4YTI1MGIwMDI0ZmZlODNiNDg1NTg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-24T21:34:35Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-24T21:34:35Z"}, "message": "rustdoc: Add doc node for native mods", "tree": {"sha": "13d1ce9af76b67968d4df2d23fa5c44607d130e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13d1ce9af76b67968d4df2d23fa5c44607d130e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba173d84098024d43628a250b0024ffe83b48558", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba173d84098024d43628a250b0024ffe83b48558", "html_url": "https://github.com/rust-lang/rust/commit/ba173d84098024d43628a250b0024ffe83b48558", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba173d84098024d43628a250b0024ffe83b48558/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "155a67eae7cedba0180c53597d160b80c828f92e", "url": "https://api.github.com/repos/rust-lang/rust/commits/155a67eae7cedba0180c53597d160b80c828f92e", "html_url": "https://github.com/rust-lang/rust/commit/155a67eae7cedba0180c53597d160b80c828f92e"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "12d04b0c60319fcd33f98e962c29881d7f9c5e27", "filename": "src/rustdoc/doc.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ba173d84098024d43628a250b0024ffe83b48558/src%2Frustdoc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba173d84098024d43628a250b0024ffe83b48558/src%2Frustdoc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdoc.rs?ref=ba173d84098024d43628a250b0024ffe83b48558", "patch": "@@ -11,6 +11,7 @@ type cratedoc = {\n \n enum itemtag {\n     modtag(moddoc),\n+    nmodtag(nmoddoc),\n     consttag(constdoc),\n     fntag(fndoc),\n     enumtag(enumdoc),\n@@ -34,6 +35,11 @@ type moddoc = {\n     items: ~[itemtag]\n };\n \n+type nmoddoc = {\n+    item: itemdoc,\n+    fns: ~[fndoc]\n+};\n+\n type constdoc = {\n     item: itemdoc,\n     ty: option<str>\n@@ -186,6 +192,7 @@ impl of item for itemtag {\n     fn item() -> itemdoc {\n         alt self {\n           doc::modtag(doc) { doc.item }\n+          doc::nmodtag(doc) { doc.item }\n           doc::fntag(doc) { doc.item }\n           doc::consttag(doc) { doc.item }\n           doc::enumtag(doc) { doc.item }\n@@ -201,6 +208,10 @@ impl of item for moddoc {\n     fn item() -> itemdoc { self.item }\n }\n \n+impl of item for nmoddoc {\n+    fn item() -> itemdoc { self.item }\n+}\n+\n impl of item for fndoc {\n     fn item() -> itemdoc { self.item }\n }"}, {"sha": "f198c7040d15f44961fd7c97499ce221d1c4f133", "filename": "src/rustdoc/fold.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ba173d84098024d43628a250b0024ffe83b48558/src%2Frustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba173d84098024d43628a250b0024ffe83b48558/src%2Frustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ffold.rs?ref=ba173d84098024d43628a250b0024ffe83b48558", "patch": "@@ -4,6 +4,7 @@ export default_seq_fold;\n export default_seq_fold_crate;\n export default_seq_fold_item;\n export default_seq_fold_mod;\n+export default_seq_fold_nmod;\n export default_seq_fold_fn;\n export default_seq_fold_const;\n export default_seq_fold_enum;\n@@ -21,6 +22,7 @@ enum fold<T> = t<T>;\n type fold_crate<T> = fn~(fold: fold<T>, doc: doc::cratedoc) -> doc::cratedoc;\n type fold_item<T> = fn~(fold: fold<T>, doc: doc::itemdoc) -> doc::itemdoc;\n type fold_mod<T> = fn~(fold: fold<T>, doc: doc::moddoc) -> doc::moddoc;\n+type fold_nmod<T> = fn~(fold: fold<T>, doc: doc::nmoddoc) -> doc::nmoddoc;\n type fold_fn<T> = fn~(fold: fold<T>, doc: doc::fndoc) -> doc::fndoc;\n type fold_const<T> = fn~(fold: fold<T>, doc: doc::constdoc) -> doc::constdoc;\n type fold_enum<T> = fn~(fold: fold<T>, doc: doc::enumdoc) -> doc::enumdoc;\n@@ -34,6 +36,7 @@ type t<T> = {\n     fold_crate: fold_crate<T>,\n     fold_item: fold_item<T>,\n     fold_mod: fold_mod<T>,\n+    fold_nmod: fold_nmod<T>,\n     fold_fn: fold_fn<T>,\n     fold_const: fold_const<T>,\n     fold_enum: fold_enum<T>,\n@@ -51,6 +54,7 @@ fn mk_fold<T:copy>(\n     fold_crate: fold_crate<T>,\n     fold_item: fold_item<T>,\n     fold_mod: fold_mod<T>,\n+    fold_nmod: fold_nmod<T>,\n     fold_fn: fold_fn<T>,\n     fold_const: fold_const<T>,\n     fold_enum: fold_enum<T>,\n@@ -64,6 +68,7 @@ fn mk_fold<T:copy>(\n         fold_crate: fold_crate,\n         fold_item: fold_item,\n         fold_mod: fold_mod,\n+        fold_nmod: fold_nmod,\n         fold_fn: fold_fn,\n         fold_const: fold_const,\n         fold_enum: fold_enum,\n@@ -80,6 +85,7 @@ fn default_seq_fold<T:copy>(ctxt: T) -> fold<T> {\n         {|f, d| default_seq_fold_crate(f, d)},\n         {|f, d| default_seq_fold_item(f, d)},\n         {|f, d| default_seq_fold_mod(f, d)},\n+        {|f, d| default_seq_fold_nmod(f, d)},\n         {|f, d| default_seq_fold_fn(f, d)},\n         {|f, d| default_seq_fold_const(f, d)},\n         {|f, d| default_seq_fold_enum(f, d)},\n@@ -96,6 +102,7 @@ fn default_par_fold<T:send>(ctxt: T) -> fold<T> {\n         {|f, d| default_seq_fold_crate(f, d)},\n         {|f, d| default_seq_fold_item(f, d)},\n         {|f, d| default_par_fold_mod(f, d)},\n+        {|f, d| default_seq_fold_nmod(f, d)},\n         {|f, d| default_seq_fold_fn(f, d)},\n         {|f, d| default_seq_fold_const(f, d)},\n         {|f, d| default_seq_fold_enum(f, d)},\n@@ -141,6 +148,19 @@ fn default_seq_fold_mod<T>(\n     }\n }\n \n+fn default_seq_fold_nmod<T>(\n+    fold: fold<T>,\n+    doc: doc::nmoddoc\n+) -> doc::nmoddoc {\n+    {\n+        item: fold.fold_item(fold, doc.item),\n+        fns: ~vec::map(*doc.fns) {|fndoc|\n+            fold.fold_fn(fold, fndoc)\n+        }\n+        with doc\n+    }\n+}\n+\n fn default_par_fold_mod<T:send>(\n     fold: fold<T>,\n     doc: doc::moddoc\n@@ -166,6 +186,9 @@ fn fold_itemtag<T>(fold: fold<T>, doc: doc::itemtag) -> doc::itemtag {\n       doc::modtag(moddoc) {\n         doc::modtag(fold.fold_mod(fold, moddoc))\n       }\n+      doc::nmodtag(nmoddoc) {\n+        doc::nmodtag(fold.fold_nmod(fold, nmoddoc))\n+      }\n       doc::fntag(fndoc) {\n         doc::fntag(fold.fold_fn(fold, fndoc))\n       }"}, {"sha": "18c169318a3c48cf3342d35f842db93ac70e1e49", "filename": "src/rustdoc/markdown_pass.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ba173d84098024d43628a250b0024ffe83b48558/src%2Frustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba173d84098024d43628a250b0024ffe83b48558/src%2Frustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_pass.rs?ref=ba173d84098024d43628a250b0024ffe83b48558", "patch": "@@ -133,6 +133,7 @@ fn write_mod_contents(\n     for itemtag in *doc.items {\n         alt itemtag {\n           doc::modtag(moddoc) { write_mod(ctxt, moddoc) }\n+          doc::nmodtag(_) { fail }\n           doc::fntag(fndoc) { write_fn(ctxt, fndoc) }\n           doc::consttag(constdoc) { write_const(ctxt, constdoc) }\n           doc::enumtag(enumdoc) { write_enum(ctxt, enumdoc) }"}, {"sha": "44ca3e4fcaadee191c17a36e04be149e9142b24f", "filename": "src/rustdoc/reexport_pass.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ba173d84098024d43628a250b0024ffe83b48558/src%2Frustdoc%2Freexport_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba173d84098024d43628a250b0024ffe83b48558/src%2Frustdoc%2Freexport_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Freexport_pass.rs?ref=ba173d84098024d43628a250b0024ffe83b48558", "patch": "@@ -227,6 +227,7 @@ fn merge_reexports(\n                 with doc\n             })\n           }\n+          doc::nmodtag(_) { fail }\n           doc::consttag(doc @ {item, _}) {\n             doc::consttag({\n                 item: rename(item, name)"}]}