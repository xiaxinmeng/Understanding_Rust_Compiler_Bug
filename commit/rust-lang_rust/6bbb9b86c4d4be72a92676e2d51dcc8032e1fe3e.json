{"sha": "6bbb9b86c4d4be72a92676e2d51dcc8032e1fe3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiYmI5Yjg2YzRkNGJlNzJhOTI2NzZlMmQ1MWRjYzgwMzJlMWZlM2U=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-08T16:04:02Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-08T16:04:02Z"}, "message": "test discriminant of enum with uninhabited variant", "tree": {"sha": "16b6d62cf148bdc040b8fc0e00dfe1c1100c9a45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16b6d62cf148bdc040b8fc0e00dfe1c1100c9a45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bbb9b86c4d4be72a92676e2d51dcc8032e1fe3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bbb9b86c4d4be72a92676e2d51dcc8032e1fe3e", "html_url": "https://github.com/rust-lang/rust/commit/6bbb9b86c4d4be72a92676e2d51dcc8032e1fe3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bbb9b86c4d4be72a92676e2d51dcc8032e1fe3e/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22f2385a738827fb682bc72bb9e1d794bb436672", "url": "https://api.github.com/repos/rust-lang/rust/commits/22f2385a738827fb682bc72bb9e1d794bb436672", "html_url": "https://github.com/rust-lang/rust/commit/22f2385a738827fb682bc72bb9e1d794bb436672"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "9aac3c4532f473e42c8476722fa1ee134664f6ed", "filename": "src/test/ui/consts/const_discriminant.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6bbb9b86c4d4be72a92676e2d51dcc8032e1fe3e/src%2Ftest%2Fui%2Fconsts%2Fconst_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bbb9b86c4d4be72a92676e2d51dcc8032e1fe3e/src%2Ftest%2Fui%2Fconsts%2Fconst_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_discriminant.rs?ref=6bbb9b86c4d4be72a92676e2d51dcc8032e1fe3e", "patch": "@@ -15,10 +15,21 @@ const TEST_A: Discriminant<Test> = discriminant(&Test::A(5));\n const TEST_A_OTHER: Discriminant<Test> = discriminant(&Test::A(17));\n const TEST_B: Discriminant<Test> = discriminant(&Test::B);\n \n+enum Void {}\n+\n+enum SingleVariant {\n+    V,\n+    Never(Void),\n+}\n+\n+const TEST_V: Discriminant<SingleVariant> = discriminant(&SingleVariant::V);\n+\n fn main() {\n     assert_eq!(TEST_A, TEST_A_OTHER);\n     assert_eq!(TEST_A, discriminant(identity(&Test::A(17))));\n     assert_eq!(TEST_B, discriminant(identity(&Test::B)));\n     assert_ne!(TEST_A, TEST_B);\n     assert_ne!(TEST_B, discriminant(identity(&Test::C { a: 42, b: 7 })));\n+\n+    assert_eq!(TEST_V, discriminant(identity(&SingleVariant::V)));\n }"}]}