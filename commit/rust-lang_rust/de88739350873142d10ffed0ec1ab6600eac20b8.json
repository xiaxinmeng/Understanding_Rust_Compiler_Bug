{"sha": "de88739350873142d10ffed0ec1ab6600eac20b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlODg3MzkzNTA4NzMxNDJkMTBmZmVkMGVjMWFiNjYwMGVhYzIwYjg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-07T19:48:31Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-07T20:31:12Z"}, "message": "Don't expert def_to_str from metadata::encoder", "tree": {"sha": "5d3c8de7354cf908bc2b1fc273a76ac3891cd4e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d3c8de7354cf908bc2b1fc273a76ac3891cd4e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de88739350873142d10ffed0ec1ab6600eac20b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de88739350873142d10ffed0ec1ab6600eac20b8", "html_url": "https://github.com/rust-lang/rust/commit/de88739350873142d10ffed0ec1ab6600eac20b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de88739350873142d10ffed0ec1ab6600eac20b8/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d26d1d67b271dcc2a422e13138163cd31393fd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d26d1d67b271dcc2a422e13138163cd31393fd3", "html_url": "https://github.com/rust-lang/rust/commit/7d26d1d67b271dcc2a422e13138163cd31393fd3"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "fdde5ebb8380404c3b960efec388420b9350c5a9", "filename": "src/comp/metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/de88739350873142d10ffed0ec1ab6600eac20b8/src%2Fcomp%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de88739350873142d10ffed0ec1ab6600eac20b8/src%2Fcomp%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fencoder.rs?ref=de88739350873142d10ffed0ec1ab6600eac20b8", "patch": "@@ -16,7 +16,6 @@ import middle::ty;\n import middle::ty::node_id_to_monotype;\n import front::attr;\n \n-export def_to_str;\n export encode_metadata;\n export ty_str;\n \n@@ -543,7 +542,7 @@ fn encode_metadata(&@crate_ctxt cx, &@crate crate) -> str {\n \n // Get the encoded string for a type\n fn ty_str(&ty::ctxt tcx, &ty::t t) -> str {\n-    auto cx = @rec(ds = encoder::def_to_str,\n+    auto cx = @rec(ds = def_to_str,\n                    tcx = tcx,\n                    abbrevs = metadata::tyencode::ac_no_abbrevs);\n     auto sw = io::string_writer();"}]}