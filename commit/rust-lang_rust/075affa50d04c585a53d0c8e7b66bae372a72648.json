{"sha": "075affa50d04c585a53d0c8e7b66bae372a72648", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NWFmZmE1MGQwNGM1ODVhNTNkMGM4ZTdiNjZiYWUzNzJhNzI2NDg=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-02-24T23:03:47Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-07T04:41:57Z"}, "message": "Convert const field extraction to trans::adt", "tree": {"sha": "2161116e7b15f3acec7236c779db09615ca1e939", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2161116e7b15f3acec7236c779db09615ca1e939"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/075affa50d04c585a53d0c8e7b66bae372a72648", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/075affa50d04c585a53d0c8e7b66bae372a72648", "html_url": "https://github.com/rust-lang/rust/commit/075affa50d04c585a53d0c8e7b66bae372a72648", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/075affa50d04c585a53d0c8e7b66bae372a72648/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59daf76a8db88ec2ea4640f0fbf598402d1a10cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/59daf76a8db88ec2ea4640f0fbf598402d1a10cb", "html_url": "https://github.com/rust-lang/rust/commit/59daf76a8db88ec2ea4640f0fbf598402d1a10cb"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "c42db4a90a18f2431968ded7fd8741ec04170bd3", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/075affa50d04c585a53d0c8e7b66bae372a72648/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/075affa50d04c585a53d0c8e7b66bae372a72648/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=075affa50d04c585a53d0c8e7b66bae372a72648", "patch": "@@ -240,16 +240,12 @@ fn const_expr_unchecked(cx: @CrateContext, e: @ast::expr) -> ValueRef {\n           }\n           ast::expr_field(base, field, _) => {\n               let bt = ty::expr_ty(cx.tcx, base);\n+              let brepr = adt::represent_type(cx, bt);\n               let bv = const_expr(cx, base);\n               let (bt, bv) = const_autoderef(cx, bt, bv);\n-              do expr::with_field_tys(cx.tcx, bt, None) |_, field_tys| {\n+              do expr::with_field_tys(cx.tcx, bt, None) |discr, field_tys| {\n                   let ix = ty::field_idx_strict(cx.tcx, field, field_tys);\n-\n-                  // Note: ideally, we'd use `struct_field()` here instead\n-                  // of hardcoding [0, ix], but we can't because it yields\n-                  // the wrong type and also inserts an extra 0 that is\n-                  // not needed in the constant variety:\n-                  const_get_elt(cx, bv, [0, ix as c_uint])\n+                  adt::const_get_element(cx, &brepr, bv, discr, ix)\n               }\n           }\n "}]}