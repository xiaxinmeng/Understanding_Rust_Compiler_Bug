{"sha": "67c02222526d46875ddabfda1b7a936564f916ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3YzAyMjIyNTI2ZDQ2ODc1ZGRhYmZkYTFiN2E5MzY1NjRmOTE2ZmY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-22T05:54:05Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-22T05:54:05Z"}, "message": "Guarantee comm primitives are not Freeze\n\nNone of these primitives should be Freeze because sharing them in an Arc is a\nvery bad idea.\n\nCloses #11039", "tree": {"sha": "2b14716004d310e22fb1989c94fa6dd904692931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b14716004d310e22fb1989c94fa6dd904692931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67c02222526d46875ddabfda1b7a936564f916ff", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67c02222526d46875ddabfda1b7a936564f916ff", "html_url": "https://github.com/rust-lang/rust/commit/67c02222526d46875ddabfda1b7a936564f916ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67c02222526d46875ddabfda1b7a936564f916ff/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba801d8116616745ef3ca5c73682b440c1bda628", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba801d8116616745ef3ca5c73682b440c1bda628", "html_url": "https://github.com/rust-lang/rust/commit/ba801d8116616745ef3ca5c73682b440c1bda628"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "30324d9bc60b692ec39c7e46fccb3bdc8ec2ffea", "filename": "src/libstd/comm/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/67c02222526d46875ddabfda1b7a936564f916ff/src%2Flibstd%2Fcomm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67c02222526d46875ddabfda1b7a936564f916ff/src%2Flibstd%2Fcomm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcomm%2Fmod.rs?ref=67c02222526d46875ddabfda1b7a936564f916ff", "patch": "@@ -292,6 +292,7 @@ impl<T: Send> Consumer<T>{\n \n /// The receiving-half of Rust's channel type. This half can only be owned by\n /// one task\n+#[no_freeze] // can't share ports in an arc\n pub struct Port<T> {\n     priv queue: Consumer<T>,\n }\n@@ -305,12 +306,15 @@ pub struct PortIterator<'a, T> {\n \n /// The sending-half of Rust's channel type. This half can only be owned by one\n /// task\n+#[no_freeze] // can't share chans in an arc\n pub struct Chan<T> {\n     priv queue: spsc::Producer<T, Packet>,\n }\n \n /// The sending-half of Rust's channel type. This half can be shared among many\n /// tasks by creating copies of itself through the `clone` method.\n+#[no_freeze] // technically this implementation is shareable, but it shouldn't\n+             // be required to be shareable in an arc\n pub struct SharedChan<T> {\n     priv queue: mpsc::Producer<T, Packet>,\n }"}, {"sha": "2b85068d4708b4590a72086ba938caf039fd3422", "filename": "src/test/compile-fail/comm-not-freeze.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/67c02222526d46875ddabfda1b7a936564f916ff/src%2Ftest%2Fcompile-fail%2Fcomm-not-freeze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67c02222526d46875ddabfda1b7a936564f916ff/src%2Ftest%2Fcompile-fail%2Fcomm-not-freeze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcomm-not-freeze.rs?ref=67c02222526d46875ddabfda1b7a936564f916ff", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn test<T: Freeze>() {}\n+\n+fn main() {\n+    test::<Chan<int>>();        //~ ERROR: does not fulfill `Freeze`\n+    test::<Port<int>>();        //~ ERROR: does not fulfill `Freeze`\n+    test::<SharedChan<int>>();  //~ ERROR: does not fulfill `Freeze`\n+}"}]}