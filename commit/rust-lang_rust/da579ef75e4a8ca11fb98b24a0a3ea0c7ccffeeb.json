{"sha": "da579ef75e4a8ca11fb98b24a0a3ea0c7ccffeeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNTc5ZWY3NWU0YThjYTExZmI5OGIyNGEwYTNlYTBjN2NjZmZlZWI=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-05-21T17:38:41Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-05-21T17:39:59Z"}, "message": "rustc_codegen_llvm: remove closure env alloca hack around upvar debuginfo.", "tree": {"sha": "c5a2a6825efe8f37c4acaf0b0d8eca18e4bf6e99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5a2a6825efe8f37c4acaf0b0d8eca18e4bf6e99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da579ef75e4a8ca11fb98b24a0a3ea0c7ccffeeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da579ef75e4a8ca11fb98b24a0a3ea0c7ccffeeb", "html_url": "https://github.com/rust-lang/rust/commit/da579ef75e4a8ca11fb98b24a0a3ea0c7ccffeeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da579ef75e4a8ca11fb98b24a0a3ea0c7ccffeeb/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8ceab9cd78aa276ac988866be8344e92322e09c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8ceab9cd78aa276ac988866be8344e92322e09c", "html_url": "https://github.com/rust-lang/rust/commit/a8ceab9cd78aa276ac988866be8344e92322e09c"}], "stats": {"total": 24, "additions": 2, "deletions": 22}, "files": [{"sha": "d34f881bf9dd83814b81a15d05d95c13c7b00e51", "filename": "src/librustc_codegen_llvm/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/da579ef75e4a8ca11fb98b24a0a3ea0c7ccffeeb/src%2Flibrustc_codegen_llvm%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da579ef75e4a8ca11fb98b24a0a3ea0c7ccffeeb/src%2Flibrustc_codegen_llvm%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmir%2Fmod.rs?ref=da579ef75e4a8ca11fb98b24a0a3ea0c7ccffeeb", "patch": "@@ -583,23 +583,6 @@ fn arg_local_refs<'a, 'tcx>(bx: &Builder<'a, 'tcx>,\n             };\n             let upvar_tys = upvar_substs.upvar_tys(def_id, tcx);\n \n-            // Store the pointer to closure data in an alloca for debuginfo\n-            // because that's what the llvm.dbg.declare intrinsic expects.\n-\n-            // FIXME(eddyb) this shouldn't be necessary but SROA seems to\n-            // mishandle DW_OP_plus not preceded by DW_OP_deref, i.e. it\n-            // doesn't actually strip the offset when splitting the closure\n-            // environment into its components so it ends up out of bounds.\n-            let env_ptr = if !env_ref {\n-                let scratch = PlaceRef::alloca(bx,\n-                    bx.cx.layout_of(tcx.mk_mut_ptr(arg.layout.ty)),\n-                    \"__debuginfo_env_ptr\");\n-                bx.store(place.llval, scratch.llval, scratch.align);\n-                scratch.llval\n-            } else {\n-                place.llval\n-            };\n-\n             for (i, (decl, ty)) in mir.upvar_decls.iter().zip(upvar_tys).enumerate() {\n                 let byte_offset_of_var_in_env = closure_layout.fields.offset(i).bytes();\n \n@@ -611,10 +594,7 @@ fn arg_local_refs<'a, 'tcx>(bx: &Builder<'a, 'tcx>,\n                 };\n \n                 // The environment and the capture can each be indirect.\n-\n-                // FIXME(eddyb) see above why we have to keep\n-                // a pointer in an alloca for debuginfo atm.\n-                let mut ops = if env_ref || true { &ops[..] } else { &ops[1..] };\n+                let mut ops = if env_ref { &ops[..] } else { &ops[1..] };\n \n                 let ty = if let (true, &ty::TyRef(_, ty, _)) = (decl.by_ref, &ty.sty) {\n                     ty\n@@ -624,7 +604,7 @@ fn arg_local_refs<'a, 'tcx>(bx: &Builder<'a, 'tcx>,\n                 };\n \n                 let variable_access = VariableAccess::IndirectVariable {\n-                    alloca: env_ptr,\n+                    alloca: place.llval,\n                     address_operations: &ops\n                 };\n                 declare_local("}]}