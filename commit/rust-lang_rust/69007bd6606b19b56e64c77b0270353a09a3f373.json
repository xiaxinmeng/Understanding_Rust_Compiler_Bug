{"sha": "69007bd6606b19b56e64c77b0270353a09a3f373", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5MDA3YmQ2NjA2YjE5YjU2ZTY0Yzc3YjAyNzAzNTNhMDlhM2YzNzM=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-11-23T18:42:14Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-12-27T18:21:15Z"}, "message": "Implement \"lifetime juggling\" methods from chalk integration trait\n\nFixes #55097.", "tree": {"sha": "4c3e3a73f86ae3a1d401e9d48d8ed1bbc65a05bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c3e3a73f86ae3a1d401e9d48d8ed1bbc65a05bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69007bd6606b19b56e64c77b0270353a09a3f373", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69007bd6606b19b56e64c77b0270353a09a3f373", "html_url": "https://github.com/rust-lang/rust/commit/69007bd6606b19b56e64c77b0270353a09a3f373", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69007bd6606b19b56e64c77b0270353a09a3f373/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b87f590dcefc619c3d1e080062cc7bb2e0fb5fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b87f590dcefc619c3d1e080062cc7bb2e0fb5fb", "html_url": "https://github.com/rust-lang/rust/commit/9b87f590dcefc619c3d1e080062cc7bb2e0fb5fb"}], "stats": {"total": 92, "additions": 81, "deletions": 11}, "files": [{"sha": "448f8ed8ddc7b6c631265a21e1b0ba12d35a3b13", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/69007bd6606b19b56e64c77b0270353a09a3f373/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69007bd6606b19b56e64c77b0270353a09a3f373/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=69007bd6606b19b56e64c77b0270353a09a3f373", "patch": "@@ -1164,14 +1164,26 @@ where\n     ) -> bool;\n }\n \n-pub trait ExClauseLift<'tcx>\n+pub trait ChalkContextLift<'tcx>\n where\n     Self: chalk_engine::context::Context + Clone,\n {\n     type LiftedExClause: Debug + 'tcx;\n+    type LiftedDelayedLiteral: Debug + 'tcx;\n+    type LiftedLiteral: Debug + 'tcx;\n \n     fn lift_ex_clause_to_tcx<'a, 'gcx>(\n         ex_clause: &chalk_engine::ExClause<Self>,\n         tcx: TyCtxt<'a, 'gcx, 'tcx>,\n     ) -> Option<Self::LiftedExClause>;\n+\n+    fn lift_delayed_literal_to_tcx<'a, 'gcx>(\n+        ex_clause: &chalk_engine::DelayedLiteral<Self>,\n+        tcx: TyCtxt<'a, 'gcx, 'tcx>,\n+    ) -> Option<Self::LiftedDelayedLiteral>;\n+\n+    fn lift_literal_to_tcx<'a, 'gcx>(\n+        ex_clause: &chalk_engine::Literal<Self>,\n+        tcx: TyCtxt<'a, 'gcx, 'tcx>,\n+    ) -> Option<Self::LiftedLiteral>;\n }"}, {"sha": "3b74b251688caab6401784db1931b99bd9d563f3", "filename": "src/librustc/traits/structural_impls.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/69007bd6606b19b56e64c77b0270353a09a3f373/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69007bd6606b19b56e64c77b0270353a09a3f373/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs?ref=69007bd6606b19b56e64c77b0270353a09a3f373", "patch": "@@ -700,12 +700,36 @@ impl<'a, 'tcx, G: Lift<'tcx>> Lift<'tcx> for traits::InEnvironment<'a, G> {\n impl<'tcx, C> Lift<'tcx> for chalk_engine::ExClause<C>\n where\n     C: chalk_engine::context::Context + Clone,\n-    C: traits::ExClauseLift<'tcx>,\n+    C: traits::ChalkContextLift<'tcx>,\n {\n     type Lifted = C::LiftedExClause;\n \n     fn lift_to_tcx<'a, 'gcx>(&self, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> Option<Self::Lifted> {\n-        <C as traits::ExClauseLift>::lift_ex_clause_to_tcx(self, tcx)\n+        <C as traits::ChalkContextLift>::lift_ex_clause_to_tcx(self, tcx)\n+    }\n+}\n+\n+impl<'tcx, C> Lift<'tcx> for chalk_engine::DelayedLiteral<C>\n+where\n+    C: chalk_engine::context::Context + Clone,\n+    C: traits::ChalkContextLift<'tcx>,\n+{\n+    type Lifted = C::LiftedDelayedLiteral;\n+\n+    fn lift_to_tcx<'a, 'gcx>(&self, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> Option<Self::Lifted> {\n+        <C as traits::ChalkContextLift>::lift_delayed_literal_to_tcx(self, tcx)\n+    }\n+}\n+\n+impl<'tcx, C> Lift<'tcx> for chalk_engine::Literal<C>\n+where\n+    C: chalk_engine::context::Context + Clone,\n+    C: traits::ChalkContextLift<'tcx>,\n+{\n+    type Lifted = C::LiftedLiteral;\n+\n+    fn lift_to_tcx<'a, 'gcx>(&self, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> Option<Self::Lifted> {\n+        <C as traits::ChalkContextLift>::lift_literal_to_tcx(self, tcx)\n     }\n }\n "}, {"sha": "2384cbce1abe2a2892143de725ca5755a7db1e44", "filename": "src/librustc_traits/chalk_context/mod.rs", "status": "modified", "additions": 42, "deletions": 8, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/69007bd6606b19b56e64c77b0270353a09a3f373/src%2Flibrustc_traits%2Fchalk_context%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69007bd6606b19b56e64c77b0270353a09a3f373/src%2Flibrustc_traits%2Fchalk_context%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fchalk_context%2Fmod.rs?ref=69007bd6606b19b56e64c77b0270353a09a3f373", "patch": "@@ -21,7 +21,7 @@ use rustc::infer::canonical::{\n use rustc::traits::{\n     DomainGoal,\n     ExClauseFold,\n-    ExClauseLift,\n+    ChalkContextLift,\n     Goal,\n     GoalKind,\n     Clause,\n@@ -441,9 +441,12 @@ impl context::UnificationOps<ChalkArenas<'gcx>, ChalkArenas<'tcx>>\n \n     fn lift_delayed_literal(\n         &self,\n-        _value: DelayedLiteral<ChalkArenas<'tcx>>,\n+        value: DelayedLiteral<ChalkArenas<'tcx>>,\n     ) -> DelayedLiteral<ChalkArenas<'gcx>> {\n-        panic!(\"lift\")\n+        match self.infcx.tcx.lift_to_global(&value) {\n+            Some(literal) => literal,\n+            None => bug!(\"cannot lift {:?}\", value),\n+        }\n     }\n \n     fn into_ex_clause(\n@@ -478,14 +481,45 @@ impl Debug for ChalkInferenceContext<'cx, 'gcx, 'tcx> {\n     }\n }\n \n-impl ExClauseLift<'gcx> for ChalkArenas<'a> {\n-    type LiftedExClause = ChalkExClause<'gcx>;\n+impl ChalkContextLift<'tcx> for ChalkArenas<'a> {\n+    type LiftedExClause = ChalkExClause<'tcx>;\n+    type LiftedDelayedLiteral = DelayedLiteral<ChalkArenas<'tcx>>;\n+    type LiftedLiteral = Literal<ChalkArenas<'tcx>>;\n \n     fn lift_ex_clause_to_tcx(\n-        _ex_clause: &ChalkExClause<'a>,\n-        _tcx: TyCtxt<'_, '_, 'tcx>,\n+        ex_clause: &ChalkExClause<'a>,\n+        tcx: TyCtxt<'_, 'gcx, 'tcx>\n     ) -> Option<Self::LiftedExClause> {\n-        panic!()\n+        Some(ChalkExClause {\n+            subst: tcx.lift(&ex_clause.subst)?,\n+            delayed_literals: tcx.lift(&ex_clause.delayed_literals)?,\n+            constraints: tcx.lift(&ex_clause.constraints)?,\n+            subgoals: tcx.lift(&ex_clause.subgoals)?,\n+        })\n+    }\n+\n+    fn lift_delayed_literal_to_tcx(\n+        literal: &DelayedLiteral<ChalkArenas<'a>>,\n+        tcx: TyCtxt<'_, 'gcx, 'tcx>\n+    ) -> Option<Self::LiftedDelayedLiteral> {\n+        Some(match literal {\n+            DelayedLiteral::CannotProve(()) => DelayedLiteral::CannotProve(()),\n+            DelayedLiteral::Negative(index) => DelayedLiteral::Negative(*index),\n+            DelayedLiteral::Positive(index, subst) => DelayedLiteral::Positive(\n+                *index,\n+                tcx.lift(subst)?\n+            )\n+        })\n+    }\n+\n+    fn lift_literal_to_tcx(\n+        literal: &Literal<ChalkArenas<'a>>,\n+        tcx: TyCtxt<'_, 'gcx, 'tcx>,\n+    ) -> Option<Self::LiftedLiteral> {\n+        Some(match literal {\n+            Literal::Negative(goal) => Literal::Negative(tcx.lift(goal)?),\n+            Literal::Positive(goal) =>  Literal::Positive(tcx.lift(goal)?),\n+        })\n     }\n }\n "}]}