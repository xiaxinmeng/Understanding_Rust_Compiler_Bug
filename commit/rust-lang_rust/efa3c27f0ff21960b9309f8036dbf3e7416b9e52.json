{"sha": "efa3c27f0ff21960b9309f8036dbf3e7416b9e52", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmYTNjMjdmMGZmMjE5NjBiOTMwOWY4MDM2ZGJmM2U3NDE2YjllNTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-12T09:19:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-12T09:19:28Z"}, "message": "Auto merge of #60474 - mati865:musl_toolchain, r=alexcrichton\n\n Make tests compatible with musl host\n\nAs an alternative to passing explicit linker all over the place I could try linking `cc` to musl gcc since this bootstraps itself.\n\nAssigning for discussion:\nr? @alexcrichton", "tree": {"sha": "f1550ddfdd584ca10e0e1decaebb8b22c388fbd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1550ddfdd584ca10e0e1decaebb8b22c388fbd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efa3c27f0ff21960b9309f8036dbf3e7416b9e52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efa3c27f0ff21960b9309f8036dbf3e7416b9e52", "html_url": "https://github.com/rust-lang/rust/commit/efa3c27f0ff21960b9309f8036dbf3e7416b9e52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16e356ebdfa42b754c1497f1c58caacbe2f25d03", "url": "https://api.github.com/repos/rust-lang/rust/commits/16e356ebdfa42b754c1497f1c58caacbe2f25d03", "html_url": "https://github.com/rust-lang/rust/commit/16e356ebdfa42b754c1497f1c58caacbe2f25d03"}, {"sha": "0caa251da2d7272fdecb32aae6e0a9e1c3ec0756", "url": "https://api.github.com/repos/rust-lang/rust/commits/0caa251da2d7272fdecb32aae6e0a9e1c3ec0756", "html_url": "https://github.com/rust-lang/rust/commit/0caa251da2d7272fdecb32aae6e0a9e1c3ec0756"}], "stats": {"total": 49, "additions": 40, "deletions": 9}, "files": [{"sha": "9867113e48f430c98fe89595afd7cd3cf01d2cb8", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=efa3c27f0ff21960b9309f8036dbf3e7416b9e52", "patch": "@@ -1870,6 +1870,10 @@ impl Step for CrateRustdoc {\n         cargo.arg(\"--\");\n         cargo.args(&builder.config.cmd.test_args());\n \n+        if self.host.contains(\"musl\") {\n+            cargo.arg(\"'-Ctarget-feature=-crt-static'\");\n+        }\n+\n         if !builder.config.verbose_tests {\n             cargo.arg(\"--quiet\");\n         }"}, {"sha": "385eefde846c293b41d3f3727fec5e8fc9cc2267", "filename": "src/ci/docker/dist-x86_64-musl/Dockerfile", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile?ref=efa3c27f0ff21960b9309f8036dbf3e7416b9e52", "patch": "@@ -23,7 +23,7 @@ COPY scripts/musl-toolchain.sh /build/\n # We need to mitigate rust-lang/rust#34978 when compiling musl itself as well\n RUN CFLAGS=\"-Wa,-mrelax-relocations=no -Wa,--compress-debug-sections=none -Wl,--compress-debug-sections=none\" \\\n     CXXFLAGS=\"-Wa,-mrelax-relocations=no -Wa,--compress-debug-sections=none -Wl,--compress-debug-sections=none\" \\\n-    bash musl-toolchain.sh x86_64 && rm -rf build\n+    REPLACE_CC=1 bash musl-toolchain.sh x86_64 && rm -rf build\n \n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n@@ -35,10 +35,7 @@ ENV RUST_CONFIGURE_ARGS \\\n       --enable-extended \\\n       --disable-docs \\\n       --set target.x86_64-unknown-linux-musl.crt-static=false \\\n-      --build $HOSTS \\\n-      --set target.x86_64-unknown-linux-musl.cc=x86_64-linux-musl-gcc \\\n-      --set target.x86_64-unknown-linux-musl.cxx=x86_64-linux-musl-g++ \\\n-      --set target.x86_64-unknown-linux-musl.linker=x86_64-linux-musl-gcc\n+      --build $HOSTS\n \n # Newer binutils broke things on some vms/distros (i.e., linking against\n # unknown relocs disabled by the following flag), so we need to go out of our\n@@ -49,4 +46,5 @@ ENV RUST_CONFIGURE_ARGS \\\n ENV CFLAGS_x86_64_unknown_linux_musl=\"-Wa,-mrelax-relocations=no -Wa,--compress-debug-sections=none \\\n     -Wl,--compress-debug-sections=none\"\n \n+# To run native tests replace `dist` below with `test`\n ENV SCRIPT python2.7 ../x.py dist --build $HOSTS"}, {"sha": "d5988a25671a2d3109a923b7ea1de1d98968e385", "filename": "src/ci/docker/scripts/musl-toolchain.sh", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Fci%2Fdocker%2Fscripts%2Fmusl-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Fci%2Fdocker%2Fscripts%2Fmusl-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fmusl-toolchain.sh?ref=efa3c27f0ff21960b9309f8036dbf3e7416b9e52", "patch": "@@ -45,6 +45,15 @@ cd -\n ln -s $OUTPUT/$TARGET/lib/libc.so /lib/ld-musl-$ARCH.so.1\n echo $OUTPUT/$TARGET/lib >> /etc/ld-musl-$ARCH.path\n \n+# Now when musl bootstraps itself create proper toolchain symlinks to make build and tests easier\n+if [ \"$REPLACE_CC\" = \"1\" ]; then\n+    for exec in cc gcc; do\n+        ln -s $TARGET-gcc /usr/local/bin/$exec\n+    done\n+    for exec in cpp c++ g++; do\n+        ln -s $TARGET-g++ /usr/local/bin/$exec\n+    done\n+fi\n \n export CC=$TARGET-gcc\n export CXX=$TARGET-g++"}, {"sha": "2701b4a593cc61926387912819c2f743549b0647", "filename": "src/test/run-make-fulldeps/link-cfg/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Ftest%2Frun-make-fulldeps%2Flink-cfg%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Ftest%2Frun-make-fulldeps%2Flink-cfg%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flink-cfg%2FMakefile?ref=efa3c27f0ff21960b9309f8036dbf3e7416b9e52", "patch": "@@ -2,7 +2,7 @@\n \n all: $(call DYLIB,return1) $(call DYLIB,return2) $(call NATIVE_STATICLIB,return3)\n \tls $(TMPDIR)\n-\t$(RUSTC) --print cfg --target x86_64-unknown-linux-musl | $(CGREP) crt-static\n+\t$(BARE_RUSTC) --print cfg --target x86_64-unknown-linux-musl | $(CGREP) crt-static\n \n \t$(RUSTC) no-deps.rs --cfg foo\n \t$(call RUN,no-deps)"}, {"sha": "b47ce17ec8baa2d64292a34532c86b1c15535631", "filename": "src/test/run-make-fulldeps/linker-output-non-utf8/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Ftest%2Frun-make-fulldeps%2Flinker-output-non-utf8%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Ftest%2Frun-make-fulldeps%2Flinker-output-non-utf8%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flinker-output-non-utf8%2FMakefile?ref=efa3c27f0ff21960b9309f8036dbf3e7416b9e52", "patch": "@@ -20,4 +20,4 @@ all:\n \t$(RUSTC) library.rs\n \tmkdir $(bad_dir)\n \tmv $(TMPDIR)/liblibrary.a $(bad_dir)\n-\tLIBRARY_PATH=$(bad_dir) $(RUSTC) exec.rs 2>&1 | $(CGREP) this_symbol_not_defined\n+\t$(RUSTC) -L $(bad_dir) exec.rs 2>&1 | $(CGREP) this_symbol_not_defined"}, {"sha": "a17ec212cfd58250f3185c1d2302c00bf9eb7e84", "filename": "src/test/run-make-fulldeps/reproducible-build/Makefile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Ftest%2Frun-make-fulldeps%2Freproducible-build%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Ftest%2Frun-make-fulldeps%2Freproducible-build%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Freproducible-build%2FMakefile?ref=efa3c27f0ff21960b9309f8036dbf3e7416b9e52", "patch": "@@ -1,4 +1,8 @@\n -include ../tools.mk\n+\n+# ignore-musl\n+# Objects are reproducible but their path is not.\n+\n all:  \\\n \tsmoke \\\n \tdebug \\"}, {"sha": "a08a63fb44bf5cc2a4fbef39826150e3cc51d0a5", "filename": "src/test/run-make/rustc-macro-dep-files/Makefile", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Ftest%2Frun-make%2Frustc-macro-dep-files%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Ftest%2Frun-make%2Frustc-macro-dep-files%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustc-macro-dep-files%2FMakefile?ref=efa3c27f0ff21960b9309f8036dbf3e7416b9e52", "patch": "@@ -2,7 +2,10 @@\n \n # FIXME(eddyb) provide `HOST_RUSTC` and `TARGET_RUSTC`\n # instead of hardcoding them everywhere they're needed.\n+ifeq ($(IS_MUSL_HOST),1)\n+ADDITIONAL_ARGS := $(RUSTFLAGS)\n+endif\n all:\n-\t$(BARE_RUSTC) foo.rs --out-dir $(TMPDIR)\n+\t$(BARE_RUSTC) $(ADDITIONAL_ARGS) foo.rs --out-dir $(TMPDIR)\n \t$(RUSTC) bar.rs --target $(TARGET) --emit dep-info\n \t$(CGREP) -v \"proc-macro source\" < $(TMPDIR)/bar.d"}, {"sha": "10b8133326bba2f798aa6c4506bb0687dbe5e804", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efa3c27f0ff21960b9309f8036dbf3e7416b9e52/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=efa3c27f0ff21960b9309f8036dbf3e7416b9e52", "patch": "@@ -1650,7 +1650,9 @@ impl<'test> TestCx<'test> {\n                 (true, None)\n             } else if self.config.target.contains(\"cloudabi\")\n                 || self.config.target.contains(\"emscripten\")\n-                || (self.config.target.contains(\"musl\") && !aux_props.force_host)\n+                || (self.config.target.contains(\"musl\")\n+                    && !aux_props.force_host\n+                    && !self.config.host.contains(\"musl\"))\n                 || self.config.target.contains(\"wasm32\")\n                 || self.config.target.contains(\"nvptx\")\n             {\n@@ -1932,6 +1934,11 @@ impl<'test> TestCx<'test> {\n             }\n         }\n \n+        // Use dynamic musl for tests because static doesn't allow creating dylibs\n+        if self.config.host.contains(\"musl\") {\n+            rustc.arg(\"-Ctarget-feature=-crt-static\");\n+        }\n+\n         rustc.args(&self.props.compile_flags);\n \n         rustc\n@@ -2725,6 +2732,12 @@ impl<'test> TestCx<'test> {\n         // compiler flags set in the test cases:\n         cmd.env_remove(\"RUSTFLAGS\");\n \n+        // Use dynamic musl for tests because static doesn't allow creating dylibs\n+        if self.config.host.contains(\"musl\") {\n+            cmd.env(\"RUSTFLAGS\", \"-Ctarget-feature=-crt-static\")\n+                .env(\"IS_MUSL_HOST\", \"1\");\n+        }\n+\n         if self.config.target.contains(\"msvc\") && self.config.cc != \"\" {\n             // We need to pass a path to `lib.exe`, so assume that `cc` is `cl.exe`\n             // and that `lib.exe` lives next to it."}]}