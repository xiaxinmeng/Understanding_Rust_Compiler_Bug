{"sha": "100142b258e570a2c8fbd713eecc77a8fe6c0435", "node_id": "C_kwDOAAsO6NoAKDEwMDE0MmIyNThlNTcwYTJjOGZiZDcxM2VlY2M3N2E4ZmU2YzA0MzU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-10T03:45:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-10T03:45:08Z"}, "message": "Auto merge of #98213 - notriddle:notriddle/clap-3, r=Mark-Simulacrum\n\nBump to clap 3\n\nThis PR, along with several others, will entirely remove the Clap 2 dependency from the rust source tree.\n\n* https://github.com/rust-lang/rust-installer/pull/114\n* https://github.com/rust-lang/rls/pull/1779\n\nThis PR includes a submodule bump for rust-installer, which includes the following PRs:\n\n* https://github.com/rust-lang/rust-installer/pull/114\n* https://github.com/rust-lang/rust-installer/pull/113\n* https://github.com/rust-lang/rust-installer/pull/115", "tree": {"sha": "90cbf26260ff85d3ac3753809c8c717ce24ca8a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90cbf26260ff85d3ac3753809c8c717ce24ca8a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/100142b258e570a2c8fbd713eecc77a8fe6c0435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/100142b258e570a2c8fbd713eecc77a8fe6c0435", "html_url": "https://github.com/rust-lang/rust/commit/100142b258e570a2c8fbd713eecc77a8fe6c0435", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/100142b258e570a2c8fbd713eecc77a8fe6c0435/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17355a3b9f30e16870a1890033bd13463c664f81", "url": "https://api.github.com/repos/rust-lang/rust/commits/17355a3b9f30e16870a1890033bd13463c664f81", "html_url": "https://github.com/rust-lang/rust/commit/17355a3b9f30e16870a1890033bd13463c664f81"}, {"sha": "4a7b773a027cd8234c83828fba8f2f4f572da8c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a7b773a027cd8234c83828fba8f2f4f572da8c1", "html_url": "https://github.com/rust-lang/rust/commit/4a7b773a027cd8234c83828fba8f2f4f572da8c1"}], "stats": {"total": 114, "additions": 37, "deletions": 77}, "files": [{"sha": "2bf07149cc86c5db9b2db027e65020b4f6b0cfc7", "filename": "Cargo.lock", "status": "modified", "additions": 12, "deletions": 55, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/100142b258e570a2c8fbd713eecc77a8fe6c0435/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/100142b258e570a2c8fbd713eecc77a8fe6c0435/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=100142b258e570a2c8fbd713eecc77a8fe6c0435", "patch": "@@ -307,7 +307,7 @@ dependencies = [\n  \"cargo-test-macro\",\n  \"cargo-test-support\",\n  \"cargo-util\",\n- \"clap 3.2.5\",\n+ \"clap\",\n  \"crates-io\",\n  \"crossbeam-utils\",\n  \"curl\",\n@@ -572,22 +572,6 @@ dependencies = [\n  \"winapi\",\n ]\n \n-[[package]]\n-name = \"clap\"\n-version = \"2.34.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a0610544180c38b88101fecf2dd634b174a62eef6946f84dfc6a7127512b381c\"\n-dependencies = [\n- \"ansi_term\",\n- \"atty\",\n- \"bitflags\",\n- \"strsim 0.8.0\",\n- \"textwrap 0.11.0\",\n- \"unicode-width\",\n- \"vec_map\",\n- \"yaml-rust 0.3.5\",\n-]\n-\n [[package]]\n name = \"clap\"\n version = \"3.2.5\"\n@@ -600,9 +584,9 @@ dependencies = [\n  \"clap_lex\",\n  \"indexmap\",\n  \"once_cell\",\n- \"strsim 0.10.0\",\n+ \"strsim\",\n  \"termcolor\",\n- \"textwrap 0.15.0\",\n+ \"textwrap\",\n ]\n \n [[package]]\n@@ -611,7 +595,7 @@ version = \"3.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"df6f3613c0a3cddfd78b41b10203eb322cb29b600cbdf808a7d3db95691b8e25\"\n dependencies = [\n- \"clap 3.2.5\",\n+ \"clap\",\n ]\n \n [[package]]\n@@ -669,7 +653,7 @@ name = \"clippy_dev\"\n version = \"0.0.1\"\n dependencies = [\n  \"aho-corasick\",\n- \"clap 3.2.5\",\n+ \"clap\",\n  \"indoc\",\n  \"itertools\",\n  \"opener\",\n@@ -1242,7 +1226,7 @@ name = \"expand-yaml-anchors\"\n version = \"0.1.0\"\n dependencies = [\n  \"yaml-merge-keys\",\n- \"yaml-rust 0.4.4\",\n+ \"yaml-rust\",\n ]\n \n [[package]]\n@@ -1862,7 +1846,7 @@ name = \"installer\"\n version = \"0.0.0\"\n dependencies = [\n  \"anyhow\",\n- \"clap 2.34.0\",\n+ \"clap\",\n  \"flate2\",\n  \"lazy_static\",\n  \"num_cpus\",\n@@ -2310,7 +2294,7 @@ dependencies = [\n  \"ammonia\",\n  \"anyhow\",\n  \"chrono\",\n- \"clap 3.2.5\",\n+ \"clap\",\n  \"clap_complete\",\n  \"elasticlunr-rs\",\n  \"env_logger 0.7.1\",\n@@ -3385,7 +3369,7 @@ dependencies = [\n name = \"rustbook\"\n version = \"0.1.0\"\n dependencies = [\n- \"clap 2.34.0\",\n+ \"clap\",\n  \"env_logger 0.7.1\",\n  \"mdbook\",\n ]\n@@ -3473,7 +3457,7 @@ version = \"1.0.0\"\n dependencies = [\n  \"bstr\",\n  \"byteorder\",\n- \"clap 3.2.5\",\n+ \"clap\",\n  \"crossbeam-utils\",\n  \"libc\",\n  \"libz-sys\",\n@@ -4662,7 +4646,7 @@ dependencies = [\n  \"anyhow\",\n  \"bytecount\",\n  \"cargo_metadata\",\n- \"clap 3.2.5\",\n+ \"clap\",\n  \"derive-new\",\n  \"diff\",\n  \"dirs\",\n@@ -5053,12 +5037,6 @@ dependencies = [\n  \"vte\",\n ]\n \n-[[package]]\n-name = \"strsim\"\n-version = \"0.8.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a\"\n-\n [[package]]\n name = \"strsim\"\n version = \"0.10.0\"\n@@ -5199,15 +5177,6 @@ dependencies = [\n  \"term\",\n ]\n \n-[[package]]\n-name = \"textwrap\"\n-version = \"0.11.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060\"\n-dependencies = [\n- \"unicode-width\",\n-]\n-\n [[package]]\n name = \"textwrap\"\n version = \"0.15.0\"\n@@ -5728,12 +5697,6 @@ version = \"0.2.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"6454029bf181f092ad1b853286f23e2c507d8e8194d01d92da4a55c274a5508c\"\n \n-[[package]]\n-name = \"vec_map\"\n-version = \"0.8.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191\"\n-\n [[package]]\n name = \"vergen\"\n version = \"5.1.0\"\n@@ -5892,15 +5855,9 @@ checksum = \"fd236a7dc9bb598f349fe4a8754f49181fee50284daa15cd1ba652d722280004\"\n dependencies = [\n  \"lazy_static\",\n  \"thiserror\",\n- \"yaml-rust 0.4.4\",\n+ \"yaml-rust\",\n ]\n \n-[[package]]\n-name = \"yaml-rust\"\n-version = \"0.3.5\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e66366e18dc58b46801afbf2ca7661a9f59cc8c5962c29892b6039b4f86fa992\"\n-\n [[package]]\n name = \"yaml-rust\"\n version = \"0.4.4\""}, {"sha": "f659ccbe2507f5168b99f70db46ca7df8f912594", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/100142b258e570a2c8fbd713eecc77a8fe6c0435/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/100142b258e570a2c8fbd713eecc77a8fe6c0435/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=100142b258e570a2c8fbd713eecc77a8fe6c0435", "patch": "@@ -367,7 +367,7 @@ bootstrap_tool!(\n     Compiletest, \"src/tools/compiletest\", \"compiletest\", is_unstable_tool = true;\n     BuildManifest, \"src/tools/build-manifest\", \"build-manifest\";\n     RemoteTestClient, \"src/tools/remote-test-client\", \"remote-test-client\";\n-    RustInstaller, \"src/tools/rust-installer\", \"fabricate\", is_external_tool = true;\n+    RustInstaller, \"src/tools/rust-installer\", \"rust-installer\", is_external_tool = true;\n     RustdocTheme, \"src/tools/rustdoc-themes\", \"rustdoc-themes\";\n     ExpandYamlAnchors, \"src/tools/expand-yaml-anchors\", \"expand-yaml-anchors\";\n     LintDocs, \"src/tools/lint-docs\", \"lint-docs\";"}, {"sha": "300b5ec61ef38855a07e6bb4955a37aa1c414c00", "filename": "src/tools/rust-installer", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-installer?ref=100142b258e570a2c8fbd713eecc77a8fe6c0435", "patch": "@@ -1 +1 @@\n-Subproject commit 5254dbfd25d5284728ab624dca1969d61427a0db\n+Subproject commit 300b5ec61ef38855a07e6bb4955a37aa1c414c00"}, {"sha": "bd08e0ede0bfa74a7bd8d437d9a4e00e4b8dda76", "filename": "src/tools/rustbook/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/100142b258e570a2c8fbd713eecc77a8fe6c0435/src%2Ftools%2Frustbook%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/100142b258e570a2c8fbd713eecc77a8fe6c0435/src%2Ftools%2Frustbook%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustbook%2FCargo.toml?ref=100142b258e570a2c8fbd713eecc77a8fe6c0435", "patch": "@@ -5,7 +5,7 @@ license = \"MIT OR Apache-2.0\"\n edition = \"2021\"\n \n [dependencies]\n-clap = \"2.25.0\"\n+clap = \"3.1.1\"\n env_logger = \"0.7.1\"\n \n [dependencies.mdbook]"}, {"sha": "3c7dc0183d7761e62b8a3bb839edcf7ec7299108", "filename": "src/tools/rustbook/src/main.rs", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/100142b258e570a2c8fbd713eecc77a8fe6c0435/src%2Ftools%2Frustbook%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/100142b258e570a2c8fbd713eecc77a8fe6c0435/src%2Ftools%2Frustbook%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustbook%2Fsrc%2Fmain.rs?ref=100142b258e570a2c8fbd713eecc77a8fe6c0435", "patch": "@@ -3,54 +3,57 @@ use clap::crate_version;\n use std::env;\n use std::path::{Path, PathBuf};\n \n-use clap::{App, AppSettings, ArgMatches, SubCommand};\n+use clap::{arg, ArgMatches, Command};\n \n use mdbook::errors::Result as Result3;\n use mdbook::MDBook;\n \n fn main() {\n+    let crate_version = format!(\"v{}\", crate_version!());\n     env_logger::Builder::from_env(env_logger::Env::default().default_filter_or(\"warn\")).init();\n-    let d_message = \"-d, --dest-dir=[dest-dir]\n-'The output directory for your book{n}(Defaults to ./book when omitted)'\";\n-    let dir_message = \"[dir]\n-'A directory for your book{n}(Defaults to Current Directory when omitted)'\";\n+    let d_arg = arg!(-d --\"dest-dir\" <DEST_DIR>\n+\"The output directory for your book\\n(Defaults to ./book when omitted)\")\n+    .required(false);\n+    let dir_arg = arg!([dir]\n+\"A directory for your book\\n(Defaults to Current Directory when omitted)\");\n \n-    let matches = App::new(\"rustbook\")\n+    let matches = Command::new(\"rustbook\")\n         .about(\"Build a book with mdBook\")\n         .author(\"Steve Klabnik <steve@steveklabnik.com>\")\n-        .version(&*format!(\"v{}\", crate_version!()))\n-        .setting(AppSettings::SubcommandRequired)\n+        .version(&*crate_version)\n+        .subcommand_required(true)\n+        .arg_required_else_help(true)\n         .subcommand(\n-            SubCommand::with_name(\"build\")\n+            Command::new(\"build\")\n                 .about(\"Build the book from the markdown files\")\n-                .arg_from_usage(d_message)\n-                .arg_from_usage(dir_message),\n+                .arg(d_arg)\n+                .arg(&dir_arg),\n         )\n         .subcommand(\n-            SubCommand::with_name(\"test\")\n+            Command::new(\"test\")\n                 .about(\"Tests that a book's Rust code samples compile\")\n-                .arg_from_usage(dir_message),\n+                .arg(dir_arg),\n         )\n         .get_matches();\n \n     // Check which subcomamnd the user ran...\n     match matches.subcommand() {\n-        (\"build\", Some(sub_matches)) => {\n+        Some((\"build\", sub_matches)) => {\n             if let Err(e) = build(sub_matches) {\n                 handle_error(e);\n             }\n         }\n-        (\"test\", Some(sub_matches)) => {\n+        Some((\"test\", sub_matches)) => {\n             if let Err(e) = test(sub_matches) {\n                 handle_error(e);\n             }\n         }\n-        (_, _) => unreachable!(),\n+        _ => unreachable!(),\n     };\n }\n \n // Build command implementation\n-pub fn build(args: &ArgMatches<'_>) -> Result3<()> {\n+pub fn build(args: &ArgMatches) -> Result3<()> {\n     let book_dir = get_book_dir(args);\n     let mut book = load_book(&book_dir)?;\n \n@@ -66,13 +69,13 @@ pub fn build(args: &ArgMatches<'_>) -> Result3<()> {\n     Ok(())\n }\n \n-fn test(args: &ArgMatches<'_>) -> Result3<()> {\n+fn test(args: &ArgMatches) -> Result3<()> {\n     let book_dir = get_book_dir(args);\n     let mut book = load_book(&book_dir)?;\n     book.test(vec![])\n }\n \n-fn get_book_dir(args: &ArgMatches<'_>) -> PathBuf {\n+fn get_book_dir(args: &ArgMatches) -> PathBuf {\n     if let Some(dir) = args.value_of(\"dir\") {\n         // Check if path is relative from current dir, or absolute...\n         let p = Path::new(dir);"}]}