{"sha": "fe09bb518d9dfb270a6f3562b50b96272524b42c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMDliYjUxOGQ5ZGZiMjcwYTZmMzU2MmI1MGI5NjI3MjUyNGI0MmM=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-10T23:38:05Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-14T22:48:36Z"}, "message": "Add expanded type cache to OpaqueTypeExpander", "tree": {"sha": "820e452c38343ee457386a115fd8e3d1501d1741", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/820e452c38343ee457386a115fd8e3d1501d1741"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe09bb518d9dfb270a6f3562b50b96272524b42c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe09bb518d9dfb270a6f3562b50b96272524b42c", "html_url": "https://github.com/rust-lang/rust/commit/fe09bb518d9dfb270a6f3562b50b96272524b42c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe09bb518d9dfb270a6f3562b50b96272524b42c/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58b54911fabcd1b328fab78014b6833a4e8cfaa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/58b54911fabcd1b328fab78014b6833a4e8cfaa3", "html_url": "https://github.com/rust-lang/rust/commit/58b54911fabcd1b328fab78014b6833a4e8cfaa3"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "35bd42fd7443214dbd8dd64d56bae92aea31a2c6", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fe09bb518d9dfb270a6f3562b50b96272524b42c/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe09bb518d9dfb270a6f3562b50b96272524b42c/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=fe09bb518d9dfb270a6f3562b50b96272524b42c", "patch": "@@ -697,6 +697,9 @@ impl<'tcx> TyCtxt<'tcx> {\n             // that type, and when we finish expanding that type we remove the\n             // its DefId.\n             seen_opaque_tys: FxHashSet<DefId>,\n+            // Cache of all expansions we've seen so far. This is a critical\n+            // optimization for some large types produced by async fn trees.\n+            expanded_cache: FxHashMap<(DefId, SubstsRef<'tcx>), Ty<'tcx>>,\n             primary_def_id: DefId,\n             found_recursion: bool,\n             tcx: TyCtxt<'tcx>,\n@@ -713,9 +716,16 @@ impl<'tcx> TyCtxt<'tcx> {\n                 }\n                 let substs = substs.fold_with(self);\n                 if self.seen_opaque_tys.insert(def_id) {\n-                    let generic_ty = self.tcx.type_of(def_id);\n-                    let concrete_ty = generic_ty.subst(self.tcx, substs);\n-                    let expanded_ty = self.fold_ty(concrete_ty);\n+                    let expanded_ty = match self.expanded_cache.get(&(def_id, substs)) {\n+                        Some(expanded_ty) => expanded_ty,\n+                        None => {\n+                            let generic_ty = self.tcx.type_of(def_id);\n+                            let concrete_ty = generic_ty.subst(self.tcx, substs);\n+                            let expanded_ty = self.fold_ty(concrete_ty);\n+                            self.expanded_cache.insert((def_id, substs), expanded_ty);\n+                            expanded_ty\n+                        }\n+                    };\n                     self.seen_opaque_tys.remove(&def_id);\n                     Some(expanded_ty)\n                 } else {\n@@ -743,6 +753,7 @@ impl<'tcx> TyCtxt<'tcx> {\n \n         let mut visitor = OpaqueTypeExpander {\n             seen_opaque_tys: FxHashSet::default(),\n+            expanded_cache: FxHashMap::default(),\n             primary_def_id: def_id,\n             found_recursion: false,\n             tcx: self,"}]}