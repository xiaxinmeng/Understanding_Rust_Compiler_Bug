{"sha": "3f461f5ec674ba42c12cb000f307c98464ed5ee7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNDYxZjVlYzY3NGJhNDJjMTJjYjAwMGYzMDdjOTg0NjRlZDVlZTc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-31T16:55:01Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-31T17:25:10Z"}, "message": "cleanup StringReader fields", "tree": {"sha": "890a25b61b82284ad58a7e8644f65ea6a5e7eb29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/890a25b61b82284ad58a7e8644f65ea6a5e7eb29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f461f5ec674ba42c12cb000f307c98464ed5ee7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f461f5ec674ba42c12cb000f307c98464ed5ee7", "html_url": "https://github.com/rust-lang/rust/commit/3f461f5ec674ba42c12cb000f307c98464ed5ee7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f461f5ec674ba42c12cb000f307c98464ed5ee7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04b88a9eba8abbac87eddcb2998beea09589c2c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/04b88a9eba8abbac87eddcb2998beea09589c2c9", "html_url": "https://github.com/rust-lang/rust/commit/04b88a9eba8abbac87eddcb2998beea09589c2c9"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "263eb1ac7a48016c86f8a05795042545df6a4bda", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3f461f5ec674ba42c12cb000f307c98464ed5ee7/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f461f5ec674ba42c12cb000f307c98464ed5ee7/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=3f461f5ec674ba42c12cb000f307c98464ed5ee7", "patch": "@@ -29,16 +29,15 @@ pub struct UnmatchedBrace {\n }\n \n pub struct StringReader<'a> {\n-    crate sess: &'a ParseSess,\n-    /// The absolute offset within the source_map of the current character\n-    crate pos: BytePos,\n-    /// The current character (which has been read from self.pos)\n-    crate source_file: Lrc<syntax_pos::SourceFile>,\n+    sess: &'a ParseSess,\n+    /// Initial position, read-only.\n+    start_pos: BytePos,\n+    /// The absolute offset within the source_map of the current character.\n+    pos: BytePos,\n     /// Stop reading src at this index.\n-    crate end_src_index: usize,\n+    end_src_index: usize,\n     fatal_errs: Vec<DiagnosticBuilder<'a>>,\n-    // cache a direct reference to the source text, so that we don't have to\n-    // retrieve it via `self.source_file.src.as_ref().unwrap()` all the time.\n+    /// Source text to tokenize.\n     src: Lrc<String>,\n     override_span: Option<Span>,\n }\n@@ -56,8 +55,8 @@ impl<'a> StringReader<'a> {\n \n         StringReader {\n             sess,\n+            start_pos: source_file.start_pos,\n             pos: source_file.start_pos,\n-            source_file,\n             end_src_index: src.len(),\n             src,\n             fatal_errs: Vec::new(),\n@@ -108,12 +107,12 @@ impl<'a> StringReader<'a> {\n         let text: &str = &self.src[start_src_index..self.end_src_index];\n \n         if text.is_empty() {\n-            let span = self.mk_sp(self.source_file.end_pos, self.source_file.end_pos);\n+            let span = self.mk_sp(self.pos, self.pos);\n             return Ok(Token::new(token::Eof, span));\n         }\n \n         {\n-            let is_beginning_of_file = self.pos == self.source_file.start_pos;\n+            let is_beginning_of_file = self.pos == self.start_pos;\n             if is_beginning_of_file {\n                 if let Some(shebang_len) = rustc_lexer::strip_shebang(text) {\n                     let start = self.pos;\n@@ -533,7 +532,7 @@ impl<'a> StringReader<'a> {\n \n     #[inline]\n     fn src_index(&self, pos: BytePos) -> usize {\n-        (pos - self.source_file.start_pos).to_usize()\n+        (pos - self.start_pos).to_usize()\n     }\n \n     /// Slice of the source text from `start` up to but excluding `self.pos`,"}]}