{"sha": "20b3313c8c14a8f7ee29215734b26f79b4f2b2a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYjMzMTNjOGMxNGE4ZjdlZTI5MjE1NzM0YjI2Zjc5YjRmMmIyYTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-21T06:05:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-21T06:05:58Z"}, "message": "auto merge of #16471 : EduardoBautista/rust/chapter-14-fixes, r=steveklabnik\n\nJust some small fixes for the guide.  The cargo stuff is probably because of an update.", "tree": {"sha": "f5f706a50b5feda358e32d5e8de334d4850587d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5f706a50b5feda358e32d5e8de334d4850587d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20b3313c8c14a8f7ee29215734b26f79b4f2b2a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20b3313c8c14a8f7ee29215734b26f79b4f2b2a4", "html_url": "https://github.com/rust-lang/rust/commit/20b3313c8c14a8f7ee29215734b26f79b4f2b2a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20b3313c8c14a8f7ee29215734b26f79b4f2b2a4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e052aa65db534d78579a604002485257166523e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e052aa65db534d78579a604002485257166523e2", "html_url": "https://github.com/rust-lang/rust/commit/e052aa65db534d78579a604002485257166523e2"}, {"sha": "48c0f596a70bb69ab05f4e34c78db910cf962e05", "url": "https://api.github.com/repos/rust-lang/rust/commits/48c0f596a70bb69ab05f4e34c78db910cf962e05", "html_url": "https://github.com/rust-lang/rust/commit/48c0f596a70bb69ab05f4e34c78db910cf962e05"}], "stats": {"total": 80, "additions": 40, "deletions": 40}, "files": [{"sha": "7cd6db8e3878c76a5c04f29e7a6b347a6d8a6bce", "filename": "src/doc/guide.md", "status": "modified", "additions": 40, "deletions": 40, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/20b3313c8c14a8f7ee29215734b26f79b4f2b2a4/src%2Fdoc%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/20b3313c8c14a8f7ee29215734b26f79b4f2b2a4/src%2Fdoc%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide.md?ref=20b3313c8c14a8f7ee29215734b26f79b4f2b2a4", "patch": "@@ -342,7 +342,7 @@ Once you have this file in place, we should be ready to build! Try this:\n \n ```{bash}\n $ cargo build\n-   Compiling hello_world v0.1.0 (file:/home/yourname/projects/hello_world)\n+   Compiling hello_world v0.0.1 (file:///home/yourname/projects/hello_world)\n $ ./target/hello_world\n Hello, world!\n ```\n@@ -486,7 +486,7 @@ You can use `cargo build` on the command line to build it. You'll get a warning,\n but it will still print \"Hello, world!\":\n \n ```{ignore,notrust}\n-   Compiling hello_world v0.1.0 (file:/home/you/projects/hello_world)\n+   Compiling hello_world v0.0.1 (file:///home/you/projects/hello_world)\n src/hello_world.rs:2:9: 2:10 warning: unused variable: `x`, #[warn(unused_variable)] on by default\n src/hello_world.rs:2     let x: int;\n                              ^\n@@ -508,7 +508,7 @@ And try to build it. You'll get an error:\n \n ```{bash}\n $ cargo build\n-   Compiling hello_world v0.1.0 (file:/home/you/projects/hello_world)\n+   Compiling hello_world v0.0.1 (file:///home/you/projects/hello_world)\n src/hello_world.rs:4:39: 4:40 error: use of possibly uninitialized variable: `x`\n src/hello_world.rs:4     println!(\"The value of x is: {}\", x);\n                                                            ^\n@@ -1782,7 +1782,7 @@ Check out the generated `Cargo.toml`:\n [package]\n \n name = \"guessing_game\"\n-version = \"0.1.0\"\n+version = \"0.0.1\"\n authors = [\"Your Name <you@example.com>\"]\n ```\n \n@@ -1793,15 +1793,15 @@ Finally, Cargo generated a hello, world for us. Check out `src/main.rs`:\n \n ```{rust}\n fn main() {\n-    println!(\"Hello world!\");\n+    println!(\"Hello, world!\");\n }\n ```\n \n Let's try compiling what Cargo gave us:\n \n ```{bash}\n $ cargo build\n-   Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n $\n ```\n \n@@ -1914,7 +1914,7 @@ Let's try to compile this using `cargo build`:\n \n ```{notrust,no_run}\n $ cargo build\n-   Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n src/main.rs:7:26: 7:34 error: the type of this value must be known in this context\n src/main.rs:7     let secret_number = (rand::random() % 100i) + 1i;\n                                        ^~~~~~~~\n@@ -1962,7 +1962,7 @@ fn main() {\n \n ```{notrust,ignore}\n $ cargo build\n-  Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n+  Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n $\n ```\n \n@@ -2021,8 +2021,8 @@ And trying it out:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n-$ ./target/guessing_game\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n+$ ./target/guessing_game \n Guess the number!\n The secret number is: 57\n Please input your guess.\n@@ -2076,7 +2076,7 @@ If we try to compile, we'll get some errors:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n src/main.rs:20:15: 20:20 error: mismatched types: expected `int` but found `collections::string::String` (expected int but found struct collections::string::String)\n src/main.rs:20     match cmp(input, secret_number) {\n                              ^~~~~\n@@ -2130,7 +2130,7 @@ And try compiling again:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n src/main.rs:20:15: 20:20 error: mismatched types: expected `uint` but found `collections::string::String` (expected uint but found struct collections::string::String)\n src/main.rs:20     match cmp(input, secret_number) {\n                              ^~~~~\n@@ -2161,7 +2161,7 @@ a function for that:\n let input = io::stdin().read_line()\n                        .ok()\n                        .expect(\"Failed to read line\");\n-let guess: Option<uint> = from_str(input.as_slice());\n+let input_num: Option<uint> = from_str(input.as_slice());\n ```\n \n The `from_str` function takes in a `&str` value and converts it into something.\n@@ -2183,8 +2183,8 @@ In this case, we say `x` is a `uint` explicitly, so Rust is able to properly\n tell `random()` what to generate. In a similar fashion, both of these work:\n \n ```{rust,ignore}\n-let guess = from_str::<Option<uint>>(\"5\");\n-let guess: Option<uint> = from_str(\"5\");\n+let input_num = from_str::<Option<uint>>(\"5\");\n+let input_num: Option<uint> = from_str(\"5\");\n ```\n \n In this case, I happen to prefer the latter, and in the `random()` case, I prefer\n@@ -2233,7 +2233,7 @@ Let's try it out!\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n src/main.rs:22:15: 22:24 error: mismatched types: expected `uint` but found `core::option::Option<uint>` (expected uint but found enum core::option::Option)\n src/main.rs:22     match cmp(input_num, secret_number) {\n                              ^~~~~~~~~\n@@ -2292,8 +2292,8 @@ print an error message and return. Let's give this a shot:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n-$ ./target/guessing_game\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n+$ ./target/guessing_game \n Guess the number!\n The secret number is: 17\n Please input your guess.\n@@ -2358,8 +2358,8 @@ Let's try it!\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n-$ ./target/guessing_game\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n+$ ./target/guessing_game \n Guess the number!\n The secret number is: 58\n Please input your guess.\n@@ -2436,8 +2436,8 @@ that `return`? If we give a non-number answer, we'll `return` and quit. Observe:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n-$ ./target/guessing_game\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n+$ ./target/guessing_game \n Guess the number!\n The secret number is: 59\n Please input your guess.\n@@ -2569,8 +2569,8 @@ Now we should be good! Let's try:\n \n ```{rust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n-$ ./target/guessing_game\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n+$ ./target/guessing_game \n Guess the number!\n The secret number is: 61\n Please input your guess.\n@@ -2684,7 +2684,7 @@ Let's double check our work by compiling:\n \n ```{bash,ignore}\n $ cargo build\n-   Compiling modules v0.1.0 (file:/home/you/projects/modules)\n+   Compiling modules v0.0.1 (file:///home/you/projects/modules)\n $ ./target/modules\n Hello, world!\n ```\n@@ -2745,7 +2745,7 @@ mod hello {\n It gives an error:\n \n ```{notrust,ignore}\n-   Compiling modules v0.1.0 (file:/home/you/projects/modules)\n+   Compiling modules v0.0.1 (file:///home/you/projects/modules)\n src/main.rs:2:5: 2:23 error: function `print_hello` is private\n src/main.rs:2     hello::print_hello();\n                   ^~~~~~~~~~~~~~~~~~\n@@ -2769,7 +2769,7 @@ This will work:\n \n ```{notrust,ignore}\n $ cargo run\n-   Compiling modules v0.1.0 (file:/home/steve/tmp/modules)\n+   Compiling modules v0.0.1 (file:///home/you/projects/modules)\n      Running `target/modules`\n Hello, world!\n $\n@@ -2819,7 +2819,7 @@ This doesn't _quite_ work yet. Try it:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling modules v0.1.0 (file:/home/you/projects/modules)\n+   Compiling modules v0.0.1 (file:///home/you/projects/modules)\n /home/you/projects/modules/src/lib.rs:2:5: 4:6 warning: code is never used: `print_hello`, #[warn(dead_code)] on by default\n /home/you/projects/modules/src/lib.rs:2     pub fn print_hello() {\n /home/you/projects/modules/src/lib.rs:3         println!(\"Hello, world!\");\n@@ -2855,7 +2855,7 @@ And everything should work:\n \n ```{notrust,ignore}\n $ cargo run\n-   Compiling modules v0.1.0 (file:/home/you/projects/modules)\n+   Compiling modules v0.0.1 (file:///home/you/projects/modules)\n      Running `target/modules`\n Hello, world!\n ```\n@@ -2921,7 +2921,7 @@ This should all compile as usual:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling modules v0.1.0 (file:/home/you/projects/modules)\n+   Compiling modules v0.0.1 (file:///home/you/projects/modules)\n $\n ```\n \n@@ -3093,7 +3093,7 @@ And try it out:\n \n ```{notrust,ignore}\n $ cargo run\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.0.1 (file:///home/you/projects/testing)\n      Running `target/testing`\n Hello, world!\n $\n@@ -3126,7 +3126,7 @@ it `false`, so this test should fail. Let's try it!\n \n ```{notrust,ignore}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.0.1 (file:///home/you/projects/testing)\n /home/you/projects/testing/src/main.rs:1:1: 3:2 warning: code is never used: `main`, #[warn(dead_code)] on by default\n /home/you/projects/testing/src/main.rs:1 fn main() {\n /home/you/projects/testing/src/main.rs:2     println!(\"Hello, world\");\n@@ -3159,7 +3159,7 @@ Lots of output! Let's break this down:\n \n ```{notrust,ignore}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.0.1 (file:///home/you/projects/testing)\n ```\n \n You can run all of your tests with `cargo test`. This runs both your tests in\n@@ -3234,7 +3234,7 @@ And then try to run our tests again:\n \n ```{notrust,ignore}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.0.1 (file:///home/you/projects/testing)\n /home/you/projects/testing/src/main.rs:1:1: 3:2 warning: code is never used: `main`, #[warn(dead_code)] on by default\n /home/you/projects/testing/src/main.rs:1 fn main() {\n /home/you/projects/testing/src/main.rs:2     println!(\"Hello, world\");\n@@ -3273,7 +3273,7 @@ With this attribute, we won't get the warning:\n \n ```{notrust,ignore}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.0.1 (file:///home/you/projects/testing)\n \n running 0 tests\n \n@@ -3302,7 +3302,7 @@ And try to run the test:\n \n ```{notrust,ignore}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/youg/projects/testing)\n+   Compiling testing v0.0.1 (file:///home/youg/projects/testing)\n /home/youg/projects/testing/tests/lib.rs:3:18: 3:38 error: unresolved name `add_three_times_four`.\n /home/youg/projects/testing/tests/lib.rs:3     let result = add_three_times_four(5i);\n                                                             ^~~~~~~~~~~~~~~~~~~~\n@@ -3361,7 +3361,7 @@ Let's give it a run:\n \n ```{ignore,notrust}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.0.1 (file:///home/you/projects/testing)\n \n running 0 tests\n \n@@ -3401,7 +3401,7 @@ If you run `cargo test`, you should get the same output:\n \n ```{ignore,notrust}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.0.1 (file:///home/you/projects/testing)\n \n running 0 tests\n \n@@ -3445,7 +3445,7 @@ fn test_add_three() {\n We'd get this error:\n \n ```{notrust,ignore}\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.0.1 (file:///home/you/projects/testing)\n /home/you/projects/testing/tests/lib.rs:3:5: 3:24 error: function `add_three` is private\n /home/you/projects/testing/tests/lib.rs:3 use testing::add_three;\n                                               ^~~~~~~~~~~~~~~~~~~\n@@ -3488,7 +3488,7 @@ Let's give it a shot:\n \n ```{ignore,notrust}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.0.1 (file:///home/you/projects/testing)\n \n running 1 test\n test test::test_times_four ... ok"}]}