{"sha": "294f7e479019d574dc4083cc9603e92957cc6368", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NGY3ZTQ3OTAxOWQ1NzRkYzQwODNjYzk2MDNlOTI5NTdjYzYzNjg=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-11-24T22:39:05Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-11-24T22:39:05Z"}, "message": "Handle non_exhaustive in borrow checking", "tree": {"sha": "b266b8a9ac79b1a259920d4fae9cd518a9c758cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b266b8a9ac79b1a259920d4fae9cd518a9c758cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/294f7e479019d574dc4083cc9603e92957cc6368", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/294f7e479019d574dc4083cc9603e92957cc6368", "html_url": "https://github.com/rust-lang/rust/commit/294f7e479019d574dc4083cc9603e92957cc6368", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/294f7e479019d574dc4083cc9603e92957cc6368/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a1d028d4c8fc15473dc10473c38df162daa7b41", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a1d028d4c8fc15473dc10473c38df162daa7b41", "html_url": "https://github.com/rust-lang/rust/commit/5a1d028d4c8fc15473dc10473c38df162daa7b41"}], "stats": {"total": 85, "additions": 84, "deletions": 1}, "files": [{"sha": "3e71b871801d1d21a79ccf2d705e27a034cc5b36", "filename": "src/librustc_mir/build/matches/simplify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/294f7e479019d574dc4083cc9603e92957cc6368/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/294f7e479019d574dc4083cc9603e92957cc6368/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fsimplify.rs?ref=294f7e479019d574dc4083cc9603e92957cc6368", "patch": "@@ -164,7 +164,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                         self.hir.tcx().features().exhaustive_patterns &&\n                         !v.uninhabited_from(self.hir.tcx(), substs, adt_def.adt_kind()).is_empty()\n                     }\n-                });\n+                }) && (adt_def.did.is_local() || !adt_def.is_variant_list_non_exhaustive());\n                 if irrefutable {\n                     let place = tcx.mk_place_downcast(match_pair.place, adt_def, variant_index);\n                     candidate.match_pairs.extend(self.field_match_pairs(place, subpatterns));"}, {"sha": "5f86db86d4477fab4b909c0945183c7f6d048aaa", "filename": "src/test/ui/rfc-2008-non-exhaustive/auxiliary/monovariants.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/294f7e479019d574dc4083cc9603e92957cc6368/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fmonovariants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/294f7e479019d574dc4083cc9603e92957cc6368/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fmonovariants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fmonovariants.rs?ref=294f7e479019d574dc4083cc9603e92957cc6368", "patch": "@@ -0,0 +1,8 @@\n+#[non_exhaustive]\n+pub enum NonExhaustiveMonovariant {\n+    Variant(u32),\n+}\n+\n+pub enum ExhaustiveMonovariant {\n+    Variant(u32),\n+}"}, {"sha": "be775b37f7b779ddf7abfcc8fcb225ed2865de7d", "filename": "src/test/ui/rfc-2008-non-exhaustive/borrowck-exhaustive.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/294f7e479019d574dc4083cc9603e92957cc6368/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fborrowck-exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/294f7e479019d574dc4083cc9603e92957cc6368/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fborrowck-exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fborrowck-exhaustive.rs?ref=294f7e479019d574dc4083cc9603e92957cc6368", "patch": "@@ -0,0 +1,42 @@\n+// Test that the borrow checker doesn't consider checking an exhaustive pattern\n+// as an access.\n+\n+// check-pass\n+\n+// aux-build:monovariants.rs\n+extern crate monovariants;\n+\n+use monovariants::ExhaustiveMonovariant;\n+\n+enum Local {\n+    Variant(u32),\n+}\n+\n+#[non_exhaustive]\n+enum LocalNonExhaustive {\n+    Variant(u32),\n+}\n+\n+fn main() {\n+    let mut x = ExhaustiveMonovariant::Variant(1);\n+    let y = &mut x;\n+    match x {\n+        ExhaustiveMonovariant::Variant(_) => {},\n+        _ => {},\n+    }\n+    drop(y);\n+    let mut x = Local::Variant(1);\n+    let y = &mut x;\n+    match x {\n+        Local::Variant(_) => {},\n+        _ => {},\n+    }\n+    drop(y);\n+    let mut x = LocalNonExhaustive::Variant(1);\n+    let y = &mut x;\n+    match x {\n+        LocalNonExhaustive::Variant(_) => {},\n+        _ => {},\n+    }\n+    drop(y);\n+}"}, {"sha": "00dcf89c7aa674a2d3a2b1c416e870980b30150f", "filename": "src/test/ui/rfc-2008-non-exhaustive/borrowck-non-exhaustive.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/294f7e479019d574dc4083cc9603e92957cc6368/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fborrowck-non-exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/294f7e479019d574dc4083cc9603e92957cc6368/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fborrowck-non-exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fborrowck-non-exhaustive.rs?ref=294f7e479019d574dc4083cc9603e92957cc6368", "patch": "@@ -0,0 +1,18 @@\n+// Test that the borrow checker considers `#[non_exhaustive]` when checking\n+// whether a match contains a discriminant read.\n+\n+// aux-build:monovariants.rs\n+extern crate monovariants;\n+\n+use monovariants::NonExhaustiveMonovariant;\n+\n+fn main() {\n+    let mut x = NonExhaustiveMonovariant::Variant(1);\n+    let y = &mut x;\n+    match x {\n+        NonExhaustiveMonovariant::Variant(_) => {},\n+        //~^ ERROR cannot use `x` because it was mutably borrowed\n+        _ => {},\n+    }\n+    drop(y);\n+}"}, {"sha": "9edfa84cbc0852c4854e1cf08f1777c33a0efc68", "filename": "src/test/ui/rfc-2008-non-exhaustive/borrowck-non-exhaustive.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/294f7e479019d574dc4083cc9603e92957cc6368/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fborrowck-non-exhaustive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/294f7e479019d574dc4083cc9603e92957cc6368/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fborrowck-non-exhaustive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fborrowck-non-exhaustive.stderr?ref=294f7e479019d574dc4083cc9603e92957cc6368", "patch": "@@ -0,0 +1,15 @@\n+error[E0503]: cannot use `x` because it was mutably borrowed\n+  --> $DIR/borrowck-non-exhaustive.rs:13:9\n+   |\n+LL |     let y = &mut x;\n+   |             ------ borrow of `x` occurs here\n+LL |     match x {\n+LL |         NonExhaustiveMonovariant::Variant(_) => {},\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ use of borrowed `x`\n+...\n+LL |     drop(y);\n+   |          - borrow later used here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0503`."}]}