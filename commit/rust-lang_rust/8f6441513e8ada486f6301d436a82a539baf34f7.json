{"sha": "8f6441513e8ada486f6301d436a82a539baf34f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNjQ0MTUxM2U4YWRhNDg2ZjYzMDFkNDM2YTgyYTUzOWJhZjM0Zjc=", "commit": {"author": {"name": "Dan Robertson", "email": "danlrobertson89@gmail.com", "date": "2018-05-29T01:51:36Z"}, "committer": {"name": "Dan Robertson", "email": "danlrobertson89@gmail.com", "date": "2018-05-31T14:45:49Z"}, "message": "typeck: Do not pass the field check on field error\n\nIf a struct pattern has a field error return an error.", "tree": {"sha": "558d75f75c66c2ccee6379b16077c81d6a29bf03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/558d75f75c66c2ccee6379b16077c81d6a29bf03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f6441513e8ada486f6301d436a82a539baf34f7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE6/GOOZ7vWh0F4amaoWg4yOuDMLUFAlsQCp4ACgkQoWg4yOuD\nMLWHjA/7B/O1AF9WM11bJSIc8+zKCQnuEH2Z7HEx+uR14IL78N3wz3vgXO1XmLjZ\n7q+Oe7583rx7KR2fgeCd5/JZOBWXPh9Q9cSGhQmTYRnVoRqSVnbVTzwlfEoHhdyE\npm7wKgsVzdMagBfGS3xUAHFLioXIqUxoZJhL6FVzop/AImDHVGEIaLnbMAApJC+B\nPdN2oT3mKdxg45uJF4dIojE1vfBezdYlUpgt9SMF5TCK2xnyZj9yZP4gwFelBqov\nkxOWvSphuRDpN1NhB2+zV2DrAzgLB0s/7P8y02icSXOCi5t1iVuFQey0sjybJrK8\nF26lkPKe61Je5JnlwECLrbtwJRjRKKb7GxzwqTvBM29FVj3BVoZ/1AWSYLGKOkPr\naZd2UGMNB6O+rffke3pL6Y3mmgK543ikEtL/b3BW7wFeDHpCG5NQxNlg/9AbQSQb\nkx0BJnJCxiYidvBxq/avIXUjVY+T2vBo/a9fO0k1ITojjXSLRhcJGYC7rGjaXGLg\nkUsvMERmaciLPnzdSauwiVhgR+Q6GzY7agFL082MQso1PDE/h06qgqPcuo9XPvNz\noLwVcsGlWiHML2FPwVOTTmjrtTrRWFP1X+CKfCSFTSCrnplY2TXQVhgq9LmO04SS\ntTDfUZIh73gGb7oq6zAgeVGB9zB6nIIU5wPZmhfmnevT38uLkkY=\n=uTIj\n-----END PGP SIGNATURE-----", "payload": "tree 558d75f75c66c2ccee6379b16077c81d6a29bf03\nparent 30cae5870907e7ae9e74a39eee5bcf55ee5d2809\nauthor Dan Robertson <danlrobertson89@gmail.com> 1527558696 +0000\ncommitter Dan Robertson <danlrobertson89@gmail.com> 1527777949 +0000\n\ntypeck: Do not pass the field check on field error\n\nIf a struct pattern has a field error return an error.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f6441513e8ada486f6301d436a82a539baf34f7", "html_url": "https://github.com/rust-lang/rust/commit/8f6441513e8ada486f6301d436a82a539baf34f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f6441513e8ada486f6301d436a82a539baf34f7/comments", "author": {"login": "dlrobertson", "id": 7504153, "node_id": "MDQ6VXNlcjc1MDQxNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7504153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlrobertson", "html_url": "https://github.com/dlrobertson", "followers_url": "https://api.github.com/users/dlrobertson/followers", "following_url": "https://api.github.com/users/dlrobertson/following{/other_user}", "gists_url": "https://api.github.com/users/dlrobertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlrobertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlrobertson/subscriptions", "organizations_url": "https://api.github.com/users/dlrobertson/orgs", "repos_url": "https://api.github.com/users/dlrobertson/repos", "events_url": "https://api.github.com/users/dlrobertson/events{/privacy}", "received_events_url": "https://api.github.com/users/dlrobertson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dlrobertson", "id": 7504153, "node_id": "MDQ6VXNlcjc1MDQxNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7504153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlrobertson", "html_url": "https://github.com/dlrobertson", "followers_url": "https://api.github.com/users/dlrobertson/followers", "following_url": "https://api.github.com/users/dlrobertson/following{/other_user}", "gists_url": "https://api.github.com/users/dlrobertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlrobertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlrobertson/subscriptions", "organizations_url": "https://api.github.com/users/dlrobertson/orgs", "repos_url": "https://api.github.com/users/dlrobertson/repos", "events_url": "https://api.github.com/users/dlrobertson/events{/privacy}", "received_events_url": "https://api.github.com/users/dlrobertson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30cae5870907e7ae9e74a39eee5bcf55ee5d2809", "url": "https://api.github.com/repos/rust-lang/rust/commits/30cae5870907e7ae9e74a39eee5bcf55ee5d2809", "html_url": "https://github.com/rust-lang/rust/commit/30cae5870907e7ae9e74a39eee5bcf55ee5d2809"}], "stats": {"total": 85, "additions": 82, "deletions": 3}, "files": [{"sha": "39b7e243775228be5e2623cb4f4204b673caae1b", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8f6441513e8ada486f6301d436a82a539baf34f7/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f6441513e8ada486f6301d436a82a539baf34f7/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=8f6441513e8ada486f6301d436a82a539baf34f7", "patch": "@@ -720,8 +720,11 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n         self.demand_eqtype(pat.span, expected, pat_ty);\n \n         // Type check subpatterns.\n-        self.check_struct_pat_fields(pat_ty, pat.id, pat.span, variant, fields, etc, def_bm);\n-        pat_ty\n+        if self.check_struct_pat_fields(pat_ty, pat.id, pat.span, variant, fields, etc, def_bm) {\n+            pat_ty\n+        } else {\n+            self.tcx.types.err\n+        }\n     }\n \n     fn check_pat_path(&self,\n@@ -846,7 +849,7 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                                variant: &'tcx ty::VariantDef,\n                                fields: &'gcx [Spanned<hir::FieldPat>],\n                                etc: bool,\n-                               def_bm: ty::BindingMode) {\n+                               def_bm: ty::BindingMode) -> bool {\n         let tcx = self.tcx;\n \n         let (substs, adt) = match adt_ty.sty {\n@@ -864,6 +867,7 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n \n         // Keep track of which fields have already appeared in the pattern.\n         let mut used_fields = FxHashMap();\n+        let mut no_field_errors = true;\n \n         let mut inexistent_fields = vec![];\n         // Typecheck each field.\n@@ -879,6 +883,7 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                                     format!(\"multiple uses of `{}` in pattern\", field.ident))\n                         .span_label(*occupied.get(), format!(\"first use of `{}`\", field.ident))\n                         .emit();\n+                    no_field_errors = false;\n                     tcx.types.err\n                 }\n                 Vacant(vacant) => {\n@@ -891,6 +896,7 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                         })\n                         .unwrap_or_else(|| {\n                             inexistent_fields.push((span, field.ident));\n+                            no_field_errors = false;\n                             tcx.types.err\n                         })\n                 }\n@@ -989,5 +995,6 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                 diag.emit();\n             }\n         }\n+        no_field_errors\n     }\n }"}, {"sha": "c8f106687ae1cb4d8b517a2fc46d80a1515d8994", "filename": "src/test/ui/issue-51102.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/8f6441513e8ada486f6301d436a82a539baf34f7/src%2Ftest%2Fui%2Fissue-51102.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f6441513e8ada486f6301d436a82a539baf34f7/src%2Ftest%2Fui%2Fissue-51102.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-51102.rs?ref=8f6441513e8ada486f6301d436a82a539baf34f7", "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum SimpleEnum {\n+    NoState,\n+}\n+\n+struct SimpleStruct {\n+    no_state_here: u64,\n+}\n+\n+fn main() {\n+    let _ = |simple| {\n+        match simple {\n+            SimpleStruct {\n+                state: 0,\n+                //~^ struct `SimpleStruct` does not have a field named `state` [E0026]\n+                ..\n+            } => (),\n+        }\n+    };\n+\n+    let _ = |simple| {\n+        match simple {\n+            SimpleStruct {\n+                no_state_here: 0,\n+                no_state_here: 1\n+                //~^ ERROR field `no_state_here` bound multiple times in the pattern [E0025]\n+            } => (),\n+        }\n+    };\n+\n+    let _ = |simple| {\n+        match simple {\n+            SimpleEnum::NoState {\n+                state: 0\n+                //~^ ERROR variant `SimpleEnum::NoState` does not have a field named `state` [E0026]\n+            } => (),\n+        }\n+    };\n+}"}, {"sha": "a4bd0fb914fee7ba825f972ed73a7cf20a767dfe", "filename": "src/test/ui/issue-51102.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8f6441513e8ada486f6301d436a82a539baf34f7/src%2Ftest%2Fui%2Fissue-51102.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8f6441513e8ada486f6301d436a82a539baf34f7/src%2Ftest%2Fui%2Fissue-51102.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-51102.stderr?ref=8f6441513e8ada486f6301d436a82a539baf34f7", "patch": "@@ -0,0 +1,24 @@\n+error[E0026]: struct `SimpleStruct` does not have a field named `state`\n+  --> $DIR/issue-51102.rs:23:17\n+   |\n+LL |                 state: 0,\n+   |                 ^^^^^^^^ struct `SimpleStruct` does not have this field\n+\n+error[E0025]: field `no_state_here` bound multiple times in the pattern\n+  --> $DIR/issue-51102.rs:34:17\n+   |\n+LL |                 no_state_here: 0,\n+   |                 ---------------- first use of `no_state_here`\n+LL |                 no_state_here: 1\n+   |                 ^^^^^^^^^^^^^^^^ multiple uses of `no_state_here` in pattern\n+\n+error[E0026]: variant `SimpleEnum::NoState` does not have a field named `state`\n+  --> $DIR/issue-51102.rs:43:17\n+   |\n+LL |                 state: 0\n+   |                 ^^^^^^^^ variant `SimpleEnum::NoState` does not have this field\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors occurred: E0025, E0026.\n+For more information about an error, try `rustc --explain E0025`."}]}