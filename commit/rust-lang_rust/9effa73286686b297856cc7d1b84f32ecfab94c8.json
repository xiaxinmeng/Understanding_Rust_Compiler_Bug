{"sha": "9effa73286686b297856cc7d1b84f32ecfab94c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllZmZhNzMyODY2ODZiMjk3ODU2Y2M3ZDFiODRmMzJlY2ZhYjk0Yzg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-10T12:08:23Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-10T14:44:02Z"}, "message": "Rollup merge of #45095 - bluss:discriminant-send-sync, r=alexcrichton\n\nEnsure std::mem::Discriminant is Send + Sync\n\n`PhantomData<*const T>` has the implication of Send / Syncness following\nthe *const T type, but the discriminant should always be Send and Sync.\n\nUse `PhantomData<fn() -> T>` which has the same variance in T, but is Send + Sync", "tree": {"sha": "17adba78fe22f9491bfc8ff51065bc96bc522869", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17adba78fe22f9491bfc8ff51065bc96bc522869"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9effa73286686b297856cc7d1b84f32ecfab94c8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlnc3LIACgkQ/vbIBR0O\nATzSjw/8Dqvg45UwEmcfnvMymyvie/9ICytedo275OwQGeLKnRcW/WlAE4AGxzPm\n+ZrYRnuxaJPsG+DBd15Zm/HI4c5edV0DnBA+Z1JZ45SXVfxVdYKgNBw+zh7glFcs\n9d/EoaVGVtWioazU1RaKgdfr4K5LFCu8b8RIyNgIjQqfUZ77dAx2BlIbSeKYUxkj\nlZYkCtj5jwUfxl+J/xRiqdvqTTfoZXCrfBK+X7Deks/3amIA6viWhKWJTAJIHore\nqqqK68L35vBynANvasAkxknU8ObzBTeLJJQ+xi3hXHPCsojymwz140jEAtS6lhL3\nq5hGmo2ccCnFbS0jVWX1yLdDUo2wlnxPtwQxBiFCk9oqn8K0HxaQi03KO+gYeqIo\nYp9E3PGvNnxNjEszVvsCXz533Z6WqpnWP4WR9CFycqcJSd/j4RtGD67D9oAF+Zs5\n7x7IqX8aCVBN1al6rtC69njPUgJjBdyN3xF1Zu5RDCnWgbFhRm2iHiyklZZvLzWF\nxqb9oDFxrak3mjydl4g3NRcGS6KGD77VEPmv9+48ItwjJrE45Ii4CkE7vkYEcW5f\nhsvqe2aMHS0Ke7ZwjHogCzaubXaK1s/hBaADL1f22ALcOD1777QaJaGuPhLd8osx\ntdvdJV58VFVzBFGRUQTC+Y9Gu1NWBx0CSNf/9IbodhPTm5VUKf8=\n=XuEx\n-----END PGP SIGNATURE-----", "payload": "tree 17adba78fe22f9491bfc8ff51065bc96bc522869\nparent f2efa793f02e737c830256d32be39273f244fd51\nparent 3fff2d95bf90514e66892ca9be666c35eeae9165\nauthor kennytm <kennytm@gmail.com> 1507637303 +0800\ncommitter kennytm <kennytm@gmail.com> 1507646642 +0800\n\nRollup merge of #45095 - bluss:discriminant-send-sync, r=alexcrichton\n\nEnsure std::mem::Discriminant is Send + Sync\n\n`PhantomData<*const T>` has the implication of Send / Syncness following\nthe *const T type, but the discriminant should always be Send and Sync.\n\nUse `PhantomData<fn() -> T>` which has the same variance in T, but is Send + Sync\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9effa73286686b297856cc7d1b84f32ecfab94c8", "html_url": "https://github.com/rust-lang/rust/commit/9effa73286686b297856cc7d1b84f32ecfab94c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9effa73286686b297856cc7d1b84f32ecfab94c8/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2efa793f02e737c830256d32be39273f244fd51", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2efa793f02e737c830256d32be39273f244fd51", "html_url": "https://github.com/rust-lang/rust/commit/f2efa793f02e737c830256d32be39273f244fd51"}, {"sha": "3fff2d95bf90514e66892ca9be666c35eeae9165", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fff2d95bf90514e66892ca9be666c35eeae9165", "html_url": "https://github.com/rust-lang/rust/commit/3fff2d95bf90514e66892ca9be666c35eeae9165"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "680a0f5b2c03febe0f73663c7b7f476e469e1fb4", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9effa73286686b297856cc7d1b84f32ecfab94c8/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9effa73286686b297856cc7d1b84f32ecfab94c8/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=9effa73286686b297856cc7d1b84f32ecfab94c8", "patch": "@@ -836,7 +836,7 @@ pub unsafe fn transmute_copy<T, U>(src: &T) -> U {\n ///\n /// See the `discriminant` function in this module for more information.\n #[stable(feature = \"discriminant_value\", since = \"1.21.0\")]\n-pub struct Discriminant<T>(u64, PhantomData<*const T>);\n+pub struct Discriminant<T>(u64, PhantomData<fn() -> T>);\n \n // N.B. These trait implementations cannot be derived because we don't want any bounds on T.\n "}, {"sha": "f55a1c81463f77ab0a8a6dd7c1946ae3c0c33a4a", "filename": "src/libcore/tests/mem.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9effa73286686b297856cc7d1b84f32ecfab94c8/src%2Flibcore%2Ftests%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9effa73286686b297856cc7d1b84f32ecfab94c8/src%2Flibcore%2Ftests%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fmem.rs?ref=9effa73286686b297856cc7d1b84f32ecfab94c8", "patch": "@@ -121,3 +121,19 @@ fn test_transmute() {\n     }\n }\n \n+#[test]\n+#[allow(dead_code)]\n+fn test_discriminant_send_sync() {\n+    enum Regular {\n+        A,\n+        B(i32)\n+    }\n+    enum NotSendSync {\n+        A(*const i32)\n+    }\n+\n+    fn is_send_sync<T: Send + Sync>() { }\n+\n+    is_send_sync::<Discriminant<Regular>>();\n+    is_send_sync::<Discriminant<NotSendSync>>();\n+}"}]}