{"sha": "ec32b2e39cb95fc1a9015379de6fe71f230c873d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMzJiMmUzOWNiOTVmYzFhOTAxNTM3OWRlNmZlNzFmMjMwYzg3M2Q=", "commit": {"author": {"name": "WizardOfMenlo", "email": "giacomofenzi@outlook.com", "date": "2019-01-28T17:17:04Z"}, "committer": {"name": "WizardOfMenlo", "email": "giacomofenzi@outlook.com", "date": "2019-01-28T17:17:04Z"}, "message": "Use match-all instead of individual branches", "tree": {"sha": "136f168e72614b8f1b04d9c8ca353bfb347fa56c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/136f168e72614b8f1b04d9c8ca353bfb347fa56c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec32b2e39cb95fc1a9015379de6fe71f230c873d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec32b2e39cb95fc1a9015379de6fe71f230c873d", "html_url": "https://github.com/rust-lang/rust/commit/ec32b2e39cb95fc1a9015379de6fe71f230c873d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec32b2e39cb95fc1a9015379de6fe71f230c873d/comments", "author": {"login": "WizardOfMenlo", "id": 9511741, "node_id": "MDQ6VXNlcjk1MTE3NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/9511741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WizardOfMenlo", "html_url": "https://github.com/WizardOfMenlo", "followers_url": "https://api.github.com/users/WizardOfMenlo/followers", "following_url": "https://api.github.com/users/WizardOfMenlo/following{/other_user}", "gists_url": "https://api.github.com/users/WizardOfMenlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/WizardOfMenlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WizardOfMenlo/subscriptions", "organizations_url": "https://api.github.com/users/WizardOfMenlo/orgs", "repos_url": "https://api.github.com/users/WizardOfMenlo/repos", "events_url": "https://api.github.com/users/WizardOfMenlo/events{/privacy}", "received_events_url": "https://api.github.com/users/WizardOfMenlo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WizardOfMenlo", "id": 9511741, "node_id": "MDQ6VXNlcjk1MTE3NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/9511741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WizardOfMenlo", "html_url": "https://github.com/WizardOfMenlo", "followers_url": "https://api.github.com/users/WizardOfMenlo/followers", "following_url": "https://api.github.com/users/WizardOfMenlo/following{/other_user}", "gists_url": "https://api.github.com/users/WizardOfMenlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/WizardOfMenlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WizardOfMenlo/subscriptions", "organizations_url": "https://api.github.com/users/WizardOfMenlo/orgs", "repos_url": "https://api.github.com/users/WizardOfMenlo/repos", "events_url": "https://api.github.com/users/WizardOfMenlo/events{/privacy}", "received_events_url": "https://api.github.com/users/WizardOfMenlo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9416904d148129a6e0315fd139ae5ae516ff104c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9416904d148129a6e0315fd139ae5ae516ff104c", "html_url": "https://github.com/rust-lang/rust/commit/9416904d148129a6e0315fd139ae5ae516ff104c"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "7a54856981490cc4913d15443b0d6328d207020b", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ec32b2e39cb95fc1a9015379de6fe71f230c873d/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec32b2e39cb95fc1a9015379de6fe71f230c873d/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=ec32b2e39cb95fc1a9015379de6fe71f230c873d", "patch": "@@ -1590,11 +1590,7 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                     }\n                     UnaryOp::Not => {\n                         match inner_ty {\n-                            Ty::Bool\n-                            | Ty::Int(primitive::UncertainIntTy::Unknown)\n-                            | Ty::Int(primitive::UncertainIntTy::Signed(..))\n-                            | Ty::Int(primitive::UncertainIntTy::Unsigned(..))\n-                            | Ty::Infer(InferTy::IntVar(..)) => inner_ty,\n+                            Ty::Bool | Ty::Int(_) | Ty::Infer(InferTy::IntVar(..)) => inner_ty,\n                             // TODO: resolve ops::Not trait for inner_ty\n                             _ => Ty::Unknown,\n                         }"}]}