{"sha": "dd6fc607a46848b0960fc8095506cb8ffe3dd53d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNmZjNjA3YTQ2ODQ4YjA5NjBmYzgwOTU1MDZjYjhmZmUzZGQ1M2Q=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-04-12T19:33:39Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-04-12T19:33:39Z"}, "message": "Enable more optimizations.", "tree": {"sha": "3d7045d862a3c585152fcadf907f12037a8ba1d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d7045d862a3c585152fcadf907f12037a8ba1d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd6fc607a46848b0960fc8095506cb8ffe3dd53d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd6fc607a46848b0960fc8095506cb8ffe3dd53d", "html_url": "https://github.com/rust-lang/rust/commit/dd6fc607a46848b0960fc8095506cb8ffe3dd53d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd6fc607a46848b0960fc8095506cb8ffe3dd53d/comments", "author": null, "committer": null, "parents": [{"sha": "73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f", "html_url": "https://github.com/rust-lang/rust/commit/73eecbd0cad2e4d16a6a2d0aa197e3bb60f93b1f"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "430e8cdb3b88b810f9fac91c5444be48c6dc8731", "filename": "src/comp/lib/llvm.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dd6fc607a46848b0960fc8095506cb8ffe3dd53d/src%2Fcomp%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6fc607a46848b0960fc8095506cb8ffe3dd53d/src%2Fcomp%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Flib%2Fllvm.rs?ref=dd6fc607a46848b0960fc8095506cb8ffe3dd53d", "patch": "@@ -749,7 +749,7 @@ native mod llvm = llvm_lib {\n     fn LLVMAddFunctionInliningPass(PassManagerRef PM);\n     fn LLVMAddFunctionAttrsPass(PassManagerRef PM);\n     fn LLVMAddScalarReplAggregatesPass(PassManagerRef PM);\n-    // fn LLVMAddScalarReplAggregatesPassSSA(PassManagerRef PM);\n+    fn LLVMAddScalarReplAggregatesPassSSA(PassManagerRef PM);\n     fn LLVMAddJumpThreadingPass(PassManagerRef PM);\n     fn LLVMAddConstantPropagationPass(PassManagerRef PM);\n     fn LLVMAddReassociatePass(PassManagerRef PM);\n@@ -770,10 +770,11 @@ native mod llvm = llvm_lib {\n     fn LLVMAddIndVarSimplifyPass(PassManagerRef PM);\n     fn LLVMAddAggressiveDCEPass(PassManagerRef PM);\n     fn LLVMAddGlobalDCEPass(PassManagerRef PM);\n-    // fn LLVMAddCorrelatedValuePropagationPass(PassManagerRef PM);\n+    fn LLVMAddCorrelatedValuePropagationPass(PassManagerRef PM);\n     fn LLVMAddPruneEHPass(PassManagerRef PM);\n     fn LLVMAddSimplifyLibCallsPass(PassManagerRef PM);\n-    // fn LLVMAddLoopIdiomPass(PassManagerRef PM);\n+    fn LLVMAddLoopIdiomPass(PassManagerRef PM);\n+    fn LLVMAddEarlyCSEPass(PassManagerRef PM);\n \n     /** Destroys a memory buffer. */\n     fn LLVMDisposeMemoryBuffer(MemoryBufferRef MemBuf);"}, {"sha": "43a115b59d6e7a9bb13ce8df70cd75f2f16fa542", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dd6fc607a46848b0960fc8095506cb8ffe3dd53d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6fc607a46848b0960fc8095506cb8ffe3dd53d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=dd6fc607a46848b0960fc8095506cb8ffe3dd53d", "patch": "@@ -6621,7 +6621,7 @@ fn run_passes(ModuleRef llmod, bool opt) {\n         // createStandardFunctionPasses\n         llvm.LLVMAddCFGSimplificationPass(fpm.llpm);\n         llvm.LLVMAddScalarReplAggregatesPass(fpm.llpm);\n-        //llvm.LLVMAddEarlyCSEPass(fpm.llpm);\n+        llvm.LLVMAddEarlyCSEPass(fpm.llpm);\n \n         llvm.LLVMRunPassManager(fpm.llpm, llmod);\n \n@@ -6637,11 +6637,11 @@ fn run_passes(ModuleRef llmod, bool opt) {\n         // FIXME: crashes!\n         // llvm.LLVMAddFunctionAttrsPass(pm.llpm);\n \n-        // llvm.LLVMAddScalarReplAggregatesPassSSA(pm.llpm);\n-        // llvm.LLVMAddEarlyCSEPass(pm.llpm);\n+        llvm.LLVMAddScalarReplAggregatesPassSSA(pm.llpm);\n+        llvm.LLVMAddEarlyCSEPass(pm.llpm);\n         llvm.LLVMAddSimplifyLibCallsPass(pm.llpm);\n         llvm.LLVMAddJumpThreadingPass(pm.llpm);\n-        // llvm.LLVMAddCorrelatedValuePropagationPass(pm.llpm);\n+        llvm.LLVMAddCorrelatedValuePropagationPass(pm.llpm);\n         llvm.LLVMAddCFGSimplificationPass(pm.llpm);\n         llvm.LLVMAddInstructionCombiningPass(pm.llpm);\n         llvm.LLVMAddTailCallEliminationPass(pm.llpm);\n@@ -6652,7 +6652,7 @@ fn run_passes(ModuleRef llmod, bool opt) {\n         llvm.LLVMAddLoopUnswitchPass(pm.llpm);\n         llvm.LLVMAddInstructionCombiningPass(pm.llpm);\n         llvm.LLVMAddIndVarSimplifyPass(pm.llpm);\n-        // llvm.LLVMAddLoopIdiomPass(pm.llpm);\n+        llvm.LLVMAddLoopIdiomPass(pm.llpm);\n         llvm.LLVMAddLoopDeletionPass(pm.llpm);\n         llvm.LLVMAddLoopUnrollPass(pm.llpm);\n         llvm.LLVMAddInstructionCombiningPass(pm.llpm);\n@@ -6661,7 +6661,7 @@ fn run_passes(ModuleRef llmod, bool opt) {\n         llvm.LLVMAddSCCPPass(pm.llpm);\n         llvm.LLVMAddInstructionCombiningPass(pm.llpm);\n         llvm.LLVMAddJumpThreadingPass(pm.llpm);\n-        // llvm.LLVMAddCorrelatedValuePropagationPass(pm.llpm);\n+        llvm.LLVMAddCorrelatedValuePropagationPass(pm.llpm);\n         llvm.LLVMAddDeadStoreEliminationPass(pm.llpm);\n         llvm.LLVMAddAggressiveDCEPass(pm.llpm);\n         llvm.LLVMAddCFGSimplificationPass(pm.llpm);"}]}