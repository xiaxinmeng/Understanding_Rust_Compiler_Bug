{"sha": "f3c88825337c295850de546bd3d8745c8cad1224", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYzg4ODI1MzM3YzI5NTg1MGRlNTQ2YmQzZDg3NDVjOGNhZDEyMjQ=", "commit": {"author": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2013-09-15T15:02:58Z"}, "committer": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2013-09-15T18:30:17Z"}, "message": "std::os: Use unicode for last_os_error() on Win32\n\nFormatMessageA may return non-ascii message,\nwhich is encoded as system code page, not utf8.\nThis may cause `assert!(is_utf8(v))` failure on\nsome non-English machines.\nThis patch replaces it with FormatMessageW,\nwhich returns utf-16 message.\n\nFixes `make check-stage2-std` failure on my machine. :)", "tree": {"sha": "b28ff9ad5e8495220ab4fe7fef88c20ae1d0c6af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b28ff9ad5e8495220ab4fe7fef88c20ae1d0c6af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3c88825337c295850de546bd3d8745c8cad1224", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3c88825337c295850de546bd3d8745c8cad1224", "html_url": "https://github.com/rust-lang/rust/commit/f3c88825337c295850de546bd3d8745c8cad1224", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3c88825337c295850de546bd3d8745c8cad1224/comments", "author": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e745f16790f22fc10652a6ffae36bf5572255bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e745f16790f22fc10652a6ffae36bf5572255bb", "html_url": "https://github.com/rust-lang/rust/commit/1e745f16790f22fc10652a6ffae36bf5572255bb"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "c45f2af8f7ec792cd74897ae1a7026eb39e61b4f", "filename": "src/libstd/os.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f3c88825337c295850de546bd3d8745c8cad1224/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c88825337c295850de546bd3d8745c8cad1224/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=f3c88825337c295850de546bd3d8745c8cad1224", "patch": "@@ -1135,18 +1135,19 @@ pub fn last_os_error() -> ~str {\n         #[fixed_stack_segment]; #[inline(never)];\n \n         use libc::types::os::arch::extra::DWORD;\n-        use libc::types::os::arch::extra::LPSTR;\n+        use libc::types::os::arch::extra::LPWSTR;\n         use libc::types::os::arch::extra::LPVOID;\n+        use libc::types::os::arch::extra::WCHAR;\n \n         #[cfg(target_arch = \"x86\")]\n         #[link_name = \"kernel32\"]\n         #[abi = \"stdcall\"]\n         extern \"stdcall\" {\n-            fn FormatMessageA(flags: DWORD,\n+            fn FormatMessageW(flags: DWORD,\n                               lpSrc: LPVOID,\n                               msgId: DWORD,\n                               langId: DWORD,\n-                              buf: LPSTR,\n+                              buf: LPWSTR,\n                               nsize: DWORD,\n                               args: *c_void)\n                               -> DWORD;\n@@ -1155,11 +1156,11 @@ pub fn last_os_error() -> ~str {\n         #[cfg(target_arch = \"x86_64\")]\n         #[link_name = \"kernel32\"]\n         extern {\n-            fn FormatMessageA(flags: DWORD,\n+            fn FormatMessageW(flags: DWORD,\n                               lpSrc: LPVOID,\n                               msgId: DWORD,\n                               langId: DWORD,\n-                              buf: LPSTR,\n+                              buf: LPWSTR,\n                               nsize: DWORD,\n                               args: *c_void)\n                               -> DWORD;\n@@ -1173,11 +1174,11 @@ pub fn last_os_error() -> ~str {\n         let langId = 0x0800 as DWORD;\n         let err = errno() as DWORD;\n \n-        let mut buf = [0 as c_char, ..TMPBUF_SZ];\n+        let mut buf = [0 as WCHAR, ..TMPBUF_SZ];\n \n         unsafe {\n             do buf.as_mut_buf |buf, len| {\n-                let res = FormatMessageA(FORMAT_MESSAGE_FROM_SYSTEM |\n+                let res = FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM |\n                                          FORMAT_MESSAGE_IGNORE_INSERTS,\n                                          ptr::mut_null(),\n                                          err,\n@@ -1190,9 +1191,7 @@ pub fn last_os_error() -> ~str {\n                 }\n             }\n \n-            do buf.as_imm_buf |buf, _len| {\n-                str::raw::from_c_str(buf)\n-            }\n+            str::from_utf16(buf)\n         }\n     }\n "}]}