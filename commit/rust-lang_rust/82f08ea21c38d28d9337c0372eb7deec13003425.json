{"sha": "82f08ea21c38d28d9337c0372eb7deec13003425", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyZjA4ZWEyMWMzOGQyOGQ5MzM3YzAzNzJlYjdkZWVjMTMwMDM0MjU=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2015-10-15T21:03:27Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2015-10-17T01:10:52Z"}, "message": "trans: Use an isize to count the number of registers so we don't underflow for fn's with > 7 args in debug builds.", "tree": {"sha": "afdb9762008c7d3bd1f0d6ec73bce365e76e2405", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afdb9762008c7d3bd1f0d6ec73bce365e76e2405"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82f08ea21c38d28d9337c0372eb7deec13003425", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82f08ea21c38d28d9337c0372eb7deec13003425", "html_url": "https://github.com/rust-lang/rust/commit/82f08ea21c38d28d9337c0372eb7deec13003425", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82f08ea21c38d28d9337c0372eb7deec13003425/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be9104291391d9adff91c9ece2b562150979a899", "url": "https://api.github.com/repos/rust-lang/rust/commits/be9104291391d9adff91c9ece2b562150979a899", "html_url": "https://github.com/rust-lang/rust/commit/be9104291391d9adff91c9ece2b562150979a899"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "00d8fdad32de1814e9e7612b4d7651fe51b9e112", "filename": "src/librustc_trans/trans/cabi_x86_64.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/82f08ea21c38d28d9337c0372eb7deec13003425/src%2Flibrustc_trans%2Ftrans%2Fcabi_x86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f08ea21c38d28d9337c0372eb7deec13003425/src%2Flibrustc_trans%2Ftrans%2Fcabi_x86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcabi_x86_64.rs?ref=82f08ea21c38d28d9337c0372eb7deec13003425", "patch": "@@ -411,7 +411,7 @@ pub fn compute_abi_info(ccx: &CrateContext,\n     }\n \n     let mut int_regs = 6; // RDI, RSI, RDX, RCX, R8, R9\n-    let mut sse_regs = 8;\n+    let mut sse_regs = 8; // XMM0-7\n \n     let ret_ty = if ret_def {\n         x86_64_ty(ccx, rty, |cls| {\n@@ -430,8 +430,8 @@ pub fn compute_abi_info(ccx: &CrateContext,\n     let mut arg_tys = Vec::new();\n     for t in atys {\n         let ty = x86_64_ty(ccx, *t, |cls| {\n-            let needed_int = cls.iter().filter(|&&c| c == Int).count();\n-            let needed_sse = cls.iter().filter(|c| c.is_sse()).count();\n+            let needed_int = cls.iter().filter(|&&c| c == Int).count() as isize;\n+            let needed_sse = cls.iter().filter(|c| c.is_sse()).count() as isize;\n             let in_mem = cls.is_pass_byval() ||\n                          int_regs < needed_int ||\n                          sse_regs < needed_sse;"}, {"sha": "4253767ee76a962ee0604693fe6d9e97e2b3da3b", "filename": "src/test/run-make/extern-fn-struct-passing-abi/test.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/82f08ea21c38d28d9337c0372eb7deec13003425/src%2Ftest%2Frun-make%2Fextern-fn-struct-passing-abi%2Ftest.c", "raw_url": "https://github.com/rust-lang/rust/raw/82f08ea21c38d28d9337c0372eb7deec13003425/src%2Ftest%2Frun-make%2Fextern-fn-struct-passing-abi%2Ftest.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-fn-struct-passing-abi%2Ftest.c?ref=82f08ea21c38d28d9337c0372eb7deec13003425", "patch": "@@ -58,6 +58,28 @@ void byval_rect(int32_t a, int32_t b, int32_t c, int32_t d, int32_t e, struct Re\n     assert(s.d == 556);\n }\n \n+// System V x86_64 ABI:\n+// a, b, c, d, e, f should be in registers\n+// s should be byval pointer on the stack\n+//\n+// Win64 ABI:\n+// a, b, c, d should be in registers\n+// e, f should be on the stack\n+// s should be byval pointer on the stack\n+void byval_many_rect(int32_t a, int32_t b, int32_t c, int32_t d, int32_t e,\n+                     int32_t f, struct Rect s) {\n+    assert(a == 1);\n+    assert(b == 2);\n+    assert(c == 3);\n+    assert(d == 4);\n+    assert(e == 5);\n+    assert(f == 6);\n+    assert(s.a == 553);\n+    assert(s.b == 554);\n+    assert(s.c == 555);\n+    assert(s.d == 556);\n+}\n+\n // System V x86_64 ABI:\n // a, b, c, d, e, f, g should be in sse registers\n // s should be split across 2 registers"}, {"sha": "b91362b8edccb0849a4030ee4802849d09d307c9", "filename": "src/test/run-make/extern-fn-struct-passing-abi/test.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/82f08ea21c38d28d9337c0372eb7deec13003425/src%2Ftest%2Frun-make%2Fextern-fn-struct-passing-abi%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f08ea21c38d28d9337c0372eb7deec13003425/src%2Ftest%2Frun-make%2Fextern-fn-struct-passing-abi%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-fn-struct-passing-abi%2Ftest.rs?ref=82f08ea21c38d28d9337c0372eb7deec13003425", "patch": "@@ -50,6 +50,8 @@ struct Huge {\n extern {\n     fn byval_rect(a: i32, b: i32, c: i32, d: i32, e: i32, s: Rect);\n \n+    fn byval_many_rect(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, s: Rect);\n+\n     fn byval_rect_floats(a: f32, b: f32, c: f64, d: f32, e: f32,\n                          f: f32, g: f64, s: Rect, t: FloatRect);\n \n@@ -80,6 +82,7 @@ fn main() {\n \n     unsafe {\n         byval_rect(1, 2, 3, 4, 5, s);\n+        byval_many_rect(1, 2, 3, 4, 5, 6, s);\n         byval_rect_floats(1., 2., 3., 4., 5., 6., 7., s, u);\n         byval_rect_with_float(1, 2, 3.0, 4, 5, 6, s);\n         split_rect(1, 2, s);"}]}