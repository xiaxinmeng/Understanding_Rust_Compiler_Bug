{"sha": "8b8e0c2a452a5f408f1c02470b4af1a4b6609dbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiOGUwYzJhNDUyYTVmNDA4ZjFjMDI0NzBiNGFmMWE0YjY2MDlkYmI=", "commit": {"author": {"name": "Daniel Patterson", "email": "dbp@riseup.net", "date": "2012-08-21T19:23:46Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-21T22:51:36Z"}, "message": "core: switching os::tmpdir() to always return a directory, by defaulting to Windows dir on windows, as per .NET", "tree": {"sha": "17330e09c043a86815b4ec76d1e39fea76440c7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17330e09c043a86815b4ec76d1e39fea76440c7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b8e0c2a452a5f408f1c02470b4af1a4b6609dbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b8e0c2a452a5f408f1c02470b4af1a4b6609dbb", "html_url": "https://github.com/rust-lang/rust/commit/8b8e0c2a452a5f408f1c02470b4af1a4b6609dbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b8e0c2a452a5f408f1c02470b4af1a4b6609dbb/comments", "author": null, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bb2963b7e922a9e8939253bb131eda9f31ca125", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bb2963b7e922a9e8939253bb131eda9f31ca125", "html_url": "https://github.com/rust-lang/rust/commit/9bb2963b7e922a9e8939253bb131eda9f31ca125"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "be50c71697fe1d860307013e321f3bc6d5097b8c", "filename": "src/libcore/os.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8b8e0c2a452a5f408f1c02470b4af1a4b6609dbb/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b8e0c2a452a5f408f1c02470b4af1a4b6609dbb/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=8b8e0c2a452a5f408f1c02470b4af1a4b6609dbb", "patch": "@@ -465,16 +465,16 @@ fn homedir() -> option<Path> {\n }\n \n /**\n- * Returns the path to a temporary directory, if known.\n+ * Returns the path to a temporary directory.\n  *\n  * On Unix, returns the value of the 'TMPDIR' environment variable if it is\n  * set and non-empty and '/tmp' otherwise.\n  *\n  * On Windows, returns the value of, in order, the 'TMP', 'TEMP',\n- * 'USERPROFILE' environment variable if any are set and not the empty\n- * string. Otherwise, tmpdir returns option::none.\n+ * 'USERPROFILE' environment variable  if any are set and not the empty\n+ * string. Otherwise, tmpdir returns the path to the Windows directory.\n  */\n-fn tmpdir() -> option<Path> {\n+fn tmpdir() -> Path {\n     return lookup();\n \n     fn getenv_nonempty(v: Path) -> option<Path> {\n@@ -490,15 +490,18 @@ fn tmpdir() -> option<Path> {\n     }\n \n     #[cfg(unix)]\n-    fn lookup() -> option<Path> {\n-        option::or(getenv_nonempty(~\"TMPDIR\"), some(~\"/tmp\"))\n+    fn lookup() -> Path {\n+        option::get_default(getenv_nonempty(~\"TMPDIR\"), ~\"/tmp\")\n     }\n \n     #[cfg(windows)]\n-    fn lookup() -> option<Path> {\n-        option::or(getenv_nonempty(~\"TMP\"),\n-        option::or(getenv_nonempty(~\"TEMP\"),\n-                   getenv_nonempty(~\"USERPROFILE\")))\n+    fn lookup() -> Path {\n+        option::get_default(\n+                    option::or(getenv_nonempty(~\"TMP\"),\n+                    option::or(getenv_nonempty(~\"TEMP\"),\n+                    option::or(getenv_nonempty(~\"USERPROFILE\"),\n+                               getenv_nonempty(~\"WINDIR\")))),\n+                    ~\"C:\\\\Windows\")\n     }\n }\n /// Recursively walk a directory structure\n@@ -970,7 +973,7 @@ mod tests {\n \n     #[test]\n     fn tmpdir() {\n-        option::iter(os::tmpdir(), |s| assert !str::is_empty(s));\n+        assert !str::is_empty(os::tmpdir());\n     }\n \n     // Issue #712"}]}