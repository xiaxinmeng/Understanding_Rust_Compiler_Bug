{"sha": "e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZDViOGE4ZDVjMjAwOWZlNWFiZmM2OGQ1NGNjNmJhMWY5OWJhZWE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-16T01:11:51Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-16T01:12:31Z"}, "message": "rustc: Add a few type-related methods to unique pointers; add typestate support", "tree": {"sha": "556a5574d5a2dbcbfa9d73c186d850c5efb3ec3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/556a5574d5a2dbcbfa9d73c186d850c5efb3ec3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea", "html_url": "https://github.com/rust-lang/rust/commit/e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42034f5e345838e1ae5b26c36326289b72b467f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/42034f5e345838e1ae5b26c36326289b72b467f0", "html_url": "https://github.com/rust-lang/rust/commit/42034f5e345838e1ae5b26c36326289b72b467f0"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "b769b0f36b84ceb8267b7cf00de80af38324337b", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea", "patch": "@@ -596,6 +596,7 @@ fn find_pre_post_expr(fcx: &fn_ctxt, e: @expr) {\n           none. { clear_pp(expr_pp(fcx.ccx, e)); }\n         }\n       }\n+      expr_uniq(sub) { find_pre_post_exprs(fcx, ~[sub], e.id); }\n     }\n }\n "}, {"sha": "3319d57a9446af974be4b1da506b05f757ccb833", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea", "patch": "@@ -704,6 +704,7 @@ fn walk_ty(cx: &ctxt, walker: ty_walk, ty: t) {\n       }\n       ty_var(_) {/* no-op */ }\n       ty_param(_,_) {/* no-op */ }\n+      ty_uniq(sub) { walk_ty(cx, walker, sub); }\n     }\n     walker(ty);\n }\n@@ -1232,6 +1233,7 @@ fn type_has_dynamic_size(cx: &ctxt, ty: &t) -> bool {\n       ty_param(_,_) { ret true; }\n       ty_type. { ret false; }\n       ty_native(_) { ret false; }\n+      ty_uniq(_) { ret false; }\n     }\n }\n \n@@ -1583,6 +1585,11 @@ fn hash_type_structure(st: &sty) -> uint {\n         for c: @type_constr  in cs { h += h << 5u + hash_type_constr(h, c); }\n         ret h;\n       }\n+      ty_uniq(t) {\n+        let h = 37u;\n+        h += h << 5u + hash_ty(t);\n+        ret h;\n+      }\n     }\n }\n \n@@ -1823,6 +1830,12 @@ fn equal_type_structures(a: &sty, b: &sty) -> bool {\n           _ { ret false; }\n         }\n       }\n+      ty_uniq(t_a) {\n+        alt b {\n+          ty_uniq(t_b) { ret t_a == t_b; }\n+          _ { ret false; }\n+        }\n+      }\n     }\n }\n "}, {"sha": "ef289ebe5c098bce16314aaf357a04eadc6b0ded", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=e3d5b8a8d5c2009fe5abfc68d54cc6ba1f99baea", "patch": "@@ -2504,7 +2504,7 @@ fn check_expr_with_unifier(fcx: &@fn_ctxt, expr: &@ast::expr,\n       }\n       ast::expr_uniq(x) {\n         let t = next_ty_var(fcx);\n-        check_expr_with(fcx, x, ty::mk_uniq(tcx, t));\n+        check_expr_with(fcx, x, t);\n         write::ty_only_fixup(fcx, id, ty::mk_uniq(tcx, t));\n       }\n       _ { tcx.sess.unimpl(\"expr type in typeck::check_expr\"); }"}]}