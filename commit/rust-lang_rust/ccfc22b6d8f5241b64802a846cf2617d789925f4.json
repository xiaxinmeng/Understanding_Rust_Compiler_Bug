{"sha": "ccfc22b6d8f5241b64802a846cf2617d789925f4", "node_id": "C_kwDOAAsO6NoAKGNjZmMyMmI2ZDhmNTI0MWI2NDgwMmE4NDZjZjI2MTdkNzg5OTI1ZjQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-15T00:28:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-15T00:28:06Z"}, "message": "Rollup merge of #91868 - tmiasko:llvm-time-trace-out, r=oli-obk\n\nUse `OutputFilenames` to generate output file for `-Zllvm-time-trace`\n\nThe resulting profile will include the crate name and will be stored in\nthe `--out-dir` directory.\n\nThis implementation makes it convenient to use LLVM time trace together\nwith cargo, in the contrast to the previous implementation which would\noverwrite profiles or store them in `.cargo/registry/..`.", "tree": {"sha": "63d091f9a955a00639196ca528b13e26dc53aaa3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63d091f9a955a00639196ca528b13e26dc53aaa3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccfc22b6d8f5241b64802a846cf2617d789925f4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhuTaXCRBK7hj4Ov3rIwAArLQIAH3spANSxnSDfHttWW7RgGvm\nxU6k/2wX29vbhs0rYAtC30M8K7ZATHwbR7hxUnAFihuNDffrDLnGay3QI5V53YDY\nEhzYvZcCLsiDCRzsrQuMCa0nqilJB0EDHgIs2wqyNqzhs5rHzv4bZYlDa9fXgvuN\nJ3zSauWL1CGokBv4nFQMthMJfSTnWCFrG+onSwLuf7Z4QJ+T44tAl/ibiHehLa7p\nD1T0zpi09/TG1yReeXK8pjPPpnt38bmmNZXR7C0fNsvBCcqQtRXaazl9dzMsp3pP\nL9isqJ8QWelJj6eQ7Y1YFAxU8pFv8zCvPE0m0uyZ7YoOe8g5w15/lGzRYMGjjQ8=\n=tXcw\n-----END PGP SIGNATURE-----\n", "payload": "tree 63d091f9a955a00639196ca528b13e26dc53aaa3\nparent d6c802ee7add3163f5b113d60cf4267d16441c73\nparent 3f2a1c9c1726d4d93e3433303262e44faa5910e9\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639528086 +0100\ncommitter GitHub <noreply@github.com> 1639528086 +0100\n\nRollup merge of #91868 - tmiasko:llvm-time-trace-out, r=oli-obk\n\nUse `OutputFilenames` to generate output file for `-Zllvm-time-trace`\n\nThe resulting profile will include the crate name and will be stored in\nthe `--out-dir` directory.\n\nThis implementation makes it convenient to use LLVM time trace together\nwith cargo, in the contrast to the previous implementation which would\noverwrite profiles or store them in `.cargo/registry/..`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccfc22b6d8f5241b64802a846cf2617d789925f4", "html_url": "https://github.com/rust-lang/rust/commit/ccfc22b6d8f5241b64802a846cf2617d789925f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccfc22b6d8f5241b64802a846cf2617d789925f4/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6c802ee7add3163f5b113d60cf4267d16441c73", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6c802ee7add3163f5b113d60cf4267d16441c73", "html_url": "https://github.com/rust-lang/rust/commit/d6c802ee7add3163f5b113d60cf4267d16441c73"}, {"sha": "3f2a1c9c1726d4d93e3433303262e44faa5910e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f2a1c9c1726d4d93e3433303262e44faa5910e9", "html_url": "https://github.com/rust-lang/rust/commit/3f2a1c9c1726d4d93e3433303262e44faa5910e9"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "fcdf6b50764ee5088d17957bf536375693aecf6a", "filename": "compiler/rustc_codegen_cranelift/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccfc22b6d8f5241b64802a846cf2617d789925f4/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccfc22b6d8f5241b64802a846cf2617d789925f4/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs?ref=ccfc22b6d8f5241b64802a846cf2617d789925f4", "patch": "@@ -205,6 +205,7 @@ impl CodegenBackend for CraneliftCodegenBackend {\n         &self,\n         ongoing_codegen: Box<dyn Any>,\n         _sess: &Session,\n+        _outputs: &OutputFilenames,\n     ) -> Result<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>), ErrorReported> {\n         Ok(*ongoing_codegen\n             .downcast::<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>)>()"}, {"sha": "30a33b99e5053f4dac1d5422eb473502811bfce1", "filename": "compiler/rustc_codegen_gcc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccfc22b6d8f5241b64802a846cf2617d789925f4/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccfc22b6d8f5241b64802a846cf2617d789925f4/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs?ref=ccfc22b6d8f5241b64802a846cf2617d789925f4", "patch": "@@ -96,7 +96,7 @@ impl CodegenBackend for GccCodegenBackend {\n         Box::new(res)\n     }\n \n-    fn join_codegen(&self, ongoing_codegen: Box<dyn Any>, sess: &Session) -> Result<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>), ErrorReported> {\n+    fn join_codegen(&self, ongoing_codegen: Box<dyn Any>, sess: &Session, _outputs: &OutputFilenames) -> Result<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>), ErrorReported> {\n         let (codegen_results, work_products) = ongoing_codegen\n             .downcast::<rustc_codegen_ssa::back::write::OngoingCodegen<GccCodegenBackend>>()\n             .expect(\"Expected GccCodegenBackend's OngoingCodegen, found Box<Any>\")"}, {"sha": "31f1727543c4087625f5ea285f2abde89a2e1b82", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ccfc22b6d8f5241b64802a846cf2617d789925f4/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccfc22b6d8f5241b64802a846cf2617d789925f4/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=ccfc22b6d8f5241b64802a846cf2617d789925f4", "patch": "@@ -339,6 +339,7 @@ impl CodegenBackend for LlvmCodegenBackend {\n         &self,\n         ongoing_codegen: Box<dyn Any>,\n         sess: &Session,\n+        outputs: &OutputFilenames,\n     ) -> Result<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>), ErrorReported> {\n         let (codegen_results, work_products) = ongoing_codegen\n             .downcast::<rustc_codegen_ssa::back::write::OngoingCodegen<LlvmCodegenBackend>>()\n@@ -347,7 +348,8 @@ impl CodegenBackend for LlvmCodegenBackend {\n \n         sess.time(\"llvm_dump_timing_file\", || {\n             if sess.opts.debugging_opts.llvm_time_trace {\n-                llvm_util::time_trace_profiler_finish(\"llvm_timings.json\");\n+                let file_name = outputs.with_extension(\"llvm_timings.json\");\n+                llvm_util::time_trace_profiler_finish(&file_name);\n             }\n         });\n "}, {"sha": "e4935ac431c8d8bcee2fbb7890377b0b450e5276", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ccfc22b6d8f5241b64802a846cf2617d789925f4/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccfc22b6d8f5241b64802a846cf2617d789925f4/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=ccfc22b6d8f5241b64802a846cf2617d789925f4", "patch": "@@ -4,6 +4,7 @@ use libc::c_int;\n use libloading::Library;\n use rustc_codegen_ssa::target_features::supported_target_features;\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_fs_util::path_to_c_string;\n use rustc_middle::bug;\n use rustc_session::config::PrintRequest;\n use rustc_session::Session;\n@@ -13,6 +14,7 @@ use std::ffi::{CStr, CString};\n use tracing::debug;\n \n use std::mem;\n+use std::path::Path;\n use std::ptr;\n use std::slice;\n use std::str;\n@@ -134,9 +136,9 @@ unsafe fn configure_llvm(sess: &Session) {\n     llvm::LLVMRustSetLLVMOptions(llvm_args.len() as c_int, llvm_args.as_ptr());\n }\n \n-pub fn time_trace_profiler_finish(file_name: &str) {\n+pub fn time_trace_profiler_finish(file_name: &Path) {\n     unsafe {\n-        let file_name = CString::new(file_name).unwrap();\n+        let file_name = path_to_c_string(file_name);\n         llvm::LLVMTimeTraceProfilerFinish(file_name.as_ptr());\n     }\n }"}, {"sha": "c6abb3f6eb416a9c3e19945a403216e998d4c143", "filename": "compiler/rustc_codegen_ssa/src/traits/backend.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccfc22b6d8f5241b64802a846cf2617d789925f4/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccfc22b6d8f5241b64802a846cf2617d789925f4/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbackend.rs?ref=ccfc22b6d8f5241b64802a846cf2617d789925f4", "patch": "@@ -97,6 +97,7 @@ pub trait CodegenBackend {\n         &self,\n         ongoing_codegen: Box<dyn Any>,\n         sess: &Session,\n+        outputs: &OutputFilenames,\n     ) -> Result<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>), ErrorReported>;\n \n     /// This is called on the returned `Box<dyn Any>` from `join_codegen`"}, {"sha": "e635ee1e0ec8a44394df59e7a2b2069e3ae7e537", "filename": "compiler/rustc_interface/src/queries.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ccfc22b6d8f5241b64802a846cf2617d789925f4/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccfc22b6d8f5241b64802a846cf2617d789925f4/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs?ref=ccfc22b6d8f5241b64802a846cf2617d789925f4", "patch": "@@ -335,8 +335,11 @@ pub struct Linker {\n \n impl Linker {\n     pub fn link(self) -> Result<()> {\n-        let (codegen_results, work_products) =\n-            self.codegen_backend.join_codegen(self.ongoing_codegen, &self.sess)?;\n+        let (codegen_results, work_products) = self.codegen_backend.join_codegen(\n+            self.ongoing_codegen,\n+            &self.sess,\n+            &self.prepare_outputs,\n+        )?;\n \n         self.sess.compile_status()?;\n "}, {"sha": "8047a42c2b1768721e7d038a7ad9778484233593", "filename": "src/test/run-make-fulldeps/hotplug_codegen_backend/the_backend.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccfc22b6d8f5241b64802a846cf2617d789925f4/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2Fthe_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccfc22b6d8f5241b64802a846cf2617d789925f4/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2Fthe_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2Fthe_backend.rs?ref=ccfc22b6d8f5241b64802a846cf2617d789925f4", "patch": "@@ -46,6 +46,7 @@ impl CodegenBackend for TheBackend {\n         &self,\n         ongoing_codegen: Box<dyn Any>,\n         _sess: &Session,\n+        _outputs: &OutputFilenames,\n     ) -> Result<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>), ErrorReported> {\n         let codegen_results = ongoing_codegen\n             .downcast::<CodegenResults>()"}]}