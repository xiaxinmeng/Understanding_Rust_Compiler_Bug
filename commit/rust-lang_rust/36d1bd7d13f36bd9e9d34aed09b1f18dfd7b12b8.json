{"sha": "36d1bd7d13f36bd9e9d34aed09b1f18dfd7b12b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ZDFiZDdkMTNmMzZiZDllOWQzNGFlZDA5YjFmMThkZmQ3YjEyYjg=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-12-03T01:24:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-03T01:24:33Z"}, "message": "Merge pull request #2224 from kbacha/issue-2220\n\nCombine 3 repeated sections into a single section", "tree": {"sha": "82654eeabbc9bca334433cfec453191b1f31d503", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82654eeabbc9bca334433cfec453191b1f31d503"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36d1bd7d13f36bd9e9d34aed09b1f18dfd7b12b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaI1JRCRBK7hj4Ov3rIwAAdHIIAEqhGW5qDHM3V0e6LBcgDMg4\nY4ytqn0FDwkX5WlHrWvuLOwQE5rsWTfcJcZqm+gD0kNTdeypzqoWNfqZVc3Tvw+K\nbf+YN4Dgd6dSPqEtCkzfe93jeb8cmM6WRRdZtZlseF3SXay0SUG8p0rPb8cWUPx0\n9Zf2kmsezjN1kJ5vrNx8cCKv+2FGe6WOF28NMcixZUaar5bZ+o8Vs3kTFBV8abbb\nxqNCEcZZ9M8TRPed3PetQK2EZMVHpWQSfoOROfJ+K8rnBz0UBwAoTE14d8lORaOg\nhobmVfuJIrF4LrUo1zfBhdpd72rstrrgG0IVvAdyntE2pmFQlEDGXEdZJf/v1GQ=\n=poxp\n-----END PGP SIGNATURE-----\n", "payload": "tree 82654eeabbc9bca334433cfec453191b1f31d503\nparent 632ea1afdf3ff7b80f69db37d877cc45bd7f7d31\nparent 60e8af59a04a234984badea39c288968e466dea0\nauthor Nick Cameron <nrc@ncameron.org> 1512264273 +1300\ncommitter GitHub <noreply@github.com> 1512264273 +1300\n\nMerge pull request #2224 from kbacha/issue-2220\n\nCombine 3 repeated sections into a single section"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36d1bd7d13f36bd9e9d34aed09b1f18dfd7b12b8", "html_url": "https://github.com/rust-lang/rust/commit/36d1bd7d13f36bd9e9d34aed09b1f18dfd7b12b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36d1bd7d13f36bd9e9d34aed09b1f18dfd7b12b8/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "632ea1afdf3ff7b80f69db37d877cc45bd7f7d31", "url": "https://api.github.com/repos/rust-lang/rust/commits/632ea1afdf3ff7b80f69db37d877cc45bd7f7d31", "html_url": "https://github.com/rust-lang/rust/commit/632ea1afdf3ff7b80f69db37d877cc45bd7f7d31"}, {"sha": "60e8af59a04a234984badea39c288968e466dea0", "url": "https://api.github.com/repos/rust-lang/rust/commits/60e8af59a04a234984badea39c288968e466dea0", "html_url": "https://github.com/rust-lang/rust/commit/60e8af59a04a234984badea39c288968e466dea0"}], "stats": {"total": 56, "additions": 13, "deletions": 43}, "files": [{"sha": "42bd66da3539bbb08d7297c1801951c8b88fa3b4", "filename": "Configurations.md", "status": "modified", "additions": 13, "deletions": 43, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/36d1bd7d13f36bd9e9d34aed09b1f18dfd7b12b8/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/36d1bd7d13f36bd9e9d34aed09b1f18dfd7b12b8/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=36d1bd7d13f36bd9e9d34aed09b1f18dfd7b12b8", "patch": "@@ -1526,75 +1526,45 @@ let lorem = 0 .. 10;\n \n ## `spaces_within_parens_and_brackets`\n \n-Put spaces within non-empty generic arguments\n+Put spaces within non-empty generic arguments, parentheses, and square brackets\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n \n #### `false` (default):\n \n ```rust\n+// generic arguments\n fn lorem<T: Eq>(t: T) {\n     // body\n }\n-```\n-\n-#### `true`:\n-\n-```rust\n-fn lorem< T: Eq >(t: T) {\n-    // body\n-}\n-```\n-\n-See also: [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets), [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets).\n-\n-## `spaces_within_parens_and_brackets`\n-\n-Put spaces within non-empty parentheses\n-\n-- **Default value**: `false`\n-- **Possible values**: `true`, `false`\n \n-#### `false` (default):\n-\n-```rust\n+// non-empty parentheses\n fn lorem<T: Eq>(t: T) {\n     let lorem = (ipsum, dolor);\n }\n+\n+// non-empty square brackets\n+let lorem: [usize; 2] = [ipsum, dolor];\n ```\n \n #### `true`:\n \n ```rust\n+// generic arguments\n+fn lorem< T: Eq >(t: T) {\n+    // body\n+}\n+\n+// non-empty parentheses\n fn lorem<T: Eq>( t: T ) {\n     let lorem = ( ipsum, dolor );\n }\n-```\n-\n-See also: [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets), [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets).\n-\n-## `spaces_within_parens_and_brackets`\n-\n-Put spaces within non-empty square brackets\n-\n-- **Default value**: `false`\n-- **Possible values**: `true`, `false`\n \n-#### `false` (default):\n-\n-```rust\n-let lorem: [usize; 2] = [ipsum, dolor];\n-```\n-\n-#### `true`:\n-\n-```rust\n+// non-empty square brackets\n let lorem: [ usize; 2 ] = [ ipsum, dolor ];\n ```\n \n-See also: [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets), [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets).\n-\n ## `struct_lit_single_line`\n \n Put small struct literals on a single line"}]}