{"sha": "1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmYTVmOGYwNWI4NWEyMmJiOWZiOTRlNWQyZjAyNmIxMjRjNTE0Zjg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-01T23:25:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-01T23:25:10Z"}, "message": "Rollup merge of #76851 - fusion-engineering-forks:fixme-nonzero, r=petrochenkov\n\nFix 'FIXME' about using NonZeroU32 instead of u32.\n\nIt was blocked by #58732 (const fn NonZeroU32::new), which is fixed now.", "tree": {"sha": "c97e02996d01ac63d76e1b31c7028cc5480791f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c97e02996d01ac63d76e1b31c7028cc5480791f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfdmVWCRBK7hj4Ov3rIwAAdHIIAJtr6IqzGHeAcsLmcqYFsLsu\nC8VjwZIjC19VPIIFwmBG4B56WgMpc5qek3WyqK1wdb7F67NeF6eDMXOTosimwpEH\nPVraLGl8rQnwlOsfCPZBFPDOO5N+o13mR8fjpIKTX3zhEwtxzDeapywZBWdJg6JM\nkZjSiLzdXfIuySUgl4dOZEofTr1OvDE6aw/tK1/hgP5QZax4DZTuxwxJnILdvb5T\nAwYy89p9N39lXLbAVxEFxKCvzdbYGDwUD1WOhJ+LnDNqWiLEItWxOqW7uU1X0wKk\nQZbSWBR5YwDJ8jI3rcAOyiP6pdseYpMHZQR7Ygr8MbSciebbZp5mBbo32npqK80=\n=I7Ux\n-----END PGP SIGNATURE-----\n", "payload": "tree c97e02996d01ac63d76e1b31c7028cc5480791f3\nparent 8fe73e80d762bc575040239fc05fb1c612873554\nparent 2140d80a9d69cce7a9fb2c90051af4328737a446\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1601594710 +0900\ncommitter GitHub <noreply@github.com> 1601594710 +0900\n\nRollup merge of #76851 - fusion-engineering-forks:fixme-nonzero, r=petrochenkov\n\nFix 'FIXME' about using NonZeroU32 instead of u32.\n\nIt was blocked by #58732 (const fn NonZeroU32::new), which is fixed now.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8", "html_url": "https://github.com/rust-lang/rust/commit/1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fe73e80d762bc575040239fc05fb1c612873554", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fe73e80d762bc575040239fc05fb1c612873554", "html_url": "https://github.com/rust-lang/rust/commit/8fe73e80d762bc575040239fc05fb1c612873554"}, {"sha": "2140d80a9d69cce7a9fb2c90051af4328737a446", "url": "https://api.github.com/repos/rust-lang/rust/commits/2140d80a9d69cce7a9fb2c90051af4328737a446", "html_url": "https://github.com/rust-lang/rust/commit/2140d80a9d69cce7a9fb2c90051af4328737a446"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "e2492efb9d79ed4c758787765ff3b3fedb756aa8", "filename": "compiler/rustc_feature/src/accepted.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs?ref=1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8", "patch": "@@ -1,6 +1,6 @@\n //! List of the accepted feature gates.\n \n-use super::{Feature, State};\n+use super::{to_nonzero, Feature, State};\n use rustc_span::symbol::sym;\n \n macro_rules! declare_features {\n@@ -14,7 +14,7 @@ macro_rules! declare_features {\n                     state: State::Accepted,\n                     name: sym::$feature,\n                     since: $ver,\n-                    issue: $issue,\n+                    issue: to_nonzero($issue),\n                     edition: None,\n                     description: concat!($($doc,)*),\n                 }"}, {"sha": "060efd270dd5165ef2afd523254db69644bfd62d", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8", "patch": "@@ -1,6 +1,6 @@\n //! List of the active feature gates.\n \n-use super::{Feature, State};\n+use super::{to_nonzero, Feature, State};\n \n use rustc_span::edition::Edition;\n use rustc_span::symbol::{sym, Symbol};\n@@ -29,7 +29,7 @@ macro_rules! declare_features {\n                     state: State::Active { set: set!($feature) },\n                     name: sym::$feature,\n                     since: $ver,\n-                    issue: $issue,\n+                    issue: to_nonzero($issue),\n                     edition: $edition,\n                     description: concat!($($doc,)*),\n                 }"}, {"sha": "68ac2841fed70a62fafbcc9ae6ea04363c2b6b7b", "filename": "compiler/rustc_feature/src/lib.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8/compiler%2Frustc_feature%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8/compiler%2Frustc_feature%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Flib.rs?ref=1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8", "patch": "@@ -46,17 +46,11 @@ pub struct Feature {\n     pub state: State,\n     pub name: Symbol,\n     pub since: &'static str,\n-    issue: Option<u32>, // FIXME: once #58732 is done make this an Option<NonZeroU32>\n+    issue: Option<NonZeroU32>,\n     pub edition: Option<Edition>,\n     description: &'static str,\n }\n \n-impl Feature {\n-    fn issue(&self) -> Option<NonZeroU32> {\n-        self.issue.and_then(NonZeroU32::new)\n-    }\n-}\n-\n #[derive(Copy, Clone, Debug)]\n pub enum Stability {\n     Unstable,\n@@ -102,8 +96,8 @@ impl UnstableFeatures {\n fn find_lang_feature_issue(feature: Symbol) -> Option<NonZeroU32> {\n     if let Some(info) = ACTIVE_FEATURES.iter().find(|t| t.name == feature) {\n         // FIXME (#28244): enforce that active features have issue numbers\n-        // assert!(info.issue().is_some())\n-        info.issue()\n+        // assert!(info.issue.is_some())\n+        info.issue\n     } else {\n         // search in Accepted, Removed, or Stable Removed features\n         let found = ACCEPTED_FEATURES\n@@ -112,12 +106,21 @@ fn find_lang_feature_issue(feature: Symbol) -> Option<NonZeroU32> {\n             .chain(STABLE_REMOVED_FEATURES)\n             .find(|t| t.name == feature);\n         match found {\n-            Some(found) => found.issue(),\n+            Some(found) => found.issue,\n             None => panic!(\"feature `{}` is not declared anywhere\", feature),\n         }\n     }\n }\n \n+const fn to_nonzero(n: Option<u32>) -> Option<NonZeroU32> {\n+    // Can be replaced with `n.and_then(NonZeroU32::new)` if that is ever usable\n+    // in const context. Requires https://github.com/rust-lang/rfcs/pull/2632.\n+    match n {\n+        None => None,\n+        Some(n) => NonZeroU32::new(n),\n+    }\n+}\n+\n pub enum GateIssue {\n     Language,\n     Library(Option<NonZeroU32>),"}, {"sha": "a480ddc7f34b1f2e41b8004b300272ac6dbe73f6", "filename": "compiler/rustc_feature/src/removed.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs?ref=1fa5f8f05b85a22bb9fb94e5d2f026b124c514f8", "patch": "@@ -1,6 +1,6 @@\n //! List of the removed feature gates.\n \n-use super::{Feature, State};\n+use super::{to_nonzero, Feature, State};\n use rustc_span::symbol::sym;\n \n macro_rules! declare_features {\n@@ -14,7 +14,7 @@ macro_rules! declare_features {\n                     state: State::Removed { reason: $reason },\n                     name: sym::$feature,\n                     since: $ver,\n-                    issue: $issue,\n+                    issue: to_nonzero($issue),\n                     edition: None,\n                     description: concat!($($doc,)*),\n                 }\n@@ -32,7 +32,7 @@ macro_rules! declare_features {\n                     state: State::Stabilized { reason: None },\n                     name: sym::$feature,\n                     since: $ver,\n-                    issue: $issue,\n+                    issue: to_nonzero($issue),\n                     edition: None,\n                     description: concat!($($doc,)*),\n                 }"}]}