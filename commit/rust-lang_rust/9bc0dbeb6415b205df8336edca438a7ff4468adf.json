{"sha": "9bc0dbeb6415b205df8336edca438a7ff4468adf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliYzBkYmViNjQxNWIyMDVkZjgzMzZlZGNhNDM4YTdmZjQ0NjhhZGY=", "commit": {"author": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-08-22T16:15:49Z"}, "committer": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-08-22T16:15:49Z"}, "message": "Fix typos \u201can\u201d\u2192\u201ca\u201d and a few different ones that appeared in the same search", "tree": {"sha": "8c144a96381cfdde7d60b00d8a4e3065212929da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c144a96381cfdde7d60b00d8a4e3065212929da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bc0dbeb6415b205df8336edca438a7ff4468adf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bc0dbeb6415b205df8336edca438a7ff4468adf", "html_url": "https://github.com/rust-lang/rust/commit/9bc0dbeb6415b205df8336edca438a7ff4468adf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bc0dbeb6415b205df8336edca438a7ff4468adf/comments", "author": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25ebc35f973f9431b3a3ce03aae1df6d186e5a6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/25ebc35f973f9431b3a3ce03aae1df6d186e5a6c", "html_url": "https://github.com/rust-lang/rust/commit/25ebc35f973f9431b3a3ce03aae1df6d186e5a6c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a9bc89544d820cd5c0b592fdc9ee4d74c0057ff3", "filename": "src/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bc0dbeb6415b205df8336edca438a7ff4468adf/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bc0dbeb6415b205df8336edca438a7ff4468adf/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=9bc0dbeb6415b205df8336edca438a7ff4468adf", "patch": "@@ -401,7 +401,7 @@ fn rewrite_macro_inner(\n                 handle_vec_semi(context, shape, arg_vec, macro_name, style)\n             } else {\n                 // If we are rewriting `vec!` macro or other special macros,\n-                // then we can rewrite this as an usual array literal.\n+                // then we can rewrite this as a usual array literal.\n                 // Otherwise, we must preserve the original existence of trailing comma.\n                 let macro_name = &macro_name.as_str();\n                 let mut force_trailing_comma = if trailing_comma {"}, {"sha": "64ae15672df8ff1c88f3d749d6d2de14bff2f9c3", "filename": "src/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bc0dbeb6415b205df8336edca438a7ff4468adf/src%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bc0dbeb6415b205df8336edca438a7ff4468adf/src%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstring.rs?ref=9bc0dbeb6415b205df8336edca438a7ff4468adf", "patch": "@@ -153,7 +153,7 @@ pub(crate) fn rewrite_string<'a>(\n     wrap_str(result, fmt.config.max_width(), fmt.shape)\n }\n \n-/// Returns the index to the end of the URL if the split at index of the given string includes an\n+/// Returns the index to the end of the URL if the split at index of the given string includes a\n /// URL or alike. Otherwise, returns `None`.\n fn detect_url(s: &[&str], index: usize) -> Option<usize> {\n     let start = match s[..=index].iter().rposition(|g| is_whitespace(g)) {"}, {"sha": "4c71a2c6ab90b655bf18504e81899faf21db815d", "filename": "tests/source/cfg_if/detect/arch/x86.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bc0dbeb6415b205df8336edca438a7ff4468adf/tests%2Fsource%2Fcfg_if%2Fdetect%2Farch%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bc0dbeb6415b205df8336edca438a7ff4468adf/tests%2Fsource%2Fcfg_if%2Fdetect%2Farch%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fcfg_if%2Fdetect%2Farch%2Fx86.rs?ref=9bc0dbeb6415b205df8336edca438a7ff4468adf", "patch": "@@ -2,7 +2,7 @@\n //!\n //! The features are detected using the `detect_features` function below.\n //! This function uses the CPUID instruction to read the feature flags from the\n-//! CPU and encodes them in an `usize` where each bit position represents\n+//! CPU and encodes them in a `usize` where each bit position represents\n //! whether a feature is available (bit is set) or unavaiable (bit is cleared).\n //!\n //! The enum `Feature` is used to map bit positions to feature names, and the"}, {"sha": "b985dd8caa1ffa0ecbdd9fc5e2945424567d0025", "filename": "tests/target/cfg_if/detect/arch/x86.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9bc0dbeb6415b205df8336edca438a7ff4468adf/tests%2Ftarget%2Fcfg_if%2Fdetect%2Farch%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bc0dbeb6415b205df8336edca438a7ff4468adf/tests%2Ftarget%2Fcfg_if%2Fdetect%2Farch%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcfg_if%2Fdetect%2Farch%2Fx86.rs?ref=9bc0dbeb6415b205df8336edca438a7ff4468adf", "patch": "@@ -2,7 +2,7 @@\n //!\n //! The features are detected using the `detect_features` function below.\n //! This function uses the CPUID instruction to read the feature flags from the\n-//! CPU and encodes them in an `usize` where each bit position represents\n+//! CPU and encodes them in a `usize` where each bit position represents\n //! whether a feature is available (bit is set) or unavaiable (bit is cleared).\n //!\n //! The enum `Feature` is used to map bit positions to feature names, and the"}]}