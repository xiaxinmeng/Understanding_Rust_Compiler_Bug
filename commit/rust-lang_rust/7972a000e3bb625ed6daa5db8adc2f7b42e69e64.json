{"sha": "7972a000e3bb625ed6daa5db8adc2f7b42e69e64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5NzJhMDAwZTNiYjYyNWVkNmRhYTVkYjhhZGMyZjdiNDJlNjllNjQ=", "commit": {"author": {"name": "Jexell", "email": "Jexell@users.noreply.github.com", "date": "2015-06-03T15:14:35Z"}, "committer": {"name": "Jexell", "email": "Jexell@users.noreply.github.com", "date": "2015-06-03T15:14:35Z"}, "message": "Update linked_list.rs\n\nRemoved an unnecessary `transmute` and replaced some code with an equivalent method.", "tree": {"sha": "1b1f88387f511206e714b467832de1546aa2f3c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b1f88387f511206e714b467832de1546aa2f3c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7972a000e3bb625ed6daa5db8adc2f7b42e69e64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7972a000e3bb625ed6daa5db8adc2f7b42e69e64", "html_url": "https://github.com/rust-lang/rust/commit/7972a000e3bb625ed6daa5db8adc2f7b42e69e64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7972a000e3bb625ed6daa5db8adc2f7b42e69e64/comments", "author": {"login": "Jexell", "id": 100549305, "node_id": "U_kgDOBf5CuQ", "avatar_url": "https://avatars.githubusercontent.com/u/100549305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jexell", "html_url": "https://github.com/Jexell", "followers_url": "https://api.github.com/users/Jexell/followers", "following_url": "https://api.github.com/users/Jexell/following{/other_user}", "gists_url": "https://api.github.com/users/Jexell/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jexell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jexell/subscriptions", "organizations_url": "https://api.github.com/users/Jexell/orgs", "repos_url": "https://api.github.com/users/Jexell/repos", "events_url": "https://api.github.com/users/Jexell/events{/privacy}", "received_events_url": "https://api.github.com/users/Jexell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jexell", "id": 100549305, "node_id": "U_kgDOBf5CuQ", "avatar_url": "https://avatars.githubusercontent.com/u/100549305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jexell", "html_url": "https://github.com/Jexell", "followers_url": "https://api.github.com/users/Jexell/followers", "following_url": "https://api.github.com/users/Jexell/following{/other_user}", "gists_url": "https://api.github.com/users/Jexell/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jexell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jexell/subscriptions", "organizations_url": "https://api.github.com/users/Jexell/orgs", "repos_url": "https://api.github.com/users/Jexell/repos", "events_url": "https://api.github.com/users/Jexell/events{/privacy}", "received_events_url": "https://api.github.com/users/Jexell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f209d5a3e07b01de3a670689c4929870b40db7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f209d5a3e07b01de3a670689c4929870b40db7d", "html_url": "https://github.com/rust-lang/rust/commit/8f209d5a3e07b01de3a670689c4929870b40db7d"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "ca72bb56d73e20e4f53798769144a7f61d9373b1", "filename": "src/libcollections/linked_list.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7972a000e3bb625ed6daa5db8adc2f7b42e69e64/src%2Flibcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7972a000e3bb625ed6daa5db8adc2f7b42e69e64/src%2Flibcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flinked_list.rs?ref=7972a000e3bb625ed6daa5db8adc2f7b42e69e64", "patch": "@@ -107,16 +107,14 @@ impl<T> Rawlink<T> {\n     /// Convert the `Rawlink` into an Option value\n     fn resolve_immut<'a>(&self) -> Option<&'a T> {\n         unsafe {\n-            mem::transmute(self.p.as_ref())\n+            self.p.as_ref()\n         }\n     }\n \n     /// Convert the `Rawlink` into an Option value\n     fn resolve<'a>(&mut self) -> Option<&'a mut T> {\n-        if self.p.is_null() {\n-            None\n-        } else {\n-            Some(unsafe { mem::transmute(self.p) })\n+        unsafe {\n+            self.p.as_mut()\n         }\n     }\n "}]}