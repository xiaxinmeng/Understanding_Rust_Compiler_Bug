{"sha": "51fbd555f07febe07d2b8c5beab6f3520bebe460", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZmJkNTU1ZjA3ZmViZTA3ZDJiOGM1YmVhYjZmMzUyMGJlYmU0NjA=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-30T00:31:04Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-30T02:20:33Z"}, "message": "Bless tests", "tree": {"sha": "362b82c667743b4d5dc7c8c619299dd33ac24465", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/362b82c667743b4d5dc7c8c619299dd33ac24465"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51fbd555f07febe07d2b8c5beab6f3520bebe460", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51fbd555f07febe07d2b8c5beab6f3520bebe460", "html_url": "https://github.com/rust-lang/rust/commit/51fbd555f07febe07d2b8c5beab6f3520bebe460", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51fbd555f07febe07d2b8c5beab6f3520bebe460/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b400871b9c07951d79dd9158af44dfdebcb8ad65", "url": "https://api.github.com/repos/rust-lang/rust/commits/b400871b9c07951d79dd9158af44dfdebcb8ad65", "html_url": "https://github.com/rust-lang/rust/commit/b400871b9c07951d79dd9158af44dfdebcb8ad65"}], "stats": {"total": 313, "additions": 71, "deletions": 242}, "files": [{"sha": "3d1b5a08227569652484309536d72ce709932b4b", "filename": "src/test/ui/check-static-values-constraints.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fcheck-static-values-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fcheck-static-values-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-static-values-constraints.rs?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -78,7 +78,6 @@ struct MyOwned;\n \n static STATIC11: Box<MyOwned> = box MyOwned;\n //~^ ERROR allocations are not allowed in statics\n-//~| ERROR static contains unimplemented expression type\n \n static mut STATIC12: UnsafeStruct = UnsafeStruct;\n \n@@ -93,28 +92,22 @@ static mut STATIC14: SafeStruct = SafeStruct {\n \n static STATIC15: &'static [Box<MyOwned>] = &[\n     box MyOwned, //~ ERROR allocations are not allowed in statics\n-    //~| ERROR contains unimplemented expression\n     box MyOwned, //~ ERROR allocations are not allowed in statics\n-    //~| ERROR contains unimplemented expression\n ];\n \n static STATIC16: (&'static Box<MyOwned>, &'static Box<MyOwned>) = (\n     &box MyOwned, //~ ERROR allocations are not allowed in statics\n-    //~| ERROR contains unimplemented expression\n     &box MyOwned, //~ ERROR allocations are not allowed in statics\n-    //~| ERROR contains unimplemented expression\n );\n \n static mut STATIC17: SafeEnum = SafeEnum::Variant1;\n \n static STATIC19: Box<isize> =\n     box 3;\n //~^ ERROR allocations are not allowed in statics\n-    //~| ERROR contains unimplemented expression\n \n pub fn main() {\n     let y = { static x: Box<isize> = box 3; x };\n     //~^ ERROR allocations are not allowed in statics\n     //~| ERROR cannot move out of static item\n-    //~| ERROR contains unimplemented expression\n }"}, {"sha": "eb640c88e026f1c487225f5a90aeff19d88350b9", "filename": "src/test/ui/check-static-values-constraints.stderr", "status": "modified", "additions": 10, "deletions": 66, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fcheck-static-values-constraints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fcheck-static-values-constraints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-static-values-constraints.stderr?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -15,92 +15,44 @@ error[E0010]: allocations are not allowed in statics\n LL | static STATIC11: Box<MyOwned> = box MyOwned;\n    |                                 ^^^^^^^^^^^ allocation not allowed in statics\n \n-error[E0019]: static contains unimplemented expression type\n-  --> $DIR/check-static-values-constraints.rs:79:37\n-   |\n-LL | static STATIC11: Box<MyOwned> = box MyOwned;\n-   |                                     ^^^^^^^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/check-static-values-constraints.rs:90:32\n+  --> $DIR/check-static-values-constraints.rs:89:32\n    |\n LL |     field2: SafeEnum::Variant4(\"str\".to_string())\n    |                                ^^^^^^^^^^^^^^^^^\n \n error[E0010]: allocations are not allowed in statics\n-  --> $DIR/check-static-values-constraints.rs:95:5\n+  --> $DIR/check-static-values-constraints.rs:94:5\n    |\n LL |     box MyOwned,\n    |     ^^^^^^^^^^^ allocation not allowed in statics\n \n-error[E0019]: static contains unimplemented expression type\n-  --> $DIR/check-static-values-constraints.rs:95:9\n-   |\n-LL |     box MyOwned,\n-   |         ^^^^^^^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n error[E0010]: allocations are not allowed in statics\n-  --> $DIR/check-static-values-constraints.rs:97:5\n+  --> $DIR/check-static-values-constraints.rs:95:5\n    |\n LL |     box MyOwned,\n    |     ^^^^^^^^^^^ allocation not allowed in statics\n \n-error[E0019]: static contains unimplemented expression type\n-  --> $DIR/check-static-values-constraints.rs:97:9\n-   |\n-LL |     box MyOwned,\n-   |         ^^^^^^^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n error[E0010]: allocations are not allowed in statics\n-  --> $DIR/check-static-values-constraints.rs:102:6\n+  --> $DIR/check-static-values-constraints.rs:99:6\n    |\n LL |     &box MyOwned,\n    |      ^^^^^^^^^^^ allocation not allowed in statics\n \n-error[E0019]: static contains unimplemented expression type\n-  --> $DIR/check-static-values-constraints.rs:102:10\n-   |\n-LL |     &box MyOwned,\n-   |          ^^^^^^^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n error[E0010]: allocations are not allowed in statics\n-  --> $DIR/check-static-values-constraints.rs:104:6\n+  --> $DIR/check-static-values-constraints.rs:100:6\n    |\n LL |     &box MyOwned,\n    |      ^^^^^^^^^^^ allocation not allowed in statics\n \n-error[E0019]: static contains unimplemented expression type\n-  --> $DIR/check-static-values-constraints.rs:104:10\n-   |\n-LL |     &box MyOwned,\n-   |          ^^^^^^^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n error[E0010]: allocations are not allowed in statics\n-  --> $DIR/check-static-values-constraints.rs:111:5\n+  --> $DIR/check-static-values-constraints.rs:106:5\n    |\n LL |     box 3;\n    |     ^^^^^ allocation not allowed in statics\n \n-error[E0019]: static contains unimplemented expression type\n-  --> $DIR/check-static-values-constraints.rs:111:9\n-   |\n-LL |     box 3;\n-   |         ^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n error[E0507]: cannot move out of static item `x`\n-  --> $DIR/check-static-values-constraints.rs:116:45\n+  --> $DIR/check-static-values-constraints.rs:110:45\n    |\n LL |     let y = { static x: Box<isize> = box 3; x };\n    |                                             ^\n@@ -109,20 +61,12 @@ LL |     let y = { static x: Box<isize> = box 3; x };\n    |                                             help: consider borrowing here: `&x`\n \n error[E0010]: allocations are not allowed in statics\n-  --> $DIR/check-static-values-constraints.rs:116:38\n+  --> $DIR/check-static-values-constraints.rs:110:38\n    |\n LL |     let y = { static x: Box<isize> = box 3; x };\n    |                                      ^^^^^ allocation not allowed in statics\n \n-error[E0019]: static contains unimplemented expression type\n-  --> $DIR/check-static-values-constraints.rs:116:42\n-   |\n-LL |     let y = { static x: Box<isize> = box 3; x };\n-   |                                          ^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n-error: aborting due to 17 previous errors\n+error: aborting due to 10 previous errors\n \n-Some errors have detailed explanations: E0010, E0015, E0019, E0493, E0507.\n+Some errors have detailed explanations: E0010, E0015, E0493, E0507.\n For more information about an error, try `rustc --explain E0010`."}, {"sha": "d11b91edb88578ed0ab10bbc4a528c508b746538", "filename": "src/test/ui/const-suggest-feature.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fconst-suggest-feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fconst-suggest-feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-suggest-feature.rs?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -2,8 +2,6 @@ const WRITE: () = unsafe {\n     *std::ptr::null_mut() = 0;\n     //~^ ERROR dereferencing raw pointers in constants is unstable\n     //~| HELP add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n-    //~| ERROR constant contains unimplemented expression type\n-    //~| HELP add `#![feature(const_mut_refs)]` to the crate attributes to enable\n };\n \n fn main() {}"}, {"sha": "1ccc3d754ff00fda191e8aec7b83cf93cb453199", "filename": "src/test/ui/const-suggest-feature.stderr", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fconst-suggest-feature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fconst-suggest-feature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-suggest-feature.stderr?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -7,15 +7,6 @@ LL |     *std::ptr::null_mut() = 0;\n    = note: see issue #51911 <https://github.com/rust-lang/rust/issues/51911> for more information\n    = help: add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n \n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/const-suggest-feature.rs:2:5\n-   |\n-LL |     *std::ptr::null_mut() = 0;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0019, E0658.\n-For more information about an error, try `rustc --explain E0019`.\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "54067b462f819ba9204db7ac40cf3855d73ad43a", "filename": "src/test/ui/consts/const-extern-fn/const-extern-fn-min-const-fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fconsts%2Fconst-extern-fn%2Fconst-extern-fn-min-const-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fconsts%2Fconst-extern-fn%2Fconst-extern-fn-min-const-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-extern-fn%2Fconst-extern-fn-min-const-fn.stderr?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -1,8 +1,8 @@\n error[E0658]: function pointers cannot appear in constant functions\n-  --> $DIR/const-extern-fn-min-const-fn.rs:4:41\n+  --> $DIR/const-extern-fn-min-const-fn.rs:4:48\n    |\n LL | const unsafe extern \"C\" fn closure() -> fn() { || {} }\n-   |                                         ^^^^\n+   |                                                ^^^^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_fn_ptr_basics)]` to the crate attributes to enable"}, {"sha": "32eb1095e089bbe7967f0962512a1f69221e5973", "filename": "src/test/ui/consts/min_const_fn/cast_errors.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fcast_errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fcast_errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fcast_errors.stderr?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -1,8 +1,8 @@\n error[E0658]: function pointers cannot appear in constant functions\n-  --> $DIR/cast_errors.rs:4:23\n+  --> $DIR/cast_errors.rs:4:30\n    |\n LL | const fn closure() -> fn() { || {} }\n-   |                       ^^^^\n+   |                              ^^^^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_fn_ptr_basics)]` to the crate attributes to enable\n@@ -17,10 +17,10 @@ LL |     (|| {}) as fn();\n    = help: add `#![feature(const_fn_fn_ptr_basics)]` to the crate attributes to enable\n \n error[E0658]: function pointers cannot appear in constant functions\n-  --> $DIR/cast_errors.rs:10:28\n+  --> $DIR/cast_errors.rs:10:16\n    |\n LL | const fn reify(f: fn()) -> unsafe fn() { f }\n-   |                            ^^^^^^^^^^^\n+   |                ^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_fn_ptr_basics)]` to the crate attributes to enable"}, {"sha": "4c06aeb76c75fa334848bbf948d3eb68ae527d5d", "filename": "src/test/ui/consts/min_const_fn/min_const_fn.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.rs?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -40,7 +40,6 @@ impl<T> Foo<T> {\n     //~^ mutable references\n     //~| mutable references\n     //~| mutable references\n-    //~| mutable references\n }\n impl<'a, T> Foo<T> {\n     const fn new_lt(t: T) -> Self { Foo(t) }\n@@ -50,7 +49,6 @@ impl<'a, T> Foo<T> {\n     //~^ mutable references\n     //~| mutable references\n     //~| mutable references\n-    //~| mutable references\n }\n impl<T: Sized> Foo<T> {\n     const fn new_s(t: T) -> Self { Foo(t) }\n@@ -60,15 +58,13 @@ impl<T: Sized> Foo<T> {\n     //~^ mutable references\n     //~| mutable references\n     //~| mutable references\n-    //~| mutable references\n }\n impl<T: ?Sized> Foo<T> {\n     const fn get_sq(&self) -> &T { &self.0 }\n     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n     //~^ mutable references\n     //~| mutable references\n     //~| mutable references\n-    //~| mutable references\n }\n \n "}, {"sha": "638276a4d062e0e3b4efb029d2439dde1bbe3390", "filename": "src/test/ui/consts/min_const_fn/min_const_fn.stderr", "status": "modified", "additions": 32, "deletions": 68, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -6,15 +6,6 @@ LL |     const fn into_inner(self) -> T { self.0 }\n    |                         |\n    |                         constant functions cannot evaluate destructors\n \n-error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:39:36\n-   |\n-LL |     const fn get_mut(&mut self) -> &mut T { &mut self.0 }\n-   |                                    ^^^^^^\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/min_const_fn.rs:39:22\n    |\n@@ -43,24 +34,15 @@ LL |     const fn get_mut(&mut self) -> &mut T { &mut self.0 }\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0493]: destructors cannot be evaluated at compile-time\n-  --> $DIR/min_const_fn.rs:47:28\n+  --> $DIR/min_const_fn.rs:46:28\n    |\n LL |     const fn into_inner_lt(self) -> T { self.0 }\n    |                            ^^^^                - value is dropped here\n    |                            |\n    |                            constant functions cannot evaluate destructors\n \n error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:49:42\n-   |\n-LL |     const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }\n-   |                                          ^^^^^^\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n-error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:49:25\n+  --> $DIR/min_const_fn.rs:48:25\n    |\n LL |     const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }\n    |                         ^^^^^^^^^^^^\n@@ -69,7 +51,7 @@ LL |     const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:49:42\n+  --> $DIR/min_const_fn.rs:48:42\n    |\n LL |     const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }\n    |                                          ^^^^^^\n@@ -78,7 +60,7 @@ LL |     const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:49:51\n+  --> $DIR/min_const_fn.rs:48:51\n    |\n LL |     const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }\n    |                                                   ^^^^^^^^^^^\n@@ -87,24 +69,15 @@ LL |     const fn get_mut_lt(&'a mut self) -> &mut T { &mut self.0 }\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0493]: destructors cannot be evaluated at compile-time\n-  --> $DIR/min_const_fn.rs:57:27\n+  --> $DIR/min_const_fn.rs:55:27\n    |\n LL |     const fn into_inner_s(self) -> T { self.0 }\n    |                           ^^^^                - value is dropped here\n    |                           |\n    |                           constant functions cannot evaluate destructors\n \n error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:59:38\n-   |\n-LL |     const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }\n-   |                                      ^^^^^^\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n-error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:59:24\n+  --> $DIR/min_const_fn.rs:57:24\n    |\n LL |     const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }\n    |                        ^^^^^^^^^\n@@ -113,7 +86,7 @@ LL |     const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:59:38\n+  --> $DIR/min_const_fn.rs:57:38\n    |\n LL |     const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }\n    |                                      ^^^^^^\n@@ -122,7 +95,7 @@ LL |     const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:59:47\n+  --> $DIR/min_const_fn.rs:57:47\n    |\n LL |     const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }\n    |                                               ^^^^^^^^^^^\n@@ -131,16 +104,7 @@ LL |     const fn get_mut_s(&mut self) -> &mut T { &mut self.0 }\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:67:39\n-   |\n-LL |     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n-   |                                       ^^^^^^\n-   |\n-   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n-error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:67:25\n+  --> $DIR/min_const_fn.rs:64:25\n    |\n LL |     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n    |                         ^^^^^^^^^\n@@ -149,7 +113,7 @@ LL |     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:67:39\n+  --> $DIR/min_const_fn.rs:64:39\n    |\n LL |     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n    |                                       ^^^^^^\n@@ -158,7 +122,7 @@ LL |     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:67:48\n+  --> $DIR/min_const_fn.rs:64:48\n    |\n LL |     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n    |                                                ^^^^^^^^^^^\n@@ -167,7 +131,7 @@ LL |     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n-  --> $DIR/min_const_fn.rs:88:16\n+  --> $DIR/min_const_fn.rs:84:16\n    |\n LL | const fn foo11<T: std::fmt::Display>(t: T) -> T { t }\n    |                ^\n@@ -176,7 +140,7 @@ LL | const fn foo11<T: std::fmt::Display>(t: T) -> T { t }\n    = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n-  --> $DIR/min_const_fn.rs:90:18\n+  --> $DIR/min_const_fn.rs:86:18\n    |\n LL | const fn foo11_2<T: Send>(t: T) -> T { t }\n    |                  ^\n@@ -185,23 +149,23 @@ LL | const fn foo11_2<T: Send>(t: T) -> T { t }\n    = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error[E0013]: constant functions cannot refer to statics\n-  --> $DIR/min_const_fn.rs:94:27\n+  --> $DIR/min_const_fn.rs:90:27\n    |\n LL | const fn foo25() -> u32 { BAR }\n    |                           ^^^\n    |\n    = help: consider extracting the value of the `static` to a `const`, and referring to that\n \n error[E0013]: constant functions cannot refer to statics\n-  --> $DIR/min_const_fn.rs:95:37\n+  --> $DIR/min_const_fn.rs:91:37\n    |\n LL | const fn foo26() -> &'static u32 { &BAR }\n    |                                     ^^^\n    |\n    = help: consider extracting the value of the `static` to a `const`, and referring to that\n \n error[E0658]: casting pointers to integers in constant functions is unstable\n-  --> $DIR/min_const_fn.rs:96:42\n+  --> $DIR/min_const_fn.rs:92:42\n    |\n LL | const fn foo30(x: *const u32) -> usize { x as usize }\n    |                                          ^^^^^^^^^^\n@@ -210,7 +174,7 @@ LL | const fn foo30(x: *const u32) -> usize { x as usize }\n    = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n error[E0658]: casting pointers to integers in constant functions is unstable\n-  --> $DIR/min_const_fn.rs:98:63\n+  --> $DIR/min_const_fn.rs:94:63\n    |\n LL | const fn foo30_with_unsafe(x: *const u32) -> usize { unsafe { x as usize } }\n    |                                                               ^^^^^^^^^^\n@@ -219,7 +183,7 @@ LL | const fn foo30_with_unsafe(x: *const u32) -> usize { unsafe { x as usize }\n    = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n error[E0658]: casting pointers to integers in constant functions is unstable\n-  --> $DIR/min_const_fn.rs:100:42\n+  --> $DIR/min_const_fn.rs:96:42\n    |\n LL | const fn foo30_2(x: *mut u32) -> usize { x as usize }\n    |                                          ^^^^^^^^^^\n@@ -228,7 +192,7 @@ LL | const fn foo30_2(x: *mut u32) -> usize { x as usize }\n    = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n error[E0658]: casting pointers to integers in constant functions is unstable\n-  --> $DIR/min_const_fn.rs:102:63\n+  --> $DIR/min_const_fn.rs:98:63\n    |\n LL | const fn foo30_2_with_unsafe(x: *mut u32) -> usize { unsafe { x as usize } }\n    |                                                               ^^^^^^^^^^\n@@ -237,7 +201,7 @@ LL | const fn foo30_2_with_unsafe(x: *mut u32) -> usize { unsafe { x as usize }\n    = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/min_const_fn.rs:105:14\n+  --> $DIR/min_const_fn.rs:101:14\n    |\n LL | const fn inc(x: &mut i32) { *x += 1 }\n    |              ^\n@@ -246,7 +210,7 @@ LL | const fn inc(x: &mut i32) { *x += 1 }\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n-  --> $DIR/min_const_fn.rs:114:6\n+  --> $DIR/min_const_fn.rs:110:6\n    |\n LL | impl<T: std::fmt::Debug> Foo<T> {\n    |      ^\n@@ -255,7 +219,7 @@ LL | impl<T: std::fmt::Debug> Foo<T> {\n    = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n-  --> $DIR/min_const_fn.rs:119:6\n+  --> $DIR/min_const_fn.rs:115:6\n    |\n LL | impl<T: std::fmt::Debug + Sized> Foo<T> {\n    |      ^\n@@ -264,7 +228,7 @@ LL | impl<T: std::fmt::Debug + Sized> Foo<T> {\n    = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n-  --> $DIR/min_const_fn.rs:124:6\n+  --> $DIR/min_const_fn.rs:120:6\n    |\n LL | impl<T: Sync + Sized> Foo<T> {\n    |      ^\n@@ -273,7 +237,7 @@ LL | impl<T: Sync + Sized> Foo<T> {\n    = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n-  --> $DIR/min_const_fn.rs:130:34\n+  --> $DIR/min_const_fn.rs:126:34\n    |\n LL | const fn no_apit2(_x: AlanTuring<impl std::fmt::Debug>) {}\n    |                                  ^^^^^^^^^^^^^^^^^^^^\n@@ -282,7 +246,7 @@ LL | const fn no_apit2(_x: AlanTuring<impl std::fmt::Debug>) {}\n    = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n-  --> $DIR/min_const_fn.rs:132:22\n+  --> $DIR/min_const_fn.rs:128:22\n    |\n LL | const fn no_apit(_x: impl std::fmt::Debug) {}\n    |                      ^^^^^^^^^^^^^^^^^^^^\n@@ -291,7 +255,7 @@ LL | const fn no_apit(_x: impl std::fmt::Debug) {}\n    = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n-  --> $DIR/min_const_fn.rs:133:23\n+  --> $DIR/min_const_fn.rs:129:23\n    |\n LL | const fn no_dyn_trait(_x: &dyn std::fmt::Debug) {}\n    |                       ^^\n@@ -300,16 +264,16 @@ LL | const fn no_dyn_trait(_x: &dyn std::fmt::Debug) {}\n    = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n-  --> $DIR/min_const_fn.rs:134:32\n+  --> $DIR/min_const_fn.rs:130:63\n    |\n LL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }\n-   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                                               ^^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n-  --> $DIR/min_const_fn.rs:139:41\n+  --> $DIR/min_const_fn.rs:135:41\n    |\n LL | const fn really_no_traits_i_mean_it() { (&() as &dyn std::fmt::Debug, ()).1 }\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -318,7 +282,7 @@ LL | const fn really_no_traits_i_mean_it() { (&() as &dyn std::fmt::Debug, ()).1\n    = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error[E0658]: function pointers cannot appear in constant functions\n-  --> $DIR/min_const_fn.rs:142:21\n+  --> $DIR/min_const_fn.rs:138:21\n    |\n LL | const fn no_fn_ptrs(_x: fn()) {}\n    |                     ^^\n@@ -327,15 +291,15 @@ LL | const fn no_fn_ptrs(_x: fn()) {}\n    = help: add `#![feature(const_fn_fn_ptr_basics)]` to the crate attributes to enable\n \n error[E0658]: function pointers cannot appear in constant functions\n-  --> $DIR/min_const_fn.rs:144:27\n+  --> $DIR/min_const_fn.rs:140:27\n    |\n LL | const fn no_fn_ptrs2() -> fn() { fn foo() {} foo }\n    |                           ^^^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_fn_ptr_basics)]` to the crate attributes to enable\n \n-error: aborting due to 38 previous errors\n+error: aborting due to 34 previous errors\n \n Some errors have detailed explanations: E0013, E0493, E0658, E0723.\n For more information about an error, try `rustc --explain E0013`."}, {"sha": "fc5dffb37cfe743dac9c2c65c3301dc94f1ae91d", "filename": "src/test/ui/error-codes/E0010-teach.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0010-teach.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0010-teach.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0010-teach.rs?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -4,6 +4,5 @@\n #![allow(warnings)]\n \n const CON : Box<i32> = box 0; //~ ERROR E0010\n-//~^ ERROR constant contains unimplemented expression type\n \n fn main() {}"}, {"sha": "33de9fd685eb35fdbeb1a5956cd4f1ea0212d993", "filename": "src/test/ui/error-codes/E0010-teach.stderr", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0010-teach.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0010-teach.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0010-teach.stderr?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -6,17 +6,6 @@ LL | const CON : Box<i32> = box 0;\n    |\n    = note: The value of statics and constants must be known at compile time, and they live for the entire lifetime of a program. Creating a boxed value allocates memory on the heap at runtime, and therefore cannot be done at compile time.\n \n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/E0010-teach.rs:6:28\n-   |\n-LL | const CON : Box<i32> = box 0;\n-   |                            ^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-   = note: A function call isn't allowed in the const's initialization expression because the expression's value must be known at compile-time.\n-   = note: Remember: you can't use a function call inside a const's initialization expression! However, you can use it anywhere else.\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0010, E0019.\n-For more information about an error, try `rustc --explain E0010`.\n+For more information about this error, try `rustc --explain E0010`."}, {"sha": "e62997640f473e1ee2af953cdfc5a3542d7389be", "filename": "src/test/ui/error-codes/E0010.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0010.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0010.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0010.rs?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -2,6 +2,5 @@\n #![allow(warnings)]\n \n const CON : Box<i32> = box 0; //~ ERROR E0010\n-//~^ ERROR constant contains unimplemented expression type\n \n fn main() {}"}, {"sha": "0042333b98ad1423a84351341ba41bbdcefeaeda", "filename": "src/test/ui/error-codes/E0010.stderr", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0010.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0010.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0010.stderr?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -4,15 +4,6 @@ error[E0010]: allocations are not allowed in constants\n LL | const CON : Box<i32> = box 0;\n    |                        ^^^^^ allocation not allowed in constants\n \n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/E0010.rs:4:28\n-   |\n-LL | const CON : Box<i32> = box 0;\n-   |                            ^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0010, E0019.\n-For more information about an error, try `rustc --explain E0010`.\n+For more information about this error, try `rustc --explain E0010`."}, {"sha": "262f7bc72c739906486cfb90e531fefe24192bf0", "filename": "src/test/ui/error-codes/E0017.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0017.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0017.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0017.rs?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -5,8 +5,8 @@ static mut M: i32 = 3;\n const CR: &'static mut i32 = &mut C; //~ ERROR E0764\n                                      //~| WARN taking a mutable\n static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0764\n-                                              //~| ERROR E0019\n                                               //~| ERROR cannot borrow\n+\n static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0764\n                                               //~| WARN taking a mutable\n static STATIC_MUT_REF: &'static mut i32 = unsafe { &mut M }; //~ ERROR E0764"}, {"sha": "ea591587e6daa912f8eb37d43976d70cff782b97", "filename": "src/test/ui/error-codes/E0017.stderr", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0017.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0017.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0017.stderr?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -19,14 +19,6 @@ error[E0764]: mutable references are not allowed in constants\n LL | const CR: &'static mut i32 = &mut C;\n    |                              ^^^^^^ `&mut` is only allowed in `const fn`\n \n-error[E0019]: static contains unimplemented expression type\n-  --> $DIR/E0017.rs:7:39\n-   |\n-LL | static STATIC_REF: &'static mut i32 = &mut X;\n-   |                                       ^^^^^^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n error[E0764]: mutable references are not allowed in statics\n   --> $DIR/E0017.rs:7:39\n    |\n@@ -65,7 +57,7 @@ error[E0764]: mutable references are not allowed in statics\n LL | static STATIC_MUT_REF: &'static mut i32 = unsafe { &mut M };\n    |                                                    ^^^^^^ `&mut` is only allowed in `const fn`\n \n-error: aborting due to 6 previous errors; 2 warnings emitted\n+error: aborting due to 5 previous errors; 2 warnings emitted\n \n-Some errors have detailed explanations: E0019, E0596, E0764.\n-For more information about an error, try `rustc --explain E0019`.\n+Some errors have detailed explanations: E0596, E0764.\n+For more information about an error, try `rustc --explain E0596`."}, {"sha": "bb0c4979b9ac980faee839c6337887c3b1869a6f", "filename": "src/test/ui/error-codes/E0388.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0388.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0388.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0388.rs?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -3,9 +3,9 @@ const C: i32 = 2;\n \n const CR: &'static mut i32 = &mut C; //~ ERROR E0764\n                                      //~| WARN taking a mutable\n-static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0019\n-                                              //~| ERROR cannot borrow\n+static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR cannot borrow\n                                               //~| ERROR E0764\n+\n static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0764\n                                              //~| WARN taking a mutable\n "}, {"sha": "73e0b139cd056aa65c3b4c4dec91bd2036b02d01", "filename": "src/test/ui/error-codes/E0388.stderr", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0388.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Ferror-codes%2FE0388.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0388.stderr?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -19,14 +19,6 @@ error[E0764]: mutable references are not allowed in constants\n LL | const CR: &'static mut i32 = &mut C;\n    |                              ^^^^^^ `&mut` is only allowed in `const fn`\n \n-error[E0019]: static contains unimplemented expression type\n-  --> $DIR/E0388.rs:6:39\n-   |\n-LL | static STATIC_REF: &'static mut i32 = &mut X;\n-   |                                       ^^^^^^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n error[E0764]: mutable references are not allowed in statics\n   --> $DIR/E0388.rs:6:39\n    |\n@@ -59,7 +51,7 @@ error[E0764]: mutable references are not allowed in statics\n LL | static CONST_REF: &'static mut i32 = &mut C;\n    |                                      ^^^^^^ `&mut` is only allowed in `const fn`\n \n-error: aborting due to 5 previous errors; 2 warnings emitted\n+error: aborting due to 4 previous errors; 2 warnings emitted\n \n-Some errors have detailed explanations: E0019, E0596, E0764.\n-For more information about an error, try `rustc --explain E0019`.\n+Some errors have detailed explanations: E0596, E0764.\n+For more information about an error, try `rustc --explain E0596`."}, {"sha": "29a1644673d4ec4ae652328f8be7b121251453bd", "filename": "src/test/ui/issues/issue-7364.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fissues%2Fissue-7364.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fissues%2Fissue-7364.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7364.rs?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -6,6 +6,5 @@ use std::cell::RefCell;\n static boxed: Box<RefCell<isize>> = box RefCell::new(0);\n //~^ ERROR allocations are not allowed in statics\n //~| ERROR `RefCell<isize>` cannot be shared between threads safely [E0277]\n-//~| ERROR static contains unimplemented expression type\n \n fn main() { }"}, {"sha": "8ceb3be7ec913110853456edc191c7e75fcf42ad", "filename": "src/test/ui/issues/issue-7364.stderr", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fissues%2Fissue-7364.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fissues%2Fissue-7364.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7364.stderr?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -4,14 +4,6 @@ error[E0010]: allocations are not allowed in statics\n LL | static boxed: Box<RefCell<isize>> = box RefCell::new(0);\n    |                                     ^^^^^^^^^^^^^^^^^^^ allocation not allowed in statics\n \n-error[E0019]: static contains unimplemented expression type\n-  --> $DIR/issue-7364.rs:6:41\n-   |\n-LL | static boxed: Box<RefCell<isize>> = box RefCell::new(0);\n-   |                                         ^^^^^^^^^^^^^^^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n error[E0277]: `RefCell<isize>` cannot be shared between threads safely\n   --> $DIR/issue-7364.rs:6:1\n    |\n@@ -23,7 +15,7 @@ LL | static boxed: Box<RefCell<isize>> = box RefCell::new(0);\n    = note: required because it appears within the type `Box<RefCell<isize>>`\n    = note: shared static variables must have a type that implements `Sync`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0010, E0019, E0277.\n+Some errors have detailed explanations: E0010, E0277.\n For more information about an error, try `rustc --explain E0010`."}, {"sha": "2091fffd418ee68c3b315e16f01b5fbb0af6954b", "filename": "src/test/ui/static/static-mut-not-constant.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-not-constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-not-constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-not-constant.rs?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -2,6 +2,5 @@\n \n static mut a: Box<isize> = box 3;\n //~^ ERROR allocations are not allowed in statics\n-//~| ERROR static contains unimplemented expression type\n \n fn main() {}"}, {"sha": "a0fa245156f877e369cdaad136af48ff131bda5e", "filename": "src/test/ui/static/static-mut-not-constant.stderr", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-not-constant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-not-constant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-mut-not-constant.stderr?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -4,15 +4,6 @@ error[E0010]: allocations are not allowed in statics\n LL | static mut a: Box<isize> = box 3;\n    |                            ^^^^^ allocation not allowed in statics\n \n-error[E0019]: static contains unimplemented expression type\n-  --> $DIR/static-mut-not-constant.rs:3:32\n-   |\n-LL | static mut a: Box<isize> = box 3;\n-   |                                ^\n-   |\n-   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0010, E0019.\n-For more information about an error, try `rustc --explain E0010`.\n+For more information about this error, try `rustc --explain E0010`."}, {"sha": "5ce4296458e6d7ff273564f547da672d6c48223a", "filename": "src/test/ui/unsafe/ranged_ints2_const.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Funsafe%2Franged_ints2_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51fbd555f07febe07d2b8c5beab6f3520bebe460/src%2Ftest%2Fui%2Funsafe%2Franged_ints2_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Franged_ints2_const.stderr?ref=51fbd555f07febe07d2b8c5beab6f3520bebe460", "patch": "@@ -1,17 +1,17 @@\n error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/ranged_ints2_const.rs:11:9\n+  --> $DIR/ranged_ints2_const.rs:11:13\n    |\n LL |     let y = &mut x.0;\n-   |         ^\n+   |             ^^^^^^^^\n    |\n    = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0658]: mutable references are not allowed in constant functions\n-  --> $DIR/ranged_ints2_const.rs:18:9\n+  --> $DIR/ranged_ints2_const.rs:18:22\n    |\n LL |     let y = unsafe { &mut x.0 };\n-   |         ^\n+   |                      ^^^^^^^^\n    |\n    = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable"}]}