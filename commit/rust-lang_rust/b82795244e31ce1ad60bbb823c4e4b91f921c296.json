{"sha": "b82795244e31ce1ad60bbb823c4e4b91f921c296", "node_id": "C_kwDOAAsO6NoAKGI4Mjc5NTI0NGUzMWNlMWFkNjBiYmI4MjNjNGU0YjkxZjkyMWMyOTY", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-03-03T23:45:25Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-03-03T23:45:25Z"}, "message": "Associate multiple with a crate too.", "tree": {"sha": "d15cc8383c1abb95e6c577587732f352219545ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d15cc8383c1abb95e6c577587732f352219545ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b82795244e31ce1ad60bbb823c4e4b91f921c296", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b82795244e31ce1ad60bbb823c4e4b91f921c296", "html_url": "https://github.com/rust-lang/rust/commit/b82795244e31ce1ad60bbb823c4e4b91f921c296", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b82795244e31ce1ad60bbb823c4e4b91f921c296/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9035f7bef47c21b575af517dce309d96df4eb51", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9035f7bef47c21b575af517dce309d96df4eb51", "html_url": "https://github.com/rust-lang/rust/commit/e9035f7bef47c21b575af517dce309d96df4eb51"}], "stats": {"total": 55, "additions": 28, "deletions": 27}, "files": [{"sha": "6a74a19c83e3fa328e962fd652495195ed0b4a39", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -510,7 +510,7 @@ pub struct WhereEqPredicate {\n pub struct Crate {\n     pub attrs: Vec<Attribute>,\n     pub items: Vec<P<Item>>,\n-    pub span: Span,\n+    pub spans: ModSpans,\n     /// Must be equal to `CRATE_NODE_ID` after the crate root is expanded, but may hold\n     /// expansion placeholders or an unassigned value (`DUMMY_NODE_ID`) before that.\n     pub id: NodeId,"}, {"sha": "935886978924378f77862647261cabf24bda2fec", "filename": "compiler/rustc_ast/src/mut_visit.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -1108,11 +1108,12 @@ pub fn noop_visit_fn_header<T: MutVisitor>(header: &mut FnHeader, vis: &mut T) {\n }\n \n pub fn noop_visit_crate<T: MutVisitor>(krate: &mut Crate, vis: &mut T) {\n-    let Crate { attrs, items, span, id, is_placeholder: _ } = krate;\n+    let Crate { attrs, items, spans, id, is_placeholder: _ } = krate;\n     vis.visit_id(id);\n     visit_attrs(attrs, vis);\n     items.flat_map_in_place(|item| vis.flat_map_item(item));\n-    vis.visit_span(span);\n+    let ModSpans { inner_span } = spans;\n+    vis.visit_span(inner_span);\n }\n \n // Mutates one item into possibly many items.\n@@ -1536,7 +1537,7 @@ impl DummyAstNode for Crate {\n         Crate {\n             attrs: Default::default(),\n             items: Default::default(),\n-            span: Default::default(),\n+            spans: Default::default(),\n             id: DUMMY_NODE_ID,\n             is_placeholder: Default::default(),\n         }"}, {"sha": "1221dcd2bb371e84900a62d898b38091a3ca1870", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -456,7 +456,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         visit::walk_crate(&mut item::ItemLowerer { lctx: &mut self }, c);\n \n         self.with_hir_id_owner(CRATE_NODE_ID, |lctx| {\n-            let module = lctx.lower_mod(&c.items, c.span);\n+            let module = lctx.lower_mod(&c.items, c.spans.inner_span);\n             lctx.lower_attrs(hir::CRATE_HIR_ID, &c.attrs);\n             hir::OwnerNode::Crate(lctx.arena.alloc(module))\n         });"}, {"sha": "4bbeece2bdefcebb53dc4eaf4bf3349da706e591", "filename": "compiler/rustc_builtin_macros/src/test_harness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_builtin_macros%2Fsrc%2Ftest_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_builtin_macros%2Fsrc%2Ftest_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Ftest_harness.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -112,7 +112,7 @@ impl<'a> MutVisitor for TestHarnessGenerator<'a> {\n     fn visit_crate(&mut self, c: &mut ast::Crate) {\n         let prev_tests = mem::take(&mut self.tests);\n         noop_visit_crate(c, self);\n-        self.add_test_cases(ast::CRATE_NODE_ID, c.span, prev_tests);\n+        self.add_test_cases(ast::CRATE_NODE_ID, c.spans.inner_span, prev_tests);\n \n         // Create a main function to run our tests\n         c.items.push(mk_main(&mut self.cx));"}, {"sha": "1263f31f6aa1b9635373a5cd02a431550cec8d43", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -67,7 +67,7 @@ impl Annotatable {\n             Annotatable::Param(ref p) => p.span,\n             Annotatable::FieldDef(ref sf) => sf.span,\n             Annotatable::Variant(ref v) => v.span,\n-            Annotatable::Crate(ref c) => c.span,\n+            Annotatable::Crate(ref c) => c.spans.inner_span,\n         }\n     }\n "}, {"sha": "91c3e7dc1661a3c55ce157651d7aa9d2cc0e318e", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -12,7 +12,7 @@ use rustc_ast::token;\n use rustc_ast::tokenstream::TokenStream;\n use rustc_ast::visit::{self, AssocCtxt, Visitor};\n use rustc_ast::{AssocItemKind, AstLike, AstLikeWrapper, AttrStyle, ExprKind, ForeignItemKind};\n-use rustc_ast::{Inline, ItemKind, MacArgs, MacStmtStyle, MetaItemKind, ModKind, ModSpans};\n+use rustc_ast::{Inline, ItemKind, MacArgs, MacStmtStyle, MetaItemKind, ModKind};\n use rustc_ast::{NestedMetaItem, NodeId, PatKind, StmtKind, TyKind};\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::map_in_place::MapInPlace;\n@@ -364,7 +364,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n     }\n \n     pub fn expand_crate(&mut self, krate: ast::Crate) -> ast::Crate {\n-        let file_path = match self.cx.source_map().span_to_filename(krate.span) {\n+        let file_path = match self.cx.source_map().span_to_filename(krate.spans.inner_span) {\n             FileName::Real(name) => name\n                 .into_local_path()\n                 .expect(\"attempting to resolve a file path in an external file\"),\n@@ -1091,7 +1091,7 @@ impl InvocationCollectorNode for P<ast::Item> {\n             ModKind::Unloaded => {\n                 // We have an outline `mod foo;` so we need to parse the file.\n                 let old_attrs_len = attrs.len();\n-                let ParsedExternalMod { items, inner_span, file_path, dir_path, dir_ownership } =\n+                let ParsedExternalMod { items, spans, file_path, dir_path, dir_ownership } =\n                     parse_external_mod(\n                         &ecx.sess,\n                         ident,\n@@ -1112,7 +1112,7 @@ impl InvocationCollectorNode for P<ast::Item> {\n                     );\n                 }\n \n-                *mod_kind = ModKind::Loaded(items, Inline::No, ModSpans { inner_span });\n+                *mod_kind = ModKind::Loaded(items, Inline::No, spans);\n                 node.attrs = attrs;\n                 if node.attrs.len() > old_attrs_len {\n                     // If we loaded an out-of-line module and added some inner attributes,"}, {"sha": "2a059f3519d1e6367b76ca2650b392ee3ff63ab2", "filename": "compiler/rustc_expand/src/module.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_expand%2Fsrc%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_expand%2Fsrc%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmodule.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -28,7 +28,7 @@ pub struct ModulePathSuccess {\n \n crate struct ParsedExternalMod {\n     pub items: Vec<P<Item>>,\n-    pub inner_span: Span,\n+    pub spans: ModSpans,\n     pub file_path: PathBuf,\n     pub dir_path: PathBuf,\n     pub dir_ownership: DirOwnership,\n@@ -69,13 +69,13 @@ crate fn parse_external_mod(\n         (items, inner_span, mp.file_path)\n     };\n     // (1) ...instead, we return a dummy module.\n-    let (items, ModSpans { inner_span }, file_path) =\n+    let (items, spans, file_path) =\n         result.map_err(|err| err.report(sess, span)).unwrap_or_default();\n \n     // Extract the directory path for submodules of the module.\n     let dir_path = file_path.parent().unwrap_or(&file_path).to_owned();\n \n-    ParsedExternalMod { items, inner_span, file_path, dir_path, dir_ownership }\n+    ParsedExternalMod { items, spans, file_path, dir_path, dir_ownership }\n }\n \n crate fn mod_dir_path("}, {"sha": "15af5fdc5f8e22cb175c18129b44eaf699ba6199", "filename": "compiler/rustc_expand/src/placeholders.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -49,7 +49,7 @@ pub fn placeholder(\n         AstFragmentKind::Crate => AstFragment::Crate(ast::Crate {\n             attrs: Default::default(),\n             items: Default::default(),\n-            span,\n+            spans: ast::ModSpans { inner_span: span, ..Default::default() },\n             id,\n             is_placeholder: true,\n         }),"}, {"sha": "f667aec03c577f438c5b037d585367d4c42772f6", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -899,7 +899,7 @@ impl<'a> CrateLoader<'a> {\n \n     fn report_unused_deps(&mut self, krate: &ast::Crate) {\n         // Make a point span rather than covering the whole file\n-        let span = krate.span.shrink_to_lo();\n+        let span = krate.spans.inner_span.shrink_to_lo();\n         // Complain about anything left over\n         for (name, entry) in self.sess.opts.externs.iter() {\n             if let ExternLocation::FoundInLibrarySearchDirectories = entry.location {"}, {"sha": "a3e66464fbc8fdde4f45002a1c01d6830394a836", "filename": "compiler/rustc_parse/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_parse%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_parse%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flib.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -331,7 +331,7 @@ pub fn fake_token_stream(sess: &ParseSess, nt: &Nonterminal) -> TokenStream {\n pub fn fake_token_stream_for_crate(sess: &ParseSess, krate: &ast::Crate) -> TokenStream {\n     let source = pprust::crate_to_string_for_macros(krate);\n     let filename = FileName::macro_expansion_source_code(&source);\n-    parse_stream_from_source_str(filename, source, sess, Some(krate.span))\n+    parse_stream_from_source_str(filename, source, sess, Some(krate.spans.inner_span))\n }\n \n pub fn parse_cfg_attr("}, {"sha": "484a27fa59d6605bcaba560e1e216fb346686d3e", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -27,8 +27,7 @@ impl<'a> Parser<'a> {\n     /// Parses a source module as a crate. This is the main entry point for the parser.\n     pub fn parse_crate_mod(&mut self) -> PResult<'a, ast::Crate> {\n         let (attrs, items, spans) = self.parse_mod(&token::Eof)?;\n-        let span = spans.inner_span;\n-        Ok(ast::Crate { attrs, items, span, id: DUMMY_NODE_ID, is_placeholder: false })\n+        Ok(ast::Crate { attrs, items, spans, id: DUMMY_NODE_ID, is_placeholder: false })\n     }\n \n     /// Parses a `mod <foo> { ... }` or `mod <foo>;` item."}, {"sha": "9eedd9839eb5e779df25a800ad6abe5bcc2f91d6", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -1282,7 +1282,7 @@ impl<'a> Resolver<'a> {\n             None,\n             ModuleKind::Def(DefKind::Mod, root_def_id, kw::Empty),\n             ExpnId::root(),\n-            krate.span,\n+            krate.spans.inner_span,\n             session.contains_name(&krate.attrs, sym::no_implicit_prelude),\n             &mut module_map,\n         );\n@@ -1295,7 +1295,7 @@ impl<'a> Resolver<'a> {\n             &mut FxHashMap::default(),\n         );\n \n-        let definitions = Definitions::new(session.local_stable_crate_id(), krate.span);\n+        let definitions = Definitions::new(session.local_stable_crate_id(), krate.spans.inner_span);\n         let root = definitions.get_root_def();\n \n         let mut visibilities = FxHashMap::default();"}, {"sha": "1d28bbde79c1370bb95092ac25a0ce3cd040cdfc", "filename": "src/librustdoc/passes/collect_intra_doc_links/early.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -39,7 +39,7 @@ crate fn early_resolve_intra_doc_links(\n \n     // Overridden `visit_item` below doesn't apply to the crate root,\n     // so we have to visit its attributes and reexports separately.\n-    loader.load_links_in_attrs(&krate.attrs, krate.span);\n+    loader.load_links_in_attrs(&krate.attrs, krate.spans.inner_span);\n     loader.process_module_children_or_reexports(CRATE_DEF_ID.to_def_id());\n     visit::walk_crate(&mut loader, krate);\n     loader.add_foreign_traits_in_scope();"}, {"sha": "a456c10cf470a1304847b129d59ae2f3b02e094d", "filename": "src/test/ui/ast-json/ast-json-noexpand-output.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/src%2Ftest%2Fui%2Fast-json%2Fast-json-noexpand-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/src%2Ftest%2Fui%2Fast-json%2Fast-json-noexpand-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fast-json%2Fast-json-noexpand-output.stdout?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -1 +1 @@\n-{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"crate_type\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":{\"variant\":\"Eq\",\"fields\":[{\"lo\":0,\"hi\":0},{\"kind\":{\"variant\":\"Interpolated\",\"fields\":[{\"variant\":\"NtExpr\",\"fields\":[{\"id\":0,\"kind\":{\"variant\":\"Lit\",\"fields\":[{\"token\":{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null},\"kind\":{\"variant\":\"Str\",\"fields\":[\"lib\",\"Cooked\"]},\"span\":{\"lo\":0,\"hi\":0}}]},\"span\":{\"lo\":0,\"hi\":0},\"attrs\":{\"0\":null},\"tokens\":{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}}]}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Pound\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Joint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Not\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Delimited\",\"fields\":[{\"open\":{\"lo\":0,\"hi\":0},\"close\":{\"lo\":0,\"hi\":0}},\"Bracket\",{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"crate_type\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Eq\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}]},\"Alone\"]]}]},\"id\":null,\"style\":\"Inner\",\"span\":{\"lo\":0,\"hi\":0}}],\"items\":[{\"attrs\":[],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"core\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null}],\"span\":{\"lo\":0,\"hi\":0},\"id\":0,\"is_placeholder\":false}\n+{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"crate_type\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":{\"variant\":\"Eq\",\"fields\":[{\"lo\":0,\"hi\":0},{\"kind\":{\"variant\":\"Interpolated\",\"fields\":[{\"variant\":\"NtExpr\",\"fields\":[{\"id\":0,\"kind\":{\"variant\":\"Lit\",\"fields\":[{\"token\":{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null},\"kind\":{\"variant\":\"Str\",\"fields\":[\"lib\",\"Cooked\"]},\"span\":{\"lo\":0,\"hi\":0}}]},\"span\":{\"lo\":0,\"hi\":0},\"attrs\":{\"0\":null},\"tokens\":{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}}]}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Pound\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Joint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Not\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Delimited\",\"fields\":[{\"open\":{\"lo\":0,\"hi\":0},\"close\":{\"lo\":0,\"hi\":0}},\"Bracket\",{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"crate_type\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Eq\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}]},\"Alone\"]]}]},\"id\":null,\"style\":\"Inner\",\"span\":{\"lo\":0,\"hi\":0}}],\"items\":[{\"attrs\":[],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"core\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null}],\"spans\":{\"inner_span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"is_placeholder\":false}"}, {"sha": "d385c76039a561ed525e1f7c133186bb3054b41f", "filename": "src/test/ui/ast-json/ast-json-output.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.stdout?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -1 +1 @@\n-{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"crate_type\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":{\"variant\":\"Eq\",\"fields\":[{\"lo\":0,\"hi\":0},{\"kind\":{\"variant\":\"Interpolated\",\"fields\":[{\"variant\":\"NtExpr\",\"fields\":[{\"id\":0,\"kind\":{\"variant\":\"Lit\",\"fields\":[{\"token\":{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null},\"kind\":{\"variant\":\"Str\",\"fields\":[\"lib\",\"Cooked\"]},\"span\":{\"lo\":0,\"hi\":0}}]},\"span\":{\"lo\":0,\"hi\":0},\"attrs\":{\"0\":null},\"tokens\":{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}}]}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Pound\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Joint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Not\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Delimited\",\"fields\":[{\"open\":{\"lo\":0,\"hi\":0},\"close\":{\"lo\":0,\"hi\":0}},\"Bracket\",{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"crate_type\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Eq\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}]},\"Alone\"]]}]},\"id\":null,\"style\":\"Inner\",\"span\":{\"lo\":0,\"hi\":0}}],\"items\":[{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"prelude_import\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":\"Empty\",\"tokens\":null},null]},\"id\":null,\"style\":\"Outer\",\"span\":{\"lo\":0,\"hi\":0}}],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"Use\",\"fields\":[{\"prefix\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"{{root}}\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"std\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"prelude\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"rust_2015\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"kind\":\"Glob\",\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"macro_use\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":\"Empty\",\"tokens\":null},null]},\"id\":null,\"style\":\"Outer\",\"span\":{\"lo\":0,\"hi\":0}}],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"std\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null},{\"attrs\":[],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"core\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null}],\"span\":{\"lo\":0,\"hi\":0},\"id\":0,\"is_placeholder\":false}\n+{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"crate_type\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":{\"variant\":\"Eq\",\"fields\":[{\"lo\":0,\"hi\":0},{\"kind\":{\"variant\":\"Interpolated\",\"fields\":[{\"variant\":\"NtExpr\",\"fields\":[{\"id\":0,\"kind\":{\"variant\":\"Lit\",\"fields\":[{\"token\":{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null},\"kind\":{\"variant\":\"Str\",\"fields\":[\"lib\",\"Cooked\"]},\"span\":{\"lo\":0,\"hi\":0}}]},\"span\":{\"lo\":0,\"hi\":0},\"attrs\":{\"0\":null},\"tokens\":{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}}]}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Pound\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Joint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Not\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Delimited\",\"fields\":[{\"open\":{\"lo\":0,\"hi\":0},\"close\":{\"lo\":0,\"hi\":0}},\"Bracket\",{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"crate_type\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Eq\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}]},\"Alone\"]]}]},\"id\":null,\"style\":\"Inner\",\"span\":{\"lo\":0,\"hi\":0}}],\"items\":[{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"prelude_import\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":\"Empty\",\"tokens\":null},null]},\"id\":null,\"style\":\"Outer\",\"span\":{\"lo\":0,\"hi\":0}}],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"Use\",\"fields\":[{\"prefix\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"{{root}}\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"std\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"prelude\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"rust_2015\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"kind\":\"Glob\",\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"macro_use\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":\"Empty\",\"tokens\":null},null]},\"id\":null,\"style\":\"Outer\",\"span\":{\"lo\":0,\"hi\":0}}],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"std\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null},{\"attrs\":[],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"core\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null}],\"spans\":{\"inner_span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"is_placeholder\":false}"}, {"sha": "64d96a5c6a6e4c7ef3186209e2eceefe2748f80b", "filename": "src/tools/rustfmt/src/modules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/src%2Ftools%2Frustfmt%2Fsrc%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/src%2Ftools%2Frustfmt%2Fsrc%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Fmodules.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -124,7 +124,7 @@ impl<'ast, 'sess, 'c> ModResolver<'ast, 'sess> {\n         mut self,\n         krate: &'ast ast::Crate,\n     ) -> Result<FileModMap<'ast>, ModuleResolutionError> {\n-        let root_filename = self.parse_sess.span_to_filename(krate.span);\n+        let root_filename = self.parse_sess.span_to_filename(krate.spans.inner_span);\n         self.directory.path = match root_filename {\n             FileName::Real(ref p) => p.parent().unwrap_or(Path::new(\"\")).to_path_buf(),\n             _ => PathBuf::new(),\n@@ -135,7 +135,7 @@ impl<'ast, 'sess, 'c> ModResolver<'ast, 'sess> {\n             self.visit_mod_from_ast(&krate.items)?;\n         }\n \n-        let snippet_provider = self.parse_sess.snippet_provider(krate.span);\n+        let snippet_provider = self.parse_sess.snippet_provider(krate.spans.inner_span);\n \n         self.file_map.insert(\n             root_filename,"}, {"sha": "c44b2fc6ae354b683ea5b089828369bc96fb5ab3", "filename": "src/tools/rustfmt/src/visitor.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b82795244e31ce1ad60bbb823c4e4b91f921c296/src%2Ftools%2Frustfmt%2Fsrc%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82795244e31ce1ad60bbb823c4e4b91f921c296/src%2Ftools%2Frustfmt%2Fsrc%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Fvisitor.rs?ref=b82795244e31ce1ad60bbb823c4e4b91f921c296", "patch": "@@ -915,7 +915,8 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         let ident_str = rewrite_ident(&self.get_context(), ident).to_owned();\n         self.push_str(&ident_str);\n \n-        if let ast::ModKind::Loaded(ref items, ast::Inline::Yes, ast::ModSpans{ inner_span }) = mod_kind {\n+        if let ast::ModKind::Loaded(ref items, ast::Inline::Yes, ref spans) = mod_kind {\n+            let ast::ModSpans { inner_span } = *spans;\n             match self.config.brace_style() {\n                 BraceStyle::AlwaysNextLine => {\n                     let indent_str = self.block_indent.to_string_with_newline(self.config);"}]}