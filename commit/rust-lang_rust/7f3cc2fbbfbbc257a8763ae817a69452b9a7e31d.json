{"sha": "7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d", "node_id": "C_kwDOAAsO6NoAKDdmM2NjMmZiYmZiYmMyNTdhODc2M2FlODE3YTY5NDUyYjlhN2UzMWQ", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-04-06T14:04:18Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-04-14T18:53:11Z"}, "message": "library: Use type aliases to make `CStr(ing)` in libcore/liballoc unstable", "tree": {"sha": "4a07d582513528e76f45291d166f5da25f5f09dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a07d582513528e76f45291d166f5da25f5f09dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d", "html_url": "https://github.com/rust-lang/rust/commit/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bee741a08a267f68ac6c3d24dadfe927bd45008", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bee741a08a267f68ac6c3d24dadfe927bd45008", "html_url": "https://github.com/rust-lang/rust/commit/5bee741a08a267f68ac6c3d24dadfe927bd45008"}], "stats": {"total": 41, "additions": 28, "deletions": 13}, "files": [{"sha": "6a522c0cada76bf3f1592b81c956a31540d0e138", "filename": "library/alloc/src/ffi/c_str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Falloc%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Falloc%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fffi%2Fc_str.rs?ref=7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d", "patch": "@@ -106,7 +106,7 @@ use core::str::{self, Utf8Error};\n /// and other memory errors.\n #[derive(PartialEq, PartialOrd, Eq, Ord, Hash, Clone)]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"cstring_type\")]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[unstable(feature = \"alloc_c_string\", issue = \"94079\")]\n pub struct CString {\n     // Invariant 1: the slice ends with a zero byte and has a length of at least one.\n     // Invariant 2: the slice contains only one zero byte.\n@@ -130,7 +130,7 @@ pub struct CString {\n /// let _: NulError = CString::new(b\"f\\0oo\".to_vec()).unwrap_err();\n /// ```\n #[derive(Clone, PartialEq, Eq, Debug)]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[unstable(feature = \"alloc_c_string\", issue = \"94079\")]\n pub struct NulError(usize, Vec<u8>);\n \n #[derive(Clone, PartialEq, Eq, Debug)]\n@@ -155,7 +155,7 @@ enum FromBytesWithNulErrorKind {\n /// let _: FromVecWithNulError = CString::from_vec_with_nul(b\"f\\0oo\".to_vec()).unwrap_err();\n /// ```\n #[derive(Clone, PartialEq, Eq, Debug)]\n-#[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n+#[unstable(feature = \"alloc_c_string\", issue = \"94079\")]\n pub struct FromVecWithNulError {\n     error_kind: FromBytesWithNulErrorKind,\n     bytes: Vec<u8>,\n@@ -221,7 +221,7 @@ impl FromVecWithNulError {\n /// This `struct` is created by [`CString::into_string()`]. See\n /// its documentation for more.\n #[derive(Clone, PartialEq, Eq, Debug)]\n-#[stable(feature = \"cstring_into\", since = \"1.7.0\")]\n+#[unstable(feature = \"alloc_c_string\", issue = \"94079\")]\n pub struct IntoStringError {\n     inner: CString,\n     error: Utf8Error,"}, {"sha": "eed2851c1539b13e8eccc8ce63221876455583dc", "filename": "library/alloc/src/ffi/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Falloc%2Fsrc%2Fffi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Falloc%2Fsrc%2Fffi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fffi%2Fmod.rs?ref=7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d", "patch": "@@ -83,9 +83,9 @@\n #[cfg(bootstrap)]\n #[unstable(feature = \"cstr_internals\", issue = \"none\")]\n pub use self::c_str::CStrExt;\n-#[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n+#[unstable(feature = \"alloc_c_string\", issue = \"94079\")]\n pub use self::c_str::FromVecWithNulError;\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[unstable(feature = \"alloc_c_string\", issue = \"94079\")]\n pub use self::c_str::{CString, IntoStringError, NulError};\n \n mod c_str;"}, {"sha": "4d2dc4ecee0b80f566a983750dd3731ce73afa7c", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d", "patch": "@@ -86,6 +86,7 @@\n #![allow(explicit_outlives_requirements)]\n //\n // Library features:\n+#![cfg_attr(not(no_global_oom_handling), feature(alloc_c_string))]\n #![feature(alloc_layout_extra)]\n #![feature(allocator_api)]\n #![feature(array_chunks)]\n@@ -105,6 +106,7 @@\n #![feature(const_maybe_uninit_write)]\n #![feature(const_maybe_uninit_as_mut_ptr)]\n #![feature(const_refs_to_cell)]\n+#![feature(core_c_str)]\n #![feature(core_intrinsics)]\n #![feature(core_ffi_c)]\n #![feature(const_eval_select)]"}, {"sha": "8de159246c6e0693f6e60f19725e1ba6985f5252", "filename": "library/alloc/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Falloc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Falloc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Flib.rs?ref=7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d", "patch": "@@ -12,6 +12,7 @@\n #![feature(const_nonnull_slice_from_raw_parts)]\n #![feature(const_ptr_write)]\n #![feature(const_try)]\n+#![feature(core_c_str)]\n #![feature(core_ffi_c)]\n #![feature(core_intrinsics)]\n #![feature(drain_filter)]"}, {"sha": "15d9d013997bebba375db4391854498633fe6d61", "filename": "library/core/src/ffi/c_str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs?ref=7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d", "patch": "@@ -76,7 +76,7 @@ use crate::str;\n /// [str]: prim@str \"str\"\n #[derive(Hash)]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"CStr\")]\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[unstable(feature = \"core_c_str\", issue = \"94079\")]\n #[cfg_attr(not(bootstrap), lang = \"CStr\")]\n // FIXME:\n // `fn from` in `impl From<&CStr> for Box<CStr>` current implementation relies\n@@ -108,7 +108,7 @@ pub struct CStr {\n /// let _: FromBytesWithNulError = CStr::from_bytes_with_nul(b\"f\\0oo\").unwrap_err();\n /// ```\n #[derive(Clone, PartialEq, Eq, Debug)]\n-#[stable(feature = \"cstr_from_bytes\", since = \"1.10.0\")]\n+#[unstable(feature = \"core_c_str\", issue = \"94079\")]\n pub struct FromBytesWithNulError {\n     kind: FromBytesWithNulErrorKind,\n }"}, {"sha": "6c49521c223853ada5241bb591ac502164ab1e18", "filename": "library/core/src/ffi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Fcore%2Fsrc%2Fffi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Fcore%2Fsrc%2Fffi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi%2Fmod.rs?ref=7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d", "patch": "@@ -14,7 +14,7 @@ use crate::marker::PhantomData;\n use crate::num::*;\n use crate::ops::{Deref, DerefMut};\n \n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[unstable(feature = \"core_c_str\", issue = \"94079\")]\n pub use self::c_str::{CStr, FromBytesUntilNulError, FromBytesWithNulError};\n \n mod c_str;"}, {"sha": "0141a2bccdf161eac2c89aa2b8c9bfe22a94dbec", "filename": "library/std/src/ffi/mod.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs?ref=7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d", "patch": "@@ -146,14 +146,24 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n+/// See [alloc::ffi::FromVecWithNulError].\n #[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n-pub use alloc::ffi::FromVecWithNulError;\n+pub type FromVecWithNulError = alloc::ffi::FromVecWithNulError;\n+/// See [alloc::ffi::CString].\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use alloc::ffi::{CString, IntoStringError, NulError};\n+pub type CString = alloc::ffi::CString;\n+/// See [alloc::ffi::IntoStringError].\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use core::ffi::CStr;\n+pub type IntoStringError = alloc::ffi::IntoStringError;\n+/// See [alloc::ffi::NulError].\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub type NulError = alloc::ffi::NulError;\n+/// See [core::ffi::CStr].\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub type CStr = core::ffi::CStr;\n+/// See [core::ffi::FromBytesWithNulError].\n #[stable(feature = \"cstr_from_bytes\", since = \"1.10.0\")]\n-pub use core::ffi::FromBytesWithNulError;\n+pub type FromBytesWithNulError = core::ffi::FromBytesWithNulError;\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::os_str::{OsStr, OsString};"}, {"sha": "039e3d59a4d4053c034011b867cfd394fec2ecd4", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=7f3cc2fbbfbbc257a8763ae817a69452b9a7e31d", "patch": "@@ -260,6 +260,7 @@\n #![feature(atomic_mut_ptr)]\n #![feature(char_error_internals)]\n #![feature(char_internals)]\n+#![feature(core_c_str)]\n #![feature(core_intrinsics)]\n #![feature(cstr_from_bytes_until_nul)]\n #![feature(cstr_internals)]\n@@ -288,6 +289,7 @@\n //\n // Library features (alloc):\n #![feature(alloc_layout_extra)]\n+#![feature(alloc_c_string)]\n #![feature(allocator_api)]\n #![feature(get_mut_unchecked)]\n #![feature(map_try_insert)]"}]}