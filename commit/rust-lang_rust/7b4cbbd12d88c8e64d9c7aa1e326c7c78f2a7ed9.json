{"sha": "7b4cbbd12d88c8e64d9c7aa1e326c7c78f2a7ed9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiNGNiYmQxMmQ4OGM4ZTY0ZDljN2FhMWUzMjZjN2M3OGYyYTdlZDk=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-01-29T02:50:01Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-01-29T02:51:33Z"}, "message": "Document that `Index` ops can panic on `HashMap` & `BTreeMap`.\n\nFixes https://github.com/rust-lang/rust/issues/47011.", "tree": {"sha": "0102cb79109da30fd2c1ff54f5d949fe748842fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0102cb79109da30fd2c1ff54f5d949fe748842fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b4cbbd12d88c8e64d9c7aa1e326c7c78f2a7ed9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b4cbbd12d88c8e64d9c7aa1e326c7c78f2a7ed9", "html_url": "https://github.com/rust-lang/rust/commit/7b4cbbd12d88c8e64d9c7aa1e326c7c78f2a7ed9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b4cbbd12d88c8e64d9c7aa1e326c7c78f2a7ed9/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21882aad7299e8e859785845ac12374990f24dae", "url": "https://api.github.com/repos/rust-lang/rust/commits/21882aad7299e8e859785845ac12374990f24dae", "html_url": "https://github.com/rust-lang/rust/commit/21882aad7299e8e859785845ac12374990f24dae"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "b320bed54320a11da4581742c50f7e51e04a794d", "filename": "src/liballoc/btree/map.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7b4cbbd12d88c8e64d9c7aa1e326c7c78f2a7ed9/src%2Fliballoc%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b4cbbd12d88c8e64d9c7aa1e326c7c78f2a7ed9/src%2Fliballoc%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbtree%2Fmap.rs?ref=7b4cbbd12d88c8e64d9c7aa1e326c7c78f2a7ed9", "patch": "@@ -1748,6 +1748,11 @@ impl<'a, K: Ord, Q: ?Sized, V> Index<&'a Q> for BTreeMap<K, V>\n {\n     type Output = V;\n \n+    /// Returns a reference to the value corresponding to the supplied key.\n+    ///\n+    /// # Panics\n+    ///\n+    /// Panics if the key is not present in the `BTreeMap`.\n     #[inline]\n     fn index(&self, key: &Q) -> &V {\n         self.get(key).expect(\"no entry found for key\")"}, {"sha": "82a687ae5e4930cd9fa73d6113ba287f5873d0cb", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7b4cbbd12d88c8e64d9c7aa1e326c7c78f2a7ed9/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b4cbbd12d88c8e64d9c7aa1e326c7c78f2a7ed9/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=7b4cbbd12d88c8e64d9c7aa1e326c7c78f2a7ed9", "patch": "@@ -1384,9 +1384,14 @@ impl<'a, K, Q: ?Sized, V, S> Index<&'a Q> for HashMap<K, V, S>\n {\n     type Output = V;\n \n+    /// Returns a reference to the value corresponding to the supplied key.\n+    ///\n+    /// # Panics\n+    ///\n+    /// Panics if the key is not present in the `HashMap`.\n     #[inline]\n-    fn index(&self, index: &Q) -> &V {\n-        self.get(index).expect(\"no entry found for key\")\n+    fn index(&self, key: &Q) -> &V {\n+        self.get(key).expect(\"no entry found for key\")\n     }\n }\n "}]}