{"sha": "62cf9abcf6611c598894e9a8abac6c54a72d862d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyY2Y5YWJjZjY2MTFjNTk4ODk0ZTlhOGFiYWM2YzU0YTcyZDg2MmQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-15T07:59:49Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-15T07:59:49Z"}, "message": "rename FrameInfo span field to call_site", "tree": {"sha": "777e45e4851afc7310b52e1e89ead253ba42cbd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/777e45e4851afc7310b52e1e89ead253ba42cbd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62cf9abcf6611c598894e9a8abac6c54a72d862d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62cf9abcf6611c598894e9a8abac6c54a72d862d", "html_url": "https://github.com/rust-lang/rust/commit/62cf9abcf6611c598894e9a8abac6c54a72d862d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62cf9abcf6611c598894e9a8abac6c54a72d862d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b396505425ab0b0efbc5f399767c6983fc3511e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b396505425ab0b0efbc5f399767c6983fc3511e5", "html_url": "https://github.com/rust-lang/rust/commit/b396505425ab0b0efbc5f399767c6983fc3511e5"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "f3b58ee5cf19be85694939b882e2ed244f24decc", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62cf9abcf6611c598894e9a8abac6c54a72d862d/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62cf9abcf6611c598894e9a8abac6c54a72d862d/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=62cf9abcf6611c598894e9a8abac6c54a72d862d", "patch": "@@ -388,7 +388,7 @@ impl_stable_hash_for!(enum mir::interpret::ErrorHandled {\n });\n \n impl_stable_hash_for!(struct mir::interpret::FrameInfo<'tcx> {\n-    span,\n+    call_site,\n     lint_root,\n     instance\n });"}, {"sha": "8700f5d6e432f11e3fcfd04afdc39af47b035c3c", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/62cf9abcf6611c598894e9a8abac6c54a72d862d/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62cf9abcf6611c598894e9a8abac6c54a72d862d/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=62cf9abcf6611c598894e9a8abac6c54a72d862d", "patch": "@@ -57,7 +57,7 @@ pub struct ConstEvalErr<'tcx> {\n \n #[derive(Clone, Debug, RustcEncodable, RustcDecodable)]\n pub struct FrameInfo<'tcx> {\n-    pub span: Span,\n+    pub call_site: Span, // this span is in the caller!\n     pub instance: ty::Instance<'tcx>,\n     pub lint_root: Option<ast::NodeId>,\n }\n@@ -72,8 +72,8 @@ impl<'tcx> fmt::Display for FrameInfo<'tcx> {\n             } else {\n                 write!(f, \"inside call to `{}`\", self.instance)?;\n             }\n-            if !self.span.is_dummy() {\n-                let lo = tcx.sess.source_map().lookup_char_pos_adj(self.span.lo());\n+            if !self.call_site.is_dummy() {\n+                let lo = tcx.sess.source_map().lookup_char_pos_adj(self.call_site.lo());\n                 write!(f, \" at {}:{}:{}\", lo.filename, lo.line, lo.col.to_usize() + 1)?;\n             }\n             Ok(())\n@@ -159,7 +159,7 @@ impl<'a, 'gcx, 'tcx> ConstEvalErr<'tcx> {\n         // on constant values.\n         if self.stacktrace.len() > 0 {\n             for frame_info in &self.stacktrace[..self.stacktrace.len()-1] {\n-                err.span_label(frame_info.span, frame_info.to_string());\n+                err.span_label(frame_info.call_site, frame_info.to_string());\n             }\n         }\n         Ok(err)"}, {"sha": "dbda506d115af256d3c0d05e9a532b2ebb8a63d4", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62cf9abcf6611c598894e9a8abac6c54a72d862d/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62cf9abcf6611c598894e9a8abac6c54a72d862d/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=62cf9abcf6611c598894e9a8abac6c54a72d862d", "patch": "@@ -679,7 +679,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n                 mir::ClearCrossCrate::Set(ref ivs) => Some(ivs[source_info.scope].lint_root),\n                 mir::ClearCrossCrate::Clear => None,\n             };\n-            frames.push(FrameInfo { span, instance, lint_root });\n+            frames.push(FrameInfo { call_site: span, instance, lint_root });\n         }\n         trace!(\"generate stacktrace: {:#?}, {:?}\", frames, explicit_span);\n         frames"}]}