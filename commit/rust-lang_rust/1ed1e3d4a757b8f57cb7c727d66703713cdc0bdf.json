{"sha": "1ed1e3d4a757b8f57cb7c727d66703713cdc0bdf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZDFlM2Q0YTc1N2I4ZjU3Y2I3YzcyN2Q2NjcwMzcxM2NkYzBiZGY=", "commit": {"author": {"name": "L\u00fac\u00e1s Meier", "email": "cronokirby@gmail.com", "date": "2019-10-04T06:21:24Z"}, "committer": {"name": "L\u00fac\u00e1s Meier", "email": "cronokirby@gmail.com", "date": "2019-10-04T06:21:24Z"}, "message": "Fix formatting", "tree": {"sha": "a712373088abbdf04b2c573bbe8c5f3b44ce8bd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a712373088abbdf04b2c573bbe8c5f3b44ce8bd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ed1e3d4a757b8f57cb7c727d66703713cdc0bdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ed1e3d4a757b8f57cb7c727d66703713cdc0bdf", "html_url": "https://github.com/rust-lang/rust/commit/1ed1e3d4a757b8f57cb7c727d66703713cdc0bdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ed1e3d4a757b8f57cb7c727d66703713cdc0bdf/comments", "author": {"login": "cronokirby", "id": 22821947, "node_id": "MDQ6VXNlcjIyODIxOTQ3", "avatar_url": "https://avatars.githubusercontent.com/u/22821947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cronokirby", "html_url": "https://github.com/cronokirby", "followers_url": "https://api.github.com/users/cronokirby/followers", "following_url": "https://api.github.com/users/cronokirby/following{/other_user}", "gists_url": "https://api.github.com/users/cronokirby/gists{/gist_id}", "starred_url": "https://api.github.com/users/cronokirby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cronokirby/subscriptions", "organizations_url": "https://api.github.com/users/cronokirby/orgs", "repos_url": "https://api.github.com/users/cronokirby/repos", "events_url": "https://api.github.com/users/cronokirby/events{/privacy}", "received_events_url": "https://api.github.com/users/cronokirby/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cronokirby", "id": 22821947, "node_id": "MDQ6VXNlcjIyODIxOTQ3", "avatar_url": "https://avatars.githubusercontent.com/u/22821947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cronokirby", "html_url": "https://github.com/cronokirby", "followers_url": "https://api.github.com/users/cronokirby/followers", "following_url": "https://api.github.com/users/cronokirby/following{/other_user}", "gists_url": "https://api.github.com/users/cronokirby/gists{/gist_id}", "starred_url": "https://api.github.com/users/cronokirby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cronokirby/subscriptions", "organizations_url": "https://api.github.com/users/cronokirby/orgs", "repos_url": "https://api.github.com/users/cronokirby/repos", "events_url": "https://api.github.com/users/cronokirby/events{/privacy}", "received_events_url": "https://api.github.com/users/cronokirby/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e769a54502648011ede7d7434e0a16a8ab740c56", "url": "https://api.github.com/repos/rust-lang/rust/commits/e769a54502648011ede7d7434e0a16a8ab740c56", "html_url": "https://github.com/rust-lang/rust/commit/e769a54502648011ede7d7434e0a16a8ab740c56"}], "stats": {"total": 31, "additions": 9, "deletions": 22}, "files": [{"sha": "caecc50cc807a390391beb39230450f7b2bf9140", "filename": "crates/ra_assists/src/assists/apply_demorgan.rs", "status": "modified", "additions": 9, "deletions": 22, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/1ed1e3d4a757b8f57cb7c727d66703713cdc0bdf/crates%2Fra_assists%2Fsrc%2Fassists%2Fapply_demorgan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ed1e3d4a757b8f57cb7c727d66703713cdc0bdf/crates%2Fra_assists%2Fsrc%2Fassists%2Fapply_demorgan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fapply_demorgan.rs?ref=1ed1e3d4a757b8f57cb7c727d66703713cdc0bdf", "patch": "@@ -2,8 +2,8 @@\n //! This assist transforms boolean expressions of the form `!a || !b` into\n //! `!(a && b)`.\n use hir::db::HirDatabase;\n-use ra_syntax::SyntaxNode;\n use ra_syntax::ast::{AstNode, BinExpr, BinOp, Expr, PrefixOp};\n+use ra_syntax::SyntaxNode;\n \n use crate::{Assist, AssistCtx, AssistId};\n \n@@ -25,16 +25,16 @@ fn undo_negation(node: SyntaxNode) -> Option<String> {\n                 let rhs = bin.rhs()?.syntax().text();\n                 Some(format!(\"{} == {}\", lhs, rhs))\n             }\n-            _ => None\n-        }\n+            _ => None,\n+        },\n         Expr::PrefixExpr(pe) => match pe.op_kind()? {\n             PrefixOp::Not => {\n                 let child = pe.expr()?.syntax().text();\n                 Some(String::from(child))\n             }\n-            _ => None\n-        }\n-        _ => None\n+            _ => None,\n+        },\n+        _ => None,\n     }\n }\n \n@@ -60,7 +60,6 @@ pub(crate) fn apply_demorgan(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Ass\n     let not_lhs = undo_negation(lhs)?;\n     let not_rhs = undo_negation(rhs)?;\n \n-\n     ctx.add_action(AssistId(\"apply_demorgan\"), \"apply demorgan's law\", |edit| {\n         edit.target(op_range);\n         edit.replace(op_range, opposite_op);\n@@ -78,29 +77,17 @@ mod tests {\n \n     #[test]\n     fn demorgan_turns_and_into_or() {\n-        check_assist(\n-            apply_demorgan,\n-            \"fn f() { !x &&<|> !x }\",\n-            \"fn f() { !(x ||<|> x) }\"\n-        )\n+        check_assist(apply_demorgan, \"fn f() { !x &&<|> !x }\", \"fn f() { !(x ||<|> x) }\")\n     }\n \n     #[test]\n     fn demorgan_turns_or_into_and() {\n-        check_assist(\n-            apply_demorgan,\n-            \"fn f() { !x ||<|> !x }\",\n-            \"fn f() { !(x &&<|> x) }\"\n-        )\n+        check_assist(apply_demorgan, \"fn f() { !x ||<|> !x }\", \"fn f() { !(x &&<|> x) }\")\n     }\n \n     #[test]\n     fn demorgan_removes_inequality() {\n-        check_assist(\n-            apply_demorgan,\n-            \"fn f() { x != x ||<|> !x }\",\n-            \"fn f() { !(x == x &&<|> x) }\"\n-        )\n+        check_assist(apply_demorgan, \"fn f() { x != x ||<|> !x }\", \"fn f() { !(x == x &&<|> x) }\")\n     }\n \n     #[test]"}]}