{"sha": "273b54d6ac8deb304b337b00483ad06193c1146a", "node_id": "C_kwDOAAsO6NoAKDI3M2I1NGQ2YWM4ZGViMzA0YjMzN2IwMDQ4M2FkMDYxOTNjMTE0NmE", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-09-10T08:16:27Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-10-01T14:19:52Z"}, "message": "Add FIXME.", "tree": {"sha": "92c79d96cb9a7160fd49228e93e0cc030db20678", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92c79d96cb9a7160fd49228e93e0cc030db20678"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/273b54d6ac8deb304b337b00483ad06193c1146a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/273b54d6ac8deb304b337b00483ad06193c1146a", "html_url": "https://github.com/rust-lang/rust/commit/273b54d6ac8deb304b337b00483ad06193c1146a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/273b54d6ac8deb304b337b00483ad06193c1146a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af495f8bb6d1357a9449d2772e5c180db543d123", "url": "https://api.github.com/repos/rust-lang/rust/commits/af495f8bb6d1357a9449d2772e5c180db543d123", "html_url": "https://github.com/rust-lang/rust/commit/af495f8bb6d1357a9449d2772e5c180db543d123"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "cfec4b23f389c7b3e234fceb61bfb4d6b5b694a9", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/273b54d6ac8deb304b337b00483ad06193c1146a/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/273b54d6ac8deb304b337b00483ad06193c1146a/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=273b54d6ac8deb304b337b00483ad06193c1146a", "patch": "@@ -911,6 +911,8 @@ impl<'s, P: LintLevelsProvider> LintLevelsBuilder<'s, P> {\n     /// Checks if the lint is gated on a feature that is not enabled.\n     ///\n     /// Returns `true` if the lint's feature is enabled.\n+    // FIXME only emit this once for each attribute, instead of repeating it 4 times for\n+    // pre-expansion lints, post-expansion lints, `shallow_lint_levels_on` and `lint_expectations`.\n     fn check_gated_lint(&self, lint_id: LintId, span: Span) -> bool {\n         if let Some(feature) = lint_id.lint.feature_gate {\n             if !self.sess.features_untracked().enabled(feature) {"}]}