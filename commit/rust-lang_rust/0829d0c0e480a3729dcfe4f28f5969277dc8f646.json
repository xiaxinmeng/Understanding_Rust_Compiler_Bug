{"sha": "0829d0c0e480a3729dcfe4f28f5969277dc8f646", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MjlkMGMwZTQ4MGEzNzI5ZGNmZTRmMjhmNTk2OTI3N2RjOGY2NDY=", "commit": {"author": {"name": "William Brown", "email": "william@blackhats.net.au", "date": "2018-12-19T02:40:57Z"}, "committer": {"name": "William Brown", "email": "william@blackhats.net.au", "date": "2018-12-19T02:40:57Z"}, "message": "Updates based on comment", "tree": {"sha": "cd258532180b187be1f5beb4697ad7666ce0fb69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd258532180b187be1f5beb4697ad7666ce0fb69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0829d0c0e480a3729dcfe4f28f5969277dc8f646", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0829d0c0e480a3729dcfe4f28f5969277dc8f646", "html_url": "https://github.com/rust-lang/rust/commit/0829d0c0e480a3729dcfe4f28f5969277dc8f646", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0829d0c0e480a3729dcfe4f28f5969277dc8f646/comments", "author": {"login": "Firstyear", "id": 271005, "node_id": "MDQ6VXNlcjI3MTAwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/271005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Firstyear", "html_url": "https://github.com/Firstyear", "followers_url": "https://api.github.com/users/Firstyear/followers", "following_url": "https://api.github.com/users/Firstyear/following{/other_user}", "gists_url": "https://api.github.com/users/Firstyear/gists{/gist_id}", "starred_url": "https://api.github.com/users/Firstyear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Firstyear/subscriptions", "organizations_url": "https://api.github.com/users/Firstyear/orgs", "repos_url": "https://api.github.com/users/Firstyear/repos", "events_url": "https://api.github.com/users/Firstyear/events{/privacy}", "received_events_url": "https://api.github.com/users/Firstyear/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Firstyear", "id": 271005, "node_id": "MDQ6VXNlcjI3MTAwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/271005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Firstyear", "html_url": "https://github.com/Firstyear", "followers_url": "https://api.github.com/users/Firstyear/followers", "following_url": "https://api.github.com/users/Firstyear/following{/other_user}", "gists_url": "https://api.github.com/users/Firstyear/gists{/gist_id}", "starred_url": "https://api.github.com/users/Firstyear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Firstyear/subscriptions", "organizations_url": "https://api.github.com/users/Firstyear/orgs", "repos_url": "https://api.github.com/users/Firstyear/repos", "events_url": "https://api.github.com/users/Firstyear/events{/privacy}", "received_events_url": "https://api.github.com/users/Firstyear/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00bd306e0d060fc737d670e9aacd2789d3103785", "url": "https://api.github.com/repos/rust-lang/rust/commits/00bd306e0d060fc737d670e9aacd2789d3103785", "html_url": "https://github.com/rust-lang/rust/commit/00bd306e0d060fc737d670e9aacd2789d3103785"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "7492cf4c5ed327c9b4b549146924abe7372d26c6", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0829d0c0e480a3729dcfe4f28f5969277dc8f646/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0829d0c0e480a3729dcfe4f28f5969277dc8f646/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=0829d0c0e480a3729dcfe4f28f5969277dc8f646", "patch": "@@ -531,9 +531,9 @@ pub unsafe fn zeroed<T>() -> T {\n /// includes a `panic` occurring and unwinding the stack suddenly.\n ///\n /// If you partially initialize an array, you may need to use\n-/// [`ptr::drop_in_place`][drop_in_place] to remove the set you have created\n-/// followed by [`mem::forget`][mem_forget] to prevent drop running on the\n-/// array. If a partially allocated array is dropped this may lead to\n+/// [`ptr::drop_in_place`][drop_in_place] to remove the elements you have fully\n+/// initialized followed by [`mem::forget`][mem_forget] to prevent drop running\n+/// on the array. If a partially allocated array is dropped this will lead to\n /// undefined behaviour.\n ///\n /// # Examples\n@@ -589,7 +589,7 @@ pub unsafe fn zeroed<T>() -> T {\n /// println!(\"{:?}\", &data[0]);\n /// ```\n ///\n-/// This example shows how to handle partially allocated arrays, which could\n+/// This example shows how to handle partially initialized arrays, which could\n /// be found in low-level datastructures.\n ///\n /// ```\n@@ -618,10 +618,6 @@ pub unsafe fn zeroed<T>() -> T {\n /// mem::forget(data);\n /// ```\n ///\n-/// An alternate strategy is to use [`mem::zeroed`][mem_zeroed] with ptr\n-/// comparison. This is a very error prone strategy and may only be relevant\n-/// for FFI.\n-///\n /// [`Vec`]: ../../std/vec/struct.Vec.html\n /// [`vec!`]: ../../std/macro.vec.html\n /// [`Clone`]: ../../std/clone/trait.Clone.html"}]}