{"sha": "b00db7c75b85d521a17372750512111657baaea2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMGRiN2M3NWI4NWQ1MjFhMTczNzI3NTA1MTIxMTE2NTdiYWFlYTI=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-03-05T15:54:20Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-05-03T12:03:16Z"}, "message": "Instrument `statement_effect_on_borrows` for the `lhs = &place` case.", "tree": {"sha": "6a0c2c13834b9bbf5c4997acbbc5dd8c09b549a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a0c2c13834b9bbf5c4997acbbc5dd8c09b549a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b00db7c75b85d521a17372750512111657baaea2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b00db7c75b85d521a17372750512111657baaea2", "html_url": "https://github.com/rust-lang/rust/commit/b00db7c75b85d521a17372750512111657baaea2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b00db7c75b85d521a17372750512111657baaea2/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c3fd02a4cf1769988ea3f91da54e3c1cacdd9ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c3fd02a4cf1769988ea3f91da54e3c1cacdd9ef", "html_url": "https://github.com/rust-lang/rust/commit/1c3fd02a4cf1769988ea3f91da54e3c1cacdd9ef"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "098ad8e558fa968f26bf2c3d681e802fee5f5ae4", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b00db7c75b85d521a17372750512111657baaea2/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b00db7c75b85d521a17372750512111657baaea2/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=b00db7c75b85d521a17372750512111657baaea2", "patch": "@@ -179,8 +179,14 @@ impl<'a, 'gcx, 'tcx> BitDenotation for Borrows<'a, 'gcx, 'tcx> {\n                     if let RegionKind::ReEmpty = region {\n                         // If the borrowed value dies before the borrow is used, the region for\n                         // the borrow can be empty. Don't track the borrow in that case.\n+                        debug!(\"Borrows::statement_effect_on_borrows \\\n+                                location: {:?} stmt: {:?} has empty region, killing {:?}\",\n+                               location, stmt.kind, index);\n                         sets.kill(&index);\n                         return\n+                    } else {\n+                        debug!(\"Borrows::statement_effect_on_borrows location: {:?} stmt: {:?}\",\n+                               location, stmt.kind);\n                     }\n \n                     assert!(self.borrow_set.region_map.get(region).unwrap_or_else(|| {"}]}