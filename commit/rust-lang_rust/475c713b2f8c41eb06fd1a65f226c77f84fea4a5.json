{"sha": "475c713b2f8c41eb06fd1a65f226c77f84fea4a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NWM3MTNiMmY4YzQxZWIwNmZkMWE2NWYyMjZjNzdmODRmZWE0YTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-08T23:28:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-08T23:28:06Z"}, "message": "Auto merge of #66194 - alexcrichton:update-clang, r=Mark-Simulacrum\n\nUpdate Clang & build MSVC LLVM with it\n\nThis is a general update of our builders to Clang 9, and then it also attempts to tackle a bit of #66192 by building LLVM for rustc with Clang, not with the system `cl.exe` on MSVC.", "tree": {"sha": "6bf9559808bd71f8a32a081310416751699109fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bf9559808bd71f8a32a081310416751699109fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/475c713b2f8c41eb06fd1a65f226c77f84fea4a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/475c713b2f8c41eb06fd1a65f226c77f84fea4a5", "html_url": "https://github.com/rust-lang/rust/commit/475c713b2f8c41eb06fd1a65f226c77f84fea4a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e346646e93cc243567e27bb0f4e8716d56ad1f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e346646e93cc243567e27bb0f4e8716d56ad1f1", "html_url": "https://github.com/rust-lang/rust/commit/9e346646e93cc243567e27bb0f4e8716d56ad1f1"}, {"sha": "a7b0beac6da684a005c91ecc8f652989f9174887", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7b0beac6da684a005c91ecc8f652989f9174887", "html_url": "https://github.com/rust-lang/rust/commit/a7b0beac6da684a005c91ecc8f652989f9174887"}], "stats": {"total": 54, "additions": 38, "deletions": 16}, "files": [{"sha": "836f81a7816569cb613f07ae56bcf867db738575", "filename": "src/ci/azure-pipelines/auto.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/src%2Fci%2Fazure-pipelines%2Fauto.yml", "raw_url": "https://github.com/rust-lang/rust/raw/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/src%2Fci%2Fazure-pipelines%2Fauto.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fauto.yml?ref=475c713b2f8c41eb06fd1a65f226c77f84fea4a5", "patch": "@@ -318,7 +318,7 @@ jobs:\n       # 32/64 bit MSVC and GNU deployment\n       dist-x86_64-msvc:\n         MSYS_BITS: 64\n-        RUST_CONFIGURE_ARGS: >\n+        RUST_CONFIGURE_ARGS: >-\n           --build=x86_64-pc-windows-msvc\n           --target=x86_64-pc-windows-msvc,aarch64-pc-windows-msvc\n           --enable-full-tools\n@@ -328,7 +328,7 @@ jobs:\n         DEPLOY: 1\n       dist-i686-msvc:\n         MSYS_BITS: 32\n-        RUST_CONFIGURE_ARGS: >\n+        RUST_CONFIGURE_ARGS: >-\n           --build=i686-pc-windows-msvc\n           --target=i586-pc-windows-msvc\n           --enable-full-tools"}, {"sha": "ad675830b7799ce8b27fe8115fe28f0dbeca5dd4", "filename": "src/ci/docker/dist-i686-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile?ref=475c713b2f8c41eb06fd1a65f226c77f84fea4a5", "patch": "@@ -69,7 +69,7 @@ RUN ./build-python.sh\n \n # Now build LLVM+Clang 7, afterwards configuring further compilations to use the\n # clang/clang++ compilers.\n-COPY dist-x86_64-linux/build-clang.sh /tmp/\n+COPY dist-x86_64-linux/build-clang.sh dist-x86_64-linux/llvm-project-centos.patch /tmp/\n RUN ./build-clang.sh\n ENV CC=clang CXX=clang++\n "}, {"sha": "2f2a10a0e90ae58c8c562041c290622c19699695", "filename": "src/ci/docker/dist-x86_64-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile?ref=475c713b2f8c41eb06fd1a65f226c77f84fea4a5", "patch": "@@ -69,7 +69,7 @@ RUN ./build-python.sh\n \n # Now build LLVM+Clang 7, afterwards configuring further compilations to use the\n # clang/clang++ compilers.\n-COPY dist-x86_64-linux/build-clang.sh /tmp/\n+COPY dist-x86_64-linux/build-clang.sh dist-x86_64-linux/llvm-project-centos.patch /tmp/\n RUN ./build-clang.sh\n ENV CC=clang CXX=clang++\n "}, {"sha": "518f6ef9b701dc249c0924788856f2d78905192e", "filename": "src/ci/docker/dist-x86_64-linux/build-clang.sh", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-clang.sh", "raw_url": "https://github.com/rust-lang/rust/raw/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-clang.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fbuild-clang.sh?ref=475c713b2f8c41eb06fd1a65f226c77f84fea4a5", "patch": "@@ -4,14 +4,17 @@ set -ex\n \n source shared.sh\n \n-LLVM=llvmorg-8.0.0-rc2\n+LLVM=llvmorg-9.0.0\n \n mkdir llvm-project\n cd llvm-project\n \n curl -L https://github.com/llvm/llvm-project/archive/$LLVM.tar.gz | \\\n   tar xzf - --strip-components=1\n \n+yum install -y patch\n+patch -Np1 < ../llvm-project-centos.patch\n+\n mkdir clang-build\n cd clang-build\n "}, {"sha": "52650062cc4026cae473dabfdcb91c89bf90c819", "filename": "src/ci/docker/dist-x86_64-linux/llvm-project-centos.patch", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fllvm-project-centos.patch", "raw_url": "https://github.com/rust-lang/rust/raw/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fllvm-project-centos.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2Fllvm-project-centos.patch?ref=475c713b2f8c41eb06fd1a65f226c77f84fea4a5", "patch": "@@ -0,0 +1,18 @@\n+diff --git a/clang/lib/DirectoryWatcher/linux/DirectoryWatcher-linux.cpp b/clang/lib/DirectoryWatcher/linux/DirectoryWatcher-linux.cpp\n+index 176d6d6abf3..a6d63bf24b8 100644\n+--- a/clang/lib/DirectoryWatcher/linux/DirectoryWatcher-linux.cpp\n++++ b/clang/lib/DirectoryWatcher/linux/DirectoryWatcher-linux.cpp\n+@@ -33,6 +33,13 @@ namespace {\n+ using namespace llvm;\n+ using namespace clang;\n+ \n++#define EPOLL_CLOEXEC -1\n++#define IN_CLOEXEC -1\n++#define O_CLOEXEC -1\n++static int epoll_create1(int flags) { return -1; }\n++static int inotify_init1(int flags) { return -1; }\n++static int pipe2(int *fds, int flags) { return -1; }\n++\n+ /// Pipe for inter-thread synchronization - for epoll-ing on multiple\n+ /// conditions. It is meant for uni-directional 1:1 signalling - specifically:\n+ /// no multiple consumers, no data passing. Thread waiting for signal should"}, {"sha": "b1e9bf92ca5d2444b284c741b40aa908e595b3e9", "filename": "src/ci/scripts/install-clang.sh", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/src%2Fci%2Fscripts%2Finstall-clang.sh", "raw_url": "https://github.com/rust-lang/rust/raw/475c713b2f8c41eb06fd1a65f226c77f84fea4a5/src%2Fci%2Fscripts%2Finstall-clang.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-clang.sh?ref=475c713b2f8c41eb06fd1a65f226c77f84fea4a5", "patch": "@@ -9,10 +9,10 @@ IFS=$'\\n\\t'\n source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n \n if isMacOS; then\n-    curl -f \"${MIRRORS_BASE}/clang%2Bllvm-7.0.0-x86_64-apple-darwin.tar.xz\" | tar xJf -\n+    curl -f \"${MIRRORS_BASE}/clang%2Bllvm-9.0.0-x86_64-darwin-apple.tar.xz\" | tar xJf -\n \n-    ciCommandSetEnv CC \"$(pwd)/clang+llvm-7.0.0-x86_64-apple-darwin/bin/clang\"\n-    ciCommandSetEnv CXX \"$(pwd)/clang+llvm-7.0.0-x86_64-apple-darwin/bin/clang++\"\n+    ciCommandSetEnv CC \"$(pwd)/clang+llvm-9.0.0-x86_64-darwin-apple/bin/clang\"\n+    ciCommandSetEnv CXX \"$(pwd)/clang+llvm-9.0.0-x86_64-darwin-apple/bin/clang++\"\n \n     # Configure `AR` specifically so rustbuild doesn't try to infer it as\n     # `clang-ar` by accident.\n@@ -27,17 +27,18 @@ elif isWindows && [[ -z ${MINGW_URL+x} ]]; then\n     # Note that the LLVM installer is an NSIS installer\n     #\n     # Original downloaded here came from\n-    # http://releases.llvm.org/7.0.0/LLVM-7.0.0-win64.exe\n-    # That installer was run through `wine` on Linux and then the resulting\n-    # installation directory (found in `$HOME/.wine/drive_c/Program Files/LLVM`) was\n-    # packaged up into a tarball. We've had issues otherwise that the installer will\n-    # randomly hang, provide not a lot of useful information, pollute global state,\n-    # etc. In general the tarball is just more confined and easier to deal with when\n-    # working with various CI environments.\n+    # http://releases.llvm.org/9.0.0/LLVM-9.0.0-win64.exe\n+    # That installer was run through `wine ./installer.exe /S /NCRC` on Linux\n+    # and then the resulting installation directory (found in\n+    # `$HOME/.wine/drive_c/Program Files/LLVM`) was packaged up into a tarball.\n+    # We've had issues otherwise that the installer will randomly hang, provide\n+    # not a lot of useful information, pollute global state, etc. In general the\n+    # tarball is just more confined and easier to deal with when working with\n+    # various CI environments.\n \n     mkdir -p citools\n     cd citools\n-    curl -f \"${MIRRORS_BASE}/LLVM-7.0.0-win64.tar.gz\" | tar xzf -\n+    curl -f \"${MIRRORS_BASE}/LLVM-9.0.0-win64.tar.gz\" | tar xzf -\n     ciCommandSetEnv RUST_CONFIGURE_ARGS \\\n         \"${RUST_CONFIGURE_ARGS} --set llvm.clang-cl=$(pwd)/clang-rust/bin/clang-cl.exe\"\n fi"}]}