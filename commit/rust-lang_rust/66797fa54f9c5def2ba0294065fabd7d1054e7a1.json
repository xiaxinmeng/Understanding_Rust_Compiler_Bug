{"sha": "66797fa54f9c5def2ba0294065fabd7d1054e7a1", "node_id": "C_kwDOAAsO6NoAKDY2Nzk3ZmE1NGY5YzVkZWYyYmEwMjk0MDY1ZmFiZDdkMTA1NGU3YTE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-01T08:38:47Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-01T08:38:47Z"}, "message": "Remove needless `Cow`", "tree": {"sha": "bdf5e9636698ca8a9a33382a68327dab80358735", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdf5e9636698ca8a9a33382a68327dab80358735"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66797fa54f9c5def2ba0294065fabd7d1054e7a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66797fa54f9c5def2ba0294065fabd7d1054e7a1", "html_url": "https://github.com/rust-lang/rust/commit/66797fa54f9c5def2ba0294065fabd7d1054e7a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66797fa54f9c5def2ba0294065fabd7d1054e7a1/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2166ec628ba41351cb9720ccc5f1db5703d3584", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2166ec628ba41351cb9720ccc5f1db5703d3584", "html_url": "https://github.com/rust-lang/rust/commit/c2166ec628ba41351cb9720ccc5f1db5703d3584"}], "stats": {"total": 38, "additions": 12, "deletions": 26}, "files": [{"sha": "08cce3d76832a7319ce9e138a555ffc7d56715d5", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/66797fa54f9c5def2ba0294065fabd7d1054e7a1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66797fa54f9c5def2ba0294065fabd7d1054e7a1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=66797fa54f9c5def2ba0294065fabd7d1054e7a1", "patch": "@@ -100,13 +100,9 @@ impl<'tcx> HasLocalDecls<'tcx> for Body<'tcx> {\n /// pass will be named after the type, and it will consist of a main\n /// loop that goes over each available MIR and applies `run_pass`.\n pub trait MirPass<'tcx> {\n-    fn name(&self) -> Cow<'_, str> {\n+    fn name(&self) -> &str {\n         let name = std::any::type_name::<Self>();\n-        if let Some(tail) = name.rfind(':') {\n-            Cow::from(&name[tail + 1..])\n-        } else {\n-            Cow::from(name)\n-        }\n+        if let Some((_, tail)) = name.rsplit_once(':') { tail } else { name }\n     }\n \n     /// Returns `true` if this pass is enabled with the current combination of compiler flags."}, {"sha": "778ae63c5a42e1c0d20c41debce93dfcaacefd39", "filename": "compiler/rustc_mir_transform/src/dump_mir.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/66797fa54f9c5def2ba0294065fabd7d1054e7a1/compiler%2Frustc_mir_transform%2Fsrc%2Fdump_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66797fa54f9c5def2ba0294065fabd7d1054e7a1/compiler%2Frustc_mir_transform%2Fsrc%2Fdump_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdump_mir.rs?ref=66797fa54f9c5def2ba0294065fabd7d1054e7a1", "patch": "@@ -1,6 +1,5 @@\n //! This pass just dumps MIR at a specified point.\n \n-use std::borrow::Cow;\n use std::fs::File;\n use std::io;\n \n@@ -13,8 +12,8 @@ use rustc_session::config::{OutputFilenames, OutputType};\n pub struct Marker(pub &'static str);\n \n impl<'tcx> MirPass<'tcx> for Marker {\n-    fn name(&self) -> Cow<'_, str> {\n-        Cow::Borrowed(self.0)\n+    fn name(&self) -> &str {\n+        self.0\n     }\n \n     fn run_pass(&self, _tcx: TyCtxt<'tcx>, _body: &mut Body<'tcx>) {}"}, {"sha": "74add635bd5924db5aa71168b0d56e7e256fd260", "filename": "compiler/rustc_mir_transform/src/pass_manager.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/66797fa54f9c5def2ba0294065fabd7d1054e7a1/compiler%2Frustc_mir_transform%2Fsrc%2Fpass_manager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66797fa54f9c5def2ba0294065fabd7d1054e7a1/compiler%2Frustc_mir_transform%2Fsrc%2Fpass_manager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fpass_manager.rs?ref=66797fa54f9c5def2ba0294065fabd7d1054e7a1", "patch": "@@ -1,5 +1,3 @@\n-use std::borrow::Cow;\n-\n use rustc_middle::mir::{self, Body, MirPhase, RuntimePhase};\n use rustc_middle::ty::TyCtxt;\n use rustc_session::Session;\n@@ -8,13 +6,9 @@ use crate::{validate, MirPass};\n \n /// Just like `MirPass`, except it cannot mutate `Body`.\n pub trait MirLint<'tcx> {\n-    fn name(&self) -> Cow<'_, str> {\n+    fn name(&self) -> &str {\n         let name = std::any::type_name::<Self>();\n-        if let Some(tail) = name.rfind(':') {\n-            Cow::from(&name[tail + 1..])\n-        } else {\n-            Cow::from(name)\n-        }\n+        if let Some((_, tail)) = name.rsplit_once(':') { tail } else { name }\n     }\n \n     fn is_enabled(&self, _sess: &Session) -> bool {\n@@ -32,7 +26,7 @@ impl<'tcx, T> MirPass<'tcx> for Lint<T>\n where\n     T: MirLint<'tcx>,\n {\n-    fn name(&self) -> Cow<'_, str> {\n+    fn name(&self) -> &str {\n         self.0.name()\n     }\n \n@@ -55,7 +49,7 @@ impl<'tcx, T> MirPass<'tcx> for WithMinOptLevel<T>\n where\n     T: MirPass<'tcx>,\n {\n-    fn name(&self) -> Cow<'_, str> {\n+    fn name(&self) -> &str {\n         self.1.name()\n     }\n "}, {"sha": "475e2ec9a1dea713881123d96bc84a941bb95272", "filename": "compiler/rustc_mir_transform/src/simplify.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/66797fa54f9c5def2ba0294065fabd7d1054e7a1/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66797fa54f9c5def2ba0294065fabd7d1054e7a1/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs?ref=66797fa54f9c5def2ba0294065fabd7d1054e7a1", "patch": "@@ -35,7 +35,6 @@ use rustc_middle::mir::visit::{MutVisitor, MutatingUseContext, PlaceContext, Vis\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n use smallvec::SmallVec;\n-use std::borrow::Cow;\n use std::convert::TryInto;\n \n pub struct SimplifyCfg {\n@@ -57,8 +56,8 @@ pub fn simplify_cfg<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n }\n \n impl<'tcx> MirPass<'tcx> for SimplifyCfg {\n-    fn name(&self) -> Cow<'_, str> {\n-        Cow::Borrowed(&self.label)\n+    fn name(&self) -> &str {\n+        &self.label\n     }\n \n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {"}, {"sha": "405ebce4d2227f7bdfac152ac51725783ac59886", "filename": "compiler/rustc_mir_transform/src/simplify_branches.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66797fa54f9c5def2ba0294065fabd7d1054e7a1/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66797fa54f9c5def2ba0294065fabd7d1054e7a1/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs?ref=66797fa54f9c5def2ba0294065fabd7d1054e7a1", "patch": "@@ -2,8 +2,6 @@ use crate::MirPass;\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n \n-use std::borrow::Cow;\n-\n /// A pass that replaces a branch with a goto when its condition is known.\n pub struct SimplifyConstCondition {\n     label: String,\n@@ -16,8 +14,8 @@ impl SimplifyConstCondition {\n }\n \n impl<'tcx> MirPass<'tcx> for SimplifyConstCondition {\n-    fn name(&self) -> Cow<'_, str> {\n-        Cow::Borrowed(&self.label)\n+    fn name(&self) -> &str {\n+        &self.label\n     }\n \n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {"}]}