{"sha": "90db34a9618011e5ac189612e7954624582cf05a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZGIzNGE5NjE4MDExZTVhYzE4OTYxMmU3OTU0NjI0NTgyY2YwNWE=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-12-23T21:48:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-12-23T21:48:46Z"}, "message": "Merge pull request #1251 from erickt/master\n\nVersion bump for dependencies, add support for `break` values", "tree": {"sha": "eaf26d9acb8ec81fb8823904ea5311705e7efd1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eaf26d9acb8ec81fb8823904ea5311705e7efd1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90db34a9618011e5ac189612e7954624582cf05a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90db34a9618011e5ac189612e7954624582cf05a", "html_url": "https://github.com/rust-lang/rust/commit/90db34a9618011e5ac189612e7954624582cf05a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90db34a9618011e5ac189612e7954624582cf05a/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f6c93b4f7f46c5405f23a8fd90af6ccce2b1a4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f6c93b4f7f46c5405f23a8fd90af6ccce2b1a4b", "html_url": "https://github.com/rust-lang/rust/commit/2f6c93b4f7f46c5405f23a8fd90af6ccce2b1a4b"}, {"sha": "836682eef48b9e05689133012d7023788085f9c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/836682eef48b9e05689133012d7023788085f9c0", "html_url": "https://github.com/rust-lang/rust/commit/836682eef48b9e05689133012d7023788085f9c0"}], "stats": {"total": 204, "additions": 135, "deletions": 69}, "files": [{"sha": "f46b7d90b2f7e4f021ea585370024475dc131e41", "filename": "Cargo.lock", "status": "modified", "additions": 46, "deletions": 37, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/90db34a9618011e5ac189612e7954624582cf05a/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/90db34a9618011e5ac189612e7954624582cf05a/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=90db34a9618011e5ac189612e7954624582cf05a", "patch": "@@ -5,20 +5,20 @@ dependencies = [\n  \"diff 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"env_logger 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"itertools 0.4.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"itertools 0.5.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"multimap 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.1.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-serialize 0.3.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-serialize 0.3.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"strings 0.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syntex_errors 0.50.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syntex_syntax 0.50.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syntex_errors 0.52.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syntex_syntax 0.52.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"toml 0.1.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"unicode-segmentation 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"walkdir 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"toml 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"unicode-segmentation 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"walkdir 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -40,6 +40,11 @@ name = \"diff\"\n version = \"0.1.9\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"either\"\n+version = \"1.0.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"env_logger\"\n version = \"0.3.5\"\n@@ -56,8 +61,11 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"itertools\"\n-version = \"0.4.19\"\n+version = \"0.5.8\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"either 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n \n [[package]]\n name = \"kernel32-sys\"\n@@ -70,7 +78,7 @@ dependencies = [\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.17\"\n+version = \"0.2.18\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -83,7 +91,7 @@ name = \"memchr\"\n version = \"0.1.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -110,7 +118,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"rustc-serialize\"\n-version = \"0.3.21\"\n+version = \"0.3.22\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -123,36 +131,36 @@ dependencies = [\n \n [[package]]\n name = \"syntex_errors\"\n-version = \"0.50.0\"\n+version = \"0.52.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-serialize 0.3.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syntex_pos 0.50.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-serialize 0.3.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syntex_pos 0.52.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-xid 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"syntex_pos\"\n-version = \"0.50.0\"\n+version = \"0.52.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rustc-serialize 0.3.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-serialize 0.3.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"syntex_syntax\"\n-version = \"0.50.0\"\n+version = \"0.52.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-serialize 0.3.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syntex_errors 0.50.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syntex_pos 0.50.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-serialize 0.3.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syntex_errors 0.52.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syntex_pos 0.52.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-xid 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -172,7 +180,7 @@ version = \"2.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -185,15 +193,15 @@ dependencies = [\n \n [[package]]\n name = \"toml\"\n-version = \"0.1.30\"\n+version = \"0.2.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rustc-serialize 0.3.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-serialize 0.3.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"unicode-segmentation\"\n-version = \"0.1.2\"\n+version = \"1.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -208,7 +216,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"walkdir\"\n-version = \"0.1.8\"\n+version = \"1.0.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -229,28 +237,29 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum aho-corasick 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ca972c2ea5f742bfce5687b9aef75506a764f61d37f8f649047846a9686ddb66\"\n \"checksum bitflags 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aad18937a628ec6abcd26d1489012cc0e18c21798210f491af69ded9b881106d\"\n \"checksum diff 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e48977eec6d3b7707462c2dc2e1363ad91b5dd822cf942537ccdc2085dc87587\"\n+\"checksum either 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3d2b503c86dad62aaf414ecf2b8c527439abedb3f8d812537f0b12bfd6f32a91\"\n \"checksum env_logger 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15abd780e45b3ea4f76b4e9a26ff4843258dd8a3eed2775a0e7368c2e7936c2f\"\n \"checksum getopts 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d9047cfbd08a437050b363d35ef160452c5fe8ea5187ae0a624708c91581d685\"\n-\"checksum itertools 0.4.19 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c4a9b56eb56058f43dc66e58f40a214b2ccbc9f3df51861b63d51dec7b65bc3f\"\n+\"checksum itertools 0.5.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c6946da472dbbcbd98c049050e8e587cc4ee26985992e582b1d74a35cb8a7020\"\n \"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n-\"checksum libc 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"044d1360593a78f5c8e5e710beccdc24ab71d1f01bc19a29bcacdba22e8475d8\"\n+\"checksum libc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a51822fc847e7a8101514d1d44e354ba2ffa7d4c194dcab48870740e327cac70\"\n \"checksum log 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab83497bf8bf4ed2a74259c1c802351fcd67a65baa86394b6ba73c36f4838054\"\n \"checksum memchr 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d8b629fb514376c675b98c1421e80b151d3817ac42d7c667717d282761418d20\"\n \"checksum multimap 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9223f4774d08e06185e44e555b9a7561243d387bac49c78a6205c42d6975fbf2\"\n \"checksum regex 0.1.80 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4fd4ace6a8cf7860714a2c2280d6c1f7e6a413486c13298bbc86fd3da019402f\"\n \"checksum regex-syntax 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f9ec002c35e86791825ed294b50008eea9ddfc8def4420124fbc6b08db834957\"\n-\"checksum rustc-serialize 0.3.21 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bff9fc1c79f2dec76b253273d07682e94a978bd8f132ded071188122b2af9818\"\n+\"checksum rustc-serialize 0.3.22 (registry+https://github.com/rust-lang/crates.io-index)\" = \"237546c689f20bb44980270c73c3b9edd0891c1be49cc1274406134a66d3957b\"\n \"checksum strings 0.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"54f86446ab480b4f60782188f4f78886465c5793aee248cbb48b7fdc0d022420\"\n-\"checksum syntex_errors 0.50.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"84822a1178204a191239ad844599f8c85c128cf9f4173397def4eb46b55b0aa1\"\n-\"checksum syntex_pos 0.50.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a43abded5057c75bac8555e46ec913ce502efb418267b1ab8e9783897470c7db\"\n-\"checksum syntex_syntax 0.50.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6ef781e4b60f03431f1b5b59843546ce60ae029a787770cf8e0969ac1fd063a5\"\n+\"checksum syntex_errors 0.52.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9e52bffe6202cfb67587784cf23e0ec5bf26d331eef4922a16d5c42e12aa1e9b\"\n+\"checksum syntex_pos 0.52.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"955ef4b16af4c468e4680d1497f873ff288f557d338180649e18f915af5e15ac\"\n+\"checksum syntex_syntax 0.52.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"76a302e717e348aa372ff577791c3832395650073b8d8432f8b3cb170b34afde\"\n \"checksum term 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3deff8a2b3b6607d6d7cc32ac25c0b33709453ca9cceac006caac51e963cf94a\"\n \"checksum thread-id 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a9539db560102d1cef46b8b78ce737ff0bb64e7e18d35b2a5688f7d097d0ff03\"\n \"checksum thread_local 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8576dbbfcaef9641452d5cf0df9b0e7eeab7694956dd33bb61515fb8f18cfdd5\"\n-\"checksum toml 0.1.30 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0590d72182e50e879c4da3b11c6488dae18fccb1ae0c7a3eda18e16795844796\"\n-\"checksum unicode-segmentation 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b905d0fc2a1f0befd86b0e72e31d1787944efef9d38b9358a9e92a69757f7e3b\"\n+\"checksum toml 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"736b60249cb25337bc196faa43ee12c705e426f3d55c214d73a4e7be06f92cb4\"\n+\"checksum unicode-segmentation 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"70fba625c17936d0b811ccacb19c4e31186c82db42d9b670bcab830b2ddcde08\"\n \"checksum unicode-xid 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"36dff09cafb4ec7c8cf0023eb0b686cb6ce65499116a12201c9e11840ca01beb\"\n \"checksum utf8-ranges 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a1ca13c08c41c9c3e04224ed9ff80461d97e121589ff27c753a16cb10830ae0f\"\n-\"checksum walkdir 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c66c0b9792f0a765345452775f3adbd28dde9d33f30d13e5dcc5ae17cf6f3780\"\n+\"checksum walkdir 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dd7c16466ecc507c7cb5988db03e6eab4aaeab89a5c37a29251fcfd3ac9b7afe\"\n \"checksum winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a\"\n \"checksum winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc\""}, {"sha": "b8c77b6bf1c2789a360caf7c1de3567bcb63a2b9", "filename": "Cargo.toml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/90db34a9618011e5ac189612e7954624582cf05a/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/90db34a9618011e5ac189612e7954624582cf05a/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=90db34a9618011e5ac189612e7954624582cf05a", "patch": "@@ -15,23 +15,23 @@ default = [\"cargo-fmt\"]\n cargo-fmt = []\n \n [dependencies]\n-toml = \"0.1\"\n+toml = \"0.2.1\"\n rustc-serialize = \"0.3\"\n-unicode-segmentation = \"0.1\"\n+unicode-segmentation = \"1.0.0\"\n regex = \"0.1\"\n term = \"0.4\"\n strings = \"0.0.1\"\n diff = \"0.1\"\n-syntex_syntax = \"0.50\"\n-syntex_errors = \"0.50\"\n+syntex_syntax = \"0.52\"\n+syntex_errors = \"0.52\"\n log = \"0.3\"\n env_logger = \"0.3\"\n getopts = \"0.2\"\n-itertools = \"0.4.15\"\n+itertools = \"0.5.8\"\n multimap = \"0.3\"\n \n [build-dependencies]\n-walkdir = \"0.1.5\"\n+walkdir = \"1.0.3\"\n \n [target.'cfg(unix)'.dependencies]\n libc = \"0.2.11\""}, {"sha": "3bbc3c1295b1cf1f4d60da734542a720ff433724", "filename": "src/expr.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/90db34a9618011e5ac189612e7954624582cf05a/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90db34a9618011e5ac189612e7954624582cf05a/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=90db34a9618011e5ac189612e7954624582cf05a", "patch": "@@ -160,15 +160,24 @@ fn format_expr(expr: &ast::Expr,\n                      width,\n                      offset)\n         }\n-        ast::ExprKind::Break(ref opt_ident) => {\n+        ast::ExprKind::Break(ref opt_ident, ref opt_expr) => {\n             let id_str = match *opt_ident {\n                 Some(ident) => format!(\" {}\", ident.node),\n                 None => String::new(),\n             };\n-            wrap_str(format!(\"break{}\", id_str),\n-                     context.config.max_width,\n-                     width,\n-                     offset)\n+\n+            if let Some(ref expr) = *opt_expr {\n+                rewrite_unary_prefix(context,\n+                                     &format!(\"break{} \", id_str),\n+                                     &**expr,\n+                                     width,\n+                                     offset)\n+            } else {\n+                wrap_str(format!(\"break{}\", id_str),\n+                         context.config.max_width,\n+                         width,\n+                         offset)\n+            }\n         }\n         ast::ExprKind::Closure(capture, ref fn_decl, ref body, _) => {\n             rewrite_closure(capture, fn_decl, body, expr.span, context, width, offset)"}, {"sha": "d1c362994541880eb7e73eca51652af6355c4909", "filename": "src/imports.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90db34a9618011e5ac189612e7954624582cf05a/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90db34a9618011e5ac189612e7954624582cf05a/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=90db34a9618011e5ac189612e7954624582cf05a", "patch": "@@ -43,8 +43,8 @@ fn compare_paths(a: &ast::Path, b: &ast::Path) -> Ordering {\n }\n \n fn compare_path_list_items(a: &ast::PathListItem, b: &ast::PathListItem) -> Ordering {\n-    let a_name_str = a.node.name.name.as_str();\n-    let b_name_str = b.node.name.name.as_str();\n+    let a_name_str = &*a.node.name.name.as_str();\n+    let b_name_str = &*b.node.name.name.as_str();\n     let name_ordering = if a_name_str == \"self\" {\n         if b_name_str == \"self\" {\n             Ordering::Equal"}, {"sha": "665704ea20fce3138429da99cc79eab2634882f8", "filename": "src/items.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/90db34a9618011e5ac189612e7954624582cf05a/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90db34a9618011e5ac189612e7954624582cf05a/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=90db34a9618011e5ac189612e7954624582cf05a", "patch": "@@ -23,9 +23,8 @@ use rewrite::{Rewrite, RewriteContext};\n use config::{Config, BlockIndentStyle, Density, ReturnIndent, BraceStyle, FnArgLayoutStyle};\n use itertools::Itertools;\n \n-use syntax::{ast, abi, ptr, codemap};\n+use syntax::{ast, abi, codemap, ptr, symbol};\n use syntax::codemap::{Span, BytePos, mk_sp};\n-use syntax::parse::token;\n use syntax::ast::ImplItem;\n \n // Statements of the form\n@@ -1276,7 +1275,7 @@ pub fn span_hi_for_arg(arg: &ast::Arg) -> BytePos {\n \n pub fn is_named_arg(arg: &ast::Arg) -> bool {\n     if let ast::PatKind::Ident(_, ident, _) = arg.pat.node {\n-        ident.node != token::keywords::Invalid.ident()\n+        ident.node != symbol::keywords::Invalid.ident()\n     } else {\n         true\n     }\n@@ -1688,13 +1687,8 @@ fn rewrite_args(context: &RewriteContext,\n }\n \n fn arg_has_pattern(arg: &ast::Arg) -> bool {\n-    if let ast::PatKind::Ident(_,\n-                               codemap::Spanned {\n-                                   node: ast::Ident { name: ast::Name(0u32), .. },\n-                                   ..\n-                               },\n-                               _) = arg.pat.node {\n-        false\n+    if let ast::PatKind::Ident(_, ident, _) = arg.pat.node {\n+        ident.node != symbol::keywords::Invalid.ident()\n     } else {\n         true\n     }"}, {"sha": "412fb15cede14b6b9f020e902c64901efbc4f0f7", "filename": "src/macros.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/90db34a9618011e5ac189612e7954624582cf05a/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90db34a9618011e5ac189612e7954624582cf05a/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=90db34a9618011e5ac189612e7954624582cf05a", "patch": "@@ -20,9 +20,10 @@\n // and those with brackets will be formatted as array literals.\n \n use syntax::ast;\n+use syntax::codemap::{mk_sp, BytePos};\n use syntax::parse::token::Token;\n use syntax::parse::tts_to_parser;\n-use syntax::codemap::{mk_sp, BytePos};\n+use syntax::symbol;\n use syntax::util::ThinVec;\n \n use Indent;\n@@ -72,11 +73,18 @@ pub fn rewrite_macro(mac: &ast::Mac,\n     }\n \n     let original_style = macro_style(mac, context);\n+\n     let macro_name = match extra_ident {\n-        None |\n-        Some(ast::Ident { name: ast::Name(0), .. }) => format!(\"{}!\", mac.node.path),\n-        Some(ident) => format!(\"{}! {}\", mac.node.path, ident),\n+        None => format!(\"{}!\", mac.node.path),\n+        Some(ident) => {\n+            if ident == symbol::keywords::Invalid.ident() {\n+                format!(\"{}!\", mac.node.path)\n+            } else {\n+                format!(\"{}! {}\", mac.node.path, ident)\n+            }\n+        }\n     };\n+\n     let style = if FORCED_BRACKET_MACROS.contains(&&macro_name[..]) {\n         MacroStyle::Brackets\n     } else {"}, {"sha": "ab5de426571ae18a45aa661ccd5f3d5694bb8e0b", "filename": "src/utils.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90db34a9618011e5ac189612e7954624582cf05a/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90db34a9618011e5ac189612e7954624582cf05a/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=90db34a9618011e5ac189612e7954624582cf05a", "patch": "@@ -101,9 +101,9 @@ pub fn trimmed_last_line_width(s: &str) -> usize {\n #[inline]\n fn is_skip(meta_item: &MetaItem) -> bool {\n     match meta_item.node {\n-        MetaItemKind::Word(ref s) => *s == SKIP_ANNOTATION,\n-        MetaItemKind::List(ref s, ref l) => {\n-            *s == \"cfg_attr\" && l.len() == 2 && is_skip_nested(&l[1])\n+        MetaItemKind::Word => meta_item.name == SKIP_ANNOTATION,\n+        MetaItemKind::List(ref l) => {\n+            meta_item.name == \"cfg_attr\" && l.len() == 2 && is_skip_nested(&l[1])\n         }\n         _ => false,\n     }\n@@ -119,7 +119,7 @@ fn is_skip_nested(meta_item: &NestedMetaItem) -> bool {\n \n #[inline]\n pub fn contains_skip(attrs: &[Attribute]) -> bool {\n-    attrs.iter().any(|a| is_skip(&a.node.value))\n+    attrs.iter().any(|a| is_skip(&a.value))\n }\n \n // Find the end of a TyParam"}, {"sha": "f568c63eb3811aa80b4d95f9a8b73a5224856b39", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90db34a9618011e5ac189612e7954624582cf05a/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90db34a9618011e5ac189612e7954624582cf05a/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=90db34a9618011e5ac189612e7954624582cf05a", "patch": "@@ -471,7 +471,7 @@ impl<'a> FmtVisitor<'a> {\n         }\n \n         let outers: Vec<_> = attrs.iter()\n-            .filter(|a| a.node.style == ast::AttrStyle::Outer)\n+            .filter(|a| a.style == ast::AttrStyle::Outer)\n             .cloned()\n             .collect();\n         if outers.is_empty() {"}, {"sha": "c01d8a0784556d93b4b6af8c00f8aecf5906ce4a", "filename": "tests/source/break-and-continue.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/90db34a9618011e5ac189612e7954624582cf05a/tests%2Fsource%2Fbreak-and-continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90db34a9618011e5ac189612e7954624582cf05a/tests%2Fsource%2Fbreak-and-continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fbreak-and-continue.rs?ref=90db34a9618011e5ac189612e7954624582cf05a", "patch": "@@ -0,0 +1,23 @@\n+// break and continue formatting\n+\n+#![feature(loop_break_value)]\n+\n+fn main() {\n+    'a: loop {\n+        break 'a;\n+    }\n+\n+    let mut done = false;\n+    'b: while !done {\n+        done = true;\n+        continue 'b;\n+    }\n+\n+    let x = loop {\n+        break 5;\n+    };\n+\n+    let x = 'c: loop {\n+        break 'c 5;\n+    };\n+}"}, {"sha": "c01d8a0784556d93b4b6af8c00f8aecf5906ce4a", "filename": "tests/target/break-and-continue.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/90db34a9618011e5ac189612e7954624582cf05a/tests%2Ftarget%2Fbreak-and-continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90db34a9618011e5ac189612e7954624582cf05a/tests%2Ftarget%2Fbreak-and-continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fbreak-and-continue.rs?ref=90db34a9618011e5ac189612e7954624582cf05a", "patch": "@@ -0,0 +1,23 @@\n+// break and continue formatting\n+\n+#![feature(loop_break_value)]\n+\n+fn main() {\n+    'a: loop {\n+        break 'a;\n+    }\n+\n+    let mut done = false;\n+    'b: while !done {\n+        done = true;\n+        continue 'b;\n+    }\n+\n+    let x = loop {\n+        break 5;\n+    };\n+\n+    let x = 'c: loop {\n+        break 'c 5;\n+    };\n+}"}]}