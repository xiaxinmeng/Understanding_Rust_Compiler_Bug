{"sha": "f745b34960b2146dbaa7337856e7c5461cca29d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3NDViMzQ5NjBiMjE0NmRiYWE3MzM3ODU2ZTdjNTQ2MWNjYTI5ZDU=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-07-11T14:29:35Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-09-06T00:46:37Z"}, "message": "Emit warnings for misplaced attributes used by some crates", "tree": {"sha": "4e17c6c341bb4b08ec843cd106dc3cbf23afdc8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e17c6c341bb4b08ec843cd106dc3cbf23afdc8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f745b34960b2146dbaa7337856e7c5461cca29d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f745b34960b2146dbaa7337856e7c5461cca29d5", "html_url": "https://github.com/rust-lang/rust/commit/f745b34960b2146dbaa7337856e7c5461cca29d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f745b34960b2146dbaa7337856e7c5461cca29d5/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4efe97a3d9a5f2d295bc2fa9bd2bb90edf1986d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4efe97a3d9a5f2d295bc2fa9bd2bb90edf1986d5", "html_url": "https://github.com/rust-lang/rust/commit/4efe97a3d9a5f2d295bc2fa9bd2bb90edf1986d5"}], "stats": {"total": 1221, "additions": 691, "deletions": 530}, "files": [{"sha": "fdb1f24de263dc7badf46df67a9dacddc417ab30", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 100, "deletions": 53, "changes": 153, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -66,22 +66,24 @@ impl CheckAttrVisitor<'tcx> {\n             } else if self.tcx.sess.check_name(attr, sym::marker) {\n                 self.check_marker(attr, span, target)\n             } else if self.tcx.sess.check_name(attr, sym::target_feature) {\n-                self.check_target_feature(attr, span, target)\n+                self.check_target_feature(hir_id, attr, span, target)\n             } else if self.tcx.sess.check_name(attr, sym::track_caller) {\n                 self.check_track_caller(&attr.span, attrs, span, target)\n             } else if self.tcx.sess.check_name(attr, sym::doc) {\n                 self.check_doc_alias(attr, hir_id, target)\n-            } else if self.tcx.sess.check_name(attr, sym::cold) {\n-                self.check_cold(&attr, span, target)\n-            } else if self.tcx.sess.check_name(attr, sym::link_name) {\n-                self.check_link_name(&attr, span, target)\n             } else if self.tcx.sess.check_name(attr, sym::no_link) {\n                 self.check_no_link(&attr, span, target)\n             } else if self.tcx.sess.check_name(attr, sym::export_name) {\n                 self.check_export_name(&attr, span, target)\n-            } else if self.tcx.sess.check_name(attr, sym::link_section) {\n-                self.check_link_section(&attr, span, target)\n             } else {\n+                // lint-only checks\n+                if self.tcx.sess.check_name(attr, sym::cold) {\n+                    self.check_cold(hir_id, attr, span, target);\n+                } else if self.tcx.sess.check_name(attr, sym::link_name) {\n+                    self.check_link_name(hir_id, attr, span, target);\n+                } else if self.tcx.sess.check_name(attr, sym::link_section) {\n+                    self.check_link_section(hir_id, attr, span, target);\n+                }\n                 true\n             };\n         }\n@@ -212,10 +214,31 @@ impl CheckAttrVisitor<'tcx> {\n     }\n \n     /// Checks if the `#[target_feature]` attribute on `item` is valid. Returns `true` if valid.\n-    fn check_target_feature(&self, attr: &Attribute, span: &Span, target: Target) -> bool {\n+    fn check_target_feature(\n+        &self,\n+        hir_id: HirId,\n+        attr: &Attribute,\n+        span: &Span,\n+        target: Target,\n+    ) -> bool {\n         match target {\n             Target::Fn\n             | Target::Method(MethodKind::Trait { body: true } | MethodKind::Inherent) => true,\n+            // FIXME: #[target_feature] was previously erroneously allowed on statements and some\n+            // crates used this, so only emit a warning.\n+            Target::Statement => {\n+                self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n+                    lint.build(\"attribute should be applied to a function\")\n+                        .warn(\n+                            \"this was previously accepted by the compiler but is \\\n+                               being phased out; it will become a hard error in \\\n+                               a future release!\",\n+                        )\n+                        .span_label(*span, \"not a function\")\n+                        .emit();\n+                });\n+                true\n+            }\n             _ => {\n                 self.tcx\n                     .sess\n@@ -288,45 +311,58 @@ impl CheckAttrVisitor<'tcx> {\n     }\n \n     /// Checks if `#[cold]` is applied to a non-function. Returns `true` if valid.\n-    fn check_cold(&self, attr: &Attribute, span: &Span, target: Target) -> bool {\n+    fn check_cold(&self, hir_id: HirId, attr: &Attribute, span: &Span, target: Target) {\n         match target {\n-            Target::Fn | Target::Method(..) | Target::ForeignFn => true,\n+            Target::Fn | Target::Method(..) | Target::ForeignFn => {}\n             _ => {\n-                self.tcx\n-                    .sess\n-                    .struct_span_err(attr.span, \"attribute should be applied to a function\")\n-                    .span_label(*span, \"not a function\")\n-                    .emit();\n-                false\n+                // FIXME: #[cold] was previously allowed on non-functions and some crates used\n+                // this, so only emit a warning.\n+                self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n+                    lint.build(\"attribute should be applied to a function\")\n+                        .warn(\n+                            \"this was previously accepted by the compiler but is \\\n+                               being phased out; it will become a hard error in \\\n+                               a future release!\",\n+                        )\n+                        .span_label(*span, \"not a function\")\n+                        .emit();\n+                });\n             }\n         }\n     }\n \n-    /// Checks if `#[link_name]` is applied to an item other than a foreign function or static. Returns `true` if valid.\n-    fn check_link_name(&self, attr: &Attribute, span: &Span, target: Target) -> bool {\n-        if target == Target::ForeignFn || target == Target::ForeignStatic {\n-            true\n-        } else {\n-            let mut err = self.tcx.sess.struct_span_err(\n-                attr.span,\n-                \"attribute should be applied to a foreign function or static\",\n-            );\n-            err.span_label(*span, \"not a foreign function or static\");\n-\n-            // See issue #47725\n-            if target == Target::ForeignMod {\n-                if let Some(value) = attr.value_str() {\n-                    err.span_help(\n-                        attr.span,\n-                        &format!(r#\"try `#[link(name = \"{}\")]` instead\"#, value),\n+    /// Checks if `#[link_name]` is applied to an item other than a foreign function or static.\n+    fn check_link_name(&self, hir_id: HirId, attr: &Attribute, span: &Span, target: Target) {\n+        match target {\n+            Target::ForeignFn | Target::ForeignStatic => {}\n+            _ => {\n+                // FIXME: #[cold] was previously allowed on non-functions/statics and some crates\n+                // used this, so only emit a warning.\n+                self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n+                    let mut diag =\n+                        lint.build(\"attribute should be applied to a foreign function or static\");\n+                    diag.warn(\n+                        \"this was previously accepted by the compiler but is \\\n+                               being phased out; it will become a hard error in \\\n+                               a future release!\",\n                     );\n-                } else {\n-                    err.span_help(attr.span, r#\"try `#[link(name = \"...\")]` instead\"#);\n-                }\n-            }\n \n-            err.emit();\n-            false\n+                    // See issue #47725\n+                    if let Target::ForeignMod = target {\n+                        if let Some(value) = attr.value_str() {\n+                            diag.span_help(\n+                                attr.span,\n+                                &format!(r#\"try `#[link(name = \"{}\")]` instead\"#, value),\n+                            );\n+                        } else {\n+                            diag.span_help(attr.span, r#\"try `#[link(name = \"...\")]` instead\"#);\n+                        }\n+                    }\n+\n+                    diag.span_label(*span, \"not a foreign function or static\");\n+                    diag.emit();\n+                });\n+            }\n         }\n     }\n \n@@ -362,20 +398,23 @@ impl CheckAttrVisitor<'tcx> {\n         }\n     }\n \n-    /// Checks if `#[link_section]` is applied to a function or static. Returns `true` if valid.\n-    fn check_link_section(&self, attr: &Attribute, span: &Span, target: Target) -> bool {\n+    /// Checks if `#[link_section]` is applied to a function or static.\n+    fn check_link_section(&self, hir_id: HirId, attr: &Attribute, span: &Span, target: Target) {\n         match target {\n-            Target::Static | Target::Fn | Target::Method(..) => true,\n+            Target::Static | Target::Fn | Target::Method(..) => {}\n             _ => {\n-                self.tcx\n-                    .sess\n-                    .struct_span_err(\n-                        attr.span,\n-                        \"attribute should be applied to a function or static\",\n-                    )\n-                    .span_label(*span, \"not a function or static\")\n-                    .emit();\n-                false\n+                // FIXME: #[link_section] was previously allowed on non-functions/statics and some\n+                // crates used this, so only emit a warning.\n+                self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n+                    lint.build(\"attribute should be applied to a function or static\")\n+                        .warn(\n+                            \"this was previously accepted by the compiler but is \\\n+                               being phased out; it will become a hard error in \\\n+                               a future release!\",\n+                        )\n+                        .span_label(*span, \"not a function or static\")\n+                        .emit();\n+                });\n             }\n         }\n     }\n@@ -424,7 +463,11 @@ impl CheckAttrVisitor<'tcx> {\n                 }\n                 sym::simd => {\n                     is_simd = true;\n-                    if target != Target::Struct { (\"a\", \"struct\") } else { continue }\n+                    if target != Target::Struct {\n+                        (\"a\", \"struct\")\n+                    } else {\n+                        continue;\n+                    }\n                 }\n                 sym::transparent => {\n                     is_transparent = true;\n@@ -461,7 +504,11 @@ impl CheckAttrVisitor<'tcx> {\n                 | sym::isize\n                 | sym::usize => {\n                     int_reprs += 1;\n-                    if target != Target::Enum { (\"an\", \"enum\") } else { continue }\n+                    if target != Target::Enum {\n+                        (\"an\", \"enum\")\n+                    } else {\n+                        continue;\n+                    }\n                 }\n                 _ => continue,\n             };"}, {"sha": "3ac8ba5232de7253989106a31028842d53663890", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs-error.rs", "status": "modified", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs-error.rs?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -64,30 +64,6 @@ mod no_link {\n     //~| NOTE not an `extern crate` item\n }\n \n-#[cold]\n-//~^ ERROR attribute should be applied to a function\n-mod cold {\n-    //~^ NOTE not a function\n-\n-    mod inner { #![cold] }\n-    //~^ ERROR attribute should be applied to a function\n-    //~| NOTE not a function\n-\n-    #[cold] fn f() { }\n-\n-    #[cold] struct S;\n-    //~^ ERROR attribute should be applied to a function\n-    //~| NOTE not a function\n-\n-    #[cold] type T = S;\n-    //~^ ERROR attribute should be applied to a function\n-    //~| NOTE not a function\n-\n-    #[cold] impl S { }\n-    //~^ ERROR attribute should be applied to a function\n-    //~| NOTE not a function\n-}\n-\n #[export_name = \"2200\"]\n //~^ ERROR attribute should be applied to a function or static\n mod export_name {\n@@ -112,60 +88,4 @@ mod export_name {\n     //~| NOTE not a function or static\n }\n \n-#[link_name = \"1900\"]\n-//~^ ERROR attribute should be applied to a foreign function or static\n-mod link_name {\n-    //~^ NOTE not a foreign function or static\n-\n-    #[link_name = \"1900\"]\n-    //~^ ERROR attribute should be applied to a foreign function or static\n-    //~| HELP try `#[link(name = \"1900\")]` instead\n-    extern { }\n-    //~^ NOTE not a foreign function or static\n-\n-    mod inner { #![link_name=\"1900\"] }\n-    //~^ ERROR attribute should be applied to a foreign function or static\n-    //~| NOTE not a foreign function or static\n-\n-    #[link_name = \"1900\"] fn f() { }\n-    //~^ ERROR attribute should be applied to a foreign function or static\n-    //~| NOTE not a foreign function or static\n-\n-    #[link_name = \"1900\"] struct S;\n-    //~^ ERROR attribute should be applied to a foreign function or static\n-    //~| NOTE not a foreign function or static\n-\n-    #[link_name = \"1900\"] type T = S;\n-    //~^ ERROR attribute should be applied to a foreign function or static\n-    //~| NOTE not a foreign function or static\n-\n-    #[link_name = \"1900\"] impl S { }\n-    //~^ ERROR attribute should be applied to a foreign function or static\n-    //~| NOTE not a foreign function or static\n-}\n-\n-#[link_section = \"1800\"]\n-//~^ ERROR attribute should be applied to a function or static\n-mod link_section {\n-    //~^ NOTE not a function or static\n-\n-    mod inner { #![link_section=\"1800\"] }\n-    //~^ ERROR attribute should be applied to a function or static\n-    //~| NOTE not a function or static\n-\n-    #[link_section = \"1800\"] fn f() { }\n-\n-    #[link_section = \"1800\"] struct S;\n-    //~^ ERROR attribute should be applied to a function or static\n-    //~| NOTE not a function or static\n-\n-    #[link_section = \"1800\"] type T = S;\n-    //~^ ERROR attribute should be applied to a function or static\n-    //~| NOTE not a function or static\n-\n-    #[link_section = \"1800\"] impl S { }\n-    //~^ ERROR attribute should be applied to a function or static\n-    //~| NOTE not a function or static\n-}\n-\n fn main() {}"}, {"sha": "c9255d2be129bdede17aa5e3f3fa0014ef9de77c", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs-error.stderr", "status": "modified", "additions": 6, "deletions": 144, "changes": 150, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs-error.stderr?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -38,23 +38,8 @@ LL | |\n LL | | }\n    | |_- not an `extern crate` item\n \n-error: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:67:1\n-   |\n-LL |   #[cold]\n-   |   ^^^^^^^\n-LL |\n-LL | / mod cold {\n-LL | |\n-LL | |\n-LL | |     mod inner { #![cold] }\n-...  |\n-LL | |\n-LL | | }\n-   | |_- not a function\n-\n error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:91:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:67:1\n    |\n LL |   #[export_name = \"2200\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -68,36 +53,6 @@ LL | |\n LL | | }\n    | |_- not a function or static\n \n-error: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:115:1\n-   |\n-LL |   #[link_name = \"1900\"]\n-   |   ^^^^^^^^^^^^^^^^^^^^^\n-LL |\n-LL | / mod link_name {\n-LL | |\n-LL | |\n-LL | |     #[link_name = \"1900\"]\n-...  |\n-LL | |\n-LL | | }\n-   | |_- not a foreign function or static\n-\n-error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:147:1\n-   |\n-LL |   #[link_section = \"1800\"]\n-   |   ^^^^^^^^^^^^^^^^^^^^^^^^\n-LL |\n-LL | / mod link_section {\n-LL | |\n-LL | |\n-LL | |     mod inner { #![link_section=\"1800\"] }\n-...  |\n-LL | |\n-LL | | }\n-   | |_- not a function or static\n-\n error[E0518]: attribute should be applied to function or closure\n   --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:18:17\n    |\n@@ -152,123 +107,30 @@ error: attribute should be applied to an `extern crate` item\n LL |     #[no_link] impl S { }\n    |     ^^^^^^^^^^ ---------- not an `extern crate` item\n \n-error: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:72:17\n-   |\n-LL |     mod inner { #![cold] }\n-   |     ------------^^^^^^^^-- not a function\n-\n-error: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:78:5\n-   |\n-LL |     #[cold] struct S;\n-   |     ^^^^^^^ --------- not a function\n-\n-error: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:82:5\n-   |\n-LL |     #[cold] type T = S;\n-   |     ^^^^^^^ ----------- not a function\n-\n-error: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:86:5\n-   |\n-LL |     #[cold] impl S { }\n-   |     ^^^^^^^ ---------- not a function\n-\n error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:96:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:72:17\n    |\n LL |     mod inner { #![export_name=\"2200\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n \n error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:102:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:78:5\n    |\n LL |     #[export_name = \"2200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n \n error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:106:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:82:5\n    |\n LL |     #[export_name = \"2200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n \n error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:110:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:86:5\n    |\n LL |     #[export_name = \"2200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n \n-error: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:120:5\n-   |\n-LL |     #[link_name = \"1900\"]\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n-...\n-LL |     extern { }\n-   |     ---------- not a foreign function or static\n-   |\n-help: try `#[link(name = \"1900\")]` instead\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:120:5\n-   |\n-LL |     #[link_name = \"1900\"]\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n-\n-error: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:126:17\n-   |\n-LL |     mod inner { #![link_name=\"1900\"] }\n-   |     ------------^^^^^^^^^^^^^^^^^^^^-- not a foreign function or static\n-\n-error: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:130:5\n-   |\n-LL |     #[link_name = \"1900\"] fn f() { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n-\n-error: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:134:5\n-   |\n-LL |     #[link_name = \"1900\"] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^ --------- not a foreign function or static\n-\n-error: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:138:5\n-   |\n-LL |     #[link_name = \"1900\"] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^ ----------- not a foreign function or static\n-\n-error: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:142:5\n-   |\n-LL |     #[link_name = \"1900\"] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n-\n-error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:152:17\n-   |\n-LL |     mod inner { #![link_section=\"1800\"] }\n-   |     ------------^^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n-\n-error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:158:5\n-   |\n-LL |     #[link_section = \"1800\"] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n-\n-error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:162:5\n-   |\n-LL |     #[link_section = \"1800\"] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n-\n-error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:166:5\n-   |\n-LL |     #[link_section = \"1800\"] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n-\n-error: aborting due to 34 previous errors\n+error: aborting due to 17 previous errors\n \n For more information about this error, try `rustc --explain E0518`."}, {"sha": "d6a3ffd566f75d6f60ceced38efe8fefbf8fcba9", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs.rs", "status": "modified", "additions": 120, "deletions": 4, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.rs?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -31,14 +31,19 @@\n // occurrences in the source text.\n \n // check-pass\n+// ignore-tidy-linelength\n \n #![feature(test, plugin_registrar)]\n #![warn(unused_attributes, unknown_lints)]\n+//~^ NOTE the lint level is defined here\n+//~| NOTE the lint level is defined here\n \n // Exception, a gated and deprecated attribute.\n \n-#![plugin_registrar] //~ WARN unused attribute\n+#![plugin_registrar]\n+//~^ WARN unused attribute\n //~| WARN use of deprecated attribute\n+//~| HELP may be removed in a future compiler version\n \n // UNGATED WHITE-LISTED BUILT-IN ATTRIBUTES\n \n@@ -88,12 +93,18 @@\n #![crate_name = \"0900\"]\n #![crate_type = \"bin\"] // cannot pass \"0800\" here\n \n-#![crate_id = \"10\"] //~ WARN use of deprecated attribute\n+#![crate_id = \"10\"]\n+//~^ WARN use of deprecated attribute\n+//~| HELP remove this attribute\n \n // FIXME(#44232) we should warn that this isn't used.\n-#![feature(rust1)] //~ WARN no longer requires an attribute to enable\n+#![feature(rust1)]\n+//~^ WARN no longer requires an attribute to enable\n+//~| NOTE `#[warn(stable_features)]` on by default\n \n-#![no_start] //~ WARN use of deprecated attribute\n+#![no_start]\n+//~^ WARN use of deprecated attribute\n+//~| HELP remove this attribute\n \n // (cannot easily gating state of crate-level #[no_main]; but non crate-level is below at \"0400\")\n #![no_builtins]\n@@ -217,24 +228,30 @@ mod macro_export {\n #[plugin_registrar]\n //~^ WARN unused attribute\n //~| WARN use of deprecated attribute\n+//~| HELP may be removed in a future compiler version\n mod plugin_registrar {\n     mod inner { #![plugin_registrar] }\n     //~^ WARN unused attribute\n     //~| WARN use of deprecated attribute\n+    //~| HELP may be removed in a future compiler version\n+    //~| NOTE `#[warn(deprecated)]` on by default\n \n     // for `fn f()` case, see gated-plugin_registrar.rs\n \n     #[plugin_registrar] struct S;\n     //~^ WARN unused attribute\n     //~| WARN use of deprecated attribute\n+    //~| HELP may be removed in a future compiler version\n \n     #[plugin_registrar] type T = S;\n     //~^ WARN unused attribute\n     //~| WARN use of deprecated attribute\n+    //~| HELP may be removed in a future compiler version\n \n     #[plugin_registrar] impl S { }\n     //~^ WARN unused attribute\n     //~| WARN use of deprecated attribute\n+    //~| HELP may be removed in a future compiler version\n }\n \n #[main]\n@@ -449,6 +466,7 @@ mod reexport_test_harness_main {\n mod macro_escape {\n     mod inner { #![macro_escape] }\n     //~^ WARN `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n+    //~| HELP try an outer attribute: `#[macro_use]`\n \n     #[macro_escape] fn f() { }\n     //~^ WARN unused attribute\n@@ -505,6 +523,104 @@ mod doc {\n     #[doc = \"2400\"] impl S { }\n }\n \n+#[cold]\n+//~^ WARN attribute should be applied to a function\n+//~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+mod cold {\n+    //~^ NOTE not a function\n+\n+    mod inner { #![cold] }\n+    //~^ WARN attribute should be applied to a function\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a function\n+\n+    #[cold] fn f() { }\n+\n+    #[cold] struct S;\n+    //~^ WARN attribute should be applied to a function\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a function\n+\n+    #[cold] type T = S;\n+    //~^ WARN attribute should be applied to a function\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a function\n+\n+    #[cold] impl S { }\n+    //~^ WARN attribute should be applied to a function\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a function\n+}\n+\n+#[link_name = \"1900\"]\n+//~^ WARN attribute should be applied to a foreign function or static [unused_attributes]\n+//~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+mod link_name {\n+    //~^ NOTE not a foreign function or static\n+\n+    #[link_name = \"1900\"]\n+    //~^ WARN attribute should be applied to a foreign function or static [unused_attributes]\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| HELP try `#[link(name = \"1900\")]` instead\n+    extern { }\n+    //~^ NOTE not a foreign function or static\n+\n+    mod inner { #![link_name=\"1900\"] }\n+    //~^ WARN attribute should be applied to a foreign function or static [unused_attributes]\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a foreign function or static\n+\n+    #[link_name = \"1900\"] fn f() { }\n+    //~^ WARN attribute should be applied to a foreign function or static [unused_attributes]\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a foreign function or static\n+\n+    #[link_name = \"1900\"] struct S;\n+    //~^ WARN attribute should be applied to a foreign function or static [unused_attributes]\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a foreign function or static\n+\n+    #[link_name = \"1900\"] type T = S;\n+    //~^ WARN attribute should be applied to a foreign function or static [unused_attributes]\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a foreign function or static\n+\n+    #[link_name = \"1900\"] impl S { }\n+    //~^ WARN attribute should be applied to a foreign function or static [unused_attributes]\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a foreign function or static\n+}\n+\n+#[link_section = \"1800\"]\n+//~^ WARN attribute should be applied to a function or static [unused_attributes]\n+//~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+mod link_section {\n+    //~^ NOTE not a function or static\n+\n+    mod inner { #![link_section=\"1800\"] }\n+    //~^ WARN attribute should be applied to a function or static [unused_attributes]\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a function or static\n+\n+    #[link_section = \"1800\"] fn f() { }\n+\n+    #[link_section = \"1800\"] struct S;\n+    //~^ WARN attribute should be applied to a function or static [unused_attributes]\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a function or static\n+\n+    #[link_section = \"1800\"] type T = S;\n+    //~^ WARN attribute should be applied to a function or static [unused_attributes]\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a function or static\n+\n+    #[link_section = \"1800\"] impl S { }\n+    //~^ WARN attribute should be applied to a function or static [unused_attributes]\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+    //~| NOTE not a function or static\n+}\n+\n+\n // Note that this is a `check-pass` test, so it\n // will never invoke the linker. These are here nonetheless to point\n // out that we allow them at non-crate-level (though I do not know"}, {"sha": "05a9c0e975fa002702f5629350a4a1500bc21b24", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 375, "deletions": 205, "changes": 580, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -1,1202 +1,1372 @@\n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:45:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:50:9\n    |\n LL | #![warn(x5400)]\n    |         ^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:36:28\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:37:28\n    |\n LL | #![warn(unused_attributes, unknown_lints)]\n    |                            ^^^^^^^^^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:46:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:51:10\n    |\n LL | #![allow(x5300)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:47:11\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:52:11\n    |\n LL | #![forbid(x5200)]\n    |           ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:48:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:53:9\n    |\n LL | #![deny(x5100)]\n    |         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:105:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:116:8\n    |\n LL | #[warn(x5400)]\n    |        ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:108:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:119:25\n    |\n LL |     mod inner { #![warn(x5400)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:111:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:122:12\n    |\n LL |     #[warn(x5400)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:114:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:125:12\n    |\n LL |     #[warn(x5400)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:117:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:128:12\n    |\n LL |     #[warn(x5400)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:120:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:131:12\n    |\n LL |     #[warn(x5400)] impl S { }\n    |            ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:124:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:135:9\n    |\n LL | #[allow(x5300)]\n    |         ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:127:26\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:138:26\n    |\n LL |     mod inner { #![allow(x5300)] }\n    |                          ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:130:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:141:13\n    |\n LL |     #[allow(x5300)] fn f() { }\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:133:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:144:13\n    |\n LL |     #[allow(x5300)] struct S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:136:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:147:13\n    |\n LL |     #[allow(x5300)] type T = S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:139:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:150:13\n    |\n LL |     #[allow(x5300)] impl S { }\n    |             ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:143:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:154:10\n    |\n LL | #[forbid(x5200)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:146:27\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:157:27\n    |\n LL |     mod inner { #![forbid(x5200)] }\n    |                           ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:149:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:160:14\n    |\n LL |     #[forbid(x5200)] fn f() { }\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:152:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:163:14\n    |\n LL |     #[forbid(x5200)] struct S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:155:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:166:14\n    |\n LL |     #[forbid(x5200)] type T = S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:158:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:169:14\n    |\n LL |     #[forbid(x5200)] impl S { }\n    |              ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:162:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:173:8\n    |\n LL | #[deny(x5100)]\n    |        ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:165:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:176:25\n    |\n LL |     mod inner { #![deny(x5100)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:168:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:179:12\n    |\n LL |     #[deny(x5100)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:171:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:182:12\n    |\n LL |     #[deny(x5100)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:174:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:185:12\n    |\n LL |     #[deny(x5100)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:177:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:188:12\n    |\n LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:447:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:464:1\n    |\n LL | #[macro_escape]\n    | ^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:450:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:467:17\n    |\n LL |     mod inner { #![macro_escape] }\n    |                 ^^^^^^^^^^^^^^^^\n    |\n    = help: try an outer attribute: `#[macro_use]`\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:221:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:233:17\n    |\n LL |     mod inner { #![plugin_registrar] }\n    |                 ^^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:227:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:241:5\n    |\n LL |     #[plugin_registrar] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:231:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:246:5\n    |\n LL |     #[plugin_registrar] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:235:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:251:5\n    |\n LL |     #[plugin_registrar] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:217:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:228:1\n    |\n LL | #[plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:40:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:43:1\n    |\n LL | #![plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `crate_id`: no longer used.\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:91:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:96:1\n    |\n LL | #![crate_id = \"10\"]\n    | ^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n \n warning: use of deprecated attribute `no_start`: no longer used.\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:96:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:105:1\n    |\n LL | #![no_start]\n    | ^^^^^^^^^^^^ help: remove this attribute\n \n+warning: attribute should be applied to a function\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:526:1\n+   |\n+LL |   #[cold]\n+   |   ^^^^^^^\n+...\n+LL | / mod cold {\n+LL | |\n+LL | |\n+LL | |     mod inner { #![cold] }\n+...  |\n+LL | |\n+LL | | }\n+   | |_- not a function\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:37:9\n+   |\n+LL | #![warn(unused_attributes, unknown_lints)]\n+   |         ^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:555:1\n+   |\n+LL |   #[link_name = \"1900\"]\n+   |   ^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL | / mod link_name {\n+LL | |\n+LL | |\n+LL | |     #[link_name = \"1900\"]\n+...  |\n+LL | |\n+LL | | }\n+   | |_- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:594:1\n+   |\n+LL |   #[link_section = \"1800\"]\n+   |   ^^^^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL | / mod link_section {\n+LL | |\n+LL | |\n+LL | |     mod inner { #![link_section=\"1800\"] }\n+...  |\n+LL | |\n+LL | | }\n+   | |_- not a function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a function\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:532:17\n+   |\n+LL |     mod inner { #![cold] }\n+   |     ------------^^^^^^^^-- not a function\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a function\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:539:5\n+   |\n+LL |     #[cold] struct S;\n+   |     ^^^^^^^ --------- not a function\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a function\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:544:5\n+   |\n+LL |     #[cold] type T = S;\n+   |     ^^^^^^^ ----------- not a function\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a function\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:549:5\n+   |\n+LL |     #[cold] impl S { }\n+   |     ^^^^^^^ ---------- not a function\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:561:5\n+   |\n+LL |     #[link_name = \"1900\"]\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     extern { }\n+   |     ---------- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+help: try `#[link(name = \"1900\")]` instead\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:561:5\n+   |\n+LL |     #[link_name = \"1900\"]\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:568:17\n+   |\n+LL |     mod inner { #![link_name=\"1900\"] }\n+   |     ------------^^^^^^^^^^^^^^^^^^^^-- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:573:5\n+   |\n+LL |     #[link_name = \"1900\"] fn f() { }\n+   |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:578:5\n+   |\n+LL |     #[link_name = \"1900\"] struct S;\n+   |     ^^^^^^^^^^^^^^^^^^^^^ --------- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:583:5\n+   |\n+LL |     #[link_name = \"1900\"] type T = S;\n+   |     ^^^^^^^^^^^^^^^^^^^^^ ----------- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:588:5\n+   |\n+LL |     #[link_name = \"1900\"] impl S { }\n+   |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:600:17\n+   |\n+LL |     mod inner { #![link_section=\"1800\"] }\n+   |     ------------^^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:607:5\n+   |\n+LL |     #[link_section = \"1800\"] struct S;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:612:5\n+   |\n+LL |     #[link_section = \"1800\"] type T = S;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:617:5\n+   |\n+LL |     #[link_section = \"1800\"] impl S { }\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n warning: the feature `rust1` has been stable since 1.0.0 and no longer requires an attribute to enable\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:94:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:101:12\n    |\n LL | #![feature(rust1)]\n    |            ^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:185:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:196:5\n    |\n LL |     #[macro_use] fn f() { }\n    |     ^^^^^^^^^^^^\n-   |\n-note: the lint level is defined here\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:36:9\n-   |\n-LL | #![warn(unused_attributes, unknown_lints)]\n-   |         ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:188:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:199:5\n    |\n LL |     #[macro_use] struct S;\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:191:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:202:5\n    |\n LL |     #[macro_use] type T = S;\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:194:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:205:5\n    |\n LL |     #[macro_use] impl S { }\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:201:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:212:17\n    |\n LL |     mod inner { #![macro_export] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:204:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:215:5\n    |\n LL |     #[macro_export] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:207:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:218:5\n    |\n LL |     #[macro_export] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:210:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:221:5\n    |\n LL |     #[macro_export] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:213:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:224:5\n    |\n LL |     #[macro_export] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:198:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:209:1\n    |\n LL | #[macro_export]\n    | ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:221:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:233:17\n    |\n LL |     mod inner { #![plugin_registrar] }\n    |                 ^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:227:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:241:5\n    |\n LL |     #[plugin_registrar] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:231:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:246:5\n    |\n LL |     #[plugin_registrar] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:235:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:251:5\n    |\n LL |     #[plugin_registrar] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:217:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:228:1\n    |\n LL | #[plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:243:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:260:17\n    |\n LL |     mod inner { #![main] }\n    |                 ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:248:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:265:5\n    |\n LL |     #[main] struct S;\n    |     ^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:251:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:268:5\n    |\n LL |     #[main] type T = S;\n    |     ^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:254:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:271:5\n    |\n LL |     #[main] impl S { }\n    |     ^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:240:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:257:1\n    |\n LL | #[main]\n    | ^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:261:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:278:17\n    |\n LL |     mod inner { #![start] }\n    |                 ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:266:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:283:5\n    |\n LL |     #[start] struct S;\n    |     ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:269:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:286:5\n    |\n LL |     #[start] type T = S;\n    |     ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:272:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:289:5\n    |\n LL |     #[start] impl S { }\n    |     ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:258:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:275:1\n    |\n LL | #[start]\n    | ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:325:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:342:5\n    |\n LL |     #[path = \"3800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:328:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:345:5\n    |\n LL |     #[path = \"3800\"]  struct S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:331:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:348:5\n    |\n LL |     #[path = \"3800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:334:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:351:5\n    |\n LL |     #[path = \"3800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:341:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:358:17\n    |\n LL |     mod inner { #![automatically_derived] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:344:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:361:5\n    |\n LL |     #[automatically_derived] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:347:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:364:5\n    |\n LL |     #[automatically_derived] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:350:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:367:5\n    |\n LL |     #[automatically_derived] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:353:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:370:5\n    |\n LL |     #[automatically_derived] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:338:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:355:1\n    |\n LL | #[automatically_derived]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:373:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:390:17\n    |\n LL |     mod inner { #![should_panic] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:376:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:393:5\n    |\n LL |     #[should_panic] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:379:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:396:5\n    |\n LL |     #[should_panic] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:382:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:399:5\n    |\n LL |     #[should_panic] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:385:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:402:5\n    |\n LL |     #[should_panic] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:370:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:387:1\n    |\n LL | #[should_panic]\n    | ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:392:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:409:17\n    |\n LL |     mod inner { #![ignore] }\n    |                 ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:395:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:412:5\n    |\n LL |     #[ignore] fn f() { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:415:5\n    |\n LL |     #[ignore] struct S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:418:5\n    |\n LL |     #[ignore] type T = S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:404:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:421:5\n    |\n LL |     #[ignore] impl S { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:389:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:406:1\n    |\n LL | #[ignore]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:411:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:428:17\n    |\n LL |     mod inner { #![no_implicit_prelude] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:414:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:431:5\n    |\n LL |     #[no_implicit_prelude] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:417:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:434:5\n    |\n LL |     #[no_implicit_prelude] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:420:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:437:5\n    |\n LL |     #[no_implicit_prelude] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:423:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:440:5\n    |\n LL |     #[no_implicit_prelude] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:408:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:425:1\n    |\n LL | #[no_implicit_prelude]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:447:17\n    |\n LL |     mod inner { #![reexport_test_harness_main=\"2900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:433:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:450:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:436:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:453:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:439:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:456:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:442:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:459:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:427:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:444:1\n    |\n LL | #[reexport_test_harness_main = \"2900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:453:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:471:5\n    |\n LL |     #[macro_escape] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:456:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:474:5\n    |\n LL |     #[macro_escape] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:459:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:477:5\n    |\n LL |     #[macro_escape] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:462:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:480:5\n    |\n LL |     #[macro_escape] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:470:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:488:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:470:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:488:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:474:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:492:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:474:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:492:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:478:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:496:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:478:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:496:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:482:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:500:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:482:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:500:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:486:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:504:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:486:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:504:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:466:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:484:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:466:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:484:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:573:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:573:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:577:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:577:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:581:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:581:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:585:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:585:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:589:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:705:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:589:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:705:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:569:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:569:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:598:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:714:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:598:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:714:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:602:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:718:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:602:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:718:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:606:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:722:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:606:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:722:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:610:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:610:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:614:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:730:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:614:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:730:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:594:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:710:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:594:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:710:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:623:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:739:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:623:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:739:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:627:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:743:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:627:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:743:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:631:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:747:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:631:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:747:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:751:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:751:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:755:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:755:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:619:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:735:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:619:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:735:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:649:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:765:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:649:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:765:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:653:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:769:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:653:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:769:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:657:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:773:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:657:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:773:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:661:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:777:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:661:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:777:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:665:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:781:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:665:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:781:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:645:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:761:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:645:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:761:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:687:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:803:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:687:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:803:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:691:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:807:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:691:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:807:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:695:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:811:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:695:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:811:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:815:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:815:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:819:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:819:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:683:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:799:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:683:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:799:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:712:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:828:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:712:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:828:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:832:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:832:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:836:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:836:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:724:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:840:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:724:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:840:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:728:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:844:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:728:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:844:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:708:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:824:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:708:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:824:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:40:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:43:1\n    |\n LL | #![plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:50:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:55:1\n    |\n LL | #![macro_export]\n    | ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:53:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:58:1\n    |\n LL | #![main]\n    | ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:54:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:59:1\n    |\n LL | #![start]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:57:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:62:1\n    |\n LL | #![repr()]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:59:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:64:1\n    |\n LL | #![path = \"3800\"]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:60:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:65:1\n    |\n LL | #![automatically_derived]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:62:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:67:1\n    |\n LL | #![no_link]\n    | ^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:64:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:69:1\n    |\n LL | #![should_panic]\n    | ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:65:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:70:1\n    |\n LL | #![ignore]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:71:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:76:1\n    |\n LL | #![proc_macro_derive()]\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: 197 warnings emitted\n+warning: 214 warnings emitted\n "}, {"sha": "21108da5006141eabb4df574743c230f03f009dd", "filename": "src/test/ui/issues/issue-47725.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Fissues%2Fissue-47725.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Fissues%2Fissue-47725.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47725.rs?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -1,8 +1,14 @@\n-#[link_name = \"foo\"] //~ ERROR attribute should be applied to a foreign function or static\n+// ignore-tidy-linelength\n+#![warn(unused_attributes)] //~ NOTE lint level is defined here\n+\n+#[link_name = \"foo\"]\n+//~^ WARN attribute should be applied to a foreign function or static [unused_attributes]\n+//~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n struct Foo; //~ NOTE not a foreign function or static\n \n #[link_name = \"foobar\"]\n-//~^ ERROR attribute should be applied to a foreign function or static\n+//~^ WARN attribute should be applied to a foreign function or static [unused_attributes]\n+//~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n //~| HELP try `#[link(name = \"foobar\")]` instead\n extern \"C\" {\n     fn foo() -> u32;\n@@ -12,7 +18,8 @@ extern \"C\" {\n #[link_name]\n //~^ ERROR malformed `link_name` attribute input\n //~| HELP must be of the form\n-//~| ERROR attribute should be applied to a foreign function or static\n+//~| WARN attribute should be applied to a foreign function or static [unused_attributes]\n+//~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n //~| HELP try `#[link(name = \"...\")]` instead\n extern \"C\" {\n     fn bar() -> u32;"}, {"sha": "b1e8d3292eb93480477c375dec1cdec6388be0d6", "filename": "src/test/ui/issues/issue-47725.stderr", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Fissues%2Fissue-47725.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Fissues%2Fissue-47725.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47725.stderr?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -1,19 +1,27 @@\n error: malformed `link_name` attribute input\n-  --> $DIR/issue-47725.rs:12:1\n+  --> $DIR/issue-47725.rs:18:1\n    |\n LL | #[link_name]\n    | ^^^^^^^^^^^^ help: must be of the form: `#[link_name = \"name\"]`\n \n-error: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-47725.rs:1:1\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-47725.rs:4:1\n    |\n LL | #[link_name = \"foo\"]\n    | ^^^^^^^^^^^^^^^^^^^^\n+...\n LL | struct Foo;\n    | ----------- not a foreign function or static\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-47725.rs:2:9\n+   |\n+LL | #![warn(unused_attributes)]\n+   |         ^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-error: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-47725.rs:4:1\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-47725.rs:9:1\n    |\n LL |   #[link_name = \"foobar\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -23,14 +31,15 @@ LL | |     fn foo() -> u32;\n LL | | }\n    | |_- not a foreign function or static\n    |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n help: try `#[link(name = \"foobar\")]` instead\n-  --> $DIR/issue-47725.rs:4:1\n+  --> $DIR/issue-47725.rs:9:1\n    |\n LL | #[link_name = \"foobar\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-47725.rs:12:1\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-47725.rs:18:1\n    |\n LL |   #[link_name]\n    |   ^^^^^^^^^^^^\n@@ -40,11 +49,12 @@ LL | |     fn bar() -> u32;\n LL | | }\n    | |_- not a foreign function or static\n    |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n help: try `#[link(name = \"...\")]` instead\n-  --> $DIR/issue-47725.rs:12:1\n+  --> $DIR/issue-47725.rs:18:1\n    |\n LL | #[link_name]\n    | ^^^^^^^^^^^^\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error; 3 warnings emitted\n "}, {"sha": "3f0b8bc5e384eee5490f8c018245e5c2f5409cb7", "filename": "src/test/ui/issues/issue-54044.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Fissues%2Fissue-54044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Fissues%2Fissue-54044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54044.rs?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -1,7 +1,14 @@\n-#[cold] //~ ERROR attribute should be applied to a function\n+// ignore-tidy-linelength\n+#![deny(unused_attributes)] //~ NOTE lint level is defined here\n+\n+#[cold]\n+//~^ ERROR attribute should be applied to a function\n+//~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n struct Foo; //~ NOTE not a function\n \n fn main() {\n-    #[cold] //~ ERROR attribute should be applied to a function\n+    #[cold]\n+    //~^ ERROR attribute should be applied to a function\n+    //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n     5; //~ NOTE not a function\n }"}, {"sha": "a13e84bbee1a631a2f84565afb5f58eddfa9ae7e", "filename": "src/test/ui/issues/issue-54044.stderr", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Fissues%2Fissue-54044.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Fissues%2Fissue-54044.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54044.stderr?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -1,18 +1,29 @@\n error: attribute should be applied to a function\n-  --> $DIR/issue-54044.rs:1:1\n+  --> $DIR/issue-54044.rs:4:1\n    |\n LL | #[cold]\n    | ^^^^^^^\n+...\n LL | struct Foo;\n    | ----------- not a function\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-54044.rs:2:9\n+   |\n+LL | #![deny(unused_attributes)]\n+   |         ^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n error: attribute should be applied to a function\n-  --> $DIR/issue-54044.rs:5:5\n+  --> $DIR/issue-54044.rs:10:5\n    |\n LL |     #[cold]\n    |     ^^^^^^^\n+...\n LL |     5;\n    |     - not a function\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n error: aborting due to 2 previous errors\n "}, {"sha": "78c695d0025781e14986e3a8bf1831bfea8df9f0", "filename": "src/test/ui/macros/issue-68060.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.rs?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -4,10 +4,13 @@ fn main() {\n             #[target_feature(enable = \"\")]\n             //~^ ERROR: attribute should be applied to a function\n             //~| ERROR: the feature named `` is not valid for this target\n+            //~| NOTE: `` is not valid for this target\n             #[track_caller]\n             //~^ ERROR: attribute should be applied to function [E0739]\n             //~| ERROR: `#[track_caller]` requires Rust ABI [E0737]\n             |_| (),\n+            //~^ NOTE: not a function\n+            //~| NOTE: not a function\n         )\n         .next();\n }"}, {"sha": "fa236939a40d786458c699c785feea0af53b1eab", "filename": "src/test/ui/macros/issue-68060.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-68060.stderr?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -8,7 +8,7 @@ LL |             |_| (),\n    |             ------ not a function\n \n error[E0739]: attribute should be applied to function\n-  --> $DIR/issue-68060.rs:7:13\n+  --> $DIR/issue-68060.rs:8:13\n    |\n LL |             #[track_caller]\n    |             ^^^^^^^^^^^^^^^"}, {"sha": "5ea7821554300958907045ee83c100290c447930", "filename": "src/test/ui/target-feature/invalid-attribute.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.rs?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -13,6 +13,7 @@\n // ignore-sparc64\n \n #![feature(target_feature)]\n+#![warn(unused_attributes)]\n \n #[target_feature = \"+sse2\"]\n //~^ ERROR malformed `target_feature` attribute\n@@ -48,17 +49,20 @@ struct Foo;\n \n #[target_feature(enable = \"sse2\")]\n //~^ ERROR attribute should be applied to a function\n-enum Bar { }\n+enum Bar {}\n //~^ NOTE not a function\n \n #[target_feature(enable = \"sse2\")]\n //~^ ERROR attribute should be applied to a function\n-union Qux { f1: u16, f2: u16 }\n+union Qux {\n //~^ NOTE not a function\n+    f1: u16,\n+    f2: u16,\n+}\n \n #[target_feature(enable = \"sse2\")]\n //~^ ERROR attribute should be applied to a function\n-trait Baz { }\n+trait Baz {}\n //~^ NOTE not a function\n \n #[inline(always)]"}, {"sha": "8c8e24ccc55ccc7b19d7a98cdf15f2caf72efe01", "filename": "src/test/ui/target-feature/invalid-attribute.stderr", "status": "modified", "additions": 27, "deletions": 23, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f745b34960b2146dbaa7337856e7c5461cca29d5/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.stderr?ref=f745b34960b2146dbaa7337856e7c5461cca29d5", "patch": "@@ -1,29 +1,29 @@\n error: malformed `target_feature` attribute input\n-  --> $DIR/invalid-attribute.rs:17:1\n+  --> $DIR/invalid-attribute.rs:18:1\n    |\n LL | #[target_feature = \"+sse2\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: must be of the form: `#[target_feature(enable = \"name\")]`\n \n error: the feature named `foo` is not valid for this target\n-  --> $DIR/invalid-attribute.rs:19:18\n+  --> $DIR/invalid-attribute.rs:20:18\n    |\n LL | #[target_feature(enable = \"foo\")]\n    |                  ^^^^^^^^^^^^^^ `foo` is not valid for this target\n \n error: malformed `target_feature` attribute input\n-  --> $DIR/invalid-attribute.rs:22:18\n+  --> $DIR/invalid-attribute.rs:23:18\n    |\n LL | #[target_feature(bar)]\n    |                  ^^^ help: must be of the form: `enable = \"..\"`\n \n error: malformed `target_feature` attribute input\n-  --> $DIR/invalid-attribute.rs:24:18\n+  --> $DIR/invalid-attribute.rs:25:18\n    |\n LL | #[target_feature(disable = \"baz\")]\n    |                  ^^^^^^^^^^^^^^^ help: must be of the form: `enable = \"..\"`\n \n error[E0658]: `#[target_feature(..)]` can only be applied to `unsafe` functions\n-  --> $DIR/invalid-attribute.rs:28:1\n+  --> $DIR/invalid-attribute.rs:29:1\n    |\n LL | #[target_feature(enable = \"sse2\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -35,7 +35,7 @@ LL | fn bar() {}\n    = help: add `#![feature(target_feature_11)]` to the crate attributes to enable\n \n error: attribute should be applied to a function\n-  --> $DIR/invalid-attribute.rs:34:1\n+  --> $DIR/invalid-attribute.rs:35:1\n    |\n LL | #[target_feature(enable = \"sse2\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -44,7 +44,7 @@ LL | mod another {}\n    | -------------- not a function\n \n error: attribute should be applied to a function\n-  --> $DIR/invalid-attribute.rs:39:1\n+  --> $DIR/invalid-attribute.rs:40:1\n    |\n LL | #[target_feature(enable = \"sse2\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -53,7 +53,7 @@ LL | const FOO: usize = 7;\n    | --------------------- not a function\n \n error: attribute should be applied to a function\n-  --> $DIR/invalid-attribute.rs:44:1\n+  --> $DIR/invalid-attribute.rs:45:1\n    |\n LL | #[target_feature(enable = \"sse2\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -62,40 +62,44 @@ LL | struct Foo;\n    | ----------- not a function\n \n error: attribute should be applied to a function\n-  --> $DIR/invalid-attribute.rs:49:1\n+  --> $DIR/invalid-attribute.rs:50:1\n    |\n LL | #[target_feature(enable = \"sse2\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |\n-LL | enum Bar { }\n-   | ------------ not a function\n+LL | enum Bar {}\n+   | ----------- not a function\n \n error: attribute should be applied to a function\n-  --> $DIR/invalid-attribute.rs:54:1\n+  --> $DIR/invalid-attribute.rs:55:1\n    |\n-LL | #[target_feature(enable = \"sse2\")]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |   #[target_feature(enable = \"sse2\")]\n+   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |\n-LL | union Qux { f1: u16, f2: u16 }\n-   | ------------------------------ not a function\n+LL | / union Qux {\n+LL | |\n+LL | |     f1: u16,\n+LL | |     f2: u16,\n+LL | | }\n+   | |_- not a function\n \n error: attribute should be applied to a function\n-  --> $DIR/invalid-attribute.rs:59:1\n+  --> $DIR/invalid-attribute.rs:63:1\n    |\n LL | #[target_feature(enable = \"sse2\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |\n-LL | trait Baz { }\n-   | ------------- not a function\n+LL | trait Baz {}\n+   | ------------ not a function\n \n error: cannot use `#[inline(always)]` with `#[target_feature]`\n-  --> $DIR/invalid-attribute.rs:64:1\n+  --> $DIR/invalid-attribute.rs:68:1\n    |\n LL | #[inline(always)]\n    | ^^^^^^^^^^^^^^^^^\n \n error: attribute should be applied to a function\n-  --> $DIR/invalid-attribute.rs:82:5\n+  --> $DIR/invalid-attribute.rs:86:5\n    |\n LL |       #[target_feature(enable = \"sse2\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -107,7 +111,7 @@ LL | |     }\n    | |_____- not a function\n \n error: attribute should be applied to a function\n-  --> $DIR/invalid-attribute.rs:90:5\n+  --> $DIR/invalid-attribute.rs:94:5\n    |\n LL |     #[target_feature(enable = \"sse2\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -116,7 +120,7 @@ LL |     || {};\n    |     ----- not a function\n \n error[E0658]: `#[target_feature(..)]` can only be applied to `unsafe` functions\n-  --> $DIR/invalid-attribute.rs:74:5\n+  --> $DIR/invalid-attribute.rs:78:5\n    |\n LL |     #[target_feature(enable = \"sse2\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}