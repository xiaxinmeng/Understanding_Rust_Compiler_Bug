{"sha": "f6fd4c4a74b768f05c3dff8e991066e425ebc368", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZmQ0YzRhNzRiNzY4ZjA1YzNkZmY4ZTk5MTA2NmU0MjVlYmMzNjg=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-05-10T17:52:25Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-05-10T17:52:25Z"}, "message": "Correcy use tree and type args docs", "tree": {"sha": "10d81d015aaea4348d9407f2b43de7f8133f9e20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10d81d015aaea4348d9407f2b43de7f8133f9e20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6fd4c4a74b768f05c3dff8e991066e425ebc368", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6fd4c4a74b768f05c3dff8e991066e425ebc368", "html_url": "https://github.com/rust-lang/rust/commit/f6fd4c4a74b768f05c3dff8e991066e425ebc368", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6fd4c4a74b768f05c3dff8e991066e425ebc368/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a82ee0de25901447fc49a9337d7290c0e6f6532", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a82ee0de25901447fc49a9337d7290c0e6f6532", "html_url": "https://github.com/rust-lang/rust/commit/9a82ee0de25901447fc49a9337d7290c0e6f6532"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "2b652dcb5088d686485c90aeb6b668b4df258dbf", "filename": "crates/ra_syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f6fd4c4a74b768f05c3dff8e991066e425ebc368/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6fd4c4a74b768f05c3dff8e991066e425ebc368/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=f6fd4c4a74b768f05c3dff8e991066e425ebc368", "patch": "@@ -2234,7 +2234,7 @@ impl UseItem {\n /// pub use \u2770 foo::\u2770 * \u2771 \u2771;\n /// use \u2770 bar as baz \u2771;\n /// use \u2770 bruh::bruuh::{ \u2770 self \u2771, \u2770 blin \u2771 } \u2771;\n-/// use \u2770 { \u2770 blin::blen \u2771 } \u2771 // TODO: clarify if top-level curlies are `UseTree`\n+/// use \u2770 { \u2770 blin::blen \u2771 } \u2771\n /// ```\n ///\n /// [Reference](https://doc.rust-lang.org/reference/items/use-declarations.html)\n@@ -2374,7 +2374,7 @@ impl PathSegment {\n /// List of type arguments that are passed at generic instantiation site.\n ///\n /// ```\n-/// use foo \u2770 ::<'a, u64, Item = Bar, 42, true> \u2771::bar;\n+/// type _ = Foo \u2770 ::<'a, u64, Item = Bar, 42, {true}> \u2771::Bar;\n ///\n /// Vec\u2770 ::<bool> \u2771::();\n /// ```\n@@ -2397,7 +2397,7 @@ impl TypeArgList {\n /// Type argument that is passed at generic instantiation site.\n ///\n /// ```\n-/// use foo::<'a, \u2770 u64 \u2771, \u2770 bool \u2771, Item = Bar, 42>::baz;\n+/// type _ = Foo::<'a, \u2770 u64 \u2771, \u2770 bool \u2771, Item = Bar, 42>::Baz;\n /// ```\n ///\n /// [Reference](https://doc.rust-lang.org/reference/paths.html#paths-in-expressions)"}, {"sha": "815c5f8856ce0f57e52162f3b887a85e369d98f3", "filename": "xtask/src/ast_src.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f6fd4c4a74b768f05c3dff8e991066e425ebc368/xtask%2Fsrc%2Fast_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6fd4c4a74b768f05c3dff8e991066e425ebc368/xtask%2Fsrc%2Fast_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fast_src.rs?ref=f6fd4c4a74b768f05c3dff8e991066e425ebc368", "patch": "@@ -1831,14 +1831,13 @@ pub(crate) const AST_SRC: AstSrc = AstSrc {\n             UseTree,\n         }\n \n-        // TODO: verify example correctness\n         /// Use tree.\n         ///\n         /// ```\n         /// pub use \u2770 foo::\u2770 * \u2771 \u2771;\n         /// use \u2770 bar as baz \u2771;\n         /// use \u2770 bruh::bruuh::{ \u2770 self \u2771, \u2770 blin \u2771 } \u2771;\n-        /// use \u2770 { \u2770 blin::blen \u2771 } \u2771 // TODO: clarify if top-level curlies are `UseTree`\n+        /// use \u2770 { \u2770 blin::blen \u2771 } \u2771\n         /// ```\n         ///\n         /// [Reference](https://doc.rust-lang.org/reference/items/use-declarations.html)\n@@ -1929,11 +1928,10 @@ pub(crate) const AST_SRC: AstSrc = AstSrc {\n             T![::], T![crate], T![self], T![super], T![<], NameRef, TypeArgList, ParamList, RetType, PathType, T![>]\n         }\n \n-        // TODO: verify the example\n         /// List of type arguments that are passed at generic instantiation site.\n         ///\n         /// ```\n-        /// use foo \u2770 ::<'a, u64, Item = Bar, 42, true> \u2771::bar;\n+        /// type _ = Foo \u2770 ::<'a, u64, Item = Bar, 42, {true}> \u2771::Bar;\n         ///\n         /// Vec\u2770 ::<bool> \u2771::();\n         /// ```\n@@ -1953,7 +1951,7 @@ pub(crate) const AST_SRC: AstSrc = AstSrc {\n         /// Type argument that is passed at generic instantiation site.\n         ///\n         /// ```\n-        /// use foo::<'a, \u2770 u64 \u2771, \u2770 bool \u2771, Item = Bar, 42>::baz;\n+        /// type _ = Foo::<'a, \u2770 u64 \u2771, \u2770 bool \u2771, Item = Bar, 42>::Baz;\n         /// ```\n         ///\n         /// [Reference](https://doc.rust-lang.org/reference/paths.html#paths-in-expressions)"}]}