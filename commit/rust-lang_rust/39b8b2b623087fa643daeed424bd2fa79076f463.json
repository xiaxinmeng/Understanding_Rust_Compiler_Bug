{"sha": "39b8b2b623087fa643daeed424bd2fa79076f463", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5YjhiMmI2MjMwODdmYTY0M2RhZWVkNDI0YmQyZmE3OTA3NmY0NjM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-14T18:16:43Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-21T18:22:31Z"}, "message": "Remove StructRet arg attr\n\nIt is applied exactly when the return value has an indirect pass mode.\nExcept for InReg on x86 fastcall, arg attrs are now only used for\noptimization purposes and thus are fine to ignore.", "tree": {"sha": "f95a86e89504bccfa8d75930b5eaa19cf76e3dc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f95a86e89504bccfa8d75930b5eaa19cf76e3dc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39b8b2b623087fa643daeed424bd2fa79076f463", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39b8b2b623087fa643daeed424bd2fa79076f463", "html_url": "https://github.com/rust-lang/rust/commit/39b8b2b623087fa643daeed424bd2fa79076f463", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39b8b2b623087fa643daeed424bd2fa79076f463/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42b0b8080d10b412d51d414a0de0e08959a64f5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/42b0b8080d10b412d51d414a0de0e08959a64f5f", "html_url": "https://github.com/rust-lang/rust/commit/42b0b8080d10b412d51d414a0de0e08959a64f5f"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "bb152104d64d3d1fc22a4ef283a96c8393187e30", "filename": "compiler/rustc_codegen_llvm/src/abi.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/39b8b2b623087fa643daeed424bd2fa79076f463/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39b8b2b623087fa643daeed424bd2fa79076f463/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs?ref=39b8b2b623087fa643daeed424bd2fa79076f463", "patch": "@@ -36,7 +36,7 @@ impl ArgAttributeExt for ArgAttribute {\n     where\n         F: FnMut(llvm::Attribute),\n     {\n-        for_each_kind!(self, f, NoAlias, NoCapture, NonNull, ReadOnly, StructRet, InReg)\n+        for_each_kind!(self, f, NoAlias, NoCapture, NonNull, ReadOnly, InReg)\n     }\n }\n \n@@ -429,7 +429,8 @@ impl<'tcx> FnAbiLlvmExt<'tcx> for FnAbi<'tcx, Ty<'tcx>> {\n             }\n             PassMode::Indirect { ref attrs, extra_attrs: _, on_stack } => {\n                 assert!(!on_stack);\n-                apply(attrs);\n+                let i = apply(attrs);\n+                llvm::Attribute::StructRet.apply_llfn(llvm::AttributePlace::Argument(i), llfn);\n             }\n             _ => {}\n         }\n@@ -484,7 +485,9 @@ impl<'tcx> FnAbiLlvmExt<'tcx> for FnAbi<'tcx, Ty<'tcx>> {\n             }\n             PassMode::Indirect { ref attrs, extra_attrs: _, on_stack } => {\n                 assert!(!on_stack);\n-                apply(attrs);\n+                let i = apply(attrs);\n+                llvm::Attribute::StructRet\n+                    .apply_callsite(llvm::AttributePlace::Argument(i), callsite);\n             }\n             _ => {}\n         }"}, {"sha": "666160ba497633b9b4c2d9528432267a142a5121", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/39b8b2b623087fa643daeed424bd2fa79076f463/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39b8b2b623087fa643daeed424bd2fa79076f463/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=39b8b2b623087fa643daeed424bd2fa79076f463", "patch": "@@ -2801,10 +2801,6 @@ where\n             for arg in &mut self.args {\n                 fixup(arg, false);\n             }\n-            if let PassMode::Indirect { ref mut attrs, extra_attrs: _, on_stack: _ } = self.ret.mode\n-            {\n-                attrs.set(ArgAttribute::StructRet);\n-            }\n             return;\n         }\n "}, {"sha": "91b004c41d956ee87aa2a33f12f99417b0053665", "filename": "compiler/rustc_target/src/abi/call/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/39b8b2b623087fa643daeed424bd2fa79076f463/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39b8b2b623087fa643daeed424bd2fa79076f463/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs?ref=39b8b2b623087fa643daeed424bd2fa79076f463", "patch": "@@ -59,7 +59,6 @@ mod attr_impl {\n             const NoCapture = 1 << 2;\n             const NonNull   = 1 << 3;\n             const ReadOnly  = 1 << 4;\n-            const StructRet = 1 << 6;\n             const InReg     = 1 << 8;\n         }\n     }\n@@ -619,10 +618,6 @@ impl<'a, Ty> FnAbi<'a, Ty> {\n             a => return Err(format!(\"unrecognized arch \\\"{}\\\" in target specification\", a)),\n         }\n \n-        if let PassMode::Indirect { ref mut attrs, extra_attrs: _, on_stack: _ } = self.ret.mode {\n-            attrs.set(ArgAttribute::StructRet);\n-        }\n-\n         Ok(())\n     }\n }"}]}