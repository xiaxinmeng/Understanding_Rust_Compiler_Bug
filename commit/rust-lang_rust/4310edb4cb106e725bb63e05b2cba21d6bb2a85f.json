{"sha": "4310edb4cb106e725bb63e05b2cba21d6bb2a85f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMTBlZGI0Y2IxMDZlNzI1YmI2M2UwNWIyY2JhMjFkNmJiMmE4NWY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-01T15:48:28Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-01T15:48:28Z"}, "message": "handle tuple struct ctors", "tree": {"sha": "8e85338750fb446687aeba9de821727c9e91feff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e85338750fb446687aeba9de821727c9e91feff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4310edb4cb106e725bb63e05b2cba21d6bb2a85f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4310edb4cb106e725bb63e05b2cba21d6bb2a85f", "html_url": "https://github.com/rust-lang/rust/commit/4310edb4cb106e725bb63e05b2cba21d6bb2a85f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4310edb4cb106e725bb63e05b2cba21d6bb2a85f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "584d823bf2c309cb7b40aadd9d55ecc75f7eb9fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/584d823bf2c309cb7b40aadd9d55ecc75f7eb9fc", "html_url": "https://github.com/rust-lang/rust/commit/584d823bf2c309cb7b40aadd9d55ecc75f7eb9fc"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "578a63e44b03b7be3d69f4e18f60b65c6439fc0c", "filename": "src/librustc_mir/transform/add_validation.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4310edb4cb106e725bb63e05b2cba21d6bb2a85f/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4310edb4cb106e725bb63e05b2cba21d6bb2a85f/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs?ref=4310edb4cb106e725bb63e05b2cba21d6bb2a85f", "patch": "@@ -128,7 +128,7 @@ fn fn_contains_unsafe<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, src: MirSource) ->\n                 match tcx.hir.find(cur) {\n                     Some(Node::NodeExpr(&hir::Expr { node: hir::ExprBlock(ref block), ..})) => {\n                         if block_is_unsafe(&*block) {\n-                            // We can bail out here.\n+                            // Found an unsafe block, we can bail out here.\n                             return true;\n                         }\n                     }\n@@ -138,6 +138,10 @@ fn fn_contains_unsafe<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, src: MirSource) ->\n             // Finally, visit the closure itself.\n             finder.visit_expr(item);\n         }\n+        Some(Node::NodeStructCtor(_)) => {\n+            // Auto-generated tuple struct ctor.  Cannot contain unsafe code.\n+            return false;\n+        },\n         Some(_) | None =>\n             bug!(\"Expected function, method or closure, found {}\",\n                  tcx.hir.node_to_string(fn_node_id)),"}, {"sha": "542ba87fef4bdb7a105fc97c477281d329ab2b76", "filename": "src/test/mir-opt/validate_1.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4310edb4cb106e725bb63e05b2cba21d6bb2a85f/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4310edb4cb106e725bb63e05b2cba21d6bb2a85f/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs?ref=4310edb4cb106e725bb63e05b2cba21d6bb2a85f", "patch": "@@ -11,7 +11,7 @@\n // ignore-tidy-linelength\n // compile-flags: -Z verbose -Z mir-emit-validate=1\n \n-struct Test;\n+struct Test(i32);\n \n impl Test {\n     // Make sure we run the pass on a method, not just on bare functions.\n@@ -20,7 +20,7 @@ impl Test {\n \n fn main() {\n     let mut x = 0;\n-    Test.foo(&mut x);\n+    Test(0).foo(&mut x);\n \n     // Also test closures\n     let c = |x: &mut i32| { let y = &*x; *y };\n@@ -31,29 +31,29 @@ fn main() {\n // the interesting lines of code also contain name of the source file, so we cannot test for it.\n \n // END RUST SOURCE\n-// START rustc.node10.EraseRegions.after.mir\n+// START rustc.node12.EraseRegions.after.mir\n //     bb0: {\n //         Validate(Acquire, [_1: &ReFree(DefId { krate: CrateNum(0), node: DefIndex(5) => validate_1/8cd878b::{{impl}}[0]::foo[0] }, BrAnon(0)) Test, _2: &ReFree(DefId { krate: CrateNum(0), node: DefIndex(5) => validate_1/8cd878b::{{impl}}[0]::foo[0] }, BrAnon(1)) mut i32]);\n //         return;\n //     }\n-// END rustc.node10.EraseRegions.after.mir\n-// START rustc.node21.EraseRegions.after.mir\n+// END rustc.node12.EraseRegions.after.mir\n+// START rustc.node23.EraseRegions.after.mir\n // fn main() -> () {\n //     bb0: {\n-//         Validate(Suspend(ReScope(Misc(NodeId(30)))), [_1: i32]);\n+//         Validate(Suspend(ReScope(Misc(NodeId(34)))), [_1: i32]);\n //         _6 = &ReErased mut _1;\n-//         Validate(Acquire, [(*_6): i32/ReScope(Misc(NodeId(30)))]);\n-//         Validate(Suspend(ReScope(Misc(NodeId(30)))), [(*_6): i32/ReScope(Misc(NodeId(30)))]);\n+//         Validate(Acquire, [(*_6): i32/ReScope(Misc(NodeId(34)))]);\n+//         Validate(Suspend(ReScope(Misc(NodeId(34)))), [(*_6): i32/ReScope(Misc(NodeId(34)))]);\n //         _5 = &ReErased mut (*_6);\n-//         Validate(Acquire, [(*_5): i32/ReScope(Misc(NodeId(30)))]);\n-//         Validate(Release, [_3: &ReScope(Misc(NodeId(30))) Test, _5: &ReScope(Misc(NodeId(30))) mut i32]);\n+//         Validate(Acquire, [(*_5): i32/ReScope(Misc(NodeId(34)))]);\n+//         Validate(Release, [_3: &ReScope(Misc(NodeId(34))) Test, _5: &ReScope(Misc(NodeId(34))) mut i32]);\n //         _2 = const Test::foo(_3, _5) -> bb1;\n //     }\n //\n //     bb1: {\n //         Validate(Acquire, [_2: ()]);\n-//         EndRegion(ReScope(Misc(NodeId(30))));\n+//         EndRegion(ReScope(Misc(NodeId(34))));\n //         return;\n //     }\n // }\n-// END rustc.node21.EraseRegions.after.mir\n+// END rustc.node23.EraseRegions.after.mir"}]}