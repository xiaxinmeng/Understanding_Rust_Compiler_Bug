{"sha": "c4fa6d58276c5a4a76c36fca6d4689db415c2817", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0ZmE2ZDU4Mjc2YzVhNGE3NmMzNmZjYTZkNDY4OWRiNDE1YzI4MTc=", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-06-17T05:47:46Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-06-17T05:47:46Z"}, "message": "Move anchor earlier in the DOM for easier layout", "tree": {"sha": "0b50a8515f8e99d346d17e0b94e527beba546c3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b50a8515f8e99d346d17e0b94e527beba546c3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4fa6d58276c5a4a76c36fca6d4689db415c2817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4fa6d58276c5a4a76c36fca6d4689db415c2817", "html_url": "https://github.com/rust-lang/rust/commit/c4fa6d58276c5a4a76c36fca6d4689db415c2817", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4fa6d58276c5a4a76c36fca6d4689db415c2817/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5de1391b88007a1d4f7b1517657a86aae352af1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5de1391b88007a1d4f7b1517657a86aae352af1e", "html_url": "https://github.com/rust-lang/rust/commit/5de1391b88007a1d4f7b1517657a86aae352af1e"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "521464b7b920c20d16f70ef2f95ed6c61dac6c27", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c4fa6d58276c5a4a76c36fca6d4689db415c2817/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4fa6d58276c5a4a76c36fca6d4689db415c2817/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=c4fa6d58276c5a4a76c36fca6d4689db415c2817", "patch": "@@ -1363,6 +1363,7 @@ fn render_impl(\n                         id, item_type, in_trait_class,\n                     );\n                     render_rightside(w, cx, item, outer_version, outer_const_version);\n+                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n                     w.write_str(\"<code>\");\n                     render_assoc_item(\n                         w,\n@@ -1372,7 +1373,6 @@ fn render_impl(\n                         cx,\n                     );\n                     w.write_str(\"</code>\");\n-                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n                     w.write_str(\"</div>\");\n                 }\n             }\n@@ -1381,9 +1381,11 @@ fn render_impl(\n                 let id = cx.derive_id(source_id.clone());\n                 write!(\n                     w,\n-                    \"<div id=\\\"{}\\\" class=\\\"{}{} has-srclink\\\"><code>\",\n+                    \"<div id=\\\"{}\\\" class=\\\"{}{} has-srclink\\\">\",\n                     id, item_type, in_trait_class\n                 );\n+                write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                w.write_str(\"<code>\");\n                 assoc_type(\n                     w,\n                     item,\n@@ -1394,18 +1396,19 @@ fn render_impl(\n                     cx,\n                 );\n                 w.write_str(\"</code>\");\n-                write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n                 w.write_str(\"</div>\");\n             }\n             clean::AssocConstItem(ref ty, ref default) => {\n                 let source_id = format!(\"{}.{}\", item_type, name);\n                 let id = cx.derive_id(source_id.clone());\n                 write!(\n                     w,\n-                    \"<div id=\\\"{}\\\" class=\\\"{}{} has-srclink\\\"><code>\",\n+                    \"<div id=\\\"{}\\\" class=\\\"{}{} has-srclink\\\">\",\n                     id, item_type, in_trait_class\n                 );\n                 render_rightside(w, cx, item, outer_version, outer_const_version);\n+                write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                w.write_str(\"<code>\");\n                 assoc_const(\n                     w,\n                     item,\n@@ -1416,13 +1419,14 @@ fn render_impl(\n                     cx,\n                 );\n                 w.write_str(\"</code>\");\n-                write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n                 w.write_str(\"</div>\");\n             }\n             clean::AssocTypeItem(ref bounds, ref default) => {\n                 let source_id = format!(\"{}.{}\", item_type, name);\n                 let id = cx.derive_id(source_id.clone());\n-                write!(w, \"<div id=\\\"{}\\\" class=\\\"{}{}\\\"><code>\", id, item_type, in_trait_class,);\n+                write!(w, \"<div id=\\\"{}\\\" class=\\\"{}{}\\\">\", id, item_type, in_trait_class,);\n+                write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                w.write_str(\"<code>\");\n                 assoc_type(\n                     w,\n                     item,\n@@ -1433,7 +1437,6 @@ fn render_impl(\n                     cx,\n                 );\n                 w.write_str(\"</code>\");\n-                write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n                 w.write_str(\"</div>\");\n             }\n             clean::StrippedItem(..) => return,\n@@ -1628,6 +1631,7 @@ pub(crate) fn render_impl_summary(\n     };\n     write!(w, \"<div id=\\\"{}\\\" class=\\\"impl has-srclink\\\"{}>\", id, aliases);\n     render_rightside(w, cx, &i.impl_item, outer_version, outer_const_version);\n+    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n     write!(w, \"<code class=\\\"in-band\\\">\");\n \n     if let Some(use_absolute) = use_absolute {\n@@ -1645,7 +1649,6 @@ pub(crate) fn render_impl_summary(\n         write!(w, \"{}\", i.inner_impl().print(false, cx));\n     }\n     write!(w, \"</code>\");\n-    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n \n     let is_trait = i.inner_impl().trait_.is_some();\n     if is_trait {"}]}