{"sha": "b2e4e59fbe201ff23fd2911f2650827ad46902b9", "node_id": "C_kwDOAAsO6NoAKGIyZTRlNTlmYmUyMDFmZjIzZmQyOTExZjI2NTA4MjdhZDQ2OTAyYjk", "commit": {"author": {"name": "DeveloperC286", "email": "DeveloperC@protonmail.com", "date": "2021-09-17T17:25:21Z"}, "committer": {"name": "DeveloperC", "email": "DeveloperC@protonmail.com", "date": "2021-10-05T18:02:36Z"}, "message": "refactor: VecDeques Drain fields to private", "tree": {"sha": "c6f3abd57ffe4442c4874ca2f374afdc1b2f0522", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6f3abd57ffe4442c4874ca2f374afdc1b2f0522"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2e4e59fbe201ff23fd2911f2650827ad46902b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2e4e59fbe201ff23fd2911f2650827ad46902b9", "html_url": "https://github.com/rust-lang/rust/commit/b2e4e59fbe201ff23fd2911f2650827ad46902b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2e4e59fbe201ff23fd2911f2650827ad46902b9/comments", "author": {"login": "DeveloperC286", "id": 65925405, "node_id": "MDQ6VXNlcjY1OTI1NDA1", "avatar_url": "https://avatars.githubusercontent.com/u/65925405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeveloperC286", "html_url": "https://github.com/DeveloperC286", "followers_url": "https://api.github.com/users/DeveloperC286/followers", "following_url": "https://api.github.com/users/DeveloperC286/following{/other_user}", "gists_url": "https://api.github.com/users/DeveloperC286/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeveloperC286/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeveloperC286/subscriptions", "organizations_url": "https://api.github.com/users/DeveloperC286/orgs", "repos_url": "https://api.github.com/users/DeveloperC286/repos", "events_url": "https://api.github.com/users/DeveloperC286/events{/privacy}", "received_events_url": "https://api.github.com/users/DeveloperC286/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DeveloperC286", "id": 65925405, "node_id": "MDQ6VXNlcjY1OTI1NDA1", "avatar_url": "https://avatars.githubusercontent.com/u/65925405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeveloperC286", "html_url": "https://github.com/DeveloperC286", "followers_url": "https://api.github.com/users/DeveloperC286/followers", "following_url": "https://api.github.com/users/DeveloperC286/following{/other_user}", "gists_url": "https://api.github.com/users/DeveloperC286/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeveloperC286/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeveloperC286/subscriptions", "organizations_url": "https://api.github.com/users/DeveloperC286/orgs", "repos_url": "https://api.github.com/users/DeveloperC286/repos", "events_url": "https://api.github.com/users/DeveloperC286/events{/privacy}", "received_events_url": "https://api.github.com/users/DeveloperC286/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25ec8273855fde2d72ae877b397e054de5300e10", "url": "https://api.github.com/repos/rust-lang/rust/commits/25ec8273855fde2d72ae877b397e054de5300e10", "html_url": "https://github.com/rust-lang/rust/commit/25ec8273855fde2d72ae877b397e054de5300e10"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "05f94da6de70d796d077e22d3b4f6509b39cea25", "filename": "library/alloc/src/collections/vec_deque/drain.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b2e4e59fbe201ff23fd2911f2650827ad46902b9/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fdrain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2e4e59fbe201ff23fd2911f2650827ad46902b9/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fdrain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fdrain.rs?ref=b2e4e59fbe201ff23fd2911f2650827ad46902b9", "patch": "@@ -18,10 +18,21 @@ pub struct Drain<\n     T: 'a,\n     #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global,\n > {\n-    pub(crate) after_tail: usize,\n-    pub(crate) after_head: usize,\n-    pub(crate) iter: Iter<'a, T>,\n-    pub(crate) deque: NonNull<VecDeque<T, A>>,\n+    after_tail: usize,\n+    after_head: usize,\n+    iter: Iter<'a, T>,\n+    deque: NonNull<VecDeque<T, A>>,\n+}\n+\n+impl<'a, T, A: Allocator> Drain<'a, T, A> {\n+    pub(super) unsafe fn new(\n+        after_tail: usize,\n+        after_head: usize,\n+        iter: Iter<'a, T>,\n+        deque: NonNull<VecDeque<T, A>>,\n+    ) -> Self {\n+        Drain { after_tail, after_head, iter, deque }\n+    }\n }\n \n #[stable(feature = \"collection_debug\", since = \"1.17.0\")]"}, {"sha": "ea3136cae42b57ad83c237d44f24903b9a101ff5", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b2e4e59fbe201ff23fd2911f2650827ad46902b9/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2e4e59fbe201ff23fd2911f2650827ad46902b9/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=b2e4e59fbe201ff23fd2911f2650827ad46902b9", "patch": "@@ -1269,19 +1269,17 @@ impl<T, A: Allocator> VecDeque<T, A> {\n         // the drain is complete and the Drain destructor is run.\n         self.head = drain_tail;\n \n-        Drain {\n-            deque: NonNull::from(&mut *self),\n-            after_tail: drain_head,\n-            after_head: head,\n-            iter: Iter {\n-                tail: drain_tail,\n-                head: drain_head,\n-                // Crucially, we only create shared references from `self` here and read from\n-                // it.  We do not write to `self` nor reborrow to a mutable reference.\n-                // Hence the raw pointer we created above, for `deque`, remains valid.\n-                ring: unsafe { self.buffer_as_slice() },\n-            },\n-        }\n+        let deque = NonNull::from(&mut *self);\n+        let iter = Iter {\n+            tail: drain_tail,\n+            head: drain_head,\n+            // Crucially, we only create shared references from `self` here and read from\n+            // it.  We do not write to `self` nor reborrow to a mutable reference.\n+            // Hence the raw pointer we created above, for `deque`, remains valid.\n+            ring: unsafe { self.buffer_as_slice() },\n+        };\n+\n+        unsafe { Drain::new(drain_head, head, iter, deque) }\n     }\n \n     /// Clears the `VecDeque`, removing all values."}]}