{"sha": "f40767a1a75089694952273c65d8abfea72f3564", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0MDc2N2ExYTc1MDg5Njk0OTUyMjczYzY1ZDhhYmZlYTcyZjM1NjQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-02T21:50:32Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-02T21:50:32Z"}, "message": "rollup merge of #17705 : thestinger/realloc", "tree": {"sha": "64d0eb802de573f1d5c0473c7f040395b671eab9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64d0eb802de573f1d5c0473c7f040395b671eab9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f40767a1a75089694952273c65d8abfea72f3564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f40767a1a75089694952273c65d8abfea72f3564", "html_url": "https://github.com/rust-lang/rust/commit/f40767a1a75089694952273c65d8abfea72f3564", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f40767a1a75089694952273c65d8abfea72f3564/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d596aa25e174f0e3fe36003326cf06aa5b6c8919", "url": "https://api.github.com/repos/rust-lang/rust/commits/d596aa25e174f0e3fe36003326cf06aa5b6c8919", "html_url": "https://github.com/rust-lang/rust/commit/d596aa25e174f0e3fe36003326cf06aa5b6c8919"}, {"sha": "8d7274b31efe248322f9b0d6a3082a92317f1dfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d7274b31efe248322f9b0d6a3082a92317f1dfa", "html_url": "https://github.com/rust-lang/rust/commit/8d7274b31efe248322f9b0d6a3082a92317f1dfa"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "72384e25c3bee21df381bd6acf1ee45d5d81c194", "filename": "src/liballoc/heap.rs", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f40767a1a75089694952273c65d8abfea72f3564/src%2Fliballoc%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f40767a1a75089694952273c65d8abfea72f3564/src%2Fliballoc%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fheap.rs?ref=f40767a1a75089694952273c65d8abfea72f3564", "patch": "@@ -182,9 +182,15 @@ mod imp {\n \n     #[inline]\n     pub unsafe fn reallocate_inplace(ptr: *mut u8, size: uint, align: uint,\n-                                     _old_size: uint) -> bool {\n+                                     old_size: uint) -> bool {\n         let flags = align_to_flags(align);\n-        je_xallocx(ptr as *mut c_void, size as size_t, 0, flags) == size as size_t\n+        let new_size = je_xallocx(ptr as *mut c_void, size as size_t, 0, flags) as uint;\n+        // checking for failure to shrink is tricky\n+        if size < old_size {\n+            usable_size(size, align) == new_size as uint\n+        } else {\n+            new_size >= size\n+        }\n     }\n \n     #[inline]\n@@ -250,9 +256,9 @@ mod imp {\n     }\n \n     #[inline]\n-    pub unsafe fn reallocate_inplace(_ptr: *mut u8, _size: uint, _align: uint,\n-                                     _old_size: uint) -> bool {\n-        false\n+    pub unsafe fn reallocate_inplace(_ptr: *mut u8, size: uint, _align: uint,\n+                                     old_size: uint) -> bool {\n+        size == old_size\n     }\n \n     #[inline]\n@@ -312,9 +318,9 @@ mod imp {\n     }\n \n     #[inline]\n-    pub unsafe fn reallocate_inplace(_ptr: *mut u8, _size: uint, _align: uint,\n-                                     _old_size: uint) -> bool {\n-        false\n+    pub unsafe fn reallocate_inplace(_ptr: *mut u8, size: uint, _align: uint,\n+                                     old_size: uint) -> bool {\n+        size == old_size\n     }\n \n     #[inline]\n@@ -335,10 +341,21 @@ mod imp {\n }\n \n #[cfg(test)]\n-mod bench {\n+mod test {\n     extern crate test;\n     use self::test::Bencher;\n \n+    #[test]\n+    fn basic_reallocate_inplace_noop() {\n+        unsafe {\n+            let size = 4000;\n+            let ptr = heap::allocate(size, 8);\n+            let ret = heap::reallocate_inplace(ptr, size, 8, size);\n+            heap::deallocate(ptr, size, 8);\n+            assert!(ret);\n+        }\n+    }\n+\n     #[bench]\n     fn alloc_owned_small(b: &mut Bencher) {\n         b.iter(|| {"}]}