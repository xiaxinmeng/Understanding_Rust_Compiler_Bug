{"sha": "3c68da792b52b9071e7e9bdac2b1cf8eb3c9e77b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNjhkYTc5MmI1MmI5MDcxZTdlOWJkYWMyYjFjZjhlYjNjOWU3N2I=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-09-12T09:38:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-09-12T09:38:07Z"}, "message": "don't break parser error recovery in presence of macros\n\nParser has the invariant that `{}` are balanced.\nPrevious code tried (unsucesfuly) maintain the same invariant for\n`$()` as well, but it was done in a rather ad-hoc manner: it's not at\nall obvious that it is possible to maintain both invariants!", "tree": {"sha": "38f7abdcd5c1ea03f8937e31504608320a46dd19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38f7abdcd5c1ea03f8937e31504608320a46dd19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c68da792b52b9071e7e9bdac2b1cf8eb3c9e77b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c68da792b52b9071e7e9bdac2b1cf8eb3c9e77b", "html_url": "https://github.com/rust-lang/rust/commit/3c68da792b52b9071e7e9bdac2b1cf8eb3c9e77b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c68da792b52b9071e7e9bdac2b1cf8eb3c9e77b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d614f463dedc269bd766f74024745e4fb6ba7020", "url": "https://api.github.com/repos/rust-lang/rust/commits/d614f463dedc269bd766f74024745e4fb6ba7020", "html_url": "https://github.com/rust-lang/rust/commit/d614f463dedc269bd766f74024745e4fb6ba7020"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "ffc9e16bba196c526dadc81852ff44ba06d5cc63", "filename": "crates/ra_batch/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c68da792b52b9071e7e9bdac2b1cf8eb3c9e77b/crates%2Fra_batch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c68da792b52b9071e7e9bdac2b1cf8eb3c9e77b/crates%2Fra_batch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_batch%2Fsrc%2Flib.rs?ref=3c68da792b52b9071e7e9bdac2b1cf8eb3c9e77b", "patch": "@@ -89,6 +89,10 @@ pub fn load(\n                         vfs.root2path(root)\n                     );\n                     analysis_change.add_root(source_root_id, is_local);\n+                    analysis_change.set_debug_root_path(\n+                        source_root_id,\n+                        source_roots[&source_root_id].path().display().to_string(),\n+                    );\n \n                     let mut file_map = FxHashMap::default();\n                     for (vfs_file, path, text) in files {"}, {"sha": "f8fba6860be2b84d1495b60950d215820a22cb9d", "filename": "crates/ra_parser/src/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c68da792b52b9071e7e9bdac2b1cf8eb3c9e77b/crates%2Fra_parser%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c68da792b52b9071e7e9bdac2b1cf8eb3c9e77b/crates%2Fra_parser%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fparser.rs?ref=3c68da792b52b9071e7e9bdac2b1cf8eb3c9e77b", "patch": "@@ -5,7 +5,7 @@ use drop_bomb::DropBomb;\n use crate::{\n     event::Event,\n     ParseError,\n-    SyntaxKind::{self, EOF, ERROR, L_DOLLAR, R_DOLLAR, TOMBSTONE},\n+    SyntaxKind::{self, EOF, ERROR, TOMBSTONE},\n     TokenSet, TokenSource, T,\n };\n \n@@ -212,7 +212,7 @@ impl<'t> Parser<'t> {\n     /// Create an error node and consume the next token.\n     pub(crate) fn err_recover(&mut self, message: &str, recovery: TokenSet) {\n         match self.current() {\n-            T!['{'] | T!['}'] | L_DOLLAR | R_DOLLAR => {\n+            T!['{'] | T!['}'] => {\n                 self.error(message);\n                 return;\n             }"}]}