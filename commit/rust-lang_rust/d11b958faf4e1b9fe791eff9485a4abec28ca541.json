{"sha": "d11b958faf4e1b9fe791eff9485a4abec28ca541", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMWI5NThmYWY0ZTFiOWZlNzkxZWZmOTQ4NWE0YWJlYzI4Y2E1NDE=", "commit": {"author": {"name": "daxpedda", "email": "daxpedda@gmail.com", "date": "2019-12-04T20:50:28Z"}, "committer": {"name": "daxpedda", "email": "daxpedda@gmail.com", "date": "2019-12-04T20:51:02Z"}, "message": "Fix false positive in `string_add`.", "tree": {"sha": "b55bd0981a17130b1416f6328d49e80321db81d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b55bd0981a17130b1416f6328d49e80321db81d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d11b958faf4e1b9fe791eff9485a4abec28ca541", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3qx/rJh59vdc2+v9Q9YqPqOI5G8FAl3oHDYACgkQQ9YqPqOI\n5G94WQ/+OefwD6Seo+ReiEweTsqE9k/DvpPpgSFra2uZV433cpJdEhzR1zT8PEl6\neUfH8Qe+dfZTG+cZq2PtaKcTgkEZa1uyx9jg1uRZB+FApFVnBUQcC/U3PtCi0o1f\nOFpSO9lJBlrmkIgxKoIJZQiQBPARwLFflAPir0skoU3ALFvzSmQ4qrb0KCsQy8LG\nQDRFYpHRoQCNvf6LvLqhE8qQ31DZm6pC0GsH7p3GuOTFbuS21/WGpd7/10cOXCZu\nnFMoFa3YfxVa4bAq2nqmKTrD2X4h69D5CFFUXp2AyDh0zV5A4sd0Mowgg2+NCg/L\nAPl7aiiDHT4iBm6CScExdmZAP+xF9kTCCN45nRDdqGZPr6fLxetmu5pWy68bxf0F\ne/7K8NtIw9Om/2glqGmhaKS/DrM2/PnS92MFQXzhfhMAVAafeGeEUkxqAi7O8ud8\nbmeQplsHToM0AJ1w+VgLbcjcgmBAfr0arZi+CMSixl0fhGumLPwdbny8+Q95ccV6\nCfJiP4Ducp9/Ec1sWO/b0Vrn3VN4Dhi1MEc19qmKbihKXgJXnoXGE+C4rN+DmsIz\n6ulw6PXWFF9js9+7ZU5JP67N4rxVrky4ZUofP7DJDtV0m9OKo9MBnfjThZC7OkoZ\nd4pDvP4v8jgUcJJF0L9nC7Vw966qjZA2GxOVw/kMiEB1pQEbOsE=\n=NSXT\n-----END PGP SIGNATURE-----", "payload": "tree b55bd0981a17130b1416f6328d49e80321db81d2\nparent 374db5c0b7a8ebc92ecb35ee21e11961da6c754d\nauthor daxpedda <daxpedda@gmail.com> 1575492628 +0100\ncommitter daxpedda <daxpedda@gmail.com> 1575492662 +0100\n\nFix false positive in `string_add`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d11b958faf4e1b9fe791eff9485a4abec28ca541", "html_url": "https://github.com/rust-lang/rust/commit/d11b958faf4e1b9fe791eff9485a4abec28ca541", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d11b958faf4e1b9fe791eff9485a4abec28ca541/comments", "author": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "374db5c0b7a8ebc92ecb35ee21e11961da6c754d", "url": "https://api.github.com/repos/rust-lang/rust/commits/374db5c0b7a8ebc92ecb35ee21e11961da6c754d", "html_url": "https://github.com/rust-lang/rust/commit/374db5c0b7a8ebc92ecb35ee21e11961da6c754d"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "c1d441c39358af24dfc00da36cefdb9f565b6f1f", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d11b958faf4e1b9fe791eff9485a4abec28ca541/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d11b958faf4e1b9fe791eff9485a4abec28ca541/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=d11b958faf4e1b9fe791eff9485a4abec28ca541", "patch": "@@ -8,7 +8,9 @@ use syntax::source_map::Spanned;\n use if_chain::if_chain;\n \n use crate::utils::SpanlessEq;\n-use crate::utils::{get_parent_expr, is_allowed, match_type, paths, span_lint, span_lint_and_sugg, walk_ptrs_ty};\n+use crate::utils::{\n+    get_parent_expr, in_macro, is_allowed, match_type, paths, span_lint, span_lint_and_sugg, walk_ptrs_ty,\n+};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for string appends of the form `x = x + y` (without\n@@ -80,6 +82,10 @@ declare_lint_pass!(StringAdd => [STRING_ADD, STRING_ADD_ASSIGN]);\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for StringAdd {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n+        if in_macro(e.span) {\n+            return;\n+        }\n+\n         if let ExprKind::Binary(\n             Spanned {\n                 node: BinOpKind::Add, .."}, {"sha": "55f44432bb2f0e947365944787217725c1a9d36d", "filename": "tests/ui/string_add.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d11b958faf4e1b9fe791eff9485a4abec28ca541/tests%2Fui%2Fstring_add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d11b958faf4e1b9fe791eff9485a4abec28ca541/tests%2Fui%2Fstring_add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_add.rs?ref=d11b958faf4e1b9fe791eff9485a4abec28ca541", "patch": "@@ -16,4 +16,13 @@ fn main() {\n     let mut x = 1;\n     x = x + 1;\n     assert_eq!(2, x);\n+\n+    macro_rules! mac {\n+        () => {\n+            let y = \"\".to_owned();\n+            let z = y + \"...\";\n+        };\n+    }\n+\n+    mac!();\n }"}]}