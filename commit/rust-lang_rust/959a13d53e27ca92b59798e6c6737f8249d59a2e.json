{"sha": "959a13d53e27ca92b59798e6c6737f8249d59a2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OWExM2Q1M2UyN2NhOTJiNTk3OThlNmM2NzM3ZjgyNDlkNTlhMmU=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-07-18T19:27:25Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-07-18T19:27:25Z"}, "message": "Updated wording and placement of non-exhaustive notice so it is collapsed by default and easier to understand.", "tree": {"sha": "b40a44bbded044d5c1d024d0aad36ada2c36455f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b40a44bbded044d5c1d024d0aad36ada2c36455f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/959a13d53e27ca92b59798e6c6737f8249d59a2e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAltPlJ0ACgkQAXYLT59T\n8VSS5hAArubHgKrYR5J2iwb1E9lrv4Y8PtFlGy5TSa/HB0D3o7EKclLe3/bQwkO1\ni5sH7isBHpcw8z3B8tMPhTUK5tqP2dLp05h/ibDxY//uUCC/iGCYQ1ucRIGRSUYy\n9+gu7ryy3Gi/oC5FmMShBDIs4/m1nl8YRWLDzn3+YgPUxMgzVyJtV2gyg6Amr9uC\nFt07liXgth/W91UL3pQW5l0peZWayvIiaAYTVlxwpBNcxB5rU8Zd78pOC/bN1q7t\nzjAXU02dKkSDGuAKXQ9afl6P2nmPT2/jiM9evsfp26z2oKOtrXYmN/G2uiaSePRu\nbGarCIU1CbZKoWaaJO0Y+WQ5H+xcWAhLZC+i4Ff8tPi2iwnPEP5FrEu4m/W23Qri\nsxpV5yyQEJdMOGmdg5xZ79HRG3Wew62kZaMBAV2O71LAJzWoDn9AU/Rhy19OJzHk\ncXpGWna5fQS/uecpP1pvz7yFpmRpA5DVT/ajfBrmjy2IPm4Onich6mXOmTIIZC7r\nS25ZFxjaBhC3vWayL1IunLL9IpYrQzl1HoNGBNoYKdAhOF8Rfxn1DNQnZ+n5c9k9\ne085lNreDynoeb/F4yPcqJ8QB180Z/w2TafMTM1o2ZGABg/eLOL7zijSgnQZwXfd\n3n5I6eunxib1hw1loOS5eiNAygoQDtAjwBKoEffLQX1cdHVr2OI=\n=fYqZ\n-----END PGP SIGNATURE-----", "payload": "tree b40a44bbded044d5c1d024d0aad36ada2c36455f\nparent d0d33a03351433b7c27ae03e17bf18ad627379fe\nauthor David Wood <david@davidtw.co> 1531942045 +0100\ncommitter David Wood <david@davidtw.co> 1531942045 +0100\n\nUpdated wording and placement of non-exhaustive notice so it is collapsed by default and easier to understand.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/959a13d53e27ca92b59798e6c6737f8249d59a2e", "html_url": "https://github.com/rust-lang/rust/commit/959a13d53e27ca92b59798e6c6737f8249d59a2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/959a13d53e27ca92b59798e6c6737f8249d59a2e/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0d33a03351433b7c27ae03e17bf18ad627379fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0d33a03351433b7c27ae03e17bf18ad627379fe", "html_url": "https://github.com/rust-lang/rust/commit/d0d33a03351433b7c27ae03e17bf18ad627379fe"}], "stats": {"total": 55, "additions": 37, "deletions": 18}, "files": [{"sha": "78cf74571870590414e45f24187a9347dc31c0f7", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/959a13d53e27ca92b59798e6c6737f8249d59a2e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/959a13d53e27ca92b59798e6c6737f8249d59a2e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=959a13d53e27ca92b59798e6c6737f8249d59a2e", "patch": "@@ -2268,24 +2268,26 @@ fn document_non_exhaustive_header(item: &clean::Item) -> &str {\n \n fn document_non_exhaustive(w: &mut fmt::Formatter, item: &clean::Item) -> fmt::Result {\n     if item.is_non_exhaustive() {\n-        write!(w, \"<p class='non-exhaustive'>\")?;\n+        write!(w, \"<div class='docblock non-exhaustive non-exhaustive-{}'>\", {\n+            if item.is_struct() { \"struct\" } else if item.is_enum() { \"enum\" } else { \"type\" }\n+        })?;\n \n         if item.is_struct() {\n-            write!(w, \"This struct is marked as non-exhaustive as additional fields may be \\\n-                       added in the future. This means that this struct cannot be constructed in \\\n-                       external crates using the traditional <code>Struct {{ .. }}</code> syntax;\n-                       cannot be matched against without a wildcard <code>..</code>; and \\\n-                       functional-record-updates do not work on this struct.\")?;\n+            write!(w, \"Non-exhaustive structs could have additional fields added in future. \\\n+                       Therefore, non-exhaustive structs cannot be constructed in external crates \\\n+                       using the traditional <code>Struct {{ .. }}</code> syntax; cannot be \\\n+                       matched against without a wildcard <code>..</code>; and \\\n+                       functional-record-updates do not work.\")?;\n         } else if item.is_enum() {\n-            write!(w, \"This enum is marked as non-exhaustive, and additional variants may be \\\n-                       added in the future. When matching over values of this type, an extra \\\n-                       <code>_</code> arm must be added to account for future extensions.\")?;\n+            write!(w, \"Non-exhaustive enums could have additional variants added in future. \\\n+                       Therefore, when matching against variants of non-exhaustive enums, an \\\n+                       extra wildcard arm must be added to account for any future variants.\")?;\n         } else {\n             write!(w, \"This type will require a wildcard arm in any match statements or \\\n                        constructors.\")?;\n         }\n \n-        write!(w, \"</p>\")?;\n+        write!(w, \"</div>\")?;\n     }\n \n     Ok(())"}, {"sha": "af994229edf30512bbb3549190a61ff2f89bfeb5", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/959a13d53e27ca92b59798e6c6737f8249d59a2e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/959a13d53e27ca92b59798e6c6737f8249d59a2e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=959a13d53e27ca92b59798e6c6737f8249d59a2e", "patch": "@@ -1993,15 +1993,18 @@\n         onEach(e.getElementsByClassName('associatedconstant'), func);\n     });\n \n-    function createToggle(otherMessage, extraClass) {\n+    function createToggle(otherMessage, fontSize, extraClass) {\n         var span = document.createElement('span');\n         span.className = 'toggle-label';\n         span.style.display = 'none';\n         if (!otherMessage) {\n             span.innerHTML = '&nbsp;Expand&nbsp;description';\n         } else {\n             span.innerHTML = otherMessage;\n-            span.style.fontSize = '20px';\n+        }\n+\n+        if (fontSize) {\n+            span.style.fontSize = fontSize;\n         }\n \n         var mainToggle = toggle.cloneNode(true);\n@@ -2040,13 +2043,27 @@\n         }\n         if (e.parentNode.id === \"main\") {\n             var otherMessage;\n+            var fontSize;\n             var extraClass;\n+\n             if (hasClass(e, \"type-decl\")) {\n+                fontSize = \"20px\";\n                 otherMessage = '&nbsp;Show&nbsp;declaration';\n+            } else if (hasClass(e, \"non-exhaustive\")) {\n+                otherMessage = '&nbsp;This&nbsp;';\n+                if (hasClass(e, \"non-exhaustive-struct\")) {\n+                    otherMessage += 'struct';\n+                } else if (hasClass(e, \"non-exhaustive-enum\")) {\n+                    otherMessage += 'enum';\n+                } else if (hasClass(e, \"non-exhaustive-type\")) {\n+                    otherMessage += 'type';\n+                }\n+                otherMessage += '&nbsp;is&nbsp;marked&nbsp;as&nbsp;non-exhaustive';\n             } else if (hasClass(e.childNodes[0], \"impl-items\")) {\n                 extraClass = \"marg-left\";\n             }\n-            e.parentNode.insertBefore(createToggle(otherMessage, extraClass), e);\n+\n+            e.parentNode.insertBefore(createToggle(otherMessage, fontSize, extraClass), e);\n             if (otherMessage && getCurrentValue('rustdoc-item-declarations') !== \"false\") {\n                 collapseDocs(e.previousSibling.childNodes[0], \"toggle\");\n             }"}, {"sha": "b689e2fa3854e3608f2344b8f8ebd7ab4e745891", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/959a13d53e27ca92b59798e6c6737f8249d59a2e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/959a13d53e27ca92b59798e6c6737f8249d59a2e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=959a13d53e27ca92b59798e6c6737f8249d59a2e", "patch": "@@ -1358,4 +1358,8 @@ kbd {\n }\n #all-types > p {\n \tmargin: 5px 0;\n-}\n\\ No newline at end of file\n+}\n+\n+.non-exhaustive {\n+\tmargin-bottom: 1em;\n+}"}, {"sha": "3aea30c767f61f5902e7465c910614f1a91ac0da", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/959a13d53e27ca92b59798e6c6737f8249d59a2e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/959a13d53e27ca92b59798e6c6737f8249d59a2e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=959a13d53e27ca92b59798e6c6737f8249d59a2e", "patch": "@@ -148,8 +148,6 @@ pre {\n .content .fnname{ color: #2BAB63; }\n .content span.keyword, .content a.keyword, .block a.current.keyword { color: #de5249; }\n \n-.non-exhaustive { color: #DDD; margin-bottom: 1em; }\n-\n pre.rust .comment { color: #8d8d8b; }\n pre.rust .doccomment { color: #8ca375; }\n "}, {"sha": "e84e3cb56636e485048b3be7d856e3225f47e891", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/959a13d53e27ca92b59798e6c6737f8249d59a2e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/959a13d53e27ca92b59798e6c6737f8249d59a2e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=959a13d53e27ca92b59798e6c6737f8249d59a2e", "patch": "@@ -148,8 +148,6 @@ pre {\n .content .fnname { color: #9a6e31; }\n .content span.keyword, .content a.keyword, .block a.current.keyword { color: #de5249; }\n \n-.non-exhaustive { color: #222; margin-bottom: 1em; }\n-\n pre.rust .comment { color: #8E908C; }\n pre.rust .doccomment { color: #4D4D4C; }\n "}]}