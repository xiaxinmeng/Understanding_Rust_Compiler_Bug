{"sha": "3348869f42020680bd588132ae77272e810bd770", "node_id": "C_kwDOAAsO6NoAKDMzNDg4NjlmNDIwMjA2ODBiZDU4ODEzMmFlNzcyNzJlODEwYmQ3NzA", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-21T04:24:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-21T16:30:19Z"}, "message": "move nopreempt sync tests to their own file", "tree": {"sha": "f6953154e5025ea8b6d883b87c255a8df5bc65b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6953154e5025ea8b6d883b87c255a8df5bc65b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3348869f42020680bd588132ae77272e810bd770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3348869f42020680bd588132ae77272e810bd770", "html_url": "https://github.com/rust-lang/rust/commit/3348869f42020680bd588132ae77272e810bd770", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3348869f42020680bd588132ae77272e810bd770/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbb649adfe172a9ef4b1b91688c14b57c6c3b839", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbb649adfe172a9ef4b1b91688c14b57c6c3b839", "html_url": "https://github.com/rust-lang/rust/commit/cbb649adfe172a9ef4b1b91688c14b57c6c3b839"}], "stats": {"total": 73, "additions": 41, "deletions": 32}, "files": [{"sha": "5b7805ba2265118348ed1ac9b86d61bea3075fae", "filename": "tests/pass/concurrency/sync.rs", "status": "modified", "additions": 1, "deletions": 32, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/3348869f42020680bd588132ae77272e810bd770/tests%2Fpass%2Fconcurrency%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3348869f42020680bd588132ae77272e810bd770/tests%2Fpass%2Fconcurrency%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fsync.rs?ref=3348869f42020680bd588132ae77272e810bd770", "patch": "@@ -1,6 +1,5 @@\n // ignore-windows: Concurrency on Windows is not supported yet.\n-// We are making scheduler assumptions here.\n-// compile-flags: -Zmiri-disable-isolation -Zmiri-strict-provenance -Zmiri-preemption-rate=0\n+// compile-flags: -Zmiri-disable-isolation -Zmiri-strict-provenance\n \n use std::sync::{Arc, Barrier, Condvar, Mutex, Once, RwLock};\n use std::thread;\n@@ -53,35 +52,6 @@ fn check_conditional_variables_notify_one() {\n     }\n }\n \n-fn check_conditional_variables_notify_all() {\n-    let pair = Arc::new(((Mutex::new(())), Condvar::new()));\n-\n-    // Spawn threads and block them on the conditional variable.\n-    let handles: Vec<_> = (0..5)\n-        .map(|_| {\n-            let pair2 = pair.clone();\n-            thread::spawn(move || {\n-                let (lock, cvar) = &*pair2;\n-                let guard = lock.lock().unwrap();\n-                // Block waiting on the conditional variable.\n-                let _ = cvar.wait(guard).unwrap();\n-            })\n-        })\n-        .inspect(|_| {\n-            thread::yield_now();\n-            thread::yield_now();\n-        })\n-        .collect();\n-\n-    let (_, cvar) = &*pair;\n-    // Unblock all threads.\n-    cvar.notify_all();\n-\n-    for handle in handles {\n-        handle.join().unwrap();\n-    }\n-}\n-\n /// Test that waiting on a conditional variable with a timeout does not\n /// deadlock.\n fn check_conditional_variables_timed_wait_timeout() {\n@@ -301,7 +271,6 @@ fn check_condvar() {\n fn main() {\n     check_barriers();\n     check_conditional_variables_notify_one();\n-    check_conditional_variables_notify_all();\n     check_conditional_variables_timed_wait_timeout();\n     check_conditional_variables_timed_wait_notimeout();\n     check_mutex();"}, {"sha": "38dbeb575d641341e7dc136ff8c95b2c424a052a", "filename": "tests/pass/concurrency/sync_nopreempt.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/3348869f42020680bd588132ae77272e810bd770/tests%2Fpass%2Fconcurrency%2Fsync_nopreempt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3348869f42020680bd588132ae77272e810bd770/tests%2Fpass%2Fconcurrency%2Fsync_nopreempt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fsync_nopreempt.rs?ref=3348869f42020680bd588132ae77272e810bd770", "patch": "@@ -0,0 +1,40 @@\n+// ignore-windows: Concurrency on Windows is not supported yet.\n+// We are making scheduler assumptions here.\n+// compile-flags: -Zmiri-strict-provenance -Zmiri-preemption-rate=0\n+\n+use std::sync::{Condvar, Mutex, Arc};\n+use std::thread;\n+\n+fn check_conditional_variables_notify_all() {\n+    let pair = Arc::new(((Mutex::new(())), Condvar::new()));\n+\n+    // Spawn threads and block them on the conditional variable.\n+    let handles: Vec<_> = (0..5)\n+        .map(|_| {\n+            let pair2 = pair.clone();\n+            thread::spawn(move || {\n+                let (lock, cvar) = &*pair2;\n+                let guard = lock.lock().unwrap();\n+                // Block waiting on the conditional variable.\n+                let _ = cvar.wait(guard).unwrap();\n+            })\n+        })\n+        .inspect(|_| {\n+            // Ensure the other threads all run and block on the `wait`.\n+            thread::yield_now();\n+            thread::yield_now();\n+        })\n+        .collect();\n+\n+    let (_, cvar) = &*pair;\n+    // Unblock all threads.\n+    cvar.notify_all();\n+\n+    for handle in handles {\n+        handle.join().unwrap();\n+    }\n+}\n+\n+fn main() {\n+    check_conditional_variables_notify_all();\n+}"}]}