{"sha": "bbbb80559c8e321dc023c48579367e2ef1349b4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiYmI4MDU1OWM4ZTMyMWRjMDIzYzQ4NTc5MzY3ZTJlZjEzNDliNGI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-18T00:15:08Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-24T21:52:21Z"}, "message": "librustc: Disallow `&mut` loans from overlapping with any other loans", "tree": {"sha": "c51f7fcf33e2a1b16de83758fcd47cfbab139488", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c51f7fcf33e2a1b16de83758fcd47cfbab139488"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbbb80559c8e321dc023c48579367e2ef1349b4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbbb80559c8e321dc023c48579367e2ef1349b4b", "html_url": "https://github.com/rust-lang/rust/commit/bbbb80559c8e321dc023c48579367e2ef1349b4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbbb80559c8e321dc023c48579367e2ef1349b4b/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "163b97b7bb53b7a9753b5fbd9b28dc1e09337259", "url": "https://api.github.com/repos/rust-lang/rust/commits/163b97b7bb53b7a9753b5fbd9b28dc1e09337259", "html_url": "https://github.com/rust-lang/rust/commit/163b97b7bb53b7a9753b5fbd9b28dc1e09337259"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "c7ccf28755c0cdeb1aaead0bf21239ea2eaf49be", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bbbb80559c8e321dc023c48579367e2ef1349b4b/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbbb80559c8e321dc023c48579367e2ef1349b4b/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=bbbb80559c8e321dc023c48579367e2ef1349b4b", "patch": "@@ -296,12 +296,11 @@ impl check_loan_ctxt {\n         }\n \n         match (old_loan.mutbl, new_loan.mutbl) {\n-            (m_const, _) | (_, m_const) |\n-            (m_mutbl, m_mutbl) | (m_imm, m_imm) => {\n+            (m_const, _) | (_, m_const) | (m_imm, m_imm) => {\n                 /*ok*/\n             }\n \n-            (m_mutbl, m_imm) | (m_imm, m_mutbl) => {\n+            (m_mutbl, m_mutbl) | (m_mutbl, m_imm) | (m_imm, m_mutbl) => {\n                 self.bccx.span_err(\n                     new_loan.cmt.span,\n                     fmt!(\"loan of %s as %s \\\n@@ -418,8 +417,8 @@ impl check_loan_ctxt {\n \n         for self.walk_loans_of(ex.id, lp) |loan| {\n             match loan.mutbl {\n-              m_mutbl | m_const => { /*ok*/ }\n-              m_imm => {\n+              m_const => { /*ok*/ }\n+              m_mutbl | m_imm => {\n                 self.bccx.span_err(\n                     ex.span,\n                     fmt!(\"%s prohibited due to outstanding loan\","}, {"sha": "a9bbcbb9cc2d4c9d99ce945f533b8145137fc7b1", "filename": "src/librustc/middle/borrowck/loan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbbb80559c8e321dc023c48579367e2ef1349b4b/src%2Flibrustc%2Fmiddle%2Fborrowck%2Floan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbbb80559c8e321dc023c48579367e2ef1349b4b/src%2Flibrustc%2Fmiddle%2Fborrowck%2Floan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Floan.rs?ref=bbbb80559c8e321dc023c48579367e2ef1349b4b", "patch": "@@ -251,7 +251,7 @@ impl LoanContext {\n         // Variant components: the base must be immutable, because\n         // if it is overwritten, the types of the embedded data\n         // could change.\n-        do self.loan(cmt_base, m_imm).chain |_ok| {\n+        do self.loan(cmt_base, m_imm).chain |_| {\n             // can use static, as in loan_stable_comp()\n             self.issue_loan(cmt, ty::re_static, req_mutbl)\n         }"}, {"sha": "3017d95f2a7e78d0eedd1ee6e81ef158e1f7d2d2", "filename": "src/libstd/sort.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bbbb80559c8e321dc023c48579367e2ef1349b4b/src%2Flibstd%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbbb80559c8e321dc023c48579367e2ef1349b4b/src%2Flibstd%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsort.rs?ref=bbbb80559c8e321dc023c48579367e2ef1349b4b", "patch": "@@ -630,9 +630,15 @@ impl<T: Copy Ord> MergeState<T> {\n                 dest -= 1; c2 -= 1; len2 -= 1;\n                 if len2 == 1 { break_outer = true; break; }\n \n-                let tmp_view = vec::mut_view(tmp, 0, len2);\n-                let count2 = len2 - gallop_left(&const array[c1],\n-                                                tmp_view, len2-1);\n+                let count2;\n+                {\n+                    let tmp_view = vec::mut_view(tmp, 0, len2);\n+                    count2 = len2 - gallop_left(&const array[c1],\n+                                                tmp_view,\n+                                                len2-1);\n+                    // Make tmp_view go out of scope to appease borrowck.\n+                }\n+\n                 if count2 != 0 {\n                     dest -= count2; c2 -= count2; len2 -= count2;\n                     copy_vec(array, dest+1, tmp, c2+1, count2);"}, {"sha": "f703eed6a21c5c7502dba6e26378bc581c0f50b4", "filename": "src/test/run-pass/alt-implicit-copy-unique.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbbb80559c8e321dc023c48579367e2ef1349b4b/src%2Ftest%2Frun-pass%2Falt-implicit-copy-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbbb80559c8e321dc023c48579367e2ef1349b4b/src%2Ftest%2Frun-pass%2Falt-implicit-copy-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-implicit-copy-unique.rs?ref=bbbb80559c8e321dc023c48579367e2ef1349b4b", "patch": "@@ -12,7 +12,7 @@ fn main() {\n     let x = ~{mut a: ~10, b: ~20};\n     match x {\n       ~{a: ref mut a, b: ref b} => {\n-        assert **a == 10; (*x).a = ~30; assert **a == 30;\n+        assert **a == 10; *a = ~30; assert **a == 30;\n       }\n     }\n }"}]}