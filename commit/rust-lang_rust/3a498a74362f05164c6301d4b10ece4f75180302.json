{"sha": "3a498a74362f05164c6301d4b10ece4f75180302", "node_id": "C_kwDOAAsO6NoAKDNhNDk4YTc0MzYyZjA1MTY0YzYzMDFkNGIxMGVjZTRmNzUxODAzMDI", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-28T13:16:03Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:22Z"}, "message": "lint: port `...` range pattern diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "74ea247759f4bdc9b377e0ac0be8917d00248902", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74ea247759f4bdc9b377e0ac0be8917d00248902"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a498a74362f05164c6301d4b10ece4f75180302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a498a74362f05164c6301d4b10ece4f75180302", "html_url": "https://github.com/rust-lang/rust/commit/3a498a74362f05164c6301d4b10ece4f75180302", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a498a74362f05164c6301d4b10ece4f75180302/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c9bda5b20139844a1b31960f9fc13349a52048d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c9bda5b20139844a1b31960f9fc13349a52048d", "html_url": "https://github.com/rust-lang/rust/commit/3c9bda5b20139844a1b31960f9fc13349a52048d"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "7310f4c241fbef203976ab9a0b3a2a17bf685fbe", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a498a74362f05164c6301d4b10ece4f75180302/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/3a498a74362f05164c6301d4b10ece4f75180302/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=3a498a74362f05164c6301d4b10ece4f75180302", "patch": "@@ -368,3 +368,6 @@ lint-builtin-type-alias-generic-bounds = bounds on generic parameters are not en\n     .suggestion = the bound will not be checked when the type alias is used, and should be removed\n \n lint-builtin-trivial-bounds = {$predicate_kind_name} bound {$predicate} does not depend on any type or lifetime parameters\n+\n+lint-builtin-ellipsis-inclusive-range-patterns = `...` range patterns are deprecated\n+    .suggestion = use `..=` for an inclusive range"}, {"sha": "7c9e9a31e1e18298b522a1e2fdc716a13c9358ec", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3a498a74362f05164c6301d4b10ece4f75180302/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a498a74362f05164c6301d4b10ece4f75180302/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=3a498a74362f05164c6301d4b10ece4f75180302", "patch": "@@ -1775,8 +1775,8 @@ impl EarlyLintPass for EllipsisInclusiveRangePatterns {\n         };\n \n         if let Some((start, end, join)) = endpoints {\n-            let msg = \"`...` range patterns are deprecated\";\n-            let suggestion = \"use `..=` for an inclusive range\";\n+            let msg = fluent::lint::builtin_ellipsis_inclusive_range_patterns;\n+            let suggestion = fluent::lint::suggestion;\n             if parenthesise {\n                 self.node_id = Some(pat.id);\n                 let end = expr_to_string(&end);\n@@ -1785,8 +1785,11 @@ impl EarlyLintPass for EllipsisInclusiveRangePatterns {\n                     None => format!(\"&(..={})\", end),\n                 };\n                 if join.edition() >= Edition::Edition2021 {\n-                    let mut err =\n-                        rustc_errors::struct_span_err!(cx.sess(), pat.span, E0783, \"{}\", msg,);\n+                    let mut err = cx.sess().struct_span_err_with_code(\n+                        pat.span,\n+                        msg,\n+                        rustc_errors::error_code!(E0783),\n+                    );\n                     err.span_suggestion(\n                         pat.span,\n                         suggestion,\n@@ -1809,8 +1812,11 @@ impl EarlyLintPass for EllipsisInclusiveRangePatterns {\n             } else {\n                 let replace = \"..=\";\n                 if join.edition() >= Edition::Edition2021 {\n-                    let mut err =\n-                        rustc_errors::struct_span_err!(cx.sess(), pat.span, E0783, \"{}\", msg,);\n+                    let mut err = cx.sess().struct_span_err_with_code(\n+                        pat.span,\n+                        msg,\n+                        rustc_errors::error_code!(E0783),\n+                    );\n                     err.span_suggestion_short(\n                         join,\n                         suggestion,"}]}