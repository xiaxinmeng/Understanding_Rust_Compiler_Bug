{"sha": "e72ee6e4ad0511aaf533a492382b84dfa712393f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MmVlNmU0YWQwNTExYWFmNTMzYTQ5MjM4MmI4NGRmYTcxMjM5M2Y=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-06-27T23:31:31Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-06-27T23:31:31Z"}, "message": "Use a little more compelling example of `for_each`", "tree": {"sha": "01ca8f48c44277ca45e9ccd0e6ff6a5cfec20a39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01ca8f48c44277ca45e9ccd0e6ff6a5cfec20a39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e72ee6e4ad0511aaf533a492382b84dfa712393f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e72ee6e4ad0511aaf533a492382b84dfa712393f", "html_url": "https://github.com/rust-lang/rust/commit/e72ee6e4ad0511aaf533a492382b84dfa712393f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e72ee6e4ad0511aaf533a492382b84dfa712393f/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a8ddac99e1edfb219e11c3ea2d6c43ccecb29ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a8ddac99e1edfb219e11c3ea2d6c43ccecb29ab", "html_url": "https://github.com/rust-lang/rust/commit/4a8ddac99e1edfb219e11c3ea2d6c43ccecb29ab"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "26660cb3331abd03da418db6c4877f0468c1187b", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e72ee6e4ad0511aaf533a492382b84dfa712393f/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e72ee6e4ad0511aaf533a492382b84dfa712393f/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=e72ee6e4ad0511aaf533a492382b84dfa712393f", "patch": "@@ -500,16 +500,17 @@ pub trait Iterator {\n     /// ```\n     /// #![feature(iterator_for_each)]\n     ///\n-    /// let mut v = vec![];\n-    /// (0..5).for_each(|x| v.push(x * 100));\n+    /// use std::sync::mpsc::channel;\n     ///\n-    /// let mut v2 = vec![];\n-    /// for x in 0..5 { v2.push(x * 100); }\n+    /// let (tx, rx) = channel();\n+    /// (0..5).map(|x| x * 2 + 1)\n+    ///       .for_each(move |x| tx.send(x).unwrap());\n     ///\n-    /// assert_eq!(v, v2);\n+    /// let v: Vec<_> =  rx.iter().collect();\n+    /// assert_eq!(v, vec![1, 3, 5, 7, 9]);\n     /// ```\n     ///\n-    /// For such a small example, the `for` loop is cleaner, but `for_each`\n+    /// For such a small example, a `for` loop may be cleaner, but `for_each`\n     /// might be preferable to keep a functional style with longer iterators:\n     ///\n     /// ```"}]}