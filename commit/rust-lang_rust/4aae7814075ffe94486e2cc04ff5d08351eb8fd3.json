{"sha": "4aae7814075ffe94486e2cc04ff5d08351eb8fd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhYWU3ODE0MDc1ZmZlOTQ0ODZlMmNjMDRmZjVkMDgzNTFlYjhmZDM=", "commit": {"author": {"name": "Camelid", "email": "37223377+camelid@users.noreply.github.com", "date": "2020-08-30T02:53:06Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-08-30T02:59:22Z"}, "message": "Add info about `!` and `impl Trait`", "tree": {"sha": "b27a359f976e77e061b043179d68c3ad3ff3d75c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b27a359f976e77e061b043179d68c3ad3ff3d75c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4aae7814075ffe94486e2cc04ff5d08351eb8fd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4aae7814075ffe94486e2cc04ff5d08351eb8fd3", "html_url": "https://github.com/rust-lang/rust/commit/4aae7814075ffe94486e2cc04ff5d08351eb8fd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4aae7814075ffe94486e2cc04ff5d08351eb8fd3/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62850d882b1f546783d064ca3b51d1f85b92eeb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/62850d882b1f546783d064ca3b51d1f85b92eeb7", "html_url": "https://github.com/rust-lang/rust/commit/62850d882b1f546783d064ca3b51d1f85b92eeb7"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "d88a9cbd0acffb6e3ebef9ba1e185c4d550c64b9", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/4aae7814075ffe94486e2cc04ff5d08351eb8fd3/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4aae7814075ffe94486e2cc04ff5d08351eb8fd3/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=4aae7814075ffe94486e2cc04ff5d08351eb8fd3", "patch": "@@ -194,14 +194,47 @@ mod prim_bool {}\n /// # `!` and traits\n ///\n /// When writing your own traits, `!` should have an `impl` whenever there is an obvious `impl`\n-/// which doesn't `panic!`. As it turns out, most traits can have an `impl` for `!`. Take [`Debug`]\n+/// which doesn't `panic!`. The reason is that functions returning an `impl Trait` cannot have\n+/// divergence, i.e., returning `!`, as their only possible code path. As an example, this code\n+/// doesn't compile:\n+///\n+/// ```compile_fail\n+/// use core::ops::Add;\n+///\n+/// fn foo() -> impl Add<u32> {\n+///     unimplemented!()\n+/// }\n+/// ```\n+///\n+/// While this code does:\n+///\n+/// ```\n+/// use core::ops::Add;\n+///\n+/// fn foo() -> impl Add<u32> {\n+///     if true {\n+///         unimplemented!()\n+///     } else {\n+///         0\n+///     }\n+/// }\n+/// ```\n+///\n+/// The reason is that, in the first example, there are many possible types for `!` to coerce\n+/// to, because the function's return value is polymorphic. However, in the second example, the\n+/// other branch returns `0` which has a concrete type that `!` can be coerced to. See issue\n+/// [#36375] for more information on this quirk of `!`.\n+///\n+/// [#36375]: https://github.com/rust-lang/rust/issues/36375\n+///\n+/// As it turns out, though, most traits can have an `impl` for `!`. Take [`Debug`]\n /// for example:\n ///\n /// ```\n /// #![feature(never_type)]\n /// # use std::fmt;\n /// # trait Debug {\n-/// # fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result;\n+/// #     fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result;\n /// # }\n /// impl Debug for ! {\n ///     fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {"}]}