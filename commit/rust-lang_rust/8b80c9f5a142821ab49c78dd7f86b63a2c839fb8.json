{"sha": "8b80c9f5a142821ab49c78dd7f86b63a2c839fb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiODBjOWY1YTE0MjgyMWFiNDljNzhkZDdmODZiNjNhMmM4MzlmYjg=", "commit": {"author": {"name": "Tommi Komulainen", "email": "tommi.komulainen@iki.fi", "date": "2018-07-19T19:07:40Z"}, "committer": {"name": "Tommi Komulainen", "email": "tommi.komulainen@iki.fi", "date": "2018-07-19T19:11:51Z"}, "message": "Cursor: update docs to clarify Cursor only works with in-memory buffers\n\nReduce misconceptions about Cursor being more general than it really is.\n\nFixes: #52470", "tree": {"sha": "dd28a57be37941fcd2fff21771dae7ee11839568", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd28a57be37941fcd2fff21771dae7ee11839568"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b80c9f5a142821ab49c78dd7f86b63a2c839fb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b80c9f5a142821ab49c78dd7f86b63a2c839fb8", "html_url": "https://github.com/rust-lang/rust/commit/8b80c9f5a142821ab49c78dd7f86b63a2c839fb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b80c9f5a142821ab49c78dd7f86b63a2c839fb8/comments", "author": {"login": "tko", "id": 13787, "node_id": "MDQ6VXNlcjEzNzg3", "avatar_url": "https://avatars.githubusercontent.com/u/13787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tko", "html_url": "https://github.com/tko", "followers_url": "https://api.github.com/users/tko/followers", "following_url": "https://api.github.com/users/tko/following{/other_user}", "gists_url": "https://api.github.com/users/tko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tko/subscriptions", "organizations_url": "https://api.github.com/users/tko/orgs", "repos_url": "https://api.github.com/users/tko/repos", "events_url": "https://api.github.com/users/tko/events{/privacy}", "received_events_url": "https://api.github.com/users/tko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tko", "id": 13787, "node_id": "MDQ6VXNlcjEzNzg3", "avatar_url": "https://avatars.githubusercontent.com/u/13787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tko", "html_url": "https://github.com/tko", "followers_url": "https://api.github.com/users/tko/followers", "following_url": "https://api.github.com/users/tko/following{/other_user}", "gists_url": "https://api.github.com/users/tko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tko/subscriptions", "organizations_url": "https://api.github.com/users/tko/orgs", "repos_url": "https://api.github.com/users/tko/repos", "events_url": "https://api.github.com/users/tko/events{/privacy}", "received_events_url": "https://api.github.com/users/tko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8247dd5c69ca57ede5073209bd30afb90dd4e3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8247dd5c69ca57ede5073209bd30afb90dd4e3b", "html_url": "https://github.com/rust-lang/rust/commit/a8247dd5c69ca57ede5073209bd30afb90dd4e3b"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "3622df16b9d0bd46020d49e97dabdb40d6214f0e", "filename": "src/libstd/io/cursor.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8b80c9f5a142821ab49c78dd7f86b63a2c839fb8/src%2Flibstd%2Fio%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b80c9f5a142821ab49c78dd7f86b63a2c839fb8/src%2Flibstd%2Fio%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fcursor.rs?ref=8b80c9f5a142821ab49c78dd7f86b63a2c839fb8", "patch": "@@ -14,12 +14,13 @@ use core::convert::TryInto;\n use cmp;\n use io::{self, Initializer, SeekFrom, Error, ErrorKind};\n \n-/// A `Cursor` wraps another type and provides it with a\n+/// A `Cursor` wraps an in-memory buffer and provides it with a\n /// [`Seek`] implementation.\n ///\n-/// `Cursor`s are typically used with in-memory buffers to allow them to\n-/// implement [`Read`] and/or [`Write`], allowing these buffers to be used\n-/// anywhere you might use a reader or writer that does actual I/O.\n+/// `Cursor`s are used with in-memory buffers, anything implementing\n+/// `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],\n+/// allowing these buffers to be used anywhere you might use a reader or writer\n+/// that does actual I/O.\n ///\n /// The standard library implements some I/O traits on various types which\n /// are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and\n@@ -87,11 +88,11 @@ pub struct Cursor<T> {\n }\n \n impl<T> Cursor<T> {\n-    /// Creates a new cursor wrapping the provided underlying I/O object.\n+    /// Creates a new cursor wrapping the provided underlying in-memory buffer.\n     ///\n-    /// Cursor initial position is `0` even if underlying object (e.\n-    /// g. `Vec`) is not empty. So writing to cursor starts with\n-    /// overwriting `Vec` content, not with appending to it.\n+    /// Cursor initial position is `0` even if underlying buffer (e.g. `Vec`)\n+    /// is not empty. So writing to cursor starts with overwriting `Vec`\n+    /// content, not with appending to it.\n     ///\n     /// # Examples\n     ///"}]}