{"sha": "f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMWQ5OTNjMGYwYTgyODJlNjcyMWY3NzBjMDQ5NjBhZTFkMmIyYmM=", "commit": {"author": {"name": "A.A.Abroskin", "email": "arkweid@evilmartians.com", "date": "2019-01-23T08:36:12Z"}, "committer": {"name": "A.A.Abroskin", "email": "arkweid@evilmartians.com", "date": "2019-01-23T08:36:12Z"}, "message": "Merge branch 'master' into add-lints-aseert-checks\n\n* master: (58 commits)\n  Rustfmt all the things\n  Don't make decisions on values that don't represent the decision\n  Improving comments.\n  Rustup\n  Added rustfix to the test.\n  Improve span shortening.\n  Added \"make_return\" and \"blockify\" convenience methods in Sugg and used them in \"needless_bool\".\n  Actually check for constants.\n  Fixed potential mistakes with nesting. Added tests.\n  formatting fix\n  Update clippy_lints/src/needless_bool.rs\n  formatting fix\n  Fixing typo in CONTRIBUTING.md\n  Fix breakage due to rust-lang/rust#57651\n  needless bool lint suggestion is wrapped in brackets if it is an \"else\" clause of an \"if-else\" statement\n  Fix automatic suggestion on `use_self`.\n  Remove negative integer literal checks.\n  Fix `implicit_return` false positives.\n  Run rustfmt\n  Fixed breakage due to rust-lang/rust#57489\n  ...", "tree": {"sha": "7a2fc88dbd332408b0c7c4d07e7c47a533a5f8df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a2fc88dbd332408b0c7c4d07e7c47a533a5f8df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "html_url": "https://github.com/rust-lang/rust/commit/f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/comments", "author": null, "committer": null, "parents": [{"sha": "58abdb591884bcde77d53a5933a78c89e26c6752", "url": "https://api.github.com/repos/rust-lang/rust/commits/58abdb591884bcde77d53a5933a78c89e26c6752", "html_url": "https://github.com/rust-lang/rust/commit/58abdb591884bcde77d53a5933a78c89e26c6752"}, {"sha": "a069320fd7db67c864d9d77e9f446b7beb2b83e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a069320fd7db67c864d9d77e9f446b7beb2b83e3", "html_url": "https://github.com/rust-lang/rust/commit/a069320fd7db67c864d9d77e9f446b7beb2b83e3"}], "stats": {"total": 10668, "additions": 4043, "deletions": 6625}, "files": [{"sha": "a242c35c3aecfce31baaa525cf93b7339496dd1f", "filename": ".github/deploy.sh", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/.github%2Fdeploy.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/.github%2Fdeploy.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fdeploy.sh?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,16 +1,5 @@\n #!/bin/bash\n \n-# Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-\n # Automatically deploy on gh-pages\n \n set -ex"}, {"sha": "415fb7ab0d74566788500ceed6426a37922028eb", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -79,7 +79,7 @@ to lint-writing, though it does get into advanced stuff. Most lints consist of a\n of this.\n \n If you want to add a new lint or change existing ones apart from bugfixing, it's\n-also a good idea to give the [stability guaratees][rfc_stability] and\n+also a good idea to give the [stability guarantees][rfc_stability] and\n [lint categories][rfc_lint_cats] sections of the [Clippy 1.0 RFC][clippy_rfc] a\n quick read.\n "}, {"sha": "e507fb8b9b9947dd55fb5440d9fe7b25da16189e", "filename": "COPYRIGHT", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/COPYRIGHT", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/COPYRIGHT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/COPYRIGHT?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,4 +1,4 @@\n-Copyright 2014-2018 The Rust Project Developers\n+Copyright 2014-2019 The Rust Project Developers\n \n Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n http://www.apache.org/licenses/LICENSE-2.0> or the MIT license"}, {"sha": "6473b8efc5480687c30ab99368afc6ed9c5b2da4", "filename": "README.md", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,6 +1,6 @@\n # Clippy\n \n-[![Build Status](https://travis-ci.org/rust-lang/rust-clippy.svg?branch=master)](https://travis-ci.org/rust-lang/rust-clippy)\n+[![Build Status](https://travis-ci.com/rust-lang/rust-clippy.svg?branch=master)](https://travis-ci.com/rust-lang/rust-clippy)\n [![Windows Build status](https://ci.appveyor.com/api/projects/status/id677xpw1dguo7iw?svg=true)](https://ci.appveyor.com/project/rust-lang-libs/rust-clippy)\n [![Current Version](https://meritbadge.herokuapp.com/clippy)](https://crates.io/crates/clippy)\n [![License: MIT/Apache-2.0](https://img.shields.io/crates/l/clippy.svg)](#license)\n@@ -68,10 +68,15 @@ Once you have rustup and the latest stable release (at least Rust 1.29) installe\n ```terminal\n rustup component add clippy\n ```\n+If it says that it can't find the `clippy` component, please run `rustup self update`.\n \n-Now you can run Clippy by invoking `cargo clippy`.\n+#### Step 3: Run Clippy\n \n-If it says that it can't find the `clippy` subcommand, please run `rustup self update`\n+Now you can run Clippy by invoking the following command:\n+\n+```terminal\n+cargo clippy\n+```\n \n ### Running Clippy from the command line without installing it\n \n@@ -157,7 +162,7 @@ If you want to contribute to Clippy, you can find more information in [CONTRIBUT\n \n ## License\n \n-Copyright 2014-2018 The Rust Project Developers\n+Copyright 2014-2019 The Rust Project Developers\n \n Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n http://www.apache.org/licenses/LICENSE-2.0> or the MIT license"}, {"sha": "4e6e85f45fe607f5e5910370a8c8e4a526ba02ce", "filename": "bors.toml", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/58abdb591884bcde77d53a5933a78c89e26c6752/bors.toml", "raw_url": "https://github.com/rust-lang/rust/raw/58abdb591884bcde77d53a5933a78c89e26c6752/bors.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/bors.toml?ref=58abdb591884bcde77d53a5933a78c89e26c6752", "patch": "@@ -1,4 +0,0 @@\n-status = [\n-  \"continuous-integration/travis-ci/push\",\n-  \"continuous-integration/appveyor/branch\"\n-]"}, {"sha": "146a8dae74596a25c5042447e846f4a38c1888c2", "filename": "build.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n fn main() {\n     // Forward the profile to the main compilation\n     println!(\"cargo:rustc-env=PROFILE={}\", std::env::var(\"PROFILE\").unwrap());"}, {"sha": "6675c795b3b284f492614db0b95a075133dfde7b", "filename": "ci/base-tests.sh", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,14 +1,3 @@\n-# Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-\n set -ex\n \n echo \"Running clippy base tests\""}, {"sha": "1259c5e1d37892f8afdca72ade984611225fcd0e", "filename": "ci/integration-tests.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/ci%2Fintegration-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/ci%2Fintegration-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fintegration-tests.sh?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,13 +1,3 @@\n-# Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n set -x\n rm ~/.cargo/bin/cargo-clippy\n cargo install --force --path ."}, {"sha": "073b3a9e97fcf26ddd2a68c121f75a64ea8fb4d9", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(clippy::default_hash_types)]\n \n use itertools::Itertools;"}, {"sha": "1d9245d1347f89b296c732a8e7ab3e20e0a940f3", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n extern crate clap;\n extern crate clippy_dev;\n extern crate regex;"}, {"sha": "59d32e5db4393fd177773d24feb780988a949dcb", "filename": "clippy_dummy/build.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_dummy%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_dummy%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dummy%2Fbuild.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n extern crate term;\n \n fn main() {\n@@ -49,4 +39,4 @@ fn foo() -> Result<(), ()> {\n \n     t.reset().map_err(|_| ())?;\n     Ok(())\n-}\n\\ No newline at end of file\n+}"}, {"sha": "a118834f1fd47cb1b44ebac6fcdea1456e76b615", "filename": "clippy_dummy/src/main.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_dummy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_dummy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dummy%2Fsrc%2Fmain.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n fn main() {\n     panic!(\"This shouldn't even compile\")\n }"}, {"sha": "8410408312fb59ae7edb55fb988522856319f340", "filename": "clippy_lints/src/approx_const.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fapprox_const.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::span_lint;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "efa53ff94c395ab510fcaf888bb5e214127c6517", "filename": "clippy_lints/src/arithmetic.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,4 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n+use crate::consts::constant_simple;\n use crate::utils::span_lint;\n use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n@@ -103,8 +95,10 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Arithmetic {\n             hir::ExprKind::Unary(hir::UnOp::UnNeg, arg) => {\n                 let ty = cx.tables.expr_ty(arg);\n                 if ty.is_integral() {\n-                    span_lint(cx, INTEGER_ARITHMETIC, expr.span, \"integer arithmetic detected\");\n-                    self.expr_span = Some(expr.span);\n+                    if constant_simple(cx, cx.tables, expr).is_none() {\n+                        span_lint(cx, INTEGER_ARITHMETIC, expr.span, \"integer arithmetic detected\");\n+                        self.expr_span = Some(expr.span);\n+                    }\n                 } else if ty.is_floating_point() {\n                     span_lint(cx, FLOAT_ARITHMETIC, expr.span, \"floating-point arithmetic detected\");\n                     self.expr_span = Some(expr.span);\n@@ -134,7 +128,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Arithmetic {\n                 }\n                 self.const_span = Some(body_span);\n             },\n-            hir::BodyOwnerKind::Fn => (),\n+            hir::BodyOwnerKind::Fn | hir::BodyOwnerKind::Closure => (),\n         }\n     }\n "}, {"sha": "ad77ee3a3fa84a997547be376c74bbbff1b7441c", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{get_trait_def_id, implements_trait, snippet_opt, span_lint_and_then, SpanlessEq};\n use crate::utils::{higher, sugg};\n use if_chain::if_chain;"}, {"sha": "9e4dd52c4143fd2da7f4b727991fba05ddd2fe18", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! checks for attributes\n \n use crate::reexport::*;\n@@ -341,9 +332,12 @@ fn check_clippy_lint_names(cx: &LateContext<'_, '_>, items: &[NestedMetaItem]) {\n                                 // https://github.com/rust-lang/rust/pull/56992\n                                 CheckLintNameResult::NoLint(None) => (),\n                                 _ => {\n-                                    db.span_suggestion(lint.span,\n-                                                       \"lowercase the lint name\",\n-                                                       name_lower);\n+                                    db.span_suggestion_with_applicability(\n+                                        lint.span,\n+                                        \"lowercase the lint name\",\n+                                        name_lower,\n+                                        Applicability::MaybeIncorrect,\n+                                    );\n                                 }\n                             }\n                         }\n@@ -382,8 +376,9 @@ fn is_relevant_trait(tcx: TyCtxt<'_, '_, '_>, item: &TraitItem) -> bool {\n fn is_relevant_block(tcx: TyCtxt<'_, '_, '_>, tables: &ty::TypeckTables<'_>, block: &Block) -> bool {\n     if let Some(stmt) = block.stmts.first() {\n         match &stmt.node {\n-            StmtKind::Decl(_, _) => true,\n-            StmtKind::Expr(expr, _) | StmtKind::Semi(expr, _) => is_relevant_expr(tcx, tables, expr),\n+            StmtKind::Local(_) => true,\n+            StmtKind::Expr(expr) | StmtKind::Semi(expr) => is_relevant_expr(tcx, tables, expr),\n+            _ => false,\n         }\n     } else {\n         block.expr.as_ref().map_or(false, |e| is_relevant_expr(tcx, tables, e))\n@@ -520,18 +515,17 @@ impl EarlyLintPass for CfgAttrPass {\n             // check for `rustfmt_skip` and `rustfmt::skip`\n             if let Some(skip_item) = &items[1].meta_item();\n             if skip_item.name() == \"rustfmt_skip\" || skip_item.name() == \"skip\";\n+            // Only lint outer attributes, because custom inner attributes are unstable\n+            // Tracking issue: https://github.com/rust-lang/rust/issues/54726\n+            if let AttrStyle::Outer = attr.style;\n             then {\n-                let attr_style = match attr.style {\n-                    AttrStyle::Outer => \"#[\",\n-                    AttrStyle::Inner => \"#![\",\n-                };\n                 span_lint_and_sugg(\n                     cx,\n                     DEPRECATED_CFG_ATTR,\n                     attr.span,\n                     \"`cfg_attr` is deprecated for rustfmt and got replaced by tool_attributes\",\n                     \"use\",\n-                    format!(\"{}rustfmt::skip]\", attr_style),\n+                    \"#[rustfmt::skip]\".to_string(),\n                     Applicability::MachineApplicable,\n                 );\n             }"}, {"sha": "b08d9961d25dc4af5d14cdbdf569404e7a8b8a3e", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::consts::{constant, Constant};\n use crate::utils::sugg::Sugg;\n use crate::utils::{span_lint, span_lint_and_then};"}, {"sha": "64b3be8f30273b018ce2b022f41c5b359c3ce303", "filename": "clippy_lints/src/blacklisted_name.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblacklisted_name.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::span_lint;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "6e850931e6babca7421f487b350f8c7a065112fb", "filename": "clippy_lints/src/block_in_if_condition.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::*;\n use matches::matches;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};"}, {"sha": "8b1a56e3b6ee5625d1597555977e39ac293df38f", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{\n     get_trait_def_id, implements_trait, in_macro, match_type, paths, snippet_opt, span_lint_and_then, SpanlessEq,\n };"}, {"sha": "794b43f4db5c5184b9f5bb8f93933c23c1cade64", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{\n     contains_name, get_pat_name, match_type, paths, single_segment_path, snippet_with_applicability,\n     span_lint_and_sugg, walk_ptrs_ty,"}, {"sha": "70ea387515a8bb705d01a9d29f8068a9469a5997", "filename": "clippy_lints/src/cargo_common_metadata.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint on missing cargo common metadata\n \n use crate::utils::span_lint;"}, {"sha": "10cbc9e6ccd4f2dee85b11f37bafe746170f600d", "filename": "clippy_lints/src/collapsible_if.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_if.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Checks for if expressions that contain only an if expression.\n //!\n //! For example, the lint would catch:"}, {"sha": "229a411ce06a6c104418fefa60b9f71ecba75075", "filename": "clippy_lints/src/const_static_lifetime.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fconst_static_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fconst_static_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconst_static_lifetime.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{in_macro, snippet, span_lint_and_then};\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};"}, {"sha": "49722e5ad71f2c07cc4a0dd0ab644f373c42a98f", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n #![allow(clippy::float_cmp)]\n \n use crate::utils::{clip, sext, unsext};\n@@ -24,6 +14,7 @@ use std::convert::TryInto;\n use std::hash::{Hash, Hasher};\n use syntax::ast::{FloatTy, LitKind};\n use syntax::ptr::P;\n+use syntax_pos::symbol::Symbol;\n \n /// A `LitKind`-like enum to fold constant `Expr`s into.\n #[derive(Debug, Clone)]\n@@ -48,6 +39,8 @@ pub enum Constant {\n     Repeat(Box<Constant>, u64),\n     /// a tuple of constants\n     Tuple(Vec<Constant>),\n+    /// a literal with syntax error\n+    Err(Symbol),\n }\n \n impl PartialEq for Constant {\n@@ -113,6 +106,9 @@ impl Hash for Constant {\n                 c.hash(state);\n                 l.hash(state);\n             },\n+            Constant::Err(ref s) => {\n+                s.hash(state);\n+            },\n         }\n     }\n }\n@@ -165,6 +161,7 @@ pub fn lit_to_constant<'tcx>(lit: &LitKind, ty: Ty<'tcx>) -> Constant {\n             _ => bug!(),\n         },\n         LitKind::Bool(b) => Constant::Bool(b),\n+        LitKind::Err(s) => Constant::Err(s),\n     }\n }\n "}, {"sha": "3676519adc13276aae56c4a3fdd45cdf2df902cc", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{get_parent_expr, in_macro, snippet, span_lint_and_then, span_note_and_lint};\n use crate::utils::{SpanlessEq, SpanlessHash};\n use rustc::hir::*;"}, {"sha": "3d0df7424f12e99719b442396de58de55354a92e", "filename": "clippy_lints/src/copy_iterator.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fcopy_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fcopy_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopy_iterator.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{is_copy, match_path, paths, span_note_and_lint};\n use rustc::hir::{Item, ItemKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "9170f1e8ecf478fa5cbff167c96807a224b05052", "filename": "clippy_lints/src/cyclomatic_complexity.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! calculate cyclomatic complexity and warn about overly complex functions\n \n use rustc::cfg::CFG;"}, {"sha": "c4b39dc0f0adfd6664ee7d4d82311c9a39814659", "filename": "clippy_lints/src/default_trait_access.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_trait_access.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use if_chain::if_chain;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "7cb04d7a95bf8681a2d0377f0cfc65f24297575f", "filename": "clippy_lints/src/deprecated_lints.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fdeprecated_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fdeprecated_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeprecated_lints.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n macro_rules! declare_deprecated_lint {\n     (pub $name: ident, $_reason: expr) => {\n         declare_lint!(pub $name, Allow, \"deprecated lint\")"}, {"sha": "a2bf0098ab84e3c990d6ce5d25828d34bbcd9da6", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::paths;\n use crate::utils::{is_automatically_derived, is_copy, match_path, span_lint_and_then};\n use if_chain::if_chain;"}, {"sha": "e96ef9ac6219fcc349b2d47e0bdc6cebe49b4b15", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::span_lint;\n use itertools::Itertools;\n use pulldown_cmark;"}, {"sha": "fc4af438d44d841b94ceae7422bad5ee3e6208d5", "filename": "clippy_lints/src/double_comparison.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_comparison.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Lint on unnecessary double comparisons. Some examples:\n \n use rustc::hir::*;"}, {"sha": "38381b069f073294ca673c15d665701f369222b1", "filename": "clippy_lints/src/double_parens.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fdouble_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fdouble_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_parens.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{in_macro, span_lint};\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};"}, {"sha": "4a2a38f6ea12f5008d288b5d5fb466da6551dcbb", "filename": "clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{is_copy, match_def_path, opt_def_id, paths, span_note_and_lint};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "3ac98c716447d4efe49a2ec9ba17d7283db931b8", "filename": "clippy_lints/src/duration_subsec.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fduration_subsec.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use if_chain::if_chain;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "f633d81764b58addeaf7054fa39e8a7dacc65da2", "filename": "clippy_lints/src/else_if_without_else.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Felse_if_without_else.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint on if expressions with an else if, but without a final else branch\n \n use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};"}, {"sha": "71e84bf1b4720c327d68929afd4a926ba62f8d9b", "filename": "clippy_lints/src/empty_enum.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fempty_enum.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint when there is an enum with no variants\n \n use crate::utils::span_lint_and_then;"}, {"sha": "646a2569bbe1bb26b33f3844f52aaff603baa920", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::SpanlessEq;\n use crate::utils::{get_item_name, match_type, paths, snippet, span_lint_and_then, walk_ptrs_ty};\n use if_chain::if_chain;"}, {"sha": "ab9bc6cd0ca728ec6382e639b4c74a6e0121e5f0", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint on C-like enums that are `repr(isize/usize)` and have values that\n //! don't fit into an `i32`\n "}, {"sha": "9402c2a5aad33a105bb83338bddcdbf36091cae6", "filename": "clippy_lints/src/enum_glob_use.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_glob_use.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint on `use`ing all variants of an enum\n \n use crate::utils::span_lint;"}, {"sha": "ffaa8b2811a0c8454ee3def3aacc98ef7c7f93ff", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint on enum variants that are prefixed or suffixed by the same characters\n \n use crate::utils::{camel_case, in_macro};"}, {"sha": "93132534a767cac868a3f02fdd96bc919eda615e", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{\n     implements_trait, in_macro, is_copy, multispan_sugg, snippet, span_lint, span_lint_and_then, SpanlessEq,\n };"}, {"sha": "fea3185554376312acddab54c11bd0366e26ad2d", "filename": "clippy_lints/src/erasing_op.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ferasing_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ferasing_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ferasing_op.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::consts::{constant_simple, Constant};\n use crate::utils::{in_macro, span_lint};\n use rustc::hir::*;"}, {"sha": "a7b47fd1e5463f32ddcc00cb3d98a9e53c1064e2", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::span_lint;\n use rustc::hir::intravisit as visit;\n use rustc::hir::*;\n@@ -129,18 +120,16 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n         if let Categorization::Rvalue(..) = cmt.cat {\n             let id = map.hir_to_node_id(cmt.hir_id);\n             if let Some(Node::Stmt(st)) = map.find(map.get_parent_node(id)) {\n-                if let StmtKind::Decl(ref decl, _) = st.node {\n-                    if let DeclKind::Local(ref loc) = decl.node {\n-                        if let Some(ref ex) = loc.init {\n-                            if let ExprKind::Box(..) = ex.node {\n-                                if is_non_trait_box(cmt.ty) && !self.is_large_box(cmt.ty) {\n-                                    // let x = box (...)\n-                                    self.set.insert(consume_pat.id);\n-                                }\n-                                // TODO Box::new\n-                                // TODO vec![]\n-                                // TODO \"foo\".to_owned() and friends\n+                if let StmtKind::Local(ref loc) = st.node {\n+                    if let Some(ref ex) = loc.init {\n+                        if let ExprKind::Box(..) = ex.node {\n+                            if is_non_trait_box(cmt.ty) && !self.is_large_box(cmt.ty) {\n+                                // let x = box (...)\n+                                self.set.insert(consume_pat.id);\n                             }\n+                            // TODO Box::new\n+                            // TODO vec![]\n+                            // TODO \"foo\".to_owned() and friends\n                         }\n                     }\n                 }"}, {"sha": "624d215492f12ed0dd736501957c3fe8de3d6358", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{is_adjusted, iter_input_pats, snippet_opt, span_lint_and_then};\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "2b4b0d402392631b90135bc0d61e7d200efb6926", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 13, "deletions": 27, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{get_parent_expr, span_lint, span_note_and_lint};\n use if_chain::if_chain;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n@@ -98,14 +89,13 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for EvalOrderDependence {\n     }\n     fn check_stmt(&mut self, cx: &LateContext<'a, 'tcx>, stmt: &'tcx Stmt) {\n         match stmt.node {\n-            StmtKind::Expr(ref e, _) | StmtKind::Semi(ref e, _) => DivergenceVisitor { cx }.maybe_walk_expr(e),\n-            StmtKind::Decl(ref d, _) => {\n-                if let DeclKind::Local(ref local) = d.node {\n-                    if let Local { init: Some(ref e), .. } = **local {\n-                        DivergenceVisitor { cx }.visit_expr(e);\n-                    }\n+            StmtKind::Local(ref local) => {\n+                if let Local { init: Some(ref e), .. } = **local {\n+                    DivergenceVisitor { cx }.visit_expr(e);\n                 }\n             },\n+            StmtKind::Expr(ref e) | StmtKind::Semi(ref e) => DivergenceVisitor { cx }.maybe_walk_expr(e),\n+            StmtKind::Item(..) => {},\n         }\n     }\n }\n@@ -278,18 +268,14 @@ fn check_expr<'a, 'tcx>(vis: &mut ReadVisitor<'a, 'tcx>, expr: &'tcx Expr) -> St\n \n fn check_stmt<'a, 'tcx>(vis: &mut ReadVisitor<'a, 'tcx>, stmt: &'tcx Stmt) -> StopEarly {\n     match stmt.node {\n-        StmtKind::Expr(ref expr, _) | StmtKind::Semi(ref expr, _) => check_expr(vis, expr),\n-        StmtKind::Decl(ref decl, _) => {\n-            // If the declaration is of a local variable, check its initializer\n-            // expression if it has one. Otherwise, keep going.\n-            let local = match decl.node {\n-                DeclKind::Local(ref local) => Some(local),\n-                _ => None,\n-            };\n-            local\n-                .and_then(|local| local.init.as_ref())\n-                .map_or(StopEarly::KeepGoing, |expr| check_expr(vis, expr))\n-        },\n+        StmtKind::Expr(ref expr) | StmtKind::Semi(ref expr) => check_expr(vis, expr),\n+        // If the declaration is of a local variable, check its initializer\n+        // expression if it has one. Otherwise, keep going.\n+        StmtKind::Local(ref local) => local\n+            .init\n+            .as_ref()\n+            .map_or(StopEarly::KeepGoing, |expr| check_expr(vis, expr)),\n+        _ => StopEarly::KeepGoing,\n     }\n }\n "}, {"sha": "f17b82ab33d48c303127573ed40348d6c3eda0b3", "filename": "clippy_lints/src/excessive_precision.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fexcessive_precision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fexcessive_precision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_precision.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::span_lint_and_sugg;\n use if_chain::if_chain;\n use rustc::hir;"}, {"sha": "0bbc85a0416acb5c315afd9c1728a68ef95a4994", "filename": "clippy_lints/src/explicit_write.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexplicit_write.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{is_expn_of, match_def_path, opt_def_id, resolve_node, span_lint, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "2d11b3bd947478c5816f454cd6c914e61c3da94a", "filename": "clippy_lints/src/fallible_impl_from.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffallible_impl_from.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::paths::{BEGIN_PANIC, BEGIN_PANIC_FMT, FROM_TRAIT, OPTION, RESULT};\n use crate::utils::{is_expn_of, match_def_path, method_chain_args, opt_def_id, span_lint_and_then, walk_ptrs_ty};\n use if_chain::if_chain;"}, {"sha": "90e19af15d074646ee24d8cb85274483b8238dbd", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::paths;\n use crate::utils::{\n     in_macro, is_expn_of, last_path_segment, match_def_path, match_type, opt_def_id, resolve_node, snippet,\n@@ -62,12 +53,17 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                 ExprKind::Call(ref fun, ref args) => {\n                     if_chain! {\n                         if let ExprKind::Path(ref qpath) = fun.node;\n-                        if args.len() == 3;\n                         if let Some(fun_def_id) = opt_def_id(resolve_node(cx, qpath, fun.hir_id));\n-                        if match_def_path(cx.tcx, fun_def_id, &paths::FMT_ARGUMENTS_NEWV1FORMATTED);\n+                        let new_v1 = match_def_path(cx.tcx, fun_def_id, &paths::FMT_ARGUMENTS_NEWV1);\n+                        let new_v1_fmt = match_def_path(\n+                            cx.tcx,\n+                            fun_def_id,\n+                            &paths::FMT_ARGUMENTS_NEWV1FORMATTED\n+                        );\n+                        if new_v1 || new_v1_fmt;\n                         if check_single_piece(&args[0]);\n                         if let Some(format_arg) = get_single_string_arg(cx, &args[1]);\n-                        if check_unformatted(&args[2]);\n+                        if new_v1 || check_unformatted(&args[2]);\n                         if let ExprKind::AddrOf(_, ref format_arg) = format_arg.node;\n                         then {\n                             let (message, sugg) = if_chain! {"}, {"sha": "6459e7b81c6e105634dda77080692efe89fca25b", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{differing_macro_contexts, in_macro, snippet_opt, span_note_and_lint};\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};"}, {"sha": "a2b7d31b183ae035f5821e15bb4df1a4f5077bc3", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{iter_input_pats, span_lint, type_is_unsafe_function};\n use matches::matches;\n use rustc::hir;"}, {"sha": "d0e1ee57748696a9fcf6fb125a8e0b19434fa8c3", "filename": "clippy_lints/src/identity_conversion.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_conversion.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{\n     in_macro, match_def_path, match_trait_method, same_tys, snippet, snippet_with_macro_callsite, span_lint_and_then,\n };"}, {"sha": "862c289fce1d4e0a5ea1494d6852fb513dbd9026", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::consts::{constant_simple, Constant};\n use crate::utils::{clip, in_macro, snippet, span_lint, unsext};\n use rustc::hir::*;"}, {"sha": "19554c7e20721ac3287c3e4705ce26147a3adc27", "filename": "clippy_lints/src/if_not_else.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fif_not_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fif_not_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_not_else.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint on if branches that could be swapped so no `!` operation is necessary\n //! on the condition\n "}, {"sha": "073c37eefc5a969cf4d32bf5c24ae2b3f9e4b891", "filename": "clippy_lints/src/implicit_return.rs", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_return.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,14 +1,5 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-use crate::utils::{in_macro, snippet_opt, span_lint_and_then};\n-use rustc::hir::{intravisit::FnKind, Body, ExprKind, FnDecl};\n+use crate::utils::{in_macro, is_expn_of, snippet_opt, span_lint_and_then};\n+use rustc::hir::{intravisit::FnKind, Body, ExprKind, FnDecl, MatchSource};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};\n use rustc_errors::Applicability;\n@@ -90,15 +81,31 @@ impl Pass {\n                     Self::expr_match(cx, else_expr);\n                 }\n             },\n-            ExprKind::Match(_, arms, ..) => {\n-                for arm in arms {\n-                    Self::expr_match(cx, &arm.body);\n+            ExprKind::Match(.., arms, source) => {\n+                let check_all_arms = match source {\n+                    MatchSource::IfLetDesugar {\n+                        contains_else_clause: has_else,\n+                    } => *has_else,\n+                    _ => true,\n+                };\n+\n+                if check_all_arms {\n+                    for arm in arms {\n+                        Self::expr_match(cx, &arm.body);\n+                    }\n+                } else {\n+                    Self::expr_match(cx, &arms.first().expect(\"if let doesn't have a single arm\").body);\n                 }\n             },\n             // skip if it already has a return statement\n             ExprKind::Ret(..) => (),\n             // everything else is missing `return`\n-            _ => Self::lint(cx, expr.span, expr.span, \"add `return` as shown\"),\n+            _ => {\n+                // make sure it's not just an unreachable expression\n+                if is_expn_of(expr.span, \"unreachable\").is_none() {\n+                    Self::lint(cx, expr.span, expr.span, \"add `return` as shown\")\n+                }\n+            },\n         }\n     }\n }"}, {"sha": "b4893c759c88efe673e67a211f0d5e7be4f765e3", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint on indexing and slicing operations\n \n use crate::consts::{constant, Constant};"}, {"sha": "5d0c5a4a79ddbd65f29515680a26a8dd73b68bd1", "filename": "clippy_lints/src/infallible_destructuring_match.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Finfallible_destructuring_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Finfallible_destructuring_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfallible_destructuring_match.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use super::utils::{get_arg_name, match_var, remove_blocks, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "c25c4ec488fe8ddabcbd543cabfb37dee55c365b", "filename": "clippy_lints/src/infinite_iter.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfinite_iter.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{get_trait_def_id, higher, implements_trait, match_qpath, match_type, paths, span_lint};\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "52aa73d7a1038b9a6db98ad0f0b9801fe5982e7b", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint on inherent implementations\n \n use crate::utils::span_lint_and_then;"}, {"sha": "a092f86658b939dd9a6c7f56a9dc46f6c2c1ab50", "filename": "clippy_lints/src/inline_fn_without_body.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finline_fn_without_body.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! checks for `#[inline]` on trait methods without bodies\n \n use crate::utils::span_lint_and_then;"}, {"sha": "547052f342956d154bb09585c2bec903213eb08d", "filename": "clippy_lints/src/int_plus_one.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fint_plus_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fint_plus_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fint_plus_one.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint on blocks unnecessarily using >= with a + 1 or - 1\n \n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};"}, {"sha": "03b099b4393adaa2c706e358414d21a20b2de8ff", "filename": "clippy_lints/src/invalid_ref.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Finvalid_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Finvalid_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finvalid_ref.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{match_def_path, opt_def_id, paths, span_help_and_lint};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "0af8c3dd5cb2bda24739338a85f7d58d4acd2d7a", "filename": "clippy_lints/src/items_after_statements.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fitems_after_statements.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint when items are used after statements\n \n use crate::utils::{in_macro, span_lint};"}, {"sha": "d5bc2a8fad752e46f4979f7c95d7cb6c7782d25c", "filename": "clippy_lints/src/large_enum_variant.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_enum_variant.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint when there is a large size difference between variants on an enum\n \n use crate::utils::{snippet_opt, span_lint_and_then};"}, {"sha": "b15ba5a478388cf437a0c541c2c63b0e97868646", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{get_item_name, in_macro, snippet_with_applicability, span_lint, span_lint_and_sugg, walk_ptrs_ty};\n use rustc::hir::def_id::DefId;\n use rustc::hir::*;\n@@ -40,10 +31,10 @@ use syntax::source_map::{Span, Spanned};\n /// ```\n /// instead use\n /// ```rust\n-/// if x.len().is_empty() {\n+/// if x.is_empty() {\n ///     ..\n /// }\n-/// if !y.len().is_empty() {\n+/// if !y.is_empty() {\n ///     ..\n /// }\n /// ```\n@@ -124,8 +115,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LenZero {\n                     check_cmp(cx, expr.span, left, right, \"\", 1); // len < 1\n                     check_cmp(cx, expr.span, right, left, \"!\", 0); // 0 < len\n                 },\n-                BinOpKind::Ge => check_cmp(cx, expr.span, left, right, \"!\", 1), // len <= 1\n-                BinOpKind::Le => check_cmp(cx, expr.span, right, left, \"!\", 1), // 1 >= len\n+                BinOpKind::Ge => check_cmp(cx, expr.span, left, right, \"!\", 1), // len >= 1\n+                BinOpKind::Le => check_cmp(cx, expr.span, right, left, \"!\", 1), // 1 <= len\n                 _ => (),\n             }\n         }"}, {"sha": "5154c6d4d08e4581acfa86292b0c19bb43e371df", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{snippet, span_lint_and_then};\n use if_chain::if_chain;\n use rustc::hir;\n@@ -77,10 +68,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LetIfSeq {\n         while let Some(stmt) = it.next() {\n             if_chain! {\n                 if let Some(expr) = it.peek();\n-                if let hir::StmtKind::Decl(ref decl, _) = stmt.node;\n-                if let hir::DeclKind::Local(ref decl) = decl.node;\n-                if let hir::PatKind::Binding(mode, canonical_id, ident, None) = decl.pat.node;\n-                if let hir::StmtKind::Expr(ref if_, _) = expr.node;\n+                if let hir::StmtKind::Local(ref local) = stmt.node;\n+                if let hir::PatKind::Binding(mode, canonical_id, ident, None) = local.pat.node;\n+                if let hir::StmtKind::Expr(ref if_) = expr.node;\n                 if let hir::ExprKind::If(ref cond, ref then, ref else_) = if_.node;\n                 if !used_in_expr(cx, canonical_id, cond);\n                 if let hir::ExprKind::Block(ref then, _) = then.node;\n@@ -93,15 +83,15 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LetIfSeq {\n                         if let hir::ExprKind::Block(ref else_, _) = else_.node {\n                             if let Some(default) = check_assign(cx, canonical_id, else_) {\n                                 (else_.stmts.len() > 1, default)\n-                            } else if let Some(ref default) = decl.init {\n+                            } else if let Some(ref default) = local.init {\n                                 (true, &**default)\n                             } else {\n                                 continue;\n                             }\n                         } else {\n                             continue;\n                         }\n-                    } else if let Some(ref default) = decl.init {\n+                    } else if let Some(ref default) = local.init {\n                         (false, &**default)\n                     } else {\n                         continue;\n@@ -178,7 +168,7 @@ fn check_assign<'a, 'tcx>(\n     if_chain! {\n         if block.expr.is_none();\n         if let Some(expr) = block.stmts.iter().last();\n-        if let hir::StmtKind::Semi(ref expr, _) = expr.node;\n+        if let hir::StmtKind::Semi(ref expr) = expr.node;\n         if let hir::ExprKind::Assign(ref var, ref value) = expr.node;\n         if let hir::ExprKind::Path(ref qpath) = var.node;\n         if let Def::Local(local_id) = cx.tables.qpath_def(qpath, var.hir_id);"}, {"sha": "9d77c3c64a2abb917ad1cf71d03966786e299651", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // error-pattern:cargo-clippy\n \n #![feature(box_syntax)]\n@@ -20,7 +11,6 @@\n #![warn(rust_2018_idioms, trivial_casts, trivial_numeric_casts)]\n #![feature(crate_visibility_modifier)]\n #![feature(try_from)]\n-#![feature(if_while_or_patterns)]\n \n // FIXME: switch to something more ergonomic here, once available.\n // (currently there is no way to opt into sysroot crates w/o `extern crate`)"}, {"sha": "f7512446c87f9cd1961aa2e80de91a01f7458eb8", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::reexport::*;\n use crate::utils::{last_path_segment, span_lint};\n use matches::matches;"}, {"sha": "d6e6ffa61b31f7b219c9779f6fc033bf14bb56ee", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Lints concerned with the grouping of digits with underscores in integral or\n //! floating-point literal expressions.\n "}, {"sha": "70ff86087ea63ca54b0657f73fd0a922b5ec5464", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 28, "deletions": 33, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,18 +1,9 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::reexport::*;\n use if_chain::if_chain;\n use itertools::Itertools;\n use rustc::hir::def::Def;\n use rustc::hir::def_id;\n-use rustc::hir::intravisit::{walk_block, walk_decl, walk_expr, walk_pat, walk_stmt, NestedVisitorMap, Visitor};\n+use rustc::hir::intravisit::{walk_block, walk_expr, walk_pat, walk_stmt, NestedVisitorMap, Visitor};\n use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::middle::region;\n@@ -574,6 +565,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     && lhs_constructor.ident.name == \"Some\"\n                     && (pat_args.is_empty()\n                         || !is_refutable(cx, &pat_args[0])\n+                            && !is_used_inside(cx, iter_expr, &arms[0].body)\n                             && !is_iterator_used_after_while_let(cx, iter_expr)\n                             && !is_nested(cx, expr, &method_args[0]))\n                 {\n@@ -605,7 +597,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n     }\n \n     fn check_stmt(&mut self, cx: &LateContext<'a, 'tcx>, stmt: &'tcx Stmt) {\n-        if let StmtKind::Semi(ref expr, _) = stmt.node {\n+        if let StmtKind::Semi(ref expr) = stmt.node {\n             if let ExprKind::MethodCall(ref method, _, ref args) = expr.node {\n                 if args.len() == 1 && method.ident.name == \"collect\" && match_trait_method(cx, expr, &paths::ITERATOR) {\n                     span_lint(\n@@ -676,13 +668,7 @@ fn never_loop_block(block: &Block, main_loop_id: NodeId) -> NeverLoopResult {\n fn stmt_to_expr(stmt: &Stmt) -> Option<&Expr> {\n     match stmt.node {\n         StmtKind::Semi(ref e, ..) | StmtKind::Expr(ref e, ..) => Some(e),\n-        StmtKind::Decl(ref d, ..) => decl_to_expr(d),\n-    }\n-}\n-\n-fn decl_to_expr(decl: &Decl) -> Option<&Expr> {\n-    match decl.node {\n-        DeclKind::Local(ref local) => local.init.as_ref().map(|p| &**p),\n+        StmtKind::Local(ref local) => local.init.as_ref().map(|p| &**p),\n         _ => None,\n     }\n }\n@@ -950,8 +936,8 @@ fn get_indexed_assignments<'a, 'tcx>(\n         stmts\n             .iter()\n             .map(|stmt| match stmt.node {\n-                StmtKind::Decl(..) => None,\n-                StmtKind::Expr(ref e, _node_id) | StmtKind::Semi(ref e, _node_id) => Some(get_assignment(cx, e, var)),\n+                StmtKind::Local(..) | StmtKind::Item(..) => None,\n+                StmtKind::Expr(ref e) | StmtKind::Semi(ref e) => Some(get_assignment(cx, e, var)),\n             })\n             .chain(expr.as_ref().into_iter().map(|e| Some(get_assignment(cx, &*e, var))))\n             .filter_map(|op| op)\n@@ -1897,6 +1883,19 @@ impl<'a, 'tcx> Visitor<'tcx> for VarVisitor<'a, 'tcx> {\n     }\n }\n \n+fn is_used_inside<'a, 'tcx: 'a>(cx: &'a LateContext<'a, 'tcx>, expr: &'tcx Expr, container: &'tcx Expr) -> bool {\n+    let def_id = match var_def_id(cx, expr) {\n+        Some(id) => id,\n+        None => return false,\n+    };\n+    if let Some(used_mutably) = mutated_variables(container, cx) {\n+        if used_mutably.contains(&def_id) {\n+            return true;\n+        }\n+    }\n+    false\n+}\n+\n fn is_iterator_used_after_while_let<'a, 'tcx: 'a>(cx: &LateContext<'a, 'tcx>, iter_expr: &'tcx Expr) -> bool {\n     let def_id = match var_def_id(cx, iter_expr) {\n         Some(id) => id,\n@@ -1971,13 +1970,9 @@ fn extract_expr_from_first_stmt(block: &Block) -> Option<&Expr> {\n     if block.stmts.is_empty() {\n         return None;\n     }\n-    if let StmtKind::Decl(ref decl, _) = block.stmts[0].node {\n-        if let DeclKind::Local(ref local) = decl.node {\n-            if let Some(ref expr) = local.init {\n-                Some(expr)\n-            } else {\n-                None\n-            }\n+    if let StmtKind::Local(ref local) = block.stmts[0].node {\n+        if let Some(ref expr) = local.init {\n+            Some(expr)\n         } else {\n             None\n         }\n@@ -1991,8 +1986,8 @@ fn extract_first_expr(block: &Block) -> Option<&Expr> {\n     match block.expr {\n         Some(ref expr) if block.stmts.is_empty() => Some(expr),\n         None if !block.stmts.is_empty() => match block.stmts[0].node {\n-            StmtKind::Expr(ref expr, _) | StmtKind::Semi(ref expr, _) => Some(expr),\n-            StmtKind::Decl(..) => None,\n+            StmtKind::Expr(ref expr) | StmtKind::Semi(ref expr) => Some(expr),\n+            StmtKind::Local(..) | StmtKind::Item(..) => None,\n         },\n         _ => None,\n     }\n@@ -2090,9 +2085,9 @@ struct InitializeVisitor<'a, 'tcx: 'a> {\n }\n \n impl<'a, 'tcx> Visitor<'tcx> for InitializeVisitor<'a, 'tcx> {\n-    fn visit_decl(&mut self, decl: &'tcx Decl) {\n+    fn visit_stmt(&mut self, stmt: &'tcx Stmt) {\n         // Look for declarations of the variable\n-        if let DeclKind::Local(ref local) = decl.node {\n+        if let StmtKind::Local(ref local) = stmt.node {\n             if local.pat.id == self.var_id {\n                 if let PatKind::Binding(_, _, ident, _) = local.pat.node {\n                     self.name = Some(ident.name);\n@@ -2109,7 +2104,7 @@ impl<'a, 'tcx> Visitor<'tcx> for InitializeVisitor<'a, 'tcx> {\n                 }\n             }\n         }\n-        walk_decl(self, decl);\n+        walk_stmt(self, stmt);\n     }\n \n     fn visit_expr(&mut self, expr: &'tcx Expr) {\n@@ -2256,7 +2251,7 @@ struct LoopNestVisitor {\n \n impl<'tcx> Visitor<'tcx> for LoopNestVisitor {\n     fn visit_stmt(&mut self, stmt: &'tcx Stmt) {\n-        if stmt.node.id() == self.id {\n+        if stmt.id == self.id {\n             self.nesting = LookFurther;\n         } else if self.nesting == Unknown {\n             walk_stmt(self, stmt);"}, {"sha": "4db0ca759db808fb0e1fcd5f51d93e7b7cc6b8a0", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 47, "deletions": 33, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,19 +1,11 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::paths;\n use crate::utils::{\n     in_macro, match_trait_method, match_type, remove_blocks, snippet_with_applicability, span_lint_and_sugg,\n };\n use if_chain::if_chain;\n use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::ty;\n use rustc::{declare_tool_lint, lint_array};\n use rustc_errors::Applicability;\n use syntax::ast::Ident;\n@@ -27,9 +19,7 @@ pub struct Pass;\n ///\n /// **Why is this bad?** Readability, this can be written more concisely\n ///\n-/// **Known problems:** Sometimes `.cloned()` requires stricter trait\n-/// bound than `.map(|e| e.clone())` (which works because of the coercion).\n-/// See [#498](https://github.com/rust-lang-nursery/rust-clippy/issues/498).\n+/// **Known problems:** None\n ///\n /// **Example:**\n ///\n@@ -78,19 +68,27 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     hir::PatKind::Ref(ref inner, _) => if let hir::PatKind::Binding(\n                         hir::BindingAnnotation::Unannotated, _, name, None\n                     ) = inner.node {\n-                        lint(cx, e.span, args[0].span, name, closure_expr);\n+                        if ident_eq(name, closure_expr) {\n+                            lint(cx, e.span, args[0].span);\n+                        }\n                     },\n                     hir::PatKind::Binding(hir::BindingAnnotation::Unannotated, _, name, None) => {\n                         match closure_expr.node {\n                             hir::ExprKind::Unary(hir::UnOp::UnDeref, ref inner) => {\n-                                if !cx.tables.expr_ty(inner).is_box() {\n-                                    lint(cx, e.span, args[0].span, name, inner);\n+                                if ident_eq(name, inner) && !cx.tables.expr_ty(inner).is_box() {\n+                                    lint(cx, e.span, args[0].span);\n                                 }\n                             },\n                             hir::ExprKind::MethodCall(ref method, _, ref obj) => {\n-                                if method.ident.as_str() == \"clone\"\n+                                if ident_eq(name, &obj[0]) && method.ident.as_str() == \"clone\"\n                                     && match_trait_method(cx, closure_expr, &paths::CLONE_TRAIT) {\n-                                    lint(cx, e.span, args[0].span, name, &obj[0]);\n+\n+                                    let obj_ty = cx.tables.expr_ty(&obj[0]);\n+                                    if let ty::Ref(..) = obj_ty.sty {\n+                                        lint(cx, e.span, args[0].span);\n+                                    } else {\n+                                        lint_needless_cloning(cx, e.span, args[0].span);\n+                                    }\n                                 }\n                             },\n                             _ => {},\n@@ -103,22 +101,38 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n     }\n }\n \n-fn lint(cx: &LateContext<'_, '_>, replace: Span, root: Span, name: Ident, path: &hir::Expr) {\n+fn ident_eq(name: Ident, path: &hir::Expr) -> bool {\n     if let hir::ExprKind::Path(hir::QPath::Resolved(None, ref path)) = path.node {\n-        if path.segments.len() == 1 && path.segments[0].ident == name {\n-            let mut applicability = Applicability::MachineApplicable;\n-            span_lint_and_sugg(\n-                cx,\n-                MAP_CLONE,\n-                replace,\n-                \"You are using an explicit closure for cloning elements\",\n-                \"Consider calling the dedicated `cloned` method\",\n-                format!(\n-                    \"{}.cloned()\",\n-                    snippet_with_applicability(cx, root, \"..\", &mut applicability)\n-                ),\n-                applicability,\n-            )\n-        }\n+        path.segments.len() == 1 && path.segments[0].ident == name\n+    } else {\n+        false\n     }\n }\n+\n+fn lint_needless_cloning(cx: &LateContext<'_, '_>, root: Span, receiver: Span) {\n+    span_lint_and_sugg(\n+        cx,\n+        MAP_CLONE,\n+        root.trim_start(receiver).unwrap(),\n+        \"You are needlessly cloning iterator elements\",\n+        \"Remove the map call\",\n+        String::new(),\n+        Applicability::MachineApplicable,\n+    )\n+}\n+\n+fn lint(cx: &LateContext<'_, '_>, replace: Span, root: Span) {\n+    let mut applicability = Applicability::MachineApplicable;\n+    span_lint_and_sugg(\n+        cx,\n+        MAP_CLONE,\n+        replace,\n+        \"You are using an explicit closure for cloning elements\",\n+        \"Consider calling the dedicated `cloned` method\",\n+        format!(\n+            \"{}.cloned()\",\n+            snippet_with_applicability(cx, root, \"..\", &mut applicability)\n+        ),\n+        applicability,\n+    )\n+}"}, {"sha": "ad5761f5f04a7f4ca658c7fc376d71a6b583a0db", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::paths;\n use crate::utils::{in_macro, iter_input_pats, match_type, method_chain_args, snippet, span_lint_and_then};\n use if_chain::if_chain;\n@@ -140,9 +131,10 @@ fn reduce_unit_expression<'a>(cx: &LateContext<'_, '_>, expr: &'a hir::Expr) ->\n                     // If block only contains statements,\n                     // reduce `{ X; }` to `X` or `X;`\n                     match inner_stmt.node {\n-                        hir::StmtKind::Decl(ref d, _) => Some(d.span),\n-                        hir::StmtKind::Expr(ref e, _) => Some(e.span),\n-                        hir::StmtKind::Semi(_, _) => Some(inner_stmt.span),\n+                        hir::StmtKind::Local(ref local) => Some(local.span),\n+                        hir::StmtKind::Expr(ref e) => Some(e.span),\n+                        hir::StmtKind::Semi(..) => Some(inner_stmt.span),\n+                        hir::StmtKind::Item(..) => None,\n                     }\n                 },\n                 _ => {\n@@ -259,7 +251,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n             return;\n         }\n \n-        if let hir::StmtKind::Semi(ref expr, _) = stmt.node {\n+        if let hir::StmtKind::Semi(ref expr) = stmt.node {\n             if let Some(arglists) = method_chain_args(expr, &[\"map\"]) {\n                 lint_map_unit_fn(cx, stmt, expr, arglists[0]);\n             }"}, {"sha": "b003da44236f2f459b27d5855a9993adceb9a326", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::consts::{constant, Constant};\n use crate::utils::paths;\n use crate::utils::sugg::Sugg;"}, {"sha": "a75959e58fafec102dfd631ed3ea95a5411e7abe", "filename": "clippy_lints/src/mem_discriminant.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmem_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmem_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_discriminant.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{match_def_path, opt_def_id, paths, snippet, span_lint_and_then, walk_ptrs_ty_depth};\n use if_chain::if_chain;\n use rustc::hir::{Expr, ExprKind};"}, {"sha": "f83a8b5f7fe83bb41ca2b7d237e9150449d999a6", "filename": "clippy_lints/src/mem_forget.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_forget.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{match_def_path, opt_def_id, paths, span_lint};\n use rustc::hir::{Expr, ExprKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "d649895e33f75bb6b656c8adb93054157720b0d1", "filename": "clippy_lints/src/mem_replace.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmem_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmem_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_replace.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{match_def_path, match_qpath, opt_def_id, paths, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::hir::{Expr, ExprKind, MutMutable, QPath};"}, {"sha": "6c1befe6e53a5d7807df485f88541312bcfed252", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 17, "deletions": 29, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::paths;\n use crate::utils::sugg;\n use crate::utils::{\n@@ -1157,7 +1148,7 @@ fn lint_or_fun_call(cx: &LateContext<'_, '_>, expr: &hir::Expr, method_span: Spa\n \n /// Checks for the `EXPECT_FUN_CALL` lint.\n fn lint_expect_fun_call(cx: &LateContext<'_, '_>, expr: &hir::Expr, method_span: Span, name: &str, args: &[hir::Expr]) {\n-    fn extract_format_args(arg: &hir::Expr) -> Option<&hir::HirVec<hir::Expr>> {\n+    fn extract_format_args(arg: &hir::Expr) -> Option<(&hir::Expr, &hir::Expr)> {\n         let arg = match &arg.node {\n             hir::ExprKind::AddrOf(_, expr) => expr,\n             hir::ExprKind::MethodCall(method_name, _, args)\n@@ -1170,8 +1161,8 @@ fn lint_expect_fun_call(cx: &LateContext<'_, '_>, expr: &hir::Expr, method_span:\n \n         if let hir::ExprKind::Call(ref inner_fun, ref inner_args) = arg.node {\n             if is_expn_of(inner_fun.span, \"format\").is_some() && inner_args.len() == 1 {\n-                if let hir::ExprKind::Call(_, ref format_args) = inner_args[0].node {\n-                    return Some(format_args);\n+                if let hir::ExprKind::Call(_, format_args) = &inner_args[0].node {\n+                    return Some((&format_args[0], &format_args[1]));\n                 }\n             }\n         }\n@@ -1183,17 +1174,19 @@ fn lint_expect_fun_call(cx: &LateContext<'_, '_>, expr: &hir::Expr, method_span:\n         cx: &LateContext<'_, '_>,\n         a: &hir::Expr,\n         applicability: &mut Applicability,\n-    ) -> String {\n+    ) -> Vec<String> {\n         if let hir::ExprKind::AddrOf(_, ref format_arg) = a.node {\n             if let hir::ExprKind::Match(ref format_arg_expr, _, _) = format_arg.node {\n                 if let hir::ExprKind::Tup(ref format_arg_expr_tup) = format_arg_expr.node {\n-                    return snippet_with_applicability(cx, format_arg_expr_tup[0].span, \"..\", applicability)\n-                        .into_owned();\n+                    return format_arg_expr_tup\n+                        .iter()\n+                        .map(|a| snippet_with_applicability(cx, a.span, \"..\", applicability).into_owned())\n+                        .collect();\n                 }\n             }\n         };\n \n-        snippet(cx, a.span, \"..\").into_owned()\n+        unreachable!()\n     }\n \n     fn check_general_case(\n@@ -1242,14 +1235,11 @@ fn lint_expect_fun_call(cx: &LateContext<'_, '_>, expr: &hir::Expr, method_span:\n         };\n         let span_replace_word = method_span.with_hi(span.hi());\n \n-        if let Some(format_args) = extract_format_args(arg) {\n+        if let Some((fmt_spec, fmt_args)) = extract_format_args(arg) {\n             let mut applicability = Applicability::MachineApplicable;\n-            let args_len = format_args.len();\n-            let args: Vec<String> = format_args\n-                .into_iter()\n-                .take(args_len - 1)\n-                .map(|a| generate_format_arg_snippet(cx, a, &mut applicability))\n-                .collect();\n+            let mut args = vec![snippet(cx, fmt_spec.span, \"..\").into_owned()];\n+\n+            args.extend(generate_format_arg_snippet(cx, fmt_args, &mut applicability));\n \n             let sugg = args.join(\", \");\n \n@@ -1346,12 +1336,10 @@ fn lint_clone_on_copy(cx: &LateContext<'_, '_>, expr: &hir::Expr, arg: &hir::Exp\n                         _ => {},\n                     },\n                     hir::Node::Stmt(stmt) => {\n-                        if let hir::StmtKind::Decl(ref decl, _) = stmt.node {\n-                            if let hir::DeclKind::Local(ref loc) = decl.node {\n-                                if let hir::PatKind::Ref(..) = loc.pat.node {\n-                                    // let ref y = *x borrows x, let ref y = x.clone() does not\n-                                    return;\n-                                }\n+                        if let hir::StmtKind::Local(ref loc) = stmt.node {\n+                            if let hir::PatKind::Ref(..) = loc.pat.node {\n+                                // let ref y = *x borrows x, let ref y = x.clone() does not\n+                                return;\n                             }\n                         }\n                     },"}, {"sha": "8d90a4388fcbee2ad4f35d42ab806507e2a27d48", "filename": "clippy_lints/src/methods/unnecessary_filter_map.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::paths;\n use crate::utils::usage::mutated_variables;\n use crate::utils::{match_qpath, match_trait_method, span_lint};"}, {"sha": "beea667dd43c4332833b6a768615ef26abd65d83", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::consts::{constant_simple, Constant};\n use crate::utils::{match_def_path, opt_def_id, paths, span_lint};\n use rustc::hir::*;"}, {"sha": "88a6d62ee6dfe1f2c3555052a2985f9540c83e2b", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::consts::{constant, Constant};\n use crate::reexport::*;\n use crate::utils::sugg::Sugg;\n@@ -286,8 +277,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n \n     fn check_stmt(&mut self, cx: &LateContext<'a, 'tcx>, s: &'tcx Stmt) {\n         if_chain! {\n-            if let StmtKind::Decl(ref d, _) = s.node;\n-            if let DeclKind::Local(ref l) = d.node;\n+            if let StmtKind::Local(ref l) = s.node;\n             if let PatKind::Binding(an, _, i, None) = l.pat.node;\n             if let Some(ref init) = l.init;\n             then {\n@@ -325,7 +315,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n             }\n         };\n         if_chain! {\n-            if let StmtKind::Semi(ref expr, _) = s.node;\n+            if let StmtKind::Semi(ref expr) = s.node;\n             if let ExprKind::Binary(ref binop, ref a, ref b) = expr.node;\n             if binop.node == BinOpKind::And || binop.node == BinOpKind::Or;\n             if let Some(sugg) = Sugg::hir_opt(cx, a);"}, {"sha": "2cda1accc5694238177dfc9fac5dae398566bce5", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{constants, snippet, snippet_opt, span_help_and_lint, span_lint, span_lint_and_then};\n use if_chain::if_chain;\n use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};"}, {"sha": "22084bd12cbed4228ec425449a596471f4af7d6f", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,25 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// This file incorporates work covered by the following copyright and\n-// permission notice:\n-//   Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-//   file at the top-level directory of this distribution and at\n-//   http://rust-lang.org/COPYRIGHT.\n-//\n-//   Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-//   http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-//   <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-//   option. This file may not be copied, modified, or distributed\n-//   except according to those terms.\n-//\n-\n // Note: More specifically this lint is largely inspired (aka copied) from\n // *rustc*'s\n // [`missing_doc`].\n@@ -155,12 +133,12 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingDoc {\n             hir::ItemKind::Struct(..) => \"a struct\",\n             hir::ItemKind::Trait(..) => \"a trait\",\n             hir::ItemKind::TraitAlias(..) => \"a trait alias\",\n-            hir::ItemKind::GlobalAsm(..) => \"an assembly blob\",\n             hir::ItemKind::Ty(..) => \"a type alias\",\n             hir::ItemKind::Union(..) => \"a union\",\n             hir::ItemKind::Existential(..) => \"an existential type\",\n             hir::ItemKind::ExternCrate(..)\n             | hir::ItemKind::ForeignMod(..)\n+            | hir::ItemKind::GlobalAsm(..)\n             | hir::ItemKind::Impl(..)\n             | hir::ItemKind::Use(..) => return,\n         };"}, {"sha": "e9d0d2d77f1818f52887d76134e584c9e6bf1853", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,23 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//   Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-//   file at the top-level directory of this distribution and at\n-//   http://rust-lang.org/COPYRIGHT.\n-//\n-//   Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-//   http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-//   <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-//   option. This file may not be copied, modified, or distributed\n-//   except according to those terms.\n-//\n-\n use crate::utils::span_lint;\n use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "073d3857c55b4d5a216308508066025f2575a62f", "filename": "clippy_lints/src/multiple_crate_versions.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! lint on multiple versions of a crate being used\n \n use crate::utils::span_lint;"}, {"sha": "9aa3cce9d4b27afc2887ca0f8995ddcc546bae67", "filename": "clippy_lints/src/mut_mut.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mut.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{higher, span_lint};\n use rustc::hir;\n use rustc::hir::intravisit;"}, {"sha": "5293c80ca2b5dcae8d91967199625c4dc948ba81", "filename": "clippy_lints/src/mut_reference.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_reference.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::span_lint;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "b85f4b8ad300364ee734d40c6f4b81d240048c65", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Checks for uses of mutex where an atomic value could be used\n //!\n //! This lint is **warn** by default"}, {"sha": "3b1fea465f51b1ad74ae5a9300049fd8582c265f", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 23, "deletions": 17, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Checks for needless boolean results of if-else expressions\n //!\n //! This lint is **warn** by default\n@@ -79,21 +70,23 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBool {\n             let reduce = |ret, not| {\n                 let mut applicability = Applicability::MachineApplicable;\n                 let snip = Sugg::hir_with_applicability(cx, pred, \"<predicate>\", &mut applicability);\n-                let snip = if not { !snip } else { snip };\n+                let mut snip = if not { !snip } else { snip };\n \n-                let hint = if ret {\n-                    format!(\"return {}\", snip)\n-                } else {\n-                    snip.to_string()\n-                };\n+                if ret {\n+                    snip = snip.make_return();\n+                }\n+\n+                if parent_node_is_if_expr(&e, &cx) {\n+                    snip = snip.blockify()\n+                }\n \n                 span_lint_and_sugg(\n                     cx,\n                     NEEDLESS_BOOL,\n                     e.span,\n                     \"this if-then-else expression returns a bool literal\",\n                     \"you can reduce it to\",\n-                    hint,\n+                    snip.to_string(),\n                     applicability,\n                 );\n             };\n@@ -128,6 +121,19 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBool {\n     }\n }\n \n+fn parent_node_is_if_expr<'a, 'b>(expr: &Expr, cx: &LateContext<'a, 'b>) -> bool {\n+    let parent_id = cx.tcx.hir().get_parent_node(expr.id);\n+    let parent_node = cx.tcx.hir().get(parent_id);\n+\n+    if let rustc::hir::Node::Expr(e) = parent_node {\n+        if let ExprKind::If(_, _, _) = e.node {\n+            return true;\n+        }\n+    }\n+\n+    false\n+}\n+\n #[derive(Copy, Clone)]\n pub struct BoolComparison;\n \n@@ -276,7 +282,7 @@ fn fetch_bool_block(block: &Block) -> Expression {\n     match (&*block.stmts, block.expr.as_ref()) {\n         (&[], Some(e)) => fetch_bool_expr(&**e),\n         (&[ref e], None) => {\n-            if let StmtKind::Semi(ref e, _) = e.node {\n+            if let StmtKind::Semi(ref e) = e.node {\n                 if let ExprKind::Ret(_) = e.node {\n                     fetch_bool_expr(&**e)\n                 } else {"}, {"sha": "f21cbe8b9adb0b7012cf22979d4326a4c1d302b0", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Checks for needless address of operations (`&`)\n //!\n //! This lint is **warn** by default"}, {"sha": "792e38e187516a4aaaaf950d03cb7a27cc726ebb", "filename": "clippy_lints/src/needless_borrowed_ref.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Checks for useless borrowed references.\n //!\n //! This lint is **warn** by default"}, {"sha": "0b5ea255d7f14a24db92cfb4eca27f2785266585", "filename": "clippy_lints/src/needless_continue.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_continue.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Checks for continue statements in loops that are redundant.\n //!\n //! For example, the lint would catch"}, {"sha": "cb1fe475a1eeeb1363bea725bbbbdf01823aca96", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::ptr::get_spans;\n use crate::utils::{\n     get_trait_def_id, implements_trait, in_macro, is_copy, is_self, match_type, multispan_sugg, paths, snippet,\n@@ -377,8 +368,7 @@ impl<'a, 'tcx> MovedVariablesCtxt<'a, 'tcx> {\n                         Node::Stmt(s) => {\n                             // `let <pat> = x;`\n                             if_chain! {\n-                                if let StmtKind::Decl(ref decl, _) = s.node;\n-                                if let DeclKind::Local(ref local) = decl.node;\n+                                if let StmtKind::Local(ref local) = s.node;\n                                 then {\n                                     self.spans_need_deref\n                                         .entry(vid)"}, {"sha": "ab22e2c19b3d61c09b532e5bb93a9e27cc31456d", "filename": "clippy_lints/src/needless_update.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_update.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::span_lint;\n use rustc::hir::{Expr, ExprKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "919c771ccf5ace05d210386b1f302e8f5ff3cc87", "filename": "clippy_lints/src/neg_cmp_op_on_partial_ord.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use if_chain::if_chain;\n use rustc::hir::*;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};"}, {"sha": "846794d8b9926de421ec896e8503ed855b6cdd64", "filename": "clippy_lints/src/neg_multiply.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_multiply.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use if_chain::if_chain;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "37e0446faed42bf4a34ff57301dc7abd42dab9a5", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::paths;\n use crate::utils::sugg::DiagnosticBuilderExt;\n use crate::utils::{get_trait_def_id, implements_trait, return_ty, same_tys, span_lint_node_and_then};"}, {"sha": "648c198df080ade8ec46275b5c65994ce2575f43", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{has_drop, in_macro, snippet_opt, span_lint, span_lint_and_sugg};\n use rustc::hir::def::Def;\n use rustc::hir::{BinOpKind, BlockCheckMode, Expr, ExprKind, Stmt, StmtKind, UnsafeSource};\n@@ -113,7 +104,7 @@ impl LintPass for Pass {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n     fn check_stmt(&mut self, cx: &LateContext<'a, 'tcx>, stmt: &'tcx Stmt) {\n-        if let StmtKind::Semi(ref expr, _) = stmt.node {\n+        if let StmtKind::Semi(ref expr) = stmt.node {\n             if has_no_effect(cx, expr) {\n                 span_lint(cx, NO_EFFECT, stmt.span, \"statement with no effect\");\n             } else if let Some(reduced) = reduce_expression(cx, expr) {"}, {"sha": "11295c3c092933ca5ec36a8280092292be3768e2", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Checks for uses of const which the type is not Freeze (Cell-free).\n //!\n //! This lint is **deny** by default."}, {"sha": "f39cae46de03e5212f009ff3f84df4fdb69b4f29", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{span_lint, span_lint_and_then};\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};"}, {"sha": "5f15662c90cb4e87206fe19aa19584db28234c6c", "filename": "clippy_lints/src/ok_if_let.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fok_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fok_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fok_if_let.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{match_type, method_chain_args, paths, snippet, span_help_and_lint};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "fe572d86c1bd3ca9539541b9c4182cd2fb2356d0", "filename": "clippy_lints/src/open_options.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fopen_options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fopen_options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fopen_options.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{match_type, paths, span_lint, walk_ptrs_ty};\n use rustc::hir::{Expr, ExprKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n@@ -81,7 +72,7 @@ fn get_open_options(cx: &LateContext<'_, '_>, argument: &Expr, options: &mut Vec\n                     if let Spanned {\n                         node: LitKind::Bool(lit),\n                         ..\n-                    } = **span\n+                    } = *span\n                     {\n                         if lit {\n                             Argument::True"}, {"sha": "d76a9f96eff8644588768e23bdab6dbdeae2b904", "filename": "clippy_lints/src/overflow_check_conditional.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{span_lint, SpanlessEq};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "61646613b11df42631b068cc4e49d657e858d7bc", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{is_direct_expn_of, is_expn_of, match_def_path, opt_def_id, paths, resolve_node, span_lint};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "03d2d5d3bab8c39311347100ec27ef00bbacacfb", "filename": "clippy_lints/src/partialeq_ne_impl.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{is_automatically_derived, span_lint_node};\n use if_chain::if_chain;\n use rustc::hir::*;"}, {"sha": "44e82984c5470702378e18da78bd403268c9c172", "filename": "clippy_lints/src/precedence.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprecedence.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{in_macro, snippet_with_applicability, span_lint_and_sugg};\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};"}, {"sha": "87cd98928931fbda39b9d7e2c7f8553f458fff43", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Checks for usage of  `&Vec[_]` and `&String`.\n \n use crate::utils::ptr::get_spans;"}, {"sha": "32d330ac1715a250efcb2865e1a1abcd17589141", "filename": "clippy_lints/src/ptr_offset_with_cast.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils;\n use rustc::{declare_tool_lint, hir, lint, lint_array};\n use rustc_errors::Applicability;"}, {"sha": "03f6ea12e0012ac961501c1c202e7b34955ae9b3", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::sugg::Sugg;\n use if_chain::if_chain;\n use rustc::hir::def::Def;\n@@ -148,7 +139,7 @@ impl Pass {\n         if_chain! {\n             if block.stmts.len() == 1;\n             if let Some(expr) = block.stmts.iter().last();\n-            if let StmtKind::Semi(ref expr, _) = expr.node;\n+            if let StmtKind::Semi(ref expr) = expr.node;\n             if let ExprKind::Ret(ref ret_expr) = expr.node;\n             if let &Some(ref ret_expr) = ret_expr;\n "}, {"sha": "2e01afc22586e75f7a3bbd1882aa848a38be9ff9", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::sugg::Sugg;\n use crate::utils::{get_trait_def_id, higher, implements_trait, SpanlessEq};\n use crate::utils::{is_integer_literal, paths, snippet, snippet_opt, span_lint, span_lint_and_then};"}, {"sha": "f584ef19d5a85cae69426b74d86c3b67c568e4fe", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{\n     has_drop, in_macro, is_copy, match_def_path, match_type, paths, snippet_opt, span_lint_node,\n     span_lint_node_and_then, walk_ptrs_ty_depth,"}, {"sha": "9076d67cb14a2b9d27350e8d73092939f1d7de16", "filename": "clippy_lints/src/redundant_field_names.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_field_names.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::span_lint_and_sugg;\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};"}, {"sha": "bc61ee8e7e322fbf03342dd45f9053544e123320", "filename": "clippy_lints/src/redundant_pattern_matching.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{match_qpath, paths, snippet, span_lint_and_then};\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "8d2543ef6184288daa6cb0fd8340f0bb4034ecff", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};"}, {"sha": "6a58a6e73c718fa29921ce11936af7beef40d302", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::consts::{constant, Constant};\n use crate::utils::{is_expn_of, match_def_path, match_type, opt_def_id, paths, span_help_and_lint, span_lint};\n use if_chain::if_chain;"}, {"sha": "ea51e4711cdbce1df374ec85ced9c2ed5ea1db1e", "filename": "clippy_lints/src/replace_consts.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Freplace_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Freplace_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freplace_consts.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{match_def_path, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::hir;"}, {"sha": "d81d04b81d37a4f401270d6731ca060ef00ddb04", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{in_macro, match_path_ast, snippet_opt, span_lint_and_then, span_note_and_lint};\n use if_chain::if_chain;\n use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};"}, {"sha": "da8675b38dac48fff293a25d83d8b2d8b39507f9", "filename": "clippy_lints/src/serde_api.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fserde_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fserde_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fserde_api.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{get_trait_def_id, paths, span_lint};\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "c99b00bb98f9db85ad4fa8da9c70d7f0609b0809", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 21, "deletions": 31, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::reexport::*;\n use crate::utils::{contains_name, higher, iter_input_pats, snippet, span_lint_and_then};\n use rustc::hir::intravisit::FnKind;\n@@ -124,8 +115,9 @@ fn check_block<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, block: &'tcx Block, binding\n     let len = bindings.len();\n     for stmt in &block.stmts {\n         match stmt.node {\n-            StmtKind::Decl(ref decl, _) => check_decl(cx, decl, bindings),\n-            StmtKind::Expr(ref e, _) | StmtKind::Semi(ref e, _) => check_expr(cx, e, bindings),\n+            StmtKind::Local(ref local) => check_local(cx, local, bindings),\n+            StmtKind::Expr(ref e) | StmtKind::Semi(ref e) => check_expr(cx, e, bindings),\n+            StmtKind::Item(..) => {},\n         }\n     }\n     if let Some(ref o) = block.expr {\n@@ -134,30 +126,28 @@ fn check_block<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, block: &'tcx Block, binding\n     bindings.truncate(len);\n }\n \n-fn check_decl<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, decl: &'tcx Decl, bindings: &mut Vec<(Name, Span)>) {\n-    if in_external_macro(cx.sess(), decl.span) {\n+fn check_local<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, local: &'tcx Local, bindings: &mut Vec<(Name, Span)>) {\n+    if in_external_macro(cx.sess(), local.span) {\n         return;\n     }\n-    if higher::is_from_for_desugar(decl) {\n+    if higher::is_from_for_desugar(local) {\n         return;\n     }\n-    if let DeclKind::Local(ref local) = decl.node {\n-        let Local {\n-            ref pat,\n-            ref ty,\n-            ref init,\n-            span,\n-            ..\n-        } = **local;\n-        if let Some(ref t) = *ty {\n-            check_ty(cx, t, bindings)\n-        }\n-        if let Some(ref o) = *init {\n-            check_expr(cx, o, bindings);\n-            check_pat(cx, pat, Some(o), span, bindings);\n-        } else {\n-            check_pat(cx, pat, None, span, bindings);\n-        }\n+    let Local {\n+        ref pat,\n+        ref ty,\n+        ref init,\n+        span,\n+        ..\n+    } = *local;\n+    if let Some(ref t) = *ty {\n+        check_ty(cx, t, bindings)\n+    }\n+    if let Some(ref o) = *init {\n+        check_expr(cx, o, bindings);\n+        check_pat(cx, pat, Some(o), span, bindings);\n+    } else {\n+        check_pat(cx, pat, None, span, bindings);\n     }\n }\n "}, {"sha": "aea414065d85810be51069d09dbee620f916523d", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::sugg::Sugg;\n use crate::utils::{get_enclosing_block, match_qpath, span_lint_and_then, SpanlessEq};\n use if_chain::if_chain;\n@@ -100,8 +91,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n     fn check_stmt(&mut self, cx: &LateContext<'a, 'tcx>, stmt: &'tcx Stmt) {\n         // Matches statements which initializes vectors. For example: `let mut vec = Vec::with_capacity(10)`\n         if_chain! {\n-            if let StmtKind::Decl(ref decl, _) = stmt.node;\n-            if let DeclKind::Local(ref local) = decl.node;\n+            if let StmtKind::Local(ref local) = stmt.node;\n             if let PatKind::Binding(BindingAnnotation::Mutable, _, variable_name, None) = local.pat.node;\n             if let Some(ref init) = local.init;\n             if let Some(ref len_arg) = Self::is_vec_with_capacity(init);\n@@ -113,7 +103,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     len_expr: len_arg,\n                 };\n \n-                Self::search_initialization(cx, vi, stmt.node.id());\n+                Self::search_initialization(cx, vi, stmt.id);\n             }\n         }\n     }\n@@ -296,7 +286,7 @@ impl<'a, 'tcx> Visitor<'tcx> for VectorInitializationVisitor<'a, 'tcx> {\n     fn visit_stmt(&mut self, stmt: &'tcx Stmt) {\n         if self.initialization_found {\n             match stmt.node {\n-                StmtKind::Expr(ref expr, _) | StmtKind::Semi(ref expr, _) => {\n+                StmtKind::Expr(ref expr) | StmtKind::Semi(ref expr) => {\n                     self.search_slow_extend_filling(expr);\n                     self.search_slow_resize_filling(expr);\n                 },"}, {"sha": "ffec764fd5e8445b6f7b316be063f6f75ae3a362", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::SpanlessEq;\n use crate::utils::{get_parent_expr, is_allowed, match_type, paths, span_lint, span_lint_and_sugg, walk_ptrs_ty};\n use rustc::hir::*;"}, {"sha": "c6dd9504857a66268458dd209bb0b207c893dbf9", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{get_trait_def_id, span_lint};\n use if_chain::if_chain;\n use rustc::hir;"}, {"sha": "ddf33fcc411f7f081dc2447e3b7c75195f00feb1", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::sugg::Sugg;\n use crate::utils::{\n     differing_macro_contexts, match_type, paths, snippet, span_lint_and_then, walk_ptrs_ty, SpanlessEq,\n@@ -80,17 +71,16 @@ fn check_manual_swap(cx: &LateContext<'_, '_>, block: &Block) {\n     for w in block.stmts.windows(3) {\n         if_chain! {\n             // let t = foo();\n-            if let StmtKind::Decl(ref tmp, _) = w[0].node;\n-            if let DeclKind::Local(ref tmp) = tmp.node;\n+            if let StmtKind::Local(ref tmp) = w[0].node;\n             if let Some(ref tmp_init) = tmp.init;\n             if let PatKind::Binding(_, _, ident, None) = tmp.pat.node;\n \n             // foo() = bar();\n-            if let StmtKind::Semi(ref first, _) = w[1].node;\n+            if let StmtKind::Semi(ref first) = w[1].node;\n             if let ExprKind::Assign(ref lhs1, ref rhs1) = first.node;\n \n             // bar() = t;\n-            if let StmtKind::Semi(ref second, _) = w[2].node;\n+            if let StmtKind::Semi(ref second) = w[2].node;\n             if let ExprKind::Assign(ref lhs2, ref rhs2) = second.node;\n             if let ExprKind::Path(QPath::Resolved(None, ref rhs2)) = rhs2.node;\n             if rhs2.segments.len() == 1;\n@@ -169,8 +159,8 @@ fn check_manual_swap(cx: &LateContext<'_, '_>, block: &Block) {\n fn check_suspicious_swap(cx: &LateContext<'_, '_>, block: &Block) {\n     for w in block.stmts.windows(2) {\n         if_chain! {\n-            if let StmtKind::Semi(ref first, _) = w[0].node;\n-            if let StmtKind::Semi(ref second, _) = w[1].node;\n+            if let StmtKind::Semi(ref first) = w[0].node;\n+            if let StmtKind::Semi(ref second) = w[1].node;\n             if !differing_macro_contexts(first.span, second.span);\n             if let ExprKind::Assign(ref lhs0, ref rhs0) = first.node;\n             if let ExprKind::Assign(ref lhs1, ref rhs1) = second.node;"}, {"sha": "c8a01c3668c6d218d33ae78f3dc56a566702fbda", "filename": "clippy_lints/src/temporary_assignment.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftemporary_assignment.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::is_adjusted;\n use crate::utils::span_lint;\n use rustc::hir::def::Def;"}, {"sha": "02205cfbd6838a23b9ea9cb1cef58bb790f059bd", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{last_path_segment, match_def_path, paths, snippet, span_lint, span_lint_and_then};\n use crate::utils::{opt_def_id, sugg};\n use if_chain::if_chain;"}, {"sha": "5ab73758301f723bbbd95fec047d218eddc855f7", "filename": "clippy_lints/src/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::cmp;\n \n use crate::utils::{in_macro, is_copy, is_self_ty, snippet, span_lint_and_sugg};"}, {"sha": "898fd5a98089bcec33ec46f323146658b4657c2a", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 20, "deletions": 34, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n #![allow(clippy::default_hash_types)]\n \n use crate::consts::{constant, Constant};\n@@ -473,37 +463,33 @@ declare_clippy_lint! {\n     \"creating a let binding to a value of unit type, which usually can't be used afterwards\"\n }\n \n-fn check_let_unit(cx: &LateContext<'_, '_>, decl: &Decl) {\n-    if let DeclKind::Local(ref local) = decl.node {\n-        if is_unit(cx.tables.pat_ty(&local.pat)) {\n-            if in_external_macro(cx.sess(), decl.span) || in_macro(local.pat.span) {\n-                return;\n-            }\n-            if higher::is_from_for_desugar(decl) {\n-                return;\n-            }\n-            span_lint(\n-                cx,\n-                LET_UNIT_VALUE,\n-                decl.span,\n-                &format!(\n-                    \"this let-binding has unit value. Consider omitting `let {} =`\",\n-                    snippet(cx, local.pat.span, \"..\")\n-                ),\n-            );\n-        }\n-    }\n-}\n-\n impl LintPass for LetPass {\n     fn get_lints(&self) -> LintArray {\n         lint_array!(LET_UNIT_VALUE)\n     }\n }\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LetPass {\n-    fn check_decl(&mut self, cx: &LateContext<'a, 'tcx>, decl: &'tcx Decl) {\n-        check_let_unit(cx, decl)\n+    fn check_stmt(&mut self, cx: &LateContext<'a, 'tcx>, stmt: &'tcx Stmt) {\n+        if let StmtKind::Local(ref local) = stmt.node {\n+            if is_unit(cx.tables.pat_ty(&local.pat)) {\n+                if in_external_macro(cx.sess(), stmt.span) || in_macro(local.pat.span) {\n+                    return;\n+                }\n+                if higher::is_from_for_desugar(local) {\n+                    return;\n+                }\n+                span_lint(\n+                    cx,\n+                    LET_UNIT_VALUE,\n+                    stmt.span,\n+                    &format!(\n+                        \"this let-binding has unit value. Consider omitting `let {} =`\",\n+                        snippet(cx, local.pat.span, \"..\")\n+                    ),\n+                );\n+            }\n+        }\n     }\n }\n "}, {"sha": "d9207fd2131dce31efcaa892d88e4fce0d280fd4", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{is_allowed, snippet, span_help_and_lint};\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};"}, {"sha": "6beda8ce706a71e2c1417c4757e28d0eb468cdd6", "filename": "clippy_lints/src/unsafe_removed_from_name.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::span_lint;\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};"}, {"sha": "27deb0d99459c7f9eff623547714170fa6a4cf2e", "filename": "clippy_lints/src/unused_io_amount.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_io_amount.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{is_try, match_qpath, match_trait_method, paths, span_lint};\n use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n@@ -50,7 +41,7 @@ impl LintPass for UnusedIoAmount {\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedIoAmount {\n     fn check_stmt(&mut self, cx: &LateContext<'_, '_>, s: &hir::Stmt) {\n         let expr = match s.node {\n-            hir::StmtKind::Semi(ref expr, _) | hir::StmtKind::Expr(ref expr, _) => &**expr,\n+            hir::StmtKind::Semi(ref expr) | hir::StmtKind::Expr(ref expr) => &**expr,\n             _ => return,\n         };\n "}, {"sha": "d53fd265d373e12097a3a8d032d58d4e7e5186cc", "filename": "clippy_lints/src/unused_label.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Funused_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Funused_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_label.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{in_macro, span_lint};\n use rustc::hir;\n use rustc::hir::intravisit::{walk_expr, walk_fn, FnKind, NestedVisitorMap, Visitor};"}, {"sha": "369b33363b5a8139fc0763067664526d61f9e405", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use if_chain::if_chain;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};"}, {"sha": "88cf01987b55c765c47d563702a7c488dac6c963", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::span_lint_and_sugg;\n use if_chain::if_chain;\n use rustc::hir::def::{CtorKind, Def};\n@@ -65,10 +56,15 @@ impl LintPass for UseSelf {\n const SEGMENTS_MSG: &str = \"segments should be composed of at least 1 element\";\n \n fn span_use_self_lint(cx: &LateContext<'_, '_>, path: &Path) {\n+    // path segments only include actual path, no methods or fields\n+    let last_path_span = path.segments.last().expect(SEGMENTS_MSG).ident.span;\n+    // only take path up to the end of last_path_span\n+    let span = path.span.with_hi(last_path_span.hi());\n+\n     span_lint_and_sugg(\n         cx,\n         USE_SELF,\n-        path.span,\n+        span,\n         \"unnecessary structure name repetition\",\n         \"use the applicable keyword\",\n         \"Self\".to_owned(),"}, {"sha": "9623c6cbdaddf94b6783d0d03e949b72fd28643b", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 19, "deletions": 36, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,19 +1,10 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! A group of attributes that can be attached to Rust code in order\n //! to generate a clippy lint detecting said code automatically.\n \n use crate::utils::get_attr;\n use rustc::hir;\n use rustc::hir::intravisit::{NestedVisitorMap, Visitor};\n-use rustc::hir::{BindingAnnotation, DeclKind, Expr, ExprKind, Pat, PatKind, QPath, Stmt, StmtKind, TyKind};\n+use rustc::hir::{BindingAnnotation, Expr, ExprKind, Pat, PatKind, QPath, Stmt, StmtKind, TyKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};\n use rustc_data_structures::fx::FxHashMap;\n@@ -269,6 +260,7 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n                 match lit.node {\n                     LitKind::Bool(val) => println!(\"    if let LitKind::Bool({:?}) = {}.node;\", val, lit_pat),\n                     LitKind::Char(c) => println!(\"    if let LitKind::Char({:?}) = {}.node;\", c, lit_pat),\n+                    LitKind::Err(val) => println!(\"    if let LitKind::Err({}) = {}.node;\", val, lit_pat),\n                     LitKind::Byte(b) => println!(\"    if let LitKind::Byte({}) = {}.node;\", b, lit_pat),\n                     // FIXME: also check int type\n                     LitKind::Int(i, _) => println!(\"    if let LitKind::Int({}, _) = {}.node;\", i, lit_pat),\n@@ -634,43 +626,34 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n         print!(\"    if let StmtKind::\");\n         let current = format!(\"{}.node\", self.current);\n         match s.node {\n-            // Could be an item or a local (let) binding:\n-            StmtKind::Decl(ref decl, _) => {\n-                let decl_pat = self.next(\"decl\");\n-                println!(\"Decl(ref {}, _) = {}\", decl_pat, current);\n-                print!(\"    if let DeclKind::\");\n-                let current = format!(\"{}.node\", decl_pat);\n-                match decl.node {\n-                    // A local (let) binding:\n-                    DeclKind::Local(ref local) => {\n-                        let local_pat = self.next(\"local\");\n-                        println!(\"Local(ref {}) = {};\", local_pat, current);\n-                        if let Some(ref init) = local.init {\n-                            let init_pat = self.next(\"init\");\n-                            println!(\"    if let Some(ref {}) = {}.init\", init_pat, local_pat);\n-                            self.current = init_pat;\n-                            self.visit_expr(init);\n-                        }\n-                        self.current = format!(\"{}.pat\", local_pat);\n-                        self.visit_pat(&local.pat);\n-                    },\n-                    // An item binding:\n-                    DeclKind::Item(_) => {\n-                        println!(\"Item(item_id) = {};\", current);\n-                    },\n+            // A local (let) binding:\n+            StmtKind::Local(ref local) => {\n+                let local_pat = self.next(\"local\");\n+                println!(\"Local(ref {}) = {};\", local_pat, current);\n+                if let Some(ref init) = local.init {\n+                    let init_pat = self.next(\"init\");\n+                    println!(\"    if let Some(ref {}) = {}.init\", init_pat, local_pat);\n+                    self.current = init_pat;\n+                    self.visit_expr(init);\n                 }\n+                self.current = format!(\"{}.pat\", local_pat);\n+                self.visit_pat(&local.pat);\n+            },\n+            // An item binding:\n+            StmtKind::Item(_) => {\n+                println!(\"Item(item_id) = {};\", current);\n             },\n \n             // Expr without trailing semi-colon (must have unit type):\n-            StmtKind::Expr(ref e, _) => {\n+            StmtKind::Expr(ref e) => {\n                 let e_pat = self.next(\"e\");\n                 println!(\"Expr(ref {}, _) = {}\", e_pat, current);\n                 self.current = e_pat;\n                 self.visit_expr(e);\n             },\n \n             // Expr with trailing semi-colon (may have any type):\n-            StmtKind::Semi(ref e, _) => {\n+            StmtKind::Semi(ref e) => {\n                 let e_pat = self.next(\"e\");\n                 println!(\"Semi(ref {}, _) = {}\", e_pat, current);\n                 self.current = e_pat;"}, {"sha": "b49287b30d11a6ca8ebb87e1feaacc5665bf28f5", "filename": "clippy_lints/src/utils/camel_case.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fcamel_case.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fcamel_case.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fcamel_case.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n /// Return the index of the character after the first camel-case component of\n /// `s`.\n pub fn until(s: &str) -> usize {"}, {"sha": "31e20f37e20dfab2df53f26d9dfcdbd5157d4c50", "filename": "clippy_lints/src/utils/comparisons.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fcomparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fcomparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fcomparisons.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Utility functions about comparison operators.\n \n #![deny(clippy::missing_docs_in_private_items)]"}, {"sha": "55256a254278e12db393cb9a8b8ce7a8a8f4ecc8", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Read configurations files.\n \n #![deny(clippy::missing_docs_in_private_items)]"}, {"sha": "522932f054d894eef06d81b7a53203fc255f9d89", "filename": "clippy_lints/src/utils/constants.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fconstants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fconstants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconstants.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! This module contains some useful constants.\n \n #![deny(clippy::missing_docs_in_private_items)]"}, {"sha": "537cdf55eb146d5fff6cd0933aaa8877bab3db8f", "filename": "clippy_lints/src/utils/higher.rs", "status": "modified", "additions": 8, "deletions": 23, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhigher.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! This module contains functions for retrieve the original AST from lowered\n //! `hir`.\n \n@@ -157,8 +148,8 @@ pub fn range<'a, 'b, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'b hir::Expr) -> O\n     }\n }\n \n-/// Checks if a `let` decl is from a `for` loop desugaring.\n-pub fn is_from_for_desugar(decl: &hir::Decl) -> bool {\n+/// Checks if a `let` statement is from a `for` loop desugaring.\n+pub fn is_from_for_desugar(local: &hir::Local) -> bool {\n     // This will detect plain for-loops without an actual variable binding:\n     //\n     // ```\n@@ -167,8 +158,7 @@ pub fn is_from_for_desugar(decl: &hir::Decl) -> bool {\n     // }\n     // ```\n     if_chain! {\n-        if let hir::DeclKind::Local(ref loc) = decl.node;\n-        if let Some(ref expr) = loc.init;\n+        if let Some(ref expr) = local.init;\n         if let hir::ExprKind::Match(_, _, hir::MatchSource::ForLoopDesugar) = expr.node;\n         then {\n             return true;\n@@ -183,12 +173,8 @@ pub fn is_from_for_desugar(decl: &hir::Decl) -> bool {\n     //     // anything\n     // }\n     // ```\n-    if_chain! {\n-        if let hir::DeclKind::Local(ref loc) = decl.node;\n-        if let hir::LocalSource::ForLoopDesugar = loc.source;\n-        then {\n-            return true;\n-        }\n+    if let hir::LocalSource::ForLoopDesugar = local.source {\n+        return true;\n     }\n \n     false\n@@ -204,11 +190,10 @@ pub fn for_loop(expr: &hir::Expr) -> Option<(&hir::Pat, &hir::Expr, &hir::Expr)>\n         if let hir::ExprKind::Loop(ref block, _, _) = arms[0].body.node;\n         if block.expr.is_none();\n         if let [ _, _, ref let_stmt, ref body ] = *block.stmts;\n-        if let hir::StmtKind::Decl(ref decl, _) = let_stmt.node;\n-        if let hir::DeclKind::Local(ref decl) = decl.node;\n-        if let hir::StmtKind::Expr(ref expr, _) = body.node;\n+        if let hir::StmtKind::Local(ref local) = let_stmt.node;\n+        if let hir::StmtKind::Expr(ref expr) = body.node;\n         then {\n-            return Some((&*decl.pat, &iterargs[0], expr));\n+            return Some((&*local.pat, &iterargs[0], expr));\n         }\n     }\n     None"}, {"sha": "a176830be26bc6257f0bb1d88dfee666f8c1e220", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 19, "deletions": 30, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::consts::{constant_context, constant_simple};\n use crate::utils::differing_macro_contexts;\n use rustc::hir::*;\n@@ -52,17 +43,14 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n     /// Check whether two statements are the same.\n     pub fn eq_stmt(&mut self, left: &Stmt, right: &Stmt) -> bool {\n         match (&left.node, &right.node) {\n-            (&StmtKind::Decl(ref l, _), &StmtKind::Decl(ref r, _)) => {\n-                if let (&DeclKind::Local(ref l), &DeclKind::Local(ref r)) = (&l.node, &r.node) {\n-                    self.eq_pat(&l.pat, &r.pat)\n-                        && both(&l.ty, &r.ty, |l, r| self.eq_ty(l, r))\n-                        && both(&l.init, &r.init, |l, r| self.eq_expr(l, r))\n-                } else {\n-                    false\n-                }\n+            (&StmtKind::Local(ref l), &StmtKind::Local(ref r)) => {\n+                self.eq_pat(&l.pat, &r.pat)\n+                    && both(&l.ty, &r.ty, |l, r| self.eq_ty(l, r))\n+                    && both(&l.init, &r.init, |l, r| self.eq_expr(l, r))\n+            },\n+            (&StmtKind::Expr(ref l), &StmtKind::Expr(ref r)) | (&StmtKind::Semi(ref l), &StmtKind::Semi(ref r)) => {\n+                self.eq_expr(l, r)\n             },\n-            (&StmtKind::Expr(ref l, _), &StmtKind::Expr(ref r, _))\n-            | (&StmtKind::Semi(ref l, _), &StmtKind::Semi(ref r, _)) => self.eq_expr(l, r),\n             _ => false,\n         }\n     }\n@@ -652,23 +640,24 @@ impl<'a, 'tcx: 'a> SpanlessHash<'a, 'tcx> {\n \n     pub fn hash_stmt(&mut self, b: &Stmt) {\n         match b.node {\n-            StmtKind::Decl(ref decl, _) => {\n-                let c: fn(_, _) -> _ = StmtKind::Decl;\n+            StmtKind::Local(ref local) => {\n+                let c: fn(_) -> _ = StmtKind::Local;\n                 c.hash(&mut self.s);\n-\n-                if let DeclKind::Local(ref local) = decl.node {\n-                    if let Some(ref init) = local.init {\n-                        self.hash_expr(init);\n-                    }\n+                if let Some(ref init) = local.init {\n+                    self.hash_expr(init);\n                 }\n             },\n-            StmtKind::Expr(ref expr, _) => {\n-                let c: fn(_, _) -> _ = StmtKind::Expr;\n+            StmtKind::Item(..) => {\n+                let c: fn(_) -> _ = StmtKind::Item;\n+                c.hash(&mut self.s);\n+            },\n+            StmtKind::Expr(ref expr) => {\n+                let c: fn(_) -> _ = StmtKind::Expr;\n                 c.hash(&mut self.s);\n                 self.hash_expr(expr);\n             },\n-            StmtKind::Semi(ref expr, _) => {\n-                let c: fn(_, _) -> _ = StmtKind::Semi;\n+            StmtKind::Semi(ref expr) => {\n+                let c: fn(_) -> _ = StmtKind::Semi;\n                 c.hash(&mut self.s);\n                 self.hash_expr(expr);\n             },"}, {"sha": "4116f8ffbafab05968f2885ebfd9174084d92e77", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 11, "deletions": 26, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! checks for attributes\n \n use crate::utils::get_attr;\n@@ -131,8 +122,17 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n             return;\n         }\n         match stmt.node {\n-            hir::StmtKind::Decl(ref decl, _) => print_decl(cx, decl),\n-            hir::StmtKind::Expr(ref e, _) | hir::StmtKind::Semi(ref e, _) => print_expr(cx, e, 0),\n+            hir::StmtKind::Local(ref local) => {\n+                println!(\"local variable of type {}\", cx.tables.node_id_to_type(local.hir_id));\n+                println!(\"pattern:\");\n+                print_pat(cx, &local.pat, 0);\n+                if let Some(ref e) = local.init {\n+                    println!(\"init expression:\");\n+                    print_expr(cx, e, 0);\n+                }\n+            },\n+            hir::StmtKind::Item(_) => println!(\"item decl\"),\n+            hir::StmtKind::Expr(ref e) | hir::StmtKind::Semi(ref e) => print_expr(cx, e, 0),\n         }\n     }\n     // fn check_foreign_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx\n@@ -148,21 +148,6 @@ fn has_attr(attrs: &[Attribute]) -> bool {\n     get_attr(attrs, \"dump\").count() > 0\n }\n \n-fn print_decl(cx: &LateContext<'_, '_>, decl: &hir::Decl) {\n-    match decl.node {\n-        hir::DeclKind::Local(ref local) => {\n-            println!(\"local variable of type {}\", cx.tables.node_id_to_type(local.hir_id));\n-            println!(\"pattern:\");\n-            print_pat(cx, &local.pat, 0);\n-            if let Some(ref e) = local.init {\n-                println!(\"init expression:\");\n-                print_expr(cx, e, 0);\n-            }\n-        },\n-        hir::DeclKind::Item(_) => println!(\"item decl\"),\n-    }\n-}\n-\n #[allow(clippy::similar_names)]\n fn print_expr(cx: &LateContext<'_, '_>, expr: &hir::Expr, indent: usize) {\n     let ind = \"  \".repeat(indent);"}, {"sha": "788fc434d510cae168e860aae024a7709a0059ba", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{\n     match_def_path, match_type, paths, span_help_and_lint, span_lint, span_lint_and_sugg, walk_ptrs_ty,\n };"}, {"sha": "c83b0f155fcac952d6f703008484864a9c3fefd3", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::reexport::*;\n use if_chain::if_chain;\n use matches::matches;\n@@ -73,9 +64,25 @@ pub fn differing_macro_contexts(lhs: Span, rhs: Span) -> bool {\n /// ```\n pub fn in_constant(cx: &LateContext<'_, '_>, id: NodeId) -> bool {\n     let parent_id = cx.tcx.hir().get_parent(id);\n-    match cx.tcx.hir().body_owner_kind(parent_id) {\n-        hir::BodyOwnerKind::Fn => false,\n-        hir::BodyOwnerKind::Const | hir::BodyOwnerKind::Static(..) => true,\n+    match cx.tcx.hir().get(parent_id) {\n+        Node::Item(&Item {\n+            node: ItemKind::Const(..),\n+            ..\n+        })\n+        | Node::TraitItem(&TraitItem {\n+            node: TraitItemKind::Const(..),\n+            ..\n+        })\n+        | Node::ImplItem(&ImplItem {\n+            node: ImplItemKind::Const(..),\n+            ..\n+        })\n+        | Node::AnonConst(_)\n+        | Node::Item(&Item {\n+            node: ItemKind::Static(..),\n+            ..\n+        }) => true,\n+        _ => false,\n     }\n }\n "}, {"sha": "d2dc2812575b4140f1d5d95b3e68a4859f004aba", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! This module contains paths to types and functions Clippy needs to know\n //! about.\n \n@@ -35,6 +26,7 @@ pub const DOUBLE_ENDED_ITERATOR: [&str; 4] = [\"core\", \"iter\", \"traits\", \"DoubleE\n pub const DROP: [&str; 3] = [\"core\", \"mem\", \"drop\"];\n pub const DURATION: [&str; 3] = [\"core\", \"time\", \"Duration\"];\n pub const EARLY_CONTEXT: [&str; 4] = [\"rustc\", \"lint\", \"context\", \"EarlyContext\"];\n+pub const FMT_ARGUMENTS_NEWV1: [&str; 4] = [\"core\", \"fmt\", \"Arguments\", \"new_v1\"];\n pub const FMT_ARGUMENTS_NEWV1FORMATTED: [&str; 4] = [\"core\", \"fmt\", \"Arguments\", \"new_v1_formatted\"];\n pub const FROM_FROM: [&str; 4] = [\"core\", \"convert\", \"From\", \"from\"];\n pub const FROM_TRAIT: [&str; 3] = [\"core\", \"convert\", \"From\"];"}, {"sha": "3d221fbfb81d9574a6dbf111a627ebcf0326dc1f", "filename": "clippy_lints/src/utils/ptr.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fptr.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{get_pat_name, match_var, snippet};\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc::hir::*;"}, {"sha": "b95ce17ed93d52f7da0147e6bb784ea37fff31de", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 29, "deletions": 9, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Contains utility functions to generate suggestions.\n #![deny(clippy::missing_docs_in_private_items)]\n \n@@ -215,6 +206,17 @@ impl<'a> Sugg<'a> {\n         make_unop(\"&mut *\", self)\n     }\n \n+    /// Convenience method to transform suggestion into a return call\n+    pub fn make_return(self) -> Sugg<'static> {\n+        Sugg::NonParen(Cow::Owned(format!(\"return {}\", self)))\n+    }\n+\n+    /// Convenience method to transform suggestion into a block\n+    /// where the suggestion is a trailing expression\n+    pub fn blockify(self) -> Sugg<'static> {\n+        Sugg::NonParen(Cow::Owned(format!(\"{{ {} }}\", self)))\n+    }\n+\n     /// Convenience method to create the `<lhs>..<rhs>` or `<lhs>...<rhs>`\n     /// suggestion.\n     #[allow(dead_code)]\n@@ -587,3 +589,21 @@ impl<'a, 'b, 'c, T: LintContext<'c>> DiagnosticBuilderExt<'c, T> for rustc_error\n         self.span_suggestion_with_applicability(remove_span, msg, String::new(), applicability);\n     }\n }\n+\n+#[cfg(test)]\n+mod test {\n+    use super::Sugg;\n+    use std::borrow::Cow;\n+\n+    const SUGGESTION: Sugg<'static> = Sugg::NonParen(Cow::Borrowed(\"function_call()\"));\n+\n+    #[test]\n+    fn make_return_transform_sugg_into_a_return_call() {\n+        assert_eq!(\"return function_call()\", SUGGESTION.make_return().to_string());\n+    }\n+\n+    #[test]\n+    fn blockify_transforms_sugg_into_a_block() {\n+        assert_eq!(\"{ function_call() }\", SUGGESTION.blockify().to_string());\n+    }\n+}"}, {"sha": "a3d3518ef98d5d60bdbcafe75eaba9e805f8f8b6", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use rustc::lint::LateContext;\n \n use rustc::hir::def::Def;"}, {"sha": "407722bc66e296f22665a23583a260d781654526", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::consts::constant;\n use crate::utils::{higher, is_copy, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;"}, {"sha": "e3c352862518e2a7630a02ae3d6606404f5bc2b3", "filename": "clippy_lints/src/wildcard_dependencies.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::span_lint;\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};"}, {"sha": "c8c291c8cc873a87d5b69d13531e568e8ff3a42d", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,20 +1,11 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::utils::{snippet_with_applicability, span_lint, span_lint_and_sugg};\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};\n use rustc_errors::Applicability;\n use std::borrow::Cow;\n use syntax::ast::*;\n use syntax::parse::{parser, token};\n-use syntax::tokenstream::{ThinTokenStream, TokenStream};\n+use syntax::tokenstream::TokenStream;\n \n /// **What it does:** This lint warns when you use `println!(\"\")` to\n /// print a newline.\n@@ -270,9 +261,9 @@ impl EarlyLintPass for Pass {\n /// ```rust,ignore\n /// (Some(\"string to write: {}\"), Some(buf))\n /// ```\n-fn check_tts<'a>(cx: &EarlyContext<'a>, tts: &ThinTokenStream, is_write: bool) -> (Option<String>, Option<Expr>) {\n+fn check_tts<'a>(cx: &EarlyContext<'a>, tts: &TokenStream, is_write: bool) -> (Option<String>, Option<Expr>) {\n     use fmt_macros::*;\n-    let tts = TokenStream::from(tts.clone());\n+    let tts = tts.clone();\n     let mut parser = parser::Parser::new(&cx.sess.parse_sess, tts, None, false, false);\n     let mut expr: Option<Expr> = None;\n     if is_write {"}, {"sha": "962d42e631eaaa05e779eebc7016cd06bc8415c2", "filename": "clippy_lints/src/zero_div_zero.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_div_zero.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use crate::consts::{constant_simple, Constant};\n use crate::utils::span_help_and_lint;\n use if_chain::if_chain;"}, {"sha": "f79c691f0853c5b08e114041f7c8db43b0452fe0", "filename": "clippy_workspace_tests/src/main.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_workspace_tests%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_workspace_tests%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_workspace_tests%2Fsrc%2Fmain.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,2 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n fn main() {\n }"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "clippy_workspace_tests/subcrate/src/lib.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_workspace_tests%2Fsubcrate%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/clippy_workspace_tests%2Fsubcrate%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_workspace_tests%2Fsubcrate%2Fsrc%2Flib.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,10 +0,0 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-"}, {"sha": "0a96be71b35a6e452024384b881ace9b87b224bc", "filename": "mini-macro/src/lib.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/mini-macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/mini-macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mini-macro%2Fsrc%2Flib.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n #![feature(proc_macro_quote, proc_macro_hygiene)]\n extern crate proc_macro;\n "}, {"sha": "3602f671e3dec5de2039bc0e48e3ee2a47ba15d3", "filename": "pre_publish.sh", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/pre_publish.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/pre_publish.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/pre_publish.sh?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,16 +1,5 @@\n #!/bin/bash\n \n-# Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-\n set -e\n \n ./util/update_lints.py"}, {"sha": "a88f47e4dbc24b2a40954cd79a6b084cc0f422f0", "filename": "rustc_tools_util/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/rustc_tools_util%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/rustc_tools_util%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2FREADME.md?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -49,7 +49,7 @@ This gives the following output in clippy:\n \n ## License\n \n-Copyright 2014-2018 The Rust Project Developers\n+Copyright 2014-2019 The Rust Project Developers\n \n Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n http://www.apache.org/licenses/LICENSE-2.0> or the MIT license"}, {"sha": "f13fa12ccca49312ee36c9661f335e18a8c9d1b7", "filename": "rustc_tools_util/src/lib.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/rustc_tools_util%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/rustc_tools_util%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2Fsrc%2Flib.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::env;\n \n #[macro_export]"}, {"sha": "2faa77785bb5c6693908bb4c4d12a34f36e6a674", "filename": "src/driver.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // error-pattern:yummy\n #![feature(box_syntax)]\n #![feature(rustc_private)]"}, {"sha": "be0c10c8ff2052e394186b01babc17271c52c60f", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // error-pattern:cargo-clippy\n #![feature(plugin_registrar)]\n #![feature(rustc_private)]"}, {"sha": "eefababb96d3f5891f1d1104c2b215f8fca3a823", "filename": "src/main.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // error-pattern:yummy\n #![feature(box_syntax)]\n #![feature(rustc_private)]"}, {"sha": "624ca892add310fa3acd8197a9cd33c034781106", "filename": "tests/auxiliary/test_macro.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fauxiliary%2Ftest_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fauxiliary%2Ftest_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fauxiliary%2Ftest_macro.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n pub trait A {}\n \n macro_rules! __implicit_hasher_test_macro {"}, {"sha": "c67b6f08c9f0bdfa0cb322e7a1d8391ac358f576", "filename": "tests/compile-test.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![feature(test)]\n \n use compiletest_rs as compiletest;"}, {"sha": "87fe5887bcce4ad5a0edf0e1ef8565679f5f19d8", "filename": "tests/dogfood.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[test]\n fn dogfood() {\n     if option_env!(\"RUSTC_TEST_SUITE\").is_some() || cfg!(windows) {"}, {"sha": "15a0ea503bf3f219c6c8e3aacf3566402aeb1f49", "filename": "tests/matches.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmatches.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![feature(rustc_private)]\n \n extern crate syntax;"}, {"sha": "558e001d3d10bdacbfc7349220786aa5bb1a057d", "filename": "tests/missing-test-files.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fmissing-test-files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fmissing-test-files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmissing-test-files.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -0,0 +1,54 @@\n+use std::fs::{self, DirEntry};\n+use std::path::Path;\n+\n+#[test]\n+fn test_missing_tests() {\n+    let missing_files = explore_directory(Path::new(\"./tests\"));\n+    if !missing_files.is_empty() {\n+        assert!(\n+            false,\n+            format!(\n+                \"Didn't see a test file for the following files:\\n\\n{}\\n\",\n+                missing_files\n+                    .iter()\n+                    .map(|s| format!(\"\\t{}\", s))\n+                    .collect::<Vec<_>>()\n+                    .join(\"\\n\")\n+            )\n+        );\n+    }\n+}\n+\n+/*\n+Test for missing files.\n+\n+Since rs files are alphabetically before stderr/stdout, we can sort by the full name\n+and iter in that order. If we've seen the file stem for the first time and it's not\n+a rust file, it means the rust file has to be missing.\n+*/\n+fn explore_directory(dir: &Path) -> Vec<String> {\n+    let mut missing_files: Vec<String> = Vec::new();\n+    let mut current_file = String::new();\n+    let mut files: Vec<DirEntry> = fs::read_dir(dir).unwrap().filter_map(Result::ok).collect();\n+    files.sort_by_key(|e| e.path());\n+    for entry in &files {\n+        let path = entry.path();\n+        if path.is_dir() {\n+            missing_files.extend(explore_directory(&path));\n+        } else {\n+            let file_stem = path.file_stem().unwrap().to_str().unwrap().to_string();\n+            if let Some(ext) = path.extension() {\n+                match ext.to_str().unwrap() {\n+                    \"rs\" => current_file = file_stem.clone(),\n+                    \"stderr\" | \"stdout\" => {\n+                        if file_stem != current_file {\n+                            missing_files.push(path.to_str().unwrap().to_string());\n+                        }\n+                    },\n+                    _ => continue,\n+                };\n+            }\n+        }\n+    }\n+    missing_files\n+}"}, {"sha": "255653b4737d3453ec371d76c8c6482deea897e4", "filename": "tests/needless_continue_helpers.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fneedless_continue_helpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fneedless_continue_helpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fneedless_continue_helpers.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // Tests for the various helper functions used by the needless_continue\n // lint that don't belong in utils.\n "}, {"sha": "2c5c90683cced053fecf8980f8c99ff71b684b63", "filename": "tests/run-pass/associated-constant-ice.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fassociated-constant-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fassociated-constant-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fassociated-constant-ice.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n pub trait Trait {\n     const CONSTANT: u8;\n }"}, {"sha": "169403df56285097a9d088b7ca3a4ffc1854bc86", "filename": "tests/run-pass/cc_seme.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fcc_seme.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fcc_seme.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fcc_seme.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[allow(dead_code)]\n enum Baz {\n     One,"}, {"sha": "dca32aa3b5615e25a2b5987fa56a02ef4bbc2e3d", "filename": "tests/run-pass/enum-glob-import-crate.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fenum-glob-import-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fenum-glob-import-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fenum-glob-import-crate.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![deny(clippy::all)]\n #![allow(unused_imports)]\n "}, {"sha": "6a5bf429f2d015a3c349bfb7f74f3102802cff36", "filename": "tests/run-pass/ice-1588.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-1588.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-1588.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-1588.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(clippy::all)]\n \n fn main() {"}, {"sha": "81af88962a64d67b70e232c1010151c382f91944", "filename": "tests/run-pass/ice-1782.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-1782.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-1782.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-1782.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(dead_code, unused_variables)]\n \n /// Should not trigger an ICE in `SpanlessEq` / `consts::constant`"}, {"sha": "eab4f338f9744c162a78f4fd6238b0342e4e99ef", "filename": "tests/run-pass/ice-1969.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-1969.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-1969.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-1969.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(clippy::all)]\n \n fn main() {}"}, {"sha": "45b3b1869dde614e98273f1ea6b890561eaa363f", "filename": "tests/run-pass/ice-2499.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-2499.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-2499.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2499.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(dead_code, clippy::char_lit_as_u8, clippy::needless_bool)]\n \n /// Should not trigger an ICE in `SpanlessHash` / `consts::constant`"}, {"sha": "3f3986b6fc69294feb25ed0aed8076648b48d500", "filename": "tests/run-pass/ice-2594.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-2594.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-2594.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2594.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(dead_code, unused_variables)]\n \n /// Should not trigger an ICE in `SpanlessHash` / `consts::constant`"}, {"sha": "79c6f1c55db6b42dd080697d739ecc46b881543d", "filename": "tests/run-pass/ice-2727.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-2727.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-2727.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2727.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n pub fn f(new: fn()) {\n     new();\n }"}, {"sha": "949e273997c5b92c735924d0b971262b819f6aa1", "filename": "tests/run-pass/ice-2760.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-2760.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-2760.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2760.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(\n     unused_variables,\n     clippy::blacklisted_name,"}, {"sha": "2cc19ae32b80a5163e05e22487b6ec0edf3d37e0", "filename": "tests/run-pass/ice-2774.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-2774.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-2774.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2774.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::collections::HashSet;\n \n // See https://github.com/rust-lang/rust-clippy/issues/2774"}, {"sha": "64092afd53d2a0af0951fcfdb1b3dea39ae097f7", "filename": "tests/run-pass/ice-2865.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-2865.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-2865.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2865.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[allow(dead_code)]\n struct Ice {\n     size: String,"}, {"sha": "a03dd05e7d31b11a5f5466dbf45b5b6a22fc01ef", "filename": "tests/run-pass/ice-3151.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-3151.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-3151.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-3151.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[derive(Clone)]\n pub struct HashMap<V, S> {\n     hash_builder: S,"}, {"sha": "d4f6f355c856ae9c4d99bbdffa6519d69b6c99d8", "filename": "tests/run-pass/ice-3462.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-3462.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-3462.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-3462.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2019 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::all)]\n #![allow(clippy::blacklisted_name)]\n #![allow(unused)]"}, {"sha": "1054685061115876208811eaea207b726e89d659", "filename": "tests/run-pass/ice-700.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-700.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice-700.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-700.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![deny(clippy::all)]\n \n fn core() {}"}, {"sha": "ac643fafabc6cc9c302fd62c89f9fd92c6e9665a", "filename": "tests/run-pass/ice_exacte_size.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice_exacte_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fice_exacte_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice_exacte_size.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![deny(clippy::all)]\n \n #[allow(dead_code)]"}, {"sha": "e6ab7cc9d8c7a6cf8e0a4356a8334b9e87f8502b", "filename": "tests/run-pass/if_same_then_else.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fif_same_then_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fif_same_then_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fif_same_then_else.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![deny(clippy::if_same_then_else)]\n \n fn main() {}"}, {"sha": "b35df667f27ab45540a8054dc2adbdc93ace661f", "filename": "tests/run-pass/issue-2862.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fissue-2862.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fissue-2862.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-2862.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n pub trait FooMap {\n     fn map<B, F: Fn() -> B>(&self, f: F) -> B;\n }"}, {"sha": "b1339212e6e1bb4c1acf0c00c5c4e53a7566d47f", "filename": "tests/run-pass/issue-825.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fissue-825.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fissue-825.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-825.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(warnings)]\n \n // this should compile in a reasonable amount of time"}, {"sha": "bb238c81ebc05376a3a60ffe49442101d5202b00", "filename": "tests/run-pass/issues_loop_mut_cond.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fissues_loop_mut_cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fissues_loop_mut_cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissues_loop_mut_cond.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(dead_code)]\n \n /// Issue: https://github.com/rust-lang/rust-clippy/issues/2596"}, {"sha": "507324755628092ae74a56b62edc7a4a0df2eb8a", "filename": "tests/run-pass/match_same_arms_const.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fmatch_same_arms_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fmatch_same_arms_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmatch_same_arms_const.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![deny(clippy::match_same_arms)]\n \n const PRICE_OF_SWEETS: u32 = 5;"}, {"sha": "af11c29d9b0481b2b449cd92d554f742d8c5d21a", "filename": "tests/run-pass/mut_mut_macro.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fmut_mut_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fmut_mut_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmut_mut_macro.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![deny(clippy::mut_mut, clippy::zero_ptr, clippy::cmp_nan)]\n #![allow(dead_code)]\n "}, {"sha": "4f61c76828db8a00d57382a6f744ea49d856d781", "filename": "tests/run-pass/needless_borrow_fp.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fneedless_borrow_fp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fneedless_borrow_fp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fneedless_borrow_fp.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[deny(clippy::all)]\n #[derive(Debug)]\n pub enum Error {"}, {"sha": "676564b2445d506185bb5d9bafe68c15ab3538a9", "filename": "tests/run-pass/needless_lifetimes_impl_trait.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fneedless_lifetimes_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fneedless_lifetimes_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fneedless_lifetimes_impl_trait.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![deny(clippy::needless_lifetimes)]\n #![allow(dead_code)]\n "}, {"sha": "c7468493380c8eb3f994279c32102242fd477fc3", "filename": "tests/run-pass/procedural_macro.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fprocedural_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fprocedural_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fprocedural_macro.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[macro_use]\n extern crate clippy_mini_macro_test;\n "}, {"sha": "84470addd4a07eee2ebc6021337b485d20996a25", "filename": "tests/run-pass/regressions.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fregressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fregressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fregressions.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(clippy::blacklisted_name)]\n \n pub fn foo(bar: *const u8) {"}, {"sha": "d6b2a4ef1701bcfdb6b881b371a74176cf7e4ab4", "filename": "tests/run-pass/returns.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Freturns.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[deny(warnings)]\n fn cfg_return() -> i32 {\n     #[cfg(unix)]"}, {"sha": "efcc6363eb026823f0fa5cb776a386a545f4029c", "filename": "tests/run-pass/single-match-else.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fsingle-match-else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fsingle-match-else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fsingle-match-else.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::single_match_else)]\n \n fn main() {"}, {"sha": "3030786aea67558606266122e2216b97b029f3ed", "filename": "tests/run-pass/used_underscore_binding_macro.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fused_underscore_binding_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fused_underscore_binding_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fused_underscore_binding_macro.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(clippy::useless_attribute)] //issue #2910\n \n #[macro_use]"}, {"sha": "f328e4d9d04c31d0d70d16d21a07d1613be9d577", "filename": "tests/run-pass/whitelist/conf_whitelisted.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fwhitelist%2Fconf_whitelisted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Frun-pass%2Fwhitelist%2Fconf_whitelisted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fwhitelist%2Fconf_whitelisted.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,10 +1 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n fn main() {}"}, {"sha": "3b9458fc2840e7494cab39c77c379854f0ddc777", "filename": "tests/ui-toml/bad_toml/conf_bad_toml.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Fbad_toml%2Fconf_bad_toml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Fbad_toml%2Fconf_bad_toml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fbad_toml%2Fconf_bad_toml.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // error-pattern: error reading Clippy's configuration file\n \n fn main() {}"}, {"sha": "8a0062423ad168f2cf09730cbb234d2c689a9f47", "filename": "tests/ui-toml/bad_toml_type/conf_bad_type.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Fbad_toml_type%2Fconf_bad_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Fbad_toml_type%2Fconf_bad_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fbad_toml_type%2Fconf_bad_type.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // error-pattern: error reading Clippy's configuration file: `blacklisted-names` is expected to be a\n // `Vec < String >` but is a `integer`\n "}, {"sha": "cb35d0e8589d2e4f2052da05477757d0d609b5d3", "filename": "tests/ui-toml/toml_blacklist/conf_french_blacklisted_name.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(dead_code)]\n #![allow(clippy::single_match)]\n #![allow(unused_variables)]"}, {"sha": "84ba77851f77e91bae30f9241053a44bf08e3170", "filename": "tests/ui-toml/toml_blacklist/conf_french_blacklisted_name.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,43 +1,43 @@\n error: use of a blacklisted/placeholder name `toto`\n-  --> $DIR/conf_french_blacklisted_name.rs:15:9\n+  --> $DIR/conf_french_blacklisted_name.rs:6:9\n    |\n LL | fn test(toto: ()) {}\n    |         ^^^^\n    |\n    = note: `-D clippy::blacklisted-name` implied by `-D warnings`\n \n error: use of a blacklisted/placeholder name `toto`\n-  --> $DIR/conf_french_blacklisted_name.rs:18:9\n+  --> $DIR/conf_french_blacklisted_name.rs:9:9\n    |\n LL |     let toto = 42;\n    |         ^^^^\n \n error: use of a blacklisted/placeholder name `tata`\n-  --> $DIR/conf_french_blacklisted_name.rs:19:9\n+  --> $DIR/conf_french_blacklisted_name.rs:10:9\n    |\n LL |     let tata = 42;\n    |         ^^^^\n \n error: use of a blacklisted/placeholder name `titi`\n-  --> $DIR/conf_french_blacklisted_name.rs:20:9\n+  --> $DIR/conf_french_blacklisted_name.rs:11:9\n    |\n LL |     let titi = 42;\n    |         ^^^^\n \n error: use of a blacklisted/placeholder name `toto`\n-  --> $DIR/conf_french_blacklisted_name.rs:26:10\n+  --> $DIR/conf_french_blacklisted_name.rs:17:10\n    |\n LL |         (toto, Some(tata), titi @ Some(_)) => (),\n    |          ^^^^\n \n error: use of a blacklisted/placeholder name `tata`\n-  --> $DIR/conf_french_blacklisted_name.rs:26:21\n+  --> $DIR/conf_french_blacklisted_name.rs:17:21\n    |\n LL |         (toto, Some(tata), titi @ Some(_)) => (),\n    |                     ^^^^\n \n error: use of a blacklisted/placeholder name `titi`\n-  --> $DIR/conf_french_blacklisted_name.rs:26:28\n+  --> $DIR/conf_french_blacklisted_name.rs:17:28\n    |\n LL |         (toto, Some(tata), titi @ Some(_)) => (),\n    |                            ^^^^"}, {"sha": "f24fe51d30f070da38c0e31e49d7a1db2aef3d0f", "filename": "tests/ui-toml/toml_trivially_copy/test.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(clippy::many_single_char_names)]\n \n #[derive(Copy, Clone)]"}, {"sha": "746b9ffa4af19074b10dbc86924a9909ffba6b93", "filename": "tests/ui-toml/toml_trivially_copy/test.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,13 +1,13 @@\n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/test.rs:20:11\n+  --> $DIR/test.rs:11:11\n    |\n LL | fn bad(x: &u16, y: &Foo) {}\n    |           ^^^^ help: consider passing by value instead: `u16`\n    |\n    = note: `-D clippy::trivially-copy-pass-by-ref` implied by `-D warnings`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/test.rs:20:20\n+  --> $DIR/test.rs:11:20\n    |\n LL | fn bad(x: &u16, y: &Foo) {}\n    |                    ^^^^ help: consider passing by value instead: `Foo`"}, {"sha": "a47569f62a3229590feb453f4a543ed7ab98317d", "filename": "tests/ui-toml/toml_unknown_key/conf_unknown_key.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // error-pattern: error reading Clippy's configuration file: unknown key `foobar`\n \n fn main() {}"}, {"sha": "71404b68c4592de53fece1a1cbb6e07e12730e99", "filename": "tests/ui-toml/update-all-references.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Fupdate-all-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Fupdate-all-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fupdate-all-references.sh?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,15 +1,5 @@\n #!/bin/bash\n #\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n # A script to update the references for all tests. The idea is that\n # you do a run, which will generate files in the build directory\n # containing the (normalized) actual output of the compiler. You then"}, {"sha": "2c4fef43d96a5502331fc498436024bb5ca6f1bd", "filename": "tests/ui-toml/update-references.sh", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui-toml%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fupdate-references.sh?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,14 +1,4 @@\n #!/bin/bash\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n \n # A script to update the references for particular tests. The idea is\n # that you do a run, which will generate files in the build directory"}, {"sha": "ae0727fe2ba3bf9b6c3ae62ba1cdc17664254d97", "filename": "tests/ui/absurd-extreme-comparisons.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fabsurd-extreme-comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fabsurd-extreme-comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::absurd_extreme_comparisons)]\n #![allow(\n     unused,"}, {"sha": "b18a943c557c70f8502a852ce1e1c47b97d3b328", "filename": "tests/ui/absurd-extreme-comparisons.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,5 +1,5 @@\n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:23:5\n+  --> $DIR/absurd-extreme-comparisons.rs:14:5\n    |\n LL |     u <= 0;\n    |     ^^^^^^\n@@ -8,135 +8,135 @@ LL |     u <= 0;\n    = help: because 0 is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == 0 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:24:5\n+  --> $DIR/absurd-extreme-comparisons.rs:15:5\n    |\n LL |     u <= Z;\n    |     ^^^^^^\n    |\n    = help: because Z is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == Z instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:25:5\n+  --> $DIR/absurd-extreme-comparisons.rs:16:5\n    |\n LL |     u < Z;\n    |     ^^^^^\n    |\n    = help: because Z is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:26:5\n+  --> $DIR/absurd-extreme-comparisons.rs:17:5\n    |\n LL |     Z >= u;\n    |     ^^^^^^\n    |\n    = help: because Z is the minimum value for this type, the case where the two sides are not equal never occurs, consider using Z == u instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:27:5\n+  --> $DIR/absurd-extreme-comparisons.rs:18:5\n    |\n LL |     Z > u;\n    |     ^^^^^\n    |\n    = help: because Z is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:28:5\n+  --> $DIR/absurd-extreme-comparisons.rs:19:5\n    |\n LL |     u > std::u32::MAX;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:29:5\n+  --> $DIR/absurd-extreme-comparisons.rs:20:5\n    |\n LL |     u >= std::u32::MAX;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, the case where the two sides are not equal never occurs, consider using u == std::u32::MAX instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:30:5\n+  --> $DIR/absurd-extreme-comparisons.rs:21:5\n    |\n LL |     std::u32::MAX < u;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:31:5\n+  --> $DIR/absurd-extreme-comparisons.rs:22:5\n    |\n LL |     std::u32::MAX <= u;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, the case where the two sides are not equal never occurs, consider using std::u32::MAX == u instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:32:5\n+  --> $DIR/absurd-extreme-comparisons.rs:23:5\n    |\n LL |     1-1 > u;\n    |     ^^^^^^^\n    |\n    = help: because 1-1 is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:33:5\n+  --> $DIR/absurd-extreme-comparisons.rs:24:5\n    |\n LL |     u >= !0;\n    |     ^^^^^^^\n    |\n    = help: because !0 is the maximum value for this type, the case where the two sides are not equal never occurs, consider using u == !0 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:34:5\n+  --> $DIR/absurd-extreme-comparisons.rs:25:5\n    |\n LL |     u <= 12 - 2*6;\n    |     ^^^^^^^^^^^^^\n    |\n    = help: because 12 - 2*6 is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == 12 - 2*6 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:36:5\n+  --> $DIR/absurd-extreme-comparisons.rs:27:5\n    |\n LL |     i < -127 - 1;\n    |     ^^^^^^^^^^^^\n    |\n    = help: because -127 - 1 is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:37:5\n+  --> $DIR/absurd-extreme-comparisons.rs:28:5\n    |\n LL |     std::i8::MAX >= i;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::i8::MAX is the maximum value for this type, this comparison is always true\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:38:5\n+  --> $DIR/absurd-extreme-comparisons.rs:29:5\n    |\n LL |     3-7 < std::i32::MIN;\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::i32::MIN is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:40:5\n+  --> $DIR/absurd-extreme-comparisons.rs:31:5\n    |\n LL |     b >= true;\n    |     ^^^^^^^^^\n    |\n    = help: because true is the maximum value for this type, the case where the two sides are not equal never occurs, consider using b == true instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:41:5\n+  --> $DIR/absurd-extreme-comparisons.rs:32:5\n    |\n LL |     false > b;\n    |     ^^^^^^^^^\n    |\n    = help: because false is the minimum value for this type, this comparison is always false\n \n error: <-comparison of unit values detected. This will always be false\n-  --> $DIR/absurd-extreme-comparisons.rs:44:5\n+  --> $DIR/absurd-extreme-comparisons.rs:35:5\n    |\n LL |     () < {};\n    |     ^^^^^^^"}, {"sha": "8c295d1438a79970e4b68ef16352a03f0639c471", "filename": "tests/ui/approx_const.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fapprox_const.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[warn(clippy::approx_constant)]\n #[allow(unused, clippy::shadow_unrelated, clippy::similar_names, clippy::unreadable_literal)]\n fn main() {"}, {"sha": "71c1c360e74a6f870efffbcf1a6dae2973a5409f", "filename": "tests/ui/approx_const.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fapprox_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fapprox_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fapprox_const.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,115 +1,115 @@\n error: approximate value of `f{32, 64}::consts::E` found. Consider using it directly\n-  --> $DIR/approx_const.rs:13:16\n+  --> $DIR/approx_const.rs:4:16\n    |\n LL |     let my_e = 2.7182;\n    |                ^^^^^^\n    |\n    = note: `-D clippy::approx-constant` implied by `-D warnings`\n \n error: approximate value of `f{32, 64}::consts::E` found. Consider using it directly\n-  --> $DIR/approx_const.rs:14:20\n+  --> $DIR/approx_const.rs:5:20\n    |\n LL |     let almost_e = 2.718;\n    |                    ^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_1_PI` found. Consider using it directly\n-  --> $DIR/approx_const.rs:17:24\n+  --> $DIR/approx_const.rs:8:24\n    |\n LL |     let my_1_frac_pi = 0.3183;\n    |                        ^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_1_SQRT_2` found. Consider using it directly\n-  --> $DIR/approx_const.rs:20:28\n+  --> $DIR/approx_const.rs:11:28\n    |\n LL |     let my_frac_1_sqrt_2 = 0.70710678;\n    |                            ^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_1_SQRT_2` found. Consider using it directly\n-  --> $DIR/approx_const.rs:21:32\n+  --> $DIR/approx_const.rs:12:32\n    |\n LL |     let almost_frac_1_sqrt_2 = 0.70711;\n    |                                ^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_2_PI` found. Consider using it directly\n-  --> $DIR/approx_const.rs:24:24\n+  --> $DIR/approx_const.rs:15:24\n    |\n LL |     let my_frac_2_pi = 0.63661977;\n    |                        ^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_2_SQRT_PI` found. Consider using it directly\n-  --> $DIR/approx_const.rs:27:27\n+  --> $DIR/approx_const.rs:18:27\n    |\n LL |     let my_frac_2_sq_pi = 1.128379;\n    |                           ^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_2` found. Consider using it directly\n-  --> $DIR/approx_const.rs:30:24\n+  --> $DIR/approx_const.rs:21:24\n    |\n LL |     let my_frac_pi_2 = 1.57079632679;\n    |                        ^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_3` found. Consider using it directly\n-  --> $DIR/approx_const.rs:33:24\n+  --> $DIR/approx_const.rs:24:24\n    |\n LL |     let my_frac_pi_3 = 1.04719755119;\n    |                        ^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_4` found. Consider using it directly\n-  --> $DIR/approx_const.rs:36:24\n+  --> $DIR/approx_const.rs:27:24\n    |\n LL |     let my_frac_pi_4 = 0.785398163397;\n    |                        ^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_6` found. Consider using it directly\n-  --> $DIR/approx_const.rs:39:24\n+  --> $DIR/approx_const.rs:30:24\n    |\n LL |     let my_frac_pi_6 = 0.523598775598;\n    |                        ^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_8` found. Consider using it directly\n-  --> $DIR/approx_const.rs:42:24\n+  --> $DIR/approx_const.rs:33:24\n    |\n LL |     let my_frac_pi_8 = 0.3926990816987;\n    |                        ^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::LN_10` found. Consider using it directly\n-  --> $DIR/approx_const.rs:45:20\n+  --> $DIR/approx_const.rs:36:20\n    |\n LL |     let my_ln_10 = 2.302585092994046;\n    |                    ^^^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::LN_2` found. Consider using it directly\n-  --> $DIR/approx_const.rs:48:19\n+  --> $DIR/approx_const.rs:39:19\n    |\n LL |     let my_ln_2 = 0.6931471805599453;\n    |                   ^^^^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::LOG10_E` found. Consider using it directly\n-  --> $DIR/approx_const.rs:51:22\n+  --> $DIR/approx_const.rs:42:22\n    |\n LL |     let my_log10_e = 0.4342944819032518;\n    |                      ^^^^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::LOG2_E` found. Consider using it directly\n-  --> $DIR/approx_const.rs:54:21\n+  --> $DIR/approx_const.rs:45:21\n    |\n LL |     let my_log2_e = 1.4426950408889634;\n    |                     ^^^^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::PI` found. Consider using it directly\n-  --> $DIR/approx_const.rs:57:17\n+  --> $DIR/approx_const.rs:48:17\n    |\n LL |     let my_pi = 3.1415;\n    |                 ^^^^^^\n \n error: approximate value of `f{32, 64}::consts::PI` found. Consider using it directly\n-  --> $DIR/approx_const.rs:58:21\n+  --> $DIR/approx_const.rs:49:21\n    |\n LL |     let almost_pi = 3.14;\n    |                     ^^^^\n \n error: approximate value of `f{32, 64}::consts::SQRT_2` found. Consider using it directly\n-  --> $DIR/approx_const.rs:61:18\n+  --> $DIR/approx_const.rs:52:18\n    |\n LL |     let my_sq2 = 1.4142;\n    |                  ^^^^^^"}, {"sha": "c3cea99760683ccef2b4687eb2923c3e3a5c1004", "filename": "tests/ui/arithmetic.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::integer_arithmetic, clippy::float_arithmetic)]\n #![allow(\n     unused,\n@@ -26,6 +17,10 @@ fn main() {\n     i - 2 + 2 - i;\n     -i;\n \n+    // no error, overflows are checked by `overflowing_literals`\n+    -1;\n+    -(-1);\n+\n     i & 1; // no wrapping\n     i | 1;\n     i ^ 1;"}, {"sha": "b21efaa849f79e0f78d2c1018cee2182a8bb54b0", "filename": "tests/ui/arithmetic.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Farithmetic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Farithmetic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,70 +1,70 @@\n error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:22:5\n+  --> $DIR/arithmetic.rs:13:5\n    |\n LL |     1 + i;\n    |     ^^^^^\n    |\n    = note: `-D clippy::integer-arithmetic` implied by `-D warnings`\n \n error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:23:5\n+  --> $DIR/arithmetic.rs:14:5\n    |\n LL |     i * 2;\n    |     ^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:24:5\n+  --> $DIR/arithmetic.rs:15:5\n    |\n LL | /     1 %\n LL | |     i / 2; // no error, this is part of the expression in the preceding line\n    | |_________^\n \n error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:26:5\n+  --> $DIR/arithmetic.rs:17:5\n    |\n LL |     i - 2 + 2 - i;\n    |     ^^^^^^^^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:27:5\n+  --> $DIR/arithmetic.rs:18:5\n    |\n LL |     -i;\n    |     ^^\n \n error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:37:5\n+  --> $DIR/arithmetic.rs:32:5\n    |\n LL |     f * 2.0;\n    |     ^^^^^^^\n    |\n    = note: `-D clippy::float-arithmetic` implied by `-D warnings`\n \n error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:39:5\n+  --> $DIR/arithmetic.rs:34:5\n    |\n LL |     1.0 + f;\n    |     ^^^^^^^\n \n error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:40:5\n+  --> $DIR/arithmetic.rs:35:5\n    |\n LL |     f * 2.0;\n    |     ^^^^^^^\n \n error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:41:5\n+  --> $DIR/arithmetic.rs:36:5\n    |\n LL |     f / 2.0;\n    |     ^^^^^^^\n \n error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:42:5\n+  --> $DIR/arithmetic.rs:37:5\n    |\n LL |     f - 2.0 * 4.2;\n    |     ^^^^^^^^^^^^^\n \n error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:43:5\n+  --> $DIR/arithmetic.rs:38:5\n    |\n LL |     -f;\n    |     ^^"}, {"sha": "c7b4865f5c2a7d350bfb888f0d42b4f0278301dc", "filename": "tests/ui/assign_ops.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[allow(dead_code, unused_assignments)]\n #[warn(clippy::assign_op_pattern)]\n fn main() {"}, {"sha": "646f99701221743028b5b01b00553d4e53598676", "filename": "tests/ui/assign_ops.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fassign_ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fassign_ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,55 +1,55 @@\n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:14:5\n+  --> $DIR/assign_ops.rs:5:5\n    |\n LL |     a = a + 1;\n    |     ^^^^^^^^^ help: replace it with: `a += 1`\n    |\n    = note: `-D clippy::assign-op-pattern` implied by `-D warnings`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:15:5\n+  --> $DIR/assign_ops.rs:6:5\n    |\n LL |     a = 1 + a;\n    |     ^^^^^^^^^ help: replace it with: `a += 1`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:16:5\n+  --> $DIR/assign_ops.rs:7:5\n    |\n LL |     a = a - 1;\n    |     ^^^^^^^^^ help: replace it with: `a -= 1`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:17:5\n+  --> $DIR/assign_ops.rs:8:5\n    |\n LL |     a = a * 99;\n    |     ^^^^^^^^^^ help: replace it with: `a *= 99`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:18:5\n+  --> $DIR/assign_ops.rs:9:5\n    |\n LL |     a = 42 * a;\n    |     ^^^^^^^^^^ help: replace it with: `a *= 42`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:19:5\n+  --> $DIR/assign_ops.rs:10:5\n    |\n LL |     a = a / 2;\n    |     ^^^^^^^^^ help: replace it with: `a /= 2`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:20:5\n+  --> $DIR/assign_ops.rs:11:5\n    |\n LL |     a = a % 5;\n    |     ^^^^^^^^^ help: replace it with: `a %= 5`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:21:5\n+  --> $DIR/assign_ops.rs:12:5\n    |\n LL |     a = a & 1;\n    |     ^^^^^^^^^ help: replace it with: `a &= 1`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:27:5\n+  --> $DIR/assign_ops.rs:18:5\n    |\n LL |     s = s + \"bla\";\n    |     ^^^^^^^^^^^^^ help: replace it with: `s += \"bla\"`"}, {"sha": "4703a8c77778857405266a60d5f20977e1bc59ef", "filename": "tests/ui/assign_ops2.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fassign_ops2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fassign_ops2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[allow(unused_assignments)]\n #[warn(clippy::misrefactored_assign_op, clippy::assign_op_pattern)]\n fn main() {"}, {"sha": "872d6e0d7347323960197ff301bb629c62d42a5e", "filename": "tests/ui/assign_ops2.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fassign_ops2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fassign_ops2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,5 +1,5 @@\n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:14:5\n+  --> $DIR/assign_ops2.rs:5:5\n    |\n LL |     a += a + 1;\n    |     ^^^^^^^^^^\n@@ -15,7 +15,7 @@ LL |     a = a + a + 1;\n    |     ^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:15:5\n+  --> $DIR/assign_ops2.rs:6:5\n    |\n LL |     a += 1 + a;\n    |     ^^^^^^^^^^\n@@ -29,7 +29,7 @@ LL |     a = a + 1 + a;\n    |     ^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:16:5\n+  --> $DIR/assign_ops2.rs:7:5\n    |\n LL |     a -= a - 1;\n    |     ^^^^^^^^^^\n@@ -43,7 +43,7 @@ LL |     a = a - (a - 1);\n    |     ^^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:17:5\n+  --> $DIR/assign_ops2.rs:8:5\n    |\n LL |     a *= a * 99;\n    |     ^^^^^^^^^^^\n@@ -57,7 +57,7 @@ LL |     a = a * a * 99;\n    |     ^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:18:5\n+  --> $DIR/assign_ops2.rs:9:5\n    |\n LL |     a *= 42 * a;\n    |     ^^^^^^^^^^^\n@@ -71,7 +71,7 @@ LL |     a = a * 42 * a;\n    |     ^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:19:5\n+  --> $DIR/assign_ops2.rs:10:5\n    |\n LL |     a /= a / 2;\n    |     ^^^^^^^^^^\n@@ -85,7 +85,7 @@ LL |     a = a / (a / 2);\n    |     ^^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:20:5\n+  --> $DIR/assign_ops2.rs:11:5\n    |\n LL |     a %= a % 5;\n    |     ^^^^^^^^^^\n@@ -99,7 +99,7 @@ LL |     a = a % (a % 5);\n    |     ^^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:21:5\n+  --> $DIR/assign_ops2.rs:12:5\n    |\n LL |     a &= a & 1;\n    |     ^^^^^^^^^^\n@@ -113,7 +113,7 @@ LL |     a = a & a & 1;\n    |     ^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:22:5\n+  --> $DIR/assign_ops2.rs:13:5\n    |\n LL |     a *= a * a;\n    |     ^^^^^^^^^^\n@@ -127,7 +127,7 @@ LL |     a = a * a * a;\n    |     ^^^^^^^^^^^^^\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops2.rs:59:5\n+  --> $DIR/assign_ops2.rs:50:5\n    |\n LL |     buf = buf + cows.clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `buf += cows.clone()`"}, {"sha": "df7eafc65518ba033864680a0c99c8caf4279389", "filename": "tests/ui/attrs.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattrs.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::inline_always, clippy::deprecated_semver)]\n #![allow(clippy::assertions_on_constants::assertions_on_constants)]\n #[inline(always)]"}, {"sha": "39ddf6f226d95482da927fb934b3973c79179892", "filename": "tests/ui/attrs.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fattrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fattrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattrs.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,21 +1,21 @@\n error: you have declared `#[inline(always)]` on `test_attr_lint`. This is usually a bad idea\n-  --> $DIR/attrs.rs:12:1\n+  --> $DIR/attrs.rs:3:1\n    |\n LL | #[inline(always)]\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::inline-always` implied by `-D warnings`\n \n error: the since field must contain a semver-compliant version\n-  --> $DIR/attrs.rs:32:14\n+  --> $DIR/attrs.rs:23:14\n    |\n LL | #[deprecated(since = \"forever\")]\n    |              ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::deprecated-semver` implied by `-D warnings`\n \n error: the since field must contain a semver-compliant version\n-  --> $DIR/attrs.rs:35:14\n+  --> $DIR/attrs.rs:26:14\n    |\n LL | #[deprecated(since = \"1\")]\n    |              ^^^^^^^^^^^"}, {"sha": "0a1be35689670f3c024efdcf702479c474db547d", "filename": "tests/ui/author.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n fn main() {\n     #[clippy::author]\n     let x: char = 0x45 as char;"}, {"sha": "87593fafb464345f8d295ece55464f27fe38fe65", "filename": "tests/ui/author.stdout", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor.stdout?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,6 +1,5 @@\n if_chain! {\n-    if let StmtKind::Decl(ref decl, _) = stmt.node\n-    if let DeclKind::Local(ref local) = decl.node;\n+    if let StmtKind::Local(ref local) = stmt.node;\n     if let Some(ref init) = local.init\n     if let ExprKind::Cast(ref expr, ref cast_ty) = init.node;\n     if let TyKind::Path(ref qp) = cast_ty.node;"}, {"sha": "e99c3c41dc4e1db83e357bfeab36c3d3d5d65309", "filename": "tests/ui/author/call.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor%2Fcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor%2Fcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Fcall.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n fn main() {\n     #[clippy::author]\n     let _ = ::std::cmp::min(3, 4);"}, {"sha": "d9322d618bfd906e13c69fafb8a4ad52c97ca61a", "filename": "tests/ui/author/call.stdout", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor%2Fcall.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor%2Fcall.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Fcall.stdout?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,6 +1,5 @@\n if_chain! {\n-    if let StmtKind::Decl(ref decl, _) = stmt.node\n-    if let DeclKind::Local(ref local) = decl.node;\n+    if let StmtKind::Local(ref local) = stmt.node;\n     if let Some(ref init) = local.init\n     if let ExprKind::Call(ref func, ref args) = init.node;\n     if let ExprKind::Path(ref path) = func.node;"}, {"sha": "b3dec876535c5e5e374f39baa5d6d89ba9535fad", "filename": "tests/ui/author/for_loop.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Ffor_loop.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![feature(stmt_expr_attributes)]\n \n fn main() {"}, {"sha": "1611f419e5d31f9eda374c7d823e36b6d6b1780c", "filename": "tests/ui/author/for_loop.stdout", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor%2Ffor_loop.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor%2Ffor_loop.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Ffor_loop.stdout?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,7 +1,6 @@\n if_chain! {\n     if let ExprKind::Block(ref block) = expr.node;\n-    if let StmtKind::Decl(ref decl, _) = block.node\n-    if let DeclKind::Local(ref local) = decl.node;\n+    if let StmtKind::Local(ref local) = block.node;\n     if let Some(ref init) = local.init\n     if let ExprKind::Match(ref expr, ref arms, MatchSource::ForLoopDesugar) = init.node;\n     if let ExprKind::Call(ref func, ref args) = expr.node;\n@@ -14,8 +13,7 @@ if_chain! {\n     // unimplemented: field checks\n     if arms.len() == 1;\n     if let ExprKind::Loop(ref body, ref label, LoopSource::ForLoop) = arms[0].body.node;\n-    if let StmtKind::Decl(ref decl1, _) = body.node\n-    if let DeclKind::Local(ref local1) = decl1.node;\n+    if let StmtKind::Local(ref local1) = body.node;\n     if let PatKind::Binding(BindingAnnotation::Mutable, _, name, None) = local1.pat.node;\n     if name.node.as_str() == \"__next\";\n     if let StmtKind::Expr(ref e, _) = local1.pat.node\n@@ -42,17 +40,15 @@ if_chain! {\n     if arms1[1].pats.len() == 1;\n     if let PatKind::Path(ref path7) = arms1[1].pats[0].node;\n     if match_qpath(path7, &[\"{{root}}\", \"std\", \"option\", \"Option\", \"None\"]);\n-    if let StmtKind::Decl(ref decl2, _) = path7.node\n-    if let DeclKind::Local(ref local2) = decl2.node;\n+    if let StmtKind::Local(ref local2) = path7.node;\n     if let Some(ref init1) = local2.init\n     if let ExprKind::Path(ref path8) = init1.node;\n     if match_qpath(path8, &[\"__next\"]);\n     if let PatKind::Binding(BindingAnnotation::Unannotated, _, name1, None) = local2.pat.node;\n     if name1.node.as_str() == \"y\";\n     if let StmtKind::Expr(ref e1, _) = local2.pat.node\n     if let ExprKind::Block(ref block1) = e1.node;\n-    if let StmtKind::Decl(ref decl3, _) = block1.node\n-    if let DeclKind::Local(ref local3) = decl3.node;\n+    if let StmtKind::Local(ref local3) = block1.node;\n     if let Some(ref init2) = local3.init\n     if let ExprKind::Path(ref path9) = init2.node;\n     if match_qpath(path9, &[\"y\"]);"}, {"sha": "e6bf229103ff903754fde7c6fa9b7dc3cc389b5c", "filename": "tests/ui/author/matches.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Fmatches.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![feature(tool_attributes)]\n \n fn main() {"}, {"sha": "fa7e5cce43c22e4ad6e6a5fa75961f8d519c49a9", "filename": "tests/ui/author/matches.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fauthor%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Fmatches.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,12 @@\n error: returning the result of a let binding from a block. Consider returning the expression directly.\n-  --> $DIR/matches.rs:18:13\n+  --> $DIR/matches.rs:9:13\n    |\n LL |             x\n    |             ^\n    |\n    = note: `-D clippy::let-and-return` implied by `-D warnings`\n note: this expression can be directly returned\n-  --> $DIR/matches.rs:17:21\n+  --> $DIR/matches.rs:8:21\n    |\n LL |             let x = 3;\n    |                     ^"}, {"sha": "cfb493fb52afb4d1ad23b5b6d2a1cc1688ecb26f", "filename": "tests/ui/bit_masks.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbit_masks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbit_masks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbit_masks.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n const THREE_BITS: i64 = 7;\n const EVEN_MORE_REDIRECTION: i64 = THREE_BITS;\n "}, {"sha": "159db0374d292fa056a1132ae026d153ce578dfe", "filename": "tests/ui/bit_masks.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbit_masks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbit_masks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbit_masks.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,107 +1,107 @@\n error: &-masking with zero\n-  --> $DIR/bit_masks.rs:23:5\n+  --> $DIR/bit_masks.rs:14:5\n    |\n LL |     x & 0 == 0;\n    |     ^^^^^^^^^^\n    |\n    = note: `-D clippy::bad-bit-mask` implied by `-D warnings`\n \n error: this operation will always return zero. This is likely not the intended outcome\n-  --> $DIR/bit_masks.rs:23:5\n+  --> $DIR/bit_masks.rs:14:5\n    |\n LL |     x & 0 == 0;\n    |     ^^^^^\n    |\n    = note: #[deny(clippy::erasing_op)] on by default\n \n error: incompatible bit mask: `_ & 2` can never be equal to `1`\n-  --> $DIR/bit_masks.rs:26:5\n+  --> $DIR/bit_masks.rs:17:5\n    |\n LL |     x & 2 == 1;\n    |     ^^^^^^^^^^\n \n error: incompatible bit mask: `_ | 3` can never be equal to `2`\n-  --> $DIR/bit_masks.rs:30:5\n+  --> $DIR/bit_masks.rs:21:5\n    |\n LL |     x | 3 == 2;\n    |     ^^^^^^^^^^\n \n error: incompatible bit mask: `_ & 1` will never be higher than `1`\n-  --> $DIR/bit_masks.rs:32:5\n+  --> $DIR/bit_masks.rs:23:5\n    |\n LL |     x & 1 > 1;\n    |     ^^^^^^^^^\n \n error: incompatible bit mask: `_ | 2` will always be higher than `1`\n-  --> $DIR/bit_masks.rs:36:5\n+  --> $DIR/bit_masks.rs:27:5\n    |\n LL |     x | 2 > 1;\n    |     ^^^^^^^^^\n \n error: incompatible bit mask: `_ & 7` can never be equal to `8`\n-  --> $DIR/bit_masks.rs:43:5\n+  --> $DIR/bit_masks.rs:34:5\n    |\n LL |     x & THREE_BITS == 8;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: incompatible bit mask: `_ | 7` will never be lower than `7`\n-  --> $DIR/bit_masks.rs:44:5\n+  --> $DIR/bit_masks.rs:35:5\n    |\n LL |     x | EVEN_MORE_REDIRECTION < 7;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: &-masking with zero\n-  --> $DIR/bit_masks.rs:46:5\n+  --> $DIR/bit_masks.rs:37:5\n    |\n LL |     0 & x == 0;\n    |     ^^^^^^^^^^\n \n error: this operation will always return zero. This is likely not the intended outcome\n-  --> $DIR/bit_masks.rs:46:5\n+  --> $DIR/bit_masks.rs:37:5\n    |\n LL |     0 & x == 0;\n    |     ^^^^^\n \n error: incompatible bit mask: `_ | 2` will always be higher than `1`\n-  --> $DIR/bit_masks.rs:50:5\n+  --> $DIR/bit_masks.rs:41:5\n    |\n LL |     1 < 2 | x;\n    |     ^^^^^^^^^\n \n error: incompatible bit mask: `_ | 3` can never be equal to `2`\n-  --> $DIR/bit_masks.rs:51:5\n+  --> $DIR/bit_masks.rs:42:5\n    |\n LL |     2 == 3 | x;\n    |     ^^^^^^^^^^\n \n error: incompatible bit mask: `_ & 2` can never be equal to `1`\n-  --> $DIR/bit_masks.rs:52:5\n+  --> $DIR/bit_masks.rs:43:5\n    |\n LL |     1 == x & 2;\n    |     ^^^^^^^^^^\n \n error: ineffective bit mask: `x | 1` compared to `3`, is the same as x compared directly\n-  --> $DIR/bit_masks.rs:63:5\n+  --> $DIR/bit_masks.rs:54:5\n    |\n LL |     x | 1 > 3;\n    |     ^^^^^^^^^\n    |\n    = note: `-D clippy::ineffective-bit-mask` implied by `-D warnings`\n \n error: ineffective bit mask: `x | 1` compared to `4`, is the same as x compared directly\n-  --> $DIR/bit_masks.rs:64:5\n+  --> $DIR/bit_masks.rs:55:5\n    |\n LL |     x | 1 < 4;\n    |     ^^^^^^^^^\n \n error: ineffective bit mask: `x | 1` compared to `3`, is the same as x compared directly\n-  --> $DIR/bit_masks.rs:65:5\n+  --> $DIR/bit_masks.rs:56:5\n    |\n LL |     x | 1 <= 3;\n    |     ^^^^^^^^^^\n \n error: ineffective bit mask: `x | 1` compared to `8`, is the same as x compared directly\n-  --> $DIR/bit_masks.rs:66:5\n+  --> $DIR/bit_masks.rs:57:5\n    |\n LL |     x | 1 >= 8;\n    |     ^^^^^^^^^^"}, {"sha": "ca9d8d16b787df5af6c08f834306dd49d9ed3cf2", "filename": "tests/ui/blacklisted_name.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblacklisted_name.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(\n     dead_code,\n     clippy::similar_names,"}, {"sha": "44123829fb0f651208a28aa35f981a94f42c99a5", "filename": "tests/ui/blacklisted_name.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fblacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fblacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblacklisted_name.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,85 +1,85 @@\n error: use of a blacklisted/placeholder name `foo`\n-  --> $DIR/blacklisted_name.rs:20:9\n+  --> $DIR/blacklisted_name.rs:11:9\n    |\n LL | fn test(foo: ()) {}\n    |         ^^^\n    |\n    = note: `-D clippy::blacklisted-name` implied by `-D warnings`\n \n error: use of a blacklisted/placeholder name `foo`\n-  --> $DIR/blacklisted_name.rs:23:9\n+  --> $DIR/blacklisted_name.rs:14:9\n    |\n LL |     let foo = 42;\n    |         ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n-  --> $DIR/blacklisted_name.rs:24:9\n+  --> $DIR/blacklisted_name.rs:15:9\n    |\n LL |     let bar = 42;\n    |         ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n-  --> $DIR/blacklisted_name.rs:25:9\n+  --> $DIR/blacklisted_name.rs:16:9\n    |\n LL |     let baz = 42;\n    |         ^^^\n \n error: use of a blacklisted/placeholder name `foo`\n-  --> $DIR/blacklisted_name.rs:31:10\n+  --> $DIR/blacklisted_name.rs:22:10\n    |\n LL |         (foo, Some(bar), baz @ Some(_)) => (),\n    |          ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n-  --> $DIR/blacklisted_name.rs:31:20\n+  --> $DIR/blacklisted_name.rs:22:20\n    |\n LL |         (foo, Some(bar), baz @ Some(_)) => (),\n    |                    ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n-  --> $DIR/blacklisted_name.rs:31:26\n+  --> $DIR/blacklisted_name.rs:22:26\n    |\n LL |         (foo, Some(bar), baz @ Some(_)) => (),\n    |                          ^^^\n \n error: use of a blacklisted/placeholder name `foo`\n-  --> $DIR/blacklisted_name.rs:36:19\n+  --> $DIR/blacklisted_name.rs:27:19\n    |\n LL | fn issue_1647(mut foo: u8) {\n    |                   ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n-  --> $DIR/blacklisted_name.rs:37:13\n+  --> $DIR/blacklisted_name.rs:28:13\n    |\n LL |     let mut bar = 0;\n    |             ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n-  --> $DIR/blacklisted_name.rs:38:21\n+  --> $DIR/blacklisted_name.rs:29:21\n    |\n LL |     if let Some(mut baz) = Some(42) {}\n    |                     ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n-  --> $DIR/blacklisted_name.rs:42:13\n+  --> $DIR/blacklisted_name.rs:33:13\n    |\n LL |     let ref bar = 0;\n    |             ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n-  --> $DIR/blacklisted_name.rs:43:21\n+  --> $DIR/blacklisted_name.rs:34:21\n    |\n LL |     if let Some(ref baz) = Some(42) {}\n    |                     ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n-  --> $DIR/blacklisted_name.rs:47:17\n+  --> $DIR/blacklisted_name.rs:38:17\n    |\n LL |     let ref mut bar = 0;\n    |                 ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n-  --> $DIR/blacklisted_name.rs:48:25\n+  --> $DIR/blacklisted_name.rs:39:25\n    |\n LL |     if let Some(ref mut baz) = Some(42) {}\n    |                         ^^^"}, {"sha": "17ee1cd68738407fcc37dba93a8f6c128715a23c", "filename": "tests/ui/block_in_if_condition.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::block_in_if_condition_expr)]\n #![warn(clippy::block_in_if_condition_stmt)]\n #![allow(unused, clippy::let_and_return)]"}, {"sha": "34c0454b7824554cfd4c964a044cd2360a405eff", "filename": "tests/ui/block_in_if_condition.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fblock_in_if_condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fblock_in_if_condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,5 +1,5 @@\n error: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'\n-  --> $DIR/block_in_if_condition.rs:35:8\n+  --> $DIR/block_in_if_condition.rs:26:8\n    |\n LL |       if {\n    |  ________^\n@@ -19,7 +19,7 @@ LL | |     } {\n            } ... \n \n error: omit braces around single expression condition\n-  --> $DIR/block_in_if_condition.rs:46:8\n+  --> $DIR/block_in_if_condition.rs:37:8\n    |\n LL |     if { true } {\n    |        ^^^^^^^^\n@@ -31,7 +31,7 @@ LL |     if { true } {\n            } ... \n \n error: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'\n-  --> $DIR/block_in_if_condition.rs:66:17\n+  --> $DIR/block_in_if_condition.rs:57:17\n    |\n LL |               |x| {\n    |  _________________^\n@@ -41,7 +41,7 @@ LL | |             },\n    | |_____________^\n \n error: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'\n-  --> $DIR/block_in_if_condition.rs:75:13\n+  --> $DIR/block_in_if_condition.rs:66:13\n    |\n LL |           |x| {\n    |  _____________^\n@@ -51,7 +51,7 @@ LL | |         },\n    | |_________^\n \n error: this boolean expression can be simplified\n-  --> $DIR/block_in_if_condition.rs:85:8\n+  --> $DIR/block_in_if_condition.rs:76:8\n    |\n LL |     if true && x == 3 {\n    |        ^^^^^^^^^^^^^^ help: try: `x == 3`"}, {"sha": "48c5e9d6d0c1015c32f3fda6a4c77e0d4d843301", "filename": "tests/ui/bool_comparison.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbool_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbool_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[warn(clippy::bool_comparison)]\n fn main() {\n     let x = true;"}, {"sha": "2d473d91d668e2031226867ff353e024bd5991f3", "filename": "tests/ui/bool_comparison.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbool_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbool_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,85 +1,85 @@\n error: equality checks against true are unnecessary\n-  --> $DIR/bool_comparison.rs:13:8\n+  --> $DIR/bool_comparison.rs:4:8\n    |\n LL |     if x == true {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n    |\n    = note: `-D clippy::bool-comparison` implied by `-D warnings`\n \n error: equality checks against false can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:18:8\n+  --> $DIR/bool_comparison.rs:9:8\n    |\n LL |     if x == false {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: equality checks against true are unnecessary\n-  --> $DIR/bool_comparison.rs:23:8\n+  --> $DIR/bool_comparison.rs:14:8\n    |\n LL |     if true == x {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: equality checks against false can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:28:8\n+  --> $DIR/bool_comparison.rs:19:8\n    |\n LL |     if false == x {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: inequality checks against true can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:33:8\n+  --> $DIR/bool_comparison.rs:24:8\n    |\n LL |     if x != true {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: inequality checks against false are unnecessary\n-  --> $DIR/bool_comparison.rs:38:8\n+  --> $DIR/bool_comparison.rs:29:8\n    |\n LL |     if x != false {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: inequality checks against true can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:43:8\n+  --> $DIR/bool_comparison.rs:34:8\n    |\n LL |     if true != x {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: inequality checks against false are unnecessary\n-  --> $DIR/bool_comparison.rs:48:8\n+  --> $DIR/bool_comparison.rs:39:8\n    |\n LL |     if false != x {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: less than comparison against true can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:53:8\n+  --> $DIR/bool_comparison.rs:44:8\n    |\n LL |     if x < true {\n    |        ^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: greater than checks against false are unnecessary\n-  --> $DIR/bool_comparison.rs:58:8\n+  --> $DIR/bool_comparison.rs:49:8\n    |\n LL |     if false < x {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: greater than checks against false are unnecessary\n-  --> $DIR/bool_comparison.rs:63:8\n+  --> $DIR/bool_comparison.rs:54:8\n    |\n LL |     if x > false {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: less than comparison against true can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:68:8\n+  --> $DIR/bool_comparison.rs:59:8\n    |\n LL |     if true > x {\n    |        ^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: order comparisons between booleans can be simplified\n-  --> $DIR/bool_comparison.rs:74:8\n+  --> $DIR/bool_comparison.rs:65:8\n    |\n LL |     if x < y {\n    |        ^^^^^ help: try simplifying it as shown: `!x & y`\n \n error: order comparisons between booleans can be simplified\n-  --> $DIR/bool_comparison.rs:79:8\n+  --> $DIR/bool_comparison.rs:70:8\n    |\n LL |     if x > y {\n    |        ^^^^^ help: try simplifying it as shown: `x & !y`"}, {"sha": "c8e01d4b2587d964ef761c2c564dc96537bfbef6", "filename": "tests/ui/booleans.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::nonminimal_bool, clippy::logic_bug)]\n \n #[allow(unused, clippy::many_single_char_names)]"}, {"sha": "eebab8c3e25effb77f1c86142ac6dc9311e99ff9", "filename": "tests/ui/booleans.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbooleans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbooleans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,74 +1,74 @@\n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:19:13\n+  --> $DIR/booleans.rs:10:13\n    |\n LL |     let _ = a && b || a;\n    |             ^^^^^^^^^^^ help: it would look like the following: `a`\n    |\n    = note: `-D clippy::logic-bug` implied by `-D warnings`\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:19:18\n+  --> $DIR/booleans.rs:10:18\n    |\n LL |     let _ = a && b || a;\n    |                  ^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:21:13\n+  --> $DIR/booleans.rs:12:13\n    |\n LL |     let _ = !true;\n    |             ^^^^^ help: try: `false`\n    |\n    = note: `-D clippy::nonminimal-bool` implied by `-D warnings`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:22:13\n+  --> $DIR/booleans.rs:13:13\n    |\n LL |     let _ = !false;\n    |             ^^^^^^ help: try: `true`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:23:13\n+  --> $DIR/booleans.rs:14:13\n    |\n LL |     let _ = !!a;\n    |             ^^^ help: try: `a`\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:24:13\n+  --> $DIR/booleans.rs:15:13\n    |\n LL |     let _ = false && a;\n    |             ^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:24:22\n+  --> $DIR/booleans.rs:15:22\n    |\n LL |     let _ = false && a;\n    |                      ^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:25:13\n+  --> $DIR/booleans.rs:16:13\n    |\n LL |     let _ = false || a;\n    |             ^^^^^^^^^^ help: try: `a`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:30:13\n+  --> $DIR/booleans.rs:21:13\n    |\n LL |     let _ = !(!a && b);\n    |             ^^^^^^^^^^ help: try: `!b || a`\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:40:13\n+  --> $DIR/booleans.rs:31:13\n    |\n LL |     let _ = a == b && a != b;\n    |             ^^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:40:13\n+  --> $DIR/booleans.rs:31:13\n    |\n LL |     let _ = a == b && a != b;\n    |             ^^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:41:13\n+  --> $DIR/booleans.rs:32:13\n    |\n LL |     let _ = a == b && c == 5 && a == b;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -80,7 +80,7 @@ LL |     let _ = !(c != 5 || a != b);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:42:13\n+  --> $DIR/booleans.rs:33:13\n    |\n LL |     let _ = a == b && c == 5 && b == a;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -92,31 +92,31 @@ LL |     let _ = !(c != 5 || a != b);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:43:13\n+  --> $DIR/booleans.rs:34:13\n    |\n LL |     let _ = a < b && a >= b;\n    |             ^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:43:13\n+  --> $DIR/booleans.rs:34:13\n    |\n LL |     let _ = a < b && a >= b;\n    |             ^^^^^\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:44:13\n+  --> $DIR/booleans.rs:35:13\n    |\n LL |     let _ = a > b && a <= b;\n    |             ^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:44:13\n+  --> $DIR/booleans.rs:35:13\n    |\n LL |     let _ = a > b && a <= b;\n    |             ^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:46:13\n+  --> $DIR/booleans.rs:37:13\n    |\n LL |     let _ = a != b || !(a != b || c == d);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -128,73 +128,73 @@ LL |     let _ = !(a == b && c == d);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:54:13\n+  --> $DIR/booleans.rs:45:13\n    |\n LL |     let _ = !a.is_some();\n    |             ^^^^^^^^^^^^ help: try: `a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:56:13\n+  --> $DIR/booleans.rs:47:13\n    |\n LL |     let _ = !a.is_none();\n    |             ^^^^^^^^^^^^ help: try: `a.is_some()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:58:13\n+  --> $DIR/booleans.rs:49:13\n    |\n LL |     let _ = !b.is_err();\n    |             ^^^^^^^^^^^ help: try: `b.is_ok()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:60:13\n+  --> $DIR/booleans.rs:51:13\n    |\n LL |     let _ = !b.is_ok();\n    |             ^^^^^^^^^^ help: try: `b.is_err()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:62:13\n+  --> $DIR/booleans.rs:53:13\n    |\n LL |     let _ = !(a.is_some() && !c);\n    |             ^^^^^^^^^^^^^^^^^^^^ help: try: `c || a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:63:13\n+  --> $DIR/booleans.rs:54:13\n    |\n LL |     let _ = !(!c ^ c) || !a.is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `!(!c ^ c) || a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:64:13\n+  --> $DIR/booleans.rs:55:13\n    |\n LL |     let _ = (!c ^ c) || !a.is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(!c ^ c) || a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:65:13\n+  --> $DIR/booleans.rs:56:13\n    |\n LL |     let _ = !c ^ c || !a.is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `!c ^ c || a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:137:8\n+  --> $DIR/booleans.rs:128:8\n    |\n LL |     if !res.is_ok() {}\n    |        ^^^^^^^^^^^^ help: try: `res.is_err()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:138:8\n+  --> $DIR/booleans.rs:129:8\n    |\n LL |     if !res.is_err() {}\n    |        ^^^^^^^^^^^^^ help: try: `res.is_ok()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:141:8\n+  --> $DIR/booleans.rs:132:8\n    |\n LL |     if !res.is_some() {}\n    |        ^^^^^^^^^^^^^^ help: try: `res.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:142:8\n+  --> $DIR/booleans.rs:133:8\n    |\n LL |     if !res.is_none() {}\n    |        ^^^^^^^^^^^^^^ help: try: `res.is_some()`"}, {"sha": "3b53aab7e23f234650c6acafbf0c90903e3a8a19", "filename": "tests/ui/borrow_box.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fborrow_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fborrow_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![deny(clippy::borrowed_box)]\n #![allow(clippy::blacklisted_name)]\n #![allow(unused_variables)]"}, {"sha": "0cb455433c4219dddce5a4779bef2b4c64572d47", "filename": "tests/ui/borrow_box.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fborrow_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fborrow_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,29 +1,29 @@\n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:15:19\n+  --> $DIR/borrow_box.rs:6:19\n    |\n LL | pub fn test1(foo: &mut Box<bool>) {\n    |                   ^^^^^^^^^^^^^^ help: try: `&mut bool`\n    |\n note: lint level defined here\n-  --> $DIR/borrow_box.rs:10:9\n+  --> $DIR/borrow_box.rs:1:9\n    |\n LL | #![deny(clippy::borrowed_box)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:20:14\n+  --> $DIR/borrow_box.rs:11:14\n    |\n LL |     let foo: &Box<bool>;\n    |              ^^^^^^^^^^ help: try: `&bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:24:10\n+  --> $DIR/borrow_box.rs:15:10\n    |\n LL |     foo: &'a Box<bool>,\n    |          ^^^^^^^^^^^^^ help: try: `&'a bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:28:17\n+  --> $DIR/borrow_box.rs:19:17\n    |\n LL |     fn test4(a: &Box<bool>);\n    |                 ^^^^^^^^^^ help: try: `&bool`"}, {"sha": "af3ba5b4d353415ce8c7bf711c7d720f0ff5198f", "filename": "tests/ui/box_vec.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbox_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbox_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbox_vec.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::all)]\n #![allow(clippy::boxed_local, clippy::needless_pass_by_value)]\n #![allow(clippy::blacklisted_name)]"}, {"sha": "fca12eddd573f04c1721bf2143d235ad2e3a06aa", "filename": "tests/ui/box_vec.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbox_vec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbox_vec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbox_vec.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,5 +1,5 @@\n error: you seem to be trying to use `Box<Vec<T>>`. Consider using just `Vec<T>`\n-  --> $DIR/box_vec.rs:23:18\n+  --> $DIR/box_vec.rs:14:18\n    |\n LL | pub fn test(foo: Box<Vec<bool>>) {\n    |                  ^^^^^^^^^^^^^^"}, {"sha": "69b8b6a0e68c3af97530ff3316c953e96c2d4efc", "filename": "tests/ui/builtin-type-shadow.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbuiltin-type-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbuiltin-type-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuiltin-type-shadow.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::builtin_type_shadow)]\n #![allow(non_camel_case_types)]\n "}, {"sha": "5714f2094daad7cabc5460488754893bfc253209", "filename": "tests/ui/builtin-type-shadow.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbuiltin-type-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbuiltin-type-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuiltin-type-shadow.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,13 +1,13 @@\n error: This generic shadows the built-in type `u32`\n-  --> $DIR/builtin-type-shadow.rs:13:8\n+  --> $DIR/builtin-type-shadow.rs:4:8\n    |\n LL | fn foo<u32>(a: u32) -> u32 {\n    |        ^^^\n    |\n    = note: `-D clippy::builtin-type-shadow` implied by `-D warnings`\n \n error[E0308]: mismatched types\n-  --> $DIR/builtin-type-shadow.rs:14:5\n+  --> $DIR/builtin-type-shadow.rs:5:5\n    |\n LL | fn foo<u32>(a: u32) -> u32 {\n    |                        --- expected `u32` because of return type"}, {"sha": "c724ee21be310b4a8d9d3376eeb36797304bcd65", "filename": "tests/ui/bytecount.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytecount.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[deny(clippy::naive_bytecount)]\n fn main() {\n     let x = vec![0_u8; 16];"}, {"sha": "43bc4b3c61e6435f9b77a9a504ea0af04c63146c", "filename": "tests/ui/bytecount.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbytecount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fbytecount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytecount.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,23 +1,23 @@\n error: You appear to be counting bytes the naive way\n-  --> $DIR/bytecount.rs:14:13\n+  --> $DIR/bytecount.rs:5:13\n    |\n LL |     let _ = x.iter().filter(|&&a| a == 0).count(); // naive byte count\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count(x, 0)`\n    |\n note: lint level defined here\n-  --> $DIR/bytecount.rs:10:8\n+  --> $DIR/bytecount.rs:1:8\n    |\n LL | #[deny(clippy::naive_bytecount)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: You appear to be counting bytes the naive way\n-  --> $DIR/bytecount.rs:16:13\n+  --> $DIR/bytecount.rs:7:13\n    |\n LL |     let _ = (&x[..]).iter().filter(|&a| *a == 0).count(); // naive byte count\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count((&x[..]), 0)`\n \n error: You appear to be counting bytes the naive way\n-  --> $DIR/bytecount.rs:28:13\n+  --> $DIR/bytecount.rs:19:13\n    |\n LL |     let _ = x.iter().filter(|a| b + 1 == **a).count(); // naive byte count\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count(x, b + 1)`"}, {"sha": "5f4de9894c788c98eef67e4ba894c1e38f67e81c", "filename": "tests/ui/cast.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[warn(\n     clippy::cast_precision_loss,\n     clippy::cast_possible_truncation,"}, {"sha": "92587312a53746c97eecdf8a814396d627294745", "filename": "tests/ui/cast.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,179 +1,179 @@\n error: casting i32 to f32 causes a loss of precision (i32 is 32 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast.rs:20:5\n+  --> $DIR/cast.rs:11:5\n    |\n LL |     1i32 as f32;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-precision-loss` implied by `-D warnings`\n \n error: casting i64 to f32 causes a loss of precision (i64 is 64 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast.rs:21:5\n+  --> $DIR/cast.rs:12:5\n    |\n LL |     1i64 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting i64 to f64 causes a loss of precision (i64 is 64 bits wide, but f64's mantissa is only 52 bits wide)\n-  --> $DIR/cast.rs:22:5\n+  --> $DIR/cast.rs:13:5\n    |\n LL |     1i64 as f64;\n    |     ^^^^^^^^^^^\n \n error: casting u32 to f32 causes a loss of precision (u32 is 32 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast.rs:23:5\n+  --> $DIR/cast.rs:14:5\n    |\n LL |     1u32 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting u64 to f32 causes a loss of precision (u64 is 64 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast.rs:24:5\n+  --> $DIR/cast.rs:15:5\n    |\n LL |     1u64 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting u64 to f64 causes a loss of precision (u64 is 64 bits wide, but f64's mantissa is only 52 bits wide)\n-  --> $DIR/cast.rs:25:5\n+  --> $DIR/cast.rs:16:5\n    |\n LL |     1u64 as f64;\n    |     ^^^^^^^^^^^\n \n error: casting f32 to i32 may truncate the value\n-  --> $DIR/cast.rs:27:5\n+  --> $DIR/cast.rs:18:5\n    |\n LL |     1f32 as i32;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-truncation` implied by `-D warnings`\n \n error: casting f32 to u32 may truncate the value\n-  --> $DIR/cast.rs:28:5\n+  --> $DIR/cast.rs:19:5\n    |\n LL |     1f32 as u32;\n    |     ^^^^^^^^^^^\n \n error: casting f32 to u32 may lose the sign of the value\n-  --> $DIR/cast.rs:28:5\n+  --> $DIR/cast.rs:19:5\n    |\n LL |     1f32 as u32;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-sign-loss` implied by `-D warnings`\n \n error: casting f64 to f32 may truncate the value\n-  --> $DIR/cast.rs:29:5\n+  --> $DIR/cast.rs:20:5\n    |\n LL |     1f64 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting i32 to i8 may truncate the value\n-  --> $DIR/cast.rs:30:5\n+  --> $DIR/cast.rs:21:5\n    |\n LL |     1i32 as i8;\n    |     ^^^^^^^^^^\n \n error: casting i32 to u8 may lose the sign of the value\n-  --> $DIR/cast.rs:31:5\n+  --> $DIR/cast.rs:22:5\n    |\n LL |     1i32 as u8;\n    |     ^^^^^^^^^^\n \n error: casting i32 to u8 may truncate the value\n-  --> $DIR/cast.rs:31:5\n+  --> $DIR/cast.rs:22:5\n    |\n LL |     1i32 as u8;\n    |     ^^^^^^^^^^\n \n error: casting f64 to isize may truncate the value\n-  --> $DIR/cast.rs:32:5\n+  --> $DIR/cast.rs:23:5\n    |\n LL |     1f64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting f64 to usize may truncate the value\n-  --> $DIR/cast.rs:33:5\n+  --> $DIR/cast.rs:24:5\n    |\n LL |     1f64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting f64 to usize may lose the sign of the value\n-  --> $DIR/cast.rs:33:5\n+  --> $DIR/cast.rs:24:5\n    |\n LL |     1f64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u8 to i8 may wrap around the value\n-  --> $DIR/cast.rs:35:5\n+  --> $DIR/cast.rs:26:5\n    |\n LL |     1u8 as i8;\n    |     ^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-wrap` implied by `-D warnings`\n \n error: casting u16 to i16 may wrap around the value\n-  --> $DIR/cast.rs:36:5\n+  --> $DIR/cast.rs:27:5\n    |\n LL |     1u16 as i16;\n    |     ^^^^^^^^^^^\n \n error: casting u32 to i32 may wrap around the value\n-  --> $DIR/cast.rs:37:5\n+  --> $DIR/cast.rs:28:5\n    |\n LL |     1u32 as i32;\n    |     ^^^^^^^^^^^\n \n error: casting u64 to i64 may wrap around the value\n-  --> $DIR/cast.rs:38:5\n+  --> $DIR/cast.rs:29:5\n    |\n LL |     1u64 as i64;\n    |     ^^^^^^^^^^^\n \n error: casting usize to isize may wrap around the value\n-  --> $DIR/cast.rs:39:5\n+  --> $DIR/cast.rs:30:5\n    |\n LL |     1usize as isize;\n    |     ^^^^^^^^^^^^^^^\n \n error: casting f32 to f64 may become silently lossy if types change\n-  --> $DIR/cast.rs:41:5\n+  --> $DIR/cast.rs:32:5\n    |\n LL |     1.0f32 as f64;\n    |     ^^^^^^^^^^^^^ help: try: `f64::from(1.0f32)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting u8 to u16 may become silently lossy if types change\n-  --> $DIR/cast.rs:43:5\n+  --> $DIR/cast.rs:34:5\n    |\n LL |     (1u8 + 1u8) as u16;\n    |     ^^^^^^^^^^^^^^^^^^ help: try: `u16::from(1u8 + 1u8)`\n \n error: casting i32 to u32 may lose the sign of the value\n-  --> $DIR/cast.rs:45:5\n+  --> $DIR/cast.rs:36:5\n    |\n LL |     1i32 as u32;\n    |     ^^^^^^^^^^^\n \n error: casting isize to usize may lose the sign of the value\n-  --> $DIR/cast.rs:46:5\n+  --> $DIR/cast.rs:37:5\n    |\n LL |     1isize as usize;\n    |     ^^^^^^^^^^^^^^^\n \n error: casting to the same type is unnecessary (`i32` -> `i32`)\n-  --> $DIR/cast.rs:49:5\n+  --> $DIR/cast.rs:40:5\n    |\n LL |     1i32 as i32;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n \n error: casting to the same type is unnecessary (`f32` -> `f32`)\n-  --> $DIR/cast.rs:50:5\n+  --> $DIR/cast.rs:41:5\n    |\n LL |     1f32 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting to the same type is unnecessary (`bool` -> `bool`)\n-  --> $DIR/cast.rs:51:5\n+  --> $DIR/cast.rs:42:5\n    |\n LL |     false as bool;\n    |     ^^^^^^^^^^^^^"}, {"sha": "2814fe6c03da6660c9e860e16a0f46a57ebad02c", "filename": "tests/ui/cast_alignment.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n //! Test casts for alignment issues\n \n #![feature(rustc_private)]"}, {"sha": "0077be1b570927326e97ae3412b1a4ce263fbe08", "filename": "tests/ui/cast_alignment.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_alignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_alignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,13 +1,13 @@\n error: casting from `*const u8` to a more-strictly-aligned pointer (`*const u16`)\n-  --> $DIR/cast_alignment.rs:21:5\n+  --> $DIR/cast_alignment.rs:12:5\n    |\n LL |     (&1u8 as *const u8) as *const u16;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-ptr-alignment` implied by `-D warnings`\n \n error: casting from `*mut u8` to a more-strictly-aligned pointer (`*mut u16`)\n-  --> $DIR/cast_alignment.rs:22:5\n+  --> $DIR/cast_alignment.rs:13:5\n    |\n LL |     (&mut 1u8 as *mut u8) as *mut u16;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "22df1137922d0e78b07c2063089d480152346547", "filename": "tests/ui/cast_lossless_float.fixed", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_lossless_float.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_lossless_float.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_float.fixed?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // run-rustfix\n \n #[warn(clippy::cast_lossless)]"}, {"sha": "c86b4d05f28e929aaacfc84ccb7b6b8d0eaaec14", "filename": "tests/ui/cast_lossless_float.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_lossless_float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_lossless_float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_float.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // run-rustfix\n \n #[warn(clippy::cast_lossless)]"}, {"sha": "c2b01e83bbe6d6878da6d9f123437df76d5c8579", "filename": "tests/ui/cast_lossless_float.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_lossless_float.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_lossless_float.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_float.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,61 +1,61 @@\n error: casting i8 to f32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:16:5\n+  --> $DIR/cast_lossless_float.rs:7:5\n    |\n LL |     1i8 as f32;\n    |     ^^^^^^^^^^ help: try: `f32::from(1i8)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting i8 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:17:5\n+  --> $DIR/cast_lossless_float.rs:8:5\n    |\n LL |     1i8 as f64;\n    |     ^^^^^^^^^^ help: try: `f64::from(1i8)`\n \n error: casting u8 to f32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:18:5\n+  --> $DIR/cast_lossless_float.rs:9:5\n    |\n LL |     1u8 as f32;\n    |     ^^^^^^^^^^ help: try: `f32::from(1u8)`\n \n error: casting u8 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:19:5\n+  --> $DIR/cast_lossless_float.rs:10:5\n    |\n LL |     1u8 as f64;\n    |     ^^^^^^^^^^ help: try: `f64::from(1u8)`\n \n error: casting i16 to f32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:20:5\n+  --> $DIR/cast_lossless_float.rs:11:5\n    |\n LL |     1i16 as f32;\n    |     ^^^^^^^^^^^ help: try: `f32::from(1i16)`\n \n error: casting i16 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:21:5\n+  --> $DIR/cast_lossless_float.rs:12:5\n    |\n LL |     1i16 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1i16)`\n \n error: casting u16 to f32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:22:5\n+  --> $DIR/cast_lossless_float.rs:13:5\n    |\n LL |     1u16 as f32;\n    |     ^^^^^^^^^^^ help: try: `f32::from(1u16)`\n \n error: casting u16 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:23:5\n+  --> $DIR/cast_lossless_float.rs:14:5\n    |\n LL |     1u16 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1u16)`\n \n error: casting i32 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:24:5\n+  --> $DIR/cast_lossless_float.rs:15:5\n    |\n LL |     1i32 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1i32)`\n \n error: casting u32 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:25:5\n+  --> $DIR/cast_lossless_float.rs:16:5\n    |\n LL |     1u32 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1u32)`"}, {"sha": "e5b33d5e1b0e5677c4e85be0952b9ada89dff060", "filename": "tests/ui/cast_lossless_integer.fixed", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_lossless_integer.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_lossless_integer.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_integer.fixed?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // run-rustfix\n \n #[warn(clippy::cast_lossless)]"}, {"sha": "61170625c8aa9fd0081f3513d4cbc7c75bb761a8", "filename": "tests/ui/cast_lossless_integer.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_lossless_integer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_lossless_integer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_integer.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n // run-rustfix\n \n #[warn(clippy::cast_lossless)]"}, {"sha": "ac385298ecb1b7ef5dabfb7dfd4e2233d138980a", "filename": "tests/ui/cast_lossless_integer.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_lossless_integer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_lossless_integer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_integer.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,109 +1,109 @@\n error: casting i8 to i16 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:16:5\n+  --> $DIR/cast_lossless_integer.rs:7:5\n    |\n LL |     1i8 as i16;\n    |     ^^^^^^^^^^ help: try: `i16::from(1i8)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting i8 to i32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:17:5\n+  --> $DIR/cast_lossless_integer.rs:8:5\n    |\n LL |     1i8 as i32;\n    |     ^^^^^^^^^^ help: try: `i32::from(1i8)`\n \n error: casting i8 to i64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:18:5\n+  --> $DIR/cast_lossless_integer.rs:9:5\n    |\n LL |     1i8 as i64;\n    |     ^^^^^^^^^^ help: try: `i64::from(1i8)`\n \n error: casting u8 to i16 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:19:5\n+  --> $DIR/cast_lossless_integer.rs:10:5\n    |\n LL |     1u8 as i16;\n    |     ^^^^^^^^^^ help: try: `i16::from(1u8)`\n \n error: casting u8 to i32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:20:5\n+  --> $DIR/cast_lossless_integer.rs:11:5\n    |\n LL |     1u8 as i32;\n    |     ^^^^^^^^^^ help: try: `i32::from(1u8)`\n \n error: casting u8 to i64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:21:5\n+  --> $DIR/cast_lossless_integer.rs:12:5\n    |\n LL |     1u8 as i64;\n    |     ^^^^^^^^^^ help: try: `i64::from(1u8)`\n \n error: casting u8 to u16 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:22:5\n+  --> $DIR/cast_lossless_integer.rs:13:5\n    |\n LL |     1u8 as u16;\n    |     ^^^^^^^^^^ help: try: `u16::from(1u8)`\n \n error: casting u8 to u32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:23:5\n+  --> $DIR/cast_lossless_integer.rs:14:5\n    |\n LL |     1u8 as u32;\n    |     ^^^^^^^^^^ help: try: `u32::from(1u8)`\n \n error: casting u8 to u64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:24:5\n+  --> $DIR/cast_lossless_integer.rs:15:5\n    |\n LL |     1u8 as u64;\n    |     ^^^^^^^^^^ help: try: `u64::from(1u8)`\n \n error: casting i16 to i32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:25:5\n+  --> $DIR/cast_lossless_integer.rs:16:5\n    |\n LL |     1i16 as i32;\n    |     ^^^^^^^^^^^ help: try: `i32::from(1i16)`\n \n error: casting i16 to i64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:26:5\n+  --> $DIR/cast_lossless_integer.rs:17:5\n    |\n LL |     1i16 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1i16)`\n \n error: casting u16 to i32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:27:5\n+  --> $DIR/cast_lossless_integer.rs:18:5\n    |\n LL |     1u16 as i32;\n    |     ^^^^^^^^^^^ help: try: `i32::from(1u16)`\n \n error: casting u16 to i64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:28:5\n+  --> $DIR/cast_lossless_integer.rs:19:5\n    |\n LL |     1u16 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1u16)`\n \n error: casting u16 to u32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:29:5\n+  --> $DIR/cast_lossless_integer.rs:20:5\n    |\n LL |     1u16 as u32;\n    |     ^^^^^^^^^^^ help: try: `u32::from(1u16)`\n \n error: casting u16 to u64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:30:5\n+  --> $DIR/cast_lossless_integer.rs:21:5\n    |\n LL |     1u16 as u64;\n    |     ^^^^^^^^^^^ help: try: `u64::from(1u16)`\n \n error: casting i32 to i64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:31:5\n+  --> $DIR/cast_lossless_integer.rs:22:5\n    |\n LL |     1i32 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1i32)`\n \n error: casting u32 to i64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:32:5\n+  --> $DIR/cast_lossless_integer.rs:23:5\n    |\n LL |     1u32 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1u32)`\n \n error: casting u32 to u64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:33:5\n+  --> $DIR/cast_lossless_integer.rs:24:5\n    |\n LL |     1u32 as u64;\n    |     ^^^^^^^^^^^ help: try: `u64::from(1u32)`"}, {"sha": "fde178b1874fb5bddcaa3980e908586420cc9b6c", "filename": "tests/ui/cast_size.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_size.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[warn(\n     clippy::cast_precision_loss,\n     clippy::cast_possible_truncation,"}, {"sha": "9346deb19ec8dda438b6381450e6ee6ad07e5c98", "filename": "tests/ui/cast_size.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_size.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcast_size.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_size.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,121 +1,121 @@\n error: casting isize to i8 may truncate the value\n-  --> $DIR/cast_size.rs:20:5\n+  --> $DIR/cast_size.rs:11:5\n    |\n LL |     1isize as i8;\n    |     ^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-truncation` implied by `-D warnings`\n \n error: casting isize to f64 causes a loss of precision on targets with 64-bit wide pointers (isize is 64 bits wide, but f64's mantissa is only 52 bits wide)\n-  --> $DIR/cast_size.rs:21:5\n+  --> $DIR/cast_size.rs:12:5\n    |\n LL |     1isize as f64;\n    |     ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-precision-loss` implied by `-D warnings`\n \n error: casting usize to f64 causes a loss of precision on targets with 64-bit wide pointers (usize is 64 bits wide, but f64's mantissa is only 52 bits wide)\n-  --> $DIR/cast_size.rs:22:5\n+  --> $DIR/cast_size.rs:13:5\n    |\n LL |     1usize as f64;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to f32 causes a loss of precision (isize is 32 or 64 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast_size.rs:23:5\n+  --> $DIR/cast_size.rs:14:5\n    |\n LL |     1isize as f32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to f32 causes a loss of precision (usize is 32 or 64 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast_size.rs:24:5\n+  --> $DIR/cast_size.rs:15:5\n    |\n LL |     1usize as f32;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to i32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:25:5\n+  --> $DIR/cast_size.rs:16:5\n    |\n LL |     1isize as i32;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to u32 may lose the sign of the value\n-  --> $DIR/cast_size.rs:26:5\n+  --> $DIR/cast_size.rs:17:5\n    |\n LL |     1isize as u32;\n    |     ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-sign-loss` implied by `-D warnings`\n \n error: casting isize to u32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:26:5\n+  --> $DIR/cast_size.rs:17:5\n    |\n LL |     1isize as u32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to u32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:27:5\n+  --> $DIR/cast_size.rs:18:5\n    |\n LL |     1usize as u32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to i32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:28:5\n+  --> $DIR/cast_size.rs:19:5\n    |\n LL |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to i32 may wrap around the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:28:5\n+  --> $DIR/cast_size.rs:19:5\n    |\n LL |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-wrap` implied by `-D warnings`\n \n error: casting i64 to isize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:30:5\n+  --> $DIR/cast_size.rs:21:5\n    |\n LL |     1i64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i64 to usize may lose the sign of the value\n-  --> $DIR/cast_size.rs:31:5\n+  --> $DIR/cast_size.rs:22:5\n    |\n LL |     1i64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i64 to usize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:31:5\n+  --> $DIR/cast_size.rs:22:5\n    |\n LL |     1i64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to isize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:32:5\n+  --> $DIR/cast_size.rs:23:5\n    |\n LL |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to isize may wrap around the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:32:5\n+  --> $DIR/cast_size.rs:23:5\n    |\n LL |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to usize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:33:5\n+  --> $DIR/cast_size.rs:24:5\n    |\n LL |     1u64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u32 to isize may wrap around the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:34:5\n+  --> $DIR/cast_size.rs:25:5\n    |\n LL |     1u32 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i32 to usize may lose the sign of the value\n-  --> $DIR/cast_size.rs:37:5\n+  --> $DIR/cast_size.rs:28:5\n    |\n LL |     1i32 as usize;\n    |     ^^^^^^^^^^^^^"}, {"sha": "4e583a25b94c2a517555585caf76f5631e263847", "filename": "tests/ui/cfg_attr_rustfmt.fixed", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcfg_attr_rustfmt.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcfg_attr_rustfmt.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcfg_attr_rustfmt.fixed?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -0,0 +1,31 @@\n+// run-rustfix\n+#![feature(stmt_expr_attributes)]\n+\n+#![allow(unused, clippy::no_effect)]\n+#![warn(clippy::deprecated_cfg_attr)]\n+\n+// This doesn't get linted, see known problems\n+#![cfg_attr(rustfmt, rustfmt_skip)]\n+\n+#[rustfmt::skip]\n+trait Foo\n+{\n+fn foo(\n+);\n+}\n+\n+fn skip_on_statements() {\n+    #[rustfmt::skip]\n+    5+3;\n+}\n+\n+#[rustfmt::skip]\n+fn main() {\n+    foo::f();\n+}\n+\n+mod foo {\n+    #![cfg_attr(rustfmt, rustfmt_skip)]\n+\n+    pub fn f() {}\n+}"}, {"sha": "9c0fcf6fb454c4ac00a89b8bcb1b5b34aa58e2cf", "filename": "tests/ui/cfg_attr_rustfmt.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcfg_attr_rustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcfg_attr_rustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcfg_attr_rustfmt.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,14 +1,7 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n+// run-rustfix\n #![feature(stmt_expr_attributes)]\n \n+#![allow(unused, clippy::no_effect)]\n #![warn(clippy::deprecated_cfg_attr)]\n \n // This doesn't get linted, see known problems"}, {"sha": "09971caceea89de25315756b306e18adaca94d10", "filename": "tests/ui/cfg_attr_rustfmt.stderr", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcfg_attr_rustfmt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcfg_attr_rustfmt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcfg_attr_rustfmt.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,22 +1,16 @@\n error: `cfg_attr` is deprecated for rustfmt and got replaced by tool_attributes\n-  --> $DIR/cfg_attr_rustfmt.rs:25:5\n+  --> $DIR/cfg_attr_rustfmt.rs:18:5\n    |\n LL |     #[cfg_attr(rustfmt, rustfmt::skip)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `#[rustfmt::skip]`\n    |\n    = note: `-D clippy::deprecated-cfg-attr` implied by `-D warnings`\n \n error: `cfg_attr` is deprecated for rustfmt and got replaced by tool_attributes\n-  --> $DIR/cfg_attr_rustfmt.rs:29:1\n+  --> $DIR/cfg_attr_rustfmt.rs:22:1\n    |\n LL | #[cfg_attr(rustfmt, rustfmt_skip)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `#[rustfmt::skip]`\n \n-error: `cfg_attr` is deprecated for rustfmt and got replaced by tool_attributes\n-  --> $DIR/cfg_attr_rustfmt.rs:35:5\n-   |\n-LL |     #![cfg_attr(rustfmt, rustfmt_skip)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `#![rustfmt::skip]`\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n "}, {"sha": "211cbfe98f3d421badb441aaaceee6dde713baf9", "filename": "tests/ui/char_lit_as_u8.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fchar_lit_as_u8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fchar_lit_as_u8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchar_lit_as_u8.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::char_lit_as_u8)]\n #![allow(unused_variables)]\n fn main() {"}, {"sha": "52f29a3f553cf48f8404c0785048f682ef89cbcd", "filename": "tests/ui/char_lit_as_u8.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fchar_lit_as_u8.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fchar_lit_as_u8.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchar_lit_as_u8.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,5 +1,5 @@\n error: casting character literal to u8. `char`s are 4 bytes wide in rust, so casting to u8 truncates them\n-  --> $DIR/char_lit_as_u8.rs:13:13\n+  --> $DIR/char_lit_as_u8.rs:4:13\n    |\n LL |     let c = 'a' as u8;\n    |             ^^^^^^^^^"}, {"sha": "21f9e33201f1127709c58e1f31488bef6d30f56a", "filename": "tests/ui/checked_unwrap.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fchecked_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fchecked_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n #![allow(clippy::if_same_then_else)]\n "}, {"sha": "514814b0ee022233b1a845f8b176f21e9ac5d24f", "filename": "tests/ui/checked_unwrap.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fchecked_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fchecked_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,19 +1,19 @@\n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:16:9\n+  --> $DIR/checked_unwrap.rs:7:9\n    |\n LL |     if x.is_some() {\n    |        ----------- the check is happening here\n LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/checked_unwrap.rs:10:35\n+  --> $DIR/checked_unwrap.rs:1:35\n    |\n LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:18:9\n+  --> $DIR/checked_unwrap.rs:9:9\n    |\n LL |     if x.is_some() {\n    |        ----------- because of this check\n@@ -22,21 +22,21 @@ LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/checked_unwrap.rs:10:9\n+  --> $DIR/checked_unwrap.rs:1:9\n    |\n LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:21:9\n+  --> $DIR/checked_unwrap.rs:12:9\n    |\n LL |     if x.is_none() {\n    |        ----------- because of this check\n LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:23:9\n+  --> $DIR/checked_unwrap.rs:14:9\n    |\n LL |     if x.is_none() {\n    |        ----------- the check is happening here\n@@ -45,15 +45,15 @@ LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:27:9\n+  --> $DIR/checked_unwrap.rs:18:9\n    |\n LL |     if x.is_ok() {\n    |        --------- the check is happening here\n LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:28:9\n+  --> $DIR/checked_unwrap.rs:19:9\n    |\n LL |     if x.is_ok() {\n    |        --------- because of this check\n@@ -62,7 +62,7 @@ LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:30:9\n+  --> $DIR/checked_unwrap.rs:21:9\n    |\n LL |     if x.is_ok() {\n    |        --------- because of this check\n@@ -71,7 +71,7 @@ LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:31:9\n+  --> $DIR/checked_unwrap.rs:22:9\n    |\n LL |     if x.is_ok() {\n    |        --------- the check is happening here\n@@ -80,15 +80,15 @@ LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:34:9\n+  --> $DIR/checked_unwrap.rs:25:9\n    |\n LL |     if x.is_err() {\n    |        ---------- because of this check\n LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:35:9\n+  --> $DIR/checked_unwrap.rs:26:9\n    |\n LL |     if x.is_err() {\n    |        ---------- the check is happening here\n@@ -97,7 +97,7 @@ LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:37:9\n+  --> $DIR/checked_unwrap.rs:28:9\n    |\n LL |     if x.is_err() {\n    |        ---------- the check is happening here\n@@ -106,7 +106,7 @@ LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:38:9\n+  --> $DIR/checked_unwrap.rs:29:9\n    |\n LL |     if x.is_err() {\n    |        ---------- because of this check\n@@ -115,15 +115,15 @@ LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:55:9\n+  --> $DIR/checked_unwrap.rs:46:9\n    |\n LL |     if x.is_ok() && y.is_err() {\n    |        --------- the check is happening here\n LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:56:9\n+  --> $DIR/checked_unwrap.rs:47:9\n    |\n LL |     if x.is_ok() && y.is_err() {\n    |        --------- because of this check\n@@ -132,7 +132,7 @@ LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:57:9\n+  --> $DIR/checked_unwrap.rs:48:9\n    |\n LL |     if x.is_ok() && y.is_err() {\n    |                     ---------- because of this check\n@@ -141,7 +141,7 @@ LL |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:58:9\n+  --> $DIR/checked_unwrap.rs:49:9\n    |\n LL |     if x.is_ok() && y.is_err() {\n    |                     ---------- the check is happening here\n@@ -150,7 +150,7 @@ LL |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:72:9\n+  --> $DIR/checked_unwrap.rs:63:9\n    |\n LL |     if x.is_ok() || y.is_ok() {\n    |        --------- because of this check\n@@ -159,7 +159,7 @@ LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:73:9\n+  --> $DIR/checked_unwrap.rs:64:9\n    |\n LL |     if x.is_ok() || y.is_ok() {\n    |        --------- the check is happening here\n@@ -168,7 +168,7 @@ LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:74:9\n+  --> $DIR/checked_unwrap.rs:65:9\n    |\n LL |     if x.is_ok() || y.is_ok() {\n    |                     --------- because of this check\n@@ -177,7 +177,7 @@ LL |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:75:9\n+  --> $DIR/checked_unwrap.rs:66:9\n    |\n LL |     if x.is_ok() || y.is_ok() {\n    |                     --------- the check is happening here\n@@ -186,15 +186,15 @@ LL |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:79:9\n+  --> $DIR/checked_unwrap.rs:70:9\n    |\n LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |        --------- the check is happening here\n LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:80:9\n+  --> $DIR/checked_unwrap.rs:71:9\n    |\n LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |        --------- because of this check\n@@ -203,7 +203,7 @@ LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:81:9\n+  --> $DIR/checked_unwrap.rs:72:9\n    |\n LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                       --------- because of this check\n@@ -212,7 +212,7 @@ LL |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:82:9\n+  --> $DIR/checked_unwrap.rs:73:9\n    |\n LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                       --------- the check is happening here\n@@ -221,7 +221,7 @@ LL |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:83:9\n+  --> $DIR/checked_unwrap.rs:74:9\n    |\n LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                                    ---------- the check is happening here\n@@ -230,7 +230,7 @@ LL |         z.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:84:9\n+  --> $DIR/checked_unwrap.rs:75:9\n    |\n LL |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                                    ---------- because of this check\n@@ -239,7 +239,7 @@ LL |         z.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:92:9\n+  --> $DIR/checked_unwrap.rs:83:9\n    |\n LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |        --------- because of this check\n@@ -248,7 +248,7 @@ LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:93:9\n+  --> $DIR/checked_unwrap.rs:84:9\n    |\n LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |        --------- the check is happening here\n@@ -257,7 +257,7 @@ LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:94:9\n+  --> $DIR/checked_unwrap.rs:85:9\n    |\n LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                       --------- the check is happening here\n@@ -266,7 +266,7 @@ LL |         y.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:95:9\n+  --> $DIR/checked_unwrap.rs:86:9\n    |\n LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                       --------- because of this check\n@@ -275,7 +275,7 @@ LL |         y.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:96:9\n+  --> $DIR/checked_unwrap.rs:87:9\n    |\n LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                                    ---------- because of this check\n@@ -284,7 +284,7 @@ LL |         z.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:97:9\n+  --> $DIR/checked_unwrap.rs:88:9\n    |\n LL |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                                    ---------- the check is happening here\n@@ -293,15 +293,15 @@ LL |         z.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:105:13\n+  --> $DIR/checked_unwrap.rs:96:13\n    |\n LL |         if x.is_some() {\n    |            ----------- the check is happening here\n LL |             x.unwrap(); // unnecessary\n    |             ^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:107:13\n+  --> $DIR/checked_unwrap.rs:98:13\n    |\n LL |         if x.is_some() {\n    |            ----------- because of this check"}, {"sha": "8f9f2a0db8c437df5e8eaa9dc41315fdfcf2510d", "filename": "tests/ui/clone_on_copy_impl.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fclone_on_copy_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fclone_on_copy_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclone_on_copy_impl.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::fmt;\n use std::marker::PhantomData;\n "}, {"sha": "3cbbcb7c08305c7f1b0d00a47abfbd7137f45283", "filename": "tests/ui/clone_on_copy_mut.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fclone_on_copy_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fclone_on_copy_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclone_on_copy_mut.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n pub fn dec_read_dec(i: &mut i32) -> i32 {\n     *i -= 1;\n     let ret = *i;"}, {"sha": "33e039308ece0c7c1f21b77baf6250067eff92dd", "filename": "tests/ui/cmp_nan.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcmp_nan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcmp_nan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_nan.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[warn(clippy::cmp_nan)]\n #[allow(clippy::float_cmp, clippy::no_effect, clippy::unnecessary_operation)]\n fn main() {"}, {"sha": "421f3451823d3aa8be772a96a6b092ef0f41fb10", "filename": "tests/ui/cmp_nan.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcmp_nan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcmp_nan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_nan.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,73 +1,73 @@\n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:14:5\n+  --> $DIR/cmp_nan.rs:5:5\n    |\n LL |     x == std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cmp-nan` implied by `-D warnings`\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:15:5\n+  --> $DIR/cmp_nan.rs:6:5\n    |\n LL |     x != std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:16:5\n+  --> $DIR/cmp_nan.rs:7:5\n    |\n LL |     x < std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:17:5\n+  --> $DIR/cmp_nan.rs:8:5\n    |\n LL |     x > std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:18:5\n+  --> $DIR/cmp_nan.rs:9:5\n    |\n LL |     x <= std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:19:5\n+  --> $DIR/cmp_nan.rs:10:5\n    |\n LL |     x >= std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:22:5\n+  --> $DIR/cmp_nan.rs:13:5\n    |\n LL |     y == std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:23:5\n+  --> $DIR/cmp_nan.rs:14:5\n    |\n LL |     y != std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:24:5\n+  --> $DIR/cmp_nan.rs:15:5\n    |\n LL |     y < std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:25:5\n+  --> $DIR/cmp_nan.rs:16:5\n    |\n LL |     y > std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:26:5\n+  --> $DIR/cmp_nan.rs:17:5\n    |\n LL |     y <= std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:27:5\n+  --> $DIR/cmp_nan.rs:18:5\n    |\n LL |     y >= std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^"}, {"sha": "2d2d04178c35d21bc04ed1d1526c9a4378563fde", "filename": "tests/ui/cmp_null.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcmp_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcmp_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_null.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::cmp_null)]\n #![allow(unused_mut)]\n "}, {"sha": "063e716676ce49ffe85c9b5f3f8600b413f14ee9", "filename": "tests/ui/cmp_null.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcmp_null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcmp_null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_null.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,13 +1,13 @@\n error: Comparing with null is better expressed by the .is_null() method\n-  --> $DIR/cmp_null.rs:18:8\n+  --> $DIR/cmp_null.rs:9:8\n    |\n LL |     if p == ptr::null() {\n    |        ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cmp-null` implied by `-D warnings`\n \n error: Comparing with null is better expressed by the .is_null() method\n-  --> $DIR/cmp_null.rs:23:8\n+  --> $DIR/cmp_null.rs:14:8\n    |\n LL |     if m == ptr::null_mut() {\n    |        ^^^^^^^^^^^^^^^^^^^^"}, {"sha": "a5f92b30bc2ba7de63a8eb041c3f3475ff184c68", "filename": "tests/ui/cmp_owned.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcmp_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcmp_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[warn(clippy::cmp_owned)]\n #[allow(clippy::unnecessary_operation)]\n fn main() {"}, {"sha": "9be749f8d04046f4ff89aeeec70e2bb1e0b023c8", "filename": "tests/ui/cmp_owned.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcmp_owned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcmp_owned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,55 +1,55 @@\n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:14:14\n+  --> $DIR/cmp_owned.rs:5:14\n    |\n LL |         x != \"foo\".to_string();\n    |              ^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n    |\n    = note: `-D clippy::cmp-owned` implied by `-D warnings`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:16:9\n+  --> $DIR/cmp_owned.rs:7:9\n    |\n LL |         \"foo\".to_string() != x;\n    |         ^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:23:10\n+  --> $DIR/cmp_owned.rs:14:10\n    |\n LL |     x != \"foo\".to_owned();\n    |          ^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:25:10\n+  --> $DIR/cmp_owned.rs:16:10\n    |\n LL |     x != String::from(\"foo\");\n    |          ^^^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:29:5\n+  --> $DIR/cmp_owned.rs:20:5\n    |\n LL |     Foo.to_owned() == Foo;\n    |     ^^^^^^^^^^^^^^ help: try: `Foo`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:31:30\n+  --> $DIR/cmp_owned.rs:22:30\n    |\n LL |     \"abc\".chars().filter(|c| c.to_owned() != 'X');\n    |                              ^^^^^^^^^^^^ help: try: `*c`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:38:5\n+  --> $DIR/cmp_owned.rs:29:5\n    |\n LL |     y.to_owned() == *x;\n    |     ^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:43:5\n+  --> $DIR/cmp_owned.rs:34:5\n    |\n LL |     y.to_owned() == **x;\n    |     ^^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:50:9\n+  --> $DIR/cmp_owned.rs:41:9\n    |\n LL |         self.to_owned() == *other\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating"}, {"sha": "2c6dd95a637990a03965fde79a6f0b2eedaccf93", "filename": "tests/ui/collapsible_if.fixed", "status": "added", "additions": 175, "deletions": 0, "changes": 175, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcollapsible_if.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcollapsible_if.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.fixed?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -0,0 +1,175 @@\n+// run-rustfix\n+#![allow(clippy::cyclomatic_complexity)]\n+\n+#[rustfmt::skip]\n+#[warn(clippy::collapsible_if)]\n+fn main() {\n+    let x = \"hello\";\n+    let y = \"world\";\n+    if x == \"hello\" && y == \"world\" {\n+    println!(\"Hello world!\");\n+}\n+\n+    if (x == \"hello\" || x == \"world\") && (y == \"world\" || y == \"hello\") {\n+    println!(\"Hello world!\");\n+}\n+\n+    if x == \"hello\" && x == \"world\" && (y == \"world\" || y == \"hello\") {\n+    println!(\"Hello world!\");\n+}\n+\n+    if (x == \"hello\" || x == \"world\") && y == \"world\" && y == \"hello\" {\n+    println!(\"Hello world!\");\n+}\n+\n+    if x == \"hello\" && x == \"world\" && y == \"world\" && y == \"hello\" {\n+    println!(\"Hello world!\");\n+}\n+\n+    if 42 == 1337 && 'a' != 'A' {\n+    println!(\"world!\")\n+}\n+\n+    // Collapse `else { if .. }` to `else if ..`\n+    if x == \"hello\" {\n+        print!(\"Hello \");\n+    } else if y == \"world\" {\n+    println!(\"world!\")\n+}\n+\n+    if x == \"hello\" {\n+        print!(\"Hello \");\n+    } else if let Some(42) = Some(42) {\n+    println!(\"world!\")\n+}\n+\n+    if x == \"hello\" {\n+        print!(\"Hello \");\n+    } else if y == \"world\" {\n+    println!(\"world\")\n+}\n+else {\n+    println!(\"!\")\n+}\n+\n+    if x == \"hello\" {\n+        print!(\"Hello \");\n+    } else if let Some(42) = Some(42) {\n+    println!(\"world\")\n+}\n+else {\n+    println!(\"!\")\n+}\n+\n+    if let Some(42) = Some(42) {\n+        print!(\"Hello \");\n+    } else if let Some(42) = Some(42) {\n+    println!(\"world\")\n+}\n+else {\n+    println!(\"!\")\n+}\n+\n+    if let Some(42) = Some(42) {\n+        print!(\"Hello \");\n+    } else if x == \"hello\" {\n+    println!(\"world\")\n+}\n+else {\n+    println!(\"!\")\n+}\n+\n+    if let Some(42) = Some(42) {\n+        print!(\"Hello \");\n+    } else if let Some(42) = Some(42) {\n+    println!(\"world\")\n+}\n+else {\n+    println!(\"!\")\n+}\n+\n+    // Works because any if with an else statement cannot be collapsed.\n+    if x == \"hello\" {\n+        if y == \"world\" {\n+            println!(\"Hello world!\");\n+        }\n+    } else {\n+        println!(\"Not Hello world\");\n+    }\n+\n+    if x == \"hello\" {\n+        if y == \"world\" {\n+            println!(\"Hello world!\");\n+        } else {\n+            println!(\"Hello something else\");\n+        }\n+    }\n+\n+    if x == \"hello\" {\n+        print!(\"Hello \");\n+        if y == \"world\" {\n+            println!(\"world!\")\n+        }\n+    }\n+\n+    if true {\n+    } else {\n+        assert!(true); // assert! is just an `if`\n+    }\n+\n+\n+    // The following tests check for the fix of https://github.com/rust-lang/rust-clippy/issues/798\n+    if x == \"hello\" {// Not collapsible\n+        if y == \"world\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n+\n+    if x == \"hello\" { // Not collapsible\n+        if y == \"world\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n+\n+    if x == \"hello\" {\n+        // Not collapsible\n+        if y == \"world\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n+\n+    if x == \"hello\" && y == \"world\" { // Collapsible\n+    println!(\"Hello world!\");\n+}\n+\n+    if x == \"hello\" {\n+        print!(\"Hello \");\n+    } else {\n+        // Not collapsible\n+        if y == \"world\" {\n+            println!(\"world!\")\n+        }\n+    }\n+\n+    if x == \"hello\" {\n+        print!(\"Hello \");\n+    } else {\n+        // Not collapsible\n+        if let Some(42) = Some(42) {\n+            println!(\"world!\")\n+        }\n+    }\n+\n+    if x == \"hello\" {\n+        /* Not collapsible */\n+        if y == \"world\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n+\n+    if x == \"hello\" { /* Not collapsible */\n+        if y == \"world\" {\n+            println!(\"Hello world!\");\n+        }\n+    }\n+}"}, {"sha": "f482d7704def92b7103bc9dafb6251944feb84c2", "filename": "tests/ui/collapsible_if.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,11 +1,5 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n+// run-rustfix\n+#![allow(clippy::cyclomatic_complexity)]\n \n #[rustfmt::skip]\n #[warn(clippy::collapsible_if)]"}, {"sha": "d6d0b9d5d4eaa276de835167837ef68718173354", "filename": "tests/ui/collapsible_if.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcollapsible_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcollapsible_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,5 +1,5 @@\n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:15:5\n+  --> $DIR/collapsible_if.rs:9:5\n    |\n LL | /     if x == \"hello\" {\n LL | |         if y == \"world\" {\n@@ -17,7 +17,7 @@ LL | }\n    |\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:21:5\n+  --> $DIR/collapsible_if.rs:15:5\n    |\n LL | /     if x == \"hello\" || x == \"world\" {\n LL | |         if y == \"world\" || y == \"hello\" {\n@@ -33,7 +33,7 @@ LL | }\n    |\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:27:5\n+  --> $DIR/collapsible_if.rs:21:5\n    |\n LL | /     if x == \"hello\" && x == \"world\" {\n LL | |         if y == \"world\" || y == \"hello\" {\n@@ -49,7 +49,7 @@ LL | }\n    |\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:33:5\n+  --> $DIR/collapsible_if.rs:27:5\n    |\n LL | /     if x == \"hello\" || x == \"world\" {\n LL | |         if y == \"world\" && y == \"hello\" {\n@@ -65,7 +65,7 @@ LL | }\n    |\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:39:5\n+  --> $DIR/collapsible_if.rs:33:5\n    |\n LL | /     if x == \"hello\" && x == \"world\" {\n LL | |         if y == \"world\" && y == \"hello\" {\n@@ -81,7 +81,7 @@ LL | }\n    |\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:45:5\n+  --> $DIR/collapsible_if.rs:39:5\n    |\n LL | /     if 42 == 1337 {\n LL | |         if 'a' != 'A' {\n@@ -97,7 +97,7 @@ LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:54:12\n+  --> $DIR/collapsible_if.rs:48:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -114,7 +114,7 @@ LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:62:12\n+  --> $DIR/collapsible_if.rs:56:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -131,7 +131,7 @@ LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:70:12\n+  --> $DIR/collapsible_if.rs:64:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -153,7 +153,7 @@ LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:81:12\n+  --> $DIR/collapsible_if.rs:75:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -175,7 +175,7 @@ LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:92:12\n+  --> $DIR/collapsible_if.rs:86:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -197,7 +197,7 @@ LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:103:12\n+  --> $DIR/collapsible_if.rs:97:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -219,7 +219,7 @@ LL | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:114:12\n+  --> $DIR/collapsible_if.rs:108:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -241,7 +241,7 @@ LL | }\n    |\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:173:5\n+  --> $DIR/collapsible_if.rs:167:5\n    |\n LL | /     if x == \"hello\" {\n LL | |         if y == \"world\" { // Collapsible"}, {"sha": "cfece3768ef853861b5d86a02d3b207f695de620", "filename": "tests/ui/complex_types.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcomplex_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcomplex_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomplex_types.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::all)]\n #![allow(unused, clippy::needless_pass_by_value)]\n #![feature(associated_type_defaults)]"}, {"sha": "8f5dbd27956c5326e60aae886b8bc9ddd4cc2fb0", "filename": "tests/ui/complex_types.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcomplex_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcomplex_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomplex_types.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,91 +1,91 @@\n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:16:12\n+  --> $DIR/complex_types.rs:7:12\n    |\n LL | const CST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::type-complexity` implied by `-D warnings`\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:17:12\n+  --> $DIR/complex_types.rs:8:12\n    |\n LL | static ST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:20:8\n+  --> $DIR/complex_types.rs:11:8\n    |\n LL |     f: Vec<Vec<Box<(u32, u32, u32, u32)>>>,\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:23:11\n+  --> $DIR/complex_types.rs:14:11\n    |\n LL | struct TS(Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:26:11\n+  --> $DIR/complex_types.rs:17:11\n    |\n LL |     Tuple(Vec<Vec<Box<(u32, u32, u32, u32)>>>),\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:27:17\n+  --> $DIR/complex_types.rs:18:17\n    |\n LL |     Struct { f: Vec<Vec<Box<(u32, u32, u32, u32)>>> },\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:31:14\n+  --> $DIR/complex_types.rs:22:14\n    |\n LL |     const A: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:32:30\n+  --> $DIR/complex_types.rs:23:30\n    |\n LL |     fn impl_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:36:14\n+  --> $DIR/complex_types.rs:27:14\n    |\n LL |     const A: Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:37:14\n+  --> $DIR/complex_types.rs:28:14\n    |\n LL |     type B = Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:38:25\n+  --> $DIR/complex_types.rs:29:25\n    |\n LL |     fn method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:39:29\n+  --> $DIR/complex_types.rs:30:29\n    |\n LL |     fn def_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:42:15\n+  --> $DIR/complex_types.rs:33:15\n    |\n LL | fn test1() -> Vec<Vec<Box<(u32, u32, u32, u32)>>> {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:46:14\n+  --> $DIR/complex_types.rs:37:14\n    |\n LL | fn test2(_x: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:49:13\n+  --> $DIR/complex_types.rs:40:13\n    |\n LL |     let _y: Vec<Vec<Box<(u32, u32, u32, u32)>>> = vec![];\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "745821a1503c9e92484912a652175cdd7d5abea6", "filename": "tests/ui/const_static_lifetime.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fconst_static_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fconst_static_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_static_lifetime.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[derive(Debug)]\n struct Foo {}\n "}, {"sha": "c329e860558e31741fab5e5ba9d1fd582457ec99", "filename": "tests/ui/const_static_lifetime.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fconst_static_lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fconst_static_lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_static_lifetime.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,79 +1,79 @@\n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:13:17\n+  --> $DIR/const_static_lifetime.rs:4:17\n    |\n LL | const VAR_ONE: &'static str = \"Test constant #1\"; // ERROR Consider removing 'static.\n    |                -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = note: `-D clippy::const-static-lifetime` implied by `-D warnings`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:17:21\n+  --> $DIR/const_static_lifetime.rs:8:21\n    |\n LL | const VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n    |                    -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:19:32\n+  --> $DIR/const_static_lifetime.rs:10:32\n    |\n LL | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n    |                               -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:19:47\n+  --> $DIR/const_static_lifetime.rs:10:47\n    |\n LL | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n    |                                              -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:21:18\n+  --> $DIR/const_static_lifetime.rs:12:18\n    |\n LL | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n    |                 -^^^^^^^------------------ help: consider removing `'static`: `&[&[&'static str]]`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:21:30\n+  --> $DIR/const_static_lifetime.rs:12:30\n    |\n LL | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n    |                             -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:23:17\n+  --> $DIR/const_static_lifetime.rs:14:17\n    |\n LL | const VAR_SIX: &'static u8 = &5;\n    |                -^^^^^^^--- help: consider removing `'static`: `&u8`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:25:29\n+  --> $DIR/const_static_lifetime.rs:16:29\n    |\n LL | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n    |                            -^^^^^^^--------------- help: consider removing `'static`: `&[&'static str]`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:25:39\n+  --> $DIR/const_static_lifetime.rs:16:39\n    |\n LL | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n    |                                      -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:27:20\n+  --> $DIR/const_static_lifetime.rs:18:20\n    |\n LL | const VAR_HEIGHT: &'static Foo = &Foo {};\n    |                   -^^^^^^^---- help: consider removing `'static`: `&Foo`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:29:19\n+  --> $DIR/const_static_lifetime.rs:20:19\n    |\n LL | const VAR_SLICE: &'static [u8] = b\"Test constant #1\"; // ERROR Consider removing 'static.\n    |                  -^^^^^^^----- help: consider removing `'static`: `&[u8]`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:31:19\n+  --> $DIR/const_static_lifetime.rs:22:19\n    |\n LL | const VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n    |                  -^^^^^^^--------- help: consider removing `'static`: `&(u8, u8)`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:33:19\n+  --> $DIR/const_static_lifetime.rs:24:19\n    |\n LL | const VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n    |                  -^^^^^^^-------- help: consider removing `'static`: `&[u8; 1]`"}, {"sha": "a78209bcce8c28437eeb2b59f64825fab064e6e6", "filename": "tests/ui/copies.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(\n     clippy::blacklisted_name,\n     clippy::collapsible_if,"}, {"sha": "a0a5c3890edc3512a03c6f44b68636646102be6d", "filename": "tests/ui/copies.stderr", "status": "modified", "additions": 41, "deletions": 41, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcopies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcopies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,5 +1,5 @@\n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:50:12\n+  --> $DIR/copies.rs:41:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -13,7 +13,7 @@ LL | |     }\n    |\n    = note: `-D clippy::if-same-then-else` implied by `-D warnings`\n note: same as this\n-  --> $DIR/copies.rs:42:13\n+  --> $DIR/copies.rs:33:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -26,7 +26,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `match` has identical arm bodies\n-  --> $DIR/copies.rs:96:14\n+  --> $DIR/copies.rs:87:14\n    |\n LL |           _ => {\n    |  ______________^\n@@ -40,7 +40,7 @@ LL | |         },\n    |\n    = note: `-D clippy::match-same-arms` implied by `-D warnings`\n note: same as this\n-  --> $DIR/copies.rs:87:15\n+  --> $DIR/copies.rs:78:15\n    |\n LL |           42 => {\n    |  _______________^\n@@ -52,7 +52,7 @@ LL | |             a\n LL | |         },\n    | |_________^\n note: `42` has the same arm body as the `_` wildcard, consider removing it`\n-  --> $DIR/copies.rs:87:15\n+  --> $DIR/copies.rs:78:15\n    |\n LL |           42 => {\n    |  _______________^\n@@ -65,24 +65,24 @@ LL | |         },\n    | |_________^\n \n error: this `match` has identical arm bodies\n-  --> $DIR/copies.rs:111:14\n+  --> $DIR/copies.rs:102:14\n    |\n LL |         _ => 0, //~ ERROR match arms have same body\n    |              ^\n    |\n note: same as this\n-  --> $DIR/copies.rs:109:19\n+  --> $DIR/copies.rs:100:19\n    |\n LL |         Abc::A => 0,\n    |                   ^\n note: `Abc::A` has the same arm body as the `_` wildcard, consider removing it`\n-  --> $DIR/copies.rs:109:19\n+  --> $DIR/copies.rs:100:19\n    |\n LL |         Abc::A => 0,\n    |                   ^\n \n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:120:12\n+  --> $DIR/copies.rs:111:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -92,7 +92,7 @@ LL | |     };\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/copies.rs:118:21\n+  --> $DIR/copies.rs:109:21\n    |\n LL |       let _ = if true {\n    |  _____________________^\n@@ -101,7 +101,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:134:12\n+  --> $DIR/copies.rs:125:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -114,7 +114,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/copies.rs:125:13\n+  --> $DIR/copies.rs:116:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -127,7 +127,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:153:12\n+  --> $DIR/copies.rs:144:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -140,7 +140,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/copies.rs:146:13\n+  --> $DIR/copies.rs:137:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -153,7 +153,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:183:12\n+  --> $DIR/copies.rs:174:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -163,7 +163,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/copies.rs:181:13\n+  --> $DIR/copies.rs:172:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -172,7 +172,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:190:12\n+  --> $DIR/copies.rs:181:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -182,7 +182,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/copies.rs:188:13\n+  --> $DIR/copies.rs:179:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -191,92 +191,92 @@ LL | |     } else {\n    | |_____^\n \n error: this `match` has identical arm bodies\n-  --> $DIR/copies.rs:239:15\n+  --> $DIR/copies.rs:230:15\n    |\n LL |         51 => foo(), //~ ERROR match arms have same body\n    |               ^^^^^\n    |\n note: same as this\n-  --> $DIR/copies.rs:238:15\n+  --> $DIR/copies.rs:229:15\n    |\n LL |         42 => foo(),\n    |               ^^^^^\n note: consider refactoring into `42 | 51`\n-  --> $DIR/copies.rs:238:15\n+  --> $DIR/copies.rs:229:15\n    |\n LL |         42 => foo(),\n    |               ^^^^^\n \n error: this `match` has identical arm bodies\n-  --> $DIR/copies.rs:245:17\n+  --> $DIR/copies.rs:236:17\n    |\n LL |         None => 24, //~ ERROR match arms have same body\n    |                 ^^\n    |\n note: same as this\n-  --> $DIR/copies.rs:244:20\n+  --> $DIR/copies.rs:235:20\n    |\n LL |         Some(_) => 24,\n    |                    ^^\n note: consider refactoring into `Some(_) | None`\n-  --> $DIR/copies.rs:244:20\n+  --> $DIR/copies.rs:235:20\n    |\n LL |         Some(_) => 24,\n    |                    ^^\n \n error: this `match` has identical arm bodies\n-  --> $DIR/copies.rs:267:28\n+  --> $DIR/copies.rs:258:28\n    |\n LL |         (None, Some(a)) => bar(a), //~ ERROR match arms have same body\n    |                            ^^^^^^\n    |\n note: same as this\n-  --> $DIR/copies.rs:266:28\n+  --> $DIR/copies.rs:257:28\n    |\n LL |         (Some(a), None) => bar(a),\n    |                            ^^^^^^\n note: consider refactoring into `(Some(a), None) | (None, Some(a))`\n-  --> $DIR/copies.rs:266:28\n+  --> $DIR/copies.rs:257:28\n    |\n LL |         (Some(a), None) => bar(a),\n    |                            ^^^^^^\n \n error: this `match` has identical arm bodies\n-  --> $DIR/copies.rs:273:26\n+  --> $DIR/copies.rs:264:26\n    |\n LL |         (.., Some(a)) => bar(a), //~ ERROR match arms have same body\n    |                          ^^^^^^\n    |\n note: same as this\n-  --> $DIR/copies.rs:272:26\n+  --> $DIR/copies.rs:263:26\n    |\n LL |         (Some(a), ..) => bar(a),\n    |                          ^^^^^^\n note: consider refactoring into `(Some(a), ..) | (.., Some(a))`\n-  --> $DIR/copies.rs:272:26\n+  --> $DIR/copies.rs:263:26\n    |\n LL |         (Some(a), ..) => bar(a),\n    |                          ^^^^^^\n \n error: this `match` has identical arm bodies\n-  --> $DIR/copies.rs:279:20\n+  --> $DIR/copies.rs:270:20\n    |\n LL |         (.., 3) => 42, //~ ERROR match arms have same body\n    |                    ^^\n    |\n note: same as this\n-  --> $DIR/copies.rs:278:23\n+  --> $DIR/copies.rs:269:23\n    |\n LL |         (1, .., 3) => 42,\n    |                       ^^\n note: consider refactoring into `(1, .., 3) | (.., 3)`\n-  --> $DIR/copies.rs:278:23\n+  --> $DIR/copies.rs:269:23\n    |\n LL |         (1, .., 3) => 42,\n    |                       ^^\n \n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:285:12\n+  --> $DIR/copies.rs:276:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -286,7 +286,7 @@ LL | |     };\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/copies.rs:283:21\n+  --> $DIR/copies.rs:274:21\n    |\n LL |       let _ = if true {\n    |  _____________________^\n@@ -295,7 +295,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:292:12\n+  --> $DIR/copies.rs:283:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -305,7 +305,7 @@ LL | |     };\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/copies.rs:290:21\n+  --> $DIR/copies.rs:281:21\n    |\n LL |       let _ = if true {\n    |  _____________________^\n@@ -314,7 +314,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:305:12\n+  --> $DIR/copies.rs:296:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -324,7 +324,7 @@ LL | |     };\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/copies.rs:303:21\n+  --> $DIR/copies.rs:294:21\n    |\n LL |       let _ = if true {\n    |  _____________________^\n@@ -333,7 +333,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:323:12\n+  --> $DIR/copies.rs:314:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -343,7 +343,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/copies.rs:321:13\n+  --> $DIR/copies.rs:312:13\n    |\n LL |       if true {\n    |  _____________^"}, {"sha": "e3d5928be231b3d18ef3e0509c779b8ee948db74", "filename": "tests/ui/copy_iterator.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcopy_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcopy_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopy_iterator.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::copy_iterator)]\n \n #[derive(Copy, Clone)]"}, {"sha": "f8ce6af7961a6148bb94eaae5b9815cd8f1617dd", "filename": "tests/ui/copy_iterator.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcopy_iterator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcopy_iterator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopy_iterator.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,5 +1,5 @@\n error: you are implementing `Iterator` on a `Copy` type\n-  --> $DIR/copy_iterator.rs:15:1\n+  --> $DIR/copy_iterator.rs:6:1\n    |\n LL | / impl Iterator for Countdown {\n LL | |     type Item = u8;"}, {"sha": "6cc36518e27ba7be4f817bc693c4de96bafb353d", "filename": "tests/ui/cstring.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcstring.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n fn main() {}\n \n #[allow(clippy::result_unwrap_used)]"}, {"sha": "a2fc07d4af0dff604c374cfe9f786686be66e1f4", "filename": "tests/ui/cstring.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcstring.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcstring.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcstring.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,13 +1,13 @@\n error: you are getting the inner pointer of a temporary `CString`\n-  --> $DIR/cstring.rs:16:5\n+  --> $DIR/cstring.rs:7:5\n    |\n LL |     CString::new(\"foo\").unwrap().as_ptr();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(clippy::temporary_cstring_as_ptr)] on by default\n    = note: that pointer will be invalid outside this expression\n help: assign the `CString` to a variable to extend its lifetime\n-  --> $DIR/cstring.rs:16:5\n+  --> $DIR/cstring.rs:7:5\n    |\n LL |     CString::new(\"foo\").unwrap().as_ptr();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "d552ef50ff0b7359bd0e13470c934d9f33d9661f", "filename": "tests/ui/cyclomatic_complexity.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcyclomatic_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcyclomatic_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![allow(clippy::all)]\n #![warn(clippy::cyclomatic_complexity)]\n #![allow(unused)]"}, {"sha": "944bba6e488c61c8ebb35476d663825a6fe4197c", "filename": "tests/ui/cyclomatic_complexity.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcyclomatic_complexity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcyclomatic_complexity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,5 +1,5 @@\n error: the function has a cyclomatic complexity of 28\n-  --> $DIR/cyclomatic_complexity.rs:15:1\n+  --> $DIR/cyclomatic_complexity.rs:6:1\n    |\n LL | / fn main() {\n LL | |     if true {\n@@ -14,7 +14,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 7\n-  --> $DIR/cyclomatic_complexity.rs:100:1\n+  --> $DIR/cyclomatic_complexity.rs:91:1\n    |\n LL | / fn kaboom() {\n LL | |     let n = 0;\n@@ -28,7 +28,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-  --> $DIR/cyclomatic_complexity.rs:146:1\n+  --> $DIR/cyclomatic_complexity.rs:137:1\n    |\n LL | / fn lots_of_short_circuits() -> bool {\n LL | |     true && false && true && false && true && false && true\n@@ -38,7 +38,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-  --> $DIR/cyclomatic_complexity.rs:151:1\n+  --> $DIR/cyclomatic_complexity.rs:142:1\n    |\n LL | / fn lots_of_short_circuits2() -> bool {\n LL | |     true || false || true || false || true || false || true\n@@ -48,7 +48,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-  --> $DIR/cyclomatic_complexity.rs:156:1\n+  --> $DIR/cyclomatic_complexity.rs:147:1\n    |\n LL | / fn baa() {\n LL | |     let x = || match 99 {\n@@ -62,7 +62,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-  --> $DIR/cyclomatic_complexity.rs:157:13\n+  --> $DIR/cyclomatic_complexity.rs:148:13\n    |\n LL |       let x = || match 99 {\n    |  _____________^\n@@ -77,7 +77,7 @@ LL | |     };\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-  --> $DIR/cyclomatic_complexity.rs:174:1\n+  --> $DIR/cyclomatic_complexity.rs:165:1\n    |\n LL | / fn bar() {\n LL | |     match 99 {\n@@ -90,7 +90,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-  --> $DIR/cyclomatic_complexity.rs:193:1\n+  --> $DIR/cyclomatic_complexity.rs:184:1\n    |\n LL | / fn barr() {\n LL | |     match 99 {\n@@ -104,7 +104,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 3\n-  --> $DIR/cyclomatic_complexity.rs:203:1\n+  --> $DIR/cyclomatic_complexity.rs:194:1\n    |\n LL | / fn barr2() {\n LL | |     match 99 {\n@@ -118,7 +118,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-  --> $DIR/cyclomatic_complexity.rs:219:1\n+  --> $DIR/cyclomatic_complexity.rs:210:1\n    |\n LL | / fn barrr() {\n LL | |     match 99 {\n@@ -132,7 +132,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 3\n-  --> $DIR/cyclomatic_complexity.rs:229:1\n+  --> $DIR/cyclomatic_complexity.rs:220:1\n    |\n LL | / fn barrr2() {\n LL | |     match 99 {\n@@ -146,7 +146,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-  --> $DIR/cyclomatic_complexity.rs:245:1\n+  --> $DIR/cyclomatic_complexity.rs:236:1\n    |\n LL | / fn barrrr() {\n LL | |     match 99 {\n@@ -160,7 +160,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 3\n-  --> $DIR/cyclomatic_complexity.rs:255:1\n+  --> $DIR/cyclomatic_complexity.rs:246:1\n    |\n LL | / fn barrrr2() {\n LL | |     match 99 {\n@@ -174,7 +174,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-  --> $DIR/cyclomatic_complexity.rs:271:1\n+  --> $DIR/cyclomatic_complexity.rs:262:1\n    |\n LL | / fn cake() {\n LL | |     if 4 == 5 {\n@@ -188,7 +188,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 4\n-  --> $DIR/cyclomatic_complexity.rs:281:1\n+  --> $DIR/cyclomatic_complexity.rs:272:1\n    |\n LL | / pub fn read_file(input_path: &str) -> String {\n LL | |     use std::fs::File;\n@@ -202,7 +202,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-  --> $DIR/cyclomatic_complexity.rs:312:1\n+  --> $DIR/cyclomatic_complexity.rs:303:1\n    |\n LL | / fn void(void: Void) {\n LL | |     if true {\n@@ -214,7 +214,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-  --> $DIR/cyclomatic_complexity.rs:325:1\n+  --> $DIR/cyclomatic_complexity.rs:316:1\n    |\n LL | / fn try() -> Result<i32, &'static str> {\n LL | |     match 5 {\n@@ -227,7 +227,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-  --> $DIR/cyclomatic_complexity.rs:333:1\n+  --> $DIR/cyclomatic_complexity.rs:324:1\n    |\n LL | / fn try_again() -> Result<i32, &'static str> {\n LL | |     let _ = try!(Ok(42));\n@@ -241,7 +241,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-  --> $DIR/cyclomatic_complexity.rs:349:1\n+  --> $DIR/cyclomatic_complexity.rs:340:1\n    |\n LL | / fn early() -> Result<i32, &'static str> {\n LL | |     return Ok(5);\n@@ -255,7 +255,7 @@ LL | | }\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 8\n-  --> $DIR/cyclomatic_complexity.rs:363:1\n+  --> $DIR/cyclomatic_complexity.rs:354:1\n    |\n LL | / fn early_ret() -> i32 {\n LL | |     let a = if true { 42 } else { return 0; };"}, {"sha": "8b5028557d9001dc20c77bcf1f9946bdfa546afd", "filename": "tests/ui/cyclomatic_complexity_attr_used.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcyclomatic_complexity_attr_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcyclomatic_complexity_attr_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity_attr_used.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::cyclomatic_complexity)]\n #![warn(unused)]\n "}, {"sha": "7b7321197740c13f63ef4bd545ce98ddcca9a41d", "filename": "tests/ui/cyclomatic_complexity_attr_used.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,5 +1,5 @@\n error: the function has a cyclomatic complexity of 3\n-  --> $DIR/cyclomatic_complexity_attr_used.rs:18:1\n+  --> $DIR/cyclomatic_complexity_attr_used.rs:9:1\n    |\n LL | / fn kaboom() {\n LL | |     if 42 == 43 {"}, {"sha": "d841f16757a54d8d9d214164c1e23b4ec547dbb9", "filename": "tests/ui/decimal_literal_representation.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdecimal_literal_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdecimal_literal_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdecimal_literal_representation.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[warn(clippy::decimal_literal_representation)]\n #[allow(unused_variables)]\n #[rustfmt::skip]"}, {"sha": "3a535def1971290ebddf2ca5f6a50c2f83d0471d", "filename": "tests/ui/decimal_literal_representation.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdecimal_literal_representation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdecimal_literal_representation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdecimal_literal_representation.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,31 +1,31 @@\n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:25:9\n+  --> $DIR/decimal_literal_representation.rs:16:9\n    |\n LL |         32_773,        // 0x8005\n    |         ^^^^^^ help: consider: `0x8005`\n    |\n    = note: `-D clippy::decimal-literal-representation` implied by `-D warnings`\n \n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:26:9\n+  --> $DIR/decimal_literal_representation.rs:17:9\n    |\n LL |         65_280,        // 0xFF00\n    |         ^^^^^^ help: consider: `0xFF00`\n \n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:27:9\n+  --> $DIR/decimal_literal_representation.rs:18:9\n    |\n LL |         2_131_750_927, // 0x7F0F_F00F\n    |         ^^^^^^^^^^^^^ help: consider: `0x7F0F_F00F`\n \n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:28:9\n+  --> $DIR/decimal_literal_representation.rs:19:9\n    |\n LL |         2_147_483_647, // 0x7FFF_FFFF\n    |         ^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF`\n \n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:29:9\n+  --> $DIR/decimal_literal_representation.rs:20:9\n    |\n LL |         4_042_322_160, // 0xF0F0_F0F0\n    |         ^^^^^^^^^^^^^ help: consider: `0xF0F0_F0F0`"}, {"sha": "2f1490a70369e267a340f726fd9227cd3d9fe6b6", "filename": "tests/ui/default_trait_access.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_trait_access.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![warn(clippy::default_trait_access)]\n \n use std::default;"}, {"sha": "1f115aecca1b5a9b17c86243aa48ff69d000c63f", "filename": "tests/ui/default_trait_access.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdefault_trait_access.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdefault_trait_access.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_trait_access.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,49 +1,49 @@\n error: Calling std::string::String::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:17:22\n+  --> $DIR/default_trait_access.rs:8:22\n    |\n LL |     let s1: String = Default::default();\n    |                      ^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n    |\n    = note: `-D clippy::default-trait-access` implied by `-D warnings`\n \n error: Calling std::string::String::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:21:22\n+  --> $DIR/default_trait_access.rs:12:22\n    |\n LL |     let s3: String = D2::default();\n    |                      ^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n \n error: Calling std::string::String::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:23:22\n+  --> $DIR/default_trait_access.rs:14:22\n    |\n LL |     let s4: String = std::default::Default::default();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n \n error: Calling std::string::String::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:27:22\n+  --> $DIR/default_trait_access.rs:18:22\n    |\n LL |     let s6: String = default::Default::default();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n \n error: Calling GenericDerivedDefault<std::string::String>::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:37:46\n+  --> $DIR/default_trait_access.rs:28:46\n    |\n LL |     let s11: GenericDerivedDefault<String> = Default::default();\n    |                                              ^^^^^^^^^^^^^^^^^^ help: try: `GenericDerivedDefault<std::string::String>::default()`\n \n error: Calling TupleDerivedDefault::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:43:36\n+  --> $DIR/default_trait_access.rs:34:36\n    |\n LL |     let s14: TupleDerivedDefault = Default::default();\n    |                                    ^^^^^^^^^^^^^^^^^^ help: try: `TupleDerivedDefault::default()`\n \n error: Calling ArrayDerivedDefault::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:45:36\n+  --> $DIR/default_trait_access.rs:36:36\n    |\n LL |     let s15: ArrayDerivedDefault = Default::default();\n    |                                    ^^^^^^^^^^^^^^^^^^ help: try: `ArrayDerivedDefault::default()`\n \n error: Calling TupleStructDerivedDefault::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:49:42\n+  --> $DIR/default_trait_access.rs:40:42\n    |\n LL |     let s17: TupleStructDerivedDefault = Default::default();\n    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `TupleStructDerivedDefault::default()`"}, {"sha": "2e5c5b7ead12c1e2fd81b2816473939feb5b508f", "filename": "tests/ui/deprecated.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdeprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdeprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #[warn(str_to_string)]\n #[warn(string_to_string)]\n #[warn(unstable_as_slice)]"}, {"sha": "4dbca0dea64b06af112a93302a8c77fd33958cd5", "filename": "tests/ui/deprecated.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdeprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdeprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,31 +1,31 @@\n error: lint `str_to_string` has been removed: `using `str::to_string` is common even today and specialization will likely happen soon`\n-  --> $DIR/deprecated.rs:10:8\n+  --> $DIR/deprecated.rs:1:8\n    |\n LL | #[warn(str_to_string)]\n    |        ^^^^^^^^^^^^^\n    |\n    = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n \n error: lint `string_to_string` has been removed: `using `string::to_string` is common even today and specialization will likely happen soon`\n-  --> $DIR/deprecated.rs:11:8\n+  --> $DIR/deprecated.rs:2:8\n    |\n LL | #[warn(string_to_string)]\n    |        ^^^^^^^^^^^^^^^^\n \n error: lint `unstable_as_slice` has been removed: ``Vec::as_slice` has been stabilized in 1.7`\n-  --> $DIR/deprecated.rs:12:8\n+  --> $DIR/deprecated.rs:3:8\n    |\n LL | #[warn(unstable_as_slice)]\n    |        ^^^^^^^^^^^^^^^^^\n \n error: lint `unstable_as_mut_slice` has been removed: ``Vec::as_mut_slice` has been stabilized in 1.7`\n-  --> $DIR/deprecated.rs:13:8\n+  --> $DIR/deprecated.rs:4:8\n    |\n LL | #[warn(unstable_as_mut_slice)]\n    |        ^^^^^^^^^^^^^^^^^^^^^\n \n error: lint `misaligned_transmute` has been removed: `this lint has been split into cast_ptr_alignment and transmute_ptr_to_ptr`\n-  --> $DIR/deprecated.rs:14:8\n+  --> $DIR/deprecated.rs:5:8\n    |\n LL | #[warn(misaligned_transmute)]\n    |        ^^^^^^^^^^^^^^^^^^^^"}, {"sha": "b7a672cd80aaafdc578ccc0f8d48cf5aefb85fab", "filename": "tests/ui/derive.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![feature(untagged_unions)]\n #![allow(dead_code)]\n #![warn(clippy::expl_impl_clone_on_copy)]"}, {"sha": "fc87c7d159608172ddcb3267492647eff572784b", "filename": "tests/ui/derive.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fderive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fderive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,12 @@\n error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n-  --> $DIR/derive.rs:25:10\n+  --> $DIR/derive.rs:16:10\n    |\n LL | #[derive(Hash)]\n    |          ^^^^\n    |\n    = note: #[deny(clippy::derive_hash_xor_eq)] on by default\n note: `PartialEq` implemented here\n-  --> $DIR/derive.rs:28:1\n+  --> $DIR/derive.rs:19:1\n    |\n LL | / impl PartialEq for Bar {\n LL | |     fn eq(&self, _: &Bar) -> bool {\n@@ -16,13 +16,13 @@ LL | | }\n    | |_^\n \n error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n-  --> $DIR/derive.rs:34:10\n+  --> $DIR/derive.rs:25:10\n    |\n LL | #[derive(Hash)]\n    |          ^^^^\n    |\n note: `PartialEq` implemented here\n-  --> $DIR/derive.rs:37:1\n+  --> $DIR/derive.rs:28:1\n    |\n LL | / impl PartialEq<Baz> for Baz {\n LL | |     fn eq(&self, _: &Baz) -> bool {\n@@ -32,21 +32,21 @@ LL | | }\n    | |_^\n \n error: you are implementing `Hash` explicitly but have derived `PartialEq`\n-  --> $DIR/derive.rs:46:1\n+  --> $DIR/derive.rs:37:1\n    |\n LL | / impl Hash for Bah {\n LL | |     fn hash<H: Hasher>(&self, _: &mut H) {}\n LL | | }\n    | |_^\n    |\n note: `PartialEq` implemented here\n-  --> $DIR/derive.rs:43:10\n+  --> $DIR/derive.rs:34:10\n    |\n LL | #[derive(PartialEq)]\n    |          ^^^^^^^^^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:53:1\n+  --> $DIR/derive.rs:44:1\n    |\n LL | / impl Clone for Qux {\n LL | |     fn clone(&self) -> Self {\n@@ -57,7 +57,7 @@ LL | | }\n    |\n    = note: `-D clippy::expl-impl-clone-on-copy` implied by `-D warnings`\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:53:1\n+  --> $DIR/derive.rs:44:1\n    |\n LL | / impl Clone for Qux {\n LL | |     fn clone(&self) -> Self {\n@@ -67,7 +67,7 @@ LL | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:77:1\n+  --> $DIR/derive.rs:68:1\n    |\n LL | / impl<'a> Clone for Lt<'a> {\n LL | |     fn clone(&self) -> Self {\n@@ -77,7 +77,7 @@ LL | | }\n    | |_^\n    |\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:77:1\n+  --> $DIR/derive.rs:68:1\n    |\n LL | / impl<'a> Clone for Lt<'a> {\n LL | |     fn clone(&self) -> Self {\n@@ -87,7 +87,7 @@ LL | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:89:1\n+  --> $DIR/derive.rs:80:1\n    |\n LL | / impl Clone for BigArray {\n LL | |     fn clone(&self) -> Self {\n@@ -97,7 +97,7 @@ LL | | }\n    | |_^\n    |\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:89:1\n+  --> $DIR/derive.rs:80:1\n    |\n LL | / impl Clone for BigArray {\n LL | |     fn clone(&self) -> Self {\n@@ -107,7 +107,7 @@ LL | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:101:1\n+  --> $DIR/derive.rs:92:1\n    |\n LL | / impl Clone for FnPtr {\n LL | |     fn clone(&self) -> Self {\n@@ -117,7 +117,7 @@ LL | | }\n    | |_^\n    |\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:101:1\n+  --> $DIR/derive.rs:92:1\n    |\n LL | / impl Clone for FnPtr {\n LL | |     fn clone(&self) -> Self {"}, {"sha": "746afa475039e99c5967bb27615f1b3b09531638", "filename": "tests/ui/diverging_sub_expression.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdiverging_sub_expression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdiverging_sub_expression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiverging_sub_expression.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![feature(never_type)]\n #![warn(clippy::diverging_sub_expression)]\n #![allow(clippy::match_same_arms, clippy::logic_bug)]"}, {"sha": "70ff3cdd0462f5eb176adb5e493f1a61bef31ab8", "filename": "tests/ui/diverging_sub_expression.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdiverging_sub_expression.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdiverging_sub_expression.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiverging_sub_expression.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,37 +1,37 @@\n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:30:10\n+  --> $DIR/diverging_sub_expression.rs:21:10\n    |\n LL |     b || diverge();\n    |          ^^^^^^^^^\n    |\n    = note: `-D clippy::diverging-sub-expression` implied by `-D warnings`\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:31:10\n+  --> $DIR/diverging_sub_expression.rs:22:10\n    |\n LL |     b || A.foo();\n    |          ^^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:40:26\n+  --> $DIR/diverging_sub_expression.rs:31:26\n    |\n LL |             6 => true || return,\n    |                          ^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:41:26\n+  --> $DIR/diverging_sub_expression.rs:32:26\n    |\n LL |             7 => true || continue,\n    |                          ^^^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:44:26\n+  --> $DIR/diverging_sub_expression.rs:35:26\n    |\n LL |             3 => true || diverge(),\n    |                          ^^^^^^^^^\n \n error: sub-expression diverges\n-  --> $DIR/diverging_sub_expression.rs:49:26\n+  --> $DIR/diverging_sub_expression.rs:40:26\n    |\n LL |             _ => true || break,\n    |                          ^^^^^"}, {"sha": "7634341ba8474ad6e768e99c0db475b1156d134c", "filename": "tests/ui/dlist.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdlist.rs?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,12 +1,3 @@\n-// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n #![feature(alloc)]\n #![feature(associated_type_defaults)]\n #![warn(clippy::linkedlist)]"}, {"sha": "cc4b8e7a3b4e066af32c3f0620b3e97c39409b41", "filename": "tests/ui/dlist.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdlist.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f11d993c0f0a8282e6721f770c04960ae1d2b2bc/tests%2Fui%2Fdlist.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdlist.stderr?ref=f11d993c0f0a8282e6721f770c04960ae1d2b2bc", "patch": "@@ -1,5 +1,5 @@\n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:19:16\n+  --> $DIR/dlist.rs:10:16\n    |\n LL |     type Baz = LinkedList<u8>;\n    |                ^^^^^^^^^^^^^^\n@@ -8,39 +8,39 @@ LL |     type Baz = LinkedList<u8>;\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:20:12\n+  --> $DIR/dlist.rs:11:12\n    |\n LL |     fn foo(LinkedList<u8>);\n    |            ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:21:23\n+  --> $DIR/dlist.rs:12:23\n    |\n LL |     const BAR: Option<LinkedList<u8>>;\n    |                       ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:32:15\n+  --> $DIR/dlist.rs:23:15\n    |\n LL |     fn foo(_: LinkedList<u8>) {}\n    |               ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:35:39\n+  --> $DIR/dlist.rs:26:39\n    |\n LL | pub fn test(my_favourite_linked_list: LinkedList<u8>) {\n    |                                       ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:39:29\n+  --> $DIR/dlist.rs:30:29\n    |\n LL | pub fn test_ret() -> Option<LinkedList<u8>> {\n    |                             ^^^^^^^^^^^^^^"}]}