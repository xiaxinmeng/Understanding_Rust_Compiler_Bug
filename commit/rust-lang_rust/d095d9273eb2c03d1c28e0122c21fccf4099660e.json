{"sha": "d095d9273eb2c03d1c28e0122c21fccf4099660e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwOTVkOTI3M2ViMmMwM2QxYzI4ZTAxMjJjMjFmY2NmNDA5OTY2MGU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-29T12:22:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-29T12:22:20Z"}, "message": "remove unused query", "tree": {"sha": "b11ae8f052d7c6898b754dc16327c490ac410608", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b11ae8f052d7c6898b754dc16327c490ac410608"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d095d9273eb2c03d1c28e0122c21fccf4099660e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d095d9273eb2c03d1c28e0122c21fccf4099660e", "html_url": "https://github.com/rust-lang/rust/commit/d095d9273eb2c03d1c28e0122c21fccf4099660e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d095d9273eb2c03d1c28e0122c21fccf4099660e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "858dd48af26e851897b2e8d2fbf757f3adfbc92c", "url": "https://api.github.com/repos/rust-lang/rust/commits/858dd48af26e851897b2e8d2fbf757f3adfbc92c", "html_url": "https://github.com/rust-lang/rust/commit/858dd48af26e851897b2e8d2fbf757f3adfbc92c"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "8b92d4c1f8cc042c0a8b3b213ed938f1e4f70fdb", "filename": "crates/ra_hir_expand/src/db.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d095d9273eb2c03d1c28e0122c21fccf4099660e/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d095d9273eb2c03d1c28e0122c21fccf4099660e/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs?ref=d095d9273eb2c03d1c28e0122c21fccf4099660e", "patch": "@@ -6,16 +6,14 @@ use ra_prof::profile;\n use ra_syntax::{AstNode, Parse, SyntaxNode};\n \n use crate::{\n-    ast_id_map::{AstIdMap, ErasedFileAstId},\n-    HirFileId, HirFileIdRepr, MacroCallId, MacroCallLoc, MacroDefId, MacroFile, MacroFileKind,\n+    ast_id_map::AstIdMap, HirFileId, HirFileIdRepr, MacroCallId, MacroCallLoc, MacroDefId,\n+    MacroFile, MacroFileKind,\n };\n \n // FIXME: rename to ExpandDatabase\n #[salsa::query_group(AstDatabaseStorage)]\n pub trait AstDatabase: SourceDatabase {\n     fn ast_id_map(&self, file_id: HirFileId) -> Arc<AstIdMap>;\n-    #[salsa::transparent]\n-    fn ast_id_to_node(&self, file_id: HirFileId, ast_id: ErasedFileAstId) -> SyntaxNode;\n \n     #[salsa::transparent]\n     fn parse_or_expand(&self, file_id: HirFileId) -> Option<SyntaxNode>;\n@@ -34,15 +32,6 @@ pub(crate) fn ast_id_map(db: &impl AstDatabase, file_id: HirFileId) -> Arc<AstId\n     Arc::new(map)\n }\n \n-pub(crate) fn ast_id_to_node(\n-    db: &impl AstDatabase,\n-    file_id: HirFileId,\n-    ast_id: ErasedFileAstId,\n-) -> SyntaxNode {\n-    let node = db.parse_or_expand(file_id).unwrap();\n-    db.ast_id_map(file_id)[ast_id].to_node(&node)\n-}\n-\n pub(crate) fn macro_def(db: &impl AstDatabase, id: MacroDefId) -> Option<Arc<MacroRules>> {\n     let macro_call = id.ast_id.to_node(db);\n     let arg = macro_call.token_tree()?;"}, {"sha": "1fb12437414acafd60ed5d2e4c236c0fd11942ee", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d095d9273eb2c03d1c28e0122c21fccf4099660e/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d095d9273eb2c03d1c28e0122c21fccf4099660e/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=d095d9273eb2c03d1c28e0122c21fccf4099660e", "patch": "@@ -171,7 +171,8 @@ impl<N: AstNode> AstId<N> {\n     }\n \n     pub fn to_node(&self, db: &impl AstDatabase) -> N {\n-        let syntax_node = db.ast_id_to_node(self.file_id, self.file_ast_id.into());\n-        N::cast(syntax_node).unwrap()\n+        let root = db.parse_or_expand(self.file_id).unwrap();\n+        let node = db.ast_id_map(self.file_id)[self.file_ast_id.into()].to_node(&root);\n+        N::cast(node).unwrap()\n     }\n }"}]}