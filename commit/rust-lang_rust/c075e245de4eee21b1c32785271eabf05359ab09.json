{"sha": "c075e245de4eee21b1c32785271eabf05359ab09", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNzVlMjQ1ZGU0ZWVlMjFiMWMzMjc4NTI3MWVhYmYwNTM1OWFiMDk=", "commit": {"author": {"name": "lqd", "email": "remy.rakic+github@gmail.com", "date": "2019-01-07T18:48:45Z"}, "committer": {"name": "lqd", "email": "remy.rakic+github@gmail.com", "date": "2019-01-07T18:48:45Z"}, "message": "Codegen: run the collector only once\n\nUse the `collect_and_partition_mono_items ` query to avoid calling the collector", "tree": {"sha": "389cc45cbf6c4c82b7ef8a35244313bc21a2bc55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/389cc45cbf6c4c82b7ef8a35244313bc21a2bc55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c075e245de4eee21b1c32785271eabf05359ab09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c075e245de4eee21b1c32785271eabf05359ab09", "html_url": "https://github.com/rust-lang/rust/commit/c075e245de4eee21b1c32785271eabf05359ab09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c075e245de4eee21b1c32785271eabf05359ab09/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21ac19d8fefb023752645fcf2517ce0fad663bf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/21ac19d8fefb023752645fcf2517ce0fad663bf0", "html_url": "https://github.com/rust-lang/rust/commit/21ac19d8fefb023752645fcf2517ce0fad663bf0"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "1b50ce5ced6a16de56d728cef2162fba76bec14b", "filename": "src/librustc_codegen_utils/codegen_backend.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c075e245de4eee21b1c32785271eabf05359ab09/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c075e245de4eee21b1c32785271eabf05359ab09/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs?ref=c075e245de4eee21b1c32785271eabf05359ab09", "patch": "@@ -31,7 +31,6 @@ use rustc::middle::cstore::EncodedMetadata;\n use rustc::middle::cstore::MetadataLoader;\n use rustc::dep_graph::DepGraph;\n use rustc_target::spec::Target;\n-use rustc_mir::monomorphize::collector;\n use link::out_filename;\n \n pub use rustc_data_structures::sync::MetadataRef;\n@@ -136,24 +135,15 @@ impl CodegenBackend for MetadataOnlyCodegenBackend {\n         ::symbol_names_test::report_symbol_names(tcx);\n         ::rustc_incremental::assert_dep_graph(tcx);\n         ::rustc_incremental::assert_module_sources::assert_module_sources(tcx);\n-        ::rustc_mir::monomorphize::assert_symbols_are_distinct(tcx,\n-            collector::collect_crate_mono_items(\n-                tcx,\n-                collector::MonoItemCollectionMode::Eager\n-            ).0.iter()\n-        );\n         // FIXME: Fix this\n         // ::rustc::middle::dependency_format::calculate(tcx);\n         let _ = tcx.link_args(LOCAL_CRATE);\n         let _ = tcx.native_libraries(LOCAL_CRATE);\n-        for mono_item in\n-            collector::collect_crate_mono_items(\n-                tcx,\n-                collector::MonoItemCollectionMode::Eager\n-            ).0 {\n+        let (_, cgus) = tcx.collect_and_partition_mono_items(LOCAL_CRATE);\n+        for (mono_item, _) in cgus.iter().flat_map(|cgu| cgu.items().iter()) {\n             if let MonoItem::Fn(inst) = mono_item {\n                 let def_id = inst.def_id();\n-                if def_id.is_local()  {\n+                if def_id.is_local() {\n                     let _ = inst.def.is_inline(tcx);\n                     let _ = tcx.codegen_fn_attrs(def_id);\n                 }"}]}