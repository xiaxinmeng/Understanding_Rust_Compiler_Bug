{"sha": "433d70cda2e6d61d5bbb20423f0937a643cf34b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzM2Q3MGNkYTJlNmQ2MWQ1YmJiMjA0MjNmMDkzN2E2NDNjZjM0YjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-01T04:37:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-01T04:37:42Z"}, "message": "Auto merge of #33141 - tshepang:python-love, r=brson\n\nsome Python nits and fixes", "tree": {"sha": "a9d80726d917b5d33bc37453ccd1278a0fb0d201", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9d80726d917b5d33bc37453ccd1278a0fb0d201"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/433d70cda2e6d61d5bbb20423f0937a643cf34b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/433d70cda2e6d61d5bbb20423f0937a643cf34b4", "html_url": "https://github.com/rust-lang/rust/commit/433d70cda2e6d61d5bbb20423f0937a643cf34b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/433d70cda2e6d61d5bbb20423f0937a643cf34b4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad5fbaf57c1f763935175cd217fedfc551d91aac", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad5fbaf57c1f763935175cd217fedfc551d91aac", "html_url": "https://github.com/rust-lang/rust/commit/ad5fbaf57c1f763935175cd217fedfc551d91aac"}, {"sha": "a422b7e4ed8bc8a05777eced718156f47eaa861b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a422b7e4ed8bc8a05777eced718156f47eaa861b", "html_url": "https://github.com/rust-lang/rust/commit/a422b7e4ed8bc8a05777eced718156f47eaa861b"}], "stats": {"total": 34, "additions": 15, "deletions": 19}, "files": [{"sha": "d69d4b962496e58764ecb6c9552f869e5b633139", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/433d70cda2e6d61d5bbb20423f0937a643cf34b4/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/433d70cda2e6d61d5bbb20423f0937a643cf34b4/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=433d70cda2e6d61d5bbb20423f0937a643cf34b4", "patch": "@@ -108,14 +108,15 @@ def run(args, verbose=False):\n \n def stage0_data(rust_root):\n     nightlies = os.path.join(rust_root, \"src/stage0.txt\")\n+    data = {}\n     with open(nightlies, 'r') as nightlies:\n-        data = {}\n-        for line in nightlies.read().split(\"\\n\"):\n+        for line in nightlies:\n+            line = line.rstrip()  # Strip newline character, '\\n'\n             if line.startswith(\"#\") or line == '':\n                 continue\n             a, b = line.split(\": \", 1)\n             data[a] = b\n-        return data\n+    return data\n \n class RustBuild:\n     def download_stage0(self):\n@@ -246,7 +247,7 @@ def build_bootstrap(self):\n                  env)\n \n     def run(self, args, env):\n-        proc = subprocess.Popen(args, env = env)\n+        proc = subprocess.Popen(args, env=env)\n         ret = proc.wait()\n         if ret != 0:\n             sys.exit(ret)\n@@ -261,20 +262,19 @@ def build_triple(self):\n         try:\n             ostype = subprocess.check_output(['uname', '-s']).strip()\n             cputype = subprocess.check_output(['uname', '-m']).strip()\n-        except FileNotFoundError:\n+        except subprocess.CalledProcessError:\n             if sys.platform == 'win32':\n                 return 'x86_64-pc-windows-msvc'\n-            else:\n-                err = \"uname not found\"\n-                if self.verbose:\n-                    raise Exception(err)\n-                sys.exit(err)\n+            err = \"uname not found\"\n+            if self.verbose:\n+                raise Exception(err)\n+            sys.exit(err)\n \n         # Darwin's `uname -s` lies and always returns i386. We have to use\n         # sysctl instead.\n         if ostype == 'Darwin' and cputype == 'i686':\n             sysctl = subprocess.check_output(['sysctl', 'hw.optional.x86_64'])\n-            if sysctl.contains(': 1'):\n+            if ': 1' in sysctl:\n                 cputype = 'x86_64'\n \n         # The goal here is to come up with the same triple as LLVM would,"}, {"sha": "28e3363189a082c6152c9bffb8443b44ac190102", "filename": "src/etc/get-stage0.py", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/433d70cda2e6d61d5bbb20423f0937a643cf34b4/src%2Fetc%2Fget-stage0.py", "raw_url": "https://github.com/rust-lang/rust/raw/433d70cda2e6d61d5bbb20423f0937a643cf34b4/src%2Fetc%2Fget-stage0.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fget-stage0.py?ref=433d70cda2e6d61d5bbb20423f0937a643cf34b4", "patch": "@@ -11,18 +11,15 @@\n # except according to those terms.\n \n import os\n-import shutil\n import sys\n-import tarfile\n \n path = os.path.abspath(os.path.join(os.path.dirname(__file__), \"../bootstrap\"))\n sys.path.append(path)\n \n import bootstrap\n \n-def main(argv):\n+def main(triple):\n     src_root = os.path.abspath(os.path.join(os.path.dirname(__file__), \"../..\"))\n-    triple = argv[1]\n     data = bootstrap.stage0_data(src_root)\n \n     channel, date = data['rustc'].split('-', 1)\n@@ -31,9 +28,8 @@ def main(argv):\n     if not os.path.exists(dl_dir):\n         os.makedirs(dl_dir)\n \n-    filename_base = 'rustc-' + channel + '-' + triple\n-    filename = filename_base + '.tar.gz'\n-    url = 'https://static.rust-lang.org/dist/' + date + '/' + filename\n+    filename = 'rustc-{}-{}.tar.gz'.format(channel, triple)\n+    url = 'https://static.rust-lang.org/dist/{}/{}'.format(date, filename)\n     dst = dl_dir + '/' + filename\n     if os.path.exists(dst):\n         os.unlink(dst)\n@@ -49,4 +45,4 @@ def main(argv):\n     bootstrap.unpack(dst, stage0_dst, match='rustc', verbose=True)\n \n if __name__ == '__main__':\n-    main(sys.argv)\n+    main(sys.argv[1])"}]}