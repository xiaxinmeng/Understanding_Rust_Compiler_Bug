{"sha": "c84efe9b6ca05f64d8b925acc2724971d186f8f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NGVmZTliNmNhMDVmNjRkOGI5MjVhY2MyNzI0OTcxZDE4NmY4ZjY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-01-12T13:20:57Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-01-16T18:59:11Z"}, "message": "resolve: Say \"import\" when reporting private imports", "tree": {"sha": "543a087417a5599014360c4b0d85da31ea37daf3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/543a087417a5599014360c4b0d85da31ea37daf3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c84efe9b6ca05f64d8b925acc2724971d186f8f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c84efe9b6ca05f64d8b925acc2724971d186f8f6", "html_url": "https://github.com/rust-lang/rust/commit/c84efe9b6ca05f64d8b925acc2724971d186f8f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c84efe9b6ca05f64d8b925acc2724971d186f8f6/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "url": "https://api.github.com/repos/rust-lang/rust/commits/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a", "html_url": "https://github.com/rust-lang/rust/commit/28c3f6eb409596be9c0c0a59dc1c26e216d9e57a"}], "stats": {"total": 75, "additions": 39, "deletions": 36}, "files": [{"sha": "a433ae8ed676a5f26aee53da29efed1482b7ec1c", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=c84efe9b6ca05f64d8b925acc2724971d186f8f6", "patch": "@@ -921,6 +921,9 @@ impl<'a> Resolver<'a> {\n             if is_constructor {\n                 descr += \" constructor\";\n             }\n+            if binding.is_import() {\n+                descr += \" import\";\n+            }\n \n             let mut err =\n                 struct_span_err!(session, ident.span, E0603, \"{} `{}` is private\", descr, ident);"}, {"sha": "cda1227cc8e924e0210eff954ca5299a261813ab", "filename": "src/test/ui/extern/extern-crate-visibility.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.rs?ref=c84efe9b6ca05f64d8b925acc2724971d186f8f6", "patch": "@@ -3,10 +3,10 @@ mod foo {\n }\n \n // Check that private crates can be used from outside their modules, albeit with warnings\n-use foo::core::cell; //~ ERROR crate `core` is private\n+use foo::core::cell; //~ ERROR crate import `core` is private\n \n fn f() {\n-    foo::core::cell::Cell::new(0); //~ ERROR crate `core` is private\n+    foo::core::cell::Cell::new(0); //~ ERROR crate import `core` is private\n \n     use foo::*;\n     mod core {} // Check that private crates are not glob imported"}, {"sha": "d0c073d67a4ee22e77a816c9979775aa2538fb59", "filename": "src/test/ui/extern/extern-crate-visibility.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.stderr?ref=c84efe9b6ca05f64d8b925acc2724971d186f8f6", "patch": "@@ -1,22 +1,22 @@\n-error[E0603]: crate `core` is private\n+error[E0603]: crate import `core` is private\n   --> $DIR/extern-crate-visibility.rs:6:10\n    |\n LL | use foo::core::cell;\n-   |          ^^^^ this crate is private\n+   |          ^^^^ this crate import is private\n    |\n-note: the crate `core` is defined here\n+note: the crate import `core` is defined here\n   --> $DIR/extern-crate-visibility.rs:2:5\n    |\n LL |     extern crate core;\n    |     ^^^^^^^^^^^^^^^^^^\n \n-error[E0603]: crate `core` is private\n+error[E0603]: crate import `core` is private\n   --> $DIR/extern-crate-visibility.rs:9:10\n    |\n LL |     foo::core::cell::Cell::new(0);\n-   |          ^^^^ this crate is private\n+   |          ^^^^ this crate import is private\n    |\n-note: the crate `core` is defined here\n+note: the crate import `core` is defined here\n   --> $DIR/extern-crate-visibility.rs:2:5\n    |\n LL |     extern crate core;"}, {"sha": "5219ffacd15c077e8a015623488adf92664f8f5c", "filename": "src/test/ui/import.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fimport.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fimport.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimport.stderr?ref=c84efe9b6ca05f64d8b925acc2724971d186f8f6", "patch": "@@ -13,13 +13,13 @@ error[E0432]: unresolved import `foo`\n LL |     use foo;\n    |         ^^^ no `foo` in the root\n \n-error[E0603]: unresolved item `foo` is private\n+error[E0603]: unresolved item import `foo` is private\n   --> $DIR/import.rs:15:10\n    |\n LL |     zed::foo();\n-   |          ^^^ this unresolved item is private\n+   |          ^^^ this unresolved item import is private\n    |\n-note: the unresolved item `foo` is defined here\n+note: the unresolved item import `foo` is defined here\n   --> $DIR/import.rs:10:9\n    |\n LL |     use foo;"}, {"sha": "75bb4206f97d6642b271a9fba70ea6e0aa9eb4da", "filename": "src/test/ui/imports/issue-55884-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.rs?ref=c84efe9b6ca05f64d8b925acc2724971d186f8f6", "patch": "@@ -9,6 +9,6 @@ mod parser {\n     use ParseOptions;\n }\n \n-pub use parser::ParseOptions; //~ ERROR struct `ParseOptions` is private\n+pub use parser::ParseOptions; //~ ERROR struct import `ParseOptions` is private\n \n fn main() {}"}, {"sha": "f16d2adb3656e9f155437d852d43ef8d68adf179", "filename": "src/test/ui/imports/issue-55884-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.stderr?ref=c84efe9b6ca05f64d8b925acc2724971d186f8f6", "patch": "@@ -1,10 +1,10 @@\n-error[E0603]: struct `ParseOptions` is private\n+error[E0603]: struct import `ParseOptions` is private\n   --> $DIR/issue-55884-2.rs:12:17\n    |\n LL | pub use parser::ParseOptions;\n-   |                 ^^^^^^^^^^^^ this struct is private\n+   |                 ^^^^^^^^^^^^ this struct import is private\n    |\n-note: the struct `ParseOptions` is defined here\n+note: the struct import `ParseOptions` is defined here\n   --> $DIR/issue-55884-2.rs:9:9\n    |\n LL |     use ParseOptions;"}, {"sha": "b173884080f8092af94d014350a758cd175f3bbb", "filename": "src/test/ui/imports/reexports.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Freexports.stderr?ref=c84efe9b6ca05f64d8b925acc2724971d186f8f6", "patch": "@@ -10,25 +10,25 @@ note: consider marking `foo` as `pub` in the imported module\n LL |         pub use super::foo;\n    |                 ^^^^^^^^^^\n \n-error[E0603]: module `foo` is private\n+error[E0603]: module import `foo` is private\n   --> $DIR/reexports.rs:33:15\n    |\n LL |     use b::a::foo::S;\n-   |               ^^^ this module is private\n+   |               ^^^ this module import is private\n    |\n-note: the module `foo` is defined here\n+note: the module import `foo` is defined here\n   --> $DIR/reexports.rs:21:17\n    |\n LL |         pub use super::foo; // This is OK since the value `foo` is visible enough.\n    |                 ^^^^^^^^^^\n \n-error[E0603]: module `foo` is private\n+error[E0603]: module import `foo` is private\n   --> $DIR/reexports.rs:34:15\n    |\n LL |     use b::b::foo::S as T;\n-   |               ^^^ this module is private\n+   |               ^^^ this module import is private\n    |\n-note: the module `foo` is defined here\n+note: the module import `foo` is defined here\n   --> $DIR/reexports.rs:26:17\n    |\n LL |         pub use super::*; // This is also OK since the value `foo` is visible enough."}, {"sha": "719dc27ccf4d6bddbded7ff6e8917d8890d7762c", "filename": "src/test/ui/privacy/privacy2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fprivacy%2Fprivacy2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fprivacy%2Fprivacy2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy2.stderr?ref=c84efe9b6ca05f64d8b925acc2724971d186f8f6", "patch": "@@ -4,13 +4,13 @@ error[E0432]: unresolved import `bar::foo`\n LL |     use bar::foo;\n    |         ^^^^^^^^ no `foo` in `bar`\n \n-error[E0603]: function `foo` is private\n+error[E0603]: function import `foo` is private\n   --> $DIR/privacy2.rs:23:20\n    |\n LL |     use bar::glob::foo;\n-   |                    ^^^ this function is private\n+   |                    ^^^ this function import is private\n    |\n-note: the function `foo` is defined here\n+note: the function import `foo` is defined here\n   --> $DIR/privacy2.rs:10:13\n    |\n LL |         use foo;"}, {"sha": "50f04b1eae1506649ef2f0196c7b9e015a0272af", "filename": "src/test/ui/proc-macro/disappearing-resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fproc-macro%2Fdisappearing-resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fproc-macro%2Fdisappearing-resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdisappearing-resolution.rs?ref=c84efe9b6ca05f64d8b925acc2724971d186f8f6", "patch": "@@ -8,7 +8,7 @@ extern crate test_macros;\n mod m {\n     use test_macros::Empty;\n }\n-use m::Empty; //~ ERROR derive macro `Empty` is private\n+use m::Empty; //~ ERROR derive macro import `Empty` is private\n \n // To resolve `empty_helper` we need to resolve `Empty`.\n // During initial resolution `use m::Empty` introduces no entries, so we proceed to `macro_use`,"}, {"sha": "3beaedf61d73a722be48a20e30a7d152e69722f6", "filename": "src/test/ui/proc-macro/disappearing-resolution.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fproc-macro%2Fdisappearing-resolution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fproc-macro%2Fdisappearing-resolution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdisappearing-resolution.stderr?ref=c84efe9b6ca05f64d8b925acc2724971d186f8f6", "patch": "@@ -4,13 +4,13 @@ error: cannot find attribute `empty_helper` in this scope\n LL | #[empty_helper]\n    |   ^^^^^^^^^^^^\n \n-error[E0603]: derive macro `Empty` is private\n+error[E0603]: derive macro import `Empty` is private\n   --> $DIR/disappearing-resolution.rs:11:8\n    |\n LL | use m::Empty;\n-   |        ^^^^^ this derive macro is private\n+   |        ^^^^^ this derive macro import is private\n    |\n-note: the derive macro `Empty` is defined here\n+note: the derive macro import `Empty` is defined here\n   --> $DIR/disappearing-resolution.rs:9:9\n    |\n LL |     use test_macros::Empty;"}, {"sha": "6b801972f4179bd5002c5d3594e0c44cfafa3942", "filename": "src/test/ui/shadowed/shadowed-use-visibility.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.rs?ref=c84efe9b6ca05f64d8b925acc2724971d186f8f6", "patch": "@@ -6,11 +6,11 @@ mod foo {\n }\n \n mod bar {\n-    use foo::bar::f as g; //~ ERROR module `bar` is private\n+    use foo::bar::f as g; //~ ERROR module import `bar` is private\n \n     use foo as f;\n     pub use foo::*;\n }\n \n-use bar::f::f; //~ ERROR module `f` is private\n+use bar::f::f; //~ ERROR module import `f` is private\n fn main() {}"}, {"sha": "cd8ec13794c6f13d6abe6df2c78bb1ea10c76d0a", "filename": "src/test/ui/shadowed/shadowed-use-visibility.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c84efe9b6ca05f64d8b925acc2724971d186f8f6/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.stderr?ref=c84efe9b6ca05f64d8b925acc2724971d186f8f6", "patch": "@@ -1,22 +1,22 @@\n-error[E0603]: module `bar` is private\n+error[E0603]: module import `bar` is private\n   --> $DIR/shadowed-use-visibility.rs:9:14\n    |\n LL |     use foo::bar::f as g;\n-   |              ^^^ this module is private\n+   |              ^^^ this module import is private\n    |\n-note: the module `bar` is defined here\n+note: the module import `bar` is defined here\n   --> $DIR/shadowed-use-visibility.rs:4:9\n    |\n LL |     use foo as bar;\n    |         ^^^^^^^^^^\n \n-error[E0603]: module `f` is private\n+error[E0603]: module import `f` is private\n   --> $DIR/shadowed-use-visibility.rs:15:10\n    |\n LL | use bar::f::f;\n-   |          ^ this module is private\n+   |          ^ this module import is private\n    |\n-note: the module `f` is defined here\n+note: the module import `f` is defined here\n   --> $DIR/shadowed-use-visibility.rs:11:9\n    |\n LL |     use foo as f;"}]}