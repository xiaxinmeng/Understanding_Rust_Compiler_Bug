{"sha": "12fa3393a587f17dcea70d62ca1ee66140fb3068", "node_id": "C_kwDOAAsO6NoAKDEyZmEzMzkzYTU4N2YxN2RjZWE3MGQ2MmNhMWVlNjYxNDBmYjMwNjg", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T02:24:13Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T14:27:00Z"}, "message": "Move lifetimes_in_bounds call to outside with_hir_id_owner block in lower_async_fn_ret_ty", "tree": {"sha": "ab4d94a1818855aa9cc3700999fb16fed8b63dfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab4d94a1818855aa9cc3700999fb16fed8b63dfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12fa3393a587f17dcea70d62ca1ee66140fb3068", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmLr1zQACgkQgTGiTgx5\n76/cVxAAg+mI0T6Pbdh2GEXSiocdObXO0cwHLFNjmUiB29I+HYLaUHqvZrbUh2Z2\nlEt+Ypza/XK9J4xIVC/WJc0qllgo7lin4QOTIxN8I5pUlua9wuvP1RFeovBMAEMZ\n6SOzBv7c3n6IBE6HWCCbzbt6n1qwSMWj+3QWrhGGK1AX0PRFQa3+DNdrdU2c8yE4\nBzqpqDEwgIq3wWy0iggu+IIkBvbP8ncbhHGscvZB+XAVkrINUlsjmflCmcQTXwuC\nt2l4ToOheHsIk/mHYleQWS7H1sNDxSpvdVutsf18HkcynLtJr239HX6xRhdSd7Ql\nPh9s07uehUqCJPTmakd8wc19BUyqr3QCVmtKnsZ4+ulwffnP3rqBsgvwb7RdIapU\nRQSE9oflgFTYfXlYlVLRAB9czUhfvfBUO7/RT7vrf2myokXnGQ443dqIF+D0DyVb\nvBA72axFFR2GlQGBYIAxNG+Lkv8nurY0059aziKAz1YpCod0+cIkncgFX27uS1CX\nszvDJ4spy4ba9Y1vuaPuuluxIvBIKt3vgHDtNr46tm7G48icz4jC8Aq40/7AeWHC\nSHi9XG2ntIR5l6ORTXZnMXlr4Q1Qt8iE3pFbTAnyK+U3bTd2vdBPO0IHd8+gr0jq\n2co4T8ItDIuiFk982M0aJ/sfqwXKPROVnwZs4pu7vljoKlWKz4s=\n=iMQ6\n-----END PGP SIGNATURE-----", "payload": "tree ab4d94a1818855aa9cc3700999fb16fed8b63dfe\nparent 4b9b5838ac219aaca2cc7dbc93cda61555130006\nauthor Santiago Pastorino <spastorino@gmail.com> 1659579853 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1659623220 -0300\n\nMove lifetimes_in_bounds call to outside with_hir_id_owner block in lower_async_fn_ret_ty\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12fa3393a587f17dcea70d62ca1ee66140fb3068", "html_url": "https://github.com/rust-lang/rust/commit/12fa3393a587f17dcea70d62ca1ee66140fb3068", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12fa3393a587f17dcea70d62ca1ee66140fb3068/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b9b5838ac219aaca2cc7dbc93cda61555130006", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b9b5838ac219aaca2cc7dbc93cda61555130006", "html_url": "https://github.com/rust-lang/rust/commit/4b9b5838ac219aaca2cc7dbc93cda61555130006"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "a82225850c4b1d9fdfdee15dfdda25a0bac697cd", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/12fa3393a587f17dcea70d62ca1ee66140fb3068/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12fa3393a587f17dcea70d62ca1ee66140fb3068/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=12fa3393a587f17dcea70d62ca1ee66140fb3068", "patch": "@@ -1809,21 +1809,30 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n \n         debug!(?captures);\n \n-        self.with_hir_id_owner(opaque_ty_node_id, |this| {\n-            let lifetimes_in_bounds =\n-                lifetime_collector::lifetimes_in_ret_ty(&this.resolver, output);\n-            debug!(?lifetimes_in_bounds);\n+        // We only want to capture the lifetimes that appear in the bounds. So visit the bounds to\n+        // find out exactly which ones those are.\n+        // in fn return position, like the `fn test<'a>() -> impl Debug + 'a` example,\n+        // we only keep the lifetimes that appear in the `impl Debug` itself:\n+        let lifetimes_to_remap = lifetime_collector::lifetimes_in_ret_ty(&self.resolver, output);\n+        debug!(?lifetimes_to_remap);\n \n+        self.with_hir_id_owner(opaque_ty_node_id, |this| {\n+            // If this opaque type is only capturing a subset of the lifetimes (those that appear\n+            // in bounds), then create the new lifetime parameters required and create a mapping\n+            // from the old `'a` (on the function) to the new `'a` (on the opaque type).\n             captures.extend(\n                 this.create_lifetime_defs(\n                     opaque_ty_def_id,\n-                    &lifetimes_in_bounds,\n+                    &lifetimes_to_remap,\n                     &mut new_remapping,\n                 )\n                 .into_iter()\n                 .map(|(new_node_id, lifetime)| (new_node_id, lifetime, None)),\n             );\n+            debug!(?captures);\n+            debug!(?new_remapping);\n \n+            // Install the remapping from old to new (if any):\n             this.with_remapping(new_remapping, |this| {\n                 // We have to be careful to get elision right here. The\n                 // idea is that we create a lifetime parameter for each"}]}