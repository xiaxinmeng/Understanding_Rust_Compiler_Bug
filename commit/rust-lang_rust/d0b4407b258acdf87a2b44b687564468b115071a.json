{"sha": "d0b4407b258acdf87a2b44b687564468b115071a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwYjQ0MDdiMjU4YWNkZjg3YTJiNDRiNjg3NTY0NDY4YjExNTA3MWE=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-11-03T16:04:00Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-11-03T16:04:00Z"}, "message": "Fix casts for `count` check", "tree": {"sha": "197e98dfee5de5e4cd49df140dee4d59e495858f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/197e98dfee5de5e4cd49df140dee4d59e495858f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0b4407b258acdf87a2b44b687564468b115071a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0b4407b258acdf87a2b44b687564468b115071a", "html_url": "https://github.com/rust-lang/rust/commit/d0b4407b258acdf87a2b44b687564468b115071a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0b4407b258acdf87a2b44b687564468b115071a/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06ef77bfef45b3eb01ab4c3ceb0fa30186de4ea0", "url": "https://api.github.com/repos/rust-lang/rust/commits/06ef77bfef45b3eb01ab4c3ceb0fa30186de4ea0", "html_url": "https://github.com/rust-lang/rust/commit/06ef77bfef45b3eb01ab4c3ceb0fa30186de4ea0"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "66e24eb8b09245c78b89d3589ce127549548b635", "filename": "src/shims/fs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0b4407b258acdf87a2b44b687564468b115071a/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0b4407b258acdf87a2b44b687564468b115071a/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=d0b4407b258acdf87a2b44b687564468b115071a", "patch": "@@ -146,7 +146,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             // `File::sync_all` does the checks that are done when closing a file. We do this to\n             // to handle possible errors correctly.\n             let result = this.try_unwrap_io_result(handle.file.sync_all().map(|_| 0i32));\n-            // Now we actually drop the handle.\n+            // Now we actually close the file.\n             drop(handle);\n             // And return the result.\n             result\n@@ -180,7 +180,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n             if let Ok(c) = result {\n                 // Check that we read less than `i64::MAX` bytes.\n-                if c > (i64::max_value() as usize) {\n+                if (c as u64) > (i64::max_value() as u64) {\n                     throw_unsup_format!(\"Number of read bytes {} is larger than the maximum value\", c);\n                 }\n                 // If reading to `bytes` did not fail, we write those bytes to the buffer.\n@@ -217,7 +217,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n             if let Ok(c) = result {\n                 // Check that we wrote less than `i64::MAX` bytes.\n-                if c > (i64::max_value() as usize) {\n+                if (c as u64) > (i64::max_value() as u64) {\n                     throw_unsup_format!(\"Number of written bytes {} is larger than the maximum value\", c);\n                 }\n             }"}]}