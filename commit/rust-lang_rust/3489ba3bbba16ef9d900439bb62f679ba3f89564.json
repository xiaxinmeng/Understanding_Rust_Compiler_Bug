{"sha": "3489ba3bbba16ef9d900439bb62f679ba3f89564", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ODliYTNiYmJhMTZlZjlkOTAwNDM5YmI2MmY2NzliYTNmODk1NjQ=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-09-14T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-09-18T05:28:56Z"}, "message": "Remove support for reentrant start blocks from codegen\n\nThe start block is guaranteed not to have any basic block predecessors.", "tree": {"sha": "93eb5d74ad588d7241b1d8ce24a0c5d255c54482", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93eb5d74ad588d7241b1d8ce24a0c5d255c54482"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3489ba3bbba16ef9d900439bb62f679ba3f89564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3489ba3bbba16ef9d900439bb62f679ba3f89564", "html_url": "https://github.com/rust-lang/rust/commit/3489ba3bbba16ef9d900439bb62f679ba3f89564", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3489ba3bbba16ef9d900439bb62f679ba3f89564/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d614e1d1f964ac1dc7af0261848cf6dc63d915c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d614e1d1f964ac1dc7af0261848cf6dc63d915c", "html_url": "https://github.com/rust-lang/rust/commit/4d614e1d1f964ac1dc7af0261848cf6dc63d915c"}], "stats": {"total": 24, "additions": 5, "deletions": 19}, "files": [{"sha": "581860ee8b5a60a6f5fbc9315f7bfa26769bc918", "filename": "compiler/rustc_codegen_ssa/src/mir/mod.rs", "status": "modified", "additions": 5, "deletions": 19, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3489ba3bbba16ef9d900439bb62f679ba3f89564/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3489ba3bbba16ef9d900439bb62f679ba3f89564/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fmod.rs?ref=3489ba3bbba16ef9d900439bb62f679ba3f89564", "patch": "@@ -152,20 +152,11 @@ pub fn codegen_mir<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     }\n \n     let cleanup_kinds = analyze::cleanup_kinds(&mir);\n-    // Allocate a `Block` for every basic block, except\n-    // the start block, if nothing loops back to it.\n-    let reentrant_start_block = !mir.predecessors()[mir::START_BLOCK].is_empty();\n-    let cached_llbbs: IndexVec<mir::BasicBlock, Option<Bx::BasicBlock>> =\n-        mir.basic_blocks()\n-            .indices()\n-            .map(|bb| {\n-                if bb == mir::START_BLOCK && !reentrant_start_block {\n-                    Some(start_llbb)\n-                } else {\n-                    None\n-                }\n-            })\n-            .collect();\n+    let cached_llbbs: IndexVec<mir::BasicBlock, Option<Bx::BasicBlock>> = mir\n+        .basic_blocks()\n+        .indices()\n+        .map(|bb| if bb == mir::START_BLOCK { Some(start_llbb) } else { None })\n+        .collect();\n \n     let mut fx = FunctionCx {\n         instance,\n@@ -247,11 +238,6 @@ pub fn codegen_mir<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     // Apply debuginfo to the newly allocated locals.\n     fx.debug_introduce_locals(&mut bx);\n \n-    // Branch to the START block, if it's not the entry block.\n-    if reentrant_start_block {\n-        bx.br(fx.llbb(mir::START_BLOCK));\n-    }\n-\n     // Codegen the body of each block using reverse postorder\n     // FIXME(eddyb) reuse RPO iterator between `analysis` and this.\n     for (bb, _) in traversal::reverse_postorder(&mir) {"}]}