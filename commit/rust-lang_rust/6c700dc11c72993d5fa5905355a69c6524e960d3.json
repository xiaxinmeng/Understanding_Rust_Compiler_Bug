{"sha": "6c700dc11c72993d5fa5905355a69c6524e960d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNzAwZGMxMWM3Mjk5M2Q1ZmE1OTA1MzU1YTY5YzY1MjRlOTYwZDM=", "commit": {"author": {"name": "Matthias Schiffer", "email": "mschiffer@universe-factory.net", "date": "2020-04-16T15:11:05Z"}, "committer": {"name": "Matthias Schiffer", "email": "mschiffer@universe-factory.net", "date": "2020-04-16T15:24:01Z"}, "message": "Extend UI tests for fixed check_attr()\n\nAdd testcases for the `#[track_caller]` and `#[target_feature(..)]`\nfunction attributes for errors that were not not caught before.", "tree": {"sha": "98b15358018479532212c7be6266e49ea0b5fca6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98b15358018479532212c7be6266e49ea0b5fca6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c700dc11c72993d5fa5905355a69c6524e960d3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEZmTnvaa2aYgexS51Fu8/ZMsgHZwFAl6YeJEACgkQFu8/ZMsg\nHZzLrRAAsU4GRqYF1xQSfrv7jcwvewf8lzUhpwoGqWJoJ9rUUA69j6la4QrEQRPa\nCZ2rxir39WS/Kn7BzyU3zeSCPHZTslKHIzjO6sDF3NEBWiqk8LuK54pUtZSflIkj\nhJv7c/WZp/PWqsbCNvu4sDNwrr47lnQvacdb4XtZJu4pa5eHA/FEHiCo8rO2QfMs\n1HFWflJ9JJOYJ3uMAat6TskeYZXzxFlzOmI1LoiY3hcgy9LzdxsixODOZsFYfDBS\ndNIlnk/1Qa/v1S2p1fQ8vDBJhe6u6KGkoU2HfJltsJnmbxD7P/vNUZHrvF1sp4gQ\nth9fxUhQMNDjY1eVr5/aZbXqspyxXvamSFr2/p/fL/5zeafRSsRMNpguR3MIiKxY\ni/Hos0akPEOFlvhzsiWQMtzG3qzmohb9nsMv1WRHVhqVAhVw3Vbpzd0+a83AI+Gw\nczlM0J3ihx5J8LrYLV2bD3dMKhwBvv2xA4rQ13otaEj1+ByZ8ZEiQIHEbpNXf+xm\nUxGWWHk4qNLD2b/MYXZWRSy/kNUZu372I9sp53HLbml4C1TRMPakBw2OWODvS+JB\nGi+b+SuNHBG/KgbSZlBr/OZInmQfK3R0F3XQNEAOKApKnbTjs8yQ8PTs1JH9d2FS\nszm5A58zjThXM6TIIBBh634LOca7/6wN1U66k6ZeluAMzzPKN04=\n=Kb4x\n-----END PGP SIGNATURE-----", "payload": "tree 98b15358018479532212c7be6266e49ea0b5fca6\nparent 9a2bca6a52158577817f0cc1f13c1b48206bf275\nauthor Matthias Schiffer <mschiffer@universe-factory.net> 1587049865 +0200\ncommitter Matthias Schiffer <mschiffer@universe-factory.net> 1587050641 +0200\n\nExtend UI tests for fixed check_attr()\n\nAdd testcases for the `#[track_caller]` and `#[target_feature(..)]`\nfunction attributes for errors that were not not caught before.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c700dc11c72993d5fa5905355a69c6524e960d3", "html_url": "https://github.com/rust-lang/rust/commit/6c700dc11c72993d5fa5905355a69c6524e960d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c700dc11c72993d5fa5905355a69c6524e960d3/comments", "author": {"login": "NeoRaider", "id": 419139, "node_id": "MDQ6VXNlcjQxOTEzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/419139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NeoRaider", "html_url": "https://github.com/NeoRaider", "followers_url": "https://api.github.com/users/NeoRaider/followers", "following_url": "https://api.github.com/users/NeoRaider/following{/other_user}", "gists_url": "https://api.github.com/users/NeoRaider/gists{/gist_id}", "starred_url": "https://api.github.com/users/NeoRaider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NeoRaider/subscriptions", "organizations_url": "https://api.github.com/users/NeoRaider/orgs", "repos_url": "https://api.github.com/users/NeoRaider/repos", "events_url": "https://api.github.com/users/NeoRaider/events{/privacy}", "received_events_url": "https://api.github.com/users/NeoRaider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "NeoRaider", "id": 419139, "node_id": "MDQ6VXNlcjQxOTEzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/419139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NeoRaider", "html_url": "https://github.com/NeoRaider", "followers_url": "https://api.github.com/users/NeoRaider/followers", "following_url": "https://api.github.com/users/NeoRaider/following{/other_user}", "gists_url": "https://api.github.com/users/NeoRaider/gists{/gist_id}", "starred_url": "https://api.github.com/users/NeoRaider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NeoRaider/subscriptions", "organizations_url": "https://api.github.com/users/NeoRaider/orgs", "repos_url": "https://api.github.com/users/NeoRaider/repos", "events_url": "https://api.github.com/users/NeoRaider/events{/privacy}", "received_events_url": "https://api.github.com/users/NeoRaider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a2bca6a52158577817f0cc1f13c1b48206bf275", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a2bca6a52158577817f0cc1f13c1b48206bf275", "html_url": "https://github.com/rust-lang/rust/commit/9a2bca6a52158577817f0cc1f13c1b48206bf275"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "1145f7786c78be36d5b10af8bd4c6428edd96d79", "filename": "src/test/ui/rfc-2091-track-caller/error-with-invalid-abi.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c700dc11c72993d5fa5905355a69c6524e960d3/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c700dc11c72993d5fa5905355a69c6524e960d3/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.rs?ref=6c700dc11c72993d5fa5905355a69c6524e960d3", "patch": "@@ -4,4 +4,10 @@\n extern \"C\" fn f() {}\n //~^^ ERROR `#[track_caller]` requires Rust ABI\n \n+extern \"C\" {\n+    #[track_caller]\n+    fn g();\n+    //~^^ ERROR `#[track_caller]` requires Rust ABI\n+}\n+\n fn main() {}"}, {"sha": "e08c52fabd6b771e36f176481165b62c5e1e7b50", "filename": "src/test/ui/rfc-2091-track-caller/error-with-invalid-abi.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6c700dc11c72993d5fa5905355a69c6524e960d3/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c700dc11c72993d5fa5905355a69c6524e960d3/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-invalid-abi.stderr?ref=6c700dc11c72993d5fa5905355a69c6524e960d3", "patch": "@@ -4,6 +4,12 @@ error[E0737]: `#[track_caller]` requires Rust ABI\n LL | #[track_caller]\n    | ^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error[E0737]: `#[track_caller]` requires Rust ABI\n+  --> $DIR/error-with-invalid-abi.rs:8:5\n+   |\n+LL |     #[track_caller]\n+   |     ^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0737`."}, {"sha": "19c8c3dd4886b11e43c8458b4b33d08c63111789", "filename": "src/test/ui/target-feature/invalid-attribute.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6c700dc11c72993d5fa5905355a69c6524e960d3/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c700dc11c72993d5fa5905355a69c6524e960d3/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.rs?ref=6c700dc11c72993d5fa5905355a69c6524e960d3", "patch": "@@ -65,9 +65,26 @@ trait Baz { }\n #[target_feature(enable = \"sse2\")]\n unsafe fn test() {}\n \n+trait Quux {\n+    fn foo();\n+}\n+\n+impl Quux for Foo {\n+    #[target_feature(enable = \"sse2\")]\n+    //~^ ERROR `#[target_feature(..)]` can only be applied to `unsafe` functions\n+    //~| NOTE can only be applied to `unsafe` functions\n+    fn foo() {}\n+    //~^ NOTE not an `unsafe` function\n+}\n+\n fn main() {\n     unsafe {\n         foo();\n         bar();\n     }\n+    #[target_feature(enable = \"sse2\")]\n+    //~^ ERROR `#[target_feature(..)]` can only be applied to `unsafe` functions\n+    //~| NOTE can only be applied to `unsafe` functions\n+    || {};\n+    //~^ NOTE not an `unsafe` function\n }"}, {"sha": "76273d66ac2cf2df4747c87672ae05f49912f649", "filename": "src/test/ui/target-feature/invalid-attribute.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6c700dc11c72993d5fa5905355a69c6524e960d3/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c700dc11c72993d5fa5905355a69c6524e960d3/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature%2Finvalid-attribute.stderr?ref=6c700dc11c72993d5fa5905355a69c6524e960d3", "patch": "@@ -91,5 +91,23 @@ error: cannot use `#[inline(always)]` with `#[target_feature]`\n LL | #[inline(always)]\n    | ^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 12 previous errors\n+error: `#[target_feature(..)]` can only be applied to `unsafe` functions\n+  --> $DIR/invalid-attribute.rs:85:5\n+   |\n+LL |     #[target_feature(enable = \"sse2\")]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can only be applied to `unsafe` functions\n+...\n+LL |     || {};\n+   |     ----- not an `unsafe` function\n+\n+error: `#[target_feature(..)]` can only be applied to `unsafe` functions\n+  --> $DIR/invalid-attribute.rs:73:5\n+   |\n+LL |     #[target_feature(enable = \"sse2\")]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can only be applied to `unsafe` functions\n+...\n+LL |     fn foo() {}\n+   |     ----------- not an `unsafe` function\n+\n+error: aborting due to 14 previous errors\n "}]}