{"sha": "df8f5375a6b246a4ffee3b074ec749ad95a1f430", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmOGY1Mzc1YTZiMjQ2YTRmZmVlM2IwNzRlYzc0OWFkOTVhMWY0MzA=", "commit": {"author": {"name": "Sean Griffin", "email": "sean@seantheprogrammer.com", "date": "2018-02-07T17:16:44Z"}, "committer": {"name": "Sean Griffin", "email": "sean@seantheprogrammer.com", "date": "2018-05-02T13:36:08Z"}, "message": "introduce `UniverseIndex` into `InferCtxt`\n\nAlways using root environment for now.", "tree": {"sha": "c8591f78f2992d8c7b2560fedc03718daf03d3fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8591f78f2992d8c7b2560fedc03718daf03d3fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df8f5375a6b246a4ffee3b074ec749ad95a1f430", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df8f5375a6b246a4ffee3b074ec749ad95a1f430", "html_url": "https://github.com/rust-lang/rust/commit/df8f5375a6b246a4ffee3b074ec749ad95a1f430", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df8f5375a6b246a4ffee3b074ec749ad95a1f430/comments", "author": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a87289fa4f49b6bdd62f33f69a580026223421f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a87289fa4f49b6bdd62f33f69a580026223421f", "html_url": "https://github.com/rust-lang/rust/commit/6a87289fa4f49b6bdd62f33f69a580026223421f"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "08ae535b8e8702b6fccd0c85b8586b9d02a8a425", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/df8f5375a6b246a4ffee3b074ec749ad95a1f430/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df8f5375a6b246a4ffee3b074ec749ad95a1f430/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=df8f5375a6b246a4ffee3b074ec749ad95a1f430", "patch": "@@ -183,6 +183,17 @@ pub struct InferCtxt<'a, 'gcx: 'a+'tcx, 'tcx: 'a> {\n     // obligations within. This is expected to be done 'late enough'\n     // that all type inference variables have been bound and so forth.\n     pub region_obligations: RefCell<Vec<(ast::NodeId, RegionObligation<'tcx>)>>,\n+\n+    /// What is the innermost universe we have created? Starts out as\n+    /// `UniverseIndex::root()` but grows from there as we enter\n+    /// universal quantifiers.\n+    ///\n+    /// NB: At present, we exclude the universal quantifiers on the\n+    /// item we are type-checking, and just consider those names as\n+    /// part of the root universe. So this would only get incremented\n+    /// when we enter into a higher-ranked (`for<..>`) type or trait\n+    /// bound.\n+    pub universe: ty::UniverseIndex,\n }\n \n /// A map returned by `skolemize_late_bound_regions()` indicating the skolemized\n@@ -455,6 +466,7 @@ impl<'a, 'gcx, 'tcx> InferCtxtBuilder<'a, 'gcx, 'tcx> {\n             err_count_on_creation: tcx.sess.err_count(),\n             in_snapshot: Cell::new(false),\n             region_obligations: RefCell::new(vec![]),\n+            universe: ty::UniverseIndex::ROOT,\n         }))\n     }\n }"}, {"sha": "744b92dbe0dcb49bbfe20b9971913a0e23c8a354", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/df8f5375a6b246a4ffee3b074ec749ad95a1f430/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df8f5375a6b246a4ffee3b074ec749ad95a1f430/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=df8f5375a6b246a4ffee3b074ec749ad95a1f430", "patch": "@@ -1376,9 +1376,7 @@ pub struct UniverseIndex(u32);\n impl UniverseIndex {\n     /// The root universe, where things that the user defined are\n     /// visible.\n-    pub fn root() -> UniverseIndex {\n-        UniverseIndex(0)\n-    }\n+    pub const ROOT: Self = UniverseIndex(0);\n \n     /// A \"subuniverse\" corresponds to being inside a `forall` quantifier.\n     /// So, for example, suppose we have this type in universe `U`:"}]}