{"sha": "21b5950cf92a978f88dd65f408382637b60c52b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxYjU5NTBjZjkyYTk3OGY4OGRkNjVmNDA4MzgyNjM3YjYwYzUyYjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-22T07:55:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-07T08:20:54Z"}, "message": "Unique/NonNull::from: make sure we convert to raw pointers ASAP\n\nBy going through a shared reference, we share the destination as read-only, meaning we can read but not write with the raw pointers", "tree": {"sha": "bfa4e03f53d010486ad8e34a91f07a1f93370032", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfa4e03f53d010486ad8e34a91f07a1f93370032"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21b5950cf92a978f88dd65f408382637b60c52b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21b5950cf92a978f88dd65f408382637b60c52b5", "html_url": "https://github.com/rust-lang/rust/commit/21b5950cf92a978f88dd65f408382637b60c52b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21b5950cf92a978f88dd65f408382637b60c52b5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2fb99bc17527798aeeef1d7ccc61811a9362131", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2fb99bc17527798aeeef1d7ccc61811a9362131", "html_url": "https://github.com/rust-lang/rust/commit/a2fb99bc17527798aeeef1d7ccc61811a9362131"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "452f7a62f4b339b27063123ae40b9c684ad175ee", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/21b5950cf92a978f88dd65f408382637b60c52b5/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21b5950cf92a978f88dd65f408382637b60c52b5/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=21b5950cf92a978f88dd65f408382637b60c52b5", "patch": "@@ -2815,14 +2815,14 @@ impl<T: ?Sized> fmt::Pointer for Unique<T> {\n #[unstable(feature = \"ptr_internals\", issue = \"0\")]\n impl<'a, T: ?Sized> From<&'a mut T> for Unique<T> {\n     fn from(reference: &'a mut T) -> Self {\n-        Unique { pointer: unsafe { NonZero(reference as _) }, _marker: PhantomData }\n+        Unique { pointer: unsafe { NonZero(reference as *mut T) }, _marker: PhantomData }\n     }\n }\n \n #[unstable(feature = \"ptr_internals\", issue = \"0\")]\n impl<'a, T: ?Sized> From<&'a T> for Unique<T> {\n     fn from(reference: &'a T) -> Self {\n-        Unique { pointer: unsafe { NonZero(reference as _) }, _marker: PhantomData }\n+        Unique { pointer: unsafe { NonZero(reference as *const T) }, _marker: PhantomData }\n     }\n }\n \n@@ -3025,14 +3025,14 @@ impl<T: ?Sized> From<Unique<T>> for NonNull<T> {\n impl<'a, T: ?Sized> From<&'a mut T> for NonNull<T> {\n     #[inline]\n     fn from(reference: &'a mut T) -> Self {\n-        NonNull { pointer: unsafe { NonZero(reference as _) } }\n+        NonNull { pointer: unsafe { NonZero(reference as *mut T) } }\n     }\n }\n \n #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n impl<'a, T: ?Sized> From<&'a T> for NonNull<T> {\n     #[inline]\n     fn from(reference: &'a T) -> Self {\n-        NonNull { pointer: unsafe { NonZero(reference as _) } }\n+        NonNull { pointer: unsafe { NonZero(reference as *const T) } }\n     }\n }"}]}