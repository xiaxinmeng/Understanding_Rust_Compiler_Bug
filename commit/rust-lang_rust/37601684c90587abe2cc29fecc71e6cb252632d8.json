{"sha": "37601684c90587abe2cc29fecc71e6cb252632d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NjAxNjg0YzkwNTg3YWJlMmNjMjlmZWNjNzFlNmNiMjUyNjMyZDg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-17T23:51:58Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-18T00:00:39Z"}, "message": "rustdoc: Add an item fold", "tree": {"sha": "6bb91a2dd61b16beff9bf8578ac152a6e86f751d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bb91a2dd61b16beff9bf8578ac152a6e86f751d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37601684c90587abe2cc29fecc71e6cb252632d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37601684c90587abe2cc29fecc71e6cb252632d8", "html_url": "https://github.com/rust-lang/rust/commit/37601684c90587abe2cc29fecc71e6cb252632d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37601684c90587abe2cc29fecc71e6cb252632d8/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e376b78cf22222091fd050af81fba6a634c6482", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e376b78cf22222091fd050af81fba6a634c6482", "html_url": "https://github.com/rust-lang/rust/commit/5e376b78cf22222091fd050af81fba6a634c6482"}], "stats": {"total": 63, "additions": 49, "deletions": 14}, "files": [{"sha": "9a7f7396084309f314d10b76e384a037982cf0e8", "filename": "src/rustdoc/fold.rs", "status": "modified", "additions": 49, "deletions": 14, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/37601684c90587abe2cc29fecc71e6cb252632d8/src%2Frustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37601684c90587abe2cc29fecc71e6cb252632d8/src%2Frustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ffold.rs?ref=37601684c90587abe2cc29fecc71e6cb252632d8", "patch": "@@ -2,6 +2,7 @@ export fold;\n export fold_crate, fold_mod, fold_fn;\n export default_seq_fold;\n export default_seq_fold_crate;\n+export default_seq_fold_item;\n export default_seq_fold_mod;\n export default_seq_fold_fn;\n export default_seq_fold_const;\n@@ -14,6 +15,7 @@ export default_seq_fold_type;\n enum fold<T> = t<T>;\n \n type fold_crate<T> = fn~(fold: fold<T>, doc: doc::cratedoc) -> doc::cratedoc;\n+type fold_item<T> = fn~(fold: fold<T>, doc: doc::itemdoc) -> doc::itemdoc;\n type fold_mod<T> = fn~(fold: fold<T>, doc: doc::moddoc) -> doc::moddoc;\n type fold_fn<T> = fn~(fold: fold<T>, doc: doc::fndoc) -> doc::fndoc;\n type fold_const<T> = fn~(fold: fold<T>, doc: doc::constdoc) -> doc::constdoc;\n@@ -26,6 +28,7 @@ type fold_type<T> = fn~(fold: fold<T>, doc: doc::tydoc) -> doc::tydoc;\n type t<T> = {\n     ctxt: T,\n     fold_crate: fold_crate<T>,\n+    fold_item: fold_item<T>,\n     fold_mod: fold_mod<T>,\n     fold_fn: fold_fn<T>,\n     fold_const: fold_const<T>,\n@@ -42,6 +45,7 @@ type t<T> = {\n fn mk_fold<T:copy>(\n     ctxt: T,\n     fold_crate: fold_crate<T>,\n+    fold_item: fold_item<T>,\n     fold_mod: fold_mod<T>,\n     fold_fn: fold_fn<T>,\n     fold_const: fold_const<T>,\n@@ -54,6 +58,7 @@ fn mk_fold<T:copy>(\n     fold({\n         ctxt: ctxt,\n         fold_crate: fold_crate,\n+        fold_item: fold_item,\n         fold_mod: fold_mod,\n         fold_fn: fold_fn,\n         fold_const: fold_const,\n@@ -69,6 +74,7 @@ fn default_seq_fold<T:copy>(ctxt: T) -> fold<T> {\n     mk_fold(\n         ctxt,\n         {|f, d| default_seq_fold_crate(f, d)},\n+        {|f, d| default_seq_fold_item(f, d)},\n         {|f, d| default_seq_fold_mod(f, d)},\n         {|f, d| default_seq_fold_fn(f, d)},\n         {|f, d| default_seq_fold_const(f, d)},\n@@ -89,11 +95,19 @@ fn default_seq_fold_crate<T>(\n     }\n }\n \n+fn default_seq_fold_item<T>(\n+    _fold: fold<T>,\n+    doc: doc::itemdoc\n+) -> doc::itemdoc {\n+    doc\n+}\n+\n fn default_seq_fold_mod<T>(\n     fold: fold<T>,\n     doc: doc::moddoc\n ) -> doc::moddoc {\n     {\n+        item: fold.fold_item(fold, doc.item),\n         items: ~vec::map(*doc.items) {|itemtag|\n             alt itemtag {\n               doc::modtag(moddoc) {\n@@ -127,52 +141,73 @@ fn default_seq_fold_mod<T>(\n }\n \n fn default_seq_fold_fn<T>(\n-    _fold: fold<T>,\n+    fold: fold<T>,\n     doc: doc::fndoc\n ) -> doc::fndoc {\n-    doc\n+    {\n+        item: fold.fold_item(fold, doc.item)\n+        with doc\n+    }\n }\n \n fn default_seq_fold_const<T>(\n-    _fold: fold<T>,\n+    fold: fold<T>,\n     doc: doc::constdoc\n ) -> doc::constdoc {\n-    doc\n+    {\n+        item: fold.fold_item(fold, doc.item)\n+        with doc\n+    }\n }\n \n fn default_seq_fold_enum<T>(\n-    _fold: fold<T>,\n+    fold: fold<T>,\n     doc: doc::enumdoc\n ) -> doc::enumdoc {\n-    doc\n+    {\n+        item: fold.fold_item(fold, doc.item)\n+        with doc\n+    }\n }\n \n fn default_seq_fold_res<T>(\n-    _fold: fold<T>,\n+    fold: fold<T>,\n     doc: doc::resdoc\n ) -> doc::resdoc {\n-    doc\n+    {\n+        item: fold.fold_item(fold, doc.item)\n+        with doc\n+    }\n }\n \n fn default_seq_fold_iface<T>(\n-    _fold: fold<T>,\n+    fold: fold<T>,\n     doc: doc::ifacedoc\n ) -> doc::ifacedoc {\n-    doc\n+    {\n+        item: fold.fold_item(fold, doc.item)\n+        with doc\n+    }\n }\n \n fn default_seq_fold_impl<T>(\n-    _fold: fold<T>,\n+    fold: fold<T>,\n     doc: doc::impldoc\n ) -> doc::impldoc {\n-    doc\n+    {\n+        item: fold.fold_item(fold, doc.item)\n+        with doc\n+    }\n }\n \n fn default_seq_fold_type<T>(\n-    _fold: fold<T>,\n+    fold: fold<T>,\n     doc: doc::tydoc\n ) -> doc::tydoc {\n-    doc\n+    {\n+        item: fold.fold_item(fold, doc.item)\n+        with doc\n+    }\n }\n \n #[test]"}]}