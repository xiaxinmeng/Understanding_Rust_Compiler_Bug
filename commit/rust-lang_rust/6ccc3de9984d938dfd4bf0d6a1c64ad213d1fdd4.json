{"sha": "6ccc3de9984d938dfd4bf0d6a1c64ad213d1fdd4", "node_id": "C_kwDOAAsO6NoAKDZjY2MzZGU5OTg0ZDkzOGRmZDRiZjBkNmExYzY0YWQyMTNkMWZkZDQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-21T14:03:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-21T14:03:00Z"}, "message": "Rollup merge of #111770 - liushuyu:ubuntu/beta-rev-no-git, r=ozkanonur\n\nRead beta version from the version file if building from a source tarball\n\nThis pull request changes the `bootstrap` behaviour so that when building `rustc` from a source tarball, the beta revision number is correctly read from the `version` file instead of erroring out by invoking `git`.\n\nThe `version` file is observed to only exist in the official source tarball and has the following format:\n\n```\n1.70.0-beta.4 (2013813b6 2023-05-07)\n```", "tree": {"sha": "4616dc02196611fe37a6bf8efa16900f45fc73df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4616dc02196611fe37a6bf8efa16900f45fc73df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ccc3de9984d938dfd4bf0d6a1c64ad213d1fdd4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkaiSUCRBK7hj4Ov3rIwAAcugIAFegj+nejJBeianQPy3FHVIX\nrs2ii2P9RhtngsVkYtfhZ1LEmEof+Eigczbr0XPZv2kjyfy0HzzaRit/2JP05YvE\nsKL4fcIEFC9CQ7kbSAw4jU1JDncCaX3z1Wty/aCoBQtDGAjTxbuo5wtatCw3PGZC\ndsHHVx1Anf47pvXXf0VuZWh0RdzKenjDvDBQdBFh3xNM8TLkH+Q9r4pQJ04UTKGp\nq8pd9jhHnJgWNWHfvh1l8LfwgwyMnsIqA+OFTLGsWxDVc9fX8+XT4Dyk7KPG+COJ\n/KCnOQSiNXTgweMU9LhXMzpwOaQWbVe4VolnMdgzgCavBqmR36BHOcfrPaAR6AA=\n=JLCW\n-----END PGP SIGNATURE-----\n", "payload": "tree 4616dc02196611fe37a6bf8efa16900f45fc73df\nparent cb5dd1d5982909efa355f76f6524edd9616a5085\nparent 343a0bf5c2aebaaa422bd1f92563b606131cb6bd\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1684677780 +0200\ncommitter GitHub <noreply@github.com> 1684677780 +0200\n\nRollup merge of #111770 - liushuyu:ubuntu/beta-rev-no-git, r=ozkanonur\n\nRead beta version from the version file if building from a source tarball\n\nThis pull request changes the `bootstrap` behaviour so that when building `rustc` from a source tarball, the beta revision number is correctly read from the `version` file instead of erroring out by invoking `git`.\n\nThe `version` file is observed to only exist in the official source tarball and has the following format:\n\n```\n1.70.0-beta.4 (2013813b6 2023-05-07)\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ccc3de9984d938dfd4bf0d6a1c64ad213d1fdd4", "html_url": "https://github.com/rust-lang/rust/commit/6ccc3de9984d938dfd4bf0d6a1c64ad213d1fdd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ccc3de9984d938dfd4bf0d6a1c64ad213d1fdd4/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb5dd1d5982909efa355f76f6524edd9616a5085", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb5dd1d5982909efa355f76f6524edd9616a5085", "html_url": "https://github.com/rust-lang/rust/commit/cb5dd1d5982909efa355f76f6524edd9616a5085"}, {"sha": "343a0bf5c2aebaaa422bd1f92563b606131cb6bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/343a0bf5c2aebaaa422bd1f92563b606131cb6bd", "html_url": "https://github.com/rust-lang/rust/commit/343a0bf5c2aebaaa422bd1f92563b606131cb6bd"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "edca8fe9b13afd2e51a624205f8fd046c61e8a75", "filename": "src/bootstrap/builder/tests.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6ccc3de9984d938dfd4bf0d6a1c64ad213d1fdd4/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ccc3de9984d938dfd4bf0d6a1c64ad213d1fdd4/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder%2Ftests.rs?ref=6ccc3de9984d938dfd4bf0d6a1c64ad213d1fdd4", "patch": "@@ -146,6 +146,22 @@ fn alias_and_path_for_library() {\n     );\n }\n \n+#[test]\n+fn test_beta_rev_parsing() {\n+    use crate::extract_beta_rev;\n+\n+    // single digit revision\n+    assert_eq!(extract_beta_rev(\"1.99.9-beta.7 (xxxxxx)\"), Some(\"7\".to_string()));\n+    // multiple digits\n+    assert_eq!(extract_beta_rev(\"1.99.9-beta.777 (xxxxxx)\"), Some(\"777\".to_string()));\n+    // nightly channel (no beta revision)\n+    assert_eq!(extract_beta_rev(\"1.99.9-nightly (xxxxxx)\"), None);\n+    // stable channel (no beta revision)\n+    assert_eq!(extract_beta_rev(\"1.99.9 (xxxxxxx)\"), None);\n+    // invalid string\n+    assert_eq!(extract_beta_rev(\"invalid\"), None);\n+}\n+\n mod defaults {\n     use super::{configure, first, run_build};\n     use crate::builder::*;"}, {"sha": "6ee50ee657399283b4e66b0c92d8dcb2d5232d78", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/6ccc3de9984d938dfd4bf0d6a1c64ad213d1fdd4/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ccc3de9984d938dfd4bf0d6a1c64ad213d1fdd4/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=6ccc3de9984d938dfd4bf0d6a1c64ad213d1fdd4", "patch": "@@ -1324,7 +1324,7 @@ impl Build {\n         match &self.config.channel[..] {\n             \"stable\" => num.to_string(),\n             \"beta\" => {\n-                if self.rust_info().is_managed_git_subrepository() && !self.config.omit_git_hash {\n+                if !self.config.omit_git_hash {\n                     format!(\"{}-beta.{}\", num, self.beta_prerelease_version())\n                 } else {\n                     format!(\"{}-beta\", num)\n@@ -1336,18 +1336,28 @@ impl Build {\n     }\n \n     fn beta_prerelease_version(&self) -> u32 {\n+        fn extract_beta_rev_from_file<P: AsRef<Path>>(version_file: P) -> Option<String> {\n+            let version = fs::read_to_string(version_file).ok()?;\n+\n+            extract_beta_rev(&version)\n+        }\n+\n         if let Some(s) = self.prerelease_version.get() {\n             return s;\n         }\n \n-        // Figure out how many merge commits happened since we branched off master.\n-        // That's our beta number!\n-        // (Note that we use a `..` range, not the `...` symmetric difference.)\n-        let count =\n+        // First check if there is a version file available.\n+        // If available, we read the beta revision from that file.\n+        // This only happens when building from a source tarball when Git should not be used.\n+        let count = extract_beta_rev_from_file(self.src.join(\"version\")).unwrap_or_else(|| {\n+            // Figure out how many merge commits happened since we branched off master.\n+            // That's our beta number!\n+            // (Note that we use a `..` range, not the `...` symmetric difference.)\n             output(self.config.git().arg(\"rev-list\").arg(\"--count\").arg(\"--merges\").arg(format!(\n                 \"refs/remotes/origin/{}..HEAD\",\n                 self.config.stage0_metadata.config.nightly_branch\n-            )));\n+            )))\n+        });\n         let n = count.trim().parse().unwrap();\n         self.prerelease_version.set(Some(n));\n         n\n@@ -1707,6 +1717,17 @@ to download LLVM rather than building it.\n     }\n }\n \n+/// Extract the beta revision from the full version string.\n+///\n+/// The full version string looks like \"a.b.c-beta.y\". And we need to extract\n+/// the \"y\" part from the string.\n+pub fn extract_beta_rev(version: &str) -> Option<String> {\n+    let parts = version.splitn(2, \"-beta.\").collect::<Vec<_>>();\n+    let count = parts.get(1).and_then(|s| s.find(' ').map(|p| (&s[..p]).to_string()));\n+\n+    count\n+}\n+\n #[cfg(unix)]\n fn chmod(path: &Path, perms: u32) {\n     use std::os::unix::fs::*;"}]}