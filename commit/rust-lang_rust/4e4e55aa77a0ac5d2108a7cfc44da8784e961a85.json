{"sha": "4e4e55aa77a0ac5d2108a7cfc44da8784e961a85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNGU1NWFhNzdhMGFjNWQyMTA4YTdjZmM0NGRhODc4NGU5NjFhODU=", "commit": {"author": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2017-08-07T14:21:08Z"}, "committer": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2017-08-14T13:07:21Z"}, "message": "Rename `BuiltinShim` -> `CloneShim`", "tree": {"sha": "f0426e768cb60d4f0828ebbf84cf57266077f71d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0426e768cb60d4f0828ebbf84cf57266077f71d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85", "html_url": "https://github.com/rust-lang/rust/commit/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91aa99607f1076c8f76614ed6f15b1645e87e5a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/91aa99607f1076c8f76614ed6f15b1645e87e5a8", "html_url": "https://github.com/rust-lang/rust/commit/91aa99607f1076c8f76614ed6f15b1645e87e5a8"}], "stats": {"total": 37, "additions": 18, "deletions": 19}, "files": [{"sha": "ec957b427be339ec5e0e0eb68328708431518468", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=4e4e55aa77a0ac5d2108a7cfc44da8784e961a85", "patch": "@@ -721,7 +721,7 @@ impl<'a, 'gcx, 'tcx> HashStable<StableHashingContext<'a, 'gcx, 'tcx>> for ty::In\n                 def_id.hash_stable(hcx, hasher);\n                 t.hash_stable(hcx, hasher);\n             }\n-            ty::InstanceDef::BuiltinShim(def_id, t) => {\n+            ty::InstanceDef::CloneShim(def_id, t) => {\n                 def_id.hash_stable(hcx, hasher);\n                 t.hash_stable(hcx, hasher);\n             }"}, {"sha": "7d543f689c24d179283eaa80904b2906b4070bab", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=4e4e55aa77a0ac5d2108a7cfc44da8784e961a85", "patch": "@@ -39,7 +39,7 @@ pub enum InstanceDef<'tcx> {\n     DropGlue(DefId, Option<Ty<'tcx>>),\n \n     /// Builtin method implementation, e.g. `Clone::clone`.\n-    BuiltinShim(DefId, Ty<'tcx>),\n+    CloneShim(DefId, Ty<'tcx>),\n }\n \n impl<'tcx> InstanceDef<'tcx> {\n@@ -52,7 +52,7 @@ impl<'tcx> InstanceDef<'tcx> {\n             InstanceDef::Intrinsic(def_id, ) |\n             InstanceDef::ClosureOnceShim { call_once: def_id } |\n             InstanceDef::DropGlue(def_id, _) |\n-            InstanceDef::BuiltinShim(def_id, _) => def_id\n+            InstanceDef::CloneShim(def_id, _) => def_id\n         }\n     }\n \n@@ -87,7 +87,7 @@ impl<'tcx> fmt::Display for Instance<'tcx> {\n             InstanceDef::DropGlue(_, ty) => {\n                 write!(f, \" - shim({:?})\", ty)\n             }\n-            InstanceDef::BuiltinShim(_, ty) => {\n+            InstanceDef::CloneShim(_, ty) => {\n                 write!(f, \" - shim({:?})\", ty)\n             }\n         }"}, {"sha": "8c77dde0d2564117dd125281cb3e778246576fcb", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=4e4e55aa77a0ac5d2108a7cfc44da8784e961a85", "patch": "@@ -2228,7 +2228,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             ty::InstanceDef::Virtual(..) |\n             ty::InstanceDef::ClosureOnceShim { .. } |\n             ty::InstanceDef::DropGlue(..) |\n-            ty::InstanceDef::BuiltinShim(..) => {\n+            ty::InstanceDef::CloneShim(..) => {\n                 self.mir_shims(instance)\n             }\n         }"}, {"sha": "818e713cf4850aef13a732f288cc80dcdfa7dfb6", "filename": "src/librustc_mir/shim.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc_mir%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc_mir%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fshim.rs?ref=4e4e55aa77a0ac5d2108a7cfc44da8784e961a85", "patch": "@@ -99,16 +99,15 @@ fn make_shim<'a, 'tcx>(tcx: ty::TyCtxt<'a, 'tcx, 'tcx>,\n         ty::InstanceDef::DropGlue(def_id, ty) => {\n             build_drop_shim(tcx, def_id, ty)\n         }\n-        ty::InstanceDef::BuiltinShim(def_id, ty) => {\n+        ty::InstanceDef::CloneShim(def_id, ty) => {\n             let name = tcx.item_name(def_id).as_str();\n-            let trait_id = tcx.trait_of_item(def_id);\n-            if trait_id == tcx.lang_items.clone_trait() && name == \"clone\" {\n+            if name == \"clone\" {\n                 build_clone_shim(tcx, def_id, ty)\n-            } else if trait_id == tcx.lang_items.clone_trait() && name == \"clone_from\" {\n+            } else if name == \"clone_from\" {\n                 debug!(\"make_shim({:?}: using default trait implementation\", instance);\n                 return tcx.optimized_mir(def_id);\n             } else {\n-                bug!(\"builtin shim {:?} not supported\", instance)\n+                bug!(\"builtin clone shim {:?} not supported\", instance)\n             }\n         }\n         ty::InstanceDef::Intrinsic(_) => {\n@@ -272,10 +271,10 @@ impl<'a, 'tcx> DropElaborator<'a, 'tcx> for DropShimElaborator<'a, 'tcx> {\n     }\n }\n \n-/// Build a `Clone::clone` shim for `recvr_ty`. Here, `def_id` is `Clone::clone`.\n+/// Build a `Clone::clone` shim for `self_ty`. Here, `def_id` is `Clone::clone`.\n fn build_clone_shim<'a, 'tcx>(tcx: ty::TyCtxt<'a, 'tcx, 'tcx>,\n                               def_id: DefId,\n-                              rcvr_ty: ty::Ty<'tcx>)\n+                              self_ty: ty::Ty<'tcx>)\n                               -> Mir<'tcx>\n {\n     let sig = tcx.fn_sig(def_id);\n@@ -348,7 +347,7 @@ fn build_clone_shim<'a, 'tcx>(tcx: ty::TyCtxt<'a, 'tcx, 'tcx>,\n         loc\n     };\n \n-    match rcvr_ty.sty {\n+    match self_ty.sty {\n         ty::TyArray(ty, len) => {\n             let mut returns = Vec::new();\n             for i in 0..len {"}, {"sha": "a6f7e931a678e83a797a7f3facb5aa9c8bebf155", "filename": "src/librustc_trans/collector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc_trans%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc_trans%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcollector.rs?ref=4e4e55aa77a0ac5d2108a7cfc44da8784e961a85", "patch": "@@ -700,7 +700,7 @@ fn visit_instance_use<'a, 'tcx>(scx: &SharedCrateContext<'a, 'tcx>,\n         ty::InstanceDef::ClosureOnceShim { .. } |\n         ty::InstanceDef::Item(..) |\n         ty::InstanceDef::FnPtrShim(..) |\n-        ty::InstanceDef::BuiltinShim(..) => {\n+        ty::InstanceDef::CloneShim(..) => {\n             output.push(create_fn_trans_item(instance));\n         }\n     }\n@@ -718,7 +718,7 @@ fn should_trans_locally<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, instance: &Instan\n         ty::InstanceDef::FnPtrShim(..) |\n         ty::InstanceDef::DropGlue(..) |\n         ty::InstanceDef::Intrinsic(_) |\n-        ty::InstanceDef::BuiltinShim(..) => return true\n+        ty::InstanceDef::CloneShim(..) => return true\n     };\n     match tcx.hir.get_if_local(def_id) {\n         Some(hir_map::NodeForeignItem(..)) => {"}, {"sha": "b0d8be23b0d968358b9027204582a3f9d97fa649", "filename": "src/librustc_trans/monomorphize.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc_trans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc_trans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmonomorphize.rs?ref=4e4e55aa77a0ac5d2108a7cfc44da8784e961a85", "patch": "@@ -143,9 +143,9 @@ fn resolve_associated_item<'a, 'tcx>(\n                 substs: rcvr_substs\n             }\n         }\n-        traits::VtableBuiltin(..) => {\n+        traits::VtableBuiltin(..) if Some(trait_id) == tcx.lang_items.clone_trait() => {\n             Instance {\n-                def: ty::InstanceDef::BuiltinShim(def_id, trait_ref.self_ty()),\n+                def: ty::InstanceDef::CloneShim(def_id, trait_ref.self_ty()),\n                 substs: rcvr_substs\n             }\n         }"}, {"sha": "26256fa78dd4d51706722669445697cd961fd070", "filename": "src/librustc_trans/partitioning.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc_trans%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4e55aa77a0ac5d2108a7cfc44da8784e961a85/src%2Flibrustc_trans%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fpartitioning.rs?ref=4e4e55aa77a0ac5d2108a7cfc44da8784e961a85", "patch": "@@ -362,7 +362,7 @@ fn place_root_translation_items<'a, 'tcx, I>(scx: &SharedCrateContext<'a, 'tcx>,\n                                 InstanceDef::Intrinsic(..) |\n                                 InstanceDef::ClosureOnceShim { .. } |\n                                 InstanceDef::DropGlue(..) |\n-                                InstanceDef::BuiltinShim(..) => {\n+                                InstanceDef::CloneShim(..) => {\n                                     bug!(\"partitioning: Encountered unexpected\n                                           root translation item: {:?}\",\n                                           trans_item)\n@@ -605,7 +605,7 @@ fn characteristic_def_id_of_trans_item<'a, 'tcx>(scx: &SharedCrateContext<'a, 't\n                 ty::InstanceDef::Intrinsic(..) |\n                 ty::InstanceDef::DropGlue(..) |\n                 ty::InstanceDef::Virtual(..) |\n-                ty::InstanceDef::BuiltinShim(..) => return None\n+                ty::InstanceDef::CloneShim(..) => return None\n             };\n \n             // If this is a method, we want to put it into the same module as"}]}