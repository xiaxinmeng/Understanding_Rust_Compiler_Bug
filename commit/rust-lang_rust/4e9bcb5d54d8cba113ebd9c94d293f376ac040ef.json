{"sha": "4e9bcb5d54d8cba113ebd9c94d293f376ac040ef", "node_id": "C_kwDOAAsO6NoAKDRlOWJjYjVkNTRkOGNiYTExM2ViZDljOTRkMjkzZjM3NmFjMDQwZWY", "commit": {"author": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2022-09-11T06:21:40Z"}, "committer": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2022-09-11T06:21:40Z"}, "message": "Update unit test outputs", "tree": {"sha": "778c915d6892f1c8b605a68522690813f576eda2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/778c915d6892f1c8b605a68522690813f576eda2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e9bcb5d54d8cba113ebd9c94d293f376ac040ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e9bcb5d54d8cba113ebd9c94d293f376ac040ef", "html_url": "https://github.com/rust-lang/rust/commit/4e9bcb5d54d8cba113ebd9c94d293f376ac040ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e9bcb5d54d8cba113ebd9c94d293f376ac040ef/comments", "author": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f367a9be89c58087e6a3373125a230698287ed9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f367a9be89c58087e6a3373125a230698287ed9", "html_url": "https://github.com/rust-lang/rust/commit/0f367a9be89c58087e6a3373125a230698287ed9"}], "stats": {"total": 131, "additions": 51, "deletions": 80}, "files": [{"sha": "cbadf6f156a9f9df6886aa517974a77dcd3917f6", "filename": "src/test/ui/generator/clone-impl-static.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4e9bcb5d54d8cba113ebd9c94d293f376ac040ef/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e9bcb5d54d8cba113ebd9c94d293f376ac040ef/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl-static.stderr?ref=4e9bcb5d54d8cba113ebd9c94d293f376ac040ef", "patch": "@@ -1,8 +1,8 @@\n-error[E0277]: the trait bound `[static generator@$DIR/clone-impl-static.rs:7:15: 9:6]: Copy` is not satisfied\n+error[E0277]: the trait bound `[static generator@$DIR/clone-impl-static.rs:7:15: 7:29]: Copy` is not satisfied\n   --> $DIR/clone-impl-static.rs:10:16\n    |\n LL |     check_copy(&gen);\n-   |     ---------- ^^^^ the trait `Copy` is not implemented for `[static generator@$DIR/clone-impl-static.rs:7:15: 9:6]`\n+   |     ---------- ^^^^ the trait `Copy` is not implemented for `[static generator@$DIR/clone-impl-static.rs:7:15: 7:29]`\n    |     |\n    |     required by a bound introduced by this call\n    |\n@@ -12,11 +12,11 @@ note: required by a bound in `check_copy`\n LL | fn check_copy<T: Copy>(_x: &T) {}\n    |                  ^^^^ required by this bound in `check_copy`\n \n-error[E0277]: the trait bound `[static generator@$DIR/clone-impl-static.rs:7:15: 9:6]: Clone` is not satisfied\n+error[E0277]: the trait bound `[static generator@$DIR/clone-impl-static.rs:7:15: 7:29]: Clone` is not satisfied\n   --> $DIR/clone-impl-static.rs:12:17\n    |\n LL |     check_clone(&gen);\n-   |     ----------- ^^^^ the trait `Clone` is not implemented for `[static generator@$DIR/clone-impl-static.rs:7:15: 9:6]`\n+   |     ----------- ^^^^ the trait `Clone` is not implemented for `[static generator@$DIR/clone-impl-static.rs:7:15: 7:29]`\n    |     |\n    |     required by a bound introduced by this call\n    |"}, {"sha": "a92646b198cf4a55e26b7e418d950b5face95df5", "filename": "src/test/ui/generator/clone-impl.stderr", "status": "modified", "additions": 47, "deletions": 76, "changes": 123, "blob_url": "https://github.com/rust-lang/rust/blob/4e9bcb5d54d8cba113ebd9c94d293f376ac040ef/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e9bcb5d54d8cba113ebd9c94d293f376ac040ef/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fclone-impl.stderr?ref=4e9bcb5d54d8cba113ebd9c94d293f376ac040ef", "patch": "@@ -1,16 +1,11 @@\n-error[E0277]: the trait bound `Vec<u32>: Copy` is not satisfied in `[generator@$DIR/clone-impl.rs:36:23: 41:6]`\n-  --> $DIR/clone-impl.rs:42:5\n-   |\n-LL |       let gen_clone_0 = move || {\n-   |  _______________________-\n-LL | |         let v = vec!['a'];\n-LL | |         yield;\n-LL | |         drop(v);\n-LL | |         drop(clonable_0);\n-LL | |     };\n-   | |_____- within this `[generator@$DIR/clone-impl.rs:36:23: 41:6]`\n-LL |       check_copy(&gen_clone_0);\n-   |       ^^^^^^^^^^ within `[generator@$DIR/clone-impl.rs:36:23: 41:6]`, the trait `Copy` is not implemented for `Vec<u32>`\n+error[E0277]: the trait bound `Vec<u32>: Copy` is not satisfied in `[generator@$DIR/clone-impl.rs:36:23: 36:30]`\n+  --> $DIR/clone-impl.rs:42:16\n+   |\n+LL |     let gen_clone_0 = move || {\n+   |                       ------- within this `[generator@$DIR/clone-impl.rs:36:23: 36:30]`\n+...\n+LL |     check_copy(&gen_clone_0);\n+   |                ^^^^^^^^^^^^ within `[generator@$DIR/clone-impl.rs:36:23: 36:30]`, the trait `Copy` is not implemented for `Vec<u32>`\n    |\n note: captured value does not implement `Copy`\n   --> $DIR/clone-impl.rs:40:14\n@@ -23,19 +18,14 @@ note: required by a bound in `check_copy`\n LL | fn check_copy<T: Copy>(_x: &T) {}\n    |                  ^^^^ required by this bound in `check_copy`\n \n-error[E0277]: the trait bound `Vec<char>: Copy` is not satisfied in `[generator@$DIR/clone-impl.rs:36:23: 41:6]`\n-  --> $DIR/clone-impl.rs:42:5\n-   |\n-LL |       let gen_clone_0 = move || {\n-   |  _______________________-\n-LL | |         let v = vec!['a'];\n-LL | |         yield;\n-LL | |         drop(v);\n-LL | |         drop(clonable_0);\n-LL | |     };\n-   | |_____- within this `[generator@$DIR/clone-impl.rs:36:23: 41:6]`\n-LL |       check_copy(&gen_clone_0);\n-   |       ^^^^^^^^^^ within `[generator@$DIR/clone-impl.rs:36:23: 41:6]`, the trait `Copy` is not implemented for `Vec<char>`\n+error[E0277]: the trait bound `Vec<char>: Copy` is not satisfied in `[generator@$DIR/clone-impl.rs:36:23: 36:30]`\n+  --> $DIR/clone-impl.rs:42:16\n+   |\n+LL |     let gen_clone_0 = move || {\n+   |                       ------- within this `[generator@$DIR/clone-impl.rs:36:23: 36:30]`\n+...\n+LL |     check_copy(&gen_clone_0);\n+   |                ^^^^^^^^^^^^ within `[generator@$DIR/clone-impl.rs:36:23: 36:30]`, the trait `Copy` is not implemented for `Vec<char>`\n    |\n note: generator does not implement `Copy` as this value is used across a yield\n   --> $DIR/clone-impl.rs:38:9\n@@ -53,20 +43,14 @@ note: required by a bound in `check_copy`\n LL | fn check_copy<T: Copy>(_x: &T) {}\n    |                  ^^^^ required by this bound in `check_copy`\n \n-error[E0277]: the trait bound `Vec<u32>: Copy` is not satisfied in `[generator@$DIR/clone-impl.rs:46:23: 57:6]`\n-  --> $DIR/clone-impl.rs:58:5\n-   |\n-LL |       let gen_clone_1 = move || {\n-   |  _______________________-\n-LL | |         let v = vec!['a'];\n-LL | |         /*\n-LL | |         let n = NonClone;\n-...  |\n-LL | |         drop(clonable_1);\n-LL | |     };\n-   | |_____- within this `[generator@$DIR/clone-impl.rs:46:23: 57:6]`\n-LL |       check_copy(&gen_clone_1);\n-   |       ^^^^^^^^^^ within `[generator@$DIR/clone-impl.rs:46:23: 57:6]`, the trait `Copy` is not implemented for `Vec<u32>`\n+error[E0277]: the trait bound `Vec<u32>: Copy` is not satisfied in `[generator@$DIR/clone-impl.rs:46:23: 46:30]`\n+  --> $DIR/clone-impl.rs:58:16\n+   |\n+LL |     let gen_clone_1 = move || {\n+   |                       ------- within this `[generator@$DIR/clone-impl.rs:46:23: 46:30]`\n+...\n+LL |     check_copy(&gen_clone_1);\n+   |                ^^^^^^^^^^^^ within `[generator@$DIR/clone-impl.rs:46:23: 46:30]`, the trait `Copy` is not implemented for `Vec<u32>`\n    |\n note: captured value does not implement `Copy`\n   --> $DIR/clone-impl.rs:56:14\n@@ -79,20 +63,14 @@ note: required by a bound in `check_copy`\n LL | fn check_copy<T: Copy>(_x: &T) {}\n    |                  ^^^^ required by this bound in `check_copy`\n \n-error[E0277]: the trait bound `Vec<char>: Copy` is not satisfied in `[generator@$DIR/clone-impl.rs:46:23: 57:6]`\n-  --> $DIR/clone-impl.rs:58:5\n-   |\n-LL |       let gen_clone_1 = move || {\n-   |  _______________________-\n-LL | |         let v = vec!['a'];\n-LL | |         /*\n-LL | |         let n = NonClone;\n-...  |\n-LL | |         drop(clonable_1);\n-LL | |     };\n-   | |_____- within this `[generator@$DIR/clone-impl.rs:46:23: 57:6]`\n-LL |       check_copy(&gen_clone_1);\n-   |       ^^^^^^^^^^ within `[generator@$DIR/clone-impl.rs:46:23: 57:6]`, the trait `Copy` is not implemented for `Vec<char>`\n+error[E0277]: the trait bound `Vec<char>: Copy` is not satisfied in `[generator@$DIR/clone-impl.rs:46:23: 46:30]`\n+  --> $DIR/clone-impl.rs:58:16\n+   |\n+LL |     let gen_clone_1 = move || {\n+   |                       ------- within this `[generator@$DIR/clone-impl.rs:46:23: 46:30]`\n+...\n+LL |     check_copy(&gen_clone_1);\n+   |                ^^^^^^^^^^^^ within `[generator@$DIR/clone-impl.rs:46:23: 46:30]`, the trait `Copy` is not implemented for `Vec<char>`\n    |\n note: generator does not implement `Copy` as this value is used across a yield\n   --> $DIR/clone-impl.rs:52:9\n@@ -111,17 +89,14 @@ note: required by a bound in `check_copy`\n LL | fn check_copy<T: Copy>(_x: &T) {}\n    |                  ^^^^ required by this bound in `check_copy`\n \n-error[E0277]: the trait bound `NonClone: Copy` is not satisfied in `[generator@$DIR/clone-impl.rs:62:25: 65:6]`\n-  --> $DIR/clone-impl.rs:66:5\n-   |\n-LL |       let gen_non_clone = move || {\n-   |  _________________________-\n-LL | |         yield;\n-LL | |         drop(non_clonable);\n-LL | |     };\n-   | |_____- within this `[generator@$DIR/clone-impl.rs:62:25: 65:6]`\n-LL |       check_copy(&gen_non_clone);\n-   |       ^^^^^^^^^^ within `[generator@$DIR/clone-impl.rs:62:25: 65:6]`, the trait `Copy` is not implemented for `NonClone`\n+error[E0277]: the trait bound `NonClone: Copy` is not satisfied in `[generator@$DIR/clone-impl.rs:62:25: 62:32]`\n+  --> $DIR/clone-impl.rs:66:16\n+   |\n+LL |     let gen_non_clone = move || {\n+   |                         ------- within this `[generator@$DIR/clone-impl.rs:62:25: 62:32]`\n+...\n+LL |     check_copy(&gen_non_clone);\n+   |                ^^^^^^^^^^^^^^ within `[generator@$DIR/clone-impl.rs:62:25: 62:32]`, the trait `Copy` is not implemented for `NonClone`\n    |\n note: captured value does not implement `Copy`\n   --> $DIR/clone-impl.rs:64:14\n@@ -138,18 +113,14 @@ help: consider annotating `NonClone` with `#[derive(Copy)]`\n LL | #[derive(Copy)]\n    |\n \n-error[E0277]: the trait bound `NonClone: Clone` is not satisfied in `[generator@$DIR/clone-impl.rs:62:25: 65:6]`\n-  --> $DIR/clone-impl.rs:68:5\n-   |\n-LL |       let gen_non_clone = move || {\n-   |  _________________________-\n-LL | |         yield;\n-LL | |         drop(non_clonable);\n-LL | |     };\n-   | |_____- within this `[generator@$DIR/clone-impl.rs:62:25: 65:6]`\n+error[E0277]: the trait bound `NonClone: Clone` is not satisfied in `[generator@$DIR/clone-impl.rs:62:25: 62:32]`\n+  --> $DIR/clone-impl.rs:68:17\n+   |\n+LL |     let gen_non_clone = move || {\n+   |                         ------- within this `[generator@$DIR/clone-impl.rs:62:25: 62:32]`\n ...\n-LL |       check_clone(&gen_non_clone);\n-   |       ^^^^^^^^^^^ within `[generator@$DIR/clone-impl.rs:62:25: 65:6]`, the trait `Clone` is not implemented for `NonClone`\n+LL |     check_clone(&gen_non_clone);\n+   |                 ^^^^^^^^^^^^^^ within `[generator@$DIR/clone-impl.rs:62:25: 62:32]`, the trait `Clone` is not implemented for `NonClone`\n    |\n note: captured value does not implement `Clone`\n   --> $DIR/clone-impl.rs:64:14"}]}