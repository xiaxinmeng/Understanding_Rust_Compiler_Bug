{"sha": "7476ba4c8aa5b23dde757778bdd153c1bbc869a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NzZiYTRjOGFhNWIyM2RkZTc1Nzc3OGJkZDE1M2MxYmJjODY5YTQ=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-05-20T00:55:05Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-16T19:09:04Z"}, "message": "Add semi-exhaustive tests for exhaustiveness", "tree": {"sha": "41468fd430ec15d5678850bc245e83e41781480e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41468fd430ec15d5678850bc245e83e41781480e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7476ba4c8aa5b23dde757778bdd153c1bbc869a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7476ba4c8aa5b23dde757778bdd153c1bbc869a4", "html_url": "https://github.com/rust-lang/rust/commit/7476ba4c8aa5b23dde757778bdd153c1bbc869a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7476ba4c8aa5b23dde757778bdd153c1bbc869a4/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "121fa8d499b5d0db6d4b6c25458bd87ea38decc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/121fa8d499b5d0db6d4b6c25458bd87ea38decc2", "html_url": "https://github.com/rust-lang/rust/commit/121fa8d499b5d0db6d4b6c25458bd87ea38decc2"}], "stats": {"total": 144, "additions": 144, "deletions": 0}, "files": [{"sha": "39bac8919ffdf7ae1ba4881f30a66a1a87b39280", "filename": "src/test/ui/exhaustive_integer_patterns.rs", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/rust-lang/rust/blob/7476ba4c8aa5b23dde757778bdd153c1bbc869a4/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7476ba4c8aa5b23dde757778bdd153c1bbc869a4/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs?ref=7476ba4c8aa5b23dde757778bdd153c1bbc869a4", "patch": "@@ -0,0 +1,105 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(exhaustive_integer_patterns)]\n+#![feature(exclusive_range_pattern)]\n+#![deny(unreachable_patterns)]\n+\n+use std::{char, usize, u8, u16, u32, u64, u128, isize, i8, i16, i32, i64, i128};\n+\n+fn main() {\n+    let x: u8 = 0;\n+\n+    // A single range covering the entire domain.\n+    match x {\n+        0 ..= 255 => {} // ok\n+    }\n+\n+    // A combination of ranges and values.\n+    // These are currently allowed to be overlapping.\n+    match x {\n+        0 ..= 32 => {}\n+        33 => {}\n+        34 .. 128 => {}\n+        100 ..= 200 => {}\n+        200 => {} //~ ERROR unreachable pattern\n+        201 ..= 255 => {}\n+    }\n+\n+    // An incomplete set of values.\n+    match x { //~ ERROR non-exhaustive patterns: `128u8...255u8` not covered\n+        0 .. 128 => {}\n+    }\n+\n+    // A more incomplete set of values.\n+    match x { //~ ERROR non-exhaustive patterns\n+        0 ..= 10 => {}\n+        20 ..= 30 => {}\n+        35 => {}\n+        70 .. 255 => {}\n+    }\n+\n+    let x: i8 = 0;\n+    match x { //~ ERROR non-exhaustive patterns\n+        -7 => {}\n+        -5..=120 => {}\n+        -2..=20 => {} //~ ERROR unreachable pattern\n+        125 => {}\n+    }\n+\n+    // Let's test other types too!\n+    match '\\u{0}' {\n+        '\\u{0}' ..= char::MAX => {} // ok\n+    }\n+\n+    match 0usize {\n+        0 ..= usize::MAX => {} // ok\n+    }\n+\n+    match 0u16 {\n+        0 ..= u16::MAX => {} // ok\n+    }\n+\n+    match 0u32 {\n+        0 ..= u32::MAX => {} // ok\n+    }\n+\n+    match 0u64 {\n+        0 ..= u64::MAX => {} // ok\n+    }\n+\n+    match 0u128 {\n+        0 ..= u128::MAX => {} // ok\n+    }\n+\n+    match 0isize {\n+        isize::MIN ..= isize::MAX => {} // ok\n+    }\n+\n+    match 0i8 {\n+        -128..=127 => {} // ok\n+    }\n+\n+    match 0i16 {\n+        i16::MIN ..= i16::MAX => {} // ok\n+    }\n+\n+    match 0i32 {\n+        i32::MIN ..= i32::MAX => {} // ok\n+    }\n+\n+    match 0i64 {\n+        i64::MIN ..= i64::MAX => {} // ok\n+    }\n+\n+    match 0i128 {\n+        i128::MIN ..= i128::MAX => {} // ok\n+    }\n+}"}, {"sha": "5a0bdebde1f342c7869750a895a67d7ca3ea02e5", "filename": "src/test/ui/exhaustive_integer_patterns.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/7476ba4c8aa5b23dde757778bdd153c1bbc869a4/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7476ba4c8aa5b23dde757778bdd153c1bbc869a4/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr?ref=7476ba4c8aa5b23dde757778bdd153c1bbc869a4", "patch": "@@ -0,0 +1,39 @@\n+error: unreachable pattern\n+  --> $DIR/exhaustive_integer_patterns.rs:32:9\n+   |\n+LL |         200 => {} //~ ERROR unreachable pattern\n+   |         ^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/exhaustive_integer_patterns.rs:13:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0004]: non-exhaustive patterns: `128u8...255u8` not covered\n+  --> $DIR/exhaustive_integer_patterns.rs:37:11\n+   |\n+LL |     match x { //~ ERROR non-exhaustive patterns: `128u8...255u8` not covered\n+   |           ^ pattern `128u8...255u8` not covered\n+\n+error[E0004]: non-exhaustive patterns: `11u8...20u8`, `30u8...35u8`, `35u8...70u8` and 1 more not covered\n+  --> $DIR/exhaustive_integer_patterns.rs:42:11\n+   |\n+LL |     match x { //~ ERROR non-exhaustive patterns\n+   |           ^ patterns `11u8...20u8`, `30u8...35u8`, `35u8...70u8` and 1 more not covered\n+\n+error: unreachable pattern\n+  --> $DIR/exhaustive_integer_patterns.rs:53:9\n+   |\n+LL |         -2..=20 => {} //~ ERROR unreachable pattern\n+   |         ^^^^^^^\n+\n+error[E0004]: non-exhaustive patterns: `-128i8...-5i8`, `120i8...121i8` and `121i8...127i8` not covered\n+  --> $DIR/exhaustive_integer_patterns.rs:50:11\n+   |\n+LL |     match x { //~ ERROR non-exhaustive patterns\n+   |           ^ patterns `-128i8...-5i8`, `120i8...121i8` and `121i8...127i8` not covered\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0004`."}]}