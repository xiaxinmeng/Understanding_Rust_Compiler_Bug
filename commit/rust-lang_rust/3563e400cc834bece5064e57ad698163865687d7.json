{"sha": "3563e400cc834bece5064e57ad698163865687d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NjNlNDAwY2M4MzRiZWNlNTA2NGU1N2FkNjk4MTYzODY1Njg3ZDc=", "commit": {"author": {"name": "Brett Cannon", "email": "brettcannon@users.noreply.github.com", "date": "2016-07-29T02:02:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-29T02:02:25Z"}, "message": "Try to clear up some awkward wording", "tree": {"sha": "17ef673aa8f865fb6f2bfbb9275031ee0dae74b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17ef673aa8f865fb6f2bfbb9275031ee0dae74b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3563e400cc834bece5064e57ad698163865687d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3563e400cc834bece5064e57ad698163865687d7", "html_url": "https://github.com/rust-lang/rust/commit/3563e400cc834bece5064e57ad698163865687d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3563e400cc834bece5064e57ad698163865687d7/comments", "author": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54c0dcfd634cf31e6c18df5776cab2f3e7870157", "url": "https://api.github.com/repos/rust-lang/rust/commits/54c0dcfd634cf31e6c18df5776cab2f3e7870157", "html_url": "https://github.com/rust-lang/rust/commit/54c0dcfd634cf31e6c18df5776cab2f3e7870157"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "24fcf886ef03df82e371de0e175f2c8bef770220", "filename": "src/doc/book/closures.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3563e400cc834bece5064e57ad698163865687d7/src%2Fdoc%2Fbook%2Fclosures.md", "raw_url": "https://github.com/rust-lang/rust/raw/3563e400cc834bece5064e57ad698163865687d7/src%2Fdoc%2Fbook%2Fclosures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fclosures.md?ref=3563e400cc834bece5064e57ad698163865687d7", "patch": "@@ -291,9 +291,9 @@ isn\u2019t interesting. The next part is:\n #   some_closure(1) }\n ```\n \n-Because `Fn` is a trait, we can bound our generic with it. In this case, our\n-closure takes a `i32` as an argument and returns an `i32`, and so the generic\n-bound we use is `Fn(i32) -> i32`.\n+Because `Fn` is a trait, we can use it as a bound for our generic type. In\n+this case, our closure takes a `i32` as an argument and returns an `i32`, and\n+so the generic bound we use is `Fn(i32) -> i32`.\n \n There\u2019s one other key point here: because we\u2019re bounding a generic with a\n trait, this will get monomorphized, and therefore, we\u2019ll be doing static"}]}