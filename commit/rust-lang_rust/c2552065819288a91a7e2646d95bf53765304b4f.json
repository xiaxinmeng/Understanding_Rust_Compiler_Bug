{"sha": "c2552065819288a91a7e2646d95bf53765304b4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyNTUyMDY1ODE5Mjg4YTkxYTdlMjY0NmQ5NWJmNTM3NjUzMDRiNGY=", "commit": {"author": {"name": "V1shvesh", "email": "22243137+V1shvesh@users.noreply.github.com", "date": "2019-09-08T09:30:08Z"}, "committer": {"name": "V1shvesh", "email": "22243137+V1shvesh@users.noreply.github.com", "date": "2019-09-08T09:39:50Z"}, "message": "Refactor Pluralisation\n\nModify files performing pluralisation checks to incorporate the\ndedicated macro located in `syntax::errors`.", "tree": {"sha": "86a220158eef1391c07460eb972cb3da525d84e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86a220158eef1391c07460eb972cb3da525d84e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2552065819288a91a7e2646d95bf53765304b4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2552065819288a91a7e2646d95bf53765304b4f", "html_url": "https://github.com/rust-lang/rust/commit/c2552065819288a91a7e2646d95bf53765304b4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2552065819288a91a7e2646d95bf53765304b4f/comments", "author": {"login": "V1shvesh", "id": 22243137, "node_id": "MDQ6VXNlcjIyMjQzMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/22243137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/V1shvesh", "html_url": "https://github.com/V1shvesh", "followers_url": "https://api.github.com/users/V1shvesh/followers", "following_url": "https://api.github.com/users/V1shvesh/following{/other_user}", "gists_url": "https://api.github.com/users/V1shvesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/V1shvesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/V1shvesh/subscriptions", "organizations_url": "https://api.github.com/users/V1shvesh/orgs", "repos_url": "https://api.github.com/users/V1shvesh/repos", "events_url": "https://api.github.com/users/V1shvesh/events{/privacy}", "received_events_url": "https://api.github.com/users/V1shvesh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "V1shvesh", "id": 22243137, "node_id": "MDQ6VXNlcjIyMjQzMTM3", "avatar_url": "https://avatars.githubusercontent.com/u/22243137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/V1shvesh", "html_url": "https://github.com/V1shvesh", "followers_url": "https://api.github.com/users/V1shvesh/followers", "following_url": "https://api.github.com/users/V1shvesh/following{/other_user}", "gists_url": "https://api.github.com/users/V1shvesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/V1shvesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/V1shvesh/subscriptions", "organizations_url": "https://api.github.com/users/V1shvesh/orgs", "repos_url": "https://api.github.com/users/V1shvesh/repos", "events_url": "https://api.github.com/users/V1shvesh/events{/privacy}", "received_events_url": "https://api.github.com/users/V1shvesh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38ab20dbf7469aa5a3cb0d7bfd3700281aa46467", "url": "https://api.github.com/repos/rust-lang/rust/commits/38ab20dbf7469aa5a3cb0d7bfd3700281aa46467", "html_url": "https://github.com/rust-lang/rust/commit/38ab20dbf7469aa5a3cb0d7bfd3700281aa46467"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "62910ec320494fd3053edb09211d9ea284ea3e37", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c2552065819288a91a7e2646d95bf53765304b4f/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2552065819288a91a7e2646d95bf53765304b4f/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=c2552065819288a91a7e2646d95bf53765304b4f", "patch": "@@ -4,6 +4,7 @@ use std::borrow::Cow;\n use std::fmt;\n use rustc_target::spec::abi;\n use syntax::ast;\n+use syntax::errors::pluralise;\n use errors::{Applicability, DiagnosticBuilder};\n use syntax_pos::Span;\n \n@@ -82,12 +83,6 @@ impl<'tcx> fmt::Display for TypeError<'tcx> {\n             }\n         };\n \n-        macro_rules! pluralise {\n-            ($x:expr) => {\n-                if $x != 1 { \"s\" } else { \"\" }\n-            };\n-        }\n-\n         match *self {\n             CyclicTy(_) => write!(f, \"cyclic type of infinite size\"),\n             Mismatch => write!(f, \"types differ\"),"}, {"sha": "e9ca0f3d978ca5675fadb33f00bd6d71ef250382", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c2552065819288a91a7e2646d95bf53765304b4f/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2552065819288a91a7e2646d95bf53765304b4f/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=c2552065819288a91a7e2646d95bf53765304b4f", "patch": "@@ -23,6 +23,7 @@ use rustc_target::spec::abi;\n use crate::require_c_abi_if_c_variadic;\n use smallvec::SmallVec;\n use syntax::ast;\n+use syntax::errors::pluralise;\n use syntax::feature_gate::{GateIssue, emit_feature_err};\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::symbol::sym;\n@@ -377,7 +378,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     quantifier,\n                     bound,\n                     kind,\n-                    if bound != 1 { \"s\" } else { \"\" },\n+                    pluralise!(bound),\n                 ))\n             };\n "}, {"sha": "f22499f547272291913ac6e7a27077861069b0d2", "filename": "src/librustc_typeck/check/compare_method.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c2552065819288a91a7e2646d95bf53765304b4f/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2552065819288a91a7e2646d95bf53765304b4f/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs?ref=c2552065819288a91a7e2646d95bf53765304b4f", "patch": "@@ -10,6 +10,7 @@ use rustc::util::common::ErrorReported;\n use errors::{Applicability, DiagnosticId};\n \n use syntax_pos::Span;\n+use syntax::errors::pluralise;\n \n use super::{Inherited, FnCtxt, potentially_plural_count};\n \n@@ -648,9 +649,9 @@ fn compare_number_of_generics<'tcx>(\n                      declaration has {} {kind} parameter{}\",\n                     trait_.ident,\n                     impl_count,\n-                    if impl_count != 1 { \"s\" } else { \"\" },\n+                    pluralise!(impl_count),\n                     trait_count,\n-                    if trait_count != 1 { \"s\" } else { \"\" },\n+                    pluralise!(trait_count),\n                     kind = kind,\n                 ),\n                 DiagnosticId::Error(\"E0049\".into()),\n@@ -665,7 +666,7 @@ fn compare_number_of_generics<'tcx>(\n                         \"expected {} {} parameter{}\",\n                         trait_count,\n                         kind,\n-                        if trait_count != 1 { \"s\" } else { \"\" },\n+                        pluralise!(trait_count),\n                     ));\n                 }\n                 for span in spans {\n@@ -680,7 +681,7 @@ fn compare_number_of_generics<'tcx>(\n                     \"found {} {} parameter{}{}\",\n                     impl_count,\n                     kind,\n-                    if impl_count != 1 { \"s\" } else { \"\" },\n+                    pluralise!(impl_count),\n                     suffix.unwrap_or_else(|| String::new()),\n                 ));\n             }"}]}