{"sha": "3a2ef17194d7bfe56e75a3504327b38bcad979ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMmVmMTcxOTRkN2JmZTU2ZTc1YTM1MDQzMjdiMzhiY2FkOTc5ZWY=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-12-25T15:35:54Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-12-25T15:35:54Z"}, "message": "tidy: change msdn links to newer locations\n\nsee accouncement at https://docs.microsoft.com/welcome-to-docs", "tree": {"sha": "1e6ca368b2a0dc2766f2b7aabc13487d662d7607", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e6ca368b2a0dc2766f2b7aabc13487d662d7607"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a2ef17194d7bfe56e75a3504327b38bcad979ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a2ef17194d7bfe56e75a3504327b38bcad979ef", "html_url": "https://github.com/rust-lang/rust/commit/3a2ef17194d7bfe56e75a3504327b38bcad979ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a2ef17194d7bfe56e75a3504327b38bcad979ef/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed33453a37d602f34cc40c205f9b9b8a8aff88b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed33453a37d602f34cc40c205f9b9b8a8aff88b5", "html_url": "https://github.com/rust-lang/rust/commit/ed33453a37d602f34cc40c205f9b9b8a8aff88b5"}], "stats": {"total": 60, "additions": 30, "deletions": 30}, "files": [{"sha": "a182bc4067a9f29e0a9d4c2f8bc06711a860c99d", "filename": "src/etc/installer/msi/rust.wxs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -85,7 +85,7 @@\n         <Property Id=\"ARPPRODUCTICON\" Value=\"rust.ico\" />\n         <Property Id=\"ARPURLINFOABOUT\" Value=\"https://www.rust-lang.org/\" />\n         <Property Id=\"ARPCOMMENTS\" Value=\"$(env.CFG_RELEASE_INFO)\" />\n-        <!-- This is a dual-mode package. http://msdn.microsoft.com/en-us/library/windows/desktop/dd408068.aspx -->\n+        <!-- This is a dual-mode package. https://docs.microsoft.com/en-us/windows/win32/msi/single-package-authoring -->\n         <Property Id=\"ALLUSERS\" Value=\"2\" Secure=\"yes\" />\n         <Property Id=\"MSIINSTALLPERUSER\" Secure=\"yes\" />\n         <!-- The actual install location (initialized below) -->"}, {"sha": "e1907ec4e5f32a9e45bef8ac3403af8794e37f8b", "filename": "src/libpanic_unwind/seh.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibpanic_unwind%2Fseh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibpanic_unwind%2Fseh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fseh.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -41,7 +41,7 @@\n //!   are then recovered in the filter function to be written to the stack frame\n //!   of the `try` intrinsic.\n //!\n-//! [win64]: http://msdn.microsoft.com/en-us/library/1eyas8tf.aspx\n+//! [win64]: https://docs.microsoft.com/en-us/cpp/build/exception-handling-x64\n //! [llvm]: http://llvm.org/docs/ExceptionHandling.html#background-on-windows-exceptions\n \n #![allow(nonstandard_style)]"}, {"sha": "abe34bb148ce5f7f8079bec9589e86ecd8960acb", "filename": "src/librustc_codegen_llvm/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmetadata.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -97,7 +97,7 @@ pub fn metadata_section_name(target: &Target) -> &'static str {\n     // > Executable images do not use a string table and do not support\n     // > section names longer than 8\u00a0characters\n     //\n-    // https://msdn.microsoft.com/en-us/library/windows/hardware/gg463119.aspx\n+    // https://docs.microsoft.com/en-us/windows/win32/debug/pe-format\n     //\n     // As a result, we choose a slightly shorter name! As to why\n     // `.note.rustc` works on MinGW, that's another good question..."}, {"sha": "dcc16416e5e87a1477c08a3b61eda0cd1416e94a", "filename": "src/librustc_codegen_ssa/back/command.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibrustc_codegen_ssa%2Fback%2Fcommand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibrustc_codegen_ssa%2Fback%2Fcommand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fcommand.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -168,8 +168,8 @@ impl Command {\n         // error code if we fail to spawn and automatically re-spawning the\n         // linker with smaller arguments.\n         //\n-        // [1]: https://msdn.microsoft.com/en-us/library/windows/desktop/ms682425(v=vs.85).aspx\n-        // [2]: https://blogs.msdn.microsoft.com/oldnewthing/20031210-00/?p=41553\n+        // [1]: https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessa\n+        // [2]: https://devblogs.microsoft.com/oldnewthing/?p=41553\n \n         let estimated_command_line_len = self.args.iter().map(|a| a.len()).sum::<usize>();\n         estimated_command_line_len > 1024 * 6"}, {"sha": "c7a599a5749b7b51c3136163522aa50420e05626", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -1044,7 +1044,7 @@ pub fn exec_linker(\n         fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n             if self.is_like_msvc {\n                 // This is \"documented\" at\n-                // https://msdn.microsoft.com/en-us/library/4xdcbak7.aspx\n+                // https://docs.microsoft.com/en-us/cpp/build/reference/at-specify-a-linker-response-file\n                 //\n                 // Unfortunately there's not a great specification of the\n                 // syntax I could find online (at least) but some local"}, {"sha": "2aad641b1ecf0c1096d96baeea4a84a7e3e4d48e", "filename": "src/librustc_target/abi/call/x86_win64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibrustc_target%2Fabi%2Fcall%2Fx86_win64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibrustc_target%2Fabi%2Fcall%2Fx86_win64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fx86_win64.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -1,7 +1,7 @@\n use crate::abi::call::{ArgAbi, FnAbi, Reg};\n use crate::abi::Abi;\n \n-// Win64 ABI: http://msdn.microsoft.com/en-us/library/zthk2dkh.aspx\n+// Win64 ABI: https://docs.microsoft.com/en-us/cpp/build/parameter-passing\n \n pub fn compute_abi_info<Ty>(fn_abi: &mut FnAbi<'_, Ty>) {\n     let fixup = |a: &mut ArgAbi<'_, Ty>| {"}, {"sha": "b160007e0621a8d3f07a9d075981fb27c3fef76e", "filename": "src/librustc_target/spec/i686_pc_windows_msvc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_msvc.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -11,7 +11,7 @@ pub fn target() -> TargetResult {\n \n     // Ensure the linker will only produce an image if it can also produce a table of\n     // the image's safe exception handlers.\n-    // https://msdn.microsoft.com/en-us/library/9a89h429.aspx\n+    // https://docs.microsoft.com/en-us/cpp/build/reference/safeseh-image-has-safe-exception-handlers\n     base.pre_link_args.get_mut(&LinkerFlavor::Msvc).unwrap().push(\"/SAFESEH\".to_string());\n \n     Ok(Target {"}, {"sha": "ec5e35a060d1e4d918810ffdb98eb592fce3166b", "filename": "src/libstd/env.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -550,7 +550,7 @@ impl Error for JoinPathsError {\n ///   (including to an empty string).\n /// - If both do not exist, [`GetUserProfileDirectory`][msdn] is used to return the path.\n ///\n-/// [msdn]: https://msdn.microsoft.com/en-us/library/windows/desktop/bb762280(v=vs.85).aspx\n+/// [msdn]: https://docs.microsoft.com/en-us/windows/win32/api/userenv/nf-userenv-getuserprofiledirectorya\n ///\n /// # Examples\n ///\n@@ -589,7 +589,7 @@ pub fn home_dir() -> Option<PathBuf> {\n /// This behavior is identical to that of [`GetTempPath`][msdn], which this\n /// function uses internally.\n ///\n-/// [msdn]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa364992(v=vs.85).aspx\n+/// [msdn]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-gettemppatha\n ///\n /// ```no_run\n /// use std::env;"}, {"sha": "cff7bbe5ef183a58ebde5e4720d9994666a0dccc", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -1841,7 +1841,7 @@ pub fn read_link<P: AsRef<Path>>(path: P) -> io::Result<PathBuf> {\n /// or written to a file another application may read).\n ///\n /// [changes]: ../io/index.html#platform-specific-behavior\n-/// [path]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#maxpath\n+/// [path]: https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file\n ///\n /// # Errors\n ///"}, {"sha": "d508a333484aeee4061a5fecb8acbcea1c7b6ae7", "filename": "src/libstd/sys/windows/ext/fs.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -117,7 +117,7 @@ pub trait OpenOptionsExt {\n     /// let file = OpenOptions::new().access_mode(0).open(\"foo.txt\");\n     /// ```\n     ///\n-    /// [`CreateFile`]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx\n+    /// [`CreateFile`]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea\n     #[stable(feature = \"open_options_ext\", since = \"1.10.0\")]\n     fn access_mode(&mut self, access: u32) -> &mut Self;\n \n@@ -145,7 +145,7 @@ pub trait OpenOptionsExt {\n     ///     .open(\"foo.txt\");\n     /// ```\n     ///\n-    /// [`CreateFile`]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx\n+    /// [`CreateFile`]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea\n     #[stable(feature = \"open_options_ext\", since = \"1.10.0\")]\n     fn share_mode(&mut self, val: u32) -> &mut Self;\n \n@@ -174,8 +174,8 @@ pub trait OpenOptionsExt {\n     ///     .open(\"foo.txt\");\n     /// ```\n     ///\n-    /// [`CreateFile`]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx\n-    /// [`CreateFile2`]: https://msdn.microsoft.com/en-us/library/windows/desktop/hh449422.aspx\n+    /// [`CreateFile`]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea\n+    /// [`CreateFile2`]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2\n     #[stable(feature = \"open_options_ext\", since = \"1.10.0\")]\n     fn custom_flags(&mut self, flags: u32) -> &mut Self;\n \n@@ -211,8 +211,8 @@ pub trait OpenOptionsExt {\n     ///     .open(\"foo.txt\");\n     /// ```\n     ///\n-    /// [`CreateFile`]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx\n-    /// [`CreateFile2`]: https://msdn.microsoft.com/en-us/library/windows/desktop/hh449422.aspx\n+    /// [`CreateFile`]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea\n+    /// [`CreateFile2`]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2\n     #[stable(feature = \"open_options_ext\", since = \"1.10.0\")]\n     fn attributes(&mut self, val: u32) -> &mut Self;\n \n@@ -254,10 +254,10 @@ pub trait OpenOptionsExt {\n     ///     .open(r\"\\\\.\\pipe\\MyPipe\");\n     /// ```\n     ///\n-    /// [`CreateFile`]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx\n-    /// [`CreateFile2`]: https://msdn.microsoft.com/en-us/library/windows/desktop/hh449422.aspx\n+    /// [`CreateFile`]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfilea\n+    /// [`CreateFile2`]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createfile2\n     /// [Impersonation Levels]:\n-    ///     https://msdn.microsoft.com/en-us/library/windows/desktop/aa379572.aspx\n+    ///     https://docs.microsoft.com/en-us/windows/win32/api/winnt/ne-winnt-security_impersonation_level\n     #[stable(feature = \"open_options_ext\", since = \"1.10.0\")]\n     fn security_qos_flags(&mut self, flags: u32) -> &mut OpenOptions;\n }\n@@ -297,7 +297,7 @@ impl OpenOptionsExt for OpenOptions {\n ///\n /// [`fs::Metadata`]: ../../../../std/fs/struct.Metadata.html\n /// [`BY_HANDLE_FILE_INFORMATION`]:\n-///     https://msdn.microsoft.com/en-us/library/windows/desktop/aa363788.aspx\n+///     https://docs.microsoft.com/en-us/windows/win32/api/fileapi/ns-fileapi-by_handle_file_information\n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n pub trait MetadataExt {\n     /// Returns the value of the `dwFileAttributes` field of this metadata.\n@@ -321,7 +321,7 @@ pub trait MetadataExt {\n     /// ```\n     ///\n     /// [File Attribute Constants]:\n-    ///     https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117.aspx\n+    ///     https://docs.microsoft.com/en-us/windows/win32/fileio/file-attribute-constants\n     #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n     fn file_attributes(&self) -> u32;\n \n@@ -350,7 +350,7 @@ pub trait MetadataExt {\n     /// }\n     /// ```\n     ///\n-    /// [`FILETIME`]: https://msdn.microsoft.com/en-us/library/windows/desktop/ms724284.aspx\n+    /// [`FILETIME`]: https://docs.microsoft.com/en-us/windows/win32/api/minwinbase/ns-minwinbase-filetime\n     #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n     fn creation_time(&self) -> u64;\n \n@@ -385,7 +385,7 @@ pub trait MetadataExt {\n     /// }\n     /// ```\n     ///\n-    /// [`FILETIME`]: https://msdn.microsoft.com/en-us/library/windows/desktop/ms724284.aspx\n+    /// [`FILETIME`]: https://docs.microsoft.com/en-us/windows/win32/api/minwinbase/ns-minwinbase-filetime\n     #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n     fn last_access_time(&self) -> u64;\n \n@@ -418,7 +418,7 @@ pub trait MetadataExt {\n     /// }\n     /// ```\n     ///\n-    /// [`FILETIME`]: https://msdn.microsoft.com/en-us/library/windows/desktop/ms724284.aspx\n+    /// [`FILETIME`]: https://docs.microsoft.com/en-us/windows/win32/api/minwinbase/ns-minwinbase-filetime\n     #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n     fn last_write_time(&self) -> u64;\n "}, {"sha": "8c34a9faf1d4a5dedc0119d284db7ee61e2b699d", "filename": "src/libstd/sys/windows/ext/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fprocess.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -99,7 +99,7 @@ pub trait CommandExt {\n     ///\n     /// These will always be ORed with `CREATE_UNICODE_ENVIRONMENT`.\n     ///\n-    /// [1]: https://msdn.microsoft.com/en-us/library/windows/desktop/ms684863(v=vs.85).aspx\n+    /// [1]: https://docs.microsoft.com/en-us/windows/win32/procthread/process-creation-flags\n     #[stable(feature = \"windows_process_extensions\", since = \"1.16.0\")]\n     fn creation_flags(&mut self, flags: u32) -> &mut process::Command;\n }"}, {"sha": "b004cd19020f8f6ab94bf64b22762fa599588759", "filename": "src/libstd/sys/windows/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -262,7 +262,7 @@ pub fn dur2timeout(dur: Duration) -> c::DWORD {\n // terminating the process but without necessarily bypassing all exception\n // handlers.\n //\n-// https://msdn.microsoft.com/en-us/library/dn774154.aspx\n+// https://docs.microsoft.com/en-us/cpp/intrinsics/fastfail\n #[allow(unreachable_code)]\n pub unsafe fn abort_internal() -> ! {\n     #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]"}, {"sha": "7eb9b698900556b9a674ff499da848ed0f611766", "filename": "src/libstd/sys/windows/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -34,7 +34,7 @@ pub fn error_string(mut errnum: i32) -> String {\n \n         // NTSTATUS errors may be encoded as HRESULT, which may returned from\n         // GetLastError. For more information about Windows error codes, see\n-        // `[MS-ERREF]`: https://msdn.microsoft.com/en-us/library/cc231198.aspx\n+        // `[MS-ERREF]`: https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-erref/0642cb2f-2075-4469-918c-4441e69c548a\n         if (errnum & c::FACILITY_NT_BIT as i32) != 0 {\n             // format according to https://support.microsoft.com/en-us/help/259693\n             const NTDLL_DLL: &[u16] = &["}, {"sha": "d2e3b07ab855d369f4fa1fdae9ef4e4188cd7532", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -27,7 +27,7 @@\n //! ```\n //!\n //! [ansi]: https://en.wikipedia.org/wiki/ANSI_escape_code\n-//! [win]: http://msdn.microsoft.com/en-us/library/windows/desktop/ms682010%28v=vs.85%29.aspx\n+//! [win]: https://docs.microsoft.com/en-us/windows/console/character-mode-applications\n //! [ti]: https://en.wikipedia.org/wiki/Terminfo\n \n #![doc("}, {"sha": "b6c607a30816cb70d51bae3a3bc9a8e9a2e0180d", "filename": "src/libterm/win.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibterm%2Fwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ef17194d7bfe56e75a3504327b38bcad979ef/src%2Flibterm%2Fwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Fwin.rs?ref=3a2ef17194d7bfe56e75a3504327b38bcad979ef", "patch": "@@ -101,7 +101,7 @@ impl<T: Write + Send + 'static> WinConsole<T> {\n \n         unsafe {\n             // Magic -11 means stdout, from\n-            // http://msdn.microsoft.com/en-us/library/windows/desktop/ms683231%28v=vs.85%29.aspx\n+            // https://docs.microsoft.com/en-us/windows/console/getstdhandle\n             //\n             // You may be wondering, \"but what about stderr?\", and the answer\n             // to that is that setting terminal attributes on the stdout"}]}