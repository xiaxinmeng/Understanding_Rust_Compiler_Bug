{"sha": "435d832c5d86bf2ffff02457e4ae7edbe30cfc34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNWQ4MzJjNWQ4NmJmMmZmZmYwMjQ1N2U0YWU3ZWRiZTMwY2ZjMzQ=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-10-30T22:56:11Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-10-31T00:29:02Z"}, "message": "save analysis: don't dump macro refs", "tree": {"sha": "900552ec32eb7a3fdefbada224583c253dcf5601", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/900552ec32eb7a3fdefbada224583c253dcf5601"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/435d832c5d86bf2ffff02457e4ae7edbe30cfc34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/435d832c5d86bf2ffff02457e4ae7edbe30cfc34", "html_url": "https://github.com/rust-lang/rust/commit/435d832c5d86bf2ffff02457e4ae7edbe30cfc34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/435d832c5d86bf2ffff02457e4ae7edbe30cfc34/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4895deaeea03d8d1a7329a0ff55849201a75a8b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4895deaeea03d8d1a7329a0ff55849201a75a8b6", "html_url": "https://github.com/rust-lang/rust/commit/4895deaeea03d8d1a7329a0ff55849201a75a8b6"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "9bc3fbe7c245a9ef3238439977640aabd963dba7", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/435d832c5d86bf2ffff02457e4ae7edbe30cfc34/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/435d832c5d86bf2ffff02457e4ae7edbe30cfc34/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=435d832c5d86bf2ffff02457e4ae7edbe30cfc34", "patch": "@@ -92,7 +92,7 @@ pub struct DumpVisitor<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> {\n     // we only write one macro def per unique macro definition, and\n     // one macro use per unique callsite span.\n     // mac_defs: FxHashSet<Span>,\n-    macro_calls: FxHashSet<Span>,\n+    // macro_calls: FxHashSet<Span>,\n }\n \n impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n@@ -108,7 +108,7 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n             span: span_utils,\n             cur_scope: CRATE_NODE_ID,\n             // mac_defs: FxHashSet::default(),\n-            macro_calls: FxHashSet::default(),\n+            // macro_calls: FxHashSet::default(),\n         }\n     }\n \n@@ -1030,18 +1030,20 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n     /// If the span is not macro-generated, do nothing, else use callee and\n     /// callsite spans to record macro definition and use data, using the\n     /// mac_uses and mac_defs sets to prevent multiples.\n-    fn process_macro_use(&mut self, span: Span) {\n-        let source_span = span.source_callsite();\n-        if !self.macro_calls.insert(source_span) {\n-            return;\n-        }\n+    fn process_macro_use(&mut self, _span: Span) {\n+        // FIXME if we're not dumping the defs (see below), there is no point\n+        // dumping refs either.\n+        // let source_span = span.source_callsite();\n+        // if !self.macro_calls.insert(source_span) {\n+        //     return;\n+        // }\n \n-        let data = match self.save_ctxt.get_macro_use_data(span) {\n-            None => return,\n-            Some(data) => data,\n-        };\n+        // let data = match self.save_ctxt.get_macro_use_data(span) {\n+        //     None => return,\n+        //     Some(data) => data,\n+        // };\n \n-        self.dumper.macro_use(data);\n+        // self.dumper.macro_use(data);\n \n         // FIXME write the macro def\n         // let mut hasher = DefaultHasher::new();"}, {"sha": "d2354f38e2685e90c55105952795a3133211034f", "filename": "src/librustc_save_analysis/json_dumper.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/435d832c5d86bf2ffff02457e4ae7edbe30cfc34/src%2Flibrustc_save_analysis%2Fjson_dumper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/435d832c5d86bf2ffff02457e4ae7edbe30cfc34/src%2Flibrustc_save_analysis%2Fjson_dumper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fjson_dumper.rs?ref=435d832c5d86bf2ffff02457e4ae7edbe30cfc34", "patch": "@@ -93,7 +93,7 @@ impl<'b, O: DumpOutput + 'b> JsonDumper<O> {\n         self.result.compilation = Some(data);\n     }\n \n-    pub fn macro_use(&mut self, data: MacroRef) {\n+    pub fn _macro_use(&mut self, data: MacroRef) {\n         if self.config.pub_only || self.config.reachable_only {\n             return;\n         }"}]}