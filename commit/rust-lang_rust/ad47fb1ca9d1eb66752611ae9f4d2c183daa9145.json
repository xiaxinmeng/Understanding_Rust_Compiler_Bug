{"sha": "ad47fb1ca9d1eb66752611ae9f4d2c183daa9145", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNDdmYjFjYTlkMWViNjY3NTI2MTFhZTlmNGQyYzE4M2RhYTkxNDU=", "commit": {"author": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2021-02-11T10:37:00Z"}, "committer": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2021-02-18T13:43:43Z"}, "message": "Check opaque type def ids before bailing out", "tree": {"sha": "f6cbeb8ee5194728e5efb2b5eaa7866067196063", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6cbeb8ee5194728e5efb2b5eaa7866067196063"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad47fb1ca9d1eb66752611ae9f4d2c183daa9145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad47fb1ca9d1eb66752611ae9f4d2c183daa9145", "html_url": "https://github.com/rust-lang/rust/commit/ad47fb1ca9d1eb66752611ae9f4d2c183daa9145", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad47fb1ca9d1eb66752611ae9f4d2c183daa9145/comments", "author": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fd1ebe50f5bea799efd4ab70a816a731df34319", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fd1ebe50f5bea799efd4ab70a816a731df34319", "html_url": "https://github.com/rust-lang/rust/commit/5fd1ebe50f5bea799efd4ab70a816a731df34319"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "37e9e6b4d3d0d4674e163da0cfec4b957c6a52fa", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ad47fb1ca9d1eb66752611ae9f4d2c183daa9145/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad47fb1ca9d1eb66752611ae9f4d2c183daa9145/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs?ref=ad47fb1ca9d1eb66752611ae9f4d2c183daa9145", "patch": "@@ -1073,6 +1073,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         };\n         let last_expr_ty = self.node_ty(last_expr.hir_id);\n         let needs_box = match (last_expr_ty.kind(), expected_ty.kind()) {\n+            (ty::Opaque(last_def_id, _), ty::Opaque(exp_def_id, _))\n+                if last_def_id == exp_def_id =>\n+            {\n+                StatementAsExpression::CorrectType\n+            }\n             (ty::Opaque(last_def_id, last_bounds), ty::Opaque(exp_def_id, exp_bounds)) => {\n                 debug!(\n                     \"both opaque, likely future {:?} {:?} {:?} {:?}\","}]}