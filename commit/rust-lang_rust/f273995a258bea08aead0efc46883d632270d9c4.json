{"sha": "f273995a258bea08aead0efc46883d632270d9c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNzM5OTVhMjU4YmVhMDhhZWFkMGVmYzQ2ODgzZDYzMjI3MGQ5YzQ=", "commit": {"author": {"name": "yugo-horie", "email": "u5.horie@gmail.com", "date": "2021-01-16T04:30:26Z"}, "committer": {"name": "yugo-horie", "email": "u5.horie@gmail.com", "date": "2021-01-16T04:30:26Z"}, "message": "Swap assert_eq_text\\!(expected, actual)", "tree": {"sha": "8f30a64ed4003eaffbe32aa00e65b2cbbda3493a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f30a64ed4003eaffbe32aa00e65b2cbbda3493a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f273995a258bea08aead0efc46883d632270d9c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f273995a258bea08aead0efc46883d632270d9c4", "html_url": "https://github.com/rust-lang/rust/commit/f273995a258bea08aead0efc46883d632270d9c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f273995a258bea08aead0efc46883d632270d9c4/comments", "author": {"login": "u5surf", "id": 14180225, "node_id": "MDQ6VXNlcjE0MTgwMjI1", "avatar_url": "https://avatars.githubusercontent.com/u/14180225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/u5surf", "html_url": "https://github.com/u5surf", "followers_url": "https://api.github.com/users/u5surf/followers", "following_url": "https://api.github.com/users/u5surf/following{/other_user}", "gists_url": "https://api.github.com/users/u5surf/gists{/gist_id}", "starred_url": "https://api.github.com/users/u5surf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/u5surf/subscriptions", "organizations_url": "https://api.github.com/users/u5surf/orgs", "repos_url": "https://api.github.com/users/u5surf/repos", "events_url": "https://api.github.com/users/u5surf/events{/privacy}", "received_events_url": "https://api.github.com/users/u5surf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "u5surf", "id": 14180225, "node_id": "MDQ6VXNlcjE0MTgwMjI1", "avatar_url": "https://avatars.githubusercontent.com/u/14180225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/u5surf", "html_url": "https://github.com/u5surf", "followers_url": "https://api.github.com/users/u5surf/followers", "following_url": "https://api.github.com/users/u5surf/following{/other_user}", "gists_url": "https://api.github.com/users/u5surf/gists{/gist_id}", "starred_url": "https://api.github.com/users/u5surf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/u5surf/subscriptions", "organizations_url": "https://api.github.com/users/u5surf/orgs", "repos_url": "https://api.github.com/users/u5surf/repos", "events_url": "https://api.github.com/users/u5surf/events{/privacy}", "received_events_url": "https://api.github.com/users/u5surf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3782c78d7558633be5483a04aa1c098fe76100b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3782c78d7558633be5483a04aa1c098fe76100b9", "html_url": "https://github.com/rust-lang/rust/commit/3782c78d7558633be5483a04aa1c098fe76100b9"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "75e95081609a4d3e29de6efb9fae6878ce4e345f", "filename": "crates/hir_expand/src/proc_macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f273995a258bea08aead0efc46883d632270d9c4/crates%2Fhir_expand%2Fsrc%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f273995a258bea08aead0efc46883d632270d9c4/crates%2Fhir_expand%2Fsrc%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fproc_macro.rs?ref=f273995a258bea08aead0efc46883d632270d9c4", "patch": "@@ -135,7 +135,6 @@ mod tests {\n         let result = format!(\"{:#?}\", remove_derive_attrs(&tt).unwrap());\n \n         assert_eq_text!(\n-            &result,\n             r#\"\n SUBTREE $\n   PUNCH   # [alone] 0\n@@ -150,7 +149,8 @@ SUBTREE $\n     PUNCH   : [alone] 19\n     IDENT   u32 20\n \"#\n-            .trim()\n+            .trim(),\n+            &result\n         );\n     }\n }"}, {"sha": "4c63d3023651dd2a5ad3c371e08a9fbb7d824203", "filename": "crates/ide/src/syntax_tree.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f273995a258bea08aead0efc46883d632270d9c4/crates%2Fide%2Fsrc%2Fsyntax_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f273995a258bea08aead0efc46883d632270d9c4/crates%2Fide%2Fsrc%2Fsyntax_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_tree.rs?ref=f273995a258bea08aead0efc46883d632270d9c4", "patch": "@@ -111,7 +111,6 @@ mod tests {\n         let syn = analysis.syntax_tree(file_id, None).unwrap();\n \n         assert_eq_text!(\n-            syn.trim(),\n             r#\"\n SOURCE_FILE@0..11\n   FN@0..11\n@@ -127,7 +126,8 @@ SOURCE_FILE@0..11\n       L_CURLY@9..10 \"{\"\n       R_CURLY@10..11 \"}\"\n \"#\n-            .trim()\n+            .trim(),\n+            syn.trim()\n         );\n \n         let (analysis, file_id) = fixture::file(\n@@ -143,7 +143,6 @@ fn test() {\n         let syn = analysis.syntax_tree(file_id, None).unwrap();\n \n         assert_eq_text!(\n-            syn.trim(),\n             r#\"\n SOURCE_FILE@0..60\n   FN@0..60\n@@ -176,7 +175,8 @@ SOURCE_FILE@0..60\n       WHITESPACE@58..59 \"\\n\"\n       R_CURLY@59..60 \"}\"\n \"#\n-            .trim()\n+            .trim(),\n+            syn.trim()\n         );\n     }\n \n@@ -186,7 +186,6 @@ SOURCE_FILE@0..60\n         let syn = analysis.syntax_tree(range.file_id, Some(range.range)).unwrap();\n \n         assert_eq_text!(\n-            syn.trim(),\n             r#\"\n FN@0..11\n   FN_KW@0..2 \"fn\"\n@@ -201,7 +200,8 @@ FN@0..11\n     L_CURLY@9..10 \"{\"\n     R_CURLY@10..11 \"}\"\n \"#\n-            .trim()\n+            .trim(),\n+            syn.trim()\n         );\n \n         let (analysis, range) = fixture::range(\n@@ -216,7 +216,6 @@ FN@0..11\n         let syn = analysis.syntax_tree(range.file_id, Some(range.range)).unwrap();\n \n         assert_eq_text!(\n-            syn.trim(),\n             r#\"\n EXPR_STMT@16..58\n   MACRO_CALL@16..57\n@@ -234,7 +233,8 @@ EXPR_STMT@16..58\n       R_PAREN@56..57 \")\"\n   SEMICOLON@57..58 \";\"\n \"#\n-            .trim()\n+            .trim(),\n+            syn.trim()\n         );\n     }\n \n@@ -253,7 +253,6 @@ fn bar() {\n         );\n         let syn = analysis.syntax_tree(range.file_id, Some(range.range)).unwrap();\n         assert_eq_text!(\n-            syn.trim(),\n             r#\"\n SOURCE_FILE@0..12\n   FN@0..12\n@@ -270,7 +269,8 @@ SOURCE_FILE@0..12\n       WHITESPACE@10..11 \"\\n\"\n       R_CURLY@11..12 \"}\"\n \"#\n-            .trim()\n+            .trim(),\n+            syn.trim()\n         );\n \n         // With a raw string\n@@ -287,7 +287,6 @@ fn bar() {\n         );\n         let syn = analysis.syntax_tree(range.file_id, Some(range.range)).unwrap();\n         assert_eq_text!(\n-            syn.trim(),\n             r#\"\n SOURCE_FILE@0..12\n   FN@0..12\n@@ -304,7 +303,8 @@ SOURCE_FILE@0..12\n       WHITESPACE@10..11 \"\\n\"\n       R_CURLY@11..12 \"}\"\n \"#\n-            .trim()\n+            .trim(),\n+            syn.trim()\n         );\n \n         // With a raw string\n@@ -320,7 +320,6 @@ fn bar() {\n         );\n         let syn = analysis.syntax_tree(range.file_id, Some(range.range)).unwrap();\n         assert_eq_text!(\n-            syn.trim(),\n             r#\"\n SOURCE_FILE@0..25\n   FN@0..12\n@@ -351,7 +350,8 @@ SOURCE_FILE@0..25\n       WHITESPACE@23..24 \"\\n\"\n       R_CURLY@24..25 \"}\"\n \"#\n-            .trim()\n+            .trim(),\n+            syn.trim()\n         );\n     }\n }"}, {"sha": "4bbe66f1fead3fa11b685e75ee3a2e1e8def4b11", "filename": "crates/ide_db/src/helpers/insert_use/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f273995a258bea08aead0efc46883d632270d9c4/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f273995a258bea08aead0efc46883d632270d9c4/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs?ref=f273995a258bea08aead0efc46883d632270d9c4", "patch": "@@ -599,7 +599,7 @@ fn check(\n \n     let rewriter = insert_use(&file, path, mb);\n     let result = rewriter.rewrite(file.as_syntax_node()).to_string();\n-    assert_eq_text!(&result, ra_fixture_after);\n+    assert_eq_text!(ra_fixture_after, &result);\n }\n \n fn check_full(path: &str, ra_fixture_before: &str, ra_fixture_after: &str) {"}, {"sha": "bd2977ebd7b8a24fc550c4edf50044203eb85396", "filename": "crates/mbe/src/tests.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f273995a258bea08aead0efc46883d632270d9c4/crates%2Fmbe%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f273995a258bea08aead0efc46883d632270d9c4/crates%2Fmbe%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests.rs?ref=f273995a258bea08aead0efc46883d632270d9c4", "patch": "@@ -261,7 +261,6 @@ fn test_expr_order() {\n \n     let dump = format!(\"{:#?}\", expanded);\n     assert_eq_text!(\n-        dump.trim(),\n         r#\"MACRO_ITEMS@0..15\n   FN@0..15\n     FN_KW@0..2 \"fn\"\n@@ -285,6 +284,7 @@ fn test_expr_order() {\n             INT_NUMBER@12..13 \"2\"\n         SEMICOLON@13..14 \";\"\n       R_CURLY@14..15 \"}\"\"#,\n+        dump.trim()\n     );\n }\n \n@@ -989,7 +989,6 @@ fn test_tt_composite2() {\n \n     let res = format!(\"{:#?}\", &node);\n     assert_eq_text!(\n-        res.trim(),\n         r###\"MACRO_ITEMS@0..10\n   MACRO_CALL@0..10\n     PATH@0..3\n@@ -1003,7 +1002,8 @@ fn test_tt_composite2() {\n       R_ANGLE@6..7 \">\"\n       WHITESPACE@7..8 \" \"\n       POUND@8..9 \"#\"\n-      R_PAREN@9..10 \")\"\"###\n+      R_PAREN@9..10 \")\"\"###,\n+        res.trim()\n     );\n }\n \n@@ -1742,7 +1742,7 @@ impl MacroFixture {\n     fn assert_expand(&self, invocation: &str, expected: &str) {\n         let expansion = self.expand_tt(invocation);\n         let actual = format!(\"{:?}\", expansion);\n-        test_utils::assert_eq_text!(&actual.trim(), &expected.trim());\n+        test_utils::assert_eq_text!(&expected.trim(), &actual.trim());\n     }\n \n     fn assert_expand_items(&self, invocation: &str, expected: &str) -> &MacroFixture {\n@@ -1941,7 +1941,6 @@ fn test_no_space_after_semi_colon() {\n \n     let dump = format!(\"{:#?}\", expanded);\n     assert_eq_text!(\n-        dump.trim(),\n         r###\"MACRO_ITEMS@0..52\n   MODULE@0..26\n     ATTR@0..21\n@@ -1981,6 +1980,7 @@ fn test_no_space_after_semi_colon() {\n     NAME@50..51\n       IDENT@50..51 \"f\"\n     SEMICOLON@51..52 \";\"\"###,\n+        dump.trim()\n     );\n }\n "}, {"sha": "fd54f8dfdaf08405fff0f0ee02c4b8f4fc2335ec", "filename": "crates/proc_macro_srv/src/tests/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f273995a258bea08aead0efc46883d632270d9c4/crates%2Fproc_macro_srv%2Fsrc%2Ftests%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f273995a258bea08aead0efc46883d632270d9c4/crates%2Fproc_macro_srv%2Fsrc%2Ftests%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Ftests%2Fmod.rs?ref=f273995a258bea08aead0efc46883d632270d9c4", "patch": "@@ -38,9 +38,9 @@ fn test_derive_proc_macro_list() {\n     let res = list(\"serde_derive\", \"1\").join(\"\\n\");\n \n     assert_eq_text!(\n-        &res,\n         r#\"Serialize [CustomDerive]\n-Deserialize [CustomDerive]\"#\n+Deserialize [CustomDerive]\"#,\n+        &res\n     );\n }\n \n@@ -50,9 +50,9 @@ fn list_test_macros() {\n     let res = list(\"proc_macro_test\", \"0.0.0\").join(\"\\n\");\n \n     assert_eq_text!(\n-        &res,\n         r#\"function_like_macro [FuncLike]\n attribute_macro [Attr]\n-DummyTrait [CustomDerive]\"#\n+DummyTrait [CustomDerive]\"#,\n+        &res\n     );\n }"}, {"sha": "196abb8fc2e63246b82bc3b17d3bd2d604207032", "filename": "crates/proc_macro_srv/src/tests/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f273995a258bea08aead0efc46883d632270d9c4/crates%2Fproc_macro_srv%2Fsrc%2Ftests%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f273995a258bea08aead0efc46883d632270d9c4/crates%2Fproc_macro_srv%2Fsrc%2Ftests%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Ftests%2Futils.rs?ref=f273995a258bea08aead0efc46883d632270d9c4", "patch": "@@ -52,7 +52,7 @@ pub fn assert_expand(\n     let fixture = parse_string(ra_fixture).unwrap();\n \n     let res = expander.expand(macro_name, &fixture.subtree, None).unwrap();\n-    assert_eq_text!(&format!(\"{:?}\", res), &expect.trim());\n+    assert_eq_text!(&expect.trim(), &format!(\"{:?}\", res));\n }\n \n pub fn list(crate_name: &str, version: &str) -> Vec<String> {"}]}