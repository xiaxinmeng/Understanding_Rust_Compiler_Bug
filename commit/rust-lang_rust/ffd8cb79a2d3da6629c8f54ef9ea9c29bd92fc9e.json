{"sha": "ffd8cb79a2d3da6629c8f54ef9ea9c29bd92fc9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmZDhjYjc5YTJkM2RhNjYyOWM4ZjU0ZWY5ZWE5YzI5YmQ5MmZjOWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-20T13:36:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-20T13:36:03Z"}, "message": "Auto merge of #21364 - cmr:fix-ttseq-ice, r=alexcrichton\n\nCloses #21350", "tree": {"sha": "56ed1cdc650c7f83ff57182e8ddbf36233e0830b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56ed1cdc650c7f83ff57182e8ddbf36233e0830b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffd8cb79a2d3da6629c8f54ef9ea9c29bd92fc9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffd8cb79a2d3da6629c8f54ef9ea9c29bd92fc9e", "html_url": "https://github.com/rust-lang/rust/commit/ffd8cb79a2d3da6629c8f54ef9ea9c29bd92fc9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffd8cb79a2d3da6629c8f54ef9ea9c29bd92fc9e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bf41dafcfb6c979efb4e2438e047e1a54045eec", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bf41dafcfb6c979efb4e2438e047e1a54045eec", "html_url": "https://github.com/rust-lang/rust/commit/3bf41dafcfb6c979efb4e2438e047e1a54045eec"}, {"sha": "2d30f2201409ce6b62af09342bb9b1cacb76681b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d30f2201409ce6b62af09342bb9b1cacb76681b", "html_url": "https://github.com/rust-lang/rust/commit/2d30f2201409ce6b62af09342bb9b1cacb76681b"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "270df72eb0e499665c0fce14e367d42afc6a2fa8", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ffd8cb79a2d3da6629c8f54ef9ea9c29bd92fc9e/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffd8cb79a2d3da6629c8f54ef9ea9c29bd92fc9e/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=ffd8cb79a2d3da6629c8f54ef9ea9c29bd92fc9e", "patch": "@@ -281,19 +281,22 @@ pub fn compile<'cx>(cx: &'cx mut ExtCtxt,\n }\n \n fn check_lhs_nt_follows(cx: &mut ExtCtxt, lhs: &NamedMatch, sp: Span) {\n-    // lhs is going to be like MatchedNonterminal(NtTT(TtDelimited(...))), where\n-    // the entire lhs is those tts.\n-    // if ever we get box/deref patterns, this could turn into an `if let\n-    // &MatchedNonterminal(NtTT(box TtDelimited(...))) = lhs`\n-    let matcher = match lhs {\n+    // lhs is going to be like MatchedNonterminal(NtTT(TtDelimited(...))), where the entire lhs is\n+    // those tts. Or, it can be a \"bare sequence\", not wrapped in parens.\n+    match lhs {\n         &MatchedNonterminal(NtTT(ref inner)) => match &**inner {\n-            &TtDelimited(_, ref tts) => tts.tts.as_slice(),\n-            _ => cx.span_bug(sp, \"wrong-structured lhs for follow check\")\n+            &TtDelimited(_, ref tts) => {\n+                check_matcher(cx, tts.tts.iter(), &Eof);\n+            },\n+            tt @ &TtSequence(..) => {\n+                check_matcher(cx, Some(tt).into_iter(), &Eof);\n+            },\n+            _ => cx.span_bug(sp, \"wrong-structured lhs for follow check (didn't find \\\n+            a TtDelimited or TtSequence)\")\n         },\n-        _ => cx.span_bug(sp, \"wrong-structured lhs for follow check\")\n+        _ => cx.span_bug(sp, \"wrong-structured lhs for follow check (didn't find a \\\n+           MatchedNonterminal)\")\n     };\n-\n-    check_matcher(cx, matcher.iter(), &Eof);\n     // we don't abort on errors on rejection, the driver will do that for us\n     // after parsing/expansion. we can report every error in every macro this way.\n }"}, {"sha": "feafee90372d68a1dbec97e64d3edfaddf3dd8b1", "filename": "src/test/run-pass/issue-21350.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ffd8cb79a2d3da6629c8f54ef9ea9c29bd92fc9e/src%2Ftest%2Frun-pass%2Fissue-21350.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffd8cb79a2d3da6629c8f54ef9ea9c29bd92fc9e/src%2Ftest%2Frun-pass%2Fissue-21350.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-21350.rs?ref=ffd8cb79a2d3da6629c8f54ef9ea9c29bd92fc9e", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Make sure that \"bare sequences\" don't ICE in follow checking\n+\n+macro_rules! bare {\n+    $($id:expr),+ => ( $($id)+ )\n+}\n+\n+fn main() { }"}]}