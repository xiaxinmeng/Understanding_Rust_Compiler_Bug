{"sha": "2e7496ae7cdf9e912a639c49d2c35b8fdf16d106", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNzQ5NmFlN2NkZjllOTEyYTYzOWM0OWQyYzM1YjhmZGYxNmQxMDY=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-09-02T15:13:08Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-09-02T15:13:08Z"}, "message": "Merge pull request #283 from birkenfeld/wording\n\ndon't say \"did you mean to\" - use the standard \"consider...\"", "tree": {"sha": "45458f326c1535627deeb7fcbb8fb7184bb3a1cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45458f326c1535627deeb7fcbb8fb7184bb3a1cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e7496ae7cdf9e912a639c49d2c35b8fdf16d106", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e7496ae7cdf9e912a639c49d2c35b8fdf16d106", "html_url": "https://github.com/rust-lang/rust/commit/2e7496ae7cdf9e912a639c49d2c35b8fdf16d106", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e7496ae7cdf9e912a639c49d2c35b8fdf16d106/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9869e6fe4f7475af66f5e0ea5fea093b075d62c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9869e6fe4f7475af66f5e0ea5fea093b075d62c", "html_url": "https://github.com/rust-lang/rust/commit/a9869e6fe4f7475af66f5e0ea5fea093b075d62c"}, {"sha": "846c164709dac20fd16e30e8366c2b0dadd55787", "url": "https://api.github.com/repos/rust-lang/rust/commits/846c164709dac20fd16e30e8366c2b0dadd55787", "html_url": "https://github.com/rust-lang/rust/commit/846c164709dac20fd16e30e8366c2b0dadd55787"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "8c00c9f901b1eda979e57a4dc89d760e7a73ed53", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2e7496ae7cdf9e912a639c49d2c35b8fdf16d106/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/2e7496ae7cdf9e912a639c49d2c35b8fdf16d106/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=2e7496ae7cdf9e912a639c49d2c35b8fdf16d106", "patch": "@@ -92,7 +92,7 @@ fn main(){\n \n Produce this warning:\n ```\n-src/main.rs:8:5: 11:6 warning: You seem to be trying to use match for destructuring a single type. Did you mean to use `if let`?, #[warn(single_match)] on by default\n+src/main.rs:8:5: 11:6 warning: you seem to be trying to use match for destructuring a single type. Consider using `if let`, #[warn(single_match)] on by default\n src/main.rs:8     match x {\n src/main.rs:9         Some(y) => println!(\"{:?}\", y),\n src/main.rs:10         _ => ()"}, {"sha": "fdc3ca5e907ac7770612e29e7318b3194d41ea20", "filename": "src/matches.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2e7496ae7cdf9e912a639c49d2c35b8fdf16d106/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e7496ae7cdf9e912a639c49d2c35b8fdf16d106/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=2e7496ae7cdf9e912a639c49d2c35b8fdf16d106", "patch": "@@ -37,13 +37,12 @@ impl LintPass for MatchPass {\n             {\n                 if in_external_macro(cx, expr.span) {return;}\n                 span_help_and_lint(cx, SINGLE_MATCH, expr.span,\n-                      \"you seem to be trying to use match for \\\n-                      destructuring a single pattern. Did you mean to \\\n-                      use `if let`?\",\n-                      &format!(\"try\\nif let {} = {} {}\",\n-                               snippet(cx, arms[0].pats[0].span, \"..\"),\n-                               snippet(cx, ex.span, \"..\"),\n-                               expr_block(cx, &arms[0].body, \"..\")));\n+                                   \"you seem to be trying to use match for destructuring a \\\n+                                    single pattern. Consider using `if let`\",\n+                                   &format!(\"try\\nif let {} = {} {}\",\n+                                            snippet(cx, arms[0].pats[0].span, \"..\"),\n+                                            snippet(cx, ex.span, \"..\"),\n+                                            expr_block(cx, &arms[0].body, \"..\")));\n             }\n \n             // check preconditions for MATCH_REF_PATS"}, {"sha": "4a3c183462d7a7f0e3c507546322b94ff18de857", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2e7496ae7cdf9e912a639c49d2c35b8fdf16d106/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e7496ae7cdf9e912a639c49d2c35b8fdf16d106/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=2e7496ae7cdf9e912a639c49d2c35b8fdf16d106", "patch": "@@ -30,7 +30,7 @@ impl LintPass for TypePass {\n                 if match_type(cx, inner, &VEC_PATH) {\n                     span_help_and_lint(\n                         cx, BOX_VEC, ast_ty.span,\n-                        \"you seem to be trying to use `Box<Vec<T>>`. Did you mean to use `Vec<T>`?\",\n+                        \"you seem to be trying to use `Box<Vec<T>>`. Consider using just `Vec<T>`\",\n                         \"`Vec<T>` is already on the heap, `Box<Vec<T>>` makes an extra allocation.\");\n                 }\n             }"}]}