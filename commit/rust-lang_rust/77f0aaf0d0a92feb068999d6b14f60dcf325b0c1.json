{"sha": "77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZjBhYWYwZDBhOTJmZWIwNjg5OTlkNmIxNGY2MGRjZjMyNWIwYzE=", "commit": {"author": {"name": "Georg Semmler", "email": "georg_semmler_05@web.de", "date": "2019-10-12T18:53:11Z"}, "committer": {"name": "Georg Semmler", "email": "georg_semmler_05@web.de", "date": "2019-10-14T21:14:09Z"}, "message": "Add more coherence tests", "tree": {"sha": "7a23c3ec6b965f3aae55cb0e2a90e58f3eefe433", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a23c3ec6b965f3aae55cb0e2a90e58f3eefe433"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEt/EOFp+yWvA8Dk28qHvO5SBc5IkFAl2k5SMACgkQqHvO5SBc\n5InpxQgAlXI/6NbJOZVnFsGlmH6DHEMu1fuAWag5Z/mv1ONOJZsyIkg8KEChZVEW\nnYUhvcvwX38snM60/WSmxWhDp/L9STdLq21JQ+ONp25Obf6e2kBd89eUcCRpmVoQ\nbffVyo9tIYQexM0HHiEGotgGrk/68CG6M52k6X9El9AWCrUQFkoUj7s6+0BOMPYV\nxv7vdyZtE0nMz/DaMZfZBvWtEdyH0kupMD1JZUA+GJqDPkEOKzfdNKEsvcg4RImi\nsh+OfUk5G/BncWYfceN90RxbFtRVAPjLiL+TTuWxfdDkeepsjDnm4s7IQEs/ICSJ\n3nYh9J8BHp+m7Av7oA25yLXu6Wv4gQ==\n=QL3p\n-----END PGP SIGNATURE-----", "payload": "tree 7a23c3ec6b965f3aae55cb0e2a90e58f3eefe433\nparent 9249a7393c7fcc2813599fe90dfdb2ea784264d9\nauthor Georg Semmler <georg_semmler_05@web.de> 1570906391 +0200\ncommitter Georg Semmler <georg_semmler_05@web.de> 1571087649 +0200\n\nAdd more coherence tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "html_url": "https://github.com/rust-lang/rust/commit/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/comments", "author": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "committer": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9249a7393c7fcc2813599fe90dfdb2ea784264d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9249a7393c7fcc2813599fe90dfdb2ea784264d9", "html_url": "https://github.com/rust-lang/rust/commit/9249a7393c7fcc2813599fe90dfdb2ea784264d9"}], "stats": {"total": 402, "additions": 402, "deletions": 0}, "files": [{"sha": "de0b66a35eb01151a0d6fac92c6b8f7a8d36f296", "filename": "src/test/ui/coherence/impl-foreign-for-foreign.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote for i32 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "b03a75a77c3460708d2beb5644071ec48ba22632", "filename": "src/test/ui/coherence/impl-foreign-for-foreign.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign.stderr?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,12 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign-for-foreign.rs:12:1\n+   |\n+LL | impl Remote for i32 {\n+   | ^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "5146263d9911423d513923d33a1c09d34dd6b4f1", "filename": "src/test/ui/coherence/impl-foreign-for-foreign[foreign].rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,25 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote1<Rc<i32>> for i32 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+impl Remote1<Rc<Local>> for f64 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+impl<T> Remote1<Rc<T>> for f32 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "bfaec790b20a66f90e2a37d42348fd3dd94bddca", "filename": "src/test/ui/coherence/impl-foreign-for-foreign[foreign].stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Bforeign%5D.stderr?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,30 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign-for-foreign[foreign].rs:12:1\n+   |\n+LL | impl Remote1<Rc<i32>> for i32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign-for-foreign[foreign].rs:16:1\n+   |\n+LL | impl Remote1<Rc<Local>> for f64 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign-for-foreign[foreign].rs:20:1\n+   |\n+LL | impl<T> Remote1<Rc<T>> for f32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "050769dcf4ce8809d965de97ae0e6526dfcbba82", "filename": "src/test/ui/coherence/impl-foreign-for-foreign[local].rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Blocal%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Blocal%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-foreign%5Blocal%5D.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,16 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local<T>(Rc<T>);\n+\n+impl Remote1<Local<i32>> for i32 {}\n+impl<T> Remote1<Local<T>> for f32 {}\n+\n+fn main() {}"}, {"sha": "03b11edf98b416f1678950e2be4e3d9548adaa9c", "filename": "src/test/ui/coherence/impl-foreign-for-fundamental[foreign].rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,21 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote for Box<i32> {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+impl<T> Remote for Box<Rc<T>> {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "2ce4921cf938f44a18ebb141c94e610574f4273e", "filename": "src/test/ui/coherence/impl-foreign-for-fundamental[foreign].stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Bforeign%5D.stderr?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,21 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign-for-fundamental[foreign].rs:12:1\n+   |\n+LL | impl Remote for Box<i32> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign-for-fundamental[foreign].rs:16:1\n+   |\n+LL | impl<T> Remote for Box<Rc<T>> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "ae03ce6a440dc7d380a84f3f0581a8e9cae67fbf", "filename": "src/test/ui/coherence/impl-foreign-for-fundamental[local].rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Blocal%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Blocal%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-fundamental%5Blocal%5D.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local1<T>(Rc<T>);\n+\n+impl Remote for Box<Local> {}\n+impl<T> Remote for Box<Local1<T>> {}\n+\n+fn main() {}"}, {"sha": "c9dddeba18dc5a6f7e251b0cb16d14f260f93013", "filename": "src/test/ui/coherence/impl-foreign-for-local.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-local.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,15 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl Remote for Local {}\n+\n+fn main() {}"}, {"sha": "06efb6c2ad75e4ae4dfaeb4796560865c2f9a815", "filename": "src/test/ui/coherence/impl-foreign[fundemental[foreign]]-for-foreign.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,26 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local1<T>(Rc<T>);\n+\n+impl Remote1<Box<String>> for i32 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+impl Remote1<Box<Rc<i32>>> for f64 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+impl<T> Remote1<Box<Rc<T>>> for f32 {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "bf2361a1718afe94f5a067f9ba09979fd93aea57", "filename": "src/test/ui/coherence/impl-foreign[fundemental[foreign]]-for-foreign.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Bforeign%5D%5D-for-foreign.stderr?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,30 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign[fundemental[foreign]]-for-foreign.rs:13:1\n+   |\n+LL | impl Remote1<Box<String>> for i32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign[fundemental[foreign]]-for-foreign.rs:17:1\n+   |\n+LL | impl Remote1<Box<Rc<i32>>> for f64 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl-foreign[fundemental[foreign]]-for-foreign.rs:21:1\n+   |\n+LL | impl<T> Remote1<Box<Rc<T>>> for f32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "d47e0a36a565959f90a92a347e8c11eb4c7bfd2f", "filename": "src/test/ui/coherence/impl-foreign[fundemental[local]]-for-foreign.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Blocal%5D%5D-for-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Blocal%5D%5D-for-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bfundemental%5Blocal%5D%5D-for-foreign.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,18 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local1<T>(Rc<T>);\n+\n+impl Remote1<Box<Local>> for i32 {}\n+impl Remote1<Box<Local1<i32>>> for f64 {}\n+impl<T> Remote1<Box<Local1<T>>> for f32 {}\n+\n+fn main() {}"}, {"sha": "850b6f85d0ed7b63a6492446076603ef0227b4c3", "filename": "src/test/ui/coherence/impl[t]-foreign-for-(local, t).rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-(local%2C%20t).rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-(local%2C%20t).rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-(local%2C%20t).rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote for (Local, T) {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "ff0b9d6d0da9ada86a524daaa5ba2d014e06186b", "filename": "src/test/ui/coherence/impl[t]-foreign-for-(local, t).stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-(local%2C%20t).stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-(local%2C%20t).stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-(local%2C%20t).stderr?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,12 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl[t]-foreign-for-(local, t).rs:12:1\n+   |\n+LL | impl<T> Remote for (Local, T) {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "db7a2ae8076a3aa8e7fea020214e93d89c35d7b6", "filename": "src/test/ui/coherence/impl[t]-foreign-for-foreign[t].rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,23 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+use std::sync::Arc;\n+\n+struct Local;\n+\n+impl Remote for Rc<Local> {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+impl<T> Remote for Arc<T> {\n+    //~^ ERROR only traits defined in the current crate\n+    // | can be implemented for arbitrary types [E0117]\n+}\n+\n+fn main() {}"}, {"sha": "d7ffcaf76f9a2a9b56f95cc5b381b8a704ea42ae", "filename": "src/test/ui/coherence/impl[t]-foreign-for-foreign[t].stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-foreign%5Bt%5D.stderr?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,21 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl[t]-foreign-for-foreign[t].rs:13:1\n+   |\n+LL | impl Remote for Rc<Local> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/impl[t]-foreign-for-foreign[t].rs:18:1\n+   |\n+LL | impl<T> Remote for Arc<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference only types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0117`."}, {"sha": "4cc19e1a526cabcb05a22e07104dfa925bd15ab6", "filename": "src/test/ui/coherence/impl[t]-foreign-for-fundamental[t].rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+\n+impl<T> Remote for Box<T> {\n+    //~^ ERROR type parameter `T` must be used as the type parameter for\n+    // | some local type (e.g., `MyStruct<T>`)\n+}\n+\n+fn main() {}"}, {"sha": "20ce11ef9759e183414d1be0f7a5bd890dc97ebd", "filename": "src/test/ui/coherence/impl[t]-foreign-for-fundamental[t].stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.stderr?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,11 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/impl[t]-foreign-for-fundamental[t].rs:12:1\n+   |\n+LL | impl<T> Remote for Box<T> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "914680f191ac9e10f6b608dab7f628f6b921f964", "filename": "src/test/ui/coherence/impl[t]-foreign[fundemental[local]]-for-foreign[t].rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundemental%5Blocal%5D%5D-for-foreign%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundemental%5Blocal%5D%5D-for-foreign%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundemental%5Blocal%5D%5D-for-foreign%5Bt%5D.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local1<S>(Rc<S>);\n+\n+impl<T> Remote1<Box<Local>> for Rc<T> {}\n+impl<S, T> Remote1<Box<Local1<S>>> for Rc<T> {}\n+\n+fn main() {}"}, {"sha": "1e84ff40c6227e97c3796190c1b398c76289609d", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-foreign[t].rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-foreign%5Bt%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-foreign%5Bt%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-foreign%5Bt%5D.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,17 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local1<S>(Rc<S>);\n+\n+impl<T> Remote1<Local> for Rc<T> {}\n+impl<T, S> Remote1<Local1<S>> for Rc<T> {}\n+\n+fn main() {}"}, {"sha": "ea6aa101d209c1e2647c1c069fb7f3b263d89046", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-fundamental[foreign[t]].rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bforeign%5Bt%5D%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f0aaf0d0a92feb068999d6b14f60dcf325b0c1/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bforeign%5Bt%5D%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bforeign%5Bt%5D%5D.rs?ref=77f0aaf0d0a92feb068999d6b14f60dcf325b0c1", "patch": "@@ -0,0 +1,19 @@\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+use std::rc::Rc;\n+\n+struct Local;\n+struct Local1<S>(Rc<S>);\n+\n+impl<T> Remote1<Local> for Box<Rc<T>> {}\n+impl<T, S> Remote1<Local1<S>> for Box<Rc<T>> {}\n+impl<T> Remote1<Box<Local>> for Box<Rc<T>> {}\n+impl<T, S> Remote1<Box<Local1<S>>> for Box<Rc<T>> {}\n+\n+fn main() {}"}]}