{"sha": "33bb26998c3ef4982a4e838a626e6837f602263a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYmIyNjk5OGMzZWY0OTgyYTRlODM4YTYyNmU2ODM3ZjYwMjI2M2E=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-27T01:18:04Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-27T06:40:52Z"}, "message": "Refactor away a use of `ast_map.span_if_local()`", "tree": {"sha": "387a4b4e1bc4e88769b6b23b4a59fc71f01cb8b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/387a4b4e1bc4e88769b6b23b4a59fc71f01cb8b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33bb26998c3ef4982a4e838a626e6837f602263a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33bb26998c3ef4982a4e838a626e6837f602263a", "html_url": "https://github.com/rust-lang/rust/commit/33bb26998c3ef4982a4e838a626e6837f602263a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33bb26998c3ef4982a4e838a626e6837f602263a/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bcf818a8ff23711a2d0366d440a6bf27e16da03", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bcf818a8ff23711a2d0366d440a6bf27e16da03", "html_url": "https://github.com/rust-lang/rust/commit/3bcf818a8ff23711a2d0366d440a6bf27e16da03"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "c63776ad9ba8875b43823aedd26dfa71bba74b08", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/33bb26998c3ef4982a4e838a626e6837f602263a/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33bb26998c3ef4982a4e838a626e6837f602263a/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=33bb26998c3ef4982a4e838a626e6837f602263a", "patch": "@@ -1819,11 +1819,21 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                                                                                       path_depth)));\n \n                 // If it's a typedef, give a note\n-                if let Def::TyAlias(did) = path_res.base_def {\n+                if let Def::TyAlias(..) = path_res.base_def {\n                     err.fileline_note(trait_path.span,\n                                   \"`type` aliases cannot be used for traits\");\n-                    if let Some(sp) = self.ast_map.span_if_local(did) {\n-                        err.span_note(sp, \"type defined here\");\n+\n+                    let definition_site = {\n+                        let segments = &trait_path.segments;\n+                        if trait_path.global {\n+                            self.resolve_crate_relative_path(trait_path.span, segments, TypeNS)\n+                        } else {\n+                            self.resolve_module_relative_path(trait_path.span, segments, TypeNS)\n+                        }.map(|binding| binding.span).unwrap_or(codemap::DUMMY_SP)\n+                    };\n+\n+                    if definition_site != codemap::DUMMY_SP {\n+                        err.span_note(definition_site, \"type defined here\");\n                     }\n                 }\n                 err.emit();"}]}