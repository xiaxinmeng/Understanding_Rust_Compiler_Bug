{"sha": "48e6be42d7827210107f363e60dd86125c7b385e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZTZiZTQyZDc4MjcyMTAxMDdmMzYzZTYwZGQ4NjEyNWM3YjM4NWU=", "commit": {"author": {"name": "Josh Holmer", "email": "jholmer.in@gmail.com", "date": "2018-09-04T03:50:24Z"}, "committer": {"name": "Josh Holmer", "email": "jholmer.in@gmail.com", "date": "2018-09-04T03:50:24Z"}, "message": "Rustup", "tree": {"sha": "463800a0c921c5177049017a658cbe3161fb4362", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/463800a0c921c5177049017a658cbe3161fb4362"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48e6be42d7827210107f363e60dd86125c7b385e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48e6be42d7827210107f363e60dd86125c7b385e", "html_url": "https://github.com/rust-lang/rust/commit/48e6be42d7827210107f363e60dd86125c7b385e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48e6be42d7827210107f363e60dd86125c7b385e/comments", "author": {"login": "shssoichiro", "id": 5951392, "node_id": "MDQ6VXNlcjU5NTEzOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5951392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shssoichiro", "html_url": "https://github.com/shssoichiro", "followers_url": "https://api.github.com/users/shssoichiro/followers", "following_url": "https://api.github.com/users/shssoichiro/following{/other_user}", "gists_url": "https://api.github.com/users/shssoichiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/shssoichiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shssoichiro/subscriptions", "organizations_url": "https://api.github.com/users/shssoichiro/orgs", "repos_url": "https://api.github.com/users/shssoichiro/repos", "events_url": "https://api.github.com/users/shssoichiro/events{/privacy}", "received_events_url": "https://api.github.com/users/shssoichiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shssoichiro", "id": 5951392, "node_id": "MDQ6VXNlcjU5NTEzOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5951392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shssoichiro", "html_url": "https://github.com/shssoichiro", "followers_url": "https://api.github.com/users/shssoichiro/followers", "following_url": "https://api.github.com/users/shssoichiro/following{/other_user}", "gists_url": "https://api.github.com/users/shssoichiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/shssoichiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shssoichiro/subscriptions", "organizations_url": "https://api.github.com/users/shssoichiro/orgs", "repos_url": "https://api.github.com/users/shssoichiro/repos", "events_url": "https://api.github.com/users/shssoichiro/events{/privacy}", "received_events_url": "https://api.github.com/users/shssoichiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "061b2f3057515ecb49e147fa6f54d07fd988005c", "url": "https://api.github.com/repos/rust-lang/rust/commits/061b2f3057515ecb49e147fa6f54d07fd988005c", "html_url": "https://github.com/rust-lang/rust/commit/061b2f3057515ecb49e147fa6f54d07fd988005c"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "3e1bce044e3c0df35deed9d1f8912500e49ebcc3", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48e6be42d7827210107f363e60dd86125c7b385e/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48e6be42d7827210107f363e60dd86125c7b385e/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=48e6be42d7827210107f363e60dd86125c7b385e", "patch": "@@ -2328,8 +2328,10 @@ fn check_needless_collect<'a, 'tcx>(expr: &'tcx Expr, cx: &LateContext<'a, 'tcx>\n }\n \n fn shorten_needless_collect_span(expr: &Expr) -> Span {\n-    if let ExprKind::MethodCall(_, _, ref args) = expr.node {\n-        if let ExprKind::MethodCall(_, ref span, _) = args[0].node {\n+    if_chain! {\n+        if let ExprKind::MethodCall(_, _, ref args) = expr.node;\n+        if let ExprKind::MethodCall(_, ref span, _) = args[0].node;\n+        then {\n             return expr.span.with_lo(span.lo() - BytePos(1));\n         }\n     }"}, {"sha": "b001f20d5279f6d664274148f29bf55116cff231", "filename": "tests/ui/needless_collect.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48e6be42d7827210107f363e60dd86125c7b385e/tests%2Fui%2Fneedless_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48e6be42d7827210107f363e60dd86125c7b385e/tests%2Fui%2Fneedless_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect.rs?ref=48e6be42d7827210107f363e60dd86125c7b385e", "patch": "@@ -1,7 +1,9 @@\n+#![feature(tool_lints)]\n+\n use std::collections::{HashMap, HashSet, BTreeSet};\n \n-#[warn(clippy, needless_collect)]\n-#[allow(unused_variables, iter_cloned_collect)]\n+#[warn(clippy::needless_collect)]\n+#[allow(unused_variables, clippy::iter_cloned_collect)]\n fn main() {\n     let sample = [1; 5];\n     let len = sample.iter().collect::<Vec<_>>().len();"}, {"sha": "0124db3b9758a84436f87c7b5325b3013c4d0624", "filename": "tests/ui/needless_collect.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/48e6be42d7827210107f363e60dd86125c7b385e/tests%2Fui%2Fneedless_collect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48e6be42d7827210107f363e60dd86125c7b385e/tests%2Fui%2Fneedless_collect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect.stderr?ref=48e6be42d7827210107f363e60dd86125c7b385e", "patch": "@@ -1,27 +1,27 @@\n error: avoid using `collect()` when not needed\n- --> $DIR/needless_collect.rs:7:28\n+ --> $DIR/needless_collect.rs:9:28\n   |\n-7 |     let len = sample.iter().collect::<Vec<_>>().len();\n+9 |     let len = sample.iter().collect::<Vec<_>>().len();\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.count()`\n   |\n-  = note: `-D needless-collect` implied by `-D warnings`\n+  = note: `-D clippy::needless-collect` implied by `-D warnings`\n \n error: avoid using `collect()` when not needed\n- --> $DIR/needless_collect.rs:8:21\n-  |\n-8 |     if sample.iter().collect::<Vec<_>>().is_empty() {\n-  |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.next().is_none()`\n+  --> $DIR/needless_collect.rs:10:21\n+   |\n+10 |     if sample.iter().collect::<Vec<_>>().is_empty() {\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.next().is_none()`\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect.rs:11:27\n+  --> $DIR/needless_collect.rs:13:27\n    |\n-11 |     sample.iter().cloned().collect::<Vec<_>>().contains(&1);\n+13 |     sample.iter().cloned().collect::<Vec<_>>().contains(&1);\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.any(|&x| x == 1)`\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect.rs:12:34\n+  --> $DIR/needless_collect.rs:14:34\n    |\n-12 |     sample.iter().map(|x| (x, x)).collect::<HashMap<_, _>>().len();\n+14 |     sample.iter().map(|x| (x, x)).collect::<HashMap<_, _>>().len();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.count()`\n \n error: aborting due to 4 previous errors"}]}