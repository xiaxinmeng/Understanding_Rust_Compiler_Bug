{"sha": "b87047789723ac140f471c56cebf3faa27e0c06f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NzA0Nzc4OTcyM2FjMTQwZjQ3MWM1NmNlYmYzZmFhMjdlMGMwNmY=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-06-07T18:22:47Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-06-08T01:24:47Z"}, "message": "Avoid unnecessary (re-)allocations in the lexer", "tree": {"sha": "c769189e1c6279b86c8a79808974949a22771196", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c769189e1c6279b86c8a79808974949a22771196"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b87047789723ac140f471c56cebf3faa27e0c06f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b87047789723ac140f471c56cebf3faa27e0c06f", "html_url": "https://github.com/rust-lang/rust/commit/b87047789723ac140f471c56cebf3faa27e0c06f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b87047789723ac140f471c56cebf3faa27e0c06f/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43cae880790b532e5b3e2fb99c64a4ec78030652", "url": "https://api.github.com/repos/rust-lang/rust/commits/43cae880790b532e5b3e2fb99c64a4ec78030652", "html_url": "https://github.com/rust-lang/rust/commit/43cae880790b532e5b3e2fb99c64a4ec78030652"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "2634fa0b4db12ee1c73be813e2c68474a26bf5f5", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b87047789723ac140f471c56cebf3faa27e0c06f/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b87047789723ac140f471c56cebf3faa27e0c06f/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=b87047789723ac140f471c56cebf3faa27e0c06f", "patch": "@@ -538,19 +538,19 @@ fn ident_continue(c: char) -> bool {\n // EFFECT: advances the input past that token\n // EFFECT: updates the interner\n fn next_token_inner(rdr: @mut StringReader) -> token::Token {\n-    let mut accum_str = ~\"\";\n     let mut c = rdr.curr;\n     if ident_start(c) {\n-        while ident_continue(c) {\n-            str::push_char(&mut accum_str, c);\n+        let start = byte_offset(rdr, rdr.last_pos);\n+        while ident_continue(rdr.curr) {\n             bump(rdr);\n-            c = rdr.curr;\n         }\n-        if accum_str == ~\"_\" { return token::UNDERSCORE; }\n-        let is_mod_name = c == ':' && nextch(rdr) == ':';\n+        let string = get_str_from(rdr, start);\n+\n+        if \"_\" == string { return token::UNDERSCORE; }\n+        let is_mod_name = rdr.curr == ':' && nextch(rdr) == ':';\n \n         // FIXME: perform NFKC normalization here. (Issue #2253)\n-        return token::IDENT(str_to_ident(accum_str), is_mod_name);\n+        return token::IDENT(str_to_ident(string), is_mod_name);\n     }\n     if is_dec_digit(c) {\n         return scan_number(c, rdr);\n@@ -690,6 +690,7 @@ fn next_token_inner(rdr: @mut StringReader) -> token::Token {\n         return token::LIT_INT(c2 as i64, ast::ty_char);\n       }\n       '\"' => {\n+        let mut accum_str = ~\"\";\n         let n = byte_offset(rdr, rdr.last_pos);\n         bump(rdr);\n         while rdr.curr != '\"' {"}]}