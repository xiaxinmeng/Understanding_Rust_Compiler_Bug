{"sha": "a5fe9f7a877bdb4dc35226d1cbac2b4870fde276", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZmU5ZjdhODc3YmRiNGRjMzUyMjZkMWNiYWMyYjQ4NzBmZGUyNzY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-29T19:02:39Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-29T19:02:39Z"}, "message": "Merge #1604\n\n1604: Fix failing type interference for floating point literal r=matklad a=theotherphil\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/1592\n\nCo-authored-by: Phil Ellison <phil.j.ellison@gmail.com>", "tree": {"sha": "578ec5757edfb8771a4c910479230db14055b020", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/578ec5757edfb8771a4c910479230db14055b020"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5fe9f7a877bdb4dc35226d1cbac2b4870fde276", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5fe9f7a877bdb4dc35226d1cbac2b4870fde276", "html_url": "https://github.com/rust-lang/rust/commit/a5fe9f7a877bdb4dc35226d1cbac2b4870fde276", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5fe9f7a877bdb4dc35226d1cbac2b4870fde276/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "359b3376b32b38548c71e2b6e3a7393c4396ccf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/359b3376b32b38548c71e2b6e3a7393c4396ccf6", "html_url": "https://github.com/rust-lang/rust/commit/359b3376b32b38548c71e2b6e3a7393c4396ccf6"}, {"sha": "d79dc38e99f522be79b776b4b10090ecf175013c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d79dc38e99f522be79b776b4b10090ecf175013c", "html_url": "https://github.com/rust-lang/rust/commit/d79dc38e99f522be79b776b4b10090ecf175013c"}], "stats": {"total": 48, "additions": 34, "deletions": 14}, "files": [{"sha": "36dea17a30b3f7af808ed57f9cd4a76f47132229", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a5fe9f7a877bdb4dc35226d1cbac2b4870fde276/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5fe9f7a877bdb4dc35226d1cbac2b4870fde276/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=a5fe9f7a877bdb4dc35226d1cbac2b4870fde276", "patch": "@@ -334,6 +334,8 @@ fn infer_literals() {\n         infer(r##\"\n fn test() {\n     5i32;\n+    5f32;\n+    5f64;\n     \"hello\";\n     b\"bytes\";\n     'c';\n@@ -351,18 +353,20 @@ fn test() {\n }\n \"##),\n         @r###\"\n-[11; 201) '{     ...o\"#; }': ()\n+[11; 221) '{     ...o\"#; }': ()\n [17; 21) '5i32': i32\n-[27; 34) '\"hello\"': &str\n-[40; 48) 'b\"bytes\"': &[u8]\n-[54; 57) ''c'': char\n-[63; 67) 'b'b'': u8\n-[73; 77) '3.14': f64\n-[83; 87) '5000': i32\n-[93; 98) 'false': bool\n-[104; 108) 'true': bool\n-[114; 182) 'r#\"   ...    \"#': &str\n-[188; 198) 'br#\"yolo\"#': &[u8]\"###\n+[27; 31) '5f32': f32\n+[37; 41) '5f64': f64\n+[47; 54) '\"hello\"': &str\n+[60; 68) 'b\"bytes\"': &[u8]\n+[74; 77) ''c'': char\n+[83; 87) 'b'b'': u8\n+[93; 97) '3.14': f64\n+[103; 107) '5000': i32\n+[113; 118) 'false': bool\n+[124; 128) 'true': bool\n+[134; 202) 'r#\"   ...    \"#': &str\n+[208; 218) 'br#\"yolo\"#': &[u8]\"###\n     );\n }\n "}, {"sha": "8284f1b25f89135e504c6776fd71bafc76e499f7", "filename": "crates/ra_syntax/src/ast/expr_extensions.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a5fe9f7a877bdb4dc35226d1cbac2b4870fde276/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5fe9f7a877bdb4dc35226d1cbac2b4870fde276/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs?ref=a5fe9f7a877bdb4dc35226d1cbac2b4870fde276", "patch": "@@ -239,16 +239,32 @@ impl ast::Literal {\n     pub fn kind(&self) -> LiteralKind {\n         match self.token().kind() {\n             INT_NUMBER => {\n-                let allowed_suffix_list = [\n+                let int_suffix_list = [\n                     \"isize\", \"i128\", \"i64\", \"i32\", \"i16\", \"i8\", \"usize\", \"u128\", \"u64\", \"u32\",\n                     \"u16\", \"u8\",\n                 ];\n+\n+                // The lexer treats e.g. `1f64` as an integer literal. See\n+                // https://github.com/rust-analyzer/rust-analyzer/issues/1592\n+                // and the comments on the linked PR.\n+                let float_suffix_list = [\"f32\", \"f64\"];\n+\n                 let text = self.token().text().to_string();\n-                let suffix = allowed_suffix_list\n+\n+                let float_suffix = float_suffix_list\n                     .iter()\n                     .find(|&s| text.ends_with(s))\n                     .map(|&suf| SmolStr::new(suf));\n-                LiteralKind::IntNumber { suffix }\n+\n+                if float_suffix.is_some() {\n+                    LiteralKind::FloatNumber { suffix: float_suffix }\n+                } else {\n+                    let suffix = int_suffix_list\n+                        .iter()\n+                        .find(|&s| text.ends_with(s))\n+                        .map(|&suf| SmolStr::new(suf));\n+                    LiteralKind::IntNumber { suffix }\n+                }\n             }\n             FLOAT_NUMBER => {\n                 let allowed_suffix_list = [\"f64\", \"f32\"];"}]}