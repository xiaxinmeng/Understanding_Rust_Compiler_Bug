{"sha": "c01bc142194ae294356ac3b5b8666c3c351f14d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMWJjMTQyMTk0YWUyOTQzNTZhYzNiNWI4NjY2YzNjMzUxZjE0ZDU=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-05-26T00:50:06Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-05-26T02:45:29Z"}, "message": "Fix fsync shim for Windows hosts with RO files", "tree": {"sha": "9a25013e367052dd23e26f68cef22b8838f47247", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a25013e367052dd23e26f68cef22b8838f47247"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c01bc142194ae294356ac3b5b8666c3c351f14d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c01bc142194ae294356ac3b5b8666c3c351f14d5", "html_url": "https://github.com/rust-lang/rust/commit/c01bc142194ae294356ac3b5b8666c3c351f14d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c01bc142194ae294356ac3b5b8666c3c351f14d5/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "325208247428723f45f2db36c7a1f14f9d558a2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/325208247428723f45f2db36c7a1f14f9d558a2b", "html_url": "https://github.com/rust-lang/rust/commit/325208247428723f45f2db36c7a1f14f9d558a2b"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "7f1c5caaf642747c5434dc58b70f41fb2f5a1177", "filename": "src/shims/fs.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c01bc142194ae294356ac3b5b8666c3c351f14d5/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c01bc142194ae294356ac3b5b8666c3c351f14d5/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=c01bc142194ae294356ac3b5b8666c3c351f14d5", "patch": "@@ -1125,9 +1125,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         this.check_no_isolation(\"fsync\")?;\n \n         let fd = this.read_scalar(fd_op)?.to_i32()?;\n-        if let Some(FileHandle { file, writable: _ }) = this.machine.file_handler.handles.get_mut(&fd) {\n-            let result = file.sync_all();\n-            this.try_unwrap_io_result(result.map(|_| 0i32))\n+        if let Some(FileHandle { file, writable }) = this.machine.file_handler.handles.get_mut(&fd) {\n+            if !*writable && cfg!(windows) {\n+                // sync_all() will return an error on Windows hosts if the file is not opened for writing.\n+                Ok(0i32)\n+            } else {\n+                let result = file.sync_all();\n+                this.try_unwrap_io_result(result.map(|_| 0i32))\n+            }\n         } else {\n             this.handle_not_found()\n         }\n@@ -1139,9 +1144,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         this.check_no_isolation(\"fdatasync\")?;\n \n         let fd = this.read_scalar(fd_op)?.to_i32()?;\n-        if let Some(FileHandle { file, writable: _ }) = this.machine.file_handler.handles.get_mut(&fd) {\n-            let result = file.sync_data();\n-            this.try_unwrap_io_result(result.map(|_| 0i32))\n+        if let Some(FileHandle { file, writable }) = this.machine.file_handler.handles.get_mut(&fd) {\n+            if !*writable && cfg!(windows) {\n+                // sync_data() will return an error on Windows hosts if the file is not opened for writing.\n+                Ok(0i32)\n+            } else {\n+                let result = file.sync_data();\n+                this.try_unwrap_io_result(result.map(|_| 0i32))\n+            }\n         } else {\n             this.handle_not_found()\n         }"}]}