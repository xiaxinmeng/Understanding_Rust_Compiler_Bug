{"sha": "75a977dd478b249a7d29bc4ed3efed8df85b1ddc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1YTk3N2RkNDc4YjI0OWE3ZDI5YmM0ZWQzZWZlZDhkZjg1YjFkZGM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-12T13:21:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-12T13:21:08Z"}, "message": "Rollup merge of #68994 - Keruspe:sanitizers-conflict, r=Mark-Simulacrum\n\nrustbuild: include channel in sanitizers installed name\n\nAllows parallel install of different rust channels.\n\nI'm not sure if the channel is the right thing to use there, but currently both beta and nightly try to install e.g. `/usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_rt.asan.a` when before (and in current stable) it used to be `/usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_asan-45a4390180e83d28.rlib` which contained a hash, making it unique.\nWith this patch, `/usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc-nightly_rt.asan.a` gets installed", "tree": {"sha": "6889c7a6e9fe488c43a5b0c256ea57d4d5c74532", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6889c7a6e9fe488c43a5b0c256ea57d4d5c74532"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75a977dd478b249a7d29bc4ed3efed8df85b1ddc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeQ/vECRBK7hj4Ov3rIwAAdHIIAIgAmMAAL5SGErtcriWaXDgp\nNUNgU7V9srDk8WFXivX3UOtBl01IMf8hL38W+gUnGbhe4ug061BDoY8T+iJS4tWL\nPZZqVI06tlahvAuAr7LdkfqyDgHYzCjNyQLwEQw3PuztNDA7DcY9rcMz3NY5mU+K\nHpc8SEHytdvmfSGmjLLRJXHZ9yG0FePN39XRRFIpJ4X8yy/dkcnbS2Cp7ePkT/WE\nxGw28rInSWtmUcQUOIiv1GyY2vzhL6a9b3RWCiPs8Tw6hMSjfwf0khm244/qzKDp\n7sziOLQN9XbtoVgvnQWQX0atNNg+YZt5ilKR/SpfAIp0QfEUI1J6Pw1+37Mgkuo=\n=0xVt\n-----END PGP SIGNATURE-----\n", "payload": "tree 6889c7a6e9fe488c43a5b0c256ea57d4d5c74532\nparent f2d829ce6ab52c9e5b9aacd1181c87208c736ee9\nparent 1bba9cfb9036eb44bb549f34c090cb38bd0d84fd\nauthor Dylan DPC <dylan.dpc@gmail.com> 1581513668 +0100\ncommitter GitHub <noreply@github.com> 1581513668 +0100\n\nRollup merge of #68994 - Keruspe:sanitizers-conflict, r=Mark-Simulacrum\n\nrustbuild: include channel in sanitizers installed name\n\nAllows parallel install of different rust channels.\n\nI'm not sure if the channel is the right thing to use there, but currently both beta and nightly try to install e.g. `/usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_rt.asan.a` when before (and in current stable) it used to be `/usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc_asan-45a4390180e83d28.rlib` which contained a hash, making it unique.\nWith this patch, `/usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/librustc-nightly_rt.asan.a` gets installed\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75a977dd478b249a7d29bc4ed3efed8df85b1ddc", "html_url": "https://github.com/rust-lang/rust/commit/75a977dd478b249a7d29bc4ed3efed8df85b1ddc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75a977dd478b249a7d29bc4ed3efed8df85b1ddc/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2d829ce6ab52c9e5b9aacd1181c87208c736ee9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2d829ce6ab52c9e5b9aacd1181c87208c736ee9", "html_url": "https://github.com/rust-lang/rust/commit/f2d829ce6ab52c9e5b9aacd1181c87208c736ee9"}, {"sha": "1bba9cfb9036eb44bb549f34c090cb38bd0d84fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bba9cfb9036eb44bb549f34c090cb38bd0d84fd", "html_url": "https://github.com/rust-lang/rust/commit/1bba9cfb9036eb44bb549f34c090cb38bd0d84fd"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "5790f236cc8fd947f2cb6011fe4da88770cee265", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/75a977dd478b249a7d29bc4ed3efed8df85b1ddc/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75a977dd478b249a7d29bc4ed3efed8df85b1ddc/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=75a977dd478b249a7d29bc4ed3efed8df85b1ddc", "patch": "@@ -571,7 +571,7 @@ impl Step for Sanitizers {\n         }\n \n         let out_dir = builder.native_dir(self.target).join(\"sanitizers\");\n-        let runtimes = supported_sanitizers(&out_dir, self.target);\n+        let runtimes = supported_sanitizers(&out_dir, self.target, &builder.config.channel);\n         if runtimes.is_empty() {\n             return runtimes;\n         }\n@@ -635,7 +635,11 @@ pub struct SanitizerRuntime {\n }\n \n /// Returns sanitizers available on a given target.\n-fn supported_sanitizers(out_dir: &Path, target: Interned<String>) -> Vec<SanitizerRuntime> {\n+fn supported_sanitizers(\n+    out_dir: &Path,\n+    target: Interned<String>,\n+    channel: &str,\n+) -> Vec<SanitizerRuntime> {\n     let mut result = Vec::new();\n     match &*target {\n         \"x86_64-apple-darwin\" => {\n@@ -644,7 +648,7 @@ fn supported_sanitizers(out_dir: &Path, target: Interned<String>) -> Vec<Sanitiz\n                     cmake_target: format!(\"clang_rt.{}_osx_dynamic\", s),\n                     path: out_dir\n                         .join(&format!(\"build/lib/darwin/libclang_rt.{}_osx_dynamic.dylib\", s)),\n-                    name: format!(\"librustc_rt.{}.dylib\", s),\n+                    name: format!(\"librustc-{}_rt.{}.dylib\", channel, s),\n                 });\n             }\n         }\n@@ -653,7 +657,7 @@ fn supported_sanitizers(out_dir: &Path, target: Interned<String>) -> Vec<Sanitiz\n                 result.push(SanitizerRuntime {\n                     cmake_target: format!(\"clang_rt.{}-x86_64\", s),\n                     path: out_dir.join(&format!(\"build/lib/linux/libclang_rt.{}-x86_64.a\", s)),\n-                    name: format!(\"librustc_rt.{}.a\", s),\n+                    name: format!(\"librustc-{}_rt.{}.a\", channel, s),\n                 });\n             }\n         }\n@@ -662,7 +666,7 @@ fn supported_sanitizers(out_dir: &Path, target: Interned<String>) -> Vec<Sanitiz\n                 result.push(SanitizerRuntime {\n                     cmake_target: format!(\"clang_rt.{}-x86_64\", s),\n                     path: out_dir.join(&format!(\"build/lib/fuchsia/libclang_rt.{}-x86_64.a\", s)),\n-                    name: format!(\"librustc_rt.{}.a\", s),\n+                    name: format!(\"librustc-{}_rt.{}.a\", channel, s),\n                 });\n             }\n         }\n@@ -671,7 +675,7 @@ fn supported_sanitizers(out_dir: &Path, target: Interned<String>) -> Vec<Sanitiz\n                 result.push(SanitizerRuntime {\n                     cmake_target: format!(\"clang_rt.{}-aarch64\", s),\n                     path: out_dir.join(&format!(\"build/lib/fuchsia/libclang_rt.{}-aarch64.a\", s)),\n-                    name: format!(\"librustc_rt.{}.a\", s),\n+                    name: format!(\"librustc-{}_rt.{}.a\", channel, s),\n                 });\n             }\n         }"}, {"sha": "aaa4448fc19337eec4f2fcdb1fa712baecba68c2", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/75a977dd478b249a7d29bc4ed3efed8df85b1ddc/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75a977dd478b249a7d29bc4ed3efed8df85b1ddc/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=75a977dd478b249a7d29bc4ed3efed8df85b1ddc", "patch": "@@ -765,20 +765,23 @@ fn link_sanitizer_runtime(sess: &Session, crate_type: config::CrateType, linker:\n     let default_sysroot = filesearch::get_or_default_sysroot();\n     let default_tlib =\n         filesearch::make_target_lib_path(&default_sysroot, sess.opts.target_triple.triple());\n+    let channel = option_env!(\"CFG_RELEASE_CHANNEL\")\n+        .map(|channel| format!(\"-{}\", channel))\n+        .unwrap_or_default();\n \n     match sess.opts.target_triple.triple() {\n         \"x86_64-apple-darwin\" => {\n             // On Apple platforms, the sanitizer is always built as a dylib, and\n             // LLVM will link to `@rpath/*.dylib`, so we need to specify an\n             // rpath to the library as well (the rpath should be absolute, see\n             // PR #41352 for details).\n-            let libname = format!(\"rustc_rt.{}\", name);\n+            let libname = format!(\"rustc{}_rt.{}\", channel, name);\n             let rpath = default_tlib.to_str().expect(\"non-utf8 component in path\");\n             linker.args(&[\"-Wl,-rpath\".into(), \"-Xlinker\".into(), rpath.into()]);\n             linker.link_dylib(Symbol::intern(&libname));\n         }\n         \"x86_64-unknown-linux-gnu\" | \"x86_64-fuchsia\" | \"aarch64-fuchsia\" => {\n-            let filename = format!(\"librustc_rt.{}.a\", name);\n+            let filename = format!(\"librustc{}_rt.{}.a\", channel, name);\n             let path = default_tlib.join(&filename);\n             linker.link_whole_rlib(&path);\n         }"}, {"sha": "ea2af6e192e7c1d0c927393717dcab497c453240", "filename": "src/librustc_codegen_ssa/build.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75a977dd478b249a7d29bc4ed3efed8df85b1ddc/src%2Flibrustc_codegen_ssa%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75a977dd478b249a7d29bc4ed3efed8df85b1ddc/src%2Flibrustc_codegen_ssa%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbuild.rs?ref=75a977dd478b249a7d29bc4ed3efed8df85b1ddc", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    println!(\"cargo:rerun-if-changed=build.rs\");\n+    println!(\"cargo:rerun-if-env-changed=CFG_RELEASE_CHANNEL\");\n+}"}]}