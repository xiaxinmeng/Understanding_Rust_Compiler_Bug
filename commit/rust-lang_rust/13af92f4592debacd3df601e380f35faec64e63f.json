{"sha": "13af92f4592debacd3df601e380f35faec64e63f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzYWY5MmY0NTkyZGViYWNkM2RmNjAxZTM4MGYzNWZhZWM2NGU2M2Y=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-10-23T18:13:49Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-12-11T11:18:55Z"}, "message": "Add note on nonzero-sized uninhabited types", "tree": {"sha": "2bb75464b90fb0164989a3f97f467a7440d7e8fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bb75464b90fb0164989a3f97f467a7440d7e8fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13af92f4592debacd3df601e380f35faec64e63f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13af92f4592debacd3df601e380f35faec64e63f", "html_url": "https://github.com/rust-lang/rust/commit/13af92f4592debacd3df601e380f35faec64e63f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13af92f4592debacd3df601e380f35faec64e63f/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a38ff377e7420d33fb67349fdcda3fe9fde329d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a38ff377e7420d33fb67349fdcda3fe9fde329d1", "html_url": "https://github.com/rust-lang/rust/commit/a38ff377e7420d33fb67349fdcda3fe9fde329d1"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "8381101290eee8932e37d91955493a4790cd975e", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/13af92f4592debacd3df601e380f35faec64e63f/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13af92f4592debacd3df601e380f35faec64e63f/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=13af92f4592debacd3df601e380f35faec64e63f", "patch": "@@ -1547,7 +1547,8 @@ impl<'a, 'gcx, 'tcx> TyS<'tcx> {\n     /// conservative: for some types that are uninhabited we return `false`,\n     /// but we only return `true` for types that are definitely uninhabited.\n     /// `ty.conservative_is_uninhabited` implies that any value of type `ty`\n-    /// will be `Abi::Uninhabited`.\n+    /// will be `Abi::Uninhabited`. (Note that uninhabited types may have nonzero\n+    /// size, to account for partial initialisation. See #49298 for details.)\n     pub fn conservative_is_uninhabited(&self, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> bool {\n         // FIXME(varkor): we can make this less conversative by substituting concrete\n         // type arguments."}]}