{"sha": "5cb5083909f19c107aec186a72b8b9104f8ca30d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjYjUwODM5MDlmMTljMTA3YWVjMTg2YTcyYjhiOTEwNGY4Y2EzMGQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-03-03T16:04:58Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-03-16T20:13:15Z"}, "message": "syntax_ext: Validate `#[proc_macro_derive]` input better\n\nTweak some error wording", "tree": {"sha": "2043de231487b0b5275dc39af3732ec6f471ef8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2043de231487b0b5275dc39af3732ec6f471ef8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cb5083909f19c107aec186a72b8b9104f8ca30d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cb5083909f19c107aec186a72b8b9104f8ca30d", "html_url": "https://github.com/rust-lang/rust/commit/5cb5083909f19c107aec186a72b8b9104f8ca30d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cb5083909f19c107aec186a72b8b9104f8ca30d/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8371caf5ee13e775d2b2dc64c9b08e37dab49eda", "url": "https://api.github.com/repos/rust-lang/rust/commits/8371caf5ee13e775d2b2dc64c9b08e37dab49eda", "html_url": "https://github.com/rust-lang/rust/commit/8371caf5ee13e775d2b2dc64c9b08e37dab49eda"}], "stats": {"total": 44, "additions": 33, "deletions": 11}, "files": [{"sha": "46342e162cf9b34b9e8e175f59772fb2e57f3b34", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cb5083909f19c107aec186a72b8b9104f8ca30d/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb5083909f19c107aec186a72b8b9104f8ca30d/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=5cb5083909f19c107aec186a72b8b9104f8ca30d", "patch": "@@ -601,7 +601,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                 res\n             }\n             ProcMacroDerive(..) | BuiltinDerive(..) => {\n-                self.cx.span_err(attr.span, &format!(\"`{}` is a derive mode\", attr.path));\n+                self.cx.span_err(attr.span, &format!(\"`{}` is a derive macro\", attr.path));\n                 self.cx.trace_macros_diag();\n                 invoc.fragment_kind.dummy(attr.span)\n             }\n@@ -822,7 +822,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n             }\n \n             ProcMacroDerive(..) | BuiltinDerive(..) => {\n-                self.cx.span_err(path.span, &format!(\"`{}` is a derive mode\", path));\n+                self.cx.span_err(path.span, &format!(\"`{}` is a derive macro\", path));\n                 self.cx.trace_macros_diag();\n                 kind.dummy(span)\n             }"}, {"sha": "efa6ce56648ebe5509d0a4c4065e3f237c096619", "filename": "src/libsyntax_ext/proc_macro_decls.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5cb5083909f19c107aec186a72b8b9104f8ca30d/src%2Flibsyntax_ext%2Fproc_macro_decls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb5083909f19c107aec186a72b8b9104f8ca30d/src%2Flibsyntax_ext%2Fproc_macro_decls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_decls.rs?ref=5cb5083909f19c107aec186a72b8b9104f8ca30d", "patch": "@@ -128,9 +128,13 @@ impl<'a> CollectProcMacros<'a> {\n             }\n         };\n \n+        if trait_ident.is_path_segment_keyword() {\n+            self.handler.span_err(trait_attr.span(),\n+                                  &format!(\"`{}` cannot be a name of derive macro\", trait_ident));\n+        }\n         if deriving::is_builtin_trait(trait_ident.name) {\n             self.handler.span_err(trait_attr.span,\n-                                  \"cannot override a built-in #[derive] mode\");\n+                                  \"cannot override a built-in derive macro\");\n         }\n \n         let attributes_attr = list.get(1);\n@@ -140,16 +144,15 @@ impl<'a> CollectProcMacros<'a> {\n             }\n             attr.meta_item_list().unwrap_or_else(|| {\n                 self.handler.span_err(attr.span(),\n-                                      \"attribute must be of form: \\\n-                                       `attributes(foo, bar)`\");\n+                                      \"attribute must be of form: `attributes(foo, bar)`\");\n                 &[]\n             }).into_iter().filter_map(|attr| {\n                 let attr = match attr.meta_item() {\n                     Some(meta_item) => meta_item,\n                     _ => {\n                         self.handler.span_err(attr.span(), \"not a meta item\");\n                         return None;\n-                    },\n+                    }\n                 };\n \n                 let ident = match attr.ident() {\n@@ -159,6 +162,13 @@ impl<'a> CollectProcMacros<'a> {\n                         return None;\n                     }\n                 };\n+                if ident.is_path_segment_keyword() {\n+                    self.handler.span_err(\n+                        attr.span(),\n+                        &format!(\"`{}` cannot be a name of derive helper attribute\", ident),\n+                    );\n+                }\n+\n                 Some(ident.name)\n             }).collect()\n         } else {"}, {"sha": "ac7d0b4c2b6c98efd97c76ed659c0a7e2ef2f39e", "filename": "src/test/ui/proc-macro/attribute.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cb5083909f19c107aec186a72b8b9104f8ca30d/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cb5083909f19c107aec186a72b8b9104f8ca30d/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.rs?ref=5cb5083909f19c107aec186a72b8b9104f8ca30d", "patch": "@@ -39,11 +39,11 @@ pub fn foo7(input: TokenStream) -> TokenStream { input }\n pub fn foo8(input: TokenStream) -> TokenStream { input }\n \n #[proc_macro_derive(self)]\n-//FIXME ERROR: `self` cannot be a name of derive macro\n+//~^ ERROR: `self` cannot be a name of derive macro\n pub fn foo9(input: TokenStream) -> TokenStream { input }\n \n #[proc_macro_derive(PartialEq)]\n-//~^ ERROR: cannot override a built-in #[derive] mode\n+//~^ ERROR: cannot override a built-in derive macro\n pub fn foo10(input: TokenStream) -> TokenStream { input }\n \n #[proc_macro_derive(d11, a)]\n@@ -72,5 +72,5 @@ pub fn foo15(input: TokenStream) -> TokenStream { input }\n pub fn foo16(input: TokenStream) -> TokenStream { input }\n \n #[proc_macro_derive(d17, attributes(self))]\n-//FIXME ERROR: `self` cannot be a name of derive helper attribute\n+//~^ ERROR: `self` cannot be a name of derive helper attribute\n pub fn foo17(input: TokenStream) -> TokenStream { input }"}, {"sha": "cc17d383569fccb65da126312076c01e70aa13cf", "filename": "src/test/ui/proc-macro/attribute.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5cb5083909f19c107aec186a72b8b9104f8ca30d/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cb5083909f19c107aec186a72b8b9104f8ca30d/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute.stderr?ref=5cb5083909f19c107aec186a72b8b9104f8ca30d", "patch": "@@ -34,7 +34,13 @@ error: must only be one word\n LL | #[proc_macro_derive(d8(a))]\n    |                     ^^^^^\n \n-error: cannot override a built-in #[derive] mode\n+error: `self` cannot be a name of derive macro\n+  --> $DIR/attribute.rs:41:21\n+   |\n+LL | #[proc_macro_derive(self)]\n+   |                     ^^^^\n+\n+error: cannot override a built-in derive macro\n   --> $DIR/attribute.rs:45:21\n    |\n LL | #[proc_macro_derive(PartialEq)]\n@@ -82,6 +88,12 @@ error: must only be one word\n LL | #[proc_macro_derive(d16, attributes(a(b)))]\n    |                                     ^^^^\n \n+error: `self` cannot be a name of derive helper attribute\n+  --> $DIR/attribute.rs:74:37\n+   |\n+LL | #[proc_macro_derive(d17, attributes(self))]\n+   |                                     ^^^^\n+\n error: attribute must be of the form `#[proc_macro_derive(TraitName, /*opt*/ attributes(name1, name2, ...))]`\n   --> $DIR/attribute.rs:9:1\n    |\n@@ -94,5 +106,5 @@ error: attribute must be of the form `#[proc_macro_derive(TraitName, /*opt*/ att\n LL | #[proc_macro_derive = \"\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 16 previous errors\n+error: aborting due to 18 previous errors\n "}]}