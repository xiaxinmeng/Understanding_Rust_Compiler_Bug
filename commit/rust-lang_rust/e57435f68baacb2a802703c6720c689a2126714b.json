{"sha": "e57435f68baacb2a802703c6720c689a2126714b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NzQzNWY2OGJhYWNiMmE4MDI3MDNjNjcyMGM2ODlhMjEyNjcxNGI=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-09T11:43:32Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-09T11:51:15Z"}, "message": "Don't put 0-length array in the lltype of an arg-less variant\n\nThis seems to confuse LLVM in some very specific situations.\n\nCloses #883", "tree": {"sha": "5c8bbf96be65fa8b5bc1d40991ebaa21dd46c08b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c8bbf96be65fa8b5bc1d40991ebaa21dd46c08b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e57435f68baacb2a802703c6720c689a2126714b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e57435f68baacb2a802703c6720c689a2126714b", "html_url": "https://github.com/rust-lang/rust/commit/e57435f68baacb2a802703c6720c689a2126714b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e57435f68baacb2a802703c6720c689a2126714b/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6e6f8b8103a5e7e5de30076aea18fce13d3fd61", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6e6f8b8103a5e7e5de30076aea18fce13d3fd61", "html_url": "https://github.com/rust-lang/rust/commit/b6e6f8b8103a5e7e5de30076aea18fce13d3fd61"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "cbb11879fd7a6fea6817ac3912315f22f8a9e71e", "filename": "src/comp/middle/trans_common.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e57435f68baacb2a802703c6720c689a2126714b/src%2Fcomp%2Fmiddle%2Ftrans_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e57435f68baacb2a802703c6720c689a2126714b/src%2Fcomp%2Fmiddle%2Ftrans_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_common.rs?ref=e57435f68baacb2a802703c6720c689a2126714b", "patch": "@@ -696,7 +696,11 @@ fn T_opaque_closure_ptr(cx: &crate_ctxt) -> TypeRef {\n fn T_tag(tn: &type_names, size: uint) -> TypeRef {\n     let s = \"tag_\" + uint::to_str(size, 10u);\n     if tn.name_has_type(s) { ret tn.get_type(s); }\n-    let t = T_struct([T_int(), T_array(T_i8(), size)]);\n+    let t = if size == 0u {\n+        T_struct([T_int()])\n+    } else {\n+        T_struct([T_int(), T_array(T_i8(), size)])\n+    };\n     tn.associate(s, t);\n     ret t;\n }"}]}