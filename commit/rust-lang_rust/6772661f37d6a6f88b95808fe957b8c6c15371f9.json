{"sha": "6772661f37d6a6f88b95808fe957b8c6c15371f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NzI2NjFmMzdkNmE2Zjg4Yjk1ODA4ZmU5NTdiOGM2YzE1MzcxZjk=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-07-21T23:44:23Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-07-21T23:49:09Z"}, "message": "Review comments", "tree": {"sha": "0f1226bf0e629fd6fa21f141e98e2b212fe77e7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f1226bf0e629fd6fa21f141e98e2b212fe77e7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6772661f37d6a6f88b95808fe957b8c6c15371f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6772661f37d6a6f88b95808fe957b8c6c15371f9", "html_url": "https://github.com/rust-lang/rust/commit/6772661f37d6a6f88b95808fe957b8c6c15371f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6772661f37d6a6f88b95808fe957b8c6c15371f9/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09c712dae3e34c34b2d0c9511c8c492b2b1b4b27", "url": "https://api.github.com/repos/rust-lang/rust/commits/09c712dae3e34c34b2d0c9511c8c492b2b1b4b27", "html_url": "https://github.com/rust-lang/rust/commit/09c712dae3e34c34b2d0c9511c8c492b2b1b4b27"}], "stats": {"total": 42, "additions": 16, "deletions": 26}, "files": [{"sha": "8e746676ecd9e3f4fc14fbd26ca296d19c7bed7c", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6772661f37d6a6f88b95808fe957b8c6c15371f9/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6772661f37d6a6f88b95808fe957b8c6c15371f9/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=6772661f37d6a6f88b95808fe957b8c6c15371f9", "patch": "@@ -120,15 +120,16 @@ fn generic_extension<'cx>(cx: &'cx mut ExtCtxt,\n                     _ => cx.span_bug(sp, \"malformed macro rhs\"),\n                 };\n \n+                let rhs_spans = rhs.iter().map(|t| t.span()).collect::<Vec<_>>();\n                 // rhs has holes ( `$id` and `$(...)` that need filled)\n-                let mut tts = transcribe(cx, Some(named_matches), rhs.clone());\n+                let mut tts = transcribe(cx, Some(named_matches), rhs);\n \n                 // Replace all the tokens for the corresponding positions in the macro, to maintain\n                 // proper positions in error reporting, while maintaining the macro_backtrace.\n-                if rhs.len() == tts.len() {\n-                    tts = tts.map_pos(|i, tt| {\n+                if rhs_spans.len() == tts.len() {\n+                    tts = tts.map_enumerated(|i, tt| {\n                         let mut tt = tt.clone();\n-                        let mut sp = rhs[i].span();\n+                        let mut sp = rhs_spans[i];\n                         sp.ctxt = tt.span().ctxt;\n                         tt.set_span(sp);\n                         tt"}, {"sha": "747bc7b438554f64f060b887a0b44a6cd88f3424", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6772661f37d6a6f88b95808fe957b8c6c15371f9/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6772661f37d6a6f88b95808fe957b8c6c15371f9/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=6772661f37d6a6f88b95808fe957b8c6c15371f9", "patch": "@@ -258,7 +258,7 @@ impl TokenStream {\n         }\n     }\n \n-    pub fn map_pos<F: FnMut(usize, TokenTree) -> TokenTree>(self, mut f: F) -> TokenStream {\n+    pub fn map_enumerated<F: FnMut(usize, TokenTree) -> TokenTree>(self, mut f: F) -> TokenStream {\n         let mut trees = self.into_trees();\n         let mut result = Vec::new();\n         let mut i = 0;"}, {"sha": "ad5f3845e2be7b0b6a6d2dcdcf4be137da6b81ef", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 10, "deletions": 21, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/6772661f37d6a6f88b95808fe957b8c6c15371f9/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6772661f37d6a6f88b95808fe957b8c6c15371f9/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=6772661f37d6a6f88b95808fe957b8c6c15371f9", "patch": "@@ -185,29 +185,18 @@ impl Span {\n         result\n     }\n \n-    pub fn empty_ctxt(&self) -> bool {\n-        self.ctxt == SyntaxContext::empty()\n-    }\n-\n     /// Return a `Span` that would enclose both `self` and `end`.\n     pub fn to(self, end: Span) -> Span {\n-        let lo = if self.lo < end.lo {\n-            self.lo\n-        } else {\n-            end.lo\n-        };\n-        let hi = if self.hi > end.hi {\n-            self.hi\n-        } else {\n-            end.hi\n-        };\n-        // FIXME(jseyfried): self.ctxt should always equal end.ctxt here (c.f. issue #23480)\n-        let ctxt = if self.ctxt == SyntaxContext::empty() {\n-            end.ctxt\n-        } else {\n-            self.ctxt\n-        };\n-        Span {lo, hi, ctxt}\n+        Span {\n+            lo: cmp::min(self.lo, end.lo),\n+            hi: cmp::max(self.hi, end.hi),\n+            // FIXME(jseyfried): self.ctxt should always equal end.ctxt here (c.f. issue #23480)\n+            ctxt: if self.ctxt == SyntaxContext::empty() {\n+                end.ctxt\n+            } else {\n+                self.ctxt\n+            },\n+        }\n     }\n \n     /// Return a `Span` between the end of `self` to the beginning of `end`."}]}