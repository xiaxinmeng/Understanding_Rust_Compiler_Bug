{"sha": "6b7f3e50df3b4235756df9354ea90cf821460a8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiN2YzZTUwZGYzYjQyMzU3NTZkZjkzNTRlYTkwY2Y4MjE0NjBhOGI=", "commit": {"author": {"name": "lcnr/Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-01-18T13:43:08Z"}, "committer": {"name": "lcnr/Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-01-18T13:43:08Z"}, "message": "improve type_name_of_val docs", "tree": {"sha": "ff0256b9082ad102387f6f76614617d5e36b9ab0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff0256b9082ad102387f6f76614617d5e36b9ab0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b7f3e50df3b4235756df9354ea90cf821460a8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b7f3e50df3b4235756df9354ea90cf821460a8b", "html_url": "https://github.com/rust-lang/rust/commit/6b7f3e50df3b4235756df9354ea90cf821460a8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b7f3e50df3b4235756df9354ea90cf821460a8b/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e28153e7a60f2ba62aa438e68cf086f07f0d3894", "url": "https://api.github.com/repos/rust-lang/rust/commits/e28153e7a60f2ba62aa438e68cf086f07f0d3894", "html_url": "https://github.com/rust-lang/rust/commit/e28153e7a60f2ba62aa438e68cf086f07f0d3894"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "c5dcdfed12ae0c55d94e1eb6ecce0d74bead1a29", "filename": "src/libcore/any.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6b7f3e50df3b4235756df9354ea90cf821460a8b/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b7f3e50df3b4235756df9354ea90cf821460a8b/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=6b7f3e50df3b4235756df9354ea90cf821460a8b", "patch": "@@ -476,11 +476,15 @@ pub const fn type_name<T: ?Sized>() -> &'static str {\n ///\n /// This is intended for diagnostic use. The exact contents and format of the\n /// string are not specified, other than being a best-effort description of the\n-/// type. For example, `type_name_of::<Option<String>>(None)` could return\n+/// type. For example, `type_name_of_val::<Option<String>>(None)` could return\n /// `\"Option<String>\"` or `\"std::option::Option<std::string::String>\"`, but not\n /// `\"foobar\"`. In addition, the output may change between versions of the\n /// compiler.\n ///\n+/// This function does not resolve trait objects,\n+/// meaning that `type_name_of_val(&7u32 as &dyn Debug)`\n+/// may return `\"dyn Debug\"`, but not `\"u32\"`.\n+///\n /// The type name should not be considered a unique identifier of a type;\n /// multiple types may share the same type name.\n ///"}]}