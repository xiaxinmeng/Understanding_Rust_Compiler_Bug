{"sha": "8ef25597e680fbcca91c8bde10e1a782a4bcbbfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlZjI1NTk3ZTY4MGZiY2NhOTFjOGJkZTEwZTFhNzgyYTRiY2JiZmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-11T03:46:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-11T03:46:46Z"}, "message": "auto merge of #12155 : sanxiyn/rust/binary, r=pnkfelix\n\nThe field is unused.", "tree": {"sha": "cb2f5f95070322ccf05d6beef3c1823fdee07a55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb2f5f95070322ccf05d6beef3c1823fdee07a55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd", "html_url": "https://github.com/rust-lang/rust/commit/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3870c15749cd4766627225f89f8e8cec7f5b817f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3870c15749cd4766627225f89f8e8cec7f5b817f", "html_url": "https://github.com/rust-lang/rust/commit/3870c15749cd4766627225f89f8e8cec7f5b817f"}, {"sha": "d1cbdc6b1bb91116911a246541a6e92495ec8f71", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1cbdc6b1bb91116911a246541a6e92495ec8f71", "html_url": "https://github.com/rust-lang/rust/commit/d1cbdc6b1bb91116911a246541a6e92495ec8f71"}], "stats": {"total": 15, "additions": 4, "deletions": 11}, "files": [{"sha": "a23348bb0ff5d8c34c2a8759604e04d9d9715b99", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=8ef25597e680fbcca91c8bde10e1a782a4bcbbfd", "patch": "@@ -728,8 +728,7 @@ pub fn host_triple() -> ~str {\n     (env!(\"CFG_COMPILER\")).to_owned()\n }\n \n-pub fn build_session_options(binary: ~str,\n-                             matches: &getopts::Matches)\n+pub fn build_session_options(matches: &getopts::Matches)\n                              -> @session::Options {\n     let crate_types = matches.opt_strs(\"crate-type\").flat_map(|s| {\n         s.split(',').map(|part| {\n@@ -864,7 +863,6 @@ pub fn build_session_options(binary: ~str,\n         maybe_sysroot: sysroot_opt,\n         target_triple: target,\n         cfg: cfg,\n-        binary: binary,\n         test: test,\n         parse_only: parse_only,\n         no_trans: no_trans,\n@@ -1159,7 +1157,7 @@ mod test {\n               Ok(m) => m,\n               Err(f) => fail!(\"test_switch_implies_cfg_test: {}\", f.to_err_msg())\n             };\n-        let sessopts = build_session_options(~\"rustc\", matches);\n+        let sessopts = build_session_options(matches);\n         let sess = build_session(sessopts, None);\n         let cfg = build_configuration(sess);\n         assert!((attr::contains_name(cfg, \"test\")));\n@@ -1177,7 +1175,7 @@ mod test {\n                        f.to_err_msg());\n               }\n             };\n-        let sessopts = build_session_options(~\"rustc\", matches);\n+        let sessopts = build_session_options(matches);\n         let sess = build_session(sessopts, None);\n         let cfg = build_configuration(sess);\n         let mut test_items = cfg.iter().filter(|m| m.name().equiv(&(\"test\")));"}, {"sha": "bea374fe1077f91062b07ce0bc7fbacb8f5c4761", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=8ef25597e680fbcca91c8bde10e1a782a4bcbbfd", "patch": "@@ -132,7 +132,6 @@ pub struct Options {\n     // will be added to the crate AST node.  This should not be used for\n     // anything except building the full crate config prior to parsing.\n     cfg: ast::CrateConfig,\n-    binary: ~str,\n     test: bool,\n     parse_only: bool,\n     no_trans: bool,\n@@ -334,7 +333,6 @@ pub fn basic_options() -> @Options {\n         maybe_sysroot: None,\n         target_triple: host_triple(),\n         cfg: ~[],\n-        binary: ~\"rustc\",\n         test: false,\n         parse_only: false,\n         no_trans: false,"}, {"sha": "9cd93df6fa3a13975b17332dac801ee59f3fe8fb", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=8ef25597e680fbcca91c8bde10e1a782a4bcbbfd", "patch": "@@ -274,7 +274,7 @@ pub fn run_compiler(args: &[~str]) {\n       _ => d::early_error(\"multiple input filenames provided\")\n     };\n \n-    let sopts = d::build_session_options(binary, matches);\n+    let sopts = d::build_session_options(matches);\n     let sess = d::build_session(sopts, input_file_path);\n     let odir = matches.opt_str(\"out-dir\").map(|o| Path::new(o));\n     let ofile = matches.opt_str(\"o\").map(|o| Path::new(o));"}, {"sha": "108286fdb5c786312ae96ab062c625b0b9b03757", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=8ef25597e680fbcca91c8bde10e1a782a4bcbbfd", "patch": "@@ -51,7 +51,6 @@ fn get_ast_and_resolve(cpath: &Path,\n     let input = FileInput(cpath.clone());\n \n     let sessopts = @driver::session::Options {\n-        binary: ~\"rustdoc\",\n         maybe_sysroot: Some(@os::self_exe_path().unwrap().dir_path()),\n         addl_lib_search_paths: @RefCell::new(libs),\n         crate_types: ~[driver::session::CrateTypeDylib],"}, {"sha": "5da5f62e10c20c25010b5ce552dcd5f3eacca4ea", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef25597e680fbcca91c8bde10e1a782a4bcbbfd/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=8ef25597e680fbcca91c8bde10e1a782a4bcbbfd", "patch": "@@ -41,7 +41,6 @@ pub fn run(input: &str, matches: &getopts::Matches) -> int {\n     let libs = @RefCell::new(libs.move_iter().collect());\n \n     let sessopts = @session::Options {\n-        binary: ~\"rustdoc\",\n         maybe_sysroot: Some(@os::self_exe_path().unwrap().dir_path()),\n         addl_lib_search_paths: libs,\n         crate_types: ~[session::CrateTypeDylib],\n@@ -101,7 +100,6 @@ fn runtest(test: &str, cratename: &str, libs: HashSet<Path>) {\n     let input = driver::StrInput(test);\n \n     let sessopts = @session::Options {\n-        binary: ~\"rustdoctest\",\n         maybe_sysroot: Some(@os::self_exe_path().unwrap().dir_path()),\n         addl_lib_search_paths: @RefCell::new(libs),\n         crate_types: ~[session::CrateTypeExecutable],"}]}