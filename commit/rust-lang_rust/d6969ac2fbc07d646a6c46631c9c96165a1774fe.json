{"sha": "d6969ac2fbc07d646a6c46631c9c96165a1774fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2OTY5YWMyZmJjMDdkNjQ2YTZjNDY2MzFjOWM5NjE2NWExNzc0ZmU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-12-18T23:42:42Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-12-18T23:42:42Z"}, "message": "Fix string for raw pointer deref suggestion", "tree": {"sha": "b90927f02785b93e80a4f1d6c06b9314ee136d78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b90927f02785b93e80a4f1d6c06b9314ee136d78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6969ac2fbc07d646a6c46631c9c96165a1774fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6969ac2fbc07d646a6c46631c9c96165a1774fe", "html_url": "https://github.com/rust-lang/rust/commit/d6969ac2fbc07d646a6c46631c9c96165a1774fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6969ac2fbc07d646a6c46631c9c96165a1774fe/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2402dca85716aa4b452352bec11ff949c5a1cbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2402dca85716aa4b452352bec11ff949c5a1cbb", "html_url": "https://github.com/rust-lang/rust/commit/c2402dca85716aa4b452352bec11ff949c5a1cbb"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "500bdbf6acd852d25004883d20822d281524878e", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d6969ac2fbc07d646a6c46631c9c96165a1774fe/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6969ac2fbc07d646a6c46631c9c96165a1774fe/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=d6969ac2fbc07d646a6c46631c9c96165a1774fe", "patch": "@@ -3386,11 +3386,13 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         }\n                     }\n                     ty::RawPtr(..) => {\n-                        let base = self.tcx.hir().node_to_pretty_string(base.id);\n+                        let base = self.tcx.sess.source_map()\n+                            .span_to_snippet(base.span)\n+                            .unwrap_or_else(|_| self.tcx.hir().node_to_pretty_string(base.id));\n                         let msg = format!(\"`{}` is a raw pointer; try dereferencing it\", base);\n                         let suggestion = format!(\"(*{}).{}\", base, field);\n                         err.span_suggestion_with_applicability(\n-                            field.span,\n+                            expr.span,\n                             &msg,\n                             suggestion,\n                             Applicability::MaybeIncorrect,"}, {"sha": "eb5b568b347387d2d7903038d98d02fb2a751bb7", "filename": "src/test/ui/issues/issue-11004.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6969ac2fbc07d646a6c46631c9c96165a1774fe/src%2Ftest%2Fui%2Fissues%2Fissue-11004.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d6969ac2fbc07d646a6c46631c9c96165a1774fe/src%2Ftest%2Fui%2Fissues%2Fissue-11004.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11004.stderr?ref=d6969ac2fbc07d646a6c46631c9c96165a1774fe", "patch": "@@ -2,13 +2,17 @@ error[E0609]: no field `x` on type `*mut A`\n   --> $DIR/issue-11004.rs:17:21\n    |\n LL |     let x : i32 = n.x; //~ no field `x` on type `*mut A`\n-   |                     ^ help: `n` is a raw pointer; try dereferencing it: `(*n).x`\n+   |                   --^\n+   |                   |\n+   |                   help: `n` is a raw pointer; try dereferencing it: `(*n).x`\n \n error[E0609]: no field `y` on type `*mut A`\n   --> $DIR/issue-11004.rs:18:21\n    |\n LL |     let y : f64 = n.y; //~ no field `y` on type `*mut A`\n-   |                     ^ help: `n` is a raw pointer; try dereferencing it: `(*n).y`\n+   |                   --^\n+   |                   |\n+   |                   help: `n` is a raw pointer; try dereferencing it: `(*n).y`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "bcbb51ccd6b655a7c834119a14a178fe508edfbb", "filename": "src/test/ui/parenthesised-deref-suggestion.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6969ac2fbc07d646a6c46631c9c96165a1774fe/src%2Ftest%2Fui%2Fparenthesised-deref-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6969ac2fbc07d646a6c46631c9c96165a1774fe/src%2Ftest%2Fui%2Fparenthesised-deref-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparenthesised-deref-suggestion.rs?ref=d6969ac2fbc07d646a6c46631c9c96165a1774fe", "patch": "@@ -0,0 +1,8 @@\n+struct Session {\n+    opts: u8,\n+}\n+\n+fn main() {\n+    let sess: &Session = &Session { opts: 0 };\n+    (sess as *const Session).opts; //~ ERROR no field `opts` on type `*const Session`\n+}"}, {"sha": "2e122f38f38552597cbdfb1d70db9984e6aab8be", "filename": "src/test/ui/parenthesised-deref-suggestion.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d6969ac2fbc07d646a6c46631c9c96165a1774fe/src%2Ftest%2Fui%2Fparenthesised-deref-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d6969ac2fbc07d646a6c46631c9c96165a1774fe/src%2Ftest%2Fui%2Fparenthesised-deref-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparenthesised-deref-suggestion.stderr?ref=d6969ac2fbc07d646a6c46631c9c96165a1774fe", "patch": "@@ -0,0 +1,12 @@\n+error[E0609]: no field `opts` on type `*const Session`\n+  --> $DIR/parenthesised-deref-suggestion.rs:7:30\n+   |\n+LL |     (sess as *const Session).opts; //~ ERROR no field `opts` on type `*const Session`\n+   |                              ^^^^\n+help: `(sess as *const Session)` is a raw pointer; try dereferencing it\n+   |\n+LL |     (*(sess as *const Session)).opts; //~ ERROR no field `opts` on type `*const Session`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0609`."}, {"sha": "7525f6705156723a318b45efa69ea2a77ea32338", "filename": "src/test/ui/unsafe/unsafe-fn-autoderef.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d6969ac2fbc07d646a6c46631c9c96165a1774fe/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-autoderef.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d6969ac2fbc07d646a6c46631c9c96165a1774fe/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-autoderef.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-autoderef.stderr?ref=d6969ac2fbc07d646a6c46631c9c96165a1774fe", "patch": "@@ -2,7 +2,9 @@ error[E0609]: no field `f` on type `*const Rec`\n   --> $DIR/unsafe-fn-autoderef.rs:29:14\n    |\n LL |     return p.f; //~ ERROR no field `f` on type `*const Rec`\n-   |              ^ help: `p` is a raw pointer; try dereferencing it: `(*p).f`\n+   |            --^\n+   |            |\n+   |            help: `p` is a raw pointer; try dereferencing it: `(*p).f`\n \n error: aborting due to previous error\n "}]}