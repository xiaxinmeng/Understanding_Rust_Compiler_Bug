{"sha": "7bcf40a13d90952d9a59ed547832155439e3bcf7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiY2Y0MGExM2Q5MDk1MmQ5YTU5ZWQ1NDc4MzIxNTU0MzllM2JjZjc=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-09-04T21:30:06Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-09-04T21:30:06Z"}, "message": "Fix fallout from rustup", "tree": {"sha": "9b7c968a31cb6c968aa36916aa5d7de35ae3f650", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b7c968a31cb6c968aa36916aa5d7de35ae3f650"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bcf40a13d90952d9a59ed547832155439e3bcf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bcf40a13d90952d9a59ed547832155439e3bcf7", "html_url": "https://github.com/rust-lang/rust/commit/7bcf40a13d90952d9a59ed547832155439e3bcf7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bcf40a13d90952d9a59ed547832155439e3bcf7/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23646e658326503720742c556d73230a4e96f0bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/23646e658326503720742c556d73230a4e96f0bf", "html_url": "https://github.com/rust-lang/rust/commit/23646e658326503720742c556d73230a4e96f0bf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3048436d9a7b5f30d066fc7374fd2db090d9e2db", "filename": "clippy_lints/src/default_trait_access.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bcf40a13d90952d9a59ed547832155439e3bcf7/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bcf40a13d90952d9a59ed547832155439e3bcf7/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_trait_access.rs?ref=7bcf40a13d90952d9a59ed547832155439e3bcf7", "patch": "@@ -42,7 +42,7 @@ impl<'tcx> LateLintPass<'tcx> for DefaultTraitAccess {\n             if let QPath::Resolved(None, _path) = qpath;\n             then {\n                 let expr_ty = cx.typeck_results().expr_ty(expr);\n-                if let ty::Adt(def, ..) = expr_ty.kind {\n+                if let ty::Adt(def, ..) = expr_ty.kind() {\n                     // TODO: Work out a way to put \"whatever the imported way of referencing\n                     // this type in this file\" rather than a fully-qualified type.\n                     let replacement = format!(\"{}::default()\", cx.tcx.def_path_str(def.did));"}]}