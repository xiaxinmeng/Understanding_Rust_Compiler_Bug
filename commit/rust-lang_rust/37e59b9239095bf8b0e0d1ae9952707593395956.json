{"sha": "37e59b9239095bf8b0e0d1ae9952707593395956", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3ZTU5YjkyMzkwOTViZjhiMGUwZDFhZTk5NTI3MDc1OTMzOTU5NTY=", "commit": {"author": {"name": "JP Sugarbroad", "email": "jpsugar@google.com", "date": "2016-04-14T20:25:14Z"}, "committer": {"name": "JP Sugarbroad", "email": "jpsugar@google.com", "date": "2016-04-14T20:25:45Z"}, "message": "Accommodate the case where dup lang items are entirely external.\n\nFixes #32961", "tree": {"sha": "e7e0eddaffd3419eb9f24ff9ed3d5fc273a42ceb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7e0eddaffd3419eb9f24ff9ed3d5fc273a42ceb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37e59b9239095bf8b0e0d1ae9952707593395956", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37e59b9239095bf8b0e0d1ae9952707593395956", "html_url": "https://github.com/rust-lang/rust/commit/37e59b9239095bf8b0e0d1ae9952707593395956", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37e59b9239095bf8b0e0d1ae9952707593395956/comments", "author": {"login": "taralx", "id": 1036808, "node_id": "MDQ6VXNlcjEwMzY4MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1036808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taralx", "html_url": "https://github.com/taralx", "followers_url": "https://api.github.com/users/taralx/followers", "following_url": "https://api.github.com/users/taralx/following{/other_user}", "gists_url": "https://api.github.com/users/taralx/gists{/gist_id}", "starred_url": "https://api.github.com/users/taralx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taralx/subscriptions", "organizations_url": "https://api.github.com/users/taralx/orgs", "repos_url": "https://api.github.com/users/taralx/repos", "events_url": "https://api.github.com/users/taralx/events{/privacy}", "received_events_url": "https://api.github.com/users/taralx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taralx", "id": 1036808, "node_id": "MDQ6VXNlcjEwMzY4MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1036808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taralx", "html_url": "https://github.com/taralx", "followers_url": "https://api.github.com/users/taralx/followers", "following_url": "https://api.github.com/users/taralx/following{/other_user}", "gists_url": "https://api.github.com/users/taralx/gists{/gist_id}", "starred_url": "https://api.github.com/users/taralx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taralx/subscriptions", "organizations_url": "https://api.github.com/users/taralx/orgs", "repos_url": "https://api.github.com/users/taralx/repos", "events_url": "https://api.github.com/users/taralx/events{/privacy}", "received_events_url": "https://api.github.com/users/taralx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "073a09fd63c9b4ec3bb4709986a2517ca4c3cdf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/073a09fd63c9b4ec3bb4709986a2517ca4c3cdf1", "html_url": "https://github.com/rust-lang/rust/commit/073a09fd63c9b4ec3bb4709986a2517ca4c3cdf1"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "83929c17ca3e4a783db68711e8871e505b88a30c", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/37e59b9239095bf8b0e0d1ae9952707593395956/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37e59b9239095bf8b0e0d1ae9952707593395956/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=37e59b9239095bf8b0e0d1ae9952707593395956", "patch": "@@ -189,13 +189,19 @@ impl<'a, 'tcx> LanguageItemCollector<'a, 'tcx> {\n         match self.items.items[item_index] {\n             Some(original_def_id) if original_def_id != item_def_id => {\n                 let cstore = &self.session.cstore;\n-                let span = self.ast_map.span_if_local(item_def_id)\n-                                       .expect(\"we should have found local duplicate earlier\");\n-                let mut err = struct_span_err!(self.session,\n-                                               span,\n-                                               E0152,\n-                                               \"duplicate lang item found: `{}`.\",\n-                                               LanguageItems::item_name(item_index));\n+                let name = LanguageItems::item_name(item_index);\n+                let mut err = match self.ast_map.span_if_local(item_def_id) {\n+                    Some(span) => struct_span_err!(\n+                        self.session,\n+                        span,\n+                        E0152,\n+                        \"duplicate lang item found: `{}`.\",\n+                        name),\n+                    None => self.session.struct_err(&format!(\n+                            \"duplicate lang item in crate `{}`: `{}`.\",\n+                            cstore.crate_name(item_def_id.krate),\n+                            name)),\n+                };\n                 if let Some(span) = self.ast_map.span_if_local(original_def_id) {\n                     span_note!(&mut err, span,\n                                \"first defined here.\");"}]}