{"sha": "89d190f090c06cca830831158fc052f902ddc1df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ZDE5MGYwOTBjMDZjY2E4MzA4MzExNThmYzA1MmY5MDJkZGMxZGY=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-07-10T03:15:11Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-07-10T12:54:49Z"}, "message": "Add impl_constness query", "tree": {"sha": "91caeb78c6adeb4e27c39dffd8cbc5c5ec3af959", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91caeb78c6adeb4e27c39dffd8cbc5c5ec3af959"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89d190f090c06cca830831158fc052f902ddc1df", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEjbeLZzPb62/vY3smZSV3NIU3bZIFAmDpmJkACgkQZSV3NIU3\nbZLjLA/8CsAo0BzGHxDPeOrnybynz5nwIaz0Uoh2gR5H5uJrSUUvC1nvKFnmZf8A\nkX+KDshqpra/4aX+JMkVdPg5grJal2Vp5NGfrLATfMFOAVvOcQqv0Z+u6sb9bj6s\nN+h7oramizPV/Py1ZW3a5TbZTMEICMdGT54vMO3AxYxIkieQC8EC6NpH4yza/KZd\n45dUf9pQfBxMHU7SG00SYdYsPaoBjsh/Cgyd3tl02SqiNkQ6GcR9I0XFIaohQLlJ\nXb4cWa7rf0RJlpJ70L02GL9kLfxWevzQ619iGKtt1vzWB7SCKcBmsx6F4WnBnucH\n6iwGC+yIrBb/JOB8TuSyBDaBncJ2++usGduH5RoNAjbmaxL7ViwiyGPpZV+2H7dz\n+KFMSjSmEHwipLvb6tHoZ/V1QN/yl+Ax++uIPFecHr+btzeYl1aB68kUV/A6cyd1\nQuXBBcY7uQ0hyE9YAfMnOPSDC15xAiQFgC6CtxvrhQ9vC7lq74jLyzkGQP7znDBd\n8SPckGk/xbYXw3TwF5NrWGduRE/ncbbxJBZHqnHVwTRiS4kvmHAIYMbcqBaO/G7X\nDlj4OgJgPHq324qGJmICfBvkuaeaKuEgD228rqTR5UpDFNrVJUKzy8RDL8BgV9cS\n7rSg4ljks9teiiQ04v6LcIa3gmZkMS7jV5e7BQcPrCvhL0xhPEM=\n=5SZt\n-----END PGP SIGNATURE-----", "payload": "tree 91caeb78c6adeb4e27c39dffd8cbc5c5ec3af959\nparent 032cbe4ccec5bb6565a5c7656971aa83f56774a9\nauthor Deadbeef <ent3rm4n@gmail.com> 1625886911 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1625921689 +0800\n\nAdd impl_constness query\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89d190f090c06cca830831158fc052f902ddc1df", "html_url": "https://github.com/rust-lang/rust/commit/89d190f090c06cca830831158fc052f902ddc1df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89d190f090c06cca830831158fc052f902ddc1df/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "032cbe4ccec5bb6565a5c7656971aa83f56774a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/032cbe4ccec5bb6565a5c7656971aa83f56774a9", "html_url": "https://github.com/rust-lang/rust/commit/032cbe4ccec5bb6565a5c7656971aa83f56774a9"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "344c5e8ee61878a0c3d0885c6b7b05de465c07c2", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/89d190f090c06cca830831158fc052f902ddc1df/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d190f090c06cca830831158fc052f902ddc1df/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=89d190f090c06cca830831158fc052f902ddc1df", "patch": "@@ -959,6 +959,10 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n         self.get_impl_data(id).defaultness\n     }\n \n+    fn get_impl_constness(&self, id: DefIndex) -> hir::Constness {\n+        self.get_impl_data(id).constness\n+    }\n+\n     fn get_coerce_unsized_info(&self, id: DefIndex) -> Option<ty::adjustment::CoerceUnsizedInfo> {\n         self.get_impl_data(id).coerce_unsized_info\n     }"}, {"sha": "c0e85d82f7e2757bd379ad093161386393307893", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89d190f090c06cca830831158fc052f902ddc1df/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d190f090c06cca830831158fc052f902ddc1df/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=89d190f090c06cca830831158fc052f902ddc1df", "patch": "@@ -168,6 +168,7 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n     is_no_builtins => { cdata.root.no_builtins }\n     symbol_mangling_version => { cdata.root.symbol_mangling_version }\n     impl_defaultness => { cdata.get_impl_defaultness(def_id.index) }\n+    impl_constness => { cdata.get_impl_constness(def_id.index) }\n     reachable_non_generics => {\n         let reachable_non_generics = tcx\n             .exported_symbols(cdata.cnum)"}, {"sha": "5b10d53159ebd0a4f110c1b7b00fa1365d21019a", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/89d190f090c06cca830831158fc052f902ddc1df/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d190f090c06cca830831158fc052f902ddc1df/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=89d190f090c06cca830831158fc052f902ddc1df", "patch": "@@ -1412,7 +1412,7 @@ impl EncodeContext<'a, 'tcx> {\n                     adt_def.repr,\n                 )\n             }\n-            hir::ItemKind::Impl(hir::Impl { defaultness, .. }) => {\n+            hir::ItemKind::Impl(hir::Impl { defaultness, constness, .. }) => {\n                 let trait_ref = self.tcx.impl_trait_ref(def_id);\n                 let polarity = self.tcx.impl_polarity(def_id);\n                 let parent = if let Some(trait_ref) = trait_ref {\n@@ -1437,8 +1437,13 @@ impl EncodeContext<'a, 'tcx> {\n                     }\n                 });\n \n-                let data =\n-                    ImplData { polarity, defaultness, parent_impl: parent, coerce_unsized_info };\n+                let data = ImplData {\n+                    polarity,\n+                    defaultness,\n+                    constness,\n+                    parent_impl: parent,\n+                    coerce_unsized_info,\n+                };\n \n                 EntryKind::Impl(self.lazy(data))\n             }"}, {"sha": "0d67ff32a3f3e4bdf44340b17d4d6b4aa3710634", "filename": "compiler/rustc_metadata/src/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89d190f090c06cca830831158fc052f902ddc1df/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d190f090c06cca830831158fc052f902ddc1df/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs?ref=89d190f090c06cca830831158fc052f902ddc1df", "patch": "@@ -390,6 +390,7 @@ struct TraitData {\n #[derive(TyEncodable, TyDecodable)]\n struct ImplData {\n     polarity: ty::ImplPolarity,\n+    constness: hir::Constness,\n     defaultness: hir::Defaultness,\n     parent_impl: Option<DefId>,\n "}, {"sha": "1a1bb37f70a59cdb8db88959e99a0fe21496ab7b", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/89d190f090c06cca830831158fc052f902ddc1df/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d190f090c06cca830831158fc052f902ddc1df/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=89d190f090c06cca830831158fc052f902ddc1df", "patch": "@@ -1136,6 +1136,10 @@ rustc_queries! {\n         desc { |tcx| \"looking up whether `{}` is a default impl\", tcx.def_path_str(def_id) }\n     }\n \n+    query impl_constness(def_id: DefId) -> hir::Constness {\n+        desc { |tcx| \"looking up whether `{}` is a default impl\", tcx.def_path_str(def_id) }\n+    }\n+\n     query check_item_well_formed(key: LocalDefId) -> () {\n         desc { |tcx| \"checking that `{}` is well-formed\", tcx.def_path_str(key.to_def_id()) }\n     }"}, {"sha": "b0d644ae028ce3711036c58254eea6329fef759b", "filename": "compiler/rustc_ty_utils/src/ty.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/89d190f090c06cca830831158fc052f902ddc1df/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d190f090c06cca830831158fc052f902ddc1df/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs?ref=89d190f090c06cca830831158fc052f902ddc1df", "patch": "@@ -168,6 +168,16 @@ fn impl_defaultness(tcx: TyCtxt<'_>, def_id: DefId) -> hir::Defaultness {\n     }\n }\n \n+fn impl_constness(tcx: TyCtxt<'_>, def_id: DefId) -> hir::Constness {\n+    let hir_id = tcx.hir().local_def_id_to_hir_id(def_id.expect_local());\n+    let item = tcx.hir().expect_item(hir_id);\n+    if let hir::ItemKind::Impl(impl_) = &item.kind {\n+        impl_.constness\n+    } else {\n+        bug!(\"`impl_constness` called on {:?}\", item);\n+    }\n+}\n+\n /// Calculates the `Sized` constraint.\n ///\n /// In fact, there are only a few options for the types in the constraint:\n@@ -535,6 +545,7 @@ pub fn provide(providers: &mut ty::query::Providers) {\n         instance_def_size_estimate,\n         issue33140_self_ty,\n         impl_defaultness,\n+        impl_constness,\n         conservative_is_privately_uninhabited: conservative_is_privately_uninhabited_raw,\n         ..*providers\n     };"}]}