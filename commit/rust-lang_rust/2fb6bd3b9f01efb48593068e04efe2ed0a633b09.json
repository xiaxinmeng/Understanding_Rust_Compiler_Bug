{"sha": "2fb6bd3b9f01efb48593068e04efe2ed0a633b09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmYjZiZDNiOWYwMWVmYjQ4NTkzMDY4ZTA0ZWZlMmVkMGE2MzNiMDk=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-01-31T04:13:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-31T04:13:05Z"}, "message": "Merge pull request #2400 from csmoe/support_immovable_generators\n\nSupport immovable generators", "tree": {"sha": "1157b01033ea6277e3ff907bac0e987d0fb57406", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1157b01033ea6277e3ff907bac0e987d0fb57406"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fb6bd3b9f01efb48593068e04efe2ed0a633b09", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJacUJRCRBK7hj4Ov3rIwAAdHIIALIWQehGf57NPns02MSwnAmB\nW7m0DnVrGQ0ayd+2vpj6PXH7sFh1Nek3vQxiIEnTLnuOzIFGUKnnfsL4To0dNC1h\nfMd3tOdOzUnkY8lX3dX84RoW1m5DVdBnsJ5C2XdX3XzhvEyyrq3FAdr6+O3pB6hy\nK875m6PFn1AQjJTD0Gvmd5X3P7/V8BW2Szfm3h+gZ419N5Q6NqKLR1dI8qW9UQgp\nVbshqh0UAjvxY/SuzY+JsNNegzyjatNuGPK+dBJ6mEovavIQri867fOFV47sKPd3\ncTD0ik8cgxxX8goZORjVwtUYyHhDJ9goTsKyrC3gQlGYjZ69b/cCe2MwFWY6Y28=\n=LZQn\n-----END PGP SIGNATURE-----\n", "payload": "tree 1157b01033ea6277e3ff907bac0e987d0fb57406\nparent ba3dec23792c1e5107df845c2e3894fe9e64e8f7\nparent 28bb16a5a0be862a20606c7854dacd00e731957b\nauthor Seiichi Uchida <seuchida@gmail.com> 1517371985 +0900\ncommitter GitHub <noreply@github.com> 1517371985 +0900\n\nMerge pull request #2400 from csmoe/support_immovable_generators\n\nSupport immovable generators"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fb6bd3b9f01efb48593068e04efe2ed0a633b09", "html_url": "https://github.com/rust-lang/rust/commit/2fb6bd3b9f01efb48593068e04efe2ed0a633b09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba3dec23792c1e5107df845c2e3894fe9e64e8f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba3dec23792c1e5107df845c2e3894fe9e64e8f7", "html_url": "https://github.com/rust-lang/rust/commit/ba3dec23792c1e5107df845c2e3894fe9e64e8f7"}, {"sha": "28bb16a5a0be862a20606c7854dacd00e731957b", "url": "https://api.github.com/repos/rust-lang/rust/commits/28bb16a5a0be862a20606c7854dacd00e731957b", "html_url": "https://github.com/rust-lang/rust/commit/28bb16a5a0be862a20606c7854dacd00e731957b"}], "stats": {"total": 151, "additions": 93, "deletions": 58}, "files": [{"sha": "6d7c8d5371f413f4c813570c4f02115dc6ffb510", "filename": "Cargo.lock", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=2fb6bd3b9f01efb48593068e04efe2ed0a633b09", "patch": "@@ -106,7 +106,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"getopts\"\n-version = \"0.2.15\"\n+version = \"0.2.17\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -159,7 +159,7 @@ dependencies = [\n \n [[package]]\n name = \"num-traits\"\n-version = \"0.1.41\"\n+version = \"0.1.42\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -223,7 +223,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"rustc-ap-rustc_cratesio_shim\"\n-version = \"12.0.0\"\n+version = \"26.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -232,57 +232,57 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_data_structures\"\n-version = \"12.0.0\"\n+version = \"26.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot_core 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"stable_deref_trait 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_errors\"\n-version = \"12.0.0\"\n+version = \"26.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rustc-ap-rustc_data_structures 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax_pos 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax_pos 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-serialize\"\n-version = \"12.0.0\"\n+version = \"26.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"rustc-ap-syntax\"\n-version = \"12.0.0\"\n+version = \"26.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_cratesio_shim 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_errors 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax_pos 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_cratesio_shim 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_errors 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax_pos 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-syntax_pos\"\n-version = \"12.0.0\"\n+version = \"26.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rustc-ap-rustc_data_structures 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -300,14 +300,14 @@ dependencies = [\n  \"derive-new 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"diff 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"env_logger 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"getopts 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"getopts 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.36 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_errors 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_errors 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -362,7 +362,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"dtoa 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itoa 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"num-traits 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"num-traits 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.27 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -497,28 +497,28 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ff511d5dc435d703f4971bc399647c9bc38e20cb41452e3b9feb4765419ed3f3\"\n \"checksum fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82\"\n \"checksum fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n-\"checksum getopts 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"65922871abd2f101a2eb0eaebadc66668e54a87ad9c3dd82520b5f86ede5eff9\"\n+\"checksum getopts 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b900c08c1939860ce8b54dc6a89e26e00c04c380fd0e09796799bd7f12861e05\"\n \"checksum itoa 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8324a32baf01e2ae060e9de58ed0bc2320c9a2833491ee36cd3b4c414de4db8c\"\n \"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n \"checksum lazy_static 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c8f31047daa365f19be14b47c29df4f7c3b581832407daabe6ae77397619237d\"\n \"checksum libc 0.2.36 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1e5d97d6708edaa407429faa671b942dc0f2727222fb6b6539bf1db936e4b121\"\n \"checksum log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e19e8d5c34a3e0e2223db8e060f9e8264aeeb5c5fc64a4ee9965c062211c024b\"\n \"checksum log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"89f010e843f2b1a31dbd316b3b8d443758bc634bed37aabade59c686d644e0a2\"\n \"checksum memchr 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"796fba70e76612589ed2ce7f45282f5af869e0fdd7cc6199fa1aa1f1d591ba9d\"\n-\"checksum num-traits 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cacfcab5eb48250ee7d0c7896b51a2c5eec99c1feea5f32025635f5ae4b00070\"\n+\"checksum num-traits 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9936036cc70fe4a8b2d338ab665900323290efb03983c86cbe235ae800ad8017\"\n \"checksum owning_ref 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cdf84f41639e037b484f93433aa3897863b561ed65c6e59c7073d7c561710f37\"\n \"checksum parking_lot 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3e7f7c9857874e54afeb950eebeae662b1e51a2493666d2ea4c0a5d91dcf0412\"\n \"checksum parking_lot_core 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9f35048d735bb93dd115a0030498785971aab3234d311fbe273d020084d26bd8\"\n \"checksum quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7a6e920b65c65f10b2ae65c831a81a073a89edd28c7cce89475bff467ab4167a\"\n \"checksum rand 0.3.20 (registry+https://github.com/rust-lang/crates.io-index)\" = \"512870020642bb8c221bf68baa1b2573da814f6ccfe5c9699b1c303047abe9b1\"\n \"checksum regex 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"744554e01ccbd98fff8c457c3b092cd67af62a555a43bfe97ae8a0451f7799fa\"\n \"checksum regex-syntax 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8e931c58b93d86f080c734bfd2bce7dd0079ae2331235818133c8be7f422e20e\"\n-\"checksum rustc-ap-rustc_cratesio_shim 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f1a51c10af5abd5d698b7e3487e869e6d15f6feb04cbedb5c792e2824f9d845e\"\n-\"checksum rustc-ap-rustc_data_structures 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1aa227490501072780d57f74b1164d361833ff8e172f817da0da2cdf2e4280cc\"\n-\"checksum rustc-ap-rustc_errors 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"21ff6c6e13ac4fc04b7d4d398828b024c4b6577045cb3175b33d35fea35ff6d0\"\n-\"checksum rustc-ap-serialize 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6b4e7f51e298675c2bf830f7265621a8936fb09e63b825b58144cbaac969e604\"\n-\"checksum rustc-ap-syntax 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8bf5639869ba2f7fa581939cd217cb71a85506b82ad0ea520614fb0dceb2386c\"\n-\"checksum rustc-ap-syntax_pos 12.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1c020cdb7379e1c733ae0a311ae47c748337ba584d2dd7b7f53baaae78de6f8b\"\n+\"checksum rustc-ap-rustc_cratesio_shim 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6c883f9a3e52bfc3bd463ab7747aa04ebec864ed04f0ee42327b308910e6e58a\"\n+\"checksum rustc-ap-rustc_data_structures 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ee5b8955de8d85b55d91e38e7f45ec0b92a6ebdede45a782e8e6d3341eb4ac98\"\n+\"checksum rustc-ap-rustc_errors 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f36946ec337c31859627baadf0992a3bfd87b0ff568978cd06cc17a4113f5243\"\n+\"checksum rustc-ap-serialize 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b2aaabc8226d2e06ac2d22c63a24a0fb36b03f53523979094a4dcdb78dc09d05\"\n+\"checksum rustc-ap-syntax 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"23f04ea1fc07186bea53269436162d0eb7acadb9ea56d52de3b5723c871296c6\"\n+\"checksum rustc-ap-syntax_pos 26.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9e43797465d858dfd39cd27cc484085a832f09dc10c3df617c0b7927d6e2a0d1\"\n \"checksum rustc-demangle 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aee45432acc62f7b9a108cc054142dac51f979e69e71ddce7d6fc7adf29e817e\"\n \"checksum semver 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bee2bc909ab2d8d60dab26e8cad85b25d795b14603a0dcb627b78b9d30b6454b\"\n \"checksum semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\""}, {"sha": "a863a3cc36e1d801614e3d941e63114c84166536", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=2fb6bd3b9f01efb48593068e04efe2ed0a633b09", "patch": "@@ -44,8 +44,8 @@ env_logger = \"0.4\"\n getopts = \"0.2\"\n derive-new = \"0.5\"\n cargo_metadata = \"0.4\"\n-rustc-ap-syntax = \"12.0.0\"\n-rustc-ap-rustc_errors = \"12.0.0\"\n+rustc-ap-syntax = \"26.0.0\"\n+rustc-ap-rustc_errors = \"26.0.0\"\n \n [dev-dependencies]\n lazy_static = \"1.0.0\""}, {"sha": "1d8641339f033a814b5e6a1f36db9ccc5b37b725", "filename": "src/closures.rs", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=2fb6bd3b9f01efb48593068e04efe2ed0a633b09", "patch": "@@ -33,6 +33,7 @@ use utils::{last_line_width, left_most_sub_expr, stmt_expr};\n \n pub fn rewrite_closure(\n     capture: ast::CaptureBy,\n+    movability: ast::Movability,\n     fn_decl: &ast::FnDecl,\n     body: &ast::Expr,\n     span: Span,\n@@ -42,7 +43,7 @@ pub fn rewrite_closure(\n     debug!(\"rewrite_closure {:?}\", body);\n \n     let (prefix, extra_offset) =\n-        rewrite_closure_fn_decl(capture, fn_decl, body, span, context, shape)?;\n+        rewrite_closure_fn_decl(capture, movability, fn_decl, body, span, context, shape)?;\n     // 1 = space between `|...|` and body.\n     let body_shape = shape.offset_left(extra_offset)?;\n \n@@ -194,6 +195,7 @@ fn rewrite_closure_block(\n // Return type is (prefix, extra_offset)\n fn rewrite_closure_fn_decl(\n     capture: ast::CaptureBy,\n+    movability: ast::Movability,\n     fn_decl: &ast::FnDecl,\n     body: &ast::Expr,\n     span: Span,\n@@ -205,9 +207,17 @@ fn rewrite_closure_fn_decl(\n     } else {\n         \"\"\n     };\n+\n+    let immovable = if movability == ast::Movability::Static {\n+        \"static \"\n+    } else {\n+        \"\"\n+    };\n     // 4 = \"|| {\".len(), which is overconservative when the closure consists of\n     // a single expression.\n-    let nested_shape = shape.shrink_left(mover.len())?.sub_width(4)?;\n+    let nested_shape = shape\n+        .shrink_left(mover.len() + immovable.len())?\n+        .sub_width(4)?;\n \n     // 1 = |\n     let argument_offset = nested_shape.indent + 1;\n@@ -254,7 +264,7 @@ fn rewrite_closure_fn_decl(\n         config: context.config,\n     };\n     let list_str = write_list(&item_vec, &fmt)?;\n-    let mut prefix = format!(\"{}|{}|\", mover, list_str);\n+    let mut prefix = format!(\"{}{}|{}|\", immovable, mover, list_str);\n \n     if !ret_str.is_empty() {\n         if prefix.contains('\\n') {\n@@ -278,7 +288,7 @@ pub fn rewrite_last_closure(\n     expr: &ast::Expr,\n     shape: Shape,\n ) -> Option<String> {\n-    if let ast::ExprKind::Closure(capture, ref fn_decl, ref body, _) = expr.node {\n+    if let ast::ExprKind::Closure(capture, movability, ref fn_decl, ref body, _) = expr.node {\n         let body = match body.node {\n             ast::ExprKind::Block(ref block)\n                 if !is_unsafe_block(block) && is_simple_block(block, context.codemap) =>\n@@ -287,8 +297,15 @@ pub fn rewrite_last_closure(\n             }\n             _ => body,\n         };\n-        let (prefix, extra_offset) =\n-            rewrite_closure_fn_decl(capture, fn_decl, body, expr.span, context, shape)?;\n+        let (prefix, extra_offset) = rewrite_closure_fn_decl(\n+            capture,\n+            movability,\n+            fn_decl,\n+            body,\n+            expr.span,\n+            context,\n+            shape,\n+        )?;\n         // If the closure goes multi line before its body, do not overflow the closure.\n         if prefix.contains('\\n') {\n             return None;"}, {"sha": "e5c29e1c5106134bcef65f3c4327b2abb21c49e4", "filename": "src/expr.rs", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=2fb6bd3b9f01efb48593068e04efe2ed0a633b09", "patch": "@@ -135,16 +135,16 @@ pub fn format_expr(\n         ast::ExprKind::AssignOp(ref op, ref lhs, ref rhs) => {\n             rewrite_assignment(context, lhs, rhs, Some(op), shape)\n         }\n-        ast::ExprKind::Continue(ref opt_ident) => {\n-            let id_str = match *opt_ident {\n-                Some(ident) => format!(\" {}\", ident.node),\n+        ast::ExprKind::Continue(ref opt_label) => {\n+            let id_str = match *opt_label {\n+                Some(label) => format!(\" {}\", label.ident),\n                 None => String::new(),\n             };\n             Some(format!(\"continue{}\", id_str))\n         }\n-        ast::ExprKind::Break(ref opt_ident, ref opt_expr) => {\n-            let id_str = match *opt_ident {\n-                Some(ident) => format!(\" {}\", ident.node),\n+        ast::ExprKind::Break(ref opt_label, ref opt_expr) => {\n+            let id_str = match *opt_label {\n+                Some(label) => format!(\" {}\", label.ident),\n                 None => String::new(),\n             };\n \n@@ -159,8 +159,16 @@ pub fn format_expr(\n         } else {\n             Some(\"yield\".to_string())\n         },\n-        ast::ExprKind::Closure(capture, ref fn_decl, ref body, _) => {\n-            closures::rewrite_closure(capture, fn_decl, body, expr.span, context, shape)\n+        ast::ExprKind::Closure(capture, movability, ref fn_decl, ref body, _) => {\n+            closures::rewrite_closure(\n+                capture,\n+                movability,\n+                fn_decl,\n+                body,\n+                expr.span,\n+                context,\n+                shape,\n+            )\n         }\n         ast::ExprKind::Try(..)\n         | ast::ExprKind::Field(..)\n@@ -718,7 +726,7 @@ struct ControlFlow<'a> {\n     cond: Option<&'a ast::Expr>,\n     block: &'a ast::Block,\n     else_block: Option<&'a ast::Expr>,\n-    label: Option<ast::SpannedIdent>,\n+    label: Option<ast::Label>,\n     pat: Option<&'a ast::Pat>,\n     keyword: &'a str,\n     matcher: &'a str,\n@@ -795,11 +803,7 @@ impl<'a> ControlFlow<'a> {\n         }\n     }\n \n-    fn new_loop(\n-        block: &'a ast::Block,\n-        label: Option<ast::SpannedIdent>,\n-        span: Span,\n-    ) -> ControlFlow<'a> {\n+    fn new_loop(block: &'a ast::Block, label: Option<ast::Label>, span: Span) -> ControlFlow<'a> {\n         ControlFlow {\n             cond: None,\n             block: block,\n@@ -819,7 +823,7 @@ impl<'a> ControlFlow<'a> {\n         pat: Option<&'a ast::Pat>,\n         cond: &'a ast::Expr,\n         block: &'a ast::Block,\n-        label: Option<ast::SpannedIdent>,\n+        label: Option<ast::Label>,\n         span: Span,\n     ) -> ControlFlow<'a> {\n         ControlFlow {\n@@ -844,7 +848,7 @@ impl<'a> ControlFlow<'a> {\n         pat: &'a ast::Pat,\n         cond: &'a ast::Expr,\n         block: &'a ast::Block,\n-        label: Option<ast::SpannedIdent>,\n+        label: Option<ast::Label>,\n         span: Span,\n     ) -> ControlFlow<'a> {\n         ControlFlow {\n@@ -1166,9 +1170,9 @@ impl<'a> Rewrite for ControlFlow<'a> {\n     }\n }\n \n-fn rewrite_label(label: Option<ast::SpannedIdent>) -> Cow<'static, str> {\n-    match label {\n-        Some(ident) => Cow::from(format!(\"{}: \", ident.node)),\n+fn rewrite_label(opt_label: Option<ast::Label>) -> Cow<'static, str> {\n+    match opt_label {\n+        Some(label) => Cow::from(format!(\"{}: \", label.ident)),\n         None => Cow::from(\"\"),\n     }\n }"}, {"sha": "c57a1e14483492ea7326bec1500d0cdc11d1d4f1", "filename": "tests/source/immovable_generators.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/tests%2Fsource%2Fimmovable_generators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/tests%2Fsource%2Fimmovable_generators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimmovable_generators.rs?ref=2fb6bd3b9f01efb48593068e04efe2ed0a633b09", "patch": "@@ -0,0 +1,7 @@\n+#![feature(generators)]\n+\n+unsafe fn foo() {\n+    let mut ga = static || { \n+        yield 1;\n+    };\n+}"}, {"sha": "0bf7a2d91ba153f2c3dca842467cfee491e8dd61", "filename": "tests/target/immovable_generators.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/tests%2Ftarget%2Fimmovable_generators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fb6bd3b9f01efb48593068e04efe2ed0a633b09/tests%2Ftarget%2Fimmovable_generators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimmovable_generators.rs?ref=2fb6bd3b9f01efb48593068e04efe2ed0a633b09", "patch": "@@ -0,0 +1,7 @@\n+#![feature(generators)]\n+\n+unsafe fn foo() {\n+    let mut ga = static || {\n+        yield 1;\n+    };\n+}"}]}