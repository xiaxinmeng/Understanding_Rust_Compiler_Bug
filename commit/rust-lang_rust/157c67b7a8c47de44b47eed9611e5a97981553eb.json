{"sha": "157c67b7a8c47de44b47eed9611e5a97981553eb", "node_id": "C_kwDOAAsO6NoAKDE1N2M2N2I3YThjNDdkZTQ0YjQ3ZWVkOTYxMWU1YTk3OTgxNTUzZWI", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2022-03-27T06:05:18Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2022-03-27T06:05:18Z"}, "message": "Handle `,` to `;` substitution in arg params", "tree": {"sha": "5e62721ca297f35db20124b79bbf1603dfc13093", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e62721ca297f35db20124b79bbf1603dfc13093"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/157c67b7a8c47de44b47eed9611e5a97981553eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/157c67b7a8c47de44b47eed9611e5a97981553eb", "html_url": "https://github.com/rust-lang/rust/commit/157c67b7a8c47de44b47eed9611e5a97981553eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/157c67b7a8c47de44b47eed9611e5a97981553eb/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6874bd27f527b6c5f40e8fd866d91813da2df35a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6874bd27f527b6c5f40e8fd866d91813da2df35a", "html_url": "https://github.com/rust-lang/rust/commit/6874bd27f527b6c5f40e8fd866d91813da2df35a"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "93663a349f51eabe849234a90dad42560f902c7a", "filename": "compiler/rustc_parse/src/parser/path.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/157c67b7a8c47de44b47eed9611e5a97981553eb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/157c67b7a8c47de44b47eed9611e5a97981553eb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs?ref=157c67b7a8c47de44b47eed9611e5a97981553eb", "patch": "@@ -478,6 +478,23 @@ impl<'a> Parser<'a> {\n         while let Some(arg) = self.parse_angle_arg(ty_generics)? {\n             args.push(arg);\n             if !self.eat(&token::Comma) {\n+                if self.token.kind == token::Semi\n+                    && self.look_ahead(1, |t| t.is_ident() || t.is_lifetime())\n+                {\n+                    // Add `>` to the list of expected tokens.\n+                    self.check(&token::Gt);\n+                    // Handle `,` to `;` substitution\n+                    let mut err = self.unexpected::<()>().unwrap_err();\n+                    self.bump();\n+                    err.span_suggestion_verbose(\n+                        self.prev_token.span.until(self.token.span),\n+                        \"use a comma to separate type parameters\",\n+                        \", \".to_string(),\n+                        Applicability::MachineApplicable,\n+                    );\n+                    err.emit();\n+                    continue;\n+                }\n                 if !self.token.kind.should_end_const_arg() {\n                     if self.handle_ambiguous_unbraced_const_arg(&mut args)? {\n                         // We've managed to (partially) recover, so continue trying to parse"}, {"sha": "89e87fe99885e1a545b40bc9582e6a1b10e5d7d1", "filename": "src/test/ui/parser/lifetime-semicolon.fixed", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/157c67b7a8c47de44b47eed9611e5a97981553eb/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/157c67b7a8c47de44b47eed9611e5a97981553eb/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.fixed?ref=157c67b7a8c47de44b47eed9611e5a97981553eb", "patch": "@@ -0,0 +1,10 @@\n+// run-rustfix\n+#![allow(unused)]\n+struct Foo<'a, 'b> {\n+    a: &'a &'b i32\n+}\n+\n+fn foo<'a, 'b>(_x: &mut Foo<'a, 'b>) {}\n+//~^ ERROR expected one of `,`, `:`, `=`, or `>`, found `;`\n+\n+fn main() {}"}, {"sha": "744c93fc7c767cc73830d25244d02416f7960c00", "filename": "src/test/ui/parser/lifetime-semicolon.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/157c67b7a8c47de44b47eed9611e5a97981553eb/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/157c67b7a8c47de44b47eed9611e5a97981553eb/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.rs?ref=157c67b7a8c47de44b47eed9611e5a97981553eb", "patch": "@@ -1,8 +1,10 @@\n+// run-rustfix\n+#![allow(unused)]\n struct Foo<'a, 'b> {\n     a: &'a &'b i32\n }\n \n-fn foo<'a, 'b>(x: &mut Foo<'a; 'b>) {}\n+fn foo<'a, 'b>(_x: &mut Foo<'a; 'b>) {}\n //~^ ERROR expected one of `,`, `:`, `=`, or `>`, found `;`\n \n fn main() {}"}, {"sha": "5de7a5f2d5dede8a8495290d5c116780b181eb8d", "filename": "src/test/ui/parser/lifetime-semicolon.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/157c67b7a8c47de44b47eed9611e5a97981553eb/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/157c67b7a8c47de44b47eed9611e5a97981553eb/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flifetime-semicolon.stderr?ref=157c67b7a8c47de44b47eed9611e5a97981553eb", "patch": "@@ -1,13 +1,13 @@\n error: expected one of `,`, `:`, `=`, or `>`, found `;`\n-  --> $DIR/lifetime-semicolon.rs:5:30\n+  --> $DIR/lifetime-semicolon.rs:7:31\n    |\n-LL | fn foo<'a, 'b>(x: &mut Foo<'a; 'b>) {}\n-   |                              ^ expected one of `,`, `:`, `=`, or `>`\n+LL | fn foo<'a, 'b>(_x: &mut Foo<'a; 'b>) {}\n+   |                               ^ expected one of `,`, `:`, `=`, or `>`\n    |\n-help: you might have meant to end the type parameters here\n+help: use a comma to separate type parameters\n    |\n-LL | fn foo<'a, 'b>(x: &mut Foo<'a>; 'b>) {}\n-   |                              +\n+LL | fn foo<'a, 'b>(_x: &mut Foo<'a, 'b>) {}\n+   |                               ~\n \n error: aborting due to previous error\n "}]}