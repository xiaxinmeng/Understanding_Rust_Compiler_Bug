{"sha": "e6728ecdbb52fbf5337a8d962fefcf83a6c65a3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NzI4ZWNkYmI1MmZiZjUzMzdhOGQ5NjJmZWZjZjgzYTZjNjVhM2Y=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2017-10-08T15:40:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-10-08T15:40:52Z"}, "message": "fix documentation typo", "tree": {"sha": "9c37c1a5ad9cbc296335b0c8c5dd9ea74e7febde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c37c1a5ad9cbc296335b0c8c5dd9ea74e7febde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6728ecdbb52fbf5337a8d962fefcf83a6c65a3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6728ecdbb52fbf5337a8d962fefcf83a6c65a3f", "html_url": "https://github.com/rust-lang/rust/commit/e6728ecdbb52fbf5337a8d962fefcf83a6c65a3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6728ecdbb52fbf5337a8d962fefcf83a6c65a3f/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff8e264950b070578c8c8187241f4ca55ebf28fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff8e264950b070578c8c8187241f4ca55ebf28fe", "html_url": "https://github.com/rust-lang/rust/commit/ff8e264950b070578c8c8187241f4ca55ebf28fe"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2221ecf07b434913b079643d283b48afeeed7d5f", "filename": "src/librustc/hir/itemlikevisit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6728ecdbb52fbf5337a8d962fefcf83a6c65a3f/src%2Flibrustc%2Fhir%2Fitemlikevisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6728ecdbb52fbf5337a8d962fefcf83a6c65a3f/src%2Flibrustc%2Fhir%2Fitemlikevisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fitemlikevisit.rs?ref=e6728ecdbb52fbf5337a8d962fefcf83a6c65a3f", "patch": "@@ -41,7 +41,7 @@ use super::intravisit::Visitor;\n ///    - Example: Lifetime resolution, which wants to bring lifetimes declared on the\n ///      impl into scope while visiting the impl-items, and then back out again.\n ///    - How: Implement `intravisit::Visitor` and override the\n-///      `visit_nested_map()` methods to return\n+///      `nested_visit_map()` methods to return\n ///      `NestedVisitorMap::All`. Walk your crate with\n ///      `intravisit::walk_crate()` invoked on `tcx.hir.krate()`.\n ///    - Pro: Visitor methods for any kind of HIR node, not just item-like things."}]}