{"sha": "43410981ae51c0af24c4657e3cc7cd4a01d41a95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNDEwOTgxYWU1MWMwYWYyNGM0NjU3ZTNjYzdjZDRhMDFkNDFhOTU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-08-04T06:35:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-04T06:35:59Z"}, "message": "Rollup merge of #53024 - matklad:patch-1, r=alexcrichton\n\nSpecify reentrancy gurantees of `Once::call_once`\n\nI don't think the docs are clear about what happens in the following code\n\n```rust\nstatic INIT: Once = ONCE_INIT;\n\nINIT.call_once(|| INIT.call_once(|| println!(\"huh?\")));\n```\n\n[Playground](https://play.rust-lang.org/?gist=15dde1f68a6ede263c7250c36977eade&version=stable&mode=debug&edition=2015)\n\nLet's \"specify\" the behavior to make it clear that the current behavior (deadlock I think?) is not a strict guarantee.", "tree": {"sha": "8cefe5f682037d3a4080ce5051aa8585328161b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cefe5f682037d3a4080ce5051aa8585328161b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43410981ae51c0af24c4657e3cc7cd4a01d41a95", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbZUlPCRBK7hj4Ov3rIwAAdHIIAAsY3TGL8JZMMNgzamAkH8+G\nEBwhFQwOOonc6/h4jMzz8Ctv1oamKwqWQ9beR1mGZxazMRrBev5SrQ2o8+kaSZVX\nkGnvdOtRvZzjYhEVfkSxvsMAD21aLxhj1ZqMMUlgWsDvP/loaf/qfrPuPT3WpvP0\nTHYGcl0kwB9FtVyTbSqveyRgVsVvF6hoc50DLrGrbiLFfMwQFQfNPC7x+csWCWhg\nGtPOeeyCyMbawkxdKccF0XPZl7hgBrEHBLbpyiw47s5WvcaO7i58YUxXEUfnfJtQ\no7SpOGus2/7i9hFGonW/hsFbIXdiGIU884pew2UAG+EhW3KAfohnXWy5XhGrjLs=\n=KXV1\n-----END PGP SIGNATURE-----\n", "payload": "tree 8cefe5f682037d3a4080ce5051aa8585328161b3\nparent aeb20284817497a895fee5a22b0013acd0a430e2\nparent a2f9aaf7a35e673c3b8f0825a07505b0294aa24f\nauthor kennytm <kennytm@gmail.com> 1533364559 +0800\ncommitter GitHub <noreply@github.com> 1533364559 +0800\n\nRollup merge of #53024 - matklad:patch-1, r=alexcrichton\n\nSpecify reentrancy gurantees of `Once::call_once`\n\nI don't think the docs are clear about what happens in the following code\n\n```rust\nstatic INIT: Once = ONCE_INIT;\n\nINIT.call_once(|| INIT.call_once(|| println!(\"huh?\")));\n```\n\n[Playground](https://play.rust-lang.org/?gist=15dde1f68a6ede263c7250c36977eade&version=stable&mode=debug&edition=2015)\n\nLet's \"specify\" the behavior to make it clear that the current behavior (deadlock I think?) is not a strict guarantee.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43410981ae51c0af24c4657e3cc7cd4a01d41a95", "html_url": "https://github.com/rust-lang/rust/commit/43410981ae51c0af24c4657e3cc7cd4a01d41a95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43410981ae51c0af24c4657e3cc7cd4a01d41a95/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aeb20284817497a895fee5a22b0013acd0a430e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/aeb20284817497a895fee5a22b0013acd0a430e2", "html_url": "https://github.com/rust-lang/rust/commit/aeb20284817497a895fee5a22b0013acd0a430e2"}, {"sha": "a2f9aaf7a35e673c3b8f0825a07505b0294aa24f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2f9aaf7a35e673c3b8f0825a07505b0294aa24f", "html_url": "https://github.com/rust-lang/rust/commit/a2f9aaf7a35e673c3b8f0825a07505b0294aa24f"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "3abc260b4586878b8d17b139e1a2e8387c2d20e1", "filename": "src/libstd/sync/once.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/43410981ae51c0af24c4657e3cc7cd4a01d41a95/src%2Flibstd%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43410981ae51c0af24c4657e3cc7cd4a01d41a95/src%2Flibstd%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fonce.rs?ref=43410981ae51c0af24c4657e3cc7cd4a01d41a95", "patch": "@@ -178,6 +178,10 @@ impl Once {\n     /// happens-before relation between the closure and code executing after the\n     /// return).\n     ///\n+    /// If the given closure recusively invokes `call_once` on the same `Once`\n+    /// instance the exact behavior is not specified, allowed outcomes are\n+    /// a panic or a deadlock.\n+    ///\n     /// # Examples\n     ///\n     /// ```"}]}