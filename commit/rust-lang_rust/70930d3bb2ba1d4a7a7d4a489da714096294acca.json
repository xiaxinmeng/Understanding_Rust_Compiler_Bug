{"sha": "70930d3bb2ba1d4a7a7d4a489da714096294acca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwOTMwZDNiYjJiYTFkNGE3YTdkNGE0ODlkYTcxNDA5NjI5NGFjY2E=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-20T22:03:42Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-20T22:03:42Z"}, "message": "Remove set_cursor", "tree": {"sha": "87375353a2ed211933ceb66e1ee7f7dc536067e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87375353a2ed211933ceb66e1ee7f7dc536067e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70930d3bb2ba1d4a7a7d4a489da714096294acca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70930d3bb2ba1d4a7a7d4a489da714096294acca", "html_url": "https://github.com/rust-lang/rust/commit/70930d3bb2ba1d4a7a7d4a489da714096294acca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70930d3bb2ba1d4a7a7d4a489da714096294acca/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ac0abd2960acf1b3a357c681e64b3cddba6fc8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ac0abd2960acf1b3a357c681e64b3cddba6fc8e", "html_url": "https://github.com/rust-lang/rust/commit/4ac0abd2960acf1b3a357c681e64b3cddba6fc8e"}], "stats": {"total": 44, "additions": 13, "deletions": 31}, "files": [{"sha": "9f6ca449b4a791efd8e625758a7bc34b95b036cf", "filename": "crates/ra_assists/src/assist_context.rs", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/70930d3bb2ba1d4a7a7d4a489da714096294acca/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70930d3bb2ba1d4a7a7d4a489da714096294acca/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_context.rs?ref=70930d3bb2ba1d4a7a7d4a489da714096294acca", "patch": "@@ -171,19 +171,13 @@ impl Assists {\n \n pub(crate) struct AssistBuilder {\n     edit: TextEditBuilder,\n-    cursor_position: Option<TextSize>,\n     file: FileId,\n     is_snippet: bool,\n }\n \n impl AssistBuilder {\n     pub(crate) fn new(file: FileId) -> AssistBuilder {\n-        AssistBuilder {\n-            edit: TextEditBuilder::default(),\n-            cursor_position: None,\n-            file,\n-            is_snippet: false,\n-        }\n+        AssistBuilder { edit: TextEditBuilder::default(), file, is_snippet: false }\n     }\n \n     /// Remove specified `range` of text.\n@@ -241,10 +235,6 @@ impl AssistBuilder {\n         algo::diff(&node, &new).into_text_edit(&mut self.edit)\n     }\n \n-    /// Specify desired position of the cursor after the assist is applied.\n-    pub(crate) fn set_cursor(&mut self, offset: TextSize) {\n-        self.cursor_position = Some(offset)\n-    }\n     // FIXME: better API\n     pub(crate) fn set_file(&mut self, assist_file: FileId) {\n         self.file = assist_file;\n@@ -258,12 +248,8 @@ impl AssistBuilder {\n \n     fn finish(self, change_label: String) -> SourceChange {\n         let edit = self.edit.finish();\n-        if edit.is_empty() && self.cursor_position.is_none() {\n-            panic!(\"Only call `add_assist` if the assist can be applied\")\n-        }\n-        let mut res =\n-            SingleFileChange { label: change_label, edit, cursor_position: self.cursor_position }\n-                .into_source_change(self.file);\n+        let mut res = SingleFileChange { label: change_label, edit, cursor_position: None }\n+            .into_source_change(self.file);\n         if self.is_snippet {\n             res.is_snippet = true;\n         }"}, {"sha": "8440c7d0f43e37e98fa4b4fa1f1716740c17f992", "filename": "crates/ra_assists/src/handlers/unwrap_block.rs", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/70930d3bb2ba1d4a7a7d4a489da714096294acca/crates%2Fra_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70930d3bb2ba1d4a7a7d4a489da714096294acca/crates%2Fra_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs?ref=70930d3bb2ba1d4a7a7d4a489da714096294acca", "patch": "@@ -62,7 +62,6 @@ pub(crate) fn unwrap_block(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n                             let range_to_del_else_if = TextRange::new(ancestor_then_branch.syntax().text_range().end(), l_curly_token.text_range().start());\n                             let range_to_del_rest = TextRange::new(then_branch.syntax().text_range().end(), if_expr.syntax().text_range().end());\n \n-                            edit.set_cursor(ancestor_then_branch.syntax().text_range().end());\n                             edit.delete(range_to_del_rest);\n                             edit.delete(range_to_del_else_if);\n                             edit.replace(target, update_expr_string(then_branch.to_string(), &[' ', '{']));\n@@ -79,7 +78,6 @@ pub(crate) fn unwrap_block(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n                                 return acc.add(assist_id, assist_label, target, |edit| {\n                                     let range_to_del = TextRange::new(then_branch.syntax().text_range().end(), l_curly_token.text_range().start());\n \n-                                    edit.set_cursor(then_branch.syntax().text_range().end());\n                                     edit.delete(range_to_del);\n                                     edit.replace(target, update_expr_string(else_block.to_string(), &[' ', '{']));\n                                 });\n@@ -97,8 +95,6 @@ pub(crate) fn unwrap_block(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n \n     let target = expr_to_unwrap.syntax().text_range();\n     acc.add(assist_id, assist_label, target, |edit| {\n-        edit.set_cursor(expr.syntax().text_range().start());\n-\n         edit.replace(\n             expr.syntax().text_range(),\n             update_expr_string(expr_to_unwrap.to_string(), &[' ', '{', '\\n']),\n@@ -154,7 +150,7 @@ mod tests {\n             r#\"\n             fn main() {\n                 bar();\n-                <|>foo();\n+                foo();\n \n                 //comment\n                 bar();\n@@ -188,7 +184,7 @@ mod tests {\n \n                     //comment\n                     bar();\n-                }<|>\n+                }\n                 println!(\"bar\");\n             }\n             \"#,\n@@ -222,7 +218,7 @@ mod tests {\n \n                     //comment\n                     //bar();\n-                }<|>\n+                }\n                 println!(\"bar\");\n             }\n             \"#,\n@@ -258,7 +254,7 @@ mod tests {\n                     //bar();\n                 } else if false {\n                     println!(\"bar\");\n-                }<|>\n+                }\n                 println!(\"foo\");\n             }\n             \"#,\n@@ -298,7 +294,7 @@ mod tests {\n                     println!(\"bar\");\n                 } else if true {\n                     println!(\"foo\");\n-                }<|>\n+                }\n                 println!(\"else\");\n             }\n             \"#,\n@@ -336,7 +332,7 @@ mod tests {\n                     //bar();\n                 } else if false {\n                     println!(\"bar\");\n-                }<|>\n+                }\n                 println!(\"foo\");\n             }\n             \"#,\n@@ -383,7 +379,7 @@ mod tests {\n             \"#,\n             r#\"\n             fn main() {\n-                <|>if true {\n+                if true {\n                     foo();\n \n                     //comment\n@@ -417,7 +413,7 @@ mod tests {\n             r#\"\n             fn main() {\n                 for i in 0..5 {\n-                    <|>foo();\n+                    foo();\n \n                     //comment\n                     bar();\n@@ -447,7 +443,7 @@ mod tests {\n             \"#,\n             r#\"\n             fn main() {\n-                <|>if true {\n+                if true {\n                     foo();\n \n                     //comment\n@@ -480,7 +476,7 @@ mod tests {\n             \"#,\n             r#\"\n             fn main() {\n-                <|>if true {\n+                if true {\n                     foo();\n \n                     //comment"}]}