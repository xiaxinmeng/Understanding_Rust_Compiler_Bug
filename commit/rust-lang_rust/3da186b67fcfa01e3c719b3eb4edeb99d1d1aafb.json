{"sha": "3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYTE4NmI2N2ZjZmEwMWUzYzcxOWIzZWI0ZWRlYjk5ZDFkMWFhZmI=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-05-29T10:54:24Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-05-30T17:30:10Z"}, "message": "rustc: use syntactic (instead of visibility) source info where appropriate.", "tree": {"sha": "74a8bce6d52d418786e1b3b75c1c859545192ac4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74a8bce6d52d418786e1b3b75c1c859545192ac4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "html_url": "https://github.com/rust-lang/rust/commit/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0895590c53919bb235771947ae395ab0d1751b4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0895590c53919bb235771947ae395ab0d1751b4d", "html_url": "https://github.com/rust-lang/rust/commit/0895590c53919bb235771947ae395ab0d1751b4d"}], "stats": {"total": 62, "additions": 32, "deletions": 30}, "files": [{"sha": "3a1a8f02f4979c4d1652056df0c798605372f6ad", "filename": "src/librustc/mir/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Flibrustc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Flibrustc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fvisit.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -722,7 +722,7 @@ macro_rules! make_mir_visitor {\n \n                 self.visit_ty(ty, TyContext::LocalDecl {\n                     local,\n-                    source_info: *visibility_source_info,\n+                    source_info: *syntactic_source_info,\n                 });\n                 self.visit_source_info(syntactic_source_info);\n                 self.visit_source_info(visibility_source_info);"}, {"sha": "38472418aab982d614b15924d78c640b96a8cb64", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -166,7 +166,7 @@ impl<'a, 'tcx> Visitor<'tcx> for UnsafetyChecker<'a, 'tcx> {\n                         // Internal locals are used in the `move_val_init` desugaring.\n                         // We want to check unsafety against the source info of the\n                         // desugaring, rather than the source info of the RHS.\n-                        self.source_info = self.mir.local_decls[local].visibility_source_info;\n+                        self.source_info = self.mir.local_decls[local].syntactic_source_info;\n                     }\n                 }\n                 let base_ty = base.ty(self.mir, self.tcx).to_ty(self.tcx);"}, {"sha": "520b7dfac4f7e4a80f6269e2092b4fd1db4fc841", "filename": "src/librustc_mir/util/pretty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpretty.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -467,8 +467,8 @@ fn write_scope_tree(\n         // User variable types (including the user's name in a comment).\n         for local in mir.vars_iter() {\n             let var = &mir.local_decls[local];\n-            let (name, source_info) = if var.visibility_source_info.scope == child {\n-                (var.name.unwrap(), var.visibility_source_info)\n+            let (name, source_info) = if var.syntactic_source_info.scope == child {\n+                (var.name.unwrap(), var.syntactic_source_info)\n             } else {\n                 // Not a variable or not declared in this scope.\n                 continue;"}, {"sha": "8390a0d19ae7b51e416d624c3bec8000d636e30e", "filename": "src/test/mir-opt/box_expr.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fbox_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fbox_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbox_expr.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -33,9 +33,10 @@ impl Drop for S {\n // START rustc.main.ElaborateDrops.before.mir\n //     let mut _0: ();\n //     scope 1 {\n+//     }\n+//     scope 2 {\n //         let _1: std::boxed::Box<S>;\n //     }\n-//     ...\n //     let mut _2: std::boxed::Box<S>;\n //     let mut _3: ();\n //     let mut _4: std::boxed::Box<S>;"}, {"sha": "184459aa90eb8cf403fc014e8a253f246ac7ec97", "filename": "src/test/mir-opt/end_region_1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_1.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -22,10 +22,10 @@ fn main() {\n // START rustc.main.SimplifyCfg-qualify-consts.after.mir\n //     let mut _0: ();\n //     ...\n-//     let _1: i32;\n-//     ...\n //     let _2: &'10_1rs i32;\n //     ...\n+//     let _1: i32;\n+//     ...\n //     bb0: {\n //         StorageLive(_1);\n //         _1 = const 3i32;"}, {"sha": "c40ab5253a075d3f6233d73c46003a37623a28e1", "filename": "src/test/mir-opt/end_region_2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_2.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -27,11 +27,11 @@ fn main() {\n // START rustc.main.SimplifyCfg-qualify-consts.after.mir\n //     let mut _0: ();\n //     ...\n-//     let _2: bool;\n+//     let _7: &'23_3rs bool;\n //     ...\n //     let _3: &'23_1rs bool;\n //     ...\n-//     let _7: &'23_3rs bool;\n+//     let _2: bool;\n //     ...\n //     let mut _4: ();\n //     let mut _5: bool;"}, {"sha": "086d80d15eacd43150333595e108900fc861313e", "filename": "src/test/mir-opt/end_region_3.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_3.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -28,11 +28,11 @@ fn main() {\n // START rustc.main.SimplifyCfg-qualify-consts.after.mir\n //     let mut _0: ();\n //     ...\n-//     let mut _1: bool;\n+//     let _7: &'26_3rs bool;\n //     ...\n //     let _3: &'26_1rs bool;\n //     ...\n-//     let _7: &'26_3rs bool;\n+//     let mut _1: bool;\n //     ...\n //     let mut _2: ();\n //     let mut _4: ();"}, {"sha": "fc58e0824e8bdad258eeb8cbfafdb19a9039ec30", "filename": "src/test/mir-opt/end_region_4.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_4.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -32,13 +32,13 @@ fn foo(i: i32) {\n // START rustc.main.SimplifyCfg-qualify-consts.after.mir\n //     let mut _0: ();\n //     ...\n-//     let _1: D;\n-//     ...\n-//     let _2: i32;\n+//     let _6: &'26_4rs i32;\n //     ...\n //     let _3: &'26_2rs i32;\n //     ...\n-//     let _6: &'26_4rs i32;\n+//     let _2: i32;\n+//     ...\n+//     let _1: D;\n //     ...\n //     let mut _4: ();\n //     let mut _5: i32;"}, {"sha": "96a64f2eebfb49cc1547c3d9d4235cdc1791bfff", "filename": "src/test/mir-opt/end_region_8.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_8.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -31,10 +31,10 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n // fn main() -> () {\n //    let mut _0: ();\n //    ...\n-//    let _1: D;\n-//    ...\n //    let _2: &'21_1rs D;\n //    ...\n+//    let _1: D;\n+//    ...\n //    let mut _3: ();\n //    let mut _4: [closure@NodeId(22) r:&'19s D];\n //    let mut _5: &'21_1rs D;"}, {"sha": "15c31e178759d076dec144ef3426f22b13daf949", "filename": "src/test/mir-opt/end_region_9.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_9.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_9.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_9.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -41,11 +41,11 @@ fn main() {\n // fn main() -> () {\n //     let mut _0: ();\n //     ...\n-//     let mut _1: bool;\n+//     let mut _4: &'33_0rs i32;\n //     ...\n //     let _2: i32;\n //     ...\n-//     let mut _4: &'33_0rs i32;\n+//     let mut _1: bool;\n //     ...\n //     let mut _3: ();\n //     let mut _5: !;"}, {"sha": "2d6962c5a5c1f5609b9357532ede492609220131", "filename": "src/test/mir-opt/end_region_cyclic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_cyclic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fend_region_cyclic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_cyclic.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -43,9 +43,9 @@ fn query() -> bool { true }\n // fn main() -> (){\n //     let mut _0: ();\n //     scope 1 {\n-//         let _2: S<'36_0rs>;\n //     }\n //     scope 2 {\n+//         let _2: S<'36_0rs>;\n //     }\n //     let mut _1: ();\n //     let mut _3: std::cell::Cell<std::option::Option<&'36_0rs S<'36_0rs>>>;"}, {"sha": "e43b4052e07e885a08420b9d7f4bf0d9a187792e", "filename": "src/test/mir-opt/issue-41110.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fissue-41110.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fissue-41110.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-41110.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -40,9 +40,10 @@ impl S {\n // START rustc.main.ElaborateDrops.after.mir\n //    let mut _0: ();\n //    scope 1 {\n+//    }\n+//    scope 2 {\n //        let _1: ();\n //    }\n-//    ...\n //    let mut _2: S;\n //    let mut _3: S;\n //    let mut _4: S;\n@@ -52,10 +53,10 @@ impl S {\n // START rustc.test.ElaborateDrops.after.mir\n //    let mut _0: ();\n //    ...\n-//    let _1: S;\n-//    ...\n //    let mut _2: S;\n //    ...\n+//    let _1: S;\n+//    ...\n //    let mut _3: ();\n //    let mut _4: S;\n //    let mut _5: S;"}, {"sha": "94a6a9799cf9d1b87c5c362db33e79ac6b7a5d35", "filename": "src/test/mir-opt/nll/reborrow-basic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fnll%2Freborrow-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fnll%2Freborrow-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Freborrow-basic.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -32,7 +32,7 @@ fn main() {\n // ...\n // | '_#9r    | {bb0[10], bb0[14..=17]}\n // ...\n-// let _2: &'_#7r mut i32;\n-// ...\n // let _4: &'_#9r mut i32;\n+// ...\n+// let _2: &'_#7r mut i32;\n // END rustc.main.nll.0.mir"}, {"sha": "57a11d8dd25cb280c87d5ea8922e947abc35a1a8", "filename": "src/test/mir-opt/nll/region-subtyping-basic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -37,10 +37,10 @@ fn main() {\n // | '_#4r    | {bb2[5..=6], bb3[0..=1]}\n // END rustc.main.nll.0.mir\n // START rustc.main.nll.0.mir\n-// let _2: &'_#3r usize;\n-// ...\n // let _6: &'_#4r usize;\n // ...\n+// let _2: &'_#3r usize;\n+// ...\n // _2 = &'_#2r _1[_3];\n // ...\n // _7 = _2;"}, {"sha": "9441c6f4085a2d9bc3bfbbf75618219f2d4caeb1", "filename": "src/test/mir-opt/packed-struct-drop-aligned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fpacked-struct-drop-aligned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fpacked-struct-drop-aligned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fpacked-struct-drop-aligned.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -29,9 +29,9 @@ impl Drop for Droppy {\n // fn main() -> () {\n //     let mut _0: ();\n //     scope 1 {\n-//         let mut _1: Packed;\n //     }\n //     scope 2 {\n+//         let mut _1: Packed;\n //     }\n //     let mut _2: Aligned;\n //     let mut _3: Droppy;"}, {"sha": "72ec9ce400ffeccbb8a30c0a13ffc637bef1c1de", "filename": "src/test/mir-opt/validate_3.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fvalidate_3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb/src%2Ftest%2Fmir-opt%2Fvalidate_3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_3.rs?ref=3da186b67fcfa01e3c719b3eb4edeb99d1d1aafb", "patch": "@@ -32,14 +32,14 @@ fn main() {\n // fn main() -> (){\n //     let mut _0: ();\n //     scope 1 {\n-//         let _1: Test;\n //         scope 3 {\n-//             let _2: &ReErased Test;\n //         }\n //         scope 4 {\n+//             let _2: &ReErased Test;\n //         }\n //     }\n //     scope 2 {\n+//         let _1: Test;\n //     }\n //     let mut _3: ();\n //     let mut _4: &ReErased i32;"}]}