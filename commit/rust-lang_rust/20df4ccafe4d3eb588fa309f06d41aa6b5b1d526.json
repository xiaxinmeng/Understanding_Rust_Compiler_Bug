{"sha": "20df4ccafe4d3eb588fa309f06d41aa6b5b1d526", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwZGY0Y2NhZmU0ZDNlYjU4OGZhMzA5ZjA2ZDQxYWE2YjViMWQ1MjY=", "commit": {"author": {"name": "Piotr Jawniak", "email": "sawyer47@gmail.com", "date": "2014-07-19T09:59:44Z"}, "committer": {"name": "Piotr Jawniak", "email": "sawyer47@gmail.com", "date": "2014-07-20T06:47:14Z"}, "message": "Correctly stringify! types and paths inside macros\n\nCloses #8709", "tree": {"sha": "dcb6e5a6d8722ea4cb61377794ea0663315cb326", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcb6e5a6d8722ea4cb61377794ea0663315cb326"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20df4ccafe4d3eb588fa309f06d41aa6b5b1d526", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20df4ccafe4d3eb588fa309f06d41aa6b5b1d526", "html_url": "https://github.com/rust-lang/rust/commit/20df4ccafe4d3eb588fa309f06d41aa6b5b1d526", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20df4ccafe4d3eb588fa309f06d41aa6b5b1d526/comments", "author": {"login": "Sawyer47", "id": 1534302, "node_id": "MDQ6VXNlcjE1MzQzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1534302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sawyer47", "html_url": "https://github.com/Sawyer47", "followers_url": "https://api.github.com/users/Sawyer47/followers", "following_url": "https://api.github.com/users/Sawyer47/following{/other_user}", "gists_url": "https://api.github.com/users/Sawyer47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sawyer47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sawyer47/subscriptions", "organizations_url": "https://api.github.com/users/Sawyer47/orgs", "repos_url": "https://api.github.com/users/Sawyer47/repos", "events_url": "https://api.github.com/users/Sawyer47/events{/privacy}", "received_events_url": "https://api.github.com/users/Sawyer47/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Sawyer47", "id": 1534302, "node_id": "MDQ6VXNlcjE1MzQzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1534302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sawyer47", "html_url": "https://github.com/Sawyer47", "followers_url": "https://api.github.com/users/Sawyer47/followers", "following_url": "https://api.github.com/users/Sawyer47/following{/other_user}", "gists_url": "https://api.github.com/users/Sawyer47/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sawyer47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sawyer47/subscriptions", "organizations_url": "https://api.github.com/users/Sawyer47/orgs", "repos_url": "https://api.github.com/users/Sawyer47/repos", "events_url": "https://api.github.com/users/Sawyer47/events{/privacy}", "received_events_url": "https://api.github.com/users/Sawyer47/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44a71dee377bebd39a45ba3fe0ccc31e59ac2821", "url": "https://api.github.com/repos/rust-lang/rust/commits/44a71dee377bebd39a45ba3fe0ccc31e59ac2821", "html_url": "https://github.com/rust-lang/rust/commit/44a71dee377bebd39a45ba3fe0ccc31e59ac2821"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "f1ef79801518d12b4f2eb7233fe0c8c105558eb5", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/20df4ccafe4d3eb588fa309f06d41aa6b5b1d526/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20df4ccafe4d3eb588fa309f06d41aa6b5b1d526/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=20df4ccafe4d3eb588fa309f06d41aa6b5b1d526", "patch": "@@ -249,6 +249,8 @@ pub fn to_string(t: &Token) -> String {\n         match nt {\n             &NtExpr(ref e) => ::print::pprust::expr_to_string(&**e),\n             &NtMeta(ref e) => ::print::pprust::meta_item_to_string(&**e),\n+            &NtTy(ref e) => ::print::pprust::ty_to_string(&**e),\n+            &NtPath(ref e) => ::print::pprust::path_to_string(&**e),\n             _ => {\n                 let mut s = \"an interpolated \".to_string();\n                 match *nt {\n@@ -257,10 +259,10 @@ pub fn to_string(t: &Token) -> String {\n                     NtStmt(..) => s.push_str(\"statement\"),\n                     NtPat(..) => s.push_str(\"pattern\"),\n                     NtMeta(..) => fail!(\"should have been handled\"),\n-                    NtExpr(..) => fail!(\"should have been handled above\"),\n-                    NtTy(..) => s.push_str(\"type\"),\n+                    NtExpr(..) => fail!(\"should have been handled\"),\n+                    NtTy(..) => fail!(\"should have been handled\"),\n                     NtIdent(..) => s.push_str(\"identifier\"),\n-                    NtPath(..) => s.push_str(\"path\"),\n+                    NtPath(..) => fail!(\"should have been handled\"),\n                     NtTT(..) => s.push_str(\"tt\"),\n                     NtMatchers(..) => s.push_str(\"matcher sequence\")\n                 };"}, {"sha": "9f2aaa4d0057778fa5abdaeec06b8642c68c6243", "filename": "src/test/run-pass/issue-8709.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/20df4ccafe4d3eb588fa309f06d41aa6b5b1d526/src%2Ftest%2Frun-pass%2Fissue-8709.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20df4ccafe4d3eb588fa309f06d41aa6b5b1d526/src%2Ftest%2Frun-pass%2Fissue-8709.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8709.rs?ref=20df4ccafe4d3eb588fa309f06d41aa6b5b1d526", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(macro_rules)]\n+\n+macro_rules! sty(\n+    ($t:ty) => (stringify!($t))\n+)\n+\n+macro_rules! spath(\n+    ($t:path) => (stringify!($t))\n+)\n+\n+fn main() {\n+    assert_eq!(sty!(int), \"int\")\n+    assert_eq!(spath!(std::option), \"std::option\")\n+}"}]}