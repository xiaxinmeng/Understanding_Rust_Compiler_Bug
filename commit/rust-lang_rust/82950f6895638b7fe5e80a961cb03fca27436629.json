{"sha": "82950f6895638b7fe5e80a961cb03fca27436629", "node_id": "C_kwDOAAsO6NoAKDgyOTUwZjY4OTU2MzhiN2ZlNWU4MGE5NjFjYjAzZmNhMjc0MzY2Mjk", "commit": {"author": {"name": "Weihang Lo", "email": "me@weihanglo.tw", "date": "2023-03-14T10:23:14Z"}, "committer": {"name": "Weihang Lo", "email": "me@weihanglo.tw", "date": "2023-04-16T18:32:20Z"}, "message": "bootstrap: treat src/tools/cargo as a workspace member\n\nWe remove `src/tools/cargo` from rust-lang/rust root workspace, but\nsome underlying mechanism still needs it to be a member. for example,\n`./x.py doc`. This little hack make cargo's metadata available by\ninvoking an extra `cargo metadata` for cargo the package itself.\n\nCo-authored-by: Scott Schafer <schaferjscott@gmail.com>\nCo-authored-by: Eric Huss <eric@huss.org>", "tree": {"sha": "f55d08ac181dba741ac74984c4ed711b5698519a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f55d08ac181dba741ac74984c4ed711b5698519a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82950f6895638b7fe5e80a961cb03fca27436629", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEfYTqB0fBJAwqFtKm19vxiYJegucFAmQ8PzQACgkQ19vxiYJe\nguf4vhAAogwVqYpUsWu1wJyw9/H3YhMBpJGsyEf8JKXDaxrQwJuJT6Qtp5DfqNma\nMSqwvhCcjNTVVLZBo+lQShXItsw1gXth5aBI37r8PoXl85aJcd9R3GniU7GawvYm\npvehIi3cEmsiRFpOs7M67Xswm+mQRL2pdkypWyfsRPokXNFRaXXgGzDDTxrGro8X\nXpxp24xk5lZKs1LyeqOTpcR05UOWjg2i3F9YNtvbghP2LRyKFdIE81cQCmkNGpbv\nKa4d1vc3pXoRiLw3ozbwLqmf8ZVP4ha4T3ZpNB/fPZwT7hsEvmYF0/WmhOOd6Vsh\nzK76RGiCG7SAJTaH9UgkXb1m/5GJY4wY6tkIh6Eb1eyPNj0SmxWwUvsQRP6MMGrh\nemOHqcMe5LRUrLTdGHZGSgNTs87bjST+ypQQ5ceffHkhbzsa6L3ykDC6qjUwlVnG\naPDQ1MpD312t3GhQgTb8YrdWyI5mlOmXzB3tyjHRtBzzdrWGPIoVuf9OqUOm73O8\nrzAyUgcX4fBPK5pxWzPMfNvImCmhQ1jDJR4YLJMyJpyp0f99dzVP1CNHKi86Hq5s\nAa1JERL8mPtTYrBghFWGnTeihkSzKfpV+S/OdoecxLPzUYtPGoZufRpOCH/SPW/6\nndpYrDwfAph19qoxKmj9yhXSMX/o2fJJJ3eyCaZrn1Fc4iZIsjc=\n=2L25\n-----END PGP SIGNATURE-----", "payload": "tree f55d08ac181dba741ac74984c4ed711b5698519a\nparent 4c777710c6f5996e0967fe5b9d2924684c646626\nauthor Weihang Lo <me@weihanglo.tw> 1678789394 +0000\ncommitter Weihang Lo <me@weihanglo.tw> 1681669940 +0100\n\nbootstrap: treat src/tools/cargo as a workspace member\n\nWe remove `src/tools/cargo` from rust-lang/rust root workspace, but\nsome underlying mechanism still needs it to be a member. for example,\n`./x.py doc`. This little hack make cargo's metadata available by\ninvoking an extra `cargo metadata` for cargo the package itself.\n\nCo-authored-by: Scott Schafer <schaferjscott@gmail.com>\nCo-authored-by: Eric Huss <eric@huss.org>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82950f6895638b7fe5e80a961cb03fca27436629", "html_url": "https://github.com/rust-lang/rust/commit/82950f6895638b7fe5e80a961cb03fca27436629", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82950f6895638b7fe5e80a961cb03fca27436629/comments", "author": {"login": "weihanglo", "id": 14314532, "node_id": "MDQ6VXNlcjE0MzE0NTMy", "avatar_url": "https://avatars.githubusercontent.com/u/14314532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weihanglo", "html_url": "https://github.com/weihanglo", "followers_url": "https://api.github.com/users/weihanglo/followers", "following_url": "https://api.github.com/users/weihanglo/following{/other_user}", "gists_url": "https://api.github.com/users/weihanglo/gists{/gist_id}", "starred_url": "https://api.github.com/users/weihanglo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weihanglo/subscriptions", "organizations_url": "https://api.github.com/users/weihanglo/orgs", "repos_url": "https://api.github.com/users/weihanglo/repos", "events_url": "https://api.github.com/users/weihanglo/events{/privacy}", "received_events_url": "https://api.github.com/users/weihanglo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "weihanglo", "id": 14314532, "node_id": "MDQ6VXNlcjE0MzE0NTMy", "avatar_url": "https://avatars.githubusercontent.com/u/14314532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weihanglo", "html_url": "https://github.com/weihanglo", "followers_url": "https://api.github.com/users/weihanglo/followers", "following_url": "https://api.github.com/users/weihanglo/following{/other_user}", "gists_url": "https://api.github.com/users/weihanglo/gists{/gist_id}", "starred_url": "https://api.github.com/users/weihanglo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weihanglo/subscriptions", "organizations_url": "https://api.github.com/users/weihanglo/orgs", "repos_url": "https://api.github.com/users/weihanglo/repos", "events_url": "https://api.github.com/users/weihanglo/events{/privacy}", "received_events_url": "https://api.github.com/users/weihanglo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c777710c6f5996e0967fe5b9d2924684c646626", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c777710c6f5996e0967fe5b9d2924684c646626", "html_url": "https://github.com/rust-lang/rust/commit/4c777710c6f5996e0967fe5b9d2924684c646626"}], "stats": {"total": 59, "additions": 44, "deletions": 15}, "files": [{"sha": "597aefadcfe4c87d6b52f15caaf873c896d03d09", "filename": "src/bootstrap/metadata.rs", "status": "modified", "additions": 44, "deletions": 15, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/82950f6895638b7fe5e80a961cb03fca27436629/src%2Fbootstrap%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82950f6895638b7fe5e80a961cb03fca27436629/src%2Fbootstrap%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmetadata.rs?ref=82950f6895638b7fe5e80a961cb03fca27436629", "patch": "@@ -7,38 +7,35 @@ use crate::cache::INTERNER;\n use crate::util::output;\n use crate::{Build, Crate};\n \n-#[derive(Deserialize)]\n+/// For more information, see the output of\n+/// <https://doc.rust-lang.org/nightly/cargo/commands/cargo-metadata.html>\n+#[derive(Debug, Deserialize)]\n struct Output {\n     packages: Vec<Package>,\n }\n \n-#[derive(Deserialize)]\n+/// For more information, see the output of\n+/// <https://doc.rust-lang.org/nightly/cargo/commands/cargo-metadata.html>\n+#[derive(Debug, Deserialize)]\n struct Package {\n     name: String,\n     source: Option<String>,\n     manifest_path: String,\n     dependencies: Vec<Dependency>,\n }\n \n-#[derive(Deserialize)]\n+/// For more information, see the output of\n+/// <https://doc.rust-lang.org/nightly/cargo/commands/cargo-metadata.html>\n+#[derive(Debug, Deserialize)]\n struct Dependency {\n     name: String,\n     source: Option<String>,\n }\n \n+/// Collects and stores package metadata of each workspace members into `build`,\n+/// by executing `cargo metadata` commands.\n pub fn build(build: &mut Build) {\n-    // Run `cargo metadata` to figure out what crates we're testing.\n-    let mut cargo = Command::new(&build.initial_cargo);\n-    cargo\n-        .arg(\"metadata\")\n-        .arg(\"--format-version\")\n-        .arg(\"1\")\n-        .arg(\"--no-deps\")\n-        .arg(\"--manifest-path\")\n-        .arg(build.src.join(\"Cargo.toml\"));\n-    let output = output(&mut cargo);\n-    let output: Output = serde_json::from_str(&output).unwrap();\n-    for package in output.packages {\n+    for package in workspace_members(build) {\n         if package.source.is_none() {\n             let name = INTERNER.intern_string(package.name);\n             let mut path = PathBuf::from(package.manifest_path);\n@@ -57,3 +54,35 @@ pub fn build(build: &mut Build) {\n         }\n     }\n }\n+\n+/// Invokes `cargo metadata` to get package metadata of each workspace member.\n+///\n+/// Note that `src/tools/cargo` is no longer a workspace member but we still\n+/// treat it as one here, by invoking an additional `cargo metadata` command.\n+fn workspace_members(build: &Build) -> impl Iterator<Item = Package> {\n+    let cmd_metadata = |manifest_path| {\n+        let mut cargo = Command::new(&build.initial_cargo);\n+        cargo\n+            .arg(\"metadata\")\n+            .arg(\"--format-version\")\n+            .arg(\"1\")\n+            .arg(\"--no-deps\")\n+            .arg(\"--manifest-path\")\n+            .arg(manifest_path);\n+        cargo\n+    };\n+\n+    // Collects `metadata.packages` from the root workspace.\n+    let root_manifest_path = build.src.join(\"Cargo.toml\");\n+    let root_output = output(&mut cmd_metadata(&root_manifest_path));\n+    let Output { packages, .. } = serde_json::from_str(&root_output).unwrap();\n+\n+    // Collects `metadata.packages` from src/tools/cargo separately.\n+    let cargo_manifest_path = build.src.join(\"src/tools/cargo/Cargo.toml\");\n+    let cargo_output = output(&mut cmd_metadata(&cargo_manifest_path));\n+    let Output { packages: cargo_packages, .. } = serde_json::from_str(&cargo_output).unwrap();\n+\n+    // We only care about the root package from `src/tool/cargo` workspace.\n+    let cargo_package = cargo_packages.into_iter().find(|pkg| pkg.name == \"cargo\").into_iter();\n+    packages.into_iter().chain(cargo_package)\n+}"}]}