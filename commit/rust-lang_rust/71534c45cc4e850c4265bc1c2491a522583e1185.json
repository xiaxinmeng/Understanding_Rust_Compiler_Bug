{"sha": "71534c45cc4e850c4265bc1c2491a522583e1185", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNTM0YzQ1Y2M0ZTg1MGM0MjY1YmMxYzI0OTFhNTIyNTgzZTExODU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-11-01T12:39:44Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-11-01T12:39:44Z"}, "message": "RwLock guards are Sync if T is\n\nCurrently, the compiler requires `T` to also be `Send`.  There is no reason for\nthat.  `&Rw{Read,Write}LockGuard` only provides a shared referenced to `T`, sending\nthat across threads is safe if `T` is `Sync`.", "tree": {"sha": "6c56b1f694d8625aa535393eef0bf74b012cec1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c56b1f694d8625aa535393eef0bf74b012cec1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71534c45cc4e850c4265bc1c2491a522583e1185", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71534c45cc4e850c4265bc1c2491a522583e1185", "html_url": "https://github.com/rust-lang/rust/commit/71534c45cc4e850c4265bc1c2491a522583e1185", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71534c45cc4e850c4265bc1c2491a522583e1185/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f581cf9d692781847bede5d966b098a5d09b5e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f581cf9d692781847bede5d966b098a5d09b5e4", "html_url": "https://github.com/rust-lang/rust/commit/2f581cf9d692781847bede5d966b098a5d09b5e4"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "d59a0b65a69408d02c50ec082a7c8118d64c3b9d", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/71534c45cc4e850c4265bc1c2491a522583e1185/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71534c45cc4e850c4265bc1c2491a522583e1185/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=71534c45cc4e850c4265bc1c2491a522583e1185", "patch": "@@ -10,7 +10,6 @@\n \n use cell::UnsafeCell;\n use fmt;\n-use marker;\n use mem;\n use ops::{Deref, DerefMut};\n use ptr;\n@@ -102,7 +101,10 @@ pub struct RwLockReadGuard<'a, T: ?Sized + 'a> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, T: ?Sized> !marker::Send for RwLockReadGuard<'a, T> {}\n+impl<'a, T: ?Sized> !Send for RwLockReadGuard<'a, T> {}\n+\n+#[stable(feature = \"rwlock_guard_sync\", since = \"1.23.0\")]\n+unsafe impl<'a, T: ?Sized + Sync> Sync for RwLockReadGuard<'a, T> {}\n \n /// RAII structure used to release the exclusive write access of a lock when\n /// dropped.\n@@ -121,7 +123,10 @@ pub struct RwLockWriteGuard<'a, T: ?Sized + 'a> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, T: ?Sized> !marker::Send for RwLockWriteGuard<'a, T> {}\n+impl<'a, T: ?Sized> !Send for RwLockWriteGuard<'a, T> {}\n+\n+#[stable(feature = \"rwlock_guard_sync\", since = \"1.23.0\")]\n+unsafe impl<'a, T: ?Sized + Sync> Sync for RwLockWriteGuard<'a, T> {}\n \n impl<T> RwLock<T> {\n     /// Creates a new instance of an `RwLock<T>` which is unlocked."}]}