{"sha": "bd0eeb3f041cc57dad3ac40ed6cfcc08f1055638", "node_id": "C_kwDOAAsO6NoAKGJkMGVlYjNmMDQxY2M1N2RhZDNhYzQwZWQ2Y2ZjYzA4ZjEwNTU2Mzg", "commit": {"author": {"name": "Stanislav", "email": "ixentrum@gmail.com", "date": "2022-09-07T00:01:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-07T00:01:06Z"}, "message": "Update crates/ide/src/references.rs\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "c37ab3fb1f674e340379d6f300f4edc534edc8ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c37ab3fb1f674e340379d6f300f4edc534edc8ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd0eeb3f041cc57dad3ac40ed6cfcc08f1055638", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjF99CCRBK7hj4Ov3rIwAAz0gIAD05Qk56EZYCuI74altSLi/J\nEKT2JWsHB612Tuzsr3h0KcHUjs4Vc0yiTM9J1JrHIR6ZYlLSmE9gZOG294wgMWSj\nacBdiMSMhEo/O1YYaD5BfDIIRznKeVNr/fkZpyXi6JT7pBRU82eyTp7R80ZlOwgB\nRYU9KI/DiB+zHQhJj7+xboNkKqDBWOTrPh8+9+6q0DL/njnUtpqIlj9xwPHEW/pz\nObYGztfB208r20ZALy8nRlKI2y6IdfdYCJp71EyoHuWCj3DOL5BVd2lfIj93sF2Z\nvYkpaORoABPPUv/+wN4OKEaN5rKn+onwCbdMDGrJzD6OGZm69ULlMHk3cofJTW0=\n=9+Ki\n-----END PGP SIGNATURE-----\n", "payload": "tree c37ab3fb1f674e340379d6f300f4edc534edc8ac\nparent 6001e7dfb191f68332e2daf2eec692bbc2ae244f\nauthor Stanislav <ixentrum@gmail.com> 1662508866 +0300\ncommitter GitHub <noreply@github.com> 1662508866 +0300\n\nUpdate crates/ide/src/references.rs\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd0eeb3f041cc57dad3ac40ed6cfcc08f1055638", "html_url": "https://github.com/rust-lang/rust/commit/bd0eeb3f041cc57dad3ac40ed6cfcc08f1055638", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd0eeb3f041cc57dad3ac40ed6cfcc08f1055638/comments", "author": {"login": "enomado", "id": 707007, "node_id": "MDQ6VXNlcjcwNzAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/707007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enomado", "html_url": "https://github.com/enomado", "followers_url": "https://api.github.com/users/enomado/followers", "following_url": "https://api.github.com/users/enomado/following{/other_user}", "gists_url": "https://api.github.com/users/enomado/gists{/gist_id}", "starred_url": "https://api.github.com/users/enomado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enomado/subscriptions", "organizations_url": "https://api.github.com/users/enomado/orgs", "repos_url": "https://api.github.com/users/enomado/repos", "events_url": "https://api.github.com/users/enomado/events{/privacy}", "received_events_url": "https://api.github.com/users/enomado/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6001e7dfb191f68332e2daf2eec692bbc2ae244f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6001e7dfb191f68332e2daf2eec692bbc2ae244f", "html_url": "https://github.com/rust-lang/rust/commit/6001e7dfb191f68332e2daf2eec692bbc2ae244f"}], "stats": {"total": 17, "additions": 4, "deletions": 13}, "files": [{"sha": "d4c431f75f70241f3c0dcffe5b1503ebdb38ee5f", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bd0eeb3f041cc57dad3ac40ed6cfcc08f1055638/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd0eeb3f041cc57dad3ac40ed6cfcc08f1055638/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=bd0eeb3f041cc57dad3ac40ed6cfcc08f1055638", "patch": "@@ -116,19 +116,10 @@ pub(crate) fn find_all_refs(\n \n fn retain_import_usages(usages: &mut UsageSearchResult, sema: &Semantics<'_, RootDatabase>) {\n     for (file_id, refs) in &mut usages.references {\n-        refs.retain(|x| {\n-            let file_sema = sema.parse(file_id.clone()).syntax().clone();\n-\n-            let maybe_node = file_sema.child_or_token_at_range(x.range.clone());\n-\n-            if let Some(node) = maybe_node {\n-                let res = match node {\n-                    syntax::NodeOrToken::Node(x) => !matches!(x.kind(), USE),\n-                    syntax::NodeOrToken::Token(_) => true,\n-                };\n-                res\n-            } else {\n-                true\n+        refs.retain(|it| {\n+            match if.name.as_name_ref() {\n+                Some(name_ref) => name_ref.syntax().ancestors().any(|it| !matches(it.kind(), USE)),\n+                None => true,\n             }\n         });\n     }"}]}