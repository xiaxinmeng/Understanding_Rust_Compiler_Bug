{"sha": "ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "node_id": "C_kwDOAAsO6NoAKGZmNjJjM2FjOThlYjg1ODE2MTkwYWZhMWMxZWM1ZDBhZDJlNDQyMzU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-30T01:31:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-30T01:31:55Z"}, "message": "Auto merge of #2289 - RalfJung:rustup, r=RalfJung\n\nrustup", "tree": {"sha": "6073c1cb88e521c4e540a72319819fbd75fff098", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6073c1cb88e521c4e540a72319819fbd75fff098"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "html_url": "https://github.com/rust-lang/rust/commit/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5974e7d4a973983f449702538468ef1a3e3d9407", "url": "https://api.github.com/repos/rust-lang/rust/commits/5974e7d4a973983f449702538468ef1a3e3d9407", "html_url": "https://github.com/rust-lang/rust/commit/5974e7d4a973983f449702538468ef1a3e3d9407"}, {"sha": "a2e61aeeff0b5522eb8929a60326d0191f168f39", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2e61aeeff0b5522eb8929a60326d0191f168f39", "html_url": "https://github.com/rust-lang/rust/commit/a2e61aeeff0b5522eb8929a60326d0191f168f39"}], "stats": {"total": 146, "additions": 73, "deletions": 73}, "files": [{"sha": "1ab8e6b5a8cea3de3b806bdde6bed5eccab715e3", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1 +1 @@\n-ddcbba036aee08f0709f98a92a342a278eae5c05\n+bf45371f262e184b4a77adea88c8ac01ac79759b"}, {"sha": "a3b4021ba0c2a7de6fe4cff4b06fd205a548e126", "filename": "tests/fail/branchless-select-i128-pointer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fbranchless-select-i128-pointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fbranchless-select-i128-pointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fbranchless-select-i128-pointer.rs?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -12,7 +12,7 @@ fn main() {\n         // However, it drops provenance when transmuting to TwoPtrs, so this is UB.\n         let val = unsafe {\n             transmute::<_, &str>(\n-                //~^ ERROR type validation failed: encountered a dangling reference\n+                //~^ ERROR constructing invalid value: encountered a dangling reference\n                 !mask & transmute::<_, TwoPtrs>(\"false !\")\n                     | mask & transmute::<_, TwoPtrs>(\"true !\"),\n             )"}, {"sha": "5cb05f33ddea34d0910cb3479a802a4e6c595f9a", "filename": "tests/fail/branchless-select-i128-pointer.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fbranchless-select-i128-pointer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fbranchless-select-i128-pointer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fbranchless-select-i128-pointer.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,12 +1,12 @@\n-error: Undefined Behavior: type validation failed: encountered a dangling reference (address $HEX is unallocated)\n+error: Undefined Behavior: constructing invalid value: encountered a dangling reference (address $HEX is unallocated)\n   --> $DIR/branchless-select-i128-pointer.rs:LL:CC\n    |\n LL | /             transmute::<_, &str>(\n LL | |\n LL | |                 !mask & transmute::<_, TwoPtrs>(\"false !\")\n LL | |                     | mask & transmute::<_, TwoPtrs>(\"true !\"),\n LL | |             )\n-   | |_____________^ type validation failed: encountered a dangling reference (address $HEX is unallocated)\n+   | |_____________^ constructing invalid value: encountered a dangling reference (address $HEX is unallocated)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "cf692bddaf44db1bbd913149a87cb7a848abc3a0", "filename": "tests/fail/issue-miri-1112.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fissue-miri-1112.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fissue-miri-1112.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fissue-miri-1112.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered invalid drop function pointer in vtable (function has incompatible signature)\n+error: Undefined Behavior: constructing invalid value: encountered invalid drop function pointer in vtable (function has incompatible signature)\n   --> $DIR/issue-miri-1112.rs:LL:CC\n    |\n LL |         let obj = std::mem::transmute::<FatPointer, *mut FunnyPointer>(obj);\n-   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered invalid drop function pointer in vtable (function has incompatible signature)\n+   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered invalid drop function pointer in vtable (function has incompatible signature)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "31c3d5982e5ea3d7fadf01c9c0a7e1f448c9ae58", "filename": "tests/fail/stacked_borrows/vtable.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fstacked_borrows%2Fvtable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fstacked_borrows%2Fvtable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fvtable.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered vtable pointer does not have permission to read drop function pointer\n+error: Undefined Behavior: constructing invalid value: encountered vtable pointer does not have permission to read drop function pointer\n   --> RUSTLIB/core/src/ptr/metadata.rs:LL:CC\n    |\n LL |     unsafe { PtrRepr { components: PtrComponents { data_address, metadata } }.const_ptr }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered vtable pointer does not have permission to read drop function pointer\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered vtable pointer does not have permission to read drop function pointer\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "c1f90c3efb6ebb307c9244160fc01fb3d5637c4a", "filename": "tests/fail/transmute-pair-uninit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Ftransmute-pair-uninit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Ftransmute-pair-uninit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ftransmute-pair-uninit.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered uninitialized bytes, but expected initialized bytes\n+error: Undefined Behavior: constructing invalid value: encountered uninitialized bytes, but expected initialized bytes\n   --> $DIR/transmute-pair-uninit.rs:LL:CC\n    |\n LL |     let v = unsafe { *z.offset(first_undef) };\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered uninitialized bytes, but expected initialized bytes\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered uninitialized bytes, but expected initialized bytes\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "a60efb98f9d871666333381f0d2c9ce8f03464aa", "filename": "tests/fail/transmute_fat1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Ftransmute_fat1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Ftransmute_fat1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ftransmute_fat1.rs?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -7,7 +7,7 @@ const N: usize = 8;\n fn main() {\n     let bad = unsafe {\n         std::mem::transmute::<&[u8], [u8; N]>(&[1u8])\n-        //~^ ERROR: type validation failed: encountered a pointer\n+        //~^ ERROR: constructing invalid value: encountered a pointer\n     };\n     let _val = bad[0] + bad[bad.len() - 1];\n }"}, {"sha": "6263427bac5ba6b5bcf5a4c23f27df606cd33ea7", "filename": "tests/fail/transmute_fat1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Ftransmute_fat1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Ftransmute_fat1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ftransmute_fat1.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered a pointer, but expected plain (non-pointer) bytes\n+error: Undefined Behavior: constructing invalid value: encountered a pointer, but expected plain (non-pointer) bytes\n   --> $DIR/transmute_fat1.rs:LL:CC\n    |\n LL |         std::mem::transmute::<&[u8], [u8; N]>(&[1u8])\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a pointer, but expected plain (non-pointer) bytes\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered a pointer, but expected plain (non-pointer) bytes\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "d15b10dc6ed09ddaf39003c97ed3f705a152c368", "filename": "tests/fail/uninit_byte_read.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Funinit_byte_read.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Funinit_byte_read.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Funinit_byte_read.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered uninitialized bytes, but expected initialized bytes\n+error: Undefined Behavior: constructing invalid value: encountered uninitialized bytes, but expected initialized bytes\n   --> $DIR/uninit_byte_read.rs:LL:CC\n    |\n LL |     let undef = unsafe { *v.get_unchecked(5) };\n-   |                          ^^^^^^^^^^^^^^^^^^^ type validation failed: encountered uninitialized bytes, but expected initialized bytes\n+   |                          ^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered uninitialized bytes, but expected initialized bytes\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "c2ede1bb146ad968f8aa8d6aed9892d8add459d1", "filename": "tests/fail/uninit_raw_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Funinit_raw_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Funinit_raw_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Funinit_raw_ptr.rs?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,4 +1,4 @@\n fn main() {\n     let _val = unsafe { std::mem::MaybeUninit::<*const u8>::uninit().assume_init() };\n-    //~^ ERROR type validation failed at .value: encountered uninitialized raw pointer\n+    //~^ ERROR constructing invalid value at .value: encountered uninitialized raw pointer\n }"}, {"sha": "c76f59e13e7f50990edd1e5fc0837894ba25b477", "filename": "tests/fail/uninit_raw_ptr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Funinit_raw_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Funinit_raw_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Funinit_raw_ptr.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed at .value: encountered uninitialized raw pointer\n+error: Undefined Behavior: constructing invalid value at .value: encountered uninitialized raw pointer\n   --> $DIR/uninit_raw_ptr.rs:LL:CC\n    |\n LL |     let _val = unsafe { std::mem::MaybeUninit::<*const u8>::uninit().assume_init() };\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .value: encountered uninitialized raw pointer\n+   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .value: encountered uninitialized raw pointer\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "05c75ac1338618613d66bf367c7d8988d807f350", "filename": "tests/fail/validity/cast_fn_ptr1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fcast_fn_ptr1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fcast_fn_ptr1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Fcast_fn_ptr1.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered a null reference\n+error: Undefined Behavior: constructing invalid value: encountered a null reference\n   --> $DIR/cast_fn_ptr1.rs:LL:CC\n    |\n LL |     g(0usize as *const i32)\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a null reference\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered a null reference\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "8bee099caf3bf72290e4dd67f426d65bcc6384f6", "filename": "tests/fail/validity/cast_fn_ptr2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fcast_fn_ptr2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fcast_fn_ptr2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Fcast_fn_ptr2.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered a null reference\n+error: Undefined Behavior: constructing invalid value: encountered a null reference\n   --> $DIR/cast_fn_ptr2.rs:LL:CC\n    |\n LL |     let _x = g();\n-   |              ^^^ type validation failed: encountered a null reference\n+   |              ^^^ constructing invalid value: encountered a null reference\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "290963c6d4ee66b5a19150fb96dad7ffbb8c8565", "filename": "tests/fail/validity/dangling_ref1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fdangling_ref1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fdangling_ref1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Fdangling_ref1.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered a dangling reference (address 0x10 is unallocated)\n+error: Undefined Behavior: constructing invalid value: encountered a dangling reference (address 0x10 is unallocated)\n   --> $DIR/dangling_ref1.rs:LL:CC\n    |\n LL |     let _x: &i32 = unsafe { mem::transmute(16usize) };\n-   |                             ^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a dangling reference (address 0x10 is unallocated)\n+   |                             ^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered a dangling reference (address 0x10 is unallocated)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "ce60f973ffe88962f2bae8fb6afaf40b3f116293", "filename": "tests/fail/validity/dangling_ref2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fdangling_ref2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fdangling_ref2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Fdangling_ref2.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered a dangling reference (going beyond the bounds of its allocation)\n+error: Undefined Behavior: constructing invalid value: encountered a dangling reference (going beyond the bounds of its allocation)\n   --> $DIR/dangling_ref2.rs:LL:CC\n    |\n LL |     let _x: &i32 = unsafe { mem::transmute(ptr) };\n-   |                             ^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a dangling reference (going beyond the bounds of its allocation)\n+   |                             ^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered a dangling reference (going beyond the bounds of its allocation)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "aa25f16560863b8e7e5e91031c314467899428bd", "filename": "tests/fail/validity/dangling_ref3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fdangling_ref3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fdangling_ref3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Fdangling_ref3.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered a dangling reference (use-after-free)\n+error: Undefined Behavior: constructing invalid value: encountered a dangling reference (use-after-free)\n   --> $DIR/dangling_ref3.rs:LL:CC\n    |\n LL |     let _x: &i32 = unsafe { mem::transmute(dangling()) };\n-   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a dangling reference (use-after-free)\n+   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered a dangling reference (use-after-free)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "756c094d6e86616838ba0d0f04d55950ee4c7142", "filename": "tests/fail/validity/invalid_bool.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Finvalid_bool.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered 0x02, but expected a boolean\n+error: Undefined Behavior: constructing invalid value: encountered 0x02, but expected a boolean\n   --> $DIR/invalid_bool.rs:LL:CC\n    |\n LL |     let _b = unsafe { std::mem::transmute::<u8, bool>(2) };\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 0x02, but expected a boolean\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered 0x02, but expected a boolean\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "5236cab450b6882679c0f2118f9f98485f31c766", "filename": "tests/fail/validity/invalid_bool_uninit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_bool_uninit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_bool_uninit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Finvalid_bool_uninit.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered uninitialized bytes, but expected a boolean\n+error: Undefined Behavior: constructing invalid value: encountered uninitialized bytes, but expected a boolean\n   --> $DIR/invalid_bool_uninit.rs:LL:CC\n    |\n LL |     let _b = unsafe { MyUninit { init: () }.uninit };\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered uninitialized bytes, but expected a boolean\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered uninitialized bytes, but expected a boolean\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "538af4aefcab920e0269bee804d7cdfef2906662", "filename": "tests/fail/validity/invalid_char.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_char.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_char.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Finvalid_char.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered $HEX, but expected a valid unicode scalar value (in `0..=$HEX` but not in `$HEX..=$HEX`)\n+error: Undefined Behavior: constructing invalid value: encountered $HEX, but expected a valid unicode scalar value (in `0..=$HEX` but not in `$HEX..=$HEX`)\n   --> $DIR/invalid_char.rs:LL:CC\n    |\n LL |     let _val = match unsafe { std::mem::transmute::<i32, char>(-1) } {\n-   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered $HEX, but expected a valid unicode scalar value (in `0..=$HEX` but not in `$HEX..=$HEX`)\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered $HEX, but expected a valid unicode scalar value (in `0..=$HEX` but not in `$HEX..=$HEX`)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "12bc0faa5135b047fe489932ca659b4afad919f2", "filename": "tests/fail/validity/invalid_char_uninit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_char_uninit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_char_uninit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Finvalid_char_uninit.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered uninitialized bytes, but expected a valid unicode scalar value (in `0..=$HEX` but not in `$HEX..=$HEX`)\n+error: Undefined Behavior: constructing invalid value: encountered uninitialized bytes, but expected a valid unicode scalar value (in `0..=$HEX` but not in `$HEX..=$HEX`)\n   --> $DIR/invalid_char_uninit.rs:LL:CC\n    |\n LL |     let _b = unsafe { MyUninit { init: () }.uninit };\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered uninitialized bytes, but expected a valid unicode scalar value (in `0..=$HEX` but not in `$HEX..=$HEX`)\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered uninitialized bytes, but expected a valid unicode scalar value (in `0..=$HEX` but not in `$HEX..=$HEX`)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "4bc60ba51e70c0a057ae60c69e48892a530fef30", "filename": "tests/fail/validity/invalid_enum_tag.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_enum_tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_enum_tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Finvalid_enum_tag.rs?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -7,5 +7,5 @@ pub enum Foo {\n }\n \n fn main() {\n-    let _f = unsafe { std::mem::transmute::<i32, Foo>(42) }; //~ ERROR type validation failed at .<enum-tag>: encountered 0x0000002a, but expected a valid enum tag\n+    let _f = unsafe { std::mem::transmute::<i32, Foo>(42) }; //~ ERROR constructing invalid value at .<enum-tag>: encountered 0x0000002a, but expected a valid enum tag\n }"}, {"sha": "c7014ae71ac226d9841ca797c2fcaee5cf80cb0a", "filename": "tests/fail/validity/invalid_enum_tag.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_enum_tag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_enum_tag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Finvalid_enum_tag.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed at .<enum-tag>: encountered $HEX, but expected a valid enum tag\n+error: Undefined Behavior: constructing invalid value at .<enum-tag>: encountered $HEX, but expected a valid enum tag\n   --> $DIR/invalid_enum_tag.rs:LL:CC\n    |\n-LL | ... { std::mem::transmute::<i32, Foo>(42) };\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .<enum-tag>: encountered $HEX, but expected a valid enum tag\n+LL |     let _f = unsafe { std::mem::transmute::<i32, Foo>(42) };\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .<enum-tag>: encountered $HEX, but expected a valid enum tag\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "7573a64d0eba811781f1e0bf94de448515539f7f", "filename": "tests/fail/validity/invalid_enum_tag_256variants_uninit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.rs?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -268,5 +268,5 @@ union MyUninit {\n }\n \n fn main() {\n-    let _a = unsafe { MyUninit { init: () }.uninit }; //~ ERROR type validation failed at .<enum-tag>: encountered uninitialized bytes, but expected a valid enum tag\n+    let _a = unsafe { MyUninit { init: () }.uninit }; //~ ERROR constructing invalid value at .<enum-tag>: encountered uninitialized bytes, but expected a valid enum tag\n }"}, {"sha": "c9fd312a96ce5c2c115e72231484880d9c7e4cc8", "filename": "tests/fail/validity/invalid_enum_tag_256variants_uninit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,9 +1,9 @@\n WARNING: `-Zmiri-allow-uninit-numbers` is deprecated and planned to be removed. Please let us know at <https://github.com/rust-lang/miri/issues/2187> if you rely on this flag.\n-error: Undefined Behavior: type validation failed at .<enum-tag>: encountered uninitialized bytes, but expected a valid enum tag\n+error: Undefined Behavior: constructing invalid value at .<enum-tag>: encountered uninitialized bytes, but expected a valid enum tag\n   --> $DIR/invalid_enum_tag_256variants_uninit.rs:LL:CC\n    |\n LL |     let _a = unsafe { MyUninit { init: () }.uninit };\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .<enum-tag>: encountered uninitialized bytes, but expected a valid enum tag\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .<enum-tag>: encountered uninitialized bytes, but expected a valid enum tag\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "13e8957e615ff3959d3cb9fca9e95beb96dab293", "filename": "tests/fail/validity/invalid_fnptr_null.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_fnptr_null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_fnptr_null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Finvalid_fnptr_null.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered a null function pointer\n+error: Undefined Behavior: constructing invalid value: encountered a null function pointer\n   --> $DIR/invalid_fnptr_null.rs:LL:CC\n    |\n LL |     let _b: fn() = unsafe { std::mem::transmute(0usize) };\n-   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a null function pointer\n+   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered a null function pointer\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "b64655fa8189715ac2e1daf320c8a03cf5f39257", "filename": "tests/fail/validity/invalid_fnptr_uninit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_fnptr_uninit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_fnptr_uninit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Finvalid_fnptr_uninit.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered uninitialized bytes, but expected a proper pointer or integer value\n+error: Undefined Behavior: constructing invalid value: encountered uninitialized bytes, but expected a proper pointer or integer value\n   --> $DIR/invalid_fnptr_uninit.rs:LL:CC\n    |\n LL |     let _b = unsafe { MyUninit { init: () }.uninit };\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered uninitialized bytes, but expected a proper pointer or integer value\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered uninitialized bytes, but expected a proper pointer or integer value\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "633f8f8adbc23623aa1457705223c61a47ada273", "filename": "tests/fail/validity/invalid_wide_raw.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_wide_raw.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Finvalid_wide_raw.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Finvalid_wide_raw.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered dangling vtable pointer in wide pointer\n+error: Undefined Behavior: constructing invalid value: encountered dangling vtable pointer in wide pointer\n   --> $DIR/invalid_wide_raw.rs:LL:CC\n    |\n LL |     dbg!(S { x: unsafe { std::mem::transmute((0usize, 0usize)) } });\n-   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered dangling vtable pointer in wide pointer\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered dangling vtable pointer in wide pointer\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "0c6a2417230719241660fd25f16c4583b79eccf7", "filename": "tests/fail/validity/nonzero.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fnonzero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fnonzero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Fnonzero.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered 0, but expected something greater or equal to 1\n+error: Undefined Behavior: constructing invalid value: encountered 0, but expected something greater or equal to 1\n   --> $DIR/nonzero.rs:LL:CC\n    |\n LL |     let _x = Some(unsafe { NonZero(0) });\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 0, but expected something greater or equal to 1\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered 0, but expected something greater or equal to 1\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "39b4ebfc8f132a4f3f5ad4cdcb5b9ee27f07070e", "filename": "tests/fail/validity/ptr_integer_array_transmute.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fptr_integer_array_transmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fptr_integer_array_transmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Fptr_integer_array_transmute.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered a pointer, but expected plain (non-pointer) bytes\n+error: Undefined Behavior: constructing invalid value: encountered a pointer, but expected plain (non-pointer) bytes\n   --> $DIR/ptr_integer_array_transmute.rs:LL:CC\n    |\n LL |     let _i: [usize; 1] = unsafe { std::mem::transmute(r) };\n-   |                                   ^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered a pointer, but expected plain (non-pointer) bytes\n+   |                                   ^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered a pointer, but expected plain (non-pointer) bytes\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "526b6a4dc2515c0d56d9699774b6d6248225a93c", "filename": "tests/fail/validity/ref_to_uninhabited1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fref_to_uninhabited1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fref_to_uninhabited1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Fref_to_uninhabited1.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered a box pointing to uninhabited type !\n+error: Undefined Behavior: constructing invalid value: encountered a box pointing to uninhabited type !\n   --> $DIR/ref_to_uninhabited1.rs:LL:CC\n    |\n LL |         let x: Box<!> = transmute(&mut 42);\n-   |                         ^^^^^^^^^^^^^^^^^^ type validation failed: encountered a box pointing to uninhabited type !\n+   |                         ^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered a box pointing to uninhabited type !\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "297b0540ab014bf7aee28bb7831e1d4d9bbc6144", "filename": "tests/fail/validity/ref_to_uninhabited2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fref_to_uninhabited2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Fref_to_uninhabited2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Fref_to_uninhabited2.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered a reference pointing to uninhabited type (i32, Void)\n+error: Undefined Behavior: constructing invalid value: encountered a reference pointing to uninhabited type (i32, Void)\n   --> $DIR/ref_to_uninhabited2.rs:LL:CC\n    |\n LL |         let _x: &(i32, Void) = transmute(&42);\n-   |                                ^^^^^^^^^^^^^^ type validation failed: encountered a reference pointing to uninhabited type (i32, Void)\n+   |                                ^^^^^^^^^^^^^^ constructing invalid value: encountered a reference pointing to uninhabited type (i32, Void)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "52077f16a1c8cbc15b99b212a7b4b5f3ac39c864", "filename": "tests/fail/validity/too-big-slice.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Ftoo-big-slice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Ftoo-big-slice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Ftoo-big-slice.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered invalid reference metadata: slice is bigger than largest supported object\n+error: Undefined Behavior: constructing invalid value: encountered invalid reference metadata: slice is bigger than largest supported object\n   --> $DIR/too-big-slice.rs:LL:CC\n    |\n LL |         let _x: &[u8] = mem::transmute((ptr, usize::MAX));\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered invalid reference metadata: slice is bigger than largest supported object\n+   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered invalid reference metadata: slice is bigger than largest supported object\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "a20f1de6d57dc3a99194a7061481a9441f0ef5ae", "filename": "tests/fail/validity/too-big-unsized.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Ftoo-big-unsized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Ftoo-big-unsized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Ftoo-big-unsized.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed: encountered invalid reference metadata: total size is bigger than largest supported object\n+error: Undefined Behavior: constructing invalid value: encountered invalid reference metadata: total size is bigger than largest supported object\n   --> $DIR/too-big-unsized.rs:LL:CC\n    |\n LL |         let _x: &MySlice = mem::transmute((ptr, isize::MAX as usize));\n-   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered invalid reference metadata: total size is bigger than largest supported object\n+   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered invalid reference metadata: total size is bigger than largest supported object\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "9db2ba9953044fb37793c71bc858dbc6ed9d7d37", "filename": "tests/fail/validity/transmute_through_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Ftransmute_through_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Ftransmute_through_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Ftransmute_through_ptr.rs?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -14,6 +14,6 @@ fn main() {\n     let mut x = Bool::True;\n     evil(&mut x);\n     let y = x; // reading this ought to be enough to trigger validation\n-    //~^ ERROR type validation failed at .<enum-tag>: encountered 0x0000002c, but expected a valid enum tag\n+    //~^ ERROR constructing invalid value at .<enum-tag>: encountered 0x0000002c, but expected a valid enum tag\n     println!(\"{:?}\", y); // make sure it is used (and not optimized away)\n }"}, {"sha": "50f699d7f9b52207d598c52278d6f1d7269f9c6c", "filename": "tests/fail/validity/transmute_through_ptr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Ftransmute_through_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Ftransmute_through_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Ftransmute_through_ptr.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed at .<enum-tag>: encountered $HEX, but expected a valid enum tag\n+error: Undefined Behavior: constructing invalid value at .<enum-tag>: encountered $HEX, but expected a valid enum tag\n   --> $DIR/transmute_through_ptr.rs:LL:CC\n    |\n LL |     let y = x; // reading this ought to be enough to trigger validation\n-   |             ^ type validation failed at .<enum-tag>: encountered $HEX, but expected a valid enum tag\n+   |             ^ constructing invalid value at .<enum-tag>: encountered $HEX, but expected a valid enum tag\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "43748570d9a495f9192d8d41e4e60c82c8e6fe98", "filename": "tests/fail/validity/uninit_float.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Funinit_float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Funinit_float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Funinit_float.rs?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -2,5 +2,5 @@\n \n fn main() {\n     let _val = unsafe { std::mem::MaybeUninit::<f32>::uninit().assume_init() };\n-    //~^ ERROR type validation failed at .value: encountered uninitialized bytes, but expected initialized bytes\n+    //~^ ERROR constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n }"}, {"sha": "946897bd4ea6fea411515356e89891cb39c980e2", "filename": "tests/fail/validity/uninit_float.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Funinit_float.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Funinit_float.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Funinit_float.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed at .value: encountered uninitialized bytes, but expected initialized bytes\n+error: Undefined Behavior: constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n   --> $DIR/uninit_float.rs:LL:CC\n    |\n LL |     let _val = unsafe { std::mem::MaybeUninit::<f32>::uninit().assume_init() };\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .value: encountered uninitialized bytes, but expected initialized bytes\n+   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "b5a367ba8cb7039089e85c03323ed3c4aa7181d9", "filename": "tests/fail/validity/uninit_integer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Funinit_integer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Funinit_integer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Funinit_integer.rs?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -2,5 +2,5 @@\n \n fn main() {\n     let _val = unsafe { std::mem::MaybeUninit::<usize>::uninit().assume_init() };\n-    //~^ ERROR type validation failed at .value: encountered uninitialized bytes, but expected initialized bytes\n+    //~^ ERROR constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n }"}, {"sha": "7e9d38a4b7bb937597f3cacb40228f02db77ca6d", "filename": "tests/fail/validity/uninit_integer.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Funinit_integer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Funinit_integer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Funinit_integer.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed at .value: encountered uninitialized bytes, but expected initialized bytes\n+error: Undefined Behavior: constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n   --> $DIR/uninit_integer.rs:LL:CC\n    |\n LL |     let _val = unsafe { std::mem::MaybeUninit::<usize>::uninit().assume_init() };\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .value: encountered uninitialized bytes, but expected initialized bytes\n+   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "609bad7e4fb68e0e84a81f526e35639ac8e6d826", "filename": "tests/fail/validity/uninit_integer_signed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Funinit_integer_signed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Funinit_integer_signed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Funinit_integer_signed.rs?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -2,5 +2,5 @@\n \n fn main() {\n     let _val = unsafe { std::mem::MaybeUninit::<i32>::uninit().assume_init() };\n-    //~^ ERROR type validation failed at .value: encountered uninitialized bytes, but expected initialized bytes\n+    //~^ ERROR constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n }"}, {"sha": "bd8ea42c3a4351677afafc58287bad9e239d1cf0", "filename": "tests/fail/validity/uninit_integer_signed.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Funinit_integer_signed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff62c3ac98eb85816190afa1c1ec5d0ad2e44235/tests%2Ffail%2Fvalidity%2Funinit_integer_signed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fvalidity%2Funinit_integer_signed.stderr?ref=ff62c3ac98eb85816190afa1c1ec5d0ad2e44235", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: type validation failed at .value: encountered uninitialized bytes, but expected initialized bytes\n+error: Undefined Behavior: constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n   --> $DIR/uninit_integer_signed.rs:LL:CC\n    |\n LL |     let _val = unsafe { std::mem::MaybeUninit::<i32>::uninit().assume_init() };\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .value: encountered uninitialized bytes, but expected initialized bytes\n+   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .value: encountered uninitialized bytes, but expected initialized bytes\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}]}