{"sha": "455d73cb861bb0aca989fc8aca19c025ebf6f4ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NWQ3M2NiODYxYmIwYWNhOTg5ZmM4YWNhMTljMDI1ZWJmNmY0ZWQ=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-11-24T22:11:31Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-11-24T22:39:21Z"}, "message": "[libs] Remove unread_byte method from core::io::Reader\n\nMethod isn't used. See discussion on #2738 and #4031\n\nCloses #2738", "tree": {"sha": "15b8e1b386a7622372e82131f8372cb416a9b9aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15b8e1b386a7622372e82131f8372cb416a9b9aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/455d73cb861bb0aca989fc8aca19c025ebf6f4ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/455d73cb861bb0aca989fc8aca19c025ebf6f4ed", "html_url": "https://github.com/rust-lang/rust/commit/455d73cb861bb0aca989fc8aca19c025ebf6f4ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/455d73cb861bb0aca989fc8aca19c025ebf6f4ed/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa66f3ec18a136addc71fd82300febdd6cf787e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa66f3ec18a136addc71fd82300febdd6cf787e9", "html_url": "https://github.com/rust-lang/rust/commit/fa66f3ec18a136addc71fd82300febdd6cf787e9"}], "stats": {"total": 7, "additions": 0, "deletions": 7}, "files": [{"sha": "fc9b9a4e889191183b4a19773a2631e04a631357", "filename": "src/libcore/io.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/455d73cb861bb0aca989fc8aca19c025ebf6f4ed/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d73cb861bb0aca989fc8aca19c025ebf6f4ed/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=455d73cb861bb0aca989fc8aca19c025ebf6f4ed", "patch": "@@ -44,9 +44,6 @@ pub trait Reader {\n     /// Read a single byte, returning a negative value for EOF or read error.\n     fn read_byte() -> int;\n \n-    /// Behaves like the libc function ungetc.\n-    fn unread_byte(int);\n-\n     /// Return whether the stream is currently at EOF position.\n     fn eof() -> bool;\n \n@@ -413,7 +410,6 @@ impl *libc::FILE: Reader {\n         }\n     }\n     fn read_byte() -> int { return libc::fgetc(self) as int; }\n-    fn unread_byte(byte: int) { libc::ungetc(byte as c_int, self); }\n     fn eof() -> bool { return libc::feof(self) != 0 as c_int; }\n     fn seek(offset: int, whence: SeekStyle) {\n         assert libc::fseek(self, offset as c_long, convert_whence(whence))\n@@ -430,7 +426,6 @@ impl<T: Reader, C> {base: T, cleanup: C}: Reader {\n         self.base.read(bytes, len)\n     }\n     fn read_byte() -> int { self.base.read_byte() }\n-    fn unread_byte(byte: int) { self.base.unread_byte(byte); }\n     fn eof() -> bool { self.base.eof() }\n     fn seek(off: int, whence: SeekStyle) { self.base.seek(off, whence) }\n     fn tell() -> uint { self.base.tell() }\n@@ -498,8 +493,6 @@ impl BytesReader: Reader {\n         self.pos += 1u;\n         return b as int;\n     }\n-    // FIXME (#2738): implement this\n-    fn unread_byte(_byte: int) { error!(\"Unimplemented: unread_byte\"); fail; }\n     fn eof() -> bool { self.pos == self.bytes.len() }\n     fn seek(offset: int, whence: SeekStyle) {\n         let pos = self.pos;"}]}