{"sha": "283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4M2Q0YzRkMTQ4YzhjNTNhOGIxOTdjNGZmMGE5Zjc5YTE2OTBlYjI=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-09-10T20:20:05Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-09-10T20:20:05Z"}, "message": "Ignore `|` and `+` tokens during proc-macro pretty-print check\n\nFixes #76182\n\nThis is an alternative to PR #76188\n\nThese tokens are not preserved in the AST in certain cases\n(e.g. a leading `|` in a pattern or a trailing `+` in a trait bound).\n\nThis PR ignores them entirely during the pretty-print/reparse check\nto avoid spuriously using the re-parsed tokenstream.", "tree": {"sha": "dde142ec298203e3bcd27687af7974f4634f345b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dde142ec298203e3bcd27687af7974f4634f345b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl9ai1UACgkQtAh+UQ6Y\nsWTgNA//RHnASkhF0Ym2yXkIO4Km0XrDVURFBd/7XS2GrrBwx0g73Ghuk8LgckuQ\nXAZKbz//P5YBkQr9cUpIAXtdL9rH2P0s9Xy0PW1gHUWOoDkXDlVHVfmOT9f8vx1R\ntwNvTkjZHH+69p1knH3boyj6EgtdK6aV2qy3fAjVVKwof1IqLRawk+g553NKNPQr\njWVY6o6guK0yY8DBf822w+56HWr1OZZIaoIAp7Nrkubl4QXRF/3hsgHTAiIA/bA5\niff3w9kcn3W0egZVLWMbXKHPgvcxT0svQFrutmIeBHjmXv/SSuaLp0YZ6PrkQ1Uw\nDk1+Rg57QNE2pKmrUWNmGgsxcGQsc81PFW292oDI0bcKTl/SHoKqYbBQgHCnE21C\nApf9gpqVqLAu5gtyPbJ2qQpKfaEm1li2Q8K+WT18bVWF8WUOeJCmYG4ncjqJr//b\nJ7R7ncPq4juFl0s9vcvxWOmoLX/K5sXoKE7S/j8yAfaEnk5B5i8v5mCyqq4x77UU\nbhcmoEbUtOGR3Fe4ME/P4NKF3sVKRq1QiiGxTAecon+pwXP2hkdUz6i11tUI8rh2\nwLsj2FHuuGreutm+MrOFdS4fnsiTPmjqdUvTwbiuhfZh5qsd4trKYLsAumUJ4aKc\nGDjkyWPIJiJb9Iag0X7+Jqcxr7INLZFAzadw8pmMgqr7Jtx6tUs=\n=w3ee\n-----END PGP SIGNATURE-----", "payload": "tree dde142ec298203e3bcd27687af7974f4634f345b\nparent 8c35a9279ca50d3e5a6f33d80a7191454fd89cbe\nauthor Aaron Hill <aa1ronham@gmail.com> 1599769205 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1599769205 -0400\n\nIgnore `|` and `+` tokens during proc-macro pretty-print check\n\nFixes #76182\n\nThis is an alternative to PR #76188\n\nThese tokens are not preserved in the AST in certain cases\n(e.g. a leading `|` in a pattern or a trailing `+` in a trait bound).\n\nThis PR ignores them entirely during the pretty-print/reparse check\nto avoid spuriously using the re-parsed tokenstream.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2", "html_url": "https://github.com/rust-lang/rust/commit/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c35a9279ca50d3e5a6f33d80a7191454fd89cbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c35a9279ca50d3e5a6f33d80a7191454fd89cbe", "html_url": "https://github.com/rust-lang/rust/commit/8c35a9279ca50d3e5a6f33d80a7191454fd89cbe"}], "stats": {"total": 155, "additions": 155, "deletions": 0}, "files": [{"sha": "0f6a111ad7018675b2fa02ec7e91a584b9037fe9", "filename": "compiler/rustc_parse/src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2/compiler%2Frustc_parse%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2/compiler%2Frustc_parse%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flib.rs?ref=283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2", "patch": "@@ -353,6 +353,12 @@ pub fn tokenstream_probably_equal_for_proc_macro(\n                 | token::CloseDelim(DelimToken::NoDelim)\n                 // The pretty printer collapses many semicolons into one.\n                 | token::Semi\n+                // We don't preserve leading `|` tokens in patterns, so\n+                // we ignore them entirely\n+                | token::BinOp(token::BinOpToken::Or)\n+                // We don't preserve trailing '+' tokens in trait bounds,\n+                // so we ignore them entirely\n+                | token::BinOp(token::BinOpToken::Plus)\n                 // The pretty printer can turn `$crate` into `::crate_name`\n                 | token::ModSep = token.kind {\n                 return false;"}, {"sha": "7d31de1d22df2f40db3e769855255c575be21132", "filename": "src/test/ui/proc-macro/issue-76182-leading-vert-pat.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76182-leading-vert-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76182-leading-vert-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76182-leading-vert-pat.rs?ref=283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2", "patch": "@@ -0,0 +1,16 @@\n+// check-pass\n+// aux-build:test-macros.rs\n+// compile-flags: -Z span-debug\n+//\n+// Regression test for issue #76182\n+// Tests that we properly handle patterns with a leading vert\n+\n+#![no_std] // Don't load unnecessary hygiene information from std\n+extern crate std;\n+\n+extern crate test_macros;\n+\n+#[test_macros::print_attr]\n+fn main() {\n+    match () { | () => () }\n+}"}, {"sha": "5493f9c7b606bf57e3cffc3e6b8e92ca93f8e343", "filename": "src/test/ui/proc-macro/issue-76182-leading-vert-pat.stdout", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76182-leading-vert-pat.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76182-leading-vert-pat.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76182-leading-vert-pat.stdout?ref=283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2", "patch": "@@ -0,0 +1,62 @@\n+PRINT-ATTR INPUT (DISPLAY): fn main() { match() { | () => () } }\n+PRINT-ATTR INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"fn\",\n+        span: $DIR/issue-76182-leading-vert-pat.rs:14:1: 14:3 (#0),\n+    },\n+    Ident {\n+        ident: \"main\",\n+        span: $DIR/issue-76182-leading-vert-pat.rs:14:4: 14:8 (#0),\n+    },\n+    Group {\n+        delimiter: Parenthesis,\n+        stream: TokenStream [],\n+        span: $DIR/issue-76182-leading-vert-pat.rs:14:8: 14:10 (#0),\n+    },\n+    Group {\n+        delimiter: Brace,\n+        stream: TokenStream [\n+            Ident {\n+                ident: \"match\",\n+                span: $DIR/issue-76182-leading-vert-pat.rs:15:5: 15:10 (#0),\n+            },\n+            Group {\n+                delimiter: Parenthesis,\n+                stream: TokenStream [],\n+                span: $DIR/issue-76182-leading-vert-pat.rs:15:11: 15:13 (#0),\n+            },\n+            Group {\n+                delimiter: Brace,\n+                stream: TokenStream [\n+                    Punct {\n+                        ch: '|',\n+                        spacing: Alone,\n+                        span: $DIR/issue-76182-leading-vert-pat.rs:15:16: 15:17 (#0),\n+                    },\n+                    Group {\n+                        delimiter: Parenthesis,\n+                        stream: TokenStream [],\n+                        span: $DIR/issue-76182-leading-vert-pat.rs:15:18: 15:20 (#0),\n+                    },\n+                    Punct {\n+                        ch: '=',\n+                        spacing: Joint,\n+                        span: $DIR/issue-76182-leading-vert-pat.rs:15:21: 15:23 (#0),\n+                    },\n+                    Punct {\n+                        ch: '>',\n+                        spacing: Alone,\n+                        span: $DIR/issue-76182-leading-vert-pat.rs:15:21: 15:23 (#0),\n+                    },\n+                    Group {\n+                        delimiter: Parenthesis,\n+                        stream: TokenStream [],\n+                        span: $DIR/issue-76182-leading-vert-pat.rs:15:24: 15:26 (#0),\n+                    },\n+                ],\n+                span: $DIR/issue-76182-leading-vert-pat.rs:15:14: 15:28 (#0),\n+            },\n+        ],\n+        span: $DIR/issue-76182-leading-vert-pat.rs:14:11: 16:2 (#0),\n+    },\n+]"}, {"sha": "4f61de47d85459a525934983f99366ddbf4abdb9", "filename": "src/test/ui/proc-macro/trailing-plus.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2/src%2Ftest%2Fui%2Fproc-macro%2Ftrailing-plus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2/src%2Ftest%2Fui%2Fproc-macro%2Ftrailing-plus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Ftrailing-plus.rs?ref=283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2", "patch": "@@ -0,0 +1,14 @@\n+// check-pass\n+// aux-build:test-macros.rs\n+// compile-flags: -Z span-debug\n+\n+#![no_std] // Don't load unnecessary hygiene information from std\n+extern crate std;\n+\n+extern crate test_macros;\n+\n+#[test_macros::print_attr]\n+fn foo<T>() where T: Copy + {\n+}\n+\n+fn main() {}"}, {"sha": "d60f400af2bb9c06839d35949056310cdf262a81", "filename": "src/test/ui/proc-macro/trailing-plus.stdout", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2/src%2Ftest%2Fui%2Fproc-macro%2Ftrailing-plus.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2/src%2Ftest%2Fui%2Fproc-macro%2Ftrailing-plus.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Ftrailing-plus.stdout?ref=283d4c4d148c8c53a8b197c4ff0a9f79a1690eb2", "patch": "@@ -0,0 +1,57 @@\n+PRINT-ATTR INPUT (DISPLAY): fn foo < T > () where T : Copy + { }\n+PRINT-ATTR INPUT (DEBUG): TokenStream [\n+    Ident {\n+        ident: \"fn\",\n+        span: $DIR/trailing-plus.rs:11:1: 11:3 (#0),\n+    },\n+    Ident {\n+        ident: \"foo\",\n+        span: $DIR/trailing-plus.rs:11:4: 11:7 (#0),\n+    },\n+    Punct {\n+        ch: '<',\n+        spacing: Alone,\n+        span: $DIR/trailing-plus.rs:11:7: 11:8 (#0),\n+    },\n+    Ident {\n+        ident: \"T\",\n+        span: $DIR/trailing-plus.rs:11:8: 11:9 (#0),\n+    },\n+    Punct {\n+        ch: '>',\n+        spacing: Alone,\n+        span: $DIR/trailing-plus.rs:11:9: 11:10 (#0),\n+    },\n+    Group {\n+        delimiter: Parenthesis,\n+        stream: TokenStream [],\n+        span: $DIR/trailing-plus.rs:11:10: 11:12 (#0),\n+    },\n+    Ident {\n+        ident: \"where\",\n+        span: $DIR/trailing-plus.rs:11:13: 11:18 (#0),\n+    },\n+    Ident {\n+        ident: \"T\",\n+        span: $DIR/trailing-plus.rs:11:19: 11:20 (#0),\n+    },\n+    Punct {\n+        ch: ':',\n+        spacing: Alone,\n+        span: $DIR/trailing-plus.rs:11:20: 11:21 (#0),\n+    },\n+    Ident {\n+        ident: \"Copy\",\n+        span: $DIR/trailing-plus.rs:11:22: 11:26 (#0),\n+    },\n+    Punct {\n+        ch: '+',\n+        spacing: Alone,\n+        span: $DIR/trailing-plus.rs:11:27: 11:28 (#0),\n+    },\n+    Group {\n+        delimiter: Brace,\n+        stream: TokenStream [],\n+        span: $DIR/trailing-plus.rs:11:29: 12:2 (#0),\n+    },\n+]"}]}