{"sha": "2807f4f773ac3e56849474085a8203261b49c556", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MDdmNGY3NzNhYzNlNTY4NDk0NzQwODVhODIwMzI2MWI0OWM1NTY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-03-31T21:06:26Z"}, "committer": {"name": "Anthony Ramine", "email": "n.oxyde@gmail.com", "date": "2018-04-26T13:07:04Z"}, "message": "Properly evaluate zst enum", "tree": {"sha": "3e98290e8bf3a869897f42a2cbab2115288149f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e98290e8bf3a869897f42a2cbab2115288149f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2807f4f773ac3e56849474085a8203261b49c556", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2807f4f773ac3e56849474085a8203261b49c556", "html_url": "https://github.com/rust-lang/rust/commit/2807f4f773ac3e56849474085a8203261b49c556", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2807f4f773ac3e56849474085a8203261b49c556/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nox", "id": 123095, "node_id": "MDQ6VXNlcjEyMzA5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/123095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nox", "html_url": "https://github.com/nox", "followers_url": "https://api.github.com/users/nox/followers", "following_url": "https://api.github.com/users/nox/following{/other_user}", "gists_url": "https://api.github.com/users/nox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nox/subscriptions", "organizations_url": "https://api.github.com/users/nox/orgs", "repos_url": "https://api.github.com/users/nox/repos", "events_url": "https://api.github.com/users/nox/events{/privacy}", "received_events_url": "https://api.github.com/users/nox/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1839ec5ef885c04c585be4b3af7a3a9c269efddb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1839ec5ef885c04c585be4b3af7a3a9c269efddb", "html_url": "https://github.com/rust-lang/rust/commit/1839ec5ef885c04c585be4b3af7a3a9c269efddb"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "a7cd044cec03a8673ef0cd58f2ed7a23203ac8d0", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2807f4f773ac3e56849474085a8203261b49c556/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2807f4f773ac3e56849474085a8203261b49c556/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=2807f4f773ac3e56849474085a8203261b49c556", "patch": "@@ -1319,6 +1319,15 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n     pub fn try_read_value(&self, ptr: Pointer, ptr_align: Align, ty: Ty<'tcx>) -> EvalResult<'tcx, Option<Value>> {\n         use syntax::ast::FloatTy;\n \n+        let layout = self.layout_of(ty)?;\n+        // do the strongest layout check of the two\n+        let align = layout.align.max(ptr_align);\n+        self.memory.check_align(ptr, align)?;\n+\n+        if layout.size.bytes() == 0 {\n+            return Ok(Some(Value::ByVal(PrimVal::Undef)));\n+        }\n+\n         let ptr = ptr.to_ptr()?;\n         let val = match ty.sty {\n             ty::TyBool => {"}, {"sha": "42cb149d68221ed11f8cf5469b37df9f7e4eac05", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2807f4f773ac3e56849474085a8203261b49c556/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2807f4f773ac3e56849474085a8203261b49c556/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=2807f4f773ac3e56849474085a8203261b49c556", "patch": "@@ -136,6 +136,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                 let val = [a, b][field_index];\n                 Ok(Some((Value::ByVal(val), field.ty)))\n             },\n+            // FIXME(oli-obk): figure out whether we should be calling `try_read_value` here\n             _ => Ok(None),\n         }\n     }"}]}