{"sha": "10b19f6deec72765c5f28420c80b1e86f2536b7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYjE5ZjZkZWVjNzI3NjVjNWYyODQyMGM4MGIxZTg2ZjI1MzZiN2I=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-01-14T04:26:11Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-01-28T13:12:53Z"}, "message": "make_integrate_local takes Local by value", "tree": {"sha": "c79433d74c02218c61841f81f1b2a3dc5226259c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c79433d74c02218c61841f81f1b2a3dc5226259c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10b19f6deec72765c5f28420c80b1e86f2536b7b", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAl4wM1UACgkQiMlBzaHU\nZDIqVA//Txs5E6h+tp2BNWDu1OhSCGHMgVMzHI8DNENPW9ndnhu6QnfheAoOIRkK\nld/mI13cJA143AD0+vXs7efzNho5yo7Q/1r8y92cWRrdgNRLwoK3CuD/eVL4zTO7\nUAbUDQ3XdpG3OVtRDtYryRj8wTA2eT8ZdgKb4sCFQnBQEvxVp4vUw05IUufH/KoS\nknO3YaUZsj4JPlUFKgqyzW+kmwOqJqfZO7fygPuUXK1T95Mdkp47po/jtdK2msNh\nOa3j35KTBY/mswsq3qAQNkfHKzz9gBtDfH8D4Ji7XRYDGEaw1LWHzoBBBUeBzF5k\n/nBPoZ1g8KJu9H8G1W7xVt00ypxNeroZkOkBp7Udz5bLDPyMtX7oK+C3IOMurA89\nrispXCtr+BP8la6rTtpn6ZSriSjRo6azDyRQ9wkUkVQkrsXQ0bcSgFjH9atdLSRk\n6MhVtKwCbVHxI1pZjZ8br02RgcNDxanbTx6VekqPLkI7N1/YdX9z1KkTOAVacu3/\nQalMMkPo73GwV31G6V85Woqp1kG8CnQyS9xKRSzu1k6wE3jqrGHOlMNOj/6xzgUV\nqUuUaFiI+tO9p1fwjs2gtXRJiw1YY4R9ZKP8jHTvQal6Qvzy1VFIeP+l+FF4W5k3\nTpcBF93Uh4BUOJjREdEO5RBw1MYYWZqw/HDbVVTfEDdeM/B1qp0=\n=FbVL\n-----END PGP SIGNATURE-----", "payload": "tree c79433d74c02218c61841f81f1b2a3dc5226259c\nparent 4a86c55f566753aea8f3199a7caa93ffdd7a9a86\nauthor Santiago Pastorino <spastorino@gmail.com> 1578975971 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1580217173 -0300\n\nmake_integrate_local takes Local by value\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10b19f6deec72765c5f28420c80b1e86f2536b7b", "html_url": "https://github.com/rust-lang/rust/commit/10b19f6deec72765c5f28420c80b1e86f2536b7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10b19f6deec72765c5f28420c80b1e86f2536b7b/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a86c55f566753aea8f3199a7caa93ffdd7a9a86", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a86c55f566753aea8f3199a7caa93ffdd7a9a86", "html_url": "https://github.com/rust-lang/rust/commit/4a86c55f566753aea8f3199a7caa93ffdd7a9a86"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "56b6fa68e1841333c6dd8e5565c1bf820fdba4c7", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/10b19f6deec72765c5f28420c80b1e86f2536b7b/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10b19f6deec72765c5f28420c80b1e86f2536b7b/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=10b19f6deec72765c5f28420c80b1e86f2536b7b", "patch": "@@ -640,8 +640,8 @@ impl<'a, 'tcx> Integrator<'a, 'tcx> {\n         new\n     }\n \n-    fn make_integrate_local(&self, local: &Local) -> Local {\n-        if *local == RETURN_PLACE {\n+    fn make_integrate_local(&self, local: Local) -> Local {\n+        if local == RETURN_PLACE {\n             return self.destination.local;\n         }\n \n@@ -660,7 +660,7 @@ impl<'a, 'tcx> MutVisitor<'tcx> for Integrator<'a, 'tcx> {\n     }\n \n     fn visit_local(&mut self, local: &mut Local, _ctxt: PlaceContext, _location: Location) {\n-        *local = self.make_integrate_local(local);\n+        *local = self.make_integrate_local(*local);\n     }\n \n     fn visit_place(&mut self, place: &mut Place<'tcx>, context: PlaceContext, location: Location) {\n@@ -680,7 +680,7 @@ impl<'a, 'tcx> MutVisitor<'tcx> for Integrator<'a, 'tcx> {\n \n     fn process_projection_elem(&mut self, elem: &PlaceElem<'tcx>) -> Option<PlaceElem<'tcx>> {\n         if let PlaceElem::Index(local) = elem {\n-            let new_local = self.make_integrate_local(local);\n+            let new_local = self.make_integrate_local(*local);\n \n             if new_local != *local {\n                 return Some(PlaceElem::Index(new_local));"}]}