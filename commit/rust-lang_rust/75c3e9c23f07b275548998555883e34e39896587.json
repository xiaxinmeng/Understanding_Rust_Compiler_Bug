{"sha": "75c3e9c23f07b275548998555883e34e39896587", "node_id": "C_kwDOAAsO6NoAKDc1YzNlOWMyM2YwN2IyNzU1NDg5OTg1NTU4ODNlMzRlMzk4OTY1ODc", "commit": {"author": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2022-03-02T01:36:40Z"}, "committer": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2022-03-02T01:36:40Z"}, "message": "Temporarily make `CStr` not a link in the `c_char` docs\n\nWhen CStr moves to core with an alias in std, this can link to\n`crate::ffi::CStr`. However, linking in the reverse direction (from core\nto std) requires a relative path, and that path can't work from both\ncore::ffi and std::os::raw (different number of `../` traversals\nrequired).", "tree": {"sha": "3db08db2e749ce92329d1a51b4056906456c5cdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3db08db2e749ce92329d1a51b4056906456c5cdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75c3e9c23f07b275548998555883e34e39896587", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75c3e9c23f07b275548998555883e34e39896587", "html_url": "https://github.com/rust-lang/rust/commit/75c3e9c23f07b275548998555883e34e39896587", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75c3e9c23f07b275548998555883e34e39896587/comments", "author": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "335c9609c6340a9933915e717ee7a722bd9f81bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/335c9609c6340a9933915e717ee7a722bd9f81bc", "html_url": "https://github.com/rust-lang/rust/commit/335c9609c6340a9933915e717ee7a722bd9f81bc"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "b262a3663b3c146d37066c51eda7d8cf6ac22584", "filename": "library/core/src/ffi/c_char.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/75c3e9c23f07b275548998555883e34e39896587/library%2Fcore%2Fsrc%2Fffi%2Fc_char.md", "raw_url": "https://github.com/rust-lang/rust/raw/75c3e9c23f07b275548998555883e34e39896587/library%2Fcore%2Fsrc%2Fffi%2Fc_char.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi%2Fc_char.md?ref=75c3e9c23f07b275548998555883e34e39896587", "patch": "@@ -2,8 +2,7 @@ Equivalent to C's `char` type.\n \n [C's `char` type] is completely unlike [Rust's `char` type]; while Rust's type represents a unicode scalar value, C's `char` type is just an ordinary integer. On modern architectures this type will always be either [`i8`] or [`u8`], as they use byte-addresses memory with 8-bit bytes.\n \n-C chars are most commonly used to make C strings. Unlike Rust, where the length of a string is included alongside the string, C strings mark the end of a string with the character `'\\0'`. See [`CStr`] for more information.\n+C chars are most commonly used to make C strings. Unlike Rust, where the length of a string is included alongside the string, C strings mark the end of a string with the character `'\\0'`. See `CStr` for more information.\n \n [C's `char` type]: https://en.wikipedia.org/wiki/C_data_types#Basic_types\n [Rust's `char` type]: char\n-[`CStr`]: crate::ffi::CStr"}]}