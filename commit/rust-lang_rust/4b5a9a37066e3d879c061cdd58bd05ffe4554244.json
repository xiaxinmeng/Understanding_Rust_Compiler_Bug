{"sha": "4b5a9a37066e3d879c061cdd58bd05ffe4554244", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNWE5YTM3MDY2ZTNkODc5YzA2MWNkZDU4YmQwNWZmZTQ1NTQyNDQ=", "commit": {"author": {"name": "Mathieu Border\u00e9", "email": "mathieu@Mathieus-MacBook-Pro.local", "date": "2016-10-05T21:17:58Z"}, "committer": {"name": "Mathieu Border\u00e9", "email": "mathieu@Mathieus-MacBook-Pro.local", "date": "2016-10-05T21:17:58Z"}, "message": "ICH: update saw_ty for TyBareFn; Update tests for functioninterfaces", "tree": {"sha": "4d0b228da5b19284170349c0cda9214eab602f31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d0b228da5b19284170349c0cda9214eab602f31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b5a9a37066e3d879c061cdd58bd05ffe4554244", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b5a9a37066e3d879c061cdd58bd05ffe4554244", "html_url": "https://github.com/rust-lang/rust/commit/4b5a9a37066e3d879c061cdd58bd05ffe4554244", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b5a9a37066e3d879c061cdd58bd05ffe4554244/comments", "author": null, "committer": null, "parents": [{"sha": "14fe7ce9dc7fa9b4a1737d8abffa4a9cf0d76c0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/14fe7ce9dc7fa9b4a1737d8abffa4a9cf0d76c0b", "html_url": "https://github.com/rust-lang/rust/commit/14fe7ce9dc7fa9b4a1737d8abffa4a9cf0d76c0b"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "9aa55dc582e602376103194e08c6f8dfca86ca62", "filename": "src/librustc_incremental/calculate_svh/svh_visitor.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4b5a9a37066e3d879c061cdd58bd05ffe4554244/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b5a9a37066e3d879c061cdd58bd05ffe4554244/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs?ref=4b5a9a37066e3d879c061cdd58bd05ffe4554244", "patch": "@@ -349,7 +349,7 @@ enum SawTyComponent {\n     SawTyArray,\n     SawTyPtr(Mutability),\n     SawTyRptr(Mutability),\n-    SawTyBareFn,\n+    SawTyBareFn(Unsafety, Abi),\n     SawTyNever,\n     SawTyTup,\n     SawTyPath,\n@@ -366,7 +366,10 @@ fn saw_ty(node: &Ty_) -> SawTyComponent {\n       TyArray(..) => SawTyArray,\n       TyPtr(ref mty) => SawTyPtr(mty.mutbl),\n       TyRptr(_, ref mty) => SawTyRptr(mty.mutbl),\n-      TyBareFn(..) => SawTyBareFn,\n+      TyBareFn(ref barefnty) => {\n+          let ref fnty = *barefnty;\n+          SawTyBareFn(fnty.unsafety, fnty.abi)\n+      },\n       TyNever => SawTyNever,\n       TyTup(..) => SawTyTup,\n       TyPath(..) => SawTyPath,"}, {"sha": "93d94cd1a19c4b83e20c16bfef8dc6c9921e4139", "filename": "src/test/incremental/hashes/function_interfaces.rs", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4b5a9a37066e3d879c061cdd58bd05ffe4554244/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b5a9a37066e3d879c061cdd58bd05ffe4554244/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs?ref=4b5a9a37066e3d879c061cdd58bd05ffe4554244", "patch": "@@ -84,14 +84,14 @@ fn type_of_parameter_ref(p: &mut i32) {}\n // Change Parameter Order ------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn order_of_parameters(p1: i32, p2: i32) {}\n+fn order_of_parameters(p1: i32, p2: i64) {}\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-fn order_of_parameters(p2: i32, p1: i32) {}\n+fn order_of_parameters(p2: i64, p1: i32) {}\n \n \n // Unsafe ----------------------------------------------------------------------\n@@ -188,7 +188,7 @@ fn builtin_bound<T: Send>() {}\n // Lifetime Bound --------------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn lifetime_bound<T>() {}\n+fn lifetime_bound<'a, T>() {}\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n@@ -227,7 +227,7 @@ fn second_builtin_bound<T: Send + Sized>() {}\n // Second Lifetime Bound -------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn second_lifetime_bound<'a, T: 'a>() {}\n+fn second_lifetime_bound<'a, 'b, T: 'a>() {}\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n@@ -254,6 +254,7 @@ fn inline() {}\n // Inline Never ----------------------------------------------------------------\n \n #[cfg(cfail1)]\n+#[inline(always)]\n fn inline_never() {}\n \n #[cfg(not(cfail1))]\n@@ -289,7 +290,7 @@ fn linkage() {}\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-#[linkage]\n+#[linkage=\"weak_odr\"]\n fn linkage() {}\n \n \n@@ -310,6 +311,23 @@ fn return_impl_trait() -> impl Clone {\n }\n \n \n+// Change Return Impl Trait ----------------------------------------------------\n+\n+#[cfg(cfail1)]\n+fn change_return_impl_trait() -> impl Clone {\n+    0\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+fn change_return_impl_trait() -> impl Copy {\n+    0\n+}\n+\n+\n // Change Return Type Indirectly -----------------------------------------------\n \n struct ReferencedType1;"}]}