{"sha": "1e0e618cfbcb9240e6beac8cd16778b369ebe1b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMGU2MThjZmJjYjkyNDBlNmJlYWM4Y2QxNjc3OGIzNjllYmUxYjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-07T11:38:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-07T11:38:17Z"}, "message": "Auto merge of #73842 - euclio:doctest-expn, r=GuillaumeGomez\n\nUse outermost invocation span for doctest names\n\nFixes #70090.\n\nThis PR also allows using aux-build files in rustdoc-ui tests.", "tree": {"sha": "32c63356d2bd87cc4dd859833b185b11ab32db0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32c63356d2bd87cc4dd859833b185b11ab32db0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7", "html_url": "https://github.com/rust-lang/rust/commit/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b26609481c956a666f9189738f1ba611078e1ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b26609481c956a666f9189738f1ba611078e1ab", "html_url": "https://github.com/rust-lang/rust/commit/8b26609481c956a666f9189738f1ba611078e1ab"}, {"sha": "608807934d41168cb30c6eee6442fe29251e40f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/608807934d41168cb30c6eee6442fe29251e40f0", "html_url": "https://github.com/rust-lang/rust/commit/608807934d41168cb30c6eee6442fe29251e40f0"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "969f5a2eaf143b331fbec8cf21390bc8f8cfa96d", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=1e0e618cfbcb9240e6beac8cd16778b369ebe1b7", "patch": "@@ -943,7 +943,12 @@ impl<'a, 'hir, 'tcx> HirCollector<'a, 'hir, 'tcx> {\n         // The collapse-docs pass won't combine sugared/raw doc attributes, or included files with\n         // anything else, this will combine them for us.\n         if let Some(doc) = attrs.collapsed_doc_value() {\n-            self.collector.set_position(attrs.span.unwrap_or(DUMMY_SP));\n+            // Use the outermost invocation, so that doctest names come from where the docs were written.\n+            let span = attrs\n+                .span\n+                .map(|span| span.ctxt().outer_expn().expansion_cause().unwrap_or(span))\n+                .unwrap_or(DUMMY_SP);\n+            self.collector.set_position(span);\n             markdown::find_testable_code(\n                 &doc,\n                 self.collector,"}, {"sha": "ee1fec4c5c2191e7fdcefe9290176fb03454e737", "filename": "src/test/rustdoc-ui/auxiliary/extern_macros.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/src%2Ftest%2Frustdoc-ui%2Fauxiliary%2Fextern_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/src%2Ftest%2Frustdoc-ui%2Fauxiliary%2Fextern_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fauxiliary%2Fextern_macros.rs?ref=1e0e618cfbcb9240e6beac8cd16778b369ebe1b7", "patch": "@@ -0,0 +1,7 @@\n+#[macro_export]\n+macro_rules! attrs_on_struct {\n+    ( $( #[$attr:meta] )* ) => {\n+        $( #[$attr] )*\n+        pub struct ExpandedStruct;\n+    }\n+}"}, {"sha": "e0e1e061ac7dc43454f566b5ee5559d609123a84", "filename": "src/test/rustdoc-ui/doctest-output.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.rs?ref=1e0e618cfbcb9240e6beac8cd16778b369ebe1b7", "patch": "@@ -1,3 +1,5 @@\n+// edition:2018\n+// aux-build:extern_macros.rs\n // compile-flags:--test --test-args=--test-threads=1\n // normalize-stdout-test: \"src/test/rustdoc-ui\" -> \"$$DIR\"\n // check-pass\n@@ -6,10 +8,20 @@\n //! assert_eq!(1 + 1, 2);\n //! ```\n \n+extern crate extern_macros as macros;\n+\n+use macros::attrs_on_struct;\n+\n pub mod foo {\n \n     /// ```\n     /// assert_eq!(1 + 1, 2);\n     /// ```\n     pub fn bar() {}\n }\n+\n+attrs_on_struct! {\n+    /// ```\n+    /// assert!(true);\n+    /// ```\n+}"}, {"sha": "c72bd91d1dd13b5225909d02a591ea3c798257b4", "filename": "src/test/rustdoc-ui/doctest-output.stdout", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.stdout?ref=1e0e618cfbcb9240e6beac8cd16778b369ebe1b7", "patch": "@@ -1,7 +1,8 @@\n \n-running 2 tests\n-test $DIR/doctest-output.rs - (line 5) ... ok\n-test $DIR/doctest-output.rs - foo::bar (line 11) ... ok\n+running 3 tests\n+test $DIR/doctest-output.rs - (line 7) ... ok\n+test $DIR/doctest-output.rs - ExpandedStruct (line 23) ... ok\n+test $DIR/doctest-output.rs - foo::bar (line 17) ... ok\n \n-test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n+test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n "}, {"sha": "848bd3a43e8906592fc9f9dabd76bb2ecc406844", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=1e0e618cfbcb9240e6beac8cd16778b369ebe1b7", "patch": "@@ -169,7 +169,7 @@ impl fmt::Display for Debugger {\n }\n \n /// Configuration for compiletest\n-#[derive(Clone)]\n+#[derive(Debug, Clone)]\n pub struct Config {\n     /// `true` to to overwrite stderr/stdout files instead of complaining about changes in output.\n     pub bless: bool,"}, {"sha": "4a0e937773f46ebafb1f5b01676687b170096861", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0e618cfbcb9240e6beac8cd16778b369ebe1b7/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=1e0e618cfbcb9240e6beac8cd16778b369ebe1b7", "patch": "@@ -1885,7 +1885,8 @@ impl<'test> TestCx<'test> {\n         emit_metadata: EmitMetadata,\n         allow_unused: AllowUnused,\n     ) -> Command {\n-        let is_rustdoc = self.is_rustdoc();\n+        let is_aux = input_file.components().map(|c| c.as_os_str()).any(|c| c == \"auxiliary\");\n+        let is_rustdoc = self.is_rustdoc() && !is_aux;\n         let mut rustc = if !is_rustdoc {\n             Command::new(&self.config.rustc_path)\n         } else {\n@@ -3573,6 +3574,7 @@ impl ProcRes {\n     }\n }\n \n+#[derive(Debug)]\n enum TargetLocation {\n     ThisFile(PathBuf),\n     ThisDirectory(PathBuf),"}]}