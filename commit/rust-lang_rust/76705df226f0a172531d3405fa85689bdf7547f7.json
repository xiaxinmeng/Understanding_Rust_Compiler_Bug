{"sha": "76705df226f0a172531d3405fa85689bdf7547f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NzA1ZGYyMjZmMGExNzI1MzFkMzQwNWZhODU2ODliZGY3NTQ3Zjc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-07-02T10:16:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-02T10:16:49Z"}, "message": "Rollup merge of #34551 - GuillaumeGomez:runtest_improvement, r=alexcrichton\n\nImprove runtest output", "tree": {"sha": "b4434a43a5b7978492c91acc9732a0b65c57918c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4434a43a5b7978492c91acc9732a0b65c57918c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76705df226f0a172531d3405fa85689bdf7547f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76705df226f0a172531d3405fa85689bdf7547f7", "html_url": "https://github.com/rust-lang/rust/commit/76705df226f0a172531d3405fa85689bdf7547f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76705df226f0a172531d3405fa85689bdf7547f7/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08f4559537e53eaf729e9975566e1e1087ded026", "url": "https://api.github.com/repos/rust-lang/rust/commits/08f4559537e53eaf729e9975566e1e1087ded026", "html_url": "https://github.com/rust-lang/rust/commit/08f4559537e53eaf729e9975566e1e1087ded026"}, {"sha": "737d854521021ae3da426694f92c6d4d12c72938", "url": "https://api.github.com/repos/rust-lang/rust/commits/737d854521021ae3da426694f92c6d4d12c72938", "html_url": "https://github.com/rust-lang/rust/commit/737d854521021ae3da426694f92c6d4d12c72938"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "577da5c5af11d2b012eed6d4f860731c3050a452", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/76705df226f0a172531d3405fa85689bdf7547f7/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76705df226f0a172531d3405fa85689bdf7547f7/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=76705df226f0a172531d3405fa85689bdf7547f7", "patch": "@@ -1012,8 +1012,7 @@ actual:\\n\\\n \n         // Parse the JSON output from the compiler and extract out the messages.\n         let actual_errors = json::parse_output(&file_name, &proc_res.stderr, &proc_res);\n-        let mut unexpected = 0;\n-        let mut not_found = 0;\n+        let mut unexpected = Vec::new();\n         let mut found = vec![false; expected_errors.len()];\n         for actual_error in &actual_errors {\n             let opt_index =\n@@ -1045,12 +1044,13 @@ actual:\\n\\\n                                      .map_or(String::from(\"message\"),\n                                              |k| k.to_string()),\n                                      actual_error.msg));\n-                        unexpected += 1;\n+                        unexpected.push(actual_error.clone());\n                     }\n                 }\n             }\n         }\n \n+        let mut not_found = Vec::new();\n         // anything not yet found is a problem\n         for (index, expected_error) in expected_errors.iter().enumerate() {\n             if !found[index] {\n@@ -1062,18 +1062,22 @@ actual:\\n\\\n                              .map_or(\"message\".into(),\n                                      |k| k.to_string()),\n                              expected_error.msg));\n-                not_found += 1;\n+                not_found.push(expected_error.clone());\n             }\n         }\n \n-        if unexpected > 0 || not_found > 0 {\n+        if unexpected.len() > 0 || not_found.len() > 0 {\n             self.error(\n                 &format!(\"{} unexpected errors found, {} expected errors not found\",\n-                         unexpected, not_found));\n+                         unexpected.len(), not_found.len()));\n             print!(\"status: {}\\ncommand: {}\\n\",\n                    proc_res.status, proc_res.cmdline);\n-            println!(\"actual errors (from JSON output): {:#?}\\n\", actual_errors);\n-            println!(\"expected errors (from test file): {:#?}\\n\", expected_errors);\n+            if unexpected.len() > 0 {\n+                println!(\"unexpected errors (from JSON output): {:#?}\\n\", unexpected);\n+            }\n+            if not_found.len() > 0 {\n+                println!(\"not found errors (from test file): {:#?}\\n\", not_found);\n+            }\n             panic!();\n         }\n     }"}]}