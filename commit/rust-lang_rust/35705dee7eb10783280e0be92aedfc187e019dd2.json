{"sha": "35705dee7eb10783280e0be92aedfc187e019dd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NzA1ZGVlN2ViMTA3ODMyODBlMGJlOTJhZWRmYzE4N2UwMTlkZDI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-03-29T16:23:52Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-03-29T16:23:52Z"}, "message": "Use ExactSizeIterator + TrustedLen instead of num_cases arg for switch", "tree": {"sha": "ce087c1461e548a2e67e96d358ac7de7633304b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce087c1461e548a2e67e96d358ac7de7633304b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35705dee7eb10783280e0be92aedfc187e019dd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35705dee7eb10783280e0be92aedfc187e019dd2", "html_url": "https://github.com/rust-lang/rust/commit/35705dee7eb10783280e0be92aedfc187e019dd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35705dee7eb10783280e0be92aedfc187e019dd2/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56842b2154c0c2dd243f64e864b9c6aee718a161", "url": "https://api.github.com/repos/rust-lang/rust/commits/56842b2154c0c2dd243f64e864b9c6aee718a161", "html_url": "https://github.com/rust-lang/rust/commit/56842b2154c0c2dd243f64e864b9c6aee718a161"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "123fda1e215ff9ca5890919fb34f08288d79a767", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35705dee7eb10783280e0be92aedfc187e019dd2/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35705dee7eb10783280e0be92aedfc187e019dd2/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=35705dee7eb10783280e0be92aedfc187e019dd2", "patch": "@@ -21,6 +21,7 @@ use rustc_codegen_ssa::mir::place::PlaceRef;\n use std::borrow::Cow;\n use std::ops::{Deref, Range};\n use std::ptr;\n+use std::iter::TrustedLen;\n \n // All Builders must have an llfn associated with them\n #[must_use]\n@@ -169,11 +170,10 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         &mut self,\n         v: &'ll Value,\n         else_llbb: &'ll BasicBlock,\n-        num_cases: usize,\n-        cases: impl Iterator<Item = (u128, &'ll BasicBlock)>,\n+        cases: impl ExactSizeIterator<Item = (u128, &'ll BasicBlock)> + TrustedLen,\n     ) {\n         let switch = unsafe {\n-            llvm::LLVMBuildSwitch(self.llbuilder, v, else_llbb, num_cases as c_uint)\n+            llvm::LLVMBuildSwitch(self.llbuilder, v, else_llbb, cases.len() as c_uint)\n         };\n         for (on_val, dest) in cases {\n             let on_val = self.const_uint_big(self.val_ty(v), on_val);"}, {"sha": "0aae6b46e3def279749084bc64dcc1b24180fa75", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35705dee7eb10783280e0be92aedfc187e019dd2/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35705dee7eb10783280e0be92aedfc187e019dd2/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=35705dee7eb10783280e0be92aedfc187e019dd2", "patch": "@@ -20,6 +20,7 @@\n #![feature(concat_idents)]\n #![feature(link_args)]\n #![feature(static_nobundle)]\n+#![feature(trusted_len)]\n #![deny(rust_2018_idioms)]\n #![allow(explicit_outlives_requirements)]\n "}, {"sha": "1e898ced7a6006aa85fcd27ac7538e51cd1e7133", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35705dee7eb10783280e0be92aedfc187e019dd2/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35705dee7eb10783280e0be92aedfc187e019dd2/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=35705dee7eb10783280e0be92aedfc187e019dd2", "patch": "@@ -10,6 +10,7 @@\n #![feature(try_blocks)]\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n+#![feature(trusted_len)]\n #![allow(unused_attributes)]\n #![allow(dead_code)]\n #![deny(rust_2018_idioms)]"}, {"sha": "98da07a905e2541794fd8122b42fbb5b264fae72", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35705dee7eb10783280e0be92aedfc187e019dd2/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35705dee7eb10783280e0be92aedfc187e019dd2/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=35705dee7eb10783280e0be92aedfc187e019dd2", "patch": "@@ -217,7 +217,6 @@ impl<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n             bx.switch(\n                 discr.immediate(),\n                 helper.llblock(self, *otherwise),\n-                values.len(),\n                 values.iter().zip(targets).map(|(&value, target)| {\n                     (value, helper.llblock(self, *target))\n                 })"}, {"sha": "48142fc9fa9f4e328d681a4d310e68c1efa9704d", "filename": "src/librustc_codegen_ssa/traits/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/35705dee7eb10783280e0be92aedfc187e019dd2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35705dee7eb10783280e0be92aedfc187e019dd2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs?ref=35705dee7eb10783280e0be92aedfc187e019dd2", "patch": "@@ -12,6 +12,7 @@ use crate::MemFlags;\n use rustc::ty::Ty;\n use rustc::ty::layout::{Align, Size};\n use std::ops::Range;\n+use std::iter::TrustedLen;\n \n #[derive(Copy, Clone)]\n pub enum OverflowOp {\n@@ -49,8 +50,7 @@ pub trait BuilderMethods<'a, 'tcx: 'a>:\n         &mut self,\n         v: Self::Value,\n         else_llbb: Self::BasicBlock,\n-        num_cases: usize,\n-        cases: impl Iterator<Item = (u128, Self::BasicBlock)>,\n+        cases: impl ExactSizeIterator<Item = (u128, Self::BasicBlock)> + TrustedLen,\n     );\n     fn invoke(\n         &mut self,"}]}