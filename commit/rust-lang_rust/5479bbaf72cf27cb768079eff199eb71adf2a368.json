{"sha": "5479bbaf72cf27cb768079eff199eb71adf2a368", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0NzliYmFmNzJjZjI3Y2I3NjgwNzllZmYxOTllYjcxYWRmMmEzNjg=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-12-30T01:28:08Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-12-30T14:50:02Z"}, "message": "Rename kw::Invalid -> kw::Empty\n\nSee https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/Is.20there.20a.20symbol.20for.20the.20empty.20string.3F/near/220054471\nfor context.", "tree": {"sha": "d8165eda4f11e08f38d8d36b23310b6c65bd4dd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8165eda4f11e08f38d8d36b23310b6c65bd4dd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5479bbaf72cf27cb768079eff199eb71adf2a368", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5479bbaf72cf27cb768079eff199eb71adf2a368", "html_url": "https://github.com/rust-lang/rust/commit/5479bbaf72cf27cb768079eff199eb71adf2a368", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5479bbaf72cf27cb768079eff199eb71adf2a368/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88491e2a5168b2266473f476855024200b6df376", "url": "https://api.github.com/repos/rust-lang/rust/commits/88491e2a5168b2266473f476855024200b6df376", "html_url": "https://github.com/rust-lang/rust/commit/88491e2a5168b2266473f476855024200b6df376"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e84c8b4e5b3e0317e7006e84abd689f1dca56d4b", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5479bbaf72cf27cb768079eff199eb71adf2a368/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5479bbaf72cf27cb768079eff199eb71adf2a368/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=5479bbaf72cf27cb768079eff199eb71adf2a368", "patch": "@@ -501,7 +501,7 @@ impl<'tcx> Visitor<'tcx> for BodyLifetimeChecker {\n \n     // for lifetimes as parameters of generics\n     fn visit_lifetime(&mut self, lifetime: &'tcx Lifetime) {\n-        if lifetime.name.ident().name != kw::Invalid && lifetime.name.ident().name != kw::StaticLifetime {\n+        if lifetime.name.ident().name != kw::Empty && lifetime.name.ident().name != kw::StaticLifetime {\n             self.lifetimes_used_in_body = true;\n         }\n     }"}]}