{"sha": "51f2e7e84e200e50bf421bb509c7861f4b8af957", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZjJlN2U4NGUyMDBlNTBiZjQyMWJiNTA5Yzc4NjFmNGI4YWY5NTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-14T05:56:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-14T05:56:16Z"}, "message": "auto merge of #10472 : klutzy/rust/cleanup-xfail, r=alexcrichton\n\nCloses #10452.", "tree": {"sha": "a4b1a1db200d8eb1287315bc57a8b87e5e4abf74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4b1a1db200d8eb1287315bc57a8b87e5e4abf74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51f2e7e84e200e50bf421bb509c7861f4b8af957", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51f2e7e84e200e50bf421bb509c7861f4b8af957", "html_url": "https://github.com/rust-lang/rust/commit/51f2e7e84e200e50bf421bb509c7861f4b8af957", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51f2e7e84e200e50bf421bb509c7861f4b8af957/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58b5c618cfa4b5bec9dd0a27f2ecac07365febe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/58b5c618cfa4b5bec9dd0a27f2ecac07365febe7", "html_url": "https://github.com/rust-lang/rust/commit/58b5c618cfa4b5bec9dd0a27f2ecac07365febe7"}, {"sha": "175858519dbf466a2aa92d8712738ee111be4ed2", "url": "https://api.github.com/repos/rust-lang/rust/commits/175858519dbf466a2aa92d8712738ee111be4ed2", "html_url": "https://github.com/rust-lang/rust/commit/175858519dbf466a2aa92d8712738ee111be4ed2"}], "stats": {"total": 95, "additions": 35, "deletions": 60}, "files": [{"sha": "c4fea5e48c9e71952f7cda115d33c682486f527c", "filename": "doc/tutorial-ffi.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/doc%2Ftutorial-ffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/doc%2Ftutorial-ffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-ffi.md?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -303,7 +303,7 @@ conventions. Rust provides a way to tell the compiler which convention to use:\n #[cfg(target_os = \"win32\", target_arch = \"x86\")]\n #[link_name = \"kernel32\"]\n extern \"stdcall\" {\n-    fn SetEnvironmentVariableA(n: *u8, v: *u8) -> int;\n+    fn SetEnvironmentVariableA(n: *u8, v: *u8) -> std::libc::c_int;\n }\n ~~~~\n "}, {"sha": "0891038e8d5f3caa1803ac3161a064ef68c87dca", "filename": "src/librustpkg/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Flibrustpkg%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Flibrustpkg%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Flib.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -70,7 +70,7 @@ mod search;\n mod sha1;\n mod source_control;\n mod target;\n-#[cfg(test)]\n+#[cfg(not(windows), test)] // FIXME test failure on windows: #10471\n mod tests;\n mod util;\n pub mod version;"}, {"sha": "276f5369cf5278f3c2c63e227785817f436268e7", "filename": "src/libstd/io/process.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Flibstd%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Flibstd%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fprocess.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -82,6 +82,7 @@ pub enum StdioContainer {\n }\n \n /// Describes the result of a process after it has terminated.\n+/// Note that Windows have no signals, so the result is usually ExitStatus.\n #[deriving(Eq)]\n pub enum ProcessExit {\n     /// Normal termination with an exit status."}, {"sha": "4f14837471ab2cdab07742c25b891b076d6a791a", "filename": "src/test/debug-info/by-value-self-argument-in-trait-impl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Fdebug-info%2Fby-value-self-argument-in-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Fdebug-info%2Fby-value-self-argument-in-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fby-value-self-argument-in-trait-impl.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// xfail-win32: FIXME (#10474)\n // xfail-android: FIXME(#10381)\n \n #[feature(managed_boxes)];"}, {"sha": "c10697df8995376b2048cc90370b9d45ea1e41a4", "filename": "src/test/debug-info/var-captured-in-nested-closure.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Fdebug-info%2Fvar-captured-in-nested-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Fdebug-info%2Fvar-captured-in-nested-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fvar-captured-in-nested-closure.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// xfail-win32: FIXME #10474\n // xfail-android: FIXME(#10381)\n \n // compile-flags:-Z extra-debug-info"}, {"sha": "37487c1b6d79f87dae6b80b1cbf9f9e753716f46", "filename": "src/test/run-pass/deriving-global.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-global.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -1,4 +1,4 @@\n-// xfail-fast #7103 `extern mod` does not work on windows\n+// xfail-fast #7103 `extern mod` does not work on check-fast\n // xfail-pretty - does not converge\n \n // Copyright 2013 The Rust Project Developers. See the COPYRIGHT"}, {"sha": "caba29a26679022865ed5e1a576a0632a4903a8d", "filename": "src/test/run-pass/extern-pass-TwoU64s-ref.rs", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/58b5c618cfa4b5bec9dd0a27f2ecac07365febe7/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58b5c618cfa4b5bec9dd0a27f2ecac07365febe7/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s-ref.rs?ref=58b5c618cfa4b5bec9dd0a27f2ecac07365febe7", "patch": "@@ -1,29 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Test that we ignore modes when calling extern functions.\n-// xfail-fast #9205\n-\n-#[deriving(Eq)]\n-struct TwoU64s {\n-    one: u64, two: u64\n-}\n-\n-extern {\n-    pub fn rust_dbg_extern_identity_TwoU64s(u: TwoU64s) -> TwoU64s;\n-}\n-\n-pub fn main() {\n-    unsafe {\n-        let x = TwoU64s {one: 22, two: 23};\n-        let y = rust_dbg_extern_identity_TwoU64s(x);\n-        assert_eq!(x, y);\n-    }\n-}"}, {"sha": "033359f85fa331de175d3121f6bafc090b1a6216", "filename": "src/test/run-pass/extern-pass-TwoU64s.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -11,10 +11,7 @@\n // Test a foreign function that accepts and returns a struct\n // by value.\n \n-// xfail-fast This works standalone on windows but not with check-fast.\n-// possibly because there is another test that uses this extern fn but gives it\n-// a different signature\n-// xfail-fast #9205\n+// xfail-win32 #9205\n \n #[deriving(Eq)]\n struct TwoU64s {"}, {"sha": "b52808ea32db0644e93f424e795aac0b59932632", "filename": "src/test/run-pass/extern-return-TwoU64s.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fextern-return-TwoU64s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fextern-return-TwoU64s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-return-TwoU64s.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast #9205\n+// xfail-win32 #9205\n \n struct TwoU64s {\n     one: u64, two: u64"}, {"sha": "a0fb31e64bf673e904bd19ec614cbacbfa14363f", "filename": "src/test/run-pass/fsu-moves-and-copies.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Ffsu-moves-and-copies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Ffsu-moves-and-copies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffsu-moves-and-copies.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "previous_filename": "src/test/run-pass/struct-update-moves-and-copies.rs"}, {"sha": "655bc7771938f1e73c9318cc6b7a995ef58a6e27", "filename": "src/test/run-pass/glob-std.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fglob-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fglob-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fglob-std.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast windows doesn't like 'extern mod extra'\n+// xfail-fast check-fast doesn't like 'extern mod extra'\n+// xfail-win32 TempDir may cause IoError on windows: #10462\n \n extern mod extra;\n "}, {"sha": "92b3f6274d5930aafbd38ec4346e755fe35feb5d", "filename": "src/test/run-pass/issue-4208.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-4208.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-4208.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4208.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-4208-cc.rs\n-// xfail-fast - Windows hates cross-crate tests\n+// xfail-fast - check-fast hates cross-crate tests\n \n extern mod numeric;\n use numeric::{sin, Angle};"}, {"sha": "4b13563726efcc04377a8e8d6953b6a292c3c662", "filename": "src/test/run-pass/issue-4545.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-4545.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-4545.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4545.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast windows doesn't like aux-build\n+// xfail-fast check-fast doesn't like aux-build\n // aux-build:issue-4545.rs\n \n extern mod somelib(name = \"issue-4545\");"}, {"sha": "300f54aa10682ef336fb976501e6b60f5d8d00b0", "filename": "src/test/run-pass/issue-8044.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-8044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-8044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8044.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast windows doesn't like aux-build\n+// xfail-fast check-fast doesn't like aux-build\n // aux-build:issue-8044.rs\n \n extern mod minimal(name= \"issue-8044\");"}, {"sha": "8399eeebe485f803c2d628d871676b616483c2c9", "filename": "src/test/run-pass/issue-9123.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-9123.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-9123.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9123.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast windows doesn't like aux-build\n+// xfail-fast check-fast doesn't like aux-build\n // aux-build:issue_9123.rs\n \n extern mod issue_9123;"}, {"sha": "e3e09394bd6336dcb3fca3af49b52363fb621ab0", "filename": "src/test/run-pass/issue-9188.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-9188.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-9188.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9188.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue_9188.rs\n-// xfail-fast windows doesn't like aux-build\n+// xfail-fast check-fast doesn't like aux-build\n \n extern mod issue_9188;\n "}, {"sha": "ac15fef362226d520974317d70d22696f8c2cbf4", "filename": "src/test/run-pass/issue-9906.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-9906.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-9906.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9906.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast windows doesn't like extern mod\n+// xfail-fast check-fast doesn't like extern mod\n // aux-build:issue-9906.rs\n \n extern mod testmod(name = \"issue-9906\");"}, {"sha": "ebe268cce1c42e0506b67a79567e4c629d5226d9", "filename": "src/test/run-pass/issue-9968.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-9968.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue-9968.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9968.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast windows doesn't like extern mod\n+// xfail-fast check-fast doesn't like extern mod\n // aux-build:issue-9968.rs\n \n extern mod lib(name = \"issue-9968\");"}, {"sha": "ae0bfe2babe36d780e1b961122b1c0ce75199d3e", "filename": "src/test/run-pass/issue_9155.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue_9155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fissue_9155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue_9155.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue_9155.rs\n-// xfail-fast windows doesn't like the aux-build\n+// xfail-fast check-fast doesn't like the aux-build\n \n extern mod issue_9155;\n "}, {"sha": "645be40250aff1a4c26d5c7063e4bed095f082e4", "filename": "src/test/run-pass/linkage-visibility.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-android: FIXME(#10379)\n-\n // aux-build:linkage-visibility.rs\n-// xfail-fast windows doesn't like aux-build\n+// xfail-fast check-fast doesn't like 'extern mod'\n+// xfail-android: FIXME(#10379)\n+// xfail-win32: std::unstable::dynamic_lib does not work on win32 well\n \n extern mod foo(name = \"linkage-visibility\");\n "}, {"sha": "61d48c6800da2876dc729d9fdcf9b7b4727e93e0", "filename": "src/test/run-pass/logging_before_rt_started.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Flogging_before_rt_started.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Flogging_before_rt_started.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging_before_rt_started.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // exec-env:RUST_LOG=std::ptr\n-// xfail-fast this would cause everything to print forever on windows...\n+// xfail-fast this would cause everything to print forever on check-fast...\n \n // In issue #9487, it was realized that std::ptr was invoking the logging\n // infrastructure, and when std::ptr was used during runtime initialization,"}, {"sha": "5a5091c385653c400bab1c861080ea637f30da1b", "filename": "src/test/run-pass/macro-with-attrs1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fmacro-with-attrs1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fmacro-with-attrs1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-with-attrs1.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast windows doesn't like compile-flags\n+// xfail-fast check-fast doesn't like compile-flags\n // compile-flags: --cfg foo\n \n #[feature(macro_rules)];"}, {"sha": "f2d90a2374ac3f6b1a4dbea01189eaecba01295c", "filename": "src/test/run-pass/reexport-should-still-link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Freexport-should-still-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Freexport-should-still-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freexport-should-still-link.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:reexport-should-still-link.rs\n-// xfail-fast windows doesn't like extern mod\n+// xfail-fast check-fast doesn't like extern mod\n \n extern mod foo(name = \"reexport-should-still-link\");\n "}, {"sha": "a9a26c2fbb14a60d09170dbc8626530caa8912bb", "filename": "src/test/run-pass/rt-run-twice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Frt-run-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Frt-run-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frt-run-twice.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast windows uses a different test runner\n+// xfail-fast make-check does not like `#[start]`\n \n use std::rt;\n "}, {"sha": "8fa8c8d0c146f4f962040d3c3a1659db812367ad", "filename": "src/test/run-pass/signal-exit-status.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,7 @@\n // option. this file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast\n+// xfail-fast calling itself doesn't work on check-fast\n \n use std::{os, run};\n use std::io::process;\n@@ -20,8 +20,10 @@ fn main() {\n         unsafe { *(0 as *mut int) = 0; }\n     } else {\n         let status = run::process_status(args[0], [~\"signal\"]);\n+        // Windows does not have signal, so we get exit status 0xC0000028 (STATUS_BAD_STACK).\n         match status {\n-            process::ExitSignal(_) => {},\n+            process::ExitSignal(_) if cfg!(unix) => {},\n+            process::ExitStatus(0xC0000028) if cfg!(windows) => {},\n             _ => fail!(\"invalid termination (was not signalled): {:?}\", status)\n         }\n     }"}, {"sha": "92513caf87d3cf1825ae7fd670ccf083d592c9f2", "filename": "src/test/run-pass/smallest-hello-world.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // xfail-test - FIXME(#8538) some kind of problem linking induced by extern \"C\" fns that I do not understand\n-// xfail-fast - windows doesn't like this\n+// xfail-fast - check-fast doesn't like this\n \n // Smallest hello world with no runtime\n "}, {"sha": "324186021b8e46b7298c64791a9fd48e647307ae", "filename": "src/test/run-pass/struct-return.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fstruct-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fstruct-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-return.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast #9205\n+// xfail-win32 #9205\n \n pub struct Quad { a: u64, b: u64, c: u64, d: u64 }\n pub struct Floats { a: f64, b: u8, c: f64 }"}, {"sha": "e8e3d337838de2252d9b3a47b1635b9ae9c8549a", "filename": "src/test/run-pass/tempfile.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftempfile.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast windows doesn't like 'extern mod extra'\n+// xfail-fast check-fast doesn't like 'extern mod'\n+// xfail-win32 TempDir may cause IoError on windows: #10463\n \n // These tests are here to exercise the functionality of the `tempfile` module.\n // One might expect these tests to be located in that module, but sadly they"}, {"sha": "3fd7c05796bc4b46749838f1148452732753f4eb", "filename": "src/test/run-pass/typeid-intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast windows doesn't like aux-build\n+// xfail-fast check-fast doesn't like aux-build\n // aux-build:typeid-intrinsic.rs\n // aux-build:typeid-intrinsic2.rs\n "}, {"sha": "91b8c99ca19be4d8db37d6dacb2cb5a24758756e", "filename": "src/test/run-pass/xcrate-address-insignificant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fxcrate-address-insignificant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f2e7e84e200e50bf421bb509c7861f4b8af957/src%2Ftest%2Frun-pass%2Fxcrate-address-insignificant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fxcrate-address-insignificant.rs?ref=51f2e7e84e200e50bf421bb509c7861f4b8af957", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-fast windows doesn't like aux-build\n+// xfail-fast check-fast doesn't like aux-build\n // aux-build:xcrate_address_insignificant.rs\n \n extern mod foo(name = \"xcrate_address_insignificant\");"}]}