{"sha": "9b21324db20593d98164616bd1866787617d35fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMjEzMjRkYjIwNTkzZDk4MTY0NjE2YmQxODY2Nzg3NjE3ZDM1ZmE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-16T18:04:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-16T18:04:17Z"}, "message": "Miri now supports entropy, but is still slow", "tree": {"sha": "fa20df3777739e94a78115fb808b21e11ed3a10a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa20df3777739e94a78115fb808b21e11ed3a10a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b21324db20593d98164616bd1866787617d35fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b21324db20593d98164616bd1866787617d35fa", "html_url": "https://github.com/rust-lang/rust/commit/9b21324db20593d98164616bd1866787617d35fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b21324db20593d98164616bd1866787617d35fa/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07133ac70cca85b2f91aedb76a21ece524bc0cb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/07133ac70cca85b2f91aedb76a21ece524bc0cb4", "html_url": "https://github.com/rust-lang/rust/commit/07133ac70cca85b2f91aedb76a21ece524bc0cb4"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "0685fa943c0b87a78c4312cb4e8cee7789b0776c", "filename": "src/liballoc/tests/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b21324db20593d98164616bd1866787617d35fa/src%2Fliballoc%2Ftests%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b21324db20593d98164616bd1866787617d35fa/src%2Fliballoc%2Ftests%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fbinary_heap.rs?ref=9b21324db20593d98164616bd1866787617d35fa", "patch": "@@ -282,7 +282,7 @@ fn assert_covariance() {\n //\n // Destructors must be called exactly once per element.\n #[test]\n-#[cfg(not(miri))] // Miri does not support panics nor entropy\n+#[cfg(not(miri))] // Miri does not support catching panics\n fn panic_safe() {\n     static DROP_COUNTER: AtomicUsize = AtomicUsize::new(0);\n "}, {"sha": "e2bef515419e824808b47086b0d515f6628058a9", "filename": "src/liballoc/tests/slice.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9b21324db20593d98164616bd1866787617d35fa/src%2Fliballoc%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b21324db20593d98164616bd1866787617d35fa/src%2Fliballoc%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fslice.rs?ref=9b21324db20593d98164616bd1866787617d35fa", "patch": "@@ -389,7 +389,7 @@ fn test_reverse() {\n }\n \n #[test]\n-#[cfg(not(miri))] // Miri does not support entropy\n+#[cfg(not(miri))] // Miri is too slow\n fn test_sort() {\n     let mut rng = thread_rng();\n \n@@ -466,10 +466,19 @@ fn test_sort() {\n }\n \n #[test]\n-#[cfg(not(miri))] // Miri does not support entropy\n fn test_sort_stability() {\n-    for len in (2..25).chain(500..510) {\n-        for _ in 0..10 {\n+    #[cfg(not(miri))] // Miri is too slow\n+    let large_limit = 510;\n+    #[cfg(not(miri))] // Miri is too slow\n+    let rounds = 10;\n+\n+    #[cfg(miri)]\n+    let large_limit = 500; // effectively skips the large tests\n+    #[cfg(miri)]\n+    let rounds = 1;\n+\n+    for len in (2..25).chain(500..large_limit) {\n+        for _ in 0..rounds {\n             let mut counts = [0; 10];\n \n             // create a vector like [(6, 1), (5, 1), (6, 2), ...],\n@@ -1397,7 +1406,7 @@ fn test_box_slice_clone() {\n #[test]\n #[allow(unused_must_use)] // here, we care about the side effects of `.clone()`\n #[cfg_attr(target_os = \"emscripten\", ignore)]\n-#[cfg(not(miri))] // Miri does not support threads nor entropy\n+#[cfg(not(miri))] // Miri does not support threads\n fn test_box_slice_clone_panics() {\n     use std::sync::Arc;\n     use std::sync::atomic::{AtomicUsize, Ordering};\n@@ -1589,7 +1598,7 @@ thread_local!(static SILENCE_PANIC: Cell<bool> = Cell::new(false));\n \n #[test]\n #[cfg_attr(target_os = \"emscripten\", ignore)] // no threads\n-#[cfg(not(miri))] // Miri does not support threads nor entropy\n+#[cfg(not(miri))] // Miri does not support threads\n fn panic_safe() {\n     let prev = panic::take_hook();\n     panic::set_hook(Box::new(move |info| {"}, {"sha": "a9474230139587983297fceb66e2c5eea66c4571", "filename": "src/libcore/tests/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b21324db20593d98164616bd1866787617d35fa/src%2Flibcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b21324db20593d98164616bd1866787617d35fa/src%2Flibcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fslice.rs?ref=9b21324db20593d98164616bd1866787617d35fa", "patch": "@@ -1024,7 +1024,7 @@ fn test_rotate_right() {\n \n #[test]\n #[cfg(not(target_arch = \"wasm32\"))]\n-#[cfg(not(miri))] // Miri does not support entropy\n+#[cfg(not(miri))] // Miri is too slow\n fn sort_unstable() {\n     use core::cmp::Ordering::{Equal, Greater, Less};\n     use core::slice::heapsort;\n@@ -1095,7 +1095,7 @@ fn sort_unstable() {\n \n #[test]\n #[cfg(not(target_arch = \"wasm32\"))]\n-#[cfg(not(miri))] // Miri does not support entropy\n+#[cfg(not(miri))] // Miri is too slow\n fn partition_at_index() {\n     use core::cmp::Ordering::{Equal, Greater, Less};\n     use rand::rngs::SmallRng;"}]}