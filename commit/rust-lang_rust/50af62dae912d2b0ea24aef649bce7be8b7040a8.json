{"sha": "50af62dae912d2b0ea24aef649bce7be8b7040a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYWY2MmRhZTkxMmQyYjBlYTI0YWVmNjQ5YmNlN2JlOGI3MDQwYTg=", "commit": {"author": {"name": "kenta7777", "email": "k.hasegw7@gmail.com", "date": "2019-03-15T16:14:46Z"}, "committer": {"name": "kenta7777", "email": "k.hasegw7@gmail.com", "date": "2019-03-15T16:14:46Z"}, "message": "removed some unnecessary comments.", "tree": {"sha": "73c717175ea0c101db46cd09ce081437e3e9a67a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73c717175ea0c101db46cd09ce081437e3e9a67a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50af62dae912d2b0ea24aef649bce7be8b7040a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50af62dae912d2b0ea24aef649bce7be8b7040a8", "html_url": "https://github.com/rust-lang/rust/commit/50af62dae912d2b0ea24aef649bce7be8b7040a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50af62dae912d2b0ea24aef649bce7be8b7040a8/comments", "author": {"login": "kenta7777", "id": 16369171, "node_id": "MDQ6VXNlcjE2MzY5MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/16369171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenta7777", "html_url": "https://github.com/kenta7777", "followers_url": "https://api.github.com/users/kenta7777/followers", "following_url": "https://api.github.com/users/kenta7777/following{/other_user}", "gists_url": "https://api.github.com/users/kenta7777/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenta7777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenta7777/subscriptions", "organizations_url": "https://api.github.com/users/kenta7777/orgs", "repos_url": "https://api.github.com/users/kenta7777/repos", "events_url": "https://api.github.com/users/kenta7777/events{/privacy}", "received_events_url": "https://api.github.com/users/kenta7777/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kenta7777", "id": 16369171, "node_id": "MDQ6VXNlcjE2MzY5MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/16369171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenta7777", "html_url": "https://github.com/kenta7777", "followers_url": "https://api.github.com/users/kenta7777/followers", "following_url": "https://api.github.com/users/kenta7777/following{/other_user}", "gists_url": "https://api.github.com/users/kenta7777/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenta7777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenta7777/subscriptions", "organizations_url": "https://api.github.com/users/kenta7777/orgs", "repos_url": "https://api.github.com/users/kenta7777/repos", "events_url": "https://api.github.com/users/kenta7777/events{/privacy}", "received_events_url": "https://api.github.com/users/kenta7777/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12e3e8412cd8eb1ec93034d52e4287dbae2027de", "url": "https://api.github.com/repos/rust-lang/rust/commits/12e3e8412cd8eb1ec93034d52e4287dbae2027de", "html_url": "https://github.com/rust-lang/rust/commit/12e3e8412cd8eb1ec93034d52e4287dbae2027de"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "77978d7d38ff79b14fc22ffe355e99653638a43f", "filename": "src/librustc_mir/build/matches/simplify.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50af62dae912d2b0ea24aef649bce7be8b7040a8/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50af62dae912d2b0ea24aef649bce7be8b7040a8/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fsimplify.rs?ref=50af62dae912d2b0ea24aef649bce7be8b7040a8", "patch": "@@ -114,14 +114,12 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                         (Some(('\\u{0000}' as u128, '\\u{10FFFF}' as u128, Size::from_bits(32))), 0)\n                     }\n                     ty::Int(ity) => {\n-                        // FIXME(49937): refactor these bit manipulations into interpret.\n                         let size = Integer::from_attr(&tcx, SignedInt(ity)).size();\n                         let max = truncate(u128::max_value(), size);\n                         let bias = 1u128 << (size.bits() - 1);\n                         (Some((0, max, size)), bias)\n                     }\n                     ty::Uint(uty) => {\n-                        // FIXME(49937): refactor these bit manipulations into interpret.\n                         let size = Integer::from_attr(&tcx, UnsignedInt(uty)).size();\n                         let max = truncate(u128::max_value(), size);\n                         (Some((0, max, size)), 0)"}]}