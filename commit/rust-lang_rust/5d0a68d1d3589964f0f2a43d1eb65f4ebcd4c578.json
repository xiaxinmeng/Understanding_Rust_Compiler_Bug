{"sha": "5d0a68d1d3589964f0f2a43d1eb65f4ebcd4c578", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMGE2OGQxZDM1ODk5NjRmMGYyYTQzZDFlYjY1ZjRlYmNkNGM1Nzg=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-02-14T13:38:48Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-02-14T13:38:48Z"}, "message": "Do not expect blocks to have type str.", "tree": {"sha": "fc5dd771fae91dc3739ba6369d3dd96f057dc2ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc5dd771fae91dc3739ba6369d3dd96f057dc2ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d0a68d1d3589964f0f2a43d1eb65f4ebcd4c578", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d0a68d1d3589964f0f2a43d1eb65f4ebcd4c578", "html_url": "https://github.com/rust-lang/rust/commit/5d0a68d1d3589964f0f2a43d1eb65f4ebcd4c578", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d0a68d1d3589964f0f2a43d1eb65f4ebcd4c578/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "083dc5b12d6d29e5d88f6446664968d1f868562d", "url": "https://api.github.com/repos/rust-lang/rust/commits/083dc5b12d6d29e5d88f6446664968d1f868562d", "html_url": "https://github.com/rust-lang/rust/commit/083dc5b12d6d29e5d88f6446664968d1f868562d"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "f890e087573b5ceb3f21563c47550a0932bc1ca0", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d0a68d1d3589964f0f2a43d1eb65f4ebcd4c578/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d0a68d1d3589964f0f2a43d1eb65f4ebcd4c578/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=5d0a68d1d3589964f0f2a43d1eb65f4ebcd4c578", "patch": "@@ -3828,7 +3828,7 @@ impl<'tcx> Expectation<'tcx> {\n     /// for examples of where this comes up,.\n     fn rvalue_hint(tcx: &ty::ctxt<'tcx>, ty: Ty<'tcx>) -> Expectation<'tcx> {\n         match tcx.struct_tail(ty).sty {\n-            ty::TySlice(_) | ty::TyTrait(..) => {\n+            ty::TySlice(_) | ty::TyStr | ty::TyTrait(..) => {\n                 ExpectRvalueLikeUnsized(ty)\n             }\n             _ => ExpectHasType(ty)"}, {"sha": "f846ee8f3d0b924035886db8f93ecda1c4464404", "filename": "src/test/run-pass/coerce-expect-unsized.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5d0a68d1d3589964f0f2a43d1eb65f4ebcd4c578/src%2Ftest%2Frun-pass%2Fcoerce-expect-unsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d0a68d1d3589964f0f2a43d1eb65f4ebcd4c578/src%2Ftest%2Frun-pass%2Fcoerce-expect-unsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoerce-expect-unsized.rs?ref=5d0a68d1d3589964f0f2a43d1eb65f4ebcd4c578", "patch": "@@ -44,6 +44,13 @@ pub fn main() {\n     let _: &Debug = &if true { false } else { true };\n     let _: &Debug = &match true { true => 'a', false => 'b' };\n \n+    let _: &str = &{ String::new() };\n+    let _: &str = &if true { String::from(\"...\") } else { 5.to_string() };\n+    let _: &str = &match true {\n+        true => format!(\"{}\", false),\n+        false => [\"x\", \"y\"].join(\"+\")\n+    };\n+\n     let _: Box<[isize]> = Box::new([1, 2, 3]);\n     let _: Box<Fn(isize) -> _> = Box::new(|x| (x as u8));\n "}]}