{"sha": "0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiYzhmNmYzZjRlY2ZhMzMwOWFhYTRkZjUyZmI0YWExZGRkNjNiMDc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-13T03:37:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-13T03:37:04Z"}, "message": "Rollup merge of #58273 - taiki-e:rename-dependency, r=matthewjasper\n\nRename rustc_errors dependency in rust 2018 crates\n\nI think this is a better solution than `use rustc_errors as errors` in `lib.rs` and `use crate::errors` in modules.\n\nRelated: rust-lang/cargo#5653\n\ncc #58099\n\nr? @Centril", "tree": {"sha": "9e9acdc1fafa0a30b951815b4c6ca3a3214077e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e9acdc1fafa0a30b951815b4c6ca3a3214077e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcY5DgCRBK7hj4Ov3rIwAAdHIIACJ8E265LARNNiLjGvK85BgL\n3R2fIy67UcbcZ+etmYjYBPzCSF/mAGkOZ4RGQBfG0Jg5U2foKI1BBUvHuC6g6tSP\ntAZ6l5WewrJgugaZt6jTSi+PpqFFm9oj8wueqna7wKxbdyMMrIatHGv/MrYhn/Mn\nI4gCDjTFnA4WTU/Il21p1rZHpbDA8EjGHzGu8ck+XjboMb3DGCihpz0A+BVGhRr/\nyIasEZICu2T6VVbubh39PYFW6M86Vo0lGWVL4YArK5tEIBEa1+x68RzjV/uP12Xc\nD6RVCOG9jTvUrrbbIyTVfV6Q3lQUU1RLZP2cZXey9f0YmHqYOXgw08Jlta9YPT0=\n=D8qi\n-----END PGP SIGNATURE-----\n", "payload": "tree 9e9acdc1fafa0a30b951815b4c6ca3a3214077e0\nparent ecb650316983697cca65b9b265692e4385a67d9c\nparent c08b5ca4ad26250f6af17ba7e2938d9e694f2842\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1550029024 +0100\ncommitter GitHub <noreply@github.com> 1550029024 +0100\n\nRollup merge of #58273 - taiki-e:rename-dependency, r=matthewjasper\n\nRename rustc_errors dependency in rust 2018 crates\n\nI think this is a better solution than `use rustc_errors as errors` in `lib.rs` and `use crate::errors` in modules.\n\nRelated: rust-lang/cargo#5653\n\ncc #58099\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "html_url": "https://github.com/rust-lang/rust/commit/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecb650316983697cca65b9b265692e4385a67d9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecb650316983697cca65b9b265692e4385a67d9c", "html_url": "https://github.com/rust-lang/rust/commit/ecb650316983697cca65b9b265692e4385a67d9c"}, {"sha": "c08b5ca4ad26250f6af17ba7e2938d9e694f2842", "url": "https://api.github.com/repos/rust-lang/rust/commits/c08b5ca4ad26250f6af17ba7e2938d9e694f2842", "html_url": "https://github.com/rust-lang/rust/commit/c08b5ca4ad26250f6af17ba7e2938d9e694f2842"}], "stats": {"total": 235, "additions": 114, "deletions": 121}, "files": [{"sha": "cb9eb32f8d21fda94fcc3e4d0d2ceb807e7f67e4", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -25,7 +25,7 @@ rustc-rayon-core = \"0.1.1\"\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n-rustc_errors = { path = \"../librustc_errors\" }\n+errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n serialize = { path = \"../libserialize\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }"}, {"sha": "de57edc1251a249db131d2658b207bcf71b6bc9a", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,4 +1,4 @@\n-use crate::errors::{Diagnostic, DiagnosticBuilder};\n+use errors::{Diagnostic, DiagnosticBuilder};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::indexed_vec::{Idx, IndexVec};"}, {"sha": "cc5b105bad0d42a80e03f3b54ee714e6ffccdb53", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -31,7 +31,6 @@\n //! in the HIR, especially for multiple identifiers.\n \n use crate::dep_graph::DepGraph;\n-use crate::errors::Applicability;\n use crate::hir::{self, ParamName};\n use crate::hir::HirVec;\n use crate::hir::map::{DefKey, DefPathData, Definitions};\n@@ -41,14 +40,15 @@ use crate::hir::GenericArg;\n use crate::lint::builtin::{self, PARENTHESIZED_PARAMS_IN_TYPES_AND_MODULES,\n                     ELIDED_LIFETIMES_IN_PATHS};\n use crate::middle::cstore::CrateStore;\n-use rustc_data_structures::fx::FxHashSet;\n-use rustc_data_structures::indexed_vec::IndexVec;\n-use rustc_data_structures::thin_vec::ThinVec;\n-use rustc_data_structures::sync::Lrc;\n use crate::session::Session;\n use crate::session::config::nightly_options;\n use crate::util::common::FN_OUTPUT_NAME;\n use crate::util::nodemap::{DefIdMap, NodeMap};\n+use errors::Applicability;\n+use rustc_data_structures::fx::FxHashSet;\n+use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_data_structures::thin_vec::ThinVec;\n+use rustc_data_structures::sync::Lrc;\n \n use std::collections::{BTreeSet, BTreeMap};\n use std::fmt::Debug;"}, {"sha": "bf16ec0be83e797b3dbefac96690ff3d10e60404", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -10,12 +10,12 @@ pub use self::PrimTy::*;\n pub use self::UnOp::*;\n pub use self::UnsafeSource::*;\n \n-use crate::errors::FatalError;\n use crate::hir::def::Def;\n use crate::hir::def_id::{DefId, DefIndex, LocalDefId, CRATE_DEF_INDEX};\n use crate::util::nodemap::{NodeMap, FxHashSet};\n use crate::mir::mono::Linkage;\n \n+use errors::FatalError;\n use syntax_pos::{Span, DUMMY_SP, symbol::InternedString};\n use syntax::source_map::Spanned;\n use rustc_target::spec::abi::Abi;"}, {"sha": "ff4e520d8e08e78d0b09da1ebde32a5a98d27bc7", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -50,16 +50,16 @@ use super::region_constraints::GenericKind;\n use super::{InferCtxt, RegionVariableOrigin, SubregionOrigin, TypeTrace, ValuePairs};\n use crate::infer::{self, SuppressRegionErrors};\n \n-use crate::errors::{Applicability, DiagnosticBuilder, DiagnosticStyledString};\n use crate::hir;\n use crate::hir::def_id::DefId;\n use crate::hir::Node;\n use crate::middle::region;\n-use std::{cmp, fmt};\n-use syntax_pos::{Pos, Span};\n use crate::traits::{ObligationCause, ObligationCauseCode};\n use crate::ty::error::TypeError;\n use crate::ty::{self, subst::Subst, Region, Ty, TyCtxt, TyKind, TypeFoldable};\n+use errors::{Applicability, DiagnosticBuilder, DiagnosticStyledString};\n+use std::{cmp, fmt};\n+use syntax_pos::{Pos, Span};\n \n mod note;\n "}, {"sha": "0fbdbe15a3c547fbbefce0b7cc1f543471904f08", "filename": "src/librustc/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -5,7 +5,7 @@ use crate::infer::type_variable::TypeVariableOrigin;\n use crate::ty::{self, Ty, Infer, TyVar};\n use syntax::source_map::CompilerDesugaringKind;\n use syntax_pos::Span;\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n struct FindLocalByTypeVisitor<'a, 'gcx: 'a + 'tcx, 'tcx: 'a> {\n     infcx: &'a InferCtxt<'a, 'gcx, 'tcx>,"}, {"sha": "b10af400f2b6c3301c6a15025e7a308626213ee5", "filename": "src/librustc/infer/error_reporting/nice_region_error/named_anon_conflict.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -3,7 +3,7 @@\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::ty;\n use crate::util::common::ErrorReported;\n-use crate::errors::Applicability;\n+use errors::Applicability;\n \n impl<'a, 'gcx, 'tcx> NiceRegionError<'a, 'gcx, 'tcx> {\n     /// When given a `ConcreteFailure` for a function with arguments containing a named region and"}, {"sha": "843fa8b0182e25a09e5d5f62961b902f79e29322", "filename": "src/librustc/infer/error_reporting/nice_region_error/placeholder_error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,4 +1,4 @@\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n use crate::hir::def_id::DefId;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;"}, {"sha": "23acaeb31f8d4312cb04a66faf2c262611b37afb", "filename": "src/librustc/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -4,7 +4,7 @@ use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::ty::{BoundRegion, FreeRegion, RegionKind};\n use crate::util::common::ErrorReported;\n-use crate::errors::Applicability;\n+use errors::Applicability;\n \n impl<'a, 'gcx, 'tcx> NiceRegionError<'a, 'gcx, 'tcx> {\n     /// Print the error message for lifetime errors when the return type is a static impl Trait."}, {"sha": "c05c6567bbefab50d49aa4a7a2dc827fb4753ba2", "filename": "src/librustc/infer/error_reporting/note.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnote.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -2,7 +2,7 @@ use crate::infer::{self, InferCtxt, SubregionOrigin};\n use crate::middle::region;\n use crate::ty::{self, Region};\n use crate::ty::error::TypeError;\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n     pub(super) fn note_region_origin(&self,"}, {"sha": "88423086058256bc51738efa135d0793e943c230", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -7,21 +7,12 @@ pub use self::SubregionOrigin::*;\n pub use self::ValuePairs::*;\n pub use crate::ty::IntVarValue;\n \n-use arena::SyncDroplessArena;\n-use crate::errors::DiagnosticBuilder;\n use crate::hir::def_id::DefId;\n use crate::infer::canonical::{Canonical, CanonicalVarValues};\n use crate::middle::free_region::RegionRelations;\n use crate::middle::lang_items;\n use crate::middle::region;\n-use rustc_data_structures::unify as ut;\n use crate::session::config::BorrowckMode;\n-use std::cell::{Cell, Ref, RefCell, RefMut};\n-use std::collections::BTreeMap;\n-use std::fmt;\n-use syntax::ast;\n-use syntax_pos::symbol::InternedString;\n-use syntax_pos::{self, Span};\n use crate::traits::{self, ObligationCause, PredicateObligations, TraitEngine};\n use crate::ty::error::{ExpectedFound, TypeError, UnconstrainedNumeric};\n use crate::ty::fold::TypeFoldable;\n@@ -31,6 +22,16 @@ use crate::ty::{self, GenericParamDefKind, Ty, TyCtxt, CtxtInterners};\n use crate::ty::{FloatVid, IntVid, TyVid};\n use crate::util::nodemap::FxHashMap;\n \n+use arena::SyncDroplessArena;\n+use errors::DiagnosticBuilder;\n+use rustc_data_structures::unify as ut;\n+use std::cell::{Cell, Ref, RefCell, RefMut};\n+use std::collections::BTreeMap;\n+use std::fmt;\n+use syntax::ast;\n+use syntax_pos::symbol::InternedString;\n+use syntax_pos::Span;\n+\n use self::combine::CombineFields;\n use self::lexical_region_resolve::LexicalRegionResolutions;\n use self::outlives::env::OutlivesEnvironment;"}, {"sha": "bfe59eda06e6fc44a3d519fc8da4ecd88dfede4c", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -153,8 +153,6 @@ mod rustc {\n     pub use crate::lint;\n }\n \n-use rustc_errors as errors;\n-\n // FIXME(#27438): right now the unit tests of librustc don't refer to any actual\n //                functions generated in librustc_data_structures (all\n //                references are through generic functions), but statics are"}, {"sha": "6f10b0e2c0e67a0a96dffa8e986d784a221157d4", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -4,9 +4,9 @@\n //! compiler code, rather than using their own custom pass. Those\n //! lints are all available in `rustc_lint::builtin`.\n \n-use crate::errors::{Applicability, DiagnosticBuilder};\n use crate::lint::{LintPass, LateLintPass, LintArray};\n use crate::session::Session;\n+use errors::{Applicability, DiagnosticBuilder};\n use syntax::ast;\n use syntax::source_map::Span;\n "}, {"sha": "9032fcf8b612aebed0e7ff227e777d0d6d02e017", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -34,7 +34,7 @@ use std::default::Default as StdDefault;\n use syntax::ast;\n use syntax::edition;\n use syntax_pos::{MultiSpan, Span, symbol::{LocalInternedString, Symbol}};\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n use crate::hir;\n use crate::hir::def_id::LOCAL_CRATE;\n use crate::hir::intravisit as hir_visit;"}, {"sha": "924aa3fde0a08fd7e5ea406b771c215912fa978a", "filename": "src/librustc/lint/levels.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Flint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Flint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Flevels.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,20 +1,20 @@\n use std::cmp;\n \n-use crate::errors::{Applicability, DiagnosticBuilder};\n use crate::hir::HirId;\n use crate::ich::StableHashingContext;\n use crate::lint::builtin;\n use crate::lint::context::CheckLintNameResult;\n use crate::lint::{self, Lint, LintId, Level, LintSource};\n+use crate::session::Session;\n+use crate::util::nodemap::FxHashMap;\n+use errors::{Applicability, DiagnosticBuilder};\n use rustc_data_structures::stable_hasher::{HashStable, ToStableHashKey,\n                                            StableHasher, StableHasherResult};\n-use crate::session::Session;\n use syntax::ast;\n use syntax::attr;\n use syntax::feature_gate;\n use syntax::source_map::MultiSpan;\n use syntax::symbol::Symbol;\n-use crate::util::nodemap::FxHashMap;\n \n pub struct LintLevelSets {\n     list: Vec<LintSet>,"}, {"sha": "859ceb4bd074d5e02345c79c5a135ebf82fc54cf", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -23,23 +23,23 @@ pub use self::LintSource::*;\n \n use rustc_data_structures::sync::{self, Lrc};\n \n-use crate::errors::{DiagnosticBuilder, DiagnosticId};\n use crate::hir::def_id::{CrateNum, LOCAL_CRATE};\n use crate::hir::intravisit;\n use crate::hir;\n use crate::lint::builtin::{BuiltinLintDiagnostics, DUPLICATE_MATCHER_BINDING_NAME};\n use crate::lint::builtin::parser::{QUESTION_MARK_MACRO_SEP, ILL_FORMED_ATTRIBUTE_INPUT};\n use crate::session::{Session, DiagnosticMessageId};\n+use crate::ty::TyCtxt;\n+use crate::ty::query::Providers;\n+use crate::util::nodemap::NodeMap;\n+use errors::{DiagnosticBuilder, DiagnosticId};\n use std::{hash, ptr};\n use syntax::ast;\n use syntax::source_map::{MultiSpan, ExpnFormat};\n use syntax::early_buffered_lints::BufferedEarlyLintId;\n use syntax::edition::Edition;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;\n-use crate::ty::TyCtxt;\n-use crate::ty::query::Providers;\n-use crate::util::nodemap::NodeMap;\n \n pub use crate::lint::context::{LateContext, EarlyContext, LintContext, LintStore,\n                         check_crate, check_ast_crate, CheckLintNameResult,"}, {"sha": "331343e052dea322231458c5e592f35b63fe9a6f", "filename": "src/librustc/middle/lib_features.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fmiddle%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fmiddle%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flib_features.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -5,12 +5,12 @@\n // (unlike lang features), which means we need to collect them instead.\n \n use crate::ty::TyCtxt;\n+use crate::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use syntax::symbol::Symbol;\n use syntax::ast::{Attribute, MetaItem, MetaItemKind};\n use syntax_pos::Span;\n-use crate::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_data_structures::fx::{FxHashSet, FxHashMap};\n-use crate::errors::DiagnosticId;\n+use errors::DiagnosticId;\n \n pub struct LibFeatures {\n     // A map from feature to stabilisation version."}, {"sha": "d3925f40e09e714cce9d2660828e4a619fc956a3", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -102,9 +102,9 @@ use crate::hir::Node;\n use crate::ty::{self, TyCtxt};\n use crate::ty::query::Providers;\n use crate::lint;\n-use crate::errors::Applicability;\n use crate::util::nodemap::{NodeMap, HirIdMap, HirIdSet};\n \n+use errors::Applicability;\n use std::collections::{BTreeMap, VecDeque};\n use std::{fmt, u32};\n use std::io::prelude::*;"}, {"sha": "5f7b9cc33660f95191937e15d15573612d058579", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -11,10 +11,11 @@ use crate::hir::map::Map;\n use crate::hir::{GenericArg, GenericParam, ItemLocalId, LifetimeName, Node, ParamName};\n use crate::ty::{self, DefIdTree, GenericParamDefKind, TyCtxt};\n \n-use crate::errors::{Applicability, DiagnosticBuilder};\n use crate::rustc::lint;\n-use rustc_data_structures::sync::Lrc;\n use crate::session::Session;\n+use crate::util::nodemap::{DefIdMap, FxHashMap, FxHashSet, NodeMap, NodeSet};\n+use errors::{Applicability, DiagnosticBuilder};\n+use rustc_data_structures::sync::Lrc;\n use std::borrow::Cow;\n use std::cell::Cell;\n use std::mem::replace;\n@@ -23,7 +24,6 @@ use syntax::attr;\n use syntax::ptr::P;\n use syntax::symbol::keywords;\n use syntax_pos::Span;\n-use crate::util::nodemap::{DefIdMap, FxHashMap, FxHashSet, NodeMap, NodeSet};\n \n use crate::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use crate::hir::{self, GenericParamKind, LifetimeParamKind};"}, {"sha": "29beabdb2abdf580fc52d5b5078f4b003052f60a", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -11,7 +11,7 @@ use super::{RawConst, Pointer, InboundsCheck, ScalarMaybeUndef};\n use backtrace::Backtrace;\n \n use crate::ty::query::TyCtxtAt;\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n use syntax_pos::{Pos, Span};\n use syntax::ast;"}, {"sha": "22b1c3f18acb2d99422d7a2297f279238dec5c59", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -19,7 +19,7 @@ use syntax::parse;\n use syntax::symbol::Symbol;\n use syntax::feature_gate::UnstableFeatures;\n \n-use crate::errors::{ColorConfig, FatalError, Handler};\n+use errors::{ColorConfig, FatalError, Handler};\n \n use getopts;\n use std::collections::{BTreeMap, BTreeSet};\n@@ -2569,7 +2569,6 @@ mod dep_tracking {\n \n #[cfg(test)]\n mod tests {\n-    use crate::errors;\n     use getopts;\n     use crate::lint;\n     use crate::middle::cstore;"}, {"sha": "58bd4782b214309330e6143445da1a3af1c07667", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -21,8 +21,8 @@ use rustc_data_structures::sync::{\n     Ordering::SeqCst,\n };\n \n-use crate::errors::{self, DiagnosticBuilder, DiagnosticId, Applicability};\n-use crate::errors::emitter::{Emitter, EmitterWriter};\n+use errors::{DiagnosticBuilder, DiagnosticId, Applicability};\n+use errors::emitter::{Emitter, EmitterWriter};\n use syntax::ast::{self, NodeId};\n use syntax::edition::Edition;\n use syntax::feature_gate::{self, AttributeType};"}, {"sha": "35d8e2beef55787688c70612d9530b429ec36e66", "filename": "src/librustc/traits/coherence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fcoherence.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -39,7 +39,7 @@ pub struct OverlapResult<'tcx> {\n     pub involves_placeholder: bool,\n }\n \n-pub fn add_placeholder_note(err: &mut crate::errors::DiagnosticBuilder<'_>) {\n+pub fn add_placeholder_note(err: &mut errors::DiagnosticBuilder<'_>) {\n     err.note(&format!(\n         \"this behavior recently changed as a result of a bug fix; \\\n          see rust-lang/rust#56105 for details\""}, {"sha": "eb284645d36c827a2ae549bae3308f8c30b07e84", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -17,14 +17,11 @@ use super::{\n     Overflow,\n };\n \n-use crate::errors::{Applicability, DiagnosticBuilder};\n use crate::hir;\n use crate::hir::Node;\n use crate::hir::def_id::DefId;\n use crate::infer::{self, InferCtxt};\n use crate::infer::type_variable::TypeVariableOrigin;\n-use std::fmt;\n-use syntax::ast;\n use crate::session::DiagnosticMessageId;\n use crate::ty::{self, AdtKind, ToPredicate, ToPolyTraitRef, Ty, TyCtxt, TypeFoldable};\n use crate::ty::GenericParamDefKind;\n@@ -35,6 +32,9 @@ use crate::ty::subst::Subst;\n use crate::ty::SubtypePredicate;\n use crate::util::nodemap::{FxHashMap, FxHashSet};\n \n+use errors::{Applicability, DiagnosticBuilder};\n+use std::fmt;\n+use syntax::ast;\n use syntax_pos::{DUMMY_SP, Span, ExpnInfo, ExpnFormat};\n \n impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {"}, {"sha": "c2c05ce7af50b7665b3a622d62abc7bc64cedd1c", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -103,7 +103,7 @@ impl IntercrateAmbiguityCause {\n     /// See #23980 for details.\n     pub fn add_intercrate_ambiguity_hint<'a, 'tcx>(\n         &self,\n-        err: &mut crate::errors::DiagnosticBuilder<'_>,\n+        err: &mut errors::DiagnosticBuilder<'_>,\n     ) {\n         err.note(&self.intercrate_ambiguity_hint());\n     }"}, {"sha": "18b0afe1fd91ec08b01ded39a9b8432bc848b9c4", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -2,7 +2,6 @@\n \n use crate::dep_graph::DepGraph;\n use crate::dep_graph::{self, DepNode, DepConstructor};\n-use crate::errors::DiagnosticBuilder;\n use crate::session::Session;\n use crate::session::config::{BorrowckMode, OutputFilenames};\n use crate::session::config::CrateType;\n@@ -43,6 +42,7 @@ use crate::ty::{BoundVar, BindingMode};\n use crate::ty::CanonicalPolyFnSig;\n use crate::util::nodemap::{DefIdMap, DefIdSet, ItemLocalMap};\n use crate::util::nodemap::{FxHashMap, FxHashSet};\n+use errors::DiagnosticBuilder;\n use rustc_data_structures::interner::HashInterner;\n use smallvec::SmallVec;\n use rustc_data_structures::stable_hasher::{HashStable, hash_stable_hashmap,\n@@ -1816,7 +1816,7 @@ pub mod tls {\n     use std::ptr;\n     use syntax_pos;\n     use crate::ty::query;\n-    use crate::errors::{Diagnostic, TRACK_DIAGNOSTICS};\n+    use errors::{Diagnostic, TRACK_DIAGNOSTICS};\n     use rustc_data_structures::OnDrop;\n     use rustc_data_structures::sync::{self, Lrc, Lock};\n     use rustc_data_structures::thin_vec::ThinVec;"}, {"sha": "e3e0ce147741fbb747bedee214febc0b58143202", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -4,7 +4,7 @@ use std::borrow::Cow;\n use std::fmt;\n use rustc_target::spec::abi;\n use syntax::ast;\n-use crate::errors::{Applicability, DiagnosticBuilder};\n+use errors::{Applicability, DiagnosticBuilder};\n use syntax_pos::Span;\n \n use crate::hir;"}, {"sha": "3b191d4201fbfc2b2fa41edc7d923c91329ff351", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,9 +1,7 @@\n use crate::dep_graph::{self, DepConstructor, DepNode};\n-use crate::errors::DiagnosticBuilder;\n use crate::hir::def_id::{CrateNum, DefId, DefIndex};\n use crate::hir::def::{Def, Export};\n use crate::hir::{self, TraitCandidate, ItemLocalId, CodegenFnAttrs};\n-use rustc_data_structures::svh::Svh;\n use crate::infer::canonical::{self, Canonical};\n use crate::lint;\n use crate::middle::borrowck::BorrowCheckResult;\n@@ -44,6 +42,8 @@ use crate::util::common::{ErrorReported};\n use crate::util::profiling::ProfileCategory::*;\n use crate::session::Session;\n \n+use errors::DiagnosticBuilder;\n+use rustc_data_structures::svh::Svh;\n use rustc_data_structures::bit_set::BitSet;\n use rustc_data_structures::indexed_vec::IndexVec;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "c16f861dedb50442a88f1c3bf6bb60a0dd72125f", "filename": "src/librustc/ty/query/on_disk_cache.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,28 +1,29 @@\n use crate::dep_graph::{DepNodeIndex, SerializedDepNodeIndex};\n-use crate::errors::Diagnostic;\n use crate::hir;\n use crate::hir::def_id::{CrateNum, DefIndex, DefId, LocalDefId, LOCAL_CRATE};\n use crate::hir::map::definitions::DefPathHash;\n use crate::ich::{CachingSourceMapView, Fingerprint};\n use crate::mir::{self, interpret};\n use crate::mir::interpret::{AllocDecodingSession, AllocDecodingState};\n-use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::thin_vec::ThinVec;\n-use rustc_data_structures::sync::{Lrc, Lock, HashMapExt, Once};\n-use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n use crate::rustc_serialize::{Decodable, Decoder, Encodable, Encoder, opaque,\n                       SpecializedDecoder, SpecializedEncoder,\n                       UseSpecializedDecodable, UseSpecializedEncodable};\n use crate::session::{CrateDisambiguator, Session};\n+use crate::ty;\n+use crate::ty::codec::{self as ty_codec, TyDecoder, TyEncoder};\n+use crate::ty::context::TyCtxt;\n+use crate::util::common::time;\n+\n+use errors::Diagnostic;\n+use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::thin_vec::ThinVec;\n+use rustc_data_structures::sync::{Lrc, Lock, HashMapExt, Once};\n+use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n use std::mem;\n use syntax::ast::NodeId;\n use syntax::source_map::{SourceMap, StableSourceFileId};\n use syntax_pos::{BytePos, Span, DUMMY_SP, SourceFile};\n use syntax_pos::hygiene::{Mark, SyntaxContext, ExpnInfo};\n-use crate::ty;\n-use crate::ty::codec::{self as ty_codec, TyDecoder, TyEncoder};\n-use crate::ty::context::TyCtxt;\n-use crate::util::common::time;\n \n const TAG_FILE_FOOTER: u128 = 0xC0FFEE_C0FFEE_C0FFEE_C0FFEE_C0FFEE;\n "}, {"sha": "267ee89a2ffed95f50e57487ab8b6909705899dd", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -3,10 +3,6 @@\n //! manage the caches, and so forth.\n \n use crate::dep_graph::{DepNodeIndex, DepNode, DepKind, SerializedDepNodeIndex};\n-use crate::errors::DiagnosticBuilder;\n-use crate::errors::Level;\n-use crate::errors::Diagnostic;\n-use crate::errors::FatalError;\n use crate::ty::tls;\n use crate::ty::{TyCtxt};\n use crate::ty::query::Query;\n@@ -16,6 +12,10 @@ use crate::ty::item_path;\n \n use crate::util::common::{profq_msg, ProfileQueriesMsg, QueryMsg};\n \n+use errors::DiagnosticBuilder;\n+use errors::Level;\n+use errors::Diagnostic;\n+use errors::FatalError;\n use rustc_data_structures::fx::{FxHashMap};\n use rustc_data_structures::sync::{Lrc, Lock};\n use rustc_data_structures::thin_vec::ThinVec;"}, {"sha": "836b4ad38ca8805f01521fc865fe83601cd62348", "filename": "src/librustc_resolve/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2FCargo.toml?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -16,7 +16,7 @@ log = \"0.4\"\n syntax = { path = \"../libsyntax\" }\n rustc = { path = \"../librustc\" }\n arena = { path = \"../libarena\" }\n-rustc_errors = { path = \"../librustc_errors\" }\n+errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_metadata = { path = \"../librustc_metadata\" }"}, {"sha": "a82f8df1547257f95f4fa281e1bacc64bc6eeb44", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -22,7 +22,7 @@ use std::cell::Cell;\n use std::ptr;\n use rustc_data_structures::sync::Lrc;\n \n-use crate::errors::Applicability;\n+use errors::Applicability;\n \n use syntax::ast::{Name, Ident};\n use syntax::attr;"}, {"sha": "0cabee71df9fb6ad5db1f8f408e85810b8047409", "filename": "src/librustc_resolve/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc_resolve%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc_resolve%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Ferror_reporting.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,5 +1,6 @@\n use std::cmp::Reverse;\n \n+use errors::{Applicability, DiagnosticBuilder, DiagnosticId};\n use log::debug;\n use rustc::hir::def::*;\n use rustc::hir::def::Namespace::*;\n@@ -9,7 +10,6 @@ use syntax::ast::{ExprKind};\n use syntax::symbol::keywords;\n use syntax_pos::Span;\n \n-use crate::errors::{Applicability, DiagnosticBuilder, DiagnosticId};\n use crate::macros::ParentScope;\n use crate::resolve_imports::ImportResolver;\n use crate::{import_candidate_to_enum_paths, is_self_type, is_self_value, path_names_to_string};"}, {"sha": "6e5c0acc57026572a043dd6a7e90db09f5d543fb", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -10,8 +10,6 @@\n \n #![deny(rust_2018_idioms)]\n \n-use rustc_errors as errors;\n-\n pub use rustc::hir::def::{Namespace, PerNS};\n \n use GenericParameters::*;"}, {"sha": "63f752ac9c942324d8af86b92bd4abcd339e0766", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -27,7 +27,7 @@ use syntax::symbol::{Symbol, keywords};\n use syntax::visit::Visitor;\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax_pos::{Span, DUMMY_SP};\n-use crate::errors::Applicability;\n+use errors::Applicability;\n \n use std::cell::Cell;\n use std::{mem, ptr};"}, {"sha": "4a0bb0302ffbc250907e3075641fa5d9beae5af6", "filename": "src/libsyntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2FCargo.toml?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -15,7 +15,7 @@ serialize = { path = \"../libserialize\" }\n log = \"0.4\"\n scoped-tls = \"0.1\"\n syntax_pos = { path = \"../libsyntax_pos\" }\n-rustc_errors = { path = \"../librustc_errors\" }\n+errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_target = { path = \"../librustc_target\" }\n smallvec = { version = \"0.6.7\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "e84adc01cf04a875a0f8c5e625fe5d7348d36366", "filename": "src/libsyntax/attr/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fbuiltin.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,10 +1,10 @@\n //! Parsing and validation of builtin attributes\n \n use crate::ast::{self, Attribute, MetaItem, Name, NestedMetaItemKind};\n-use crate::errors::{Applicability, Handler};\n use crate::feature_gate::{Features, GatedCfg};\n use crate::parse::ParseSess;\n \n+use errors::{Applicability, Handler};\n use syntax_pos::{symbol::Symbol, Span};\n \n use super::{list_contains_name, mark_used, MetaItemKind};"}, {"sha": "4e4432a3f334d17a4d5fcfebfcb876cd1d2fb12d", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -9,12 +9,12 @@ use crate::feature_gate::{\n use crate::attr;\n use crate::ast;\n use crate::edition::Edition;\n-use crate::errors::Applicability;\n use crate::mut_visit::*;\n use crate::parse::{token, ParseSess};\n use crate::ptr::P;\n use crate::util::map_in_place::MapInPlace;\n \n+use errors::Applicability;\n use smallvec::SmallVec;\n \n /// A folder that strips out items that do not belong in the current configuration."}, {"sha": "21024eb41ef50bca6cff6a3cad733bd6d293e666", "filename": "src/libsyntax/diagnostics/plugin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -15,7 +15,7 @@ use syntax_pos::Span;\n \n use crate::diagnostics::metadata::output_metadata;\n \n-pub use crate::errors::*;\n+pub use errors::*;\n \n // Maximum width of any line in an extended error description (inclusive).\n const MAX_DESCRIPTION_WIDTH: usize = 80;"}, {"sha": "5980261593dbffb7571ed4c1ef46d41806469043", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -4,7 +4,6 @@ use crate::ast::{self, Attribute, Name, PatKind, MetaItem};\n use crate::attr::HasAttrs;\n use crate::source_map::{SourceMap, Spanned, respan};\n use crate::edition::Edition;\n-use crate::errors::{DiagnosticBuilder, DiagnosticId};\n use crate::ext::expand::{self, AstFragment, Invocation};\n use crate::ext::hygiene::{self, Mark, SyntaxContext, Transparency};\n use crate::mut_visit::{self, MutVisitor};\n@@ -15,6 +14,7 @@ use crate::symbol::{keywords, Ident, Symbol};\n use crate::ThinVec;\n use crate::tokenstream::{self, TokenStream};\n \n+use errors::{DiagnosticBuilder, DiagnosticId};\n use smallvec::{smallvec, SmallVec};\n use syntax_pos::{Span, MultiSpan, DUMMY_SP};\n "}, {"sha": "d398437d7affccfd2d5b9d0decf6a41a7dd32346", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -3,7 +3,6 @@ use crate::ast::{MacStmtStyle, StmtKind, ItemKind};\n use crate::attr::{self, HasAttrs};\n use crate::source_map::{ExpnInfo, MacroBang, MacroAttribute, dummy_spanned, respan};\n use crate::config::StripUnconfigured;\n-use crate::errors::{Applicability, FatalError};\n use crate::ext::base::*;\n use crate::ext::derive::{add_derived_markers, collect_derives};\n use crate::ext::hygiene::{self, Mark, SyntaxContext};\n@@ -20,6 +19,7 @@ use crate::tokenstream::{TokenStream, TokenTree};\n use crate::visit::{self, Visitor};\n use crate::util::map_in_place::MapInPlace;\n \n+use errors::{Applicability, FatalError};\n use smallvec::{smallvec, SmallVec};\n use syntax_pos::{Span, DUMMY_SP, FileName};\n use syntax_pos::hygiene::ExpnFormat;"}, {"sha": "5de1ccec8609e8281050b012ac3702a37688be94", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -75,7 +75,6 @@ pub use ParseResult::*;\n use TokenTreeOrTokenTreeSlice::*;\n \n use crate::ast::Ident;\n-use crate::errors::FatalError;\n use crate::ext::tt::quoted::{self, TokenTree};\n use crate::parse::{Directory, ParseSess};\n use crate::parse::parser::{Parser, PathStyle};\n@@ -84,8 +83,9 @@ use crate::print::pprust;\n use crate::symbol::keywords;\n use crate::tokenstream::{DelimSpan, TokenStream};\n \n+use errors::FatalError;\n use smallvec::{smallvec, SmallVec};\n-use syntax_pos::{self, Span};\n+use syntax_pos::Span;\n \n use rustc_data_structures::fx::FxHashMap;\n use std::collections::hash_map::Entry::{Occupied, Vacant};"}, {"sha": "bd64bb010219b9131a74f424469594a8e1b01ddf", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,6 +1,5 @@\n use crate::{ast, attr};\n use crate::edition::Edition;\n-use crate::errors::FatalError;\n use crate::ext::base::{DummyResult, ExtCtxt, MacResult, SyntaxExtension};\n use crate::ext::base::{NormalTT, TTMacroExpander};\n use crate::ext::expand::{AstFragment, AstFragmentKind};\n@@ -17,6 +16,7 @@ use crate::parse::token::Token::*;\n use crate::symbol::Symbol;\n use crate::tokenstream::{DelimSpan, TokenStream, TokenTree};\n \n+use errors::FatalError;\n use syntax_pos::{Span, DUMMY_SP, symbol::Ident};\n use log::debug;\n \n@@ -25,7 +25,7 @@ use std::borrow::Cow;\n use std::collections::hash_map::Entry;\n \n use rustc_data_structures::sync::Lrc;\n-use crate::errors::Applicability;\n+use errors::Applicability;\n \n const VALID_FRAGMENT_NAMES_MSG: &str = \"valid fragment specifiers are \\\n     `ident`, `block`, `stmt`, `expr`, `pat`, `ty`, `lifetime`, `literal`, \\"}, {"sha": "d574b410ccc0625834afb09d3a62929edcdd6107", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -20,11 +20,11 @@ use crate::attr;\n use crate::early_buffered_lints::BufferedEarlyLintId;\n use crate::source_map::Spanned;\n use crate::edition::{ALL_EDITIONS, Edition};\n-use crate::errors::{DiagnosticBuilder, Handler};\n use crate::visit::{self, FnKind, Visitor};\n use crate::parse::ParseSess;\n use crate::symbol::Symbol;\n \n+use errors::{DiagnosticBuilder, Handler};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_target::spec::abi::Abi;\n use syntax_pos::{Span, DUMMY_SP};"}, {"sha": "9acd0d099a0e1134b5d0973e806e799a50f0628d", "filename": "src/libsyntax/json.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fjson.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -10,12 +10,13 @@\n // FIXME: spec the JSON output properly.\n \n use crate::source_map::{SourceMap, FilePathMapping};\n-use crate::errors::registry::Registry;\n-use crate::errors::{DiagnosticBuilder, SubDiagnostic, CodeSuggestion, SourceMapper};\n-use crate::errors::{DiagnosticId, Applicability};\n-use crate::errors::emitter::{Emitter, EmitterWriter};\n \n-use syntax_pos::{self, MacroBacktrace, Span, SpanLabel, MultiSpan};\n+use errors::registry::Registry;\n+use errors::{DiagnosticBuilder, SubDiagnostic, CodeSuggestion, SourceMapper};\n+use errors::{DiagnosticId, Applicability};\n+use errors::emitter::{Emitter, EmitterWriter};\n+\n+use syntax_pos::{MacroBacktrace, Span, SpanLabel, MultiSpan};\n use rustc_data_structures::sync::{self, Lrc};\n use std::io::{self, Write};\n use std::vec;"}, {"sha": "36488b3a69f07c4bd984d34490fdb735acaced72", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -24,7 +24,7 @@\n #[allow(unused_extern_crates)]\n extern crate serialize as rustc_serialize; // used by deriving\n \n-pub use rustc_errors as errors;\n+pub use errors;\n use rustc_data_structures::sync::Lock;\n use rustc_data_structures::bit_set::GrowableBitSet;\n pub use rustc_data_structures::thin_vec::ThinVec;\n@@ -37,7 +37,7 @@ use ast::AttrId;\n macro_rules! panictry {\n     ($e:expr) => ({\n         use std::result::Result::{Ok, Err};\n-        use crate::errors::FatalError;\n+        use errors::FatalError;\n         match $e {\n             Ok(e) => e,\n             Err(mut e) => {\n@@ -52,7 +52,7 @@ macro_rules! panictry {\n macro_rules! panictry_buffer {\n     ($handler:expr, $e:expr) => ({\n         use std::result::Result::{Ok, Err};\n-        use crate::errors::{FatalError, DiagnosticBuilder};\n+        use errors::{FatalError, DiagnosticBuilder};\n         match $e {\n             Ok(e) => e,\n             Err(errs) => {"}, {"sha": "babe0eef20f8c8f932dd4470f96ba6b65776f872", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,10 +1,10 @@\n use crate::ast::{self, Ident};\n use crate::source_map::{SourceMap, FilePathMapping};\n-use crate::errors::{Applicability, FatalError, Diagnostic, DiagnosticBuilder};\n use crate::parse::{token, ParseSess};\n use crate::symbol::{Symbol, keywords};\n \n-use syntax_pos::{self, BytePos, CharPos, Pos, Span, NO_EXPANSION};\n+use errors::{Applicability, FatalError, Diagnostic, DiagnosticBuilder};\n+use syntax_pos::{BytePos, CharPos, Pos, Span, NO_EXPANSION};\n use core::unicode::property::Pattern_White_Space;\n \n use std::borrow::Cow;\n@@ -1882,7 +1882,6 @@ mod tests {\n     use crate::ast::{Ident, CrateConfig};\n     use crate::symbol::Symbol;\n     use crate::source_map::SourceMap;\n-    use crate::errors;\n     use crate::feature_gate::UnstableFeatures;\n     use crate::parse::token;\n     use crate::diagnostics::plugin::ErrorMap;"}, {"sha": "7da4284c0e4aac4c33ad8bedbcd4a809d0db14b9", "filename": "src/libsyntax/parse/lexer/unicode_chars.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -2,7 +2,7 @@\n // http://www.unicode.org/Public/security/10.0.0/confusables.txt\n \n use syntax_pos::{Span, NO_EXPANSION};\n-use crate::errors::{Applicability, DiagnosticBuilder};\n+use errors::{Applicability, DiagnosticBuilder};\n use super::StringReader;\n \n const UNICODE_ARRAY: &[(char, &str, char)] = &["}, {"sha": "b2d4d97d57d89dee39799892d861ac213346d0c9", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -3,14 +3,14 @@\n use crate::ast::{self, CrateConfig, NodeId};\n use crate::early_buffered_lints::{BufferedEarlyLint, BufferedEarlyLintId};\n use crate::source_map::{SourceMap, FilePathMapping};\n-use crate::errors::{FatalError, Level, Handler, ColorConfig, Diagnostic, DiagnosticBuilder};\n use crate::feature_gate::UnstableFeatures;\n use crate::parse::parser::Parser;\n use crate::symbol::Symbol;\n use crate::tokenstream::{TokenStream, TokenTree};\n use crate::diagnostics::plugin::ErrorMap;\n use crate::print::pprust::token_to_string;\n \n+use errors::{FatalError, Level, Handler, ColorConfig, Diagnostic, DiagnosticBuilder};\n use rustc_data_structures::sync::{Lrc, Lock};\n use syntax_pos::{Span, SourceFile, FileName, MultiSpan};\n use log::debug;"}, {"sha": "50cedc0f8d4fd802638be415354b84987724c4ab", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -33,7 +33,6 @@ use crate::ast::{RangeEnd, RangeSyntax};\n use crate::{ast, attr};\n use crate::ext::base::DummyResult;\n use crate::source_map::{self, SourceMap, Spanned, respan};\n-use crate::errors::{self, Applicability, DiagnosticBuilder, DiagnosticId};\n use crate::parse::{self, SeqSep, classify, token};\n use crate::parse::lexer::{TokenAndSpan, UnmatchedBrace};\n use crate::parse::lexer::comments::{doc_comment_style, strip_doc_comment_decoration};\n@@ -47,8 +46,9 @@ use crate::ThinVec;\n use crate::tokenstream::{self, DelimSpan, TokenTree, TokenStream, TreeAndJoint};\n use crate::symbol::{Symbol, keywords};\n \n+use errors::{Applicability, DiagnosticBuilder, DiagnosticId};\n use rustc_target::spec::abi::{self, Abi};\n-use syntax_pos::{self, Span, MultiSpan, BytePos, FileName};\n+use syntax_pos::{Span, MultiSpan, BytePos, FileName};\n use log::{debug, trace};\n \n use std::borrow::Cow;"}, {"sha": "5e0cf9eea78b85a6f330e7edd5d27c84d7af1f26", "filename": "src/libsyntax/show_span.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fshow_span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fshow_span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fshow_span.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -6,7 +6,6 @@\n use std::str::FromStr;\n \n use crate::ast;\n-use crate::errors;\n use crate::visit;\n use crate::visit::Visitor;\n "}, {"sha": "62a6972122abd5a80b5e56684a9d343a7f4a1813", "filename": "src/libsyntax/source_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsource_map.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -24,7 +24,7 @@ use std::fs;\n use std::io;\n use log::debug;\n \n-use crate::errors::SourceMapper;\n+use errors::SourceMapper;\n \n /// Returns the span itself if it doesn't come from a macro expansion,\n /// otherwise return the call site span up to the `enclosing_sp` by"}, {"sha": "56290fa771ba9c58b533cc8f7e1f324f95b7688c", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -12,11 +12,10 @@ use std::vec;\n \n use log::debug;\n use smallvec::{smallvec, SmallVec};\n-use syntax_pos::{self, DUMMY_SP, NO_EXPANSION, Span, SourceFile, BytePos};\n+use syntax_pos::{DUMMY_SP, NO_EXPANSION, Span, SourceFile, BytePos};\n \n use crate::attr::{self, HasAttrs};\n use crate::source_map::{self, SourceMap, ExpnInfo, MacroAttribute, dummy_spanned, respan};\n-use crate::errors;\n use crate::config;\n use crate::entry::{self, EntryPointType};\n use crate::ext::base::{ExtCtxt, Resolver};"}, {"sha": "cf39090e1888b9509eec18e5b984c29dd1cfb096", "filename": "src/libsyntax/test_snippet.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Ftest_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax%2Ftest_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest_snippet.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,8 +1,9 @@\n use crate::source_map::{SourceMap, FilePathMapping};\n-use crate::errors::Handler;\n-use crate::errors::emitter::EmitterWriter;\n use crate::with_globals;\n \n+use errors::Handler;\n+use errors::emitter::EmitterWriter;\n+\n use std::io;\n use std::io::prelude::*;\n use rustc_data_structures::sync::Lrc;"}, {"sha": "773f0948a8a108b7c5221c30dae69b03aad0c6c4", "filename": "src/libsyntax_ext/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2FCargo.toml?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -11,7 +11,7 @@ crate-type = [\"dylib\"]\n \n [dependencies]\n fmt_macros = { path = \"../libfmt_macros\" }\n-rustc_errors = { path = \"../librustc_errors\" }\n+errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "8edd0e1ae3884239b21a1b437cd0e1323108d22f", "filename": "src/libsyntax_ext/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fasm.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -4,7 +4,7 @@ use State::*;\n \n use rustc_data_structures::thin_vec::ThinVec;\n \n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n use syntax::ast;\n use syntax::ext::base::{self, *};"}, {"sha": "d2c397e0eccb5259770c8fd21dd8354a5a2c5028", "filename": "src/libsyntax_ext/assert.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fassert.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,4 +1,4 @@\n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n use syntax::ast::{self, *};\n use syntax::source_map::Spanned;"}, {"sha": "090d730289d26b1655eabeaeba5ca76156fa15fd", "filename": "src/libsyntax_ext/cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fcfg.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -2,7 +2,7 @@\n /// a literal `true` or `false` based on whether the given cfg matches the\n /// current compilation environment.\n \n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n use syntax::ast;\n use syntax::ext::base::{self, *};"}, {"sha": "6aba4d83cd27c21b31fa38f7eda769473cdd8eab", "filename": "src/libsyntax_ext/deriving/custom.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,7 +1,7 @@\n-use crate::errors::FatalError;\n use crate::proc_macro_impl::EXEC_STRATEGY;\n use crate::proc_macro_server;\n \n+use errors::FatalError;\n use syntax::ast::{self, ItemKind, Attribute, Mac};\n use syntax::attr::{mark_used, mark_known};\n use syntax::source_map::Span;"}, {"sha": "5efa6b36f675dce2bfc6099525e77feb48b1b453", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -3,8 +3,8 @@ use Position::*;\n \n use fmt_macros as parse;\n \n-use crate::errors::DiagnosticBuilder;\n-use crate::errors::Applicability;\n+use errors::DiagnosticBuilder;\n+use errors::Applicability;\n \n use syntax::ast;\n use syntax::ext::base::{self, *};"}, {"sha": "2baf530aedae7e37386ae7ae68104e64c8dfcf20", "filename": "src/libsyntax_ext/global_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fglobal_asm.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -8,7 +8,7 @@\n /// LLVM's `module asm \"some assembly here\"`. All of LLVM's caveats\n /// therefore apply.\n \n-use crate::errors::DiagnosticBuilder;\n+use errors::DiagnosticBuilder;\n \n use syntax::ast;\n use syntax::source_map::respan;"}, {"sha": "aa472eee3cab338541952aacf5baf63415cef65b", "filename": "src/libsyntax_ext/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flib.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -16,8 +16,6 @@\n \n extern crate proc_macro;\n \n-use rustc_errors as errors;\n-\n mod diagnostics;\n \n mod asm;"}, {"sha": "d8f8decef39b18418ea130f5b3d6bced2f5b03e7", "filename": "src/libsyntax_ext/proc_macro_decls.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fproc_macro_decls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fproc_macro_decls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_decls.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,7 +1,6 @@\n use std::mem;\n \n use crate::deriving;\n-use crate::errors;\n \n use syntax::ast::{self, Ident};\n use syntax::attr;"}, {"sha": "f0fc6392cd73f593f7e963e8c4342f8ce2182b37", "filename": "src/libsyntax_ext/proc_macro_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fproc_macro_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fproc_macro_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_impl.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,6 +1,6 @@\n-use crate::errors::FatalError;\n use crate::proc_macro_server;\n \n+use errors::FatalError;\n use syntax::source_map::Span;\n use syntax::ext::base::{self, *};\n use syntax::tokenstream::TokenStream;"}, {"sha": "fd82dac5ab6d8a0ee45ad360dc7c1a5728400942", "filename": "src/libsyntax_ext/proc_macro_server.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07/src%2Flibsyntax_ext%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_server.rs?ref=0bc8f6f3f4ecfa3309aaa4df52fb4aa1ddd63b07", "patch": "@@ -1,4 +1,4 @@\n-use crate::errors::{self, Diagnostic, DiagnosticBuilder};\n+use errors::{Diagnostic, DiagnosticBuilder};\n \n use std::panic;\n "}]}