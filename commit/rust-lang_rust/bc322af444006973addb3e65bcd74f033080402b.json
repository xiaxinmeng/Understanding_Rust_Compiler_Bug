{"sha": "bc322af444006973addb3e65bcd74f033080402b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMzIyYWY0NDQwMDY5NzNhZGRiM2U2NWJjZDc0ZjAzMzA4MDQwMmI=", "commit": {"author": {"name": "Freyskeyd", "email": "simon.paitrault@gmail.com", "date": "2019-07-08T14:03:29Z"}, "committer": {"name": "Freyskeyd", "email": "simon.paitrault@gmail.com", "date": "2019-07-09T14:55:00Z"}, "message": "doc(ptr): add example for {read,write}_unaligned\n\nSigned-off-by: Freyskeyd <simon.paitrault@gmail.com>", "tree": {"sha": "50c00b32bdc3472bf4b2f2829168c8c9e8bbfb35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50c00b32bdc3472bf4b2f2829168c8c9e8bbfb35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc322af444006973addb3e65bcd74f033080402b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEcFqQFrmq8M2oHJqvWmRd7feQ8RMFAl0kqsQACgkQWmRd7feQ\n8RO44wgApRtr/kI7d6cBN8LpXcy2egUgz2HKfdLYdNALJmGXZcxznppX+jxfss65\nIxRfKhIIyWOxEwGC56zCIEp06qD0XjD5qmBVq9u7+ddxTIguiWS6U6OQNvjJP13q\nJlxUtK6ybAAoFsKmdtWxnZkp1QVTaqjR/BDWm+6i+ThPlux23qgXA4STwkwvWVI7\nCqw5MLuq+vBBv37+KQUh64klrEptQKjJzvwRoJy9xT+RDBXc64hCT4ZCqW6b790J\nvj8/N0seBt0xxTHAqSenBc9V3wt6xTB61OXIc7q7+E/vg+X0rKQkVc6SpJZtvZGo\nyWsFdl7sjlKMQzWpgSNg8v+NkW5dTw==\n=AM8i\n-----END PGP SIGNATURE-----", "payload": "tree 50c00b32bdc3472bf4b2f2829168c8c9e8bbfb35\nparent 10840b8ae2182128f2e1c84b8aaf41452728de07\nauthor Freyskeyd <simon.paitrault@gmail.com> 1562594609 +0200\ncommitter Freyskeyd <simon.paitrault@gmail.com> 1562684100 +0200\n\ndoc(ptr): add example for {read,write}_unaligned\n\nSigned-off-by: Freyskeyd <simon.paitrault@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc322af444006973addb3e65bcd74f033080402b", "html_url": "https://github.com/rust-lang/rust/commit/bc322af444006973addb3e65bcd74f033080402b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc322af444006973addb3e65bcd74f033080402b/comments", "author": {"login": "Freyskeyd", "id": 1394604, "node_id": "MDQ6VXNlcjEzOTQ2MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1394604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Freyskeyd", "html_url": "https://github.com/Freyskeyd", "followers_url": "https://api.github.com/users/Freyskeyd/followers", "following_url": "https://api.github.com/users/Freyskeyd/following{/other_user}", "gists_url": "https://api.github.com/users/Freyskeyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/Freyskeyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Freyskeyd/subscriptions", "organizations_url": "https://api.github.com/users/Freyskeyd/orgs", "repos_url": "https://api.github.com/users/Freyskeyd/repos", "events_url": "https://api.github.com/users/Freyskeyd/events{/privacy}", "received_events_url": "https://api.github.com/users/Freyskeyd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Freyskeyd", "id": 1394604, "node_id": "MDQ6VXNlcjEzOTQ2MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1394604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Freyskeyd", "html_url": "https://github.com/Freyskeyd", "followers_url": "https://api.github.com/users/Freyskeyd/followers", "following_url": "https://api.github.com/users/Freyskeyd/following{/other_user}", "gists_url": "https://api.github.com/users/Freyskeyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/Freyskeyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Freyskeyd/subscriptions", "organizations_url": "https://api.github.com/users/Freyskeyd/orgs", "repos_url": "https://api.github.com/users/Freyskeyd/repos", "events_url": "https://api.github.com/users/Freyskeyd/events{/privacy}", "received_events_url": "https://api.github.com/users/Freyskeyd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10840b8ae2182128f2e1c84b8aaf41452728de07", "url": "https://api.github.com/repos/rust-lang/rust/commits/10840b8ae2182128f2e1c84b8aaf41452728de07", "html_url": "https://github.com/rust-lang/rust/commit/10840b8ae2182128f2e1c84b8aaf41452728de07"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "df66a2978de41f8de35c31f2352d0d42b5d680c5", "filename": "src/libcore/ptr/mod.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/bc322af444006973addb3e65bcd74f033080402b/src%2Flibcore%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc322af444006973addb3e65bcd74f033080402b/src%2Flibcore%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Fmod.rs?ref=bc322af444006973addb3e65bcd74f033080402b", "patch": "@@ -669,6 +669,22 @@ pub unsafe fn read<T>(src: *const T) -> T {\n ///\n /// Accessing unaligned fields directly with e.g. `packed.unaligned` is safe however.\n // FIXME: Update docs based on outcome of RFC #2582 and friends.\n+///\n+/// # Examples\n+///\n+/// Read an usize value from a byte buffer:\n+///\n+/// ```\n+/// use std::mem;\n+///\n+/// fn read_usize(x: &[u8]) -> usize {\n+///     assert!(x.len() >= mem::size_of::<usize>());\n+///\n+///     let ptr = x.as_ptr() as *const usize;\n+///\n+///     unsafe { ptr.read_unaligned() }\n+/// }\n+/// ```\n #[inline]\n #[stable(feature = \"ptr_unaligned\", since = \"1.17.0\")]\n pub unsafe fn read_unaligned<T>(src: *const T) -> T {\n@@ -839,6 +855,22 @@ pub unsafe fn write<T>(dst: *mut T, src: T) {\n ///\n /// Accessing unaligned fields directly with e.g. `packed.unaligned` is safe however.\n // FIXME: Update docs based on outcome of RFC #2582 and friends.\n+///\n+/// # Examples\n+///\n+/// Write an usize value to a byte buffer:\n+///\n+/// ```\n+/// use std::mem;\n+///\n+/// fn write_usize(x: &mut [u8], val: usize) {\n+///     assert!(x.len() >= mem::size_of::<usize>());\n+///\n+///     let ptr = x.as_mut_ptr() as *mut usize;\n+///\n+///     unsafe { ptr.write_unaligned(val) }\n+/// }\n+/// ```\n #[inline]\n #[stable(feature = \"ptr_unaligned\", since = \"1.17.0\")]\n pub unsafe fn write_unaligned<T>(dst: *mut T, src: T) {"}]}