{"sha": "4bb36593e9b772b65816610c1a343ec8d9c0a82f", "node_id": "C_kwDOAAsO6NoAKDRiYjM2NTkzZTliNzcyYjY1ODE2NjEwYzFhMzQzZWM4ZDljMGE4MmY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-01T07:06:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-01T07:06:57Z"}, "message": "Auto merge of #2094 - dtolnay-contrib:truncate, r=RalfJung\n\nReplace `as` casts in llvm.x86.addcarry.64 implementation\n\nRecommended in https://github.com/rust-lang/miri/pull/2090#pullrequestreview-958491177.", "tree": {"sha": "aa100b53ada46654c5f280d87f1e50566f9245e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa100b53ada46654c5f280d87f1e50566f9245e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bb36593e9b772b65816610c1a343ec8d9c0a82f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb36593e9b772b65816610c1a343ec8d9c0a82f", "html_url": "https://github.com/rust-lang/rust/commit/4bb36593e9b772b65816610c1a343ec8d9c0a82f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bb36593e9b772b65816610c1a343ec8d9c0a82f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49366abfb05d2b04363ba93dae9f8fc78d9f5ee6", "url": "https://api.github.com/repos/rust-lang/rust/commits/49366abfb05d2b04363ba93dae9f8fc78d9f5ee6", "html_url": "https://github.com/rust-lang/rust/commit/49366abfb05d2b04363ba93dae9f8fc78d9f5ee6"}, {"sha": "8d42a7cfdf1eda2584c223354aaa76dd8dde7021", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d42a7cfdf1eda2584c223354aaa76dd8dde7021", "html_url": "https://github.com/rust-lang/rust/commit/8d42a7cfdf1eda2584c223354aaa76dd8dde7021"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "5b820218a9dd7a2068a65b5d942c8643ef98657a", "filename": "src/helpers.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb36593e9b772b65816610c1a343ec8d9c0a82f/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb36593e9b772b65816610c1a343ec8d9c0a82f/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=4bb36593e9b772b65816610c1a343ec8d9c0a82f", "patch": "@@ -1,3 +1,5 @@\n+pub mod convert;\n+\n use std::mem;\n use std::num::NonZeroUsize;\n use std::time::Duration;"}, {"sha": "4506fe47495d045c2842c86ded56927e7adba233", "filename": "src/helpers/convert.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/4bb36593e9b772b65816610c1a343ec8d9c0a82f/src%2Fhelpers%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb36593e9b772b65816610c1a343ec8d9c0a82f/src%2Fhelpers%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers%2Fconvert.rs?ref=4bb36593e9b772b65816610c1a343ec8d9c0a82f", "patch": "@@ -0,0 +1,49 @@\n+use implementations::NarrowerThan;\n+\n+/// Replacement for `as` casts going from wide integer to narrower integer.\n+///\n+/// # Example\n+///\n+/// ```ignore\n+/// let x = 99_u64;\n+/// let lo = x.truncate::<u16>();\n+/// // lo is of type u16, equivalent to `x as u16`.\n+/// ```\n+pub(crate) trait Truncate: Sized {\n+    fn truncate<To>(self) -> To\n+    where\n+        To: NarrowerThan<Self>,\n+    {\n+        NarrowerThan::truncate_from(self)\n+    }\n+}\n+\n+impl Truncate for u16 {}\n+impl Truncate for u32 {}\n+impl Truncate for u64 {}\n+impl Truncate for u128 {}\n+\n+mod implementations {\n+    pub(crate) trait NarrowerThan<T> {\n+        fn truncate_from(wide: T) -> Self;\n+    }\n+\n+    macro_rules! impl_narrower_than {\n+        ($(NarrowerThan<{$($ty:ty),*}> for $self:ty)*) => {\n+            $($(\n+                impl NarrowerThan<$ty> for $self {\n+                    fn truncate_from(wide: $ty) -> Self {\n+                        wide as Self\n+                    }\n+                }\n+            )*)*\n+        };\n+    }\n+\n+    impl_narrower_than! {\n+        NarrowerThan<{u128, u64, u32, u16}> for u8\n+        NarrowerThan<{u128, u64, u32}> for u16\n+        NarrowerThan<{u128, u64}> for u32\n+        NarrowerThan<{u128}> for u64\n+    }\n+}"}, {"sha": "e9845c53766377d291398d9abfb8bbaefb502ee8", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4bb36593e9b772b65816610c1a343ec8d9c0a82f/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb36593e9b772b65816610c1a343ec8d9c0a82f/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=4bb36593e9b772b65816610c1a343ec8d9c0a82f", "patch": "@@ -22,6 +22,7 @@ use rustc_target::{\n };\n \n use super::backtrace::EvalContextExt as _;\n+use crate::helpers::convert::Truncate;\n use crate::*;\n \n /// Returned by `emulate_foreign_item_by_name`.\n@@ -677,8 +678,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let a = this.read_scalar(a)?.to_u64()?;\n                 let b = this.read_scalar(b)?.to_u64()?;\n \n-                let wide_sum = c_in as u128 + a as u128 + b as u128;\n-                let (c_out, sum) = ((wide_sum >> 64) as u8, wide_sum as u64);\n+                let wide_sum = u128::from(c_in) + u128::from(a) + u128::from(b);\n+                let (c_out, sum) = ((wide_sum >> 64).truncate::<u8>(), wide_sum.truncate::<u64>());\n \n                 let c_out_field = this.place_field(dest, 0)?;\n                 this.write_scalar(Scalar::from_u8(c_out), &c_out_field)?;"}]}