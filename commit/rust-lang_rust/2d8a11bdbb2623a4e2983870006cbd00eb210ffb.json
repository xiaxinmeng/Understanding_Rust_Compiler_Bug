{"sha": "2d8a11bdbb2623a4e2983870006cbd00eb210ffb", "node_id": "C_kwDOAAsO6NoAKDJkOGExMWJkYmIyNjIzYTRlMjk4Mzg3MDAwNmNiZDAwZWIyMTBmZmI", "commit": {"author": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2021-12-08T23:20:13Z"}, "committer": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2021-12-08T23:20:13Z"}, "message": "Use `*mut [T]` instead of `[MaybeUninit<T>]`", "tree": {"sha": "a7a36da27f4cf43b3440c98e76c7a47f2cac4426", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7a36da27f4cf43b3440c98e76c7a47f2cac4426"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d8a11bdbb2623a4e2983870006cbd00eb210ffb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d8a11bdbb2623a4e2983870006cbd00eb210ffb", "html_url": "https://github.com/rust-lang/rust/commit/2d8a11bdbb2623a4e2983870006cbd00eb210ffb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d8a11bdbb2623a4e2983870006cbd00eb210ffb/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6851b8d931381c4e7b6d60dab70002efd85dc7a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6851b8d931381c4e7b6d60dab70002efd85dc7a9", "html_url": "https://github.com/rust-lang/rust/commit/6851b8d931381c4e7b6d60dab70002efd85dc7a9"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "089cd4db64c1d597e28f6ff14f0ba2ffe47acdfc", "filename": "library/alloc/src/vec/drain.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2d8a11bdbb2623a4e2983870006cbd00eb210ffb/library%2Falloc%2Fsrc%2Fvec%2Fdrain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d8a11bdbb2623a4e2983870006cbd00eb210ffb/library%2Falloc%2Fsrc%2Fvec%2Fdrain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fdrain.rs?ref=2d8a11bdbb2623a4e2983870006cbd00eb210ffb", "patch": "@@ -1,7 +1,7 @@\n use crate::alloc::{Allocator, Global};\n use core::fmt;\n use core::iter::{FusedIterator, TrustedLen};\n-use core::mem::{self, MaybeUninit};\n+use core::mem;\n use core::ptr::{self, NonNull};\n use core::slice::{self};\n \n@@ -160,12 +160,10 @@ impl<T, A: Allocator> Drop for Drain<'_, T, A> {\n             // a pointer with mutable provenance is necessary. Therefore we must reconstruct\n             // it from the original vec but also avoid creating a &mut to the front since that could\n             // invalidate raw pointers to it which some unsafe code might rely on.\n-            let vec = vec.as_mut();\n-            let spare_capacity = vec.spare_capacity_mut();\n-            let drop_offset = drop_ptr.offset_from(spare_capacity.as_ptr() as *const _) as usize;\n-            let drop_range = drop_offset..(drop_offset + drop_len);\n-            let to_drop = &mut spare_capacity[drop_range];\n-            ptr::drop_in_place(MaybeUninit::slice_assume_init_mut(to_drop));\n+            let vec_ptr = vec.as_mut().as_mut_ptr();\n+            let drop_offset = drop_ptr.offset_from(vec_ptr) as usize;\n+            let to_drop = ptr::slice_from_raw_parts_mut(vec_ptr.add(drop_offset), drop_len);\n+            ptr::drop_in_place(to_drop);\n         }\n     }\n }"}]}