{"sha": "afa2edbe429467577c98a346323807c3df04a105", "node_id": "C_kwDOAAsO6NoAKGFmYTJlZGJlNDI5NDY3NTc3Yzk4YTM0NjMyMzgwN2MzZGYwNGExMDU", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-06-09T10:19:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-09T10:19:55Z"}, "message": "Rollup merge of #95860 - c410-f3r:stabilize-meta, r=joshtriplett\n\nStabilize `$$` in Rust 1.63.0\n\n# Stabilization proposal\n\nThis PR proposes the stabilization of a subset of `#![feature(macro_metavar_expr)]` or more specifically, the stabilization of dollar-dollar (`$$`).\n\nTracking issue: #83527\nVersion: 1.63 (2022-06-28 => beta, 2022-08-11 => stable).\n\n## What is stabilized\n\n```rust\nmacro_rules! foo {\n    () => {\n        macro_rules! bar {\n            ( $$( $$any:tt )* ) => { $$( $$any )* };\n        }\n    };\n}\n\nfn main() {\n    foo!();\n}\n```\n\n## Motivation\n\nFor more examples, see the [RFC](https://github.com/markbt/rfcs/blob/macro_metavar_expr/text/0000-macro-metavar-expr.md).\n\nUsers must currently resort to a tricky and not so well-known hack to declare nested macros with repetitions.\n\n```rust\nmacro_rules! foo {\n    ($dollar:tt) => {\n        macro_rules! bar {\n            ( $dollar ( $any:tt )* ) => { $dollar ( $any )* };\n        }\n    };\n}\nfn main() {\n    foo!($);\n}\n```\n\nAs seen above, such hack is fragile and makes work with declarative macros much more unpleasant. Dollar-dollar (`$$`), on the other hand, makes nested macros more intuitive.\n\n## What isn't stabilized\n\n`count`, `ignore`, `index` and `length` are not being stabilized due to the lack of consensus.\n\n## History\n\n* 2021-02-22, [RFC: Declarative macro metavariable expressions](https://github.com/rust-lang/rfcs/pull/3086)\n* 2021-03-26, [Tracking Issue for RFC 3086: macro metavariable expressions](https://github.com/rust-lang/rust/issues/83527)\n* 2022-02-01, [Implement macro meta-variable expressions](https://github.com/rust-lang/rust/pull/93545)\n* 2022-02-25, [[1/2] Implement macro meta-variable expressions](https://github.com/rust-lang/rust/pull/94368)\n* 2022-03-11, [[2/2] Implement macro meta-variable expressions](https://github.com/rust-lang/rust/pull/94833)\n* 2022-03-12, [Fix remaining meta-variable expression TODOs](https://github.com/rust-lang/rust/pull/94884)\n* 2019-03-21, [[macro-metavar-expr] Fix generated tokens hygiene](https://github.com/rust-lang/rust/pull/95188)\n* 2022-04-07, [Kickstart the inner usage of macro_metavar_expr](https://github.com/rust-lang/rust/pull/95761)\n* 2022-04-07, [[macro_metavar_expr] Add tests to ensure the feature requirement](https://github.com/rust-lang/rust/pull/95764)\n\n## Non-stabilized expressions\n\nhttps://github.com/rust-lang/rust/issues/83527 lists several concerns about some characteristics of `count`, `index` and `length` that effectively make their stabilization unfeasible. `$$` and `ignore`, however, are not part of any discussion and thus are suitable for stabilization.\n\nIt is not in the scope of this PR to detail each concern or suggest any possible converging solution. Such thing should be restrained in this tracking issue.\n\n## Tests\n\nThis list is a subset of https://github.com/rust-lang/rust/tree/master/src/test/ui/macros/rfc-3086-metavar-expr\n\n* [Ensures that nested macros have correct behavior](https://github.com/rust-lang/rust/blob/master/src/test/ui/macros/rfc-3086-metavar-expr/dollar-dollar-has-correct-behavior.rs)\n\n* [Compares produced tokens to assert expected outputs](https://github.com/rust-lang/rust/blob/master/src/test/ui/macros/rfc-3086-metavar-expr/feature-gate-macro_metavar_expr.rs)\n\n* [Checks the declarations of the feature](https://github.com/rust-lang/rust/blob/master/src/test/ui/macros/rfc-3086-metavar-expr/required-feature.rs)\n\n* [Verifies all possible errors that can occur due to incorrect user input](https://github.com/rust-lang/rust/blob/master/src/test/ui/macros/rfc-3086-metavar-expr/syntax-errors.rs)\n\n## Possible future work\n\nOnce consensus is achieved, other nightly expressions can be stabilized.\n\nThanks ``@markbt`` for creating the RFC and thanks to ``@petrochenkov`` and ``@mark-i-m`` for reviewing the implementations.", "tree": {"sha": "0d6b6e4fa962bb6aedab987ba8525cc5e4297eec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d6b6e4fa962bb6aedab987ba8525cc5e4297eec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afa2edbe429467577c98a346323807c3df04a105", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJioclLCRBK7hj4Ov3rIwAA5HcIAAmxAw4qG8MAJHF+cpfE8Wn8\nUl37jPDEN2PCh/boEYj2mDER2N9NWzdxJMKETpGHMZJhaf5mGnBw3ktGja7KnAG1\nMAee9tJE+iy4EAU+Y7lnBhUykbrGxOAirmg3mb6IHsK4RGfVlOPjSydrwwbfudAr\nEJzC+C41+qjOFg5s4l8FFOfzo6JTL90WIyEZdIYOL3UJbxM+VRcgtrz2IOyaimOV\nDnzeEZFyhMkTlcvRcTdiptpjZcoqNbRetk4mgcNn9DXhS6OVUtQ7+pr65iQV9Dak\na9Y8VQolDtt29Nolf12VZsy/3LENOdLhCcX75vcdgl4hsI+e1AwnmB5CJKVamsQ=\n=It4P\n-----END PGP SIGNATURE-----\n", "payload": "tree 0d6b6e4fa962bb6aedab987ba8525cc5e4297eec\nparent f14ccdbf6af63a0ee876821f11bd0d982e97818d\nparent 9edaa76adce4de737db54194eb13d6c298827b37\nauthor Yuki Okushi <jtitor@2k36.org> 1654769995 +0900\ncommitter GitHub <noreply@github.com> 1654769995 +0900\n\nRollup merge of #95860 - c410-f3r:stabilize-meta, r=joshtriplett\n\nStabilize `$$` in Rust 1.63.0\n\n# Stabilization proposal\n\nThis PR proposes the stabilization of a subset of `#![feature(macro_metavar_expr)]` or more specifically, the stabilization of dollar-dollar (`$$`).\n\nTracking issue: #83527\nVersion: 1.63 (2022-06-28 => beta, 2022-08-11 => stable).\n\n## What is stabilized\n\n```rust\nmacro_rules! foo {\n    () => {\n        macro_rules! bar {\n            ( $$( $$any:tt )* ) => { $$( $$any )* };\n        }\n    };\n}\n\nfn main() {\n    foo!();\n}\n```\n\n## Motivation\n\nFor more examples, see the [RFC](https://github.com/markbt/rfcs/blob/macro_metavar_expr/text/0000-macro-metavar-expr.md).\n\nUsers must currently resort to a tricky and not so well-known hack to declare nested macros with repetitions.\n\n```rust\nmacro_rules! foo {\n    ($dollar:tt) => {\n        macro_rules! bar {\n            ( $dollar ( $any:tt )* ) => { $dollar ( $any )* };\n        }\n    };\n}\nfn main() {\n    foo!($);\n}\n```\n\nAs seen above, such hack is fragile and makes work with declarative macros much more unpleasant. Dollar-dollar (`$$`), on the other hand, makes nested macros more intuitive.\n\n## What isn't stabilized\n\n`count`, `ignore`, `index` and `length` are not being stabilized due to the lack of consensus.\n\n## History\n\n* 2021-02-22, [RFC: Declarative macro metavariable expressions](https://github.com/rust-lang/rfcs/pull/3086)\n* 2021-03-26, [Tracking Issue for RFC 3086: macro metavariable expressions](https://github.com/rust-lang/rust/issues/83527)\n* 2022-02-01, [Implement macro meta-variable expressions](https://github.com/rust-lang/rust/pull/93545)\n* 2022-02-25, [[1/2] Implement macro meta-variable expressions](https://github.com/rust-lang/rust/pull/94368)\n* 2022-03-11, [[2/2] Implement macro meta-variable expressions](https://github.com/rust-lang/rust/pull/94833)\n* 2022-03-12, [Fix remaining meta-variable expression TODOs](https://github.com/rust-lang/rust/pull/94884)\n* 2019-03-21, [[macro-metavar-expr] Fix generated tokens hygiene](https://github.com/rust-lang/rust/pull/95188)\n* 2022-04-07, [Kickstart the inner usage of macro_metavar_expr](https://github.com/rust-lang/rust/pull/95761)\n* 2022-04-07, [[macro_metavar_expr] Add tests to ensure the feature requirement](https://github.com/rust-lang/rust/pull/95764)\n\n## Non-stabilized expressions\n\nhttps://github.com/rust-lang/rust/issues/83527 lists several concerns about some characteristics of `count`, `index` and `length` that effectively make their stabilization unfeasible. `$$` and `ignore`, however, are not part of any discussion and thus are suitable for stabilization.\n\nIt is not in the scope of this PR to detail each concern or suggest any possible converging solution. Such thing should be restrained in this tracking issue.\n\n## Tests\n\nThis list is a subset of https://github.com/rust-lang/rust/tree/master/src/test/ui/macros/rfc-3086-metavar-expr\n\n* [Ensures that nested macros have correct behavior](https://github.com/rust-lang/rust/blob/master/src/test/ui/macros/rfc-3086-metavar-expr/dollar-dollar-has-correct-behavior.rs)\n\n* [Compares produced tokens to assert expected outputs](https://github.com/rust-lang/rust/blob/master/src/test/ui/macros/rfc-3086-metavar-expr/feature-gate-macro_metavar_expr.rs)\n\n* [Checks the declarations of the feature](https://github.com/rust-lang/rust/blob/master/src/test/ui/macros/rfc-3086-metavar-expr/required-feature.rs)\n\n* [Verifies all possible errors that can occur due to incorrect user input](https://github.com/rust-lang/rust/blob/master/src/test/ui/macros/rfc-3086-metavar-expr/syntax-errors.rs)\n\n## Possible future work\n\nOnce consensus is achieved, other nightly expressions can be stabilized.\n\nThanks ``@markbt`` for creating the RFC and thanks to ``@petrochenkov`` and ``@mark-i-m`` for reviewing the implementations.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afa2edbe429467577c98a346323807c3df04a105", "html_url": "https://github.com/rust-lang/rust/commit/afa2edbe429467577c98a346323807c3df04a105", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afa2edbe429467577c98a346323807c3df04a105/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f14ccdbf6af63a0ee876821f11bd0d982e97818d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f14ccdbf6af63a0ee876821f11bd0d982e97818d", "html_url": "https://github.com/rust-lang/rust/commit/f14ccdbf6af63a0ee876821f11bd0d982e97818d"}, {"sha": "9edaa76adce4de737db54194eb13d6c298827b37", "url": "https://api.github.com/repos/rust-lang/rust/commits/9edaa76adce4de737db54194eb13d6c298827b37", "html_url": "https://github.com/rust-lang/rust/commit/9edaa76adce4de737db54194eb13d6c298827b37"}], "stats": {"total": 76, "additions": 19, "deletions": 57}, "files": [{"sha": "d4b8563a036664b58ed53249758ea58e367a318e", "filename": "compiler/rustc_expand/src/mbe/quoted.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/afa2edbe429467577c98a346323807c3df04a105/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afa2edbe429467577c98a346323807c3df04a105/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fquoted.rs?ref=afa2edbe429467577c98a346323807c3df04a105", "patch": "@@ -234,8 +234,6 @@ fn parse_tree(\n                             sess,\n                             &Token { kind: token::Dollar, span },\n                         );\n-                    } else {\n-                        maybe_emit_macro_metavar_expr_feature(features, sess, span);\n                     }\n                     TokenTree::token(token::Dollar, span)\n                 }"}, {"sha": "c248c46f52cd35fa9676dbdd9e91247ca22f5ec7", "filename": "src/test/ui/macros/rfc-3086-metavar-expr/allowed-features.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/afa2edbe429467577c98a346323807c3df04a105/src%2Ftest%2Fui%2Fmacros%2Frfc-3086-metavar-expr%2Fallowed-features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afa2edbe429467577c98a346323807c3df04a105/src%2Ftest%2Fui%2Fmacros%2Frfc-3086-metavar-expr%2Fallowed-features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Frfc-3086-metavar-expr%2Fallowed-features.rs?ref=afa2edbe429467577c98a346323807c3df04a105", "patch": "@@ -0,0 +1,12 @@\n+// check-pass\n+\n+macro_rules! dollar_dollar {\n+    () => {\n+        macro_rules! bar {\n+            ( $$( $$any:tt )* ) => { $$( $$any )* };\n+        }\n+    };\n+}\n+\n+fn main() {\n+}"}, {"sha": "cce3e578aeafeaacf709b5f2209bbce656be1f4e", "filename": "src/test/ui/macros/rfc-3086-metavar-expr/required-features.rs", "status": "renamed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/afa2edbe429467577c98a346323807c3df04a105/src%2Ftest%2Fui%2Fmacros%2Frfc-3086-metavar-expr%2Frequired-features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afa2edbe429467577c98a346323807c3df04a105/src%2Ftest%2Fui%2Fmacros%2Frfc-3086-metavar-expr%2Frequired-features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Frfc-3086-metavar-expr%2Frequired-features.rs?ref=afa2edbe429467577c98a346323807c3df04a105", "patch": "@@ -5,18 +5,6 @@ macro_rules! count {\n     };\n }\n \n-macro_rules! dollar_dollar {\n-    () => {\n-        macro_rules! bar {\n-            ( $$( $$any:tt )* ) => { $$( $$any )* };\n-            //~^ ERROR meta-variable expressions are unstable\n-            //~| ERROR meta-variable expressions are unstable\n-            //~| ERROR meta-variable expressions are unstable\n-            //~| ERROR meta-variable expressions are unstable\n-        }\n-    };\n-}\n-\n macro_rules! index {\n     ( $( $e:stmt ),* ) => {\n         $( ${ignore(e)} ${index()} )*", "previous_filename": "src/test/ui/macros/rfc-3086-metavar-expr/required-feature.rs"}, {"sha": "5efd3b10442d10290aeed0c2af787042d469654a", "filename": "src/test/ui/macros/rfc-3086-metavar-expr/required-features.stderr", "status": "renamed", "additions": 7, "deletions": 43, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/afa2edbe429467577c98a346323807c3df04a105/src%2Ftest%2Fui%2Fmacros%2Frfc-3086-metavar-expr%2Frequired-features.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/afa2edbe429467577c98a346323807c3df04a105/src%2Ftest%2Fui%2Fmacros%2Frfc-3086-metavar-expr%2Frequired-features.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Frfc-3086-metavar-expr%2Frequired-features.stderr?ref=afa2edbe429467577c98a346323807c3df04a105", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: meta-variable expressions are unstable\n-  --> $DIR/required-feature.rs:3:10\n+  --> $DIR/required-features.rs:3:10\n    |\n LL |         ${ count(e) }\n    |          ^^^^^^^^^^^^\n@@ -8,43 +8,7 @@ LL |         ${ count(e) }\n    = help: add `#![feature(macro_metavar_expr)]` to the crate attributes to enable\n \n error[E0658]: meta-variable expressions are unstable\n-  --> $DIR/required-feature.rs:11:16\n-   |\n-LL |             ( $$( $$any:tt )* ) => { $$( $$any )* };\n-   |                ^\n-   |\n-   = note: see issue #83527 <https://github.com/rust-lang/rust/issues/83527> for more information\n-   = help: add `#![feature(macro_metavar_expr)]` to the crate attributes to enable\n-\n-error[E0658]: meta-variable expressions are unstable\n-  --> $DIR/required-feature.rs:11:20\n-   |\n-LL |             ( $$( $$any:tt )* ) => { $$( $$any )* };\n-   |                    ^\n-   |\n-   = note: see issue #83527 <https://github.com/rust-lang/rust/issues/83527> for more information\n-   = help: add `#![feature(macro_metavar_expr)]` to the crate attributes to enable\n-\n-error[E0658]: meta-variable expressions are unstable\n-  --> $DIR/required-feature.rs:11:39\n-   |\n-LL |             ( $$( $$any:tt )* ) => { $$( $$any )* };\n-   |                                       ^\n-   |\n-   = note: see issue #83527 <https://github.com/rust-lang/rust/issues/83527> for more information\n-   = help: add `#![feature(macro_metavar_expr)]` to the crate attributes to enable\n-\n-error[E0658]: meta-variable expressions are unstable\n-  --> $DIR/required-feature.rs:11:43\n-   |\n-LL |             ( $$( $$any:tt )* ) => { $$( $$any )* };\n-   |                                           ^\n-   |\n-   = note: see issue #83527 <https://github.com/rust-lang/rust/issues/83527> for more information\n-   = help: add `#![feature(macro_metavar_expr)]` to the crate attributes to enable\n-\n-error[E0658]: meta-variable expressions are unstable\n-  --> $DIR/required-feature.rs:22:13\n+  --> $DIR/required-features.rs:10:13\n    |\n LL |         $( ${ignore(e)} ${index()} )*\n    |             ^^^^^^^^^^^\n@@ -53,7 +17,7 @@ LL |         $( ${ignore(e)} ${index()} )*\n    = help: add `#![feature(macro_metavar_expr)]` to the crate attributes to enable\n \n error[E0658]: meta-variable expressions are unstable\n-  --> $DIR/required-feature.rs:22:26\n+  --> $DIR/required-features.rs:10:26\n    |\n LL |         $( ${ignore(e)} ${index()} )*\n    |                          ^^^^^^^^^\n@@ -62,7 +26,7 @@ LL |         $( ${ignore(e)} ${index()} )*\n    = help: add `#![feature(macro_metavar_expr)]` to the crate attributes to enable\n \n error[E0658]: meta-variable expressions are unstable\n-  --> $DIR/required-feature.rs:30:19\n+  --> $DIR/required-features.rs:18:19\n    |\n LL |         0 $( + 1 ${ignore(i)} )*\n    |                   ^^^^^^^^^^^\n@@ -71,7 +35,7 @@ LL |         0 $( + 1 ${ignore(i)} )*\n    = help: add `#![feature(macro_metavar_expr)]` to the crate attributes to enable\n \n error[E0658]: meta-variable expressions are unstable\n-  --> $DIR/required-feature.rs:37:13\n+  --> $DIR/required-features.rs:25:13\n    |\n LL |         $( ${ignore(e)} ${length()} )*\n    |             ^^^^^^^^^^^\n@@ -80,14 +44,14 @@ LL |         $( ${ignore(e)} ${length()} )*\n    = help: add `#![feature(macro_metavar_expr)]` to the crate attributes to enable\n \n error[E0658]: meta-variable expressions are unstable\n-  --> $DIR/required-feature.rs:37:26\n+  --> $DIR/required-features.rs:25:26\n    |\n LL |         $( ${ignore(e)} ${length()} )*\n    |                          ^^^^^^^^^^\n    |\n    = note: see issue #83527 <https://github.com/rust-lang/rust/issues/83527> for more information\n    = help: add `#![feature(macro_metavar_expr)]` to the crate attributes to enable\n \n-error: aborting due to 10 previous errors\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0658`.", "previous_filename": "src/test/ui/macros/rfc-3086-metavar-expr/required-feature.stderr"}]}