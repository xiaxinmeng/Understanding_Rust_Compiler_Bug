{"sha": "f3de4ee2a798cb103bbac849cc6981b7de89cb90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzZGU0ZWUyYTc5OGNiMTAzYmJhYzg0OWNjNjk4MWI3ZGU4OWNiOTA=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-02T06:12:34Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-02T06:12:34Z"}, "message": "Teach the associative_binary_op_ty_fold about box, mutable and tys.", "tree": {"sha": "2ec628edf95e341e12434f572ebc103fea9cae2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ec628edf95e341e12434f572ebc103fea9cae2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3de4ee2a798cb103bbac849cc6981b7de89cb90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3de4ee2a798cb103bbac849cc6981b7de89cb90", "html_url": "https://github.com/rust-lang/rust/commit/f3de4ee2a798cb103bbac849cc6981b7de89cb90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3de4ee2a798cb103bbac849cc6981b7de89cb90/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01cfcfab1356407f98081e565644d4e3047fe36c", "url": "https://api.github.com/repos/rust-lang/rust/commits/01cfcfab1356407f98081e565644d4e3047fe36c", "html_url": "https://github.com/rust-lang/rust/commit/01cfcfab1356407f98081e565644d4e3047fe36c"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "30e8b7516d5053a82fb99704f723b97fa1ab62b5", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3de4ee2a798cb103bbac849cc6981b7de89cb90/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/f3de4ee2a798cb103bbac849cc6981b7de89cb90/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=f3de4ee2a798cb103bbac849cc6981b7de89cb90", "patch": "@@ -926,6 +926,7 @@ let associative_binary_op_ty_fold\n     fn islots oslot\n   in\n     { base with\n+        ty_fold_tys = (fun ts -> reduce (Array.to_list ts));\n         ty_fold_slots = (fun slots -> reduce (Array.to_list slots));\n         ty_fold_slot = (fun (_, a) -> a);\n         ty_fold_tags = (fun tab -> reduce (htab_vals tab));\n@@ -941,6 +942,8 @@ let associative_binary_op_ty_fold\n                          reduce (List.map reduce_fn (htab_vals fns)));\n         ty_fold_chan = (fun a -> a);\n         ty_fold_port = (fun a -> a);\n+        ty_fold_box = (fun a -> a);\n+        ty_fold_mutable = (fun a -> a);\n         ty_fold_constrained = (fun (a, _) -> a) }\n \n let ty_fold_bool_and (default:bool) : bool simple_ty_fold ="}]}