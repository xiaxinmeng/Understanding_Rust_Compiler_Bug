{"sha": "4dfe69a6e6cc796154d6eb3e07e7fba18f29168e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkZmU2OWE2ZTZjYzc5NjE1NGQ2ZWIzZTA3ZTdmYmExOGYyOTE2OGU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-02-22T09:26:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-22T09:26:09Z"}, "message": "Rollup merge of #82353 - camelid:no-more-param_env-cell, r=jyn514\n\nrustdoc: Remove unnecessary `Cell` around `param_env`\n\nr? `@jyn514`", "tree": {"sha": "1ba2959e03c7fa1ef68867b80e5a281ac22a3ed0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ba2959e03c7fa1ef68867b80e5a281ac22a3ed0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dfe69a6e6cc796154d6eb3e07e7fba18f29168e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgM3iyCRBK7hj4Ov3rIwAAdHIIAAxyJf5ryzvBcWUK8R9dIwQb\nEBMV1i99xQjB4kO1KfhP7UJFrey6i5pKFbl9raD1pHn2JlnmG8vplMYCR5pQKKG7\nUZoeRmuJsRUtc/XByATpjDjK0pQwY9uqv4YbgHT/uXBk/alYmB8UkURT/DJCsmZC\nMy+xaEnMDOrbUFjr9Ro0N+zY5PAA4PtKavZWo6wQIMmcggLr2yLXsfus3AHtE/d2\nCotCJyKr3ZoZ9u5ZayeLbs8i9R9X35kbLw/NwU8HgrDNe2vwjcynlJZN38t2Fe4A\nwhhd/4vh1M3LOhaXerZ5POElNuAX5vnmjO9ZozsfqZPIEYV0cic1po3Tt15j4F8=\n=up8e\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ba2959e03c7fa1ef68867b80e5a281ac22a3ed0\nparent 1dba8ce8a54cc99ebde1afd0babf38f0dc99469c\nparent 6a85719b6a21d13a7ab9fcd0306b6fafb8b25e09\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1613985969 +0900\ncommitter GitHub <noreply@github.com> 1613985969 +0900\n\nRollup merge of #82353 - camelid:no-more-param_env-cell, r=jyn514\n\nrustdoc: Remove unnecessary `Cell` around `param_env`\n\nr? `@jyn514`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dfe69a6e6cc796154d6eb3e07e7fba18f29168e", "html_url": "https://github.com/rust-lang/rust/commit/4dfe69a6e6cc796154d6eb3e07e7fba18f29168e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dfe69a6e6cc796154d6eb3e07e7fba18f29168e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dba8ce8a54cc99ebde1afd0babf38f0dc99469c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dba8ce8a54cc99ebde1afd0babf38f0dc99469c", "html_url": "https://github.com/rust-lang/rust/commit/1dba8ce8a54cc99ebde1afd0babf38f0dc99469c"}, {"sha": "6a85719b6a21d13a7ab9fcd0306b6fafb8b25e09", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a85719b6a21d13a7ab9fcd0306b6fafb8b25e09", "html_url": "https://github.com/rust-lang/rust/commit/6a85719b6a21d13a7ab9fcd0306b6fafb8b25e09"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "98e1299df2f261c2f6e0df847c86326a7443e7a6", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4dfe69a6e6cc796154d6eb3e07e7fba18f29168e/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dfe69a6e6cc796154d6eb3e07e7fba18f29168e/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=4dfe69a6e6cc796154d6eb3e07e7fba18f29168e", "patch": "@@ -1519,7 +1519,7 @@ fn normalize(cx: &mut DocContext<'tcx>, ty: Ty<'_>) -> Option<Ty<'tcx>> {\n     let lifted = ty.lift_to_tcx(cx.tcx).unwrap();\n     let normalized = cx.tcx.infer_ctxt().enter(|infcx| {\n         infcx\n-            .at(&ObligationCause::dummy(), cx.param_env.get())\n+            .at(&ObligationCause::dummy(), cx.param_env)\n             .normalize(lifted)\n             .map(|resolved| infcx.resolve_vars_if_possible(resolved.value))\n     });"}, {"sha": "1813367f789a12068713f245d0d5fa3565a6a623", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4dfe69a6e6cc796154d6eb3e07e7fba18f29168e/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dfe69a6e6cc796154d6eb3e07e7fba18f29168e/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=4dfe69a6e6cc796154d6eb3e07e7fba18f29168e", "patch": "@@ -26,10 +26,7 @@ use rustc_span::DUMMY_SP;\n \n use std::mem;\n use std::rc::Rc;\n-use std::{\n-    cell::{Cell, RefCell},\n-    collections::hash_map::Entry,\n-};\n+use std::{cell::RefCell, collections::hash_map::Entry};\n \n use crate::clean;\n use crate::clean::inline::build_external_trait;\n@@ -49,7 +46,7 @@ crate struct DocContext<'tcx> {\n     /// Used for normalization.\n     ///\n     /// Most of this logic is copied from rustc_lint::late.\n-    crate param_env: Cell<ParamEnv<'tcx>>,\n+    crate param_env: ParamEnv<'tcx>,\n     /// Later on moved into `cache`\n     crate renderinfo: RefCell<RenderInfo>,\n     /// Later on moved through `clean::Crate` into `cache`\n@@ -89,9 +86,9 @@ impl<'tcx> DocContext<'tcx> {\n     }\n \n     crate fn with_param_env<T, F: FnOnce(&mut Self) -> T>(&mut self, def_id: DefId, f: F) -> T {\n-        let old_param_env = self.param_env.replace(self.tcx.param_env(def_id));\n+        let old_param_env = mem::replace(&mut self.param_env, self.tcx.param_env(def_id));\n         let ret = f(self);\n-        self.param_env.set(old_param_env);\n+        self.param_env = old_param_env;\n         ret\n     }\n \n@@ -511,7 +508,7 @@ crate fn run_global_ctxt(\n     let mut ctxt = DocContext {\n         tcx,\n         resolver,\n-        param_env: Cell::new(ParamEnv::empty()),\n+        param_env: ParamEnv::empty(),\n         external_traits: Default::default(),\n         active_extern_traits: Default::default(),\n         renderinfo: RefCell::new(renderinfo),"}]}