{"sha": "a8e4301a5d78409ae05669be3514e848316e48f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZTQzMDFhNWQ3ODQwOWFlMDU2NjliZTM1MTRlODQ4MzE2ZTQ4Zjg=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-07-09T18:14:17Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-07-11T22:51:09Z"}, "message": "Fix the handling of type params on generic static methods. Closes #7571.", "tree": {"sha": "b46e51e7e8f5bc9fbf1762c0181823c379f60341", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b46e51e7e8f5bc9fbf1762c0181823c379f60341"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8e4301a5d78409ae05669be3514e848316e48f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8e4301a5d78409ae05669be3514e848316e48f8", "html_url": "https://github.com/rust-lang/rust/commit/a8e4301a5d78409ae05669be3514e848316e48f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8e4301a5d78409ae05669be3514e848316e48f8/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "052c482bbd87acc7ee824b6b8d2efb36c5b9917e", "url": "https://api.github.com/repos/rust-lang/rust/commits/052c482bbd87acc7ee824b6b8d2efb36c5b9917e", "html_url": "https://github.com/rust-lang/rust/commit/052c482bbd87acc7ee824b6b8d2efb36c5b9917e"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "ec384543deac10a5837f7018680bfadb8e01bf49", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a8e4301a5d78409ae05669be3514e848316e48f8/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8e4301a5d78409ae05669be3514e848316e48f8/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=a8e4301a5d78409ae05669be3514e848316e48f8", "patch": "@@ -278,7 +278,7 @@ pub fn ensure_trait_methods(ccx: &CrateCtxt,\n         // Represents [A',B',C']\n         let num_trait_bounds = trait_ty_generics.type_param_defs.len();\n         let non_shifted_trait_tps = do vec::from_fn(num_trait_bounds) |i| {\n-            ty::mk_param(tcx, i, dummy_defid)\n+            ty::mk_param(tcx, i, trait_ty_generics.type_param_defs[i].def_id)\n         };\n \n         // Represents [D']\n@@ -288,7 +288,8 @@ pub fn ensure_trait_methods(ccx: &CrateCtxt,\n         // Represents [E',F',G']\n         let num_method_bounds = m.generics.type_param_defs.len();\n         let shifted_method_tps = do vec::from_fn(num_method_bounds) |i| {\n-            ty::mk_param(tcx, i + 1, dummy_defid)\n+            ty::mk_param(tcx, i + num_trait_bounds + 1,\n+                         m.generics.type_param_defs[i].def_id)\n         };\n \n         // build up the substitution from"}, {"sha": "a4e592872a714c9cab1472a4944031af68962191", "filename": "src/test/run-pass/generic-static-methods.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a8e4301a5d78409ae05669be3514e848316e48f8/src%2Ftest%2Frun-pass%2Fgeneric-static-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8e4301a5d78409ae05669be3514e848316e48f8/src%2Ftest%2Frun-pass%2Fgeneric-static-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-static-methods.rs?ref=a8e4301a5d78409ae05669be3514e848316e48f8", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait vec_utils<T> {\n+    fn map_<U:Copy>(x: &Self, f: &fn(&T) -> U) -> ~[U];\n+}\n+\n+impl<T> vec_utils<T> for ~[T] {\n+    fn map_<U:Copy>(x: &~[T], f: &fn(&T) -> U) -> ~[U] {\n+        let mut r = ~[];\n+        for x.iter().advance |elt| {\n+            r.push(f(elt));\n+        }\n+        r\n+    }\n+}\n+\n+fn main() {\n+    assert_eq!(vec_utils::map_(&~[1,2,3], |&x| x+1), ~[2,3,4]);\n+}"}]}