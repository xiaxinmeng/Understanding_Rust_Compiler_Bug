{"sha": "18a1831377ffd7578af850a136cdf3bec3650c1a", "node_id": "C_kwDOAAsO6NoAKDE4YTE4MzEzNzdmZmQ3NTc4YWY4NTBhMTM2Y2RmM2JlYzM2NTBjMWE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-27T05:43:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-27T05:43:13Z"}, "message": "Auto merge of #8743 - Alexendoo:useless-attribute-redundant-pub-crate, r=llogiq\n\nignore `redundant_pub_crate` in `useless_attribute`\n\nchangelog: [`useless_attribute`] no longer lints [`redundant_pub_crate`]\n\nAs mentioned in https://github.com/rust-lang/rust-clippy/issues/8732#issuecomment-1106489634\n\n> And it turns out I can't even explicitly allow it at the usage site, because then `clippy::useless_attribute` fires (which would also be a FP?), which is deny-by-default.\n>\n> Though it does work if I then allow `clippy::useless_attribute`. \ud83d\ude02\n>\n> ```rust\n> #[allow(clippy::useless_attribute)]\n> #[allow(clippy::redundant_pub_crate)]\n> pub(crate) use bit;\n> ```\n>\n> The originally-reported warning now no longer occurs.", "tree": {"sha": "d86630a9aa2af1a67c6c285d39683bc7a44349fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d86630a9aa2af1a67c6c285d39683bc7a44349fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18a1831377ffd7578af850a136cdf3bec3650c1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18a1831377ffd7578af850a136cdf3bec3650c1a", "html_url": "https://github.com/rust-lang/rust/commit/18a1831377ffd7578af850a136cdf3bec3650c1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18a1831377ffd7578af850a136cdf3bec3650c1a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95396f61bcc3f9439132d57dcd21b6aa0a5deb73", "url": "https://api.github.com/repos/rust-lang/rust/commits/95396f61bcc3f9439132d57dcd21b6aa0a5deb73", "html_url": "https://github.com/rust-lang/rust/commit/95396f61bcc3f9439132d57dcd21b6aa0a5deb73"}, {"sha": "0c164bbfdbe92e4a3732fc4d318e4eb85c843a1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c164bbfdbe92e4a3732fc4d318e4eb85c843a1f", "html_url": "https://github.com/rust-lang/rust/commit/0c164bbfdbe92e4a3732fc4d318e4eb85c843a1f"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "e880876218ec6887537144de3e9b4347f283d801", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/18a1831377ffd7578af850a136cdf3bec3650c1a/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a1831377ffd7578af850a136cdf3bec3650c1a/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=18a1831377ffd7578af850a136cdf3bec3650c1a", "patch": "@@ -335,20 +335,19 @@ impl<'tcx> LateLintPass<'tcx> for Attributes {\n                     }\n                     if let Some(lint_list) = &attr.meta_item_list() {\n                         if attr.ident().map_or(false, |ident| is_lint_level(ident.name)) {\n-                            // permit `unused_imports`, `deprecated`, `unreachable_pub`,\n-                            // `clippy::wildcard_imports`, and `clippy::enum_glob_use` for `use` items\n-                            // and `unused_imports` for `extern crate` items with `macro_use`\n                             for lint in lint_list {\n                                 match item.kind {\n                                     ItemKind::Use(..) => {\n                                         if is_word(lint, sym!(unused_imports))\n                                             || is_word(lint, sym::deprecated)\n                                             || is_word(lint, sym!(unreachable_pub))\n                                             || is_word(lint, sym!(unused))\n-                                            || extract_clippy_lint(lint)\n-                                                .map_or(false, |s| s.as_str() == \"wildcard_imports\")\n-                                            || extract_clippy_lint(lint)\n-                                                .map_or(false, |s| s.as_str() == \"enum_glob_use\")\n+                                            || extract_clippy_lint(lint).map_or(false, |s| {\n+                                                matches!(\n+                                                    s.as_str(),\n+                                                    \"wildcard_imports\" | \"enum_glob_use\" | \"redundant_pub_crate\",\n+                                                )\n+                                            })\n                                         {\n                                             return;\n                                         }"}, {"sha": "c23231a99e9f049015d44694fbd8d58ee2b8c1c3", "filename": "tests/ui/useless_attribute.fixed", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/18a1831377ffd7578af850a136cdf3bec3650c1a/tests%2Fui%2Fuseless_attribute.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/18a1831377ffd7578af850a136cdf3bec3650c1a/tests%2Fui%2Fuseless_attribute.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.fixed?ref=18a1831377ffd7578af850a136cdf3bec3650c1a", "patch": "@@ -57,6 +57,12 @@ pub use std::io::prelude::*;\n #[allow(clippy::enum_glob_use)]\n pub use std::cmp::Ordering::*;\n \n+// don't lint on clippy::redundant_pub_crate\n+mod c {\n+    #[allow(clippy::redundant_pub_crate)]\n+    pub(crate) struct S;\n+}\n+\n fn test_indented_attr() {\n     #![allow(clippy::almost_swapped)]\n     use std::collections::HashSet;"}, {"sha": "7a7b198ea6078e701ce33c9faf5269f72820f5c4", "filename": "tests/ui/useless_attribute.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/18a1831377ffd7578af850a136cdf3bec3650c1a/tests%2Fui%2Fuseless_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18a1831377ffd7578af850a136cdf3bec3650c1a/tests%2Fui%2Fuseless_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.rs?ref=18a1831377ffd7578af850a136cdf3bec3650c1a", "patch": "@@ -57,6 +57,12 @@ pub use std::io::prelude::*;\n #[allow(clippy::enum_glob_use)]\n pub use std::cmp::Ordering::*;\n \n+// don't lint on clippy::redundant_pub_crate\n+mod c {\n+    #[allow(clippy::redundant_pub_crate)]\n+    pub(crate) struct S;\n+}\n+\n fn test_indented_attr() {\n     #[allow(clippy::almost_swapped)]\n     use std::collections::HashSet;"}, {"sha": "255d2876355316ed987b39a86231806c7f122d31", "filename": "tests/ui/useless_attribute.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18a1831377ffd7578af850a136cdf3bec3650c1a/tests%2Fui%2Fuseless_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18a1831377ffd7578af850a136cdf3bec3650c1a/tests%2Fui%2Fuseless_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.stderr?ref=18a1831377ffd7578af850a136cdf3bec3650c1a", "patch": "@@ -13,7 +13,7 @@ LL | #[cfg_attr(feature = \"cargo-clippy\", allow(dead_code))]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use: `#![cfg_attr(feature = \"cargo-clippy\", allow(dead_code)`\n \n error: useless lint attribute\n-  --> $DIR/useless_attribute.rs:61:5\n+  --> $DIR/useless_attribute.rs:67:5\n    |\n LL |     #[allow(clippy::almost_swapped)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use: `#![allow(clippy::almost_swapped)]`"}]}