{"sha": "33fe9045473f549d66e41fd919898df4586124e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZmU5MDQ1NDczZjU0OWQ2NmU0MWZkOTE5ODk4ZGY0NTg2MTI0ZTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-01T09:30:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-01T09:30:00Z"}, "message": "Auto merge of #1088 - RalfJung:globalctxt, r=RalfJung\n\nfix for GlobalCtxt changes\n\nBlocked on https://github.com/rust-lang/rust/pull/66896", "tree": {"sha": "1a20681a1ae56498232e1248840c22c112bae475", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a20681a1ae56498232e1248840c22c112bae475"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33fe9045473f549d66e41fd919898df4586124e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33fe9045473f549d66e41fd919898df4586124e7", "html_url": "https://github.com/rust-lang/rust/commit/33fe9045473f549d66e41fd919898df4586124e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33fe9045473f549d66e41fd919898df4586124e7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "392d74569970742cbeb6c6e83faf44d5d35e9625", "url": "https://api.github.com/repos/rust-lang/rust/commits/392d74569970742cbeb6c6e83faf44d5d35e9625", "html_url": "https://github.com/rust-lang/rust/commit/392d74569970742cbeb6c6e83faf44d5d35e9625"}, {"sha": "c39482b20341abe2b22834f2ec6b04199e4a3383", "url": "https://api.github.com/repos/rust-lang/rust/commits/c39482b20341abe2b22834f2ec6b04199e4a3383", "html_url": "https://github.com/rust-lang/rust/commit/c39482b20341abe2b22834f2ec6b04199e4a3383"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "95146513509bfb6ef16c42a5a109e719f8aed9d2", "filename": "benches/helpers/miri_helper.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/33fe9045473f549d66e41fd919898df4586124e7/benches%2Fhelpers%2Fmiri_helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33fe9045473f549d66e41fd919898df4586124e7/benches%2Fhelpers%2Fmiri_helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/benches%2Fhelpers%2Fmiri_helper.rs?ref=33fe9045473f549d66e41fd919898df4586124e7", "patch": "@@ -7,7 +7,7 @@ extern crate test;\n \n use self::miri::eval_main;\n use rustc::hir::def_id::LOCAL_CRATE;\n-use rustc_interface::interface;\n+use rustc_interface::{interface, Queries};\n use rustc_driver::Compilation;\n use crate::test::Bencher;\n \n@@ -16,10 +16,10 @@ struct MiriCompilerCalls<'a> {\n }\n \n impl rustc_driver::Callbacks for MiriCompilerCalls<'_> {\n-    fn after_analysis(&mut self, compiler: &interface::Compiler) -> Compilation {\n+    fn after_analysis<'tcx>(&mut self, compiler: &interface::Compiler, queries: &'tcx Queries<'tcx>) -> Compilation {\n         compiler.session().abort_if_errors();\n \n-        compiler.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n+        queries.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n             let (entry_def_id, _) = tcx.entry_fn(LOCAL_CRATE).expect(\n                 \"no main or start function found\",\n             );"}, {"sha": "43425c9afc589ff6b73c1200eb90ac6c0e05f5a2", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33fe9045473f549d66e41fd919898df4586124e7/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/33fe9045473f549d66e41fd919898df4586124e7/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=33fe9045473f549d66e41fd919898df4586124e7", "patch": "@@ -1 +1 @@\n-809e180a76ce97340bf4354ff357bc59e3ca40b2\n+4007d4ef26eab44bdabc2b7574d032152264d3ad"}, {"sha": "5e3f663de2e585c2d86589c422c39040253da1c1", "filename": "src/bin/miri-rustc-tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/33fe9045473f549d66e41fd919898df4586124e7/src%2Fbin%2Fmiri-rustc-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33fe9045473f549d66e41fd919898df4586124e7/src%2Fbin%2Fmiri-rustc-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri-rustc-tests.rs?ref=33fe9045473f549d66e41fd919898df4586124e7", "patch": "@@ -15,7 +15,7 @@ use std::sync::{Mutex, Arc};\n use std::io;\n \n \n-use rustc_interface::interface;\n+use rustc_interface::{interface, Queries};\n use rustc::hir::{self, itemlikevisit};\n use rustc::ty::TyCtxt;\n use rustc::hir::def_id::LOCAL_CRATE;\n@@ -29,9 +29,9 @@ struct MiriCompilerCalls {\n }\n \n impl rustc_driver::Callbacks for MiriCompilerCalls {\n-    fn after_analysis(&mut self, compiler: &interface::Compiler) -> Compilation {\n+    fn after_analysis<'tcx>(&mut self, compiler: &interface::Compiler, queries: &'tcx Queries<'tcx>) -> Compilation {\n         compiler.session().abort_if_errors();\n-        compiler.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n+        queries.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n             if std::env::args().any(|arg| arg == \"--test\") {\n                 struct Visitor<'tcx>(TyCtxt<'tcx>);\n                 impl<'tcx, 'hir> itemlikevisit::ItemLikeVisitor<'hir> for Visitor<'tcx> {"}, {"sha": "59cb19476ac5c4ecdc54ea4a592e837b875c031f", "filename": "src/bin/miri.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/33fe9045473f549d66e41fd919898df4586124e7/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33fe9045473f549d66e41fd919898df4586124e7/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=33fe9045473f549d66e41fd919898df4586124e7", "patch": "@@ -20,7 +20,7 @@ use std::env;\n \n use hex::FromHexError;\n \n-use rustc_interface::interface;\n+use rustc_interface::{interface, Queries};\n use rustc::hir::def_id::LOCAL_CRATE;\n use rustc_driver::Compilation;\n \n@@ -29,11 +29,11 @@ struct MiriCompilerCalls {\n }\n \n impl rustc_driver::Callbacks for MiriCompilerCalls {\n-    fn after_analysis(&mut self, compiler: &interface::Compiler) -> Compilation {\n+    fn after_analysis<'tcx>(&mut self, compiler: &interface::Compiler, queries: &'tcx Queries<'tcx>) -> Compilation {\n         init_late_loggers();\n         compiler.session().abort_if_errors();\n \n-        compiler.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n+        queries.global_ctxt().unwrap().peek_mut().enter(|tcx| {\n             let (entry_def_id, _) = tcx.entry_fn(LOCAL_CRATE).expect(\"no main function found!\");\n             let mut config = self.miri_config.clone();\n "}]}