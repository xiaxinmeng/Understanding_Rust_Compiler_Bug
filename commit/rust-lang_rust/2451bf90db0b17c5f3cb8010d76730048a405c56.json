{"sha": "2451bf90db0b17c5f3cb8010d76730048a405c56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NTFiZjkwZGIwYjE3YzVmM2NiODAxMGQ3NjczMDA0OGE0MDVjNTY=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-05T11:25:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-05T11:25:58Z"}, "message": "Rollup merge of #81497 - camelid:rustdoc-display_fn-remove-cell, r=jyn514\n\nrustdoc: Move `display_fn` struct inside `display_fn`\n\nThis makes it clear that it's an implementation detail of `display_fn`\nand shouldn't be used elsewhere, and it enforces in the compiler that no\none else can use it.\n\nr? ````@GuillaumeGomez````", "tree": {"sha": "ce062cfcad6aded83d7f0e6e108a5530628c6c8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce062cfcad6aded83d7f0e6e108a5530628c6c8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2451bf90db0b17c5f3cb8010d76730048a405c56", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgHStGCRBK7hj4Ov3rIwAAdHIIAG0f7xR2nmHP0CROt3CZPiWy\n+FS2gdm1oE5YKNCtdaQI7wyddcuvR0pPJ/ESgAZzo3N2zIEL5B/FUqjck+QIxhVd\nijMSBsGFT8N3gwRym+wrdCHUFMysDI1nbaDtOnSg3luRTGE5bKN+klZsmgfEUakD\nGhm4K7qU2eVJNsgVwSjcR9CgbQH/nbebj3s2iE3lCiiOnEh73DTWS6nlhU6ULEfe\nyXyBQv37zbBieAtO9/S482I6cf8xcXaJ0kxnytpdhWZ9G6/rZqMv1EvQinh3A52N\nbPxlAU8IRsBAwXdV2m83fYWUPMuKqxD91KRT/PqZ6TGWTMPXmD9vs7msNXWJY48=\n=slEk\n-----END PGP SIGNATURE-----\n", "payload": "tree ce062cfcad6aded83d7f0e6e108a5530628c6c8b\nparent b5438e2230410edc8c5c67d9b114f6886af625dd\nparent c34faadfdaf3938f24e9f7a4c3441ac581078ce4\nauthor Mara Bos <m-ou.se@m-ou.se> 1612524358 +0100\ncommitter GitHub <noreply@github.com> 1612524358 +0100\n\nRollup merge of #81497 - camelid:rustdoc-display_fn-remove-cell, r=jyn514\n\nrustdoc: Move `display_fn` struct inside `display_fn`\n\nThis makes it clear that it's an implementation detail of `display_fn`\nand shouldn't be used elsewhere, and it enforces in the compiler that no\none else can use it.\n\nr? ````@GuillaumeGomez````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2451bf90db0b17c5f3cb8010d76730048a405c56", "html_url": "https://github.com/rust-lang/rust/commit/2451bf90db0b17c5f3cb8010d76730048a405c56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2451bf90db0b17c5f3cb8010d76730048a405c56/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5438e2230410edc8c5c67d9b114f6886af625dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5438e2230410edc8c5c67d9b114f6886af625dd", "html_url": "https://github.com/rust-lang/rust/commit/b5438e2230410edc8c5c67d9b114f6886af625dd"}, {"sha": "c34faadfdaf3938f24e9f7a4c3441ac581078ce4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c34faadfdaf3938f24e9f7a4c3441ac581078ce4", "html_url": "https://github.com/rust-lang/rust/commit/c34faadfdaf3938f24e9f7a4c3441ac581078ce4"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "d7951961223e4691ecddc63d1d0462eb06d64a49", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2451bf90db0b17c5f3cb8010d76730048a405c56/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2451bf90db0b17c5f3cb8010d76730048a405c56/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=2451bf90db0b17c5f3cb8010d76730048a405c56", "patch": "@@ -1331,16 +1331,16 @@ impl clean::GenericArg {\n }\n \n crate fn display_fn(f: impl FnOnce(&mut fmt::Formatter<'_>) -> fmt::Result) -> impl fmt::Display {\n-    WithFormatter(Cell::new(Some(f)))\n-}\n-\n-struct WithFormatter<F>(Cell<Option<F>>);\n-\n-impl<F> fmt::Display for WithFormatter<F>\n-where\n-    F: FnOnce(&mut fmt::Formatter<'_>) -> fmt::Result,\n-{\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        (self.0.take()).unwrap()(f)\n+    struct WithFormatter<F>(Cell<Option<F>>);\n+\n+    impl<F> fmt::Display for WithFormatter<F>\n+    where\n+        F: FnOnce(&mut fmt::Formatter<'_>) -> fmt::Result,\n+    {\n+        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+            (self.0.take()).unwrap()(f)\n+        }\n     }\n+\n+    WithFormatter(Cell::new(Some(f)))\n }"}]}