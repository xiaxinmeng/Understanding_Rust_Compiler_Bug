{"sha": "64811ed5a590ef4c89c09f4d04d3cea11251da52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ODExZWQ1YTU5MGVmNGM4OWMwOWY0ZDA0ZDNjZWExMTI1MWRhNTI=", "commit": {"author": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2020-03-27T10:24:17Z"}, "committer": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2020-09-25T13:06:40Z"}, "message": "testing c++ code (cc crate)", "tree": {"sha": "d5086ae464d2474ba6eb2c089cc7bdb8e3a2090c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5086ae464d2474ba6eb2c089cc7bdb8e3a2090c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64811ed5a590ef4c89c09f4d04d3cea11251da52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64811ed5a590ef4c89c09f4d04d3cea11251da52", "html_url": "https://github.com/rust-lang/rust/commit/64811ed5a590ef4c89c09f4d04d3cea11251da52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64811ed5a590ef4c89c09f4d04d3cea11251da52/comments", "author": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdf81f508d0b79751063b93f4d151ec6a90d2a09", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdf81f508d0b79751063b93f4d151ec6a90d2a09", "html_url": "https://github.com/rust-lang/rust/commit/bdf81f508d0b79751063b93f4d151ec6a90d2a09"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "f96f152c02fcc7a64a4e9605b1a32724f5fb7f06", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/cc_plus_one_cxx.checks", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64811ed5a590ef4c89c09f4d04d3cea11251da52/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcc_plus_one_cxx.checks", "raw_url": "https://github.com/rust-lang/rust/raw/64811ed5a590ef4c89c09f4d04d3cea11251da52/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcc_plus_one_cxx.checks", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcc_plus_one_cxx.checks?ref=64811ed5a590ef4c89c09f4d04d3cea11251da52", "patch": "@@ -0,0 +1,6 @@\n+CHECK: cc_plus_one_cxx\n+CHECK:      lfence\n+CHECK:      popq\n+CHECK-NEXT: popq [[REGISTER:%[a-z]+]]\n+CHECK-NEXT: lfence\n+CHECK-NEXT: jmpq *[[REGISTER]]"}, {"sha": "e704bf41724343b9b23f3136806739a28240f153", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/cc_plus_one_cxx_asm.checks", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/64811ed5a590ef4c89c09f4d04d3cea11251da52/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcc_plus_one_cxx_asm.checks", "raw_url": "https://github.com/rust-lang/rust/raw/64811ed5a590ef4c89c09f4d04d3cea11251da52/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcc_plus_one_cxx_asm.checks", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcc_plus_one_cxx_asm.checks?ref=64811ed5a590ef4c89c09f4d04d3cea11251da52", "patch": "@@ -0,0 +1,16 @@\n+CHECK: cc_plus_one_cxx_asm\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK:      movl\n+CHECK:      lfence\n+CHECK:      lfence\n+CHECK-NEXT: incl\n+CHECK-NEXT: jmp     0x{{[[:xdigit:]]+}} <cc_plus_one_cxx_asm+0x{{[[:xdigit:]]+}}>\n+CHECK-NEXT: shlq    $0, (%rsp)\n+CHECK-NEXT: lfence\n+CHECK-NEXT: retq\n+CHECK:      popq\n+CHECK-NEXT: popq [[REGISTER:%[a-z]+]]\n+CHECK-NEXT: lfence\n+CHECK-NEXT: jmpq *[[REGISTER]]"}, {"sha": "66ddea3793aa839b016ae18e6614c01346e0dfee", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave/build.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64811ed5a590ef4c89c09f4d04d3cea11251da52/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64811ed5a590ef4c89c09f4d04d3cea11251da52/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fbuild.rs?ref=64811ed5a590ef4c89c09f4d04d3cea11251da52", "patch": "@@ -2,4 +2,10 @@ fn main() {\n     cc::Build::new()\n         .file(\"foo.c\")\n         .compile(\"foo_c\");\n+\n+    cc::Build::new()\n+        .cpp(true)\n+        .cpp_set_stdlib(None)\n+        .file(\"foo_cxx.cpp\")\n+        .compile(\"foo_cxx\");\n }"}, {"sha": "1f22c85c4cdb5caa28672601e65e380a70c42c5b", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave/foo_cxx.cpp", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/64811ed5a590ef4c89c09f4d04d3cea11251da52/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Ffoo_cxx.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/64811ed5a590ef4c89c09f4d04d3cea11251da52/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Ffoo_cxx.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Ffoo_cxx.cpp?ref=64811ed5a590ef4c89c09f4d04d3cea11251da52", "patch": "@@ -0,0 +1,20 @@\n+extern \"C\" int cc_plus_one_cxx(int *arg);\n+extern \"C\" int cc_plus_one_cxx_asm(int *arg);\n+\n+int cc_plus_one_cxx(int *arg) {\n+    return *arg + 1;\n+}\n+\n+int cc_plus_one_cxx_asm(int *arg) {\n+    int value = 0;\n+\n+    asm volatile ( \"    movl (%1), %0\\n\"\n+                   \"    inc %0\\n\"\n+                   \"    jmp 1f\\n\"\n+                   \"    retq\\n\"  // never executed, but a shortcut to determine how the assembler deals with `ret` instructions\n+                   \"1:\\n\"\n+                   : \"=r\"(value)\n+                   : \"r\"(arg) );\n+\n+    return value;\n+}"}, {"sha": "afbee78e3450de8f8512886bf379fbadac8f5a7c", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave/src/main.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64811ed5a590ef4c89c09f4d04d3cea11251da52/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64811ed5a590ef4c89c09f4d04d3cea11251da52/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fsrc%2Fmain.rs?ref=64811ed5a590ef4c89c09f4d04d3cea11251da52", "patch": "@@ -1,6 +1,8 @@\n extern {\n     fn cc_plus_one_c(arg : &u32) -> u32;\n     fn cc_plus_one_c_asm(arg : &u32) -> u32;\n+    fn cc_plus_one_cxx(arg : &u32) -> u32;\n+    fn cc_plus_one_cxx_asm(arg : &u32) -> u32;\n }\n \n fn main() {\n@@ -9,5 +11,7 @@ fn main() {\n     unsafe{\n         println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cc_plus_one_c(&value));\n         println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cc_plus_one_c_asm(&value));\n+        println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cc_plus_one_cxx(&value));\n+        println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cc_plus_one_cxx_asm(&value));\n     }\n }"}, {"sha": "be2d247de0bd569e591ad7e9464a8ed2f132e337", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/script.sh", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64811ed5a590ef4c89c09f4d04d3cea11251da52/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fscript.sh", "raw_url": "https://github.com/rust-lang/rust/raw/64811ed5a590ef4c89c09f4d04d3cea11251da52/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fscript.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fscript.sh?ref=64811ed5a590ef4c89c09f4d04d3cea11251da52", "patch": "@@ -9,6 +9,7 @@ function build {\n         cp -a $TEST_DIR/enclave .\n         pushd $CRATE\n             echo ${WORK_DIR}\n+            hardening_flags=\"-mlvi-hardening -mllvm -x86-lvi-load-inline-asm\"\n             # HACK(eddyb) sets `RUSTC_BOOTSTRAP=1` so Cargo can accept nightly features.\n             # These come from the top-level Rust workspace, that this crate is not a\n             # member of, but Cargo tries to load the workspace `Cargo.toml` anyway.\n@@ -40,3 +41,5 @@ build\n check \"std::io::stdio::_print::h87f0c238421c45bc\" print.checks\n check cc_plus_one_c cc_plus_one_c.checks\n check cc_plus_one_c_asm cc_plus_one_c_asm.checks\n+check cc_plus_one_cxx cc_plus_one_cxx.checks\n+check cc_plus_one_cxx_asm cc_plus_one_cxx_asm.checks"}]}