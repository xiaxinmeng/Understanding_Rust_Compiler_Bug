{"sha": "3a0ae49135711532ccda0dc35acafd3ea13a5422", "node_id": "C_kwDOAAsO6NoAKDNhMGFlNDkxMzU3MTE1MzJjY2RhMGRjMzVhY2FmZDNlYTEzYTU0MjI", "commit": {"author": {"name": "Antonio Yang", "email": "yanganto@gmail.com", "date": "2022-03-29T11:41:16Z"}, "committer": {"name": "Antonio Yang", "email": "yanganto@gmail.com", "date": "2022-03-29T12:34:13Z"}, "message": "Refactor after review\n\nCo-authored-by: Mara Bos <m-ou.se@m-ou.se>", "tree": {"sha": "3bc965525a4fd2282af1d6ee1dc260b7603f462c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bc965525a4fd2282af1d6ee1dc260b7603f462c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a0ae49135711532ccda0dc35acafd3ea13a5422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a0ae49135711532ccda0dc35acafd3ea13a5422", "html_url": "https://github.com/rust-lang/rust/commit/3a0ae49135711532ccda0dc35acafd3ea13a5422", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a0ae49135711532ccda0dc35acafd3ea13a5422/comments", "author": {"login": "yanganto", "id": 10803111, "node_id": "MDQ6VXNlcjEwODAzMTEx", "avatar_url": "https://avatars.githubusercontent.com/u/10803111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanganto", "html_url": "https://github.com/yanganto", "followers_url": "https://api.github.com/users/yanganto/followers", "following_url": "https://api.github.com/users/yanganto/following{/other_user}", "gists_url": "https://api.github.com/users/yanganto/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanganto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanganto/subscriptions", "organizations_url": "https://api.github.com/users/yanganto/orgs", "repos_url": "https://api.github.com/users/yanganto/repos", "events_url": "https://api.github.com/users/yanganto/events{/privacy}", "received_events_url": "https://api.github.com/users/yanganto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yanganto", "id": 10803111, "node_id": "MDQ6VXNlcjEwODAzMTEx", "avatar_url": "https://avatars.githubusercontent.com/u/10803111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanganto", "html_url": "https://github.com/yanganto", "followers_url": "https://api.github.com/users/yanganto/followers", "following_url": "https://api.github.com/users/yanganto/following{/other_user}", "gists_url": "https://api.github.com/users/yanganto/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanganto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanganto/subscriptions", "organizations_url": "https://api.github.com/users/yanganto/orgs", "repos_url": "https://api.github.com/users/yanganto/repos", "events_url": "https://api.github.com/users/yanganto/events{/privacy}", "received_events_url": "https://api.github.com/users/yanganto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38b96b9a6459facd05097b0b2d9d82fb2da6d774", "url": "https://api.github.com/repos/rust-lang/rust/commits/38b96b9a6459facd05097b0b2d9d82fb2da6d774", "html_url": "https://github.com/rust-lang/rust/commit/38b96b9a6459facd05097b0b2d9d82fb2da6d774"}], "stats": {"total": 36, "additions": 14, "deletions": 22}, "files": [{"sha": "737921c1e10dce57fd17a8817b8cab92ba93308b", "filename": "library/test/src/formatters/json.rs", "status": "modified", "additions": 11, "deletions": 19, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3a0ae49135711532ccda0dc35acafd3ea13a5422/library%2Ftest%2Fsrc%2Fformatters%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a0ae49135711532ccda0dc35acafd3ea13a5422/library%2Ftest%2Fsrc%2Fformatters%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fformatters%2Fjson.rs?ref=3a0ae49135711532ccda0dc35acafd3ea13a5422", "patch": "@@ -122,25 +122,17 @@ impl<T: Write> OutputFormatter for JsonFormatter<T> {\n \n             TestResult::TrIgnored => {\n                 #[cfg(not(bootstrap))]\n-                if let Some(msg) = desc.ignore_message {\n-                    self.write_event(\n-                        \"test\",\n-                        desc.name.as_slice(),\n-                        \"ignored\",\n-                        exec_time,\n-                        stdout,\n-                        Some(&*format!(r#\"\"message\": \"{}\"\"#, EscapedString(msg))),\n-                    )\n-                } else {\n-                    self.write_event(\n-                        \"test\",\n-                        desc.name.as_slice(),\n-                        \"ignored\",\n-                        exec_time,\n-                        stdout,\n-                        None,\n-                    )\n-                }\n+                return self.write_event(\n+                    \"test\",\n+                    desc.name.as_slice(),\n+                    \"ignored\",\n+                    exec_time,\n+                    stdout,\n+                    desc.ignore_message\n+                        .map(|msg| format!(r#\"\"message\": \"{}\"\"#, EscapedString(msg)))\n+                        .as_deref(),\n+                );\n+\n                 #[cfg(bootstrap)]\n                 self.write_event(\"test\", desc.name.as_slice(), \"ignored\", exec_time, stdout, None)\n             }"}, {"sha": "023c0174c4f3f8f959e3adbf163f80b918479ce7", "filename": "library/test/src/formatters/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3a0ae49135711532ccda0dc35acafd3ea13a5422/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a0ae49135711532ccda0dc35acafd3ea13a5422/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs?ref=3a0ae49135711532ccda0dc35acafd3ea13a5422", "patch": "@@ -45,8 +45,8 @@ impl<T: Write> PrettyFormatter<T> {\n         self.write_short_result(\"FAILED\", term::color::RED)\n     }\n \n-    pub fn write_ignored(&mut self, may_message: Option<&'static str>) -> io::Result<()> {\n-        if let Some(message) = may_message {\n+    pub fn write_ignored(&mut self, message: Option<&'static str>) -> io::Result<()> {\n+        if let Some(message) = message {\n             self.write_short_result(&format!(\"ignored, {}\", message), term::color::YELLOW)\n         } else {\n             self.write_short_result(\"ignored\", term::color::YELLOW)\n@@ -63,7 +63,7 @@ impl<T: Write> PrettyFormatter<T> {\n \n     pub fn write_short_result(\n         &mut self,\n-        result: impl AsRef<str>,\n+        result: &str,\n         color: term::color::Color,\n     ) -> io::Result<()> {\n         self.write_pretty(result.as_ref(), color)"}]}