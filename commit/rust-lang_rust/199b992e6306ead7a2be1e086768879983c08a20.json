{"sha": "199b992e6306ead7a2be1e086768879983c08a20", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5OWI5OTJlNjMwNmVhZDdhMmJlMWUwODY3Njg4Nzk5ODNjMDhhMjA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-12T17:41:03Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-18T15:25:28Z"}, "message": "Fallout: add phantom data to librand", "tree": {"sha": "ed74929fffaac50b62797776c1ab34941d173e26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed74929fffaac50b62797776c1ab34941d173e26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/199b992e6306ead7a2be1e086768879983c08a20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/199b992e6306ead7a2be1e086768879983c08a20", "html_url": "https://github.com/rust-lang/rust/commit/199b992e6306ead7a2be1e086768879983c08a20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/199b992e6306ead7a2be1e086768879983c08a20/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2953710d26515ee2832ae6f705f51d00526fa018", "url": "https://api.github.com/repos/rust-lang/rust/commits/2953710d26515ee2832ae6f705f51d00526fa018", "html_url": "https://github.com/rust-lang/rust/commit/2953710d26515ee2832ae6f705f51d00526fa018"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "5a85552dc384eb10536faa8520621827fe5416cd", "filename": "src/librand/distributions/mod.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/199b992e6306ead7a2be1e086768879983c08a20/src%2Flibrand%2Fdistributions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/199b992e6306ead7a2be1e086768879983c08a20/src%2Flibrand%2Fdistributions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fdistributions%2Fmod.rs?ref=199b992e6306ead7a2be1e086768879983c08a20", "patch": "@@ -21,6 +21,7 @@\n \n use core::prelude::*;\n use core::num::{Float, Int};\n+use core::marker::PhantomData;\n \n use {Rng, Rand};\n \n@@ -56,7 +57,13 @@ pub trait IndependentSample<Support>: Sample<Support> {\n \n /// A wrapper for generating types that implement `Rand` via the\n /// `Sample` & `IndependentSample` traits.\n-pub struct RandSample<Sup>;\n+pub struct RandSample<Sup> { _marker: PhantomData<Sup> }\n+\n+impl<Sup> RandSample<Sup> {\n+    pub fn new() -> RandSample<Sup> {\n+        RandSample { _marker: PhantomData }\n+    }\n+}\n \n impl<Sup: Rand> Sample<Sup> for RandSample<Sup> {\n     fn sample<R: Rng>(&mut self, rng: &mut R) -> Sup { self.ind_sample(rng) }\n@@ -285,7 +292,7 @@ mod tests {\n \n     #[test]\n     fn test_rand_sample() {\n-        let mut rand_sample = RandSample::<ConstRand>;\n+        let mut rand_sample = RandSample::<ConstRand>::new();\n \n         assert_eq!(rand_sample.sample(&mut ::test::rng()), ConstRand(0));\n         assert_eq!(rand_sample.ind_sample(&mut ::test::rng()), ConstRand(0));"}, {"sha": "7588bf7c5158e7f27114784bbe2d025ec8dbfdbe", "filename": "src/librand/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/199b992e6306ead7a2be1e086768879983c08a20/src%2Flibrand%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/199b992e6306ead7a2be1e086768879983c08a20/src%2Flibrand%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Flib.rs?ref=199b992e6306ead7a2be1e086768879983c08a20", "patch": "@@ -41,6 +41,7 @@ extern crate core;\n #[cfg(test)] #[macro_use] extern crate log;\n \n use core::prelude::*;\n+use core::marker::PhantomData;\n \n pub use isaac::{IsaacRng, Isaac64Rng};\n pub use chacha::ChaChaRng;\n@@ -206,7 +207,7 @@ pub trait Rng : Sized {\n     ///                     .collect::<Vec<(f64, bool)>>());\n     /// ```\n     fn gen_iter<'a, T: Rand>(&'a mut self) -> Generator<'a, T, Self> {\n-        Generator { rng: self }\n+        Generator { rng: self, _marker: PhantomData }\n     }\n \n     /// Generate a random value in the range [`low`, `high`).\n@@ -317,6 +318,7 @@ pub trait Rng : Sized {\n /// This iterator is created via the `gen_iter` method on `Rng`.\n pub struct Generator<'a, T, R:'a> {\n     rng: &'a mut R,\n+    _marker: PhantomData<T>\n }\n \n impl<'a, T: Rand, R: Rng> Iterator for Generator<'a, T, R> {"}]}