{"sha": "2a8ad06689266d3959f35e407f8b6b2047a2457e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhOGFkMDY2ODkyNjZkMzk1OWYzNWU0MDdmOGI2YjIwNDdhMjQ1N2U=", "commit": {"author": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2021-09-11T15:23:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-11T15:23:46Z"}, "message": "Rollup merge of #88850 - matthiaskrgr:identical_conv, r=jackh726\n\ndon't convert types into identical types\n\nexample: let x: String = String::new().into();", "tree": {"sha": "4bd8ff3b37565cf6e4f43cfec62d63bfebc3f608", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bd8ff3b37565cf6e4f43cfec62d63bfebc3f608"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a8ad06689266d3959f35e407f8b6b2047a2457e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhPMoCCRBK7hj4Ov3rIwAAFhUIAJsPpIMTJ2yVd3MulgfVDmnb\neIpAw7IX/SZTQ9++Oo65pxTulyP6NwDMi0JkDrbOcSPQYDGZBhtZVIRqw3SJ3XFM\nkj4pnAsW6Jx+ehcof55g1J31Y5m/XQlDHocL4ZDcgyEowKsbJLP5wK7O1AvW78w/\n6pUSZqJXcw1jOZJjEqQfvqWVKbX9sF7DVtL6P6HuNs7oBLAWSyeH+KQIu3F2/03i\npFUm4YQ4h+JZzD27WQdjwIP8mYR1szftBzmEoIgVBM5Oc/05RBeJJvthTXcLyjEg\n+c/P5+XzpEdOdnUEGTQqkkM33E3ixaVuZbMoaWr/j71i1P/3SvfZnhas1FSioxM=\n=IPOP\n-----END PGP SIGNATURE-----\n", "payload": "tree 4bd8ff3b37565cf6e4f43cfec62d63bfebc3f608\nparent c2e1097f44acfceb862d45ce7ca5b0c10de8cbb3\nparent 545d8d675c44a3b6fb4b840aca17fc34e885e353\nauthor Jubilee <46493976+workingjubilee@users.noreply.github.com> 1631373826 -0700\ncommitter GitHub <noreply@github.com> 1631373826 -0700\n\nRollup merge of #88850 - matthiaskrgr:identical_conv, r=jackh726\n\ndon't convert types into identical types\n\nexample: let x: String = String::new().into();\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a8ad06689266d3959f35e407f8b6b2047a2457e", "html_url": "https://github.com/rust-lang/rust/commit/2a8ad06689266d3959f35e407f8b6b2047a2457e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a8ad06689266d3959f35e407f8b6b2047a2457e/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2e1097f44acfceb862d45ce7ca5b0c10de8cbb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2e1097f44acfceb862d45ce7ca5b0c10de8cbb3", "html_url": "https://github.com/rust-lang/rust/commit/c2e1097f44acfceb862d45ce7ca5b0c10de8cbb3"}, {"sha": "545d8d675c44a3b6fb4b840aca17fc34e885e353", "url": "https://api.github.com/repos/rust-lang/rust/commits/545d8d675c44a3b6fb4b840aca17fc34e885e353", "html_url": "https://github.com/rust-lang/rust/commit/545d8d675c44a3b6fb4b840aca17fc34e885e353"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "67f92bc0a51a7b8a161f792589e49ce9227441bb", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a8ad06689266d3959f35e407f8b6b2047a2457e/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a8ad06689266d3959f35e407f8b6b2047a2457e/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=2a8ad06689266d3959f35e407f8b6b2047a2457e", "patch": "@@ -1036,7 +1036,7 @@ impl<'a> State<'a> {\n         self.maybe_print_comment(st.span.lo());\n         match st.kind {\n             hir::StmtKind::Local(ref loc) => {\n-                self.print_local(loc.init.as_deref(), |this| this.print_local_decl(&loc));\n+                self.print_local(loc.init, |this| this.print_local_decl(&loc));\n             }\n             hir::StmtKind::Item(item) => self.ann.nested(self, Nested::Item(item)),\n             hir::StmtKind::Expr(ref expr) => {"}, {"sha": "1139b714d0a1ff155b8055258a14dae507ad88d3", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a8ad06689266d3959f35e407f8b6b2047a2457e/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a8ad06689266d3959f35e407f8b6b2047a2457e/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=2a8ad06689266d3959f35e407f8b6b2047a2457e", "patch": "@@ -2345,7 +2345,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 );\n                 err.span_suggestion(\n                     generics.where_clause.tail_span_for_suggestion(),\n-                    \"consider adding a where clause\".into(),\n+                    \"consider adding a where clause\",\n                     suggestion,\n                     Applicability::MaybeIncorrect,\n                 );"}, {"sha": "0d7abeba1a703c003cfbb13c05eb276d7c4c76b8", "filename": "compiler/rustc_passes/src/liveness.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a8ad06689266d3959f35e407f8b6b2047a2457e/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a8ad06689266d3959f35e407f8b6b2047a2457e/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs?ref=2a8ad06689266d3959f35e407f8b6b2047a2457e", "patch": "@@ -775,7 +775,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         if blk.targeted_by_break {\n             self.break_ln.insert(blk.hir_id, succ);\n         }\n-        let succ = self.propagate_through_opt_expr(blk.expr.as_deref(), succ);\n+        let succ = self.propagate_through_opt_expr(blk.expr, succ);\n         blk.stmts.iter().rev().fold(succ, |succ, stmt| self.propagate_through_stmt(stmt, succ))\n     }\n \n@@ -796,7 +796,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n                 // initialization, which is mildly more complex than checking\n                 // once at the func header but otherwise equivalent.\n \n-                let succ = self.propagate_through_opt_expr(local.init.as_deref(), succ);\n+                let succ = self.propagate_through_opt_expr(local.init, succ);\n                 self.define_bindings_in_pat(&local.pat, succ)\n             }\n             hir::StmtKind::Item(..) => succ,"}, {"sha": "5fc8e230d72a3eba67aca78d8a258115f9d21e31", "filename": "compiler/rustc_passes/src/region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a8ad06689266d3959f35e407f8b6b2047a2457e/compiler%2Frustc_passes%2Fsrc%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a8ad06689266d3959f35e407f8b6b2047a2457e/compiler%2Frustc_passes%2Fsrc%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fregion.rs?ref=2a8ad06689266d3959f35e407f8b6b2047a2457e", "patch": "@@ -812,7 +812,7 @@ impl<'tcx> Visitor<'tcx> for RegionResolutionVisitor<'tcx> {\n         resolve_expr(self, ex);\n     }\n     fn visit_local(&mut self, l: &'tcx Local<'tcx>) {\n-        resolve_local(self, Some(&l.pat), l.init.as_deref());\n+        resolve_local(self, Some(&l.pat), l.init);\n     }\n }\n "}]}