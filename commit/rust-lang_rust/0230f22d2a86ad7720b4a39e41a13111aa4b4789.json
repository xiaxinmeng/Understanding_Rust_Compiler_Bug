{"sha": "0230f22d2a86ad7720b4a39e41a13111aa4b4789", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMzBmMjJkMmE4NmFkNzcyMGI0YTM5ZTQxYTEzMTExYWE0YjQ3ODk=", "commit": {"author": {"name": "Jorge Mederos Alvarado", "email": "jmederosalvarado@gmail.com", "date": "2021-04-27T00:26:36Z"}, "committer": {"name": "Jorge Mederos Alvarado", "email": "jmederosalvarado@gmail.com", "date": "2021-04-27T00:29:54Z"}, "message": "Fix how and when old inlay hint decorations are disposed", "tree": {"sha": "64a9e0b4102aa1dbec4ea890d200479709352bf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64a9e0b4102aa1dbec4ea890d200479709352bf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0230f22d2a86ad7720b4a39e41a13111aa4b4789", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0230f22d2a86ad7720b4a39e41a13111aa4b4789", "html_url": "https://github.com/rust-lang/rust/commit/0230f22d2a86ad7720b4a39e41a13111aa4b4789", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0230f22d2a86ad7720b4a39e41a13111aa4b4789/comments", "author": {"login": "jmederosalvarado", "id": 46798594, "node_id": "MDQ6VXNlcjQ2Nzk4NTk0", "avatar_url": "https://avatars.githubusercontent.com/u/46798594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmederosalvarado", "html_url": "https://github.com/jmederosalvarado", "followers_url": "https://api.github.com/users/jmederosalvarado/followers", "following_url": "https://api.github.com/users/jmederosalvarado/following{/other_user}", "gists_url": "https://api.github.com/users/jmederosalvarado/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmederosalvarado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmederosalvarado/subscriptions", "organizations_url": "https://api.github.com/users/jmederosalvarado/orgs", "repos_url": "https://api.github.com/users/jmederosalvarado/repos", "events_url": "https://api.github.com/users/jmederosalvarado/events{/privacy}", "received_events_url": "https://api.github.com/users/jmederosalvarado/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jmederosalvarado", "id": 46798594, "node_id": "MDQ6VXNlcjQ2Nzk4NTk0", "avatar_url": "https://avatars.githubusercontent.com/u/46798594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmederosalvarado", "html_url": "https://github.com/jmederosalvarado", "followers_url": "https://api.github.com/users/jmederosalvarado/followers", "following_url": "https://api.github.com/users/jmederosalvarado/following{/other_user}", "gists_url": "https://api.github.com/users/jmederosalvarado/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmederosalvarado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmederosalvarado/subscriptions", "organizations_url": "https://api.github.com/users/jmederosalvarado/orgs", "repos_url": "https://api.github.com/users/jmederosalvarado/repos", "events_url": "https://api.github.com/users/jmederosalvarado/events{/privacy}", "received_events_url": "https://api.github.com/users/jmederosalvarado/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4dba4077f748ce16c91d369b98cbb23e59633c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4dba4077f748ce16c91d369b98cbb23e59633c6", "html_url": "https://github.com/rust-lang/rust/commit/c4dba4077f748ce16c91d369b98cbb23e59633c6"}], "stats": {"total": 49, "additions": 33, "deletions": 16}, "files": [{"sha": "c23d6f7384b99e93268b3b91d9266efc1bb491f2", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 33, "deletions": 16, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/0230f22d2a86ad7720b4a39e41a13111aa4b4789/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/0230f22d2a86ad7720b4a39e41a13111aa4b4789/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=0230f22d2a86ad7720b4a39e41a13111aa4b4789", "patch": "@@ -10,6 +10,12 @@ interface InlayHintStyle {\n     toDecoration(hint: ra.InlayHint, conv: lc.Protocol2CodeConverter): vscode.DecorationOptions;\n };\n \n+interface InlayHintsStyles {\n+    typeHints: InlayHintStyle;\n+    paramHints: InlayHintStyle;\n+    chainingHints: InlayHintStyle;\n+}\n+\n \n export function activateInlayHints(ctx: Ctx) {\n     const maybeUpdater = {\n@@ -45,7 +51,7 @@ export function activateInlayHints(ctx: Ctx) {\n     maybeUpdater.onConfigChange().catch(console.error);\n }\n \n-function createHintStyle(ctx: Ctx, hintKind: \"type\" | \"parameter\" | \"chaining\"): InlayHintStyle {\n+function createHintStyle(hintKind: \"type\" | \"parameter\" | \"chaining\", smallerHints: boolean): InlayHintStyle {\n     // U+200C is a zero-width non-joiner to prevent the editor from forming a ligature\n     // between code and type hints\n     const [pos, render] = ({\n@@ -54,8 +60,6 @@ function createHintStyle(ctx: Ctx, hintKind: \"type\" | \"parameter\" | \"chaining\"):\n         chaining: [\"after\", (label: string) => `\\u{200c}: ${label}`],\n     } as const)[hintKind];\n \n-    const smallerHints = ctx.config.inlayHints.smallerHints;\n-\n     const fg = new vscode.ThemeColor(`rust_analyzer.inlayHints.foreground.${hintKind}Hints`);\n     const bg = new vscode.ThemeColor(`rust_analyzer.inlayHints.background.${hintKind}Hints`);\n     return {\n@@ -77,14 +81,23 @@ function createHintStyle(ctx: Ctx, hintKind: \"type\" | \"parameter\" | \"chaining\"):\n     };\n }\n \n+const smallHintsStyles = {\n+    typeHints: createHintStyle(\"type\", true),\n+    paramHints: createHintStyle(\"parameter\", true),\n+    chainingHints: createHintStyle(\"chaining\", true),\n+};\n+\n+const biggerHintsStyles = {\n+    typeHints: createHintStyle(\"type\", false),\n+    paramHints: createHintStyle(\"parameter\", false),\n+    chainingHints: createHintStyle(\"chaining\", false),\n+};\n+\n class HintsUpdater implements Disposable {\n     private sourceFiles = new Map<string, RustSourceFile>(); // map Uri -> RustSourceFile\n     private readonly disposables: Disposable[] = [];\n-    private inlayHintsStyles!: {\n-        typeHints: InlayHintStyle;\n-        paramHints: InlayHintStyle;\n-        chainingHints: InlayHintStyle;\n-    };\n+    private pendingDisposeDecorations: undefined | InlayHintsStyles = undefined;\n+    private inlayHintsStyles!: InlayHintsStyles;\n \n     constructor(private readonly ctx: Ctx) {\n         vscode.window.onDidChangeVisibleTextEditors(\n@@ -125,14 +138,12 @@ class HintsUpdater implements Disposable {\n     }\n \n     updateInlayHintsStyles() {\n-        this.inlayHintsStyles?.typeHints.decorationType.dispose();\n-        this.inlayHintsStyles?.paramHints.decorationType.dispose();\n-        this.inlayHintsStyles?.chainingHints.decorationType.dispose();\n-        this.inlayHintsStyles = {\n-            typeHints: createHintStyle(this.ctx, \"type\"),\n-            paramHints: createHintStyle(this.ctx, \"parameter\"),\n-            chainingHints: createHintStyle(this.ctx, \"chaining\"),\n-        };\n+        const inlayHintsStyles = this.ctx.config.inlayHints.smallerHints ? smallHintsStyles : biggerHintsStyles;\n+\n+        if (inlayHintsStyles !== this.inlayHintsStyles) {\n+            this.pendingDisposeDecorations = this.inlayHintsStyles;\n+            this.inlayHintsStyles = inlayHintsStyles;\n+        }\n     }\n \n     syncCacheAndRenderHints() {\n@@ -183,6 +194,12 @@ class HintsUpdater implements Disposable {\n \n     private renderDecorations(editor: RustEditor, decorations: InlaysDecorations) {\n         const { typeHints, paramHints, chainingHints } = this.inlayHintsStyles;\n+        if (this.pendingDisposeDecorations !== undefined) {\n+            const { typeHints, paramHints, chainingHints } = this.pendingDisposeDecorations;\n+            editor.setDecorations(typeHints.decorationType, []);\n+            editor.setDecorations(paramHints.decorationType, []);\n+            editor.setDecorations(chainingHints.decorationType, []);\n+        }\n         editor.setDecorations(typeHints.decorationType, decorations.type);\n         editor.setDecorations(paramHints.decorationType, decorations.param);\n         editor.setDecorations(chainingHints.decorationType, decorations.chaining);"}]}