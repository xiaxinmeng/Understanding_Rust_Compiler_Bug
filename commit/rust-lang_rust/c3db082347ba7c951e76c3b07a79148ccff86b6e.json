{"sha": "c3db082347ba7c951e76c3b07a79148ccff86b6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZGIwODIzNDdiYTdjOTUxZTc2YzNiMDdhNzkxNDhjY2ZmODZiNmU=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2020-12-03T09:21:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-03T09:21:31Z"}, "message": "Rollup merge of #6308 - matthiaskrgr:internal_lints, r=flip1995\n\nadd `internal-lints` feature to enable clippys internal lints (off by default)\n\nThis PR moves the internal lint tests into a new subdirectory (I couldn't find a different way to compile-time-conditionally exclude them from compiletest) and only builds and tests internal lints if the `internal-lints` feature is enabled.\n\nFixes #6306\n\nchangelog: put internal lints behind a feature (\"internal-lints\")", "tree": {"sha": "17db830949e58e2647bba3ddd3587fac2eee5658", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17db830949e58e2647bba3ddd3587fac2eee5658"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3db082347ba7c951e76c3b07a79148ccff86b6e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfyK4bCRBK7hj4Ov3rIwAAdHIIAHAYB94noiVGDYxkYBnp0h5u\naSPuK3ukX/B3eHbdWepuDhwS8X5f3WbAjjXhls96Ent+D1zH+7IGQfDmPpFVaFRy\nbt8/AeheK4Qhfi8lF7ot9vsCquvItMoJGU/h4fwcKije7jQSDlqIrVD97CqP/nlb\nfrqL5WOWHpf+d3eFkOtntUGwyGFz1VALI9QX98ZnZzLe6br4McXEdMjeco1KYlX4\n0C1ezTs2DbGMdnQGbZQlFBa8LMn2aErA7BXxN+ne7QDBNN2zUp9v6eZLrfWzjsKo\nbKZyOM4LhFypy2dJkiqGVijZajlWZ+/929Nz5Z+M+Dp4iR+Y35BCq3E9jdtBH+0=\n=3/Xu\n-----END PGP SIGNATURE-----\n", "payload": "tree 17db830949e58e2647bba3ddd3587fac2eee5658\nparent 4785da6e37ae0a85f71fe200e5a2aa82f4fec85f\nparent 252083f7e02a3a9174bb39821fd20356ada3dd4a\nauthor Philipp Krones <hello@philkrones.com> 1606987291 +0100\ncommitter GitHub <noreply@github.com> 1606987291 +0100\n\nRollup merge of #6308 - matthiaskrgr:internal_lints, r=flip1995\n\nadd `internal-lints` feature to enable clippys internal lints (off by default)\n\nThis PR moves the internal lint tests into a new subdirectory (I couldn't find a different way to compile-time-conditionally exclude them from compiletest) and only builds and tests internal lints if the `internal-lints` feature is enabled.\n\nFixes #6306\n\nchangelog: put internal lints behind a feature (\"internal-lints\")\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3db082347ba7c951e76c3b07a79148ccff86b6e", "html_url": "https://github.com/rust-lang/rust/commit/c3db082347ba7c951e76c3b07a79148ccff86b6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3db082347ba7c951e76c3b07a79148ccff86b6e/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4785da6e37ae0a85f71fe200e5a2aa82f4fec85f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4785da6e37ae0a85f71fe200e5a2aa82f4fec85f", "html_url": "https://github.com/rust-lang/rust/commit/4785da6e37ae0a85f71fe200e5a2aa82f4fec85f"}, {"sha": "252083f7e02a3a9174bb39821fd20356ada3dd4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/252083f7e02a3a9174bb39821fd20356ada3dd4a", "html_url": "https://github.com/rust-lang/rust/commit/252083f7e02a3a9174bb39821fd20356ada3dd4a"}], "stats": {"total": 148, "additions": 102, "deletions": 46}, "files": [{"sha": "784463fe0df9e71a3e22b871c006c106329673ee", "filename": ".github/workflows/clippy_bors.yml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/.github%2Fworkflows%2Fclippy_bors.yml", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/.github%2Fworkflows%2Fclippy_bors.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy_bors.yml?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "patch": "@@ -128,14 +128,14 @@ jobs:\n         SYSROOT=$(rustc --print sysroot)\n         echo \"$SYSROOT/bin\" >> $GITHUB_PATH\n \n-    - name: Build\n-      run: cargo build --features deny-warnings\n+    - name: Build with internal lints\n+      run: cargo build --features deny-warnings,internal-lints\n \n-    - name: Test\n-      run: cargo test --features deny-warnings\n+    - name: Test with internal lints\n+      run: cargo test --features deny-warnings,internal-lints\n \n-    - name: Test clippy_lints\n-      run: cargo test --features deny-warnings\n+    - name: Test clippy_lints with internal lints\n+      run: cargo test --features deny-warnings,internal-lints\n       working-directory: clippy_lints\n \n     - name: Test rustc_tools_util"}, {"sha": "a765390c6032d4c83694367683988b4b1c5e3bc0", "filename": "Cargo.toml", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "patch": "@@ -32,7 +32,7 @@ path = \"src/driver.rs\"\n clippy_lints = { version = \"0.0.212\", path = \"clippy_lints\" }\n # end automatic update\n semver = \"0.11\"\n-rustc_tools_util = { version = \"0.2.0\", path = \"rustc_tools_util\"}\n+rustc_tools_util = { version = \"0.2.0\", path = \"rustc_tools_util\" }\n tempfile = { version = \"3.1.0\", optional = true }\n \n [dev-dependencies]\n@@ -49,8 +49,9 @@ derive-new = \"0.5\"\n rustc-workspace-hack = \"1.0.0\"\n \n [build-dependencies]\n-rustc_tools_util = { version = \"0.2.0\", path = \"rustc_tools_util\"}\n+rustc_tools_util = { version = \"0.2.0\", path = \"rustc_tools_util\" }\n \n [features]\n deny-warnings = []\n integration = [\"tempfile\"]\n+internal-lints = [\"clippy_lints/internal-lints\"]"}, {"sha": "f51c45e9eb5931a170c16c0dd187364fc2d510c7", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "patch": "@@ -146,16 +146,30 @@ pub fn gen_deprecated<'a>(lints: impl Iterator<Item = &'a Lint>) -> Vec<String>\n }\n \n #[must_use]\n-pub fn gen_register_lint_list<'a>(lints: impl Iterator<Item = &'a Lint>) -> Vec<String> {\n-    let pre = \"    store.register_lints(&[\".to_string();\n-    let post = \"    ]);\".to_string();\n-    let mut inner = lints\n+pub fn gen_register_lint_list<'a>(\n+    internal_lints: impl Iterator<Item = &'a Lint>,\n+    usable_lints: impl Iterator<Item = &'a Lint>,\n+) -> Vec<String> {\n+    let header = \"    store.register_lints(&[\".to_string();\n+    let footer = \"    ]);\".to_string();\n+    let internal_lints = internal_lints\n+        .sorted_by_key(|l| format!(\"        &{}::{},\", l.module, l.name.to_uppercase()))\n+        .map(|l| {\n+            format!(\n+                \"        #[cfg(feature = \\\"internal-lints\\\")]\\n        &{}::{},\",\n+                l.module,\n+                l.name.to_uppercase()\n+            )\n+        });\n+    let other_lints = usable_lints\n+        .sorted_by_key(|l| format!(\"        &{}::{},\", l.module, l.name.to_uppercase()))\n         .map(|l| format!(\"        &{}::{},\", l.module, l.name.to_uppercase()))\n-        .sorted()\n-        .collect::<Vec<String>>();\n-    inner.insert(0, pre);\n-    inner.push(post);\n-    inner\n+        .sorted();\n+    let mut lint_list = vec![header];\n+    lint_list.extend(internal_lints);\n+    lint_list.extend(other_lints);\n+    lint_list.push(footer);\n+    lint_list\n }\n \n /// Gathers all files in `src/clippy_lints` and gathers all lints inside"}, {"sha": "edf6c5f57a49766d44f8a353c55937ac0b015354", "filename": "clippy_dev/src/update_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_dev%2Fsrc%2Fupdate_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_dev%2Fsrc%2Fupdate_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fupdate_lints.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "patch": "@@ -68,7 +68,7 @@ pub fn run(update_mode: UpdateMode) {\n         \"end register lints\",\n         false,\n         update_mode == UpdateMode::Change,\n-        || gen_register_lint_list(usable_lints.iter().chain(internal_lints.iter())),\n+        || gen_register_lint_list(internal_lints.iter(), usable_lints.iter()),\n     )\n     .changed;\n "}, {"sha": "969249cc4467fd362f74b762c3545c291976fa89", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "patch": "@@ -36,3 +36,5 @@ syn = { version = \"1\", features = [\"full\"] }\n \n [features]\n deny-warnings = []\n+# build clippy with internal lints enabled, off by default\n+internal-lints = []"}, {"sha": "8fbd44528b1fc1b2f8deb53f4052295cf1d926f4", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 34, "deletions": 21, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "patch": "@@ -498,6 +498,24 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n \n     // begin register lints, do not remove this comment, it\u2019s used in `update_lints`\n     store.register_lints(&[\n+        #[cfg(feature = \"internal-lints\")]\n+        &utils::internal_lints::CLIPPY_LINTS_INTERNAL,\n+        #[cfg(feature = \"internal-lints\")]\n+        &utils::internal_lints::COLLAPSIBLE_SPAN_LINT_CALLS,\n+        #[cfg(feature = \"internal-lints\")]\n+        &utils::internal_lints::COMPILER_LINT_FUNCTIONS,\n+        #[cfg(feature = \"internal-lints\")]\n+        &utils::internal_lints::DEFAULT_LINT,\n+        #[cfg(feature = \"internal-lints\")]\n+        &utils::internal_lints::INVALID_PATHS,\n+        #[cfg(feature = \"internal-lints\")]\n+        &utils::internal_lints::LINT_WITHOUT_LINT_PASS,\n+        #[cfg(feature = \"internal-lints\")]\n+        &utils::internal_lints::MATCH_TYPE_ON_DIAGNOSTIC_ITEM,\n+        #[cfg(feature = \"internal-lints\")]\n+        &utils::internal_lints::OUTER_EXPN_EXPN_DATA,\n+        #[cfg(feature = \"internal-lints\")]\n+        &utils::internal_lints::PRODUCE_ICE,\n         &approx_const::APPROX_CONSTANT,\n         &arithmetic::FLOAT_ARITHMETIC,\n         &arithmetic::INTEGER_ARITHMETIC,\n@@ -904,15 +922,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &unwrap_in_result::UNWRAP_IN_RESULT,\n         &use_self::USE_SELF,\n         &useless_conversion::USELESS_CONVERSION,\n-        &utils::internal_lints::CLIPPY_LINTS_INTERNAL,\n-        &utils::internal_lints::COLLAPSIBLE_SPAN_LINT_CALLS,\n-        &utils::internal_lints::COMPILER_LINT_FUNCTIONS,\n-        &utils::internal_lints::DEFAULT_LINT,\n-        &utils::internal_lints::INVALID_PATHS,\n-        &utils::internal_lints::LINT_WITHOUT_LINT_PASS,\n-        &utils::internal_lints::MATCH_TYPE_ON_DIAGNOSTIC_ITEM,\n-        &utils::internal_lints::OUTER_EXPN_EXPN_DATA,\n-        &utils::internal_lints::PRODUCE_ICE,\n         &vec::USELESS_VEC,\n         &vec_resize_to_zero::VEC_RESIZE_TO_ZERO,\n         &verbose_file_reads::VERBOSE_FILE_READS,\n@@ -930,14 +939,23 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &zero_div_zero::ZERO_DIVIDED_BY_ZERO,\n     ]);\n     // end register lints, do not remove this comment, it\u2019s used in `update_lints`\n+\n+    // all the internal lints\n+    #[cfg(feature = \"internal-lints\")]\n+    {\n+        store.register_early_pass(|| box utils::internal_lints::ClippyLintsInternal);\n+        store.register_early_pass(|| box utils::internal_lints::ProduceIce);\n+        store.register_late_pass(|| box utils::inspector::DeepCodeInspector);\n+        store.register_late_pass(|| box utils::internal_lints::CollapsibleCalls);\n+        store.register_late_pass(|| box utils::internal_lints::CompilerLintFunctions::new());\n+        store.register_late_pass(|| box utils::internal_lints::InvalidPaths);\n+        store.register_late_pass(|| box utils::internal_lints::LintWithoutLintPass::default());\n+        store.register_late_pass(|| box utils::internal_lints::MatchTypeOnDiagItem);\n+        store.register_late_pass(|| box utils::internal_lints::OuterExpnDataPass);\n+    }\n+    store.register_late_pass(|| box utils::author::Author);\n     store.register_late_pass(|| box await_holding_invalid::AwaitHolding);\n     store.register_late_pass(|| box serde_api::SerdeAPI);\n-    store.register_late_pass(|| box utils::internal_lints::CompilerLintFunctions::new());\n-    store.register_late_pass(|| box utils::internal_lints::LintWithoutLintPass::default());\n-    store.register_late_pass(|| box utils::internal_lints::OuterExpnDataPass);\n-    store.register_late_pass(|| box utils::internal_lints::InvalidPaths);\n-    store.register_late_pass(|| box utils::inspector::DeepCodeInspector);\n-    store.register_late_pass(|| box utils::author::Author);\n     let vec_box_size_threshold = conf.vec_box_size_threshold;\n     store.register_late_pass(move || box types::Types::new(vec_box_size_threshold));\n     store.register_late_pass(|| box booleans::NonminimalBool);\n@@ -1122,7 +1140,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| box literal_representation::LiteralDigitGrouping);\n     let literal_representation_threshold = conf.literal_representation_threshold;\n     store.register_early_pass(move || box literal_representation::DecimalLiteralRepresentation::new(literal_representation_threshold));\n-    store.register_early_pass(|| box utils::internal_lints::ClippyLintsInternal);\n     let enum_variant_name_threshold = conf.enum_variant_name_threshold;\n     store.register_early_pass(move || box enum_variants::EnumVariantNames::new(enum_variant_name_threshold));\n     store.register_early_pass(|| box tabs_in_doc_comments::TabsInDocComments);\n@@ -1136,7 +1153,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(move || box large_const_arrays::LargeConstArrays::new(array_size_threshold));\n     store.register_late_pass(|| box floating_point_arithmetic::FloatingPointArithmetic);\n     store.register_early_pass(|| box as_conversions::AsConversions);\n-    store.register_early_pass(|| box utils::internal_lints::ProduceIce);\n     store.register_late_pass(|| box let_underscore::LetUnderscore);\n     store.register_late_pass(|| box atomic_ordering::AtomicOrdering);\n     store.register_early_pass(|| box single_component_path_imports::SingleComponentPathImports);\n@@ -1152,15 +1168,13 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box dereference::Dereferencing);\n     store.register_late_pass(|| box option_if_let_else::OptionIfLetElse);\n     store.register_late_pass(|| box future_not_send::FutureNotSend);\n-    store.register_late_pass(|| box utils::internal_lints::CollapsibleCalls);\n     store.register_late_pass(|| box if_let_mutex::IfLetMutex);\n     store.register_late_pass(|| box mut_mutex_lock::MutMutexLock);\n     store.register_late_pass(|| box match_on_vec_items::MatchOnVecItems);\n     store.register_late_pass(|| box manual_async_fn::ManualAsyncFn);\n     store.register_early_pass(|| box redundant_field_names::RedundantFieldNames);\n     store.register_late_pass(|| box vec_resize_to_zero::VecResizeToZero);\n     store.register_late_pass(|| box panic_in_result_fn::PanicInResultFn);\n-\n     let single_char_binding_names_threshold = conf.single_char_binding_names_threshold;\n     store.register_early_pass(move || box non_expressive_names::NonExpressiveNames {\n         single_char_binding_names_threshold,\n@@ -1177,7 +1191,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box manual_ok_or::ManualOkOr);\n     store.register_late_pass(|| box float_equality_without_abs::FloatEqualityWithoutAbs);\n     store.register_late_pass(|| box async_yields_async::AsyncYieldsAsync);\n-    store.register_late_pass(|| box utils::internal_lints::MatchTypeOnDiagItem);\n     let disallowed_methods = conf.disallowed_methods.iter().cloned().collect::<FxHashSet<_>>();\n     store.register_late_pass(move || box disallowed_method::DisallowedMethod::new(&disallowed_methods));\n     store.register_early_pass(|| box asm_syntax::InlineAsmX86AttSyntax);\n@@ -1186,7 +1199,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box strings::StrToString);\n     store.register_late_pass(|| box strings::StringToString);\n \n-\n     store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n         LintId::of(&arithmetic::FLOAT_ARITHMETIC),\n         LintId::of(&arithmetic::INTEGER_ARITHMETIC),\n@@ -1318,6 +1330,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&wildcard_imports::WILDCARD_IMPORTS),\n     ]);\n \n+    #[cfg(feature = \"internal-lints\")]\n     store.register_group(true, \"clippy::internal\", Some(\"clippy_internal\"), vec![\n         LintId::of(&utils::internal_lints::CLIPPY_LINTS_INTERNAL),\n         LintId::of(&utils::internal_lints::COLLAPSIBLE_SPAN_LINT_CALLS),"}, {"sha": "a7a6b5855b754948957f7ce187261ac685303f37", "filename": "clippy_lints/src/utils/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "patch": "@@ -186,7 +186,9 @@ pub fn span_lint_hir_and_then(\n ///     |\n ///     = note: `-D fold-any` implied by `-D warnings`\n /// ```\n-#[allow(clippy::collapsible_span_lint_calls)]\n+\n+#[allow(clippy::unknown_clippy_lints)]\n+#[cfg_attr(feature = \"internal-lints\", allow(clippy::collapsible_span_lint_calls))]\n pub fn span_lint_and_sugg<'a, T: LintContext>(\n     cx: &'a T,\n     lint: &'static Lint,"}, {"sha": "63f14c592bdc71ac2359f7ed4644b8c2af547067", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "patch": "@@ -14,6 +14,7 @@ pub mod eager_or_lazy;\n pub mod higher;\n mod hir_utils;\n pub mod inspector;\n+#[cfg(feature = \"internal-lints\")]\n pub mod internal_lints;\n pub mod numeric_literal;\n pub mod paths;"}, {"sha": "16e6a016c9ed80debd34e8bcc4de427899a79e45", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "patch": "@@ -31,6 +31,7 @@ pub const DISPLAY_TRAIT: [&str; 3] = [\"core\", \"fmt\", \"Display\"];\n pub const DOUBLE_ENDED_ITERATOR: [&str; 4] = [\"core\", \"iter\", \"traits\", \"DoubleEndedIterator\"];\n pub const DROP: [&str; 3] = [\"core\", \"mem\", \"drop\"];\n pub const DURATION: [&str; 3] = [\"core\", \"time\", \"Duration\"];\n+#[cfg(feature = \"internal-lints\")]\n pub const EARLY_CONTEXT: [&str; 2] = [\"rustc_lint\", \"EarlyContext\"];\n pub const EXIT: [&str; 3] = [\"std\", \"process\", \"exit\"];\n pub const F32_EPSILON: [&str; 4] = [\"core\", \"f32\", \"<impl f32>\", \"EPSILON\"];\n@@ -61,8 +62,10 @@ pub const IO_WRITE: [&str; 3] = [\"std\", \"io\", \"Write\"];\n pub const IPADDR_V4: [&str; 4] = [\"std\", \"net\", \"IpAddr\", \"V4\"];\n pub const IPADDR_V6: [&str; 4] = [\"std\", \"net\", \"IpAddr\", \"V6\"];\n pub const ITERATOR: [&str; 5] = [\"core\", \"iter\", \"traits\", \"iterator\", \"Iterator\"];\n+#[cfg(feature = \"internal-lints\")]\n pub const LATE_CONTEXT: [&str; 2] = [\"rustc_lint\", \"LateContext\"];\n pub const LINKED_LIST: [&str; 4] = [\"alloc\", \"collections\", \"linked_list\", \"LinkedList\"];\n+#[cfg(feature = \"internal-lints\")]\n pub const LINT: [&str; 2] = [\"rustc_lint_defs\", \"Lint\"];\n pub const MEM_DISCRIMINANT: [&str; 3] = [\"core\", \"mem\", \"discriminant\"];\n pub const MEM_FORGET: [&str; 3] = [\"core\", \"mem\", \"forget\"];\n@@ -133,6 +136,7 @@ pub const STR_ENDS_WITH: [&str; 4] = [\"core\", \"str\", \"<impl str>\", \"ends_with\"];\n pub const STR_FROM_UTF8: [&str; 4] = [\"core\", \"str\", \"converts\", \"from_utf8\"];\n pub const STR_LEN: [&str; 4] = [\"core\", \"str\", \"<impl str>\", \"len\"];\n pub const STR_STARTS_WITH: [&str; 4] = [\"core\", \"str\", \"<impl str>\", \"starts_with\"];\n+#[cfg(feature = \"internal-lints\")]\n pub const SYNTAX_CONTEXT: [&str; 3] = [\"rustc_span\", \"hygiene\", \"SyntaxContext\"];\n pub const TO_OWNED: [&str; 3] = [\"alloc\", \"borrow\", \"ToOwned\"];\n pub const TO_OWNED_METHOD: [&str; 4] = [\"alloc\", \"borrow\", \"ToOwned\", \"to_owned\"];"}, {"sha": "ec3af94b9ca910dd293b807638ddd015f49dd336", "filename": "tests/compile-test.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "patch": "@@ -12,6 +12,9 @@ use std::path::{Path, PathBuf};\n \n mod cargo;\n \n+// whether to run internal tests or not\n+const RUN_INTERNAL_TESTS: bool = cfg!(feature = \"internal-lints\");\n+\n fn host_lib() -> PathBuf {\n     option_env!(\"HOST_LIBS\").map_or(cargo::CARGO_TARGET_DIR.join(env!(\"PROFILE\")), PathBuf::from)\n }\n@@ -96,6 +99,16 @@ fn run_mode(cfg: &mut compiletest::Config) {\n     compiletest::run_tests(&cfg);\n }\n \n+fn run_internal_tests(cfg: &mut compiletest::Config) {\n+    // only run internal tests with the internal-tests feature\n+    if !RUN_INTERNAL_TESTS {\n+        return;\n+    }\n+    cfg.mode = TestMode::Ui;\n+    cfg.src_base = Path::new(\"tests\").join(\"ui-internal\");\n+    compiletest::run_tests(&cfg);\n+}\n+\n fn run_ui_toml(config: &mut compiletest::Config) {\n     fn run_tests(config: &compiletest::Config, mut tests: Vec<tester::TestDescAndFn>) -> Result<bool, io::Error> {\n         let mut result = true;\n@@ -199,7 +212,6 @@ fn run_ui_cargo(config: &mut compiletest::Config) {\n                         Some(\"main.rs\") => {},\n                         _ => continue,\n                     }\n-\n                     let paths = compiletest::common::TestPaths {\n                         file: file_path,\n                         base: config.src_base.clone(),\n@@ -253,4 +265,5 @@ fn compile_test() {\n     run_mode(&mut config);\n     run_ui_toml(&mut config);\n     run_ui_cargo(&mut config);\n+    run_internal_tests(&mut config);\n }"}, {"sha": "a6163a83d768709a562ca5a59a98b4eb92857bf4", "filename": "tests/dogfood.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "patch": "@@ -18,7 +18,8 @@ fn dogfood_clippy() {\n     }\n     let root_dir = PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));\n \n-    let output = Command::new(&*CLIPPY_PATH)\n+    let mut command = Command::new(&*CLIPPY_PATH);\n+    command\n         .current_dir(root_dir)\n         .env(\"CLIPPY_DOGFOOD\", \"1\")\n         .env(\"CARGO_INCREMENTAL\", \"0\")\n@@ -27,11 +28,16 @@ fn dogfood_clippy() {\n         .arg(\"--all-features\")\n         .arg(\"--\")\n         .args(&[\"-D\", \"clippy::all\"])\n-        .args(&[\"-D\", \"clippy::internal\"])\n         .args(&[\"-D\", \"clippy::pedantic\"])\n-        .arg(\"-Cdebuginfo=0\") // disable debuginfo to generate less data in the target dir\n-        .output()\n-        .unwrap();\n+        .arg(\"-Cdebuginfo=0\"); // disable debuginfo to generate less data in the target dir\n+\n+    // internal lints only exist if we build with the internal-lints feature\n+    if cfg!(feature = \"internal-lints\") {\n+        command.args(&[\"-D\", \"clippy::internal\"]);\n+    }\n+\n+    let output = command.output().unwrap();\n+\n     println!(\"status: {}\", output.status);\n     println!(\"stdout: {}\", String::from_utf8_lossy(&output.stdout));\n     println!(\"stderr: {}\", String::from_utf8_lossy(&output.stderr));"}, {"sha": "e588c23345e2fdd8ad010e05a0db259589f7bade", "filename": "tests/ui-internal/collapsible_span_lint_calls.fixed", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fcollapsible_span_lint_calls.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fcollapsible_span_lint_calls.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fcollapsible_span_lint_calls.fixed?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/collapsible_span_lint_calls.fixed"}, {"sha": "d5dd3bb562b429d9265f3ba1d5c80a4c977a4dc2", "filename": "tests/ui-internal/collapsible_span_lint_calls.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fcollapsible_span_lint_calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fcollapsible_span_lint_calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fcollapsible_span_lint_calls.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/collapsible_span_lint_calls.rs"}, {"sha": "874d4a9f255c27dcaa542325be407d65d25cfabd", "filename": "tests/ui-internal/collapsible_span_lint_calls.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fcollapsible_span_lint_calls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fcollapsible_span_lint_calls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fcollapsible_span_lint_calls.stderr?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/collapsible_span_lint_calls.stderr"}, {"sha": "5b30c9d5721ca5a0dcf8c7fe0ef200c2339d50f2", "filename": "tests/ui-internal/custom_ice_message.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fcustom_ice_message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fcustom_ice_message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fcustom_ice_message.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/custom_ice_message.rs"}, {"sha": "a1b8e2ee162cf67eb3722946e1884415b768149c", "filename": "tests/ui-internal/custom_ice_message.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fcustom_ice_message.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fcustom_ice_message.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fcustom_ice_message.stderr?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/custom_ice_message.stderr"}, {"sha": "053faae02ce3e0d3aa457083224bb9d32b20ba30", "filename": "tests/ui-internal/default_lint.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fdefault_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fdefault_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fdefault_lint.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/default_lint.rs"}, {"sha": "5c5836a7d297e82a0ae0c18b819d73ef39b3caf9", "filename": "tests/ui-internal/default_lint.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fdefault_lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fdefault_lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fdefault_lint.stderr?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/default_lint.stderr"}, {"sha": "01e28ae5e9d3581c0995e1b88abb0fd738494052", "filename": "tests/ui-internal/invalid_paths.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Finvalid_paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Finvalid_paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Finvalid_paths.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/invalid_paths.rs"}, {"sha": "bd69d661b714fe8bd29e553588d2736e3eb22fc3", "filename": "tests/ui-internal/invalid_paths.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Finvalid_paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Finvalid_paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Finvalid_paths.stderr?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/invalid_paths.stderr"}, {"sha": "beaef79a340afad2c371352f2dda86f385c95d8c", "filename": "tests/ui-internal/lint_without_lint_pass.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Flint_without_lint_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Flint_without_lint_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Flint_without_lint_pass.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/lint_without_lint_pass.rs"}, {"sha": "1257dae96d71cc17c0261ff5f66efcea3575c165", "filename": "tests/ui-internal/lint_without_lint_pass.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Flint_without_lint_pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Flint_without_lint_pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Flint_without_lint_pass.stderr?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/lint_without_lint_pass.stderr"}, {"sha": "fe950b0aa7c7004c729c33cc7b6dab3392d1260a", "filename": "tests/ui-internal/match_type_on_diag_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fmatch_type_on_diag_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fmatch_type_on_diag_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fmatch_type_on_diag_item.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/match_type_on_diag_item.rs"}, {"sha": "82465dbaf6ecc9d9e61b5f99e25f62948da7ebc7", "filename": "tests/ui-internal/match_type_on_diag_item.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fmatch_type_on_diag_item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fmatch_type_on_diag_item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fmatch_type_on_diag_item.stderr?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/match_type_on_diag_item.stderr"}, {"sha": "b0b3498f057f7f7d05eb87124c4acb68a45aa7e6", "filename": "tests/ui-internal/outer_expn_data.fixed", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fouter_expn_data.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fouter_expn_data.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fouter_expn_data.fixed?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/outer_expn_data.fixed"}, {"sha": "55a3fed00d075dfa5a4d7360fa9b9f0a85ece34f", "filename": "tests/ui-internal/outer_expn_data.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fouter_expn_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fouter_expn_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fouter_expn_data.rs?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/outer_expn_data.rs"}, {"sha": "56b6ce1f78ea4de38c7f1b1d0ffb666565c1f05a", "filename": "tests/ui-internal/outer_expn_data.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fouter_expn_data.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c3db082347ba7c951e76c3b07a79148ccff86b6e/tests%2Fui-internal%2Fouter_expn_data.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Fouter_expn_data.stderr?ref=c3db082347ba7c951e76c3b07a79148ccff86b6e", "previous_filename": "tests/ui/outer_expn_data.stderr"}]}