{"sha": "35ec57c116ed4a37c6858b682542f9677835fae5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZWM1N2MxMTZlZDRhMzdjNjg1OGI2ODI1NDJmOTY3NzgzNWZhZTU=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-02-01T11:35:01Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-02-01T11:35:01Z"}, "message": "Skip escape analysis for closure arguments", "tree": {"sha": "2ee30dea1e04ea21e0648368ea347133e9489551", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ee30dea1e04ea21e0648368ea347133e9489551"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35ec57c116ed4a37c6858b682542f9677835fae5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35ec57c116ed4a37c6858b682542f9677835fae5", "html_url": "https://github.com/rust-lang/rust/commit/35ec57c116ed4a37c6858b682542f9677835fae5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35ec57c116ed4a37c6858b682542f9677835fae5/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd906c043f0569b3500ee8d34ae640977aab0671", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd906c043f0569b3500ee8d34ae640977aab0671", "html_url": "https://github.com/rust-lang/rust/commit/fd906c043f0569b3500ee8d34ae640977aab0671"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "edc7b5c6fbbddf284bf0a52546de8ce54d41cf4e", "filename": "src/escape.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/35ec57c116ed4a37c6858b682542f9677835fae5/src%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35ec57c116ed4a37c6858b682542f9677835fae5/src%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fescape.rs?ref=35ec57c116ed4a37c6858b682542f9677835fae5", "patch": "@@ -1,5 +1,5 @@\n use rustc::lint::*;\n-use rustc::front::map::Node::NodeStmt;\n+use rustc::front::map::Node::{NodeExpr, NodeStmt};\n use rustc_front::hir::*;\n use rustc_front::intravisit as visit;\n use rustc::middle::ty;\n@@ -84,17 +84,19 @@ impl<'a, 'tcx: 'a> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n     }\n     fn matched_pat(&mut self, _: &Pat, _: cmt<'tcx>, _: MatchMode) {}\n     fn consume_pat(&mut self, consume_pat: &Pat, cmt: cmt<'tcx>, _: ConsumeMode) {\n-        if self.cx.tcx.map.is_argument(consume_pat.id) {\n+        let map = &self.cx.tcx.map;\n+        if map.is_argument(consume_pat.id) {\n+            // Skip closure arguments\n+            if let Some(NodeExpr(..)) = map.find(map.get_parent_node(consume_pat.id)) {\n+                return;\n+            }\n             if is_box(cmt.ty) {\n                 self.set.insert(consume_pat.id);\n             }\n             return;\n         }\n         if let Categorization::Rvalue(..) = cmt.cat {\n-            if let Some(NodeStmt(st)) = self.cx\n-                                                  .tcx\n-                                                  .map\n-                                                  .find(self.cx.tcx.map.get_parent_node(cmt.id)) {\n+            if let Some(NodeStmt(st)) = map.find(map.get_parent_node(cmt.id)) {\n                 if let StmtDecl(ref decl, _) = st.node {\n                     if let DeclLocal(ref loc) = decl.node {\n                         if let Some(ref ex) = loc.init {"}, {"sha": "f3aa8bff41c2d8c1da734803816e96941bbf6fb2", "filename": "tests/compile-fail/escape_analysis.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/35ec57c116ed4a37c6858b682542f9677835fae5/tests%2Fcompile-fail%2Fescape_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35ec57c116ed4a37c6858b682542f9677835fae5/tests%2Fcompile-fail%2Fescape_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fescape_analysis.rs?ref=35ec57c116ed4a37c6858b682542f9677835fae5", "patch": "@@ -23,6 +23,11 @@ fn warn_arg(x: Box<A>) { //~ ERROR local variable\n     x.foo();\n }\n \n+fn nowarn_closure_arg() {\n+    let x = Some(box A);\n+    x.map_or((), |x| take_ref(&x));\n+}\n+\n fn warn_rename_call() {\n     let x = box A;\n "}]}