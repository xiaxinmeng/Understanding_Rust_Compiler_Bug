{"sha": "03645c55761f8c9345ee3837a6010e65e7a80179", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNjQ1YzU1NzYxZjhjOTM0NWVlMzgzN2E2MDEwZTY1ZTdhODAxNzk=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-06-12T10:36:47Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-06-12T10:36:47Z"}, "message": "Merge #1382\n\n1382: use salsa's LRU for syntax trees r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "9c24cb112429b0334762063e71a65a1907386e59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c24cb112429b0334762063e71a65a1907386e59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03645c55761f8c9345ee3837a6010e65e7a80179", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03645c55761f8c9345ee3837a6010e65e7a80179", "html_url": "https://github.com/rust-lang/rust/commit/03645c55761f8c9345ee3837a6010e65e7a80179", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03645c55761f8c9345ee3837a6010e65e7a80179/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "6296f51678843c96a4ab1f1e6784b6d69222e072", "url": "https://api.github.com/repos/rust-lang/rust/commits/6296f51678843c96a4ab1f1e6784b6d69222e072", "html_url": "https://github.com/rust-lang/rust/commit/6296f51678843c96a4ab1f1e6784b6d69222e072"}, {"sha": "fed52706def9a9f5d33edc7dd9848a02ae475ba5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fed52706def9a9f5d33edc7dd9848a02ae475ba5", "html_url": "https://github.com/rust-lang/rust/commit/fed52706def9a9f5d33edc7dd9848a02ae475ba5"}], "stats": {"total": 78, "additions": 63, "deletions": 15}, "files": [{"sha": "2c1c7099e9180cbe14335b2c3bc9ac41206f0daa", "filename": "Cargo.lock", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -1058,7 +1058,7 @@ dependencies = [\n  \"ra_syntax 0.1.0\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa 0.12.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"test_utils 0.1.0\",\n ]\n \n@@ -1478,11 +1478,12 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"salsa\"\n-version = \"0.12.2\"\n+version = \"0.12.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"linked-hash-map 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lock_api 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2125,7 +2126,7 @@ dependencies = [\n \"checksum rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7540fc8b0c49f096ee9c961cda096467dce8084bec6bdca2fc83895fd9b28cb8\"\n \"checksum rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a\"\n \"checksum ryu 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b96a9549dc8d48f2c283938303c4b5a77aa29bfbc5b54b084fb1630408899a8f\"\n-\"checksum salsa 0.12.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f2208fabe493ad352dc4f544c482b39e9b9a2c1719d9aa4a0f5e828a61210956\"\n+\"checksum salsa 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2891cd628406e8a0ca714b827511de1bff76f796e3382cc72a3de732ccad5aea\"\n \"checksum salsa-macros 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b7f1e25ca2b995bdf032946174929d62156ffd57abd7ff88dc6f9bdeb5ac0c59\"\n \"checksum same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8f20c4be53a8a1ff4c1f1b2bd14570d2f634628709752f0702ecdd2b3f9a5267\"\n \"checksum scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"94258f53601af11e6a49f722422f6e3425c52b06245a5cf9bc09908b174f5e27\""}, {"sha": "c59821f4467211361855635af4d4cfedc86ebf52", "filename": "crates/ra_batch/src/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_batch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_batch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_batch%2Fsrc%2Flib.rs?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -7,7 +7,7 @@ use std::collections::HashSet;\n use rustc_hash::FxHashMap;\n \n use ra_db::{\n-    CrateGraph, FileId, SourceRoot, SourceRootId, SourceDatabase, salsa,\n+    CrateGraph, FileId, SourceRoot, SourceRootId, SourceDatabase, salsa::{self, Database},\n };\n use ra_hir::db;\n use ra_project_model::ProjectWorkspace;\n@@ -43,6 +43,12 @@ fn vfs_root_to_id(r: ra_vfs::VfsRoot) -> SourceRootId {\n impl BatchDatabase {\n     pub fn load(crate_graph: CrateGraph, vfs: &mut Vfs) -> BatchDatabase {\n         let mut db = BatchDatabase { runtime: salsa::Runtime::default() };\n+        let lru_cap = std::env::var(\"RA_LRU_CAP\")\n+            .ok()\n+            .and_then(|it| it.parse::<usize>().ok())\n+            .unwrap_or(ra_db::DEFAULT_LRU_CAP);\n+        db.query_mut(ra_db::ParseQuery).set_lru_capacity(lru_cap);\n+        db.query_mut(ra_hir::db::ParseMacroQuery).set_lru_capacity(lru_cap);\n         db.set_crate_graph(Arc::new(crate_graph));\n \n         // wait until Vfs has loaded all roots"}, {"sha": "f73dd739a4fa9edc052aeb0f3cd70f5872642f0e", "filename": "crates/ra_db/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2FCargo.toml?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -5,7 +5,7 @@ version = \"0.1.0\"\n authors = [\"rust-analyzer developers\"]\n \n [dependencies]\n-salsa = \"0.12.1\"\n+salsa = \"0.12.3\"\n relative-path = \"0.4.0\"\n rustc-hash = \"1.0\"\n "}, {"sha": "f08616100d96737fd7504118447eb9989bc0434f", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -65,6 +65,8 @@ pub struct FileRange {\n     pub range: TextRange,\n }\n \n+pub const DEFAULT_LRU_CAP: usize = 128;\n+\n /// Database which stores all significant input facts: source code and project\n /// model. Everything else in rust-analyzer is derived from these queries.\n #[salsa::query_group(SourceDatabaseStorage)]"}, {"sha": "ce03a0f952809de50449a8465884a9318baba136", "filename": "crates/ra_ide_api/src/change.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_ide_api%2Fsrc%2Fchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_ide_api%2Fsrc%2Fchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fchange.rs?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -225,7 +225,6 @@ impl RootDatabase {\n         let sweep = SweepStrategy::default().discard_values().sweep_all_revisions();\n \n         self.query(ra_db::ParseQuery).sweep(sweep);\n-\n         self.query(hir::db::ParseMacroQuery).sweep(sweep);\n         self.query(hir::db::MacroDefQuery).sweep(sweep);\n         self.query(hir::db::MacroArgQuery).sweep(sweep);"}, {"sha": "b3f395502eede7e293778ccfe18c98f1999545f4", "filename": "crates/ra_ide_api/src/db.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdb.rs?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -5,7 +5,7 @@ use std::{\n \n use ra_db::{\n     CheckCanceled, FileId, Canceled, SourceDatabase,\n-    salsa,\n+    salsa::{self, Database},\n };\n \n use crate::{LineIndex, symbol_index::{self, SymbolsDatabase}};\n@@ -41,6 +41,12 @@ impl salsa::Database for RootDatabase {\n \n impl Default for RootDatabase {\n     fn default() -> RootDatabase {\n+        RootDatabase::new(None)\n+    }\n+}\n+\n+impl RootDatabase {\n+    pub fn new(lru_capacity: Option<usize>) -> RootDatabase {\n         let mut db = RootDatabase {\n             runtime: salsa::Runtime::default(),\n             last_gc: time::Instant::now(),\n@@ -49,6 +55,9 @@ impl Default for RootDatabase {\n         db.set_crate_graph(Default::default());\n         db.set_local_roots(Default::default());\n         db.set_library_roots(Default::default());\n+        let lru_capacity = lru_capacity.unwrap_or(ra_db::DEFAULT_LRU_CAP);\n+        db.query_mut(ra_db::ParseQuery).set_lru_capacity(lru_capacity);\n+        db.query_mut(hir::db::ParseMacroQuery).set_lru_capacity(lru_capacity);\n         db\n     }\n }"}, {"sha": "8741e736f517b2ef9698e6f6a454fe72e84337f1", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -242,12 +242,21 @@ pub struct CallInfo {\n }\n \n /// `AnalysisHost` stores the current state of the world.\n-#[derive(Debug, Default)]\n+#[derive(Debug)]\n pub struct AnalysisHost {\n     db: db::RootDatabase,\n }\n \n+impl Default for AnalysisHost {\n+    fn default() -> AnalysisHost {\n+        AnalysisHost::new(None)\n+    }\n+}\n+\n impl AnalysisHost {\n+    pub fn new(lru_capcity: Option<usize>) -> AnalysisHost {\n+        AnalysisHost { db: db::RootDatabase::new(lru_capcity) }\n+    }\n     /// Returns a snapshot of the current state, which you can query for\n     /// semantic information.\n     pub fn analysis(&self) -> Analysis {"}, {"sha": "b894b449d78c28c3c608540cfe37611821af1243", "filename": "crates/ra_lsp_server/src/init.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_lsp_server%2Fsrc%2Finit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_lsp_server%2Fsrc%2Finit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Finit.rs?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -17,11 +17,17 @@ pub struct InitializationOptions {\n     /// Defaults to `true`\n     #[serde(deserialize_with = \"nullable_bool_true\")]\n     pub show_workspace_loaded: bool,\n+\n+    pub lru_capacity: Option<usize>,\n }\n \n impl Default for InitializationOptions {\n     fn default() -> InitializationOptions {\n-        InitializationOptions { publish_decorations: false, show_workspace_loaded: true }\n+        InitializationOptions {\n+            publish_decorations: false,\n+            show_workspace_loaded: true,\n+            lru_capacity: None,\n+        }\n     }\n }\n \n@@ -54,8 +60,10 @@ mod test {\n         assert_eq!(default, serde_json::from_str(r#\"{}\"#).unwrap());\n         assert_eq!(\n             default,\n-            serde_json::from_str(r#\"{\"publishDecorations\":null, \"showWorkspaceLoaded\":null}\"#)\n-                .unwrap()\n+            serde_json::from_str(\n+                r#\"{\"publishDecorations\":null, \"showWorkspaceLoaded\":null, \"lruCapacity\":null}\"#\n+            )\n+            .unwrap()\n         );\n     }\n }"}, {"sha": "0790ea472ec64be82f1d33bca4edf58af47b70ca", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -73,7 +73,7 @@ pub fn main_loop(\n         loaded_workspaces\n     };\n \n-    let mut state = WorldState::new(ws_roots, workspaces);\n+    let mut state = WorldState::new(ws_roots, workspaces, options.lru_capacity);\n \n     let pool = ThreadPool::new(THREADPOOL_SIZE);\n     let (task_sender, task_receiver) = unbounded::<Task>();"}, {"sha": "f9ce570ca34320c7eade7a181ef16358a71f1396", "filename": "crates/ra_lsp_server/src/world.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -46,7 +46,11 @@ pub struct WorldSnapshot {\n }\n \n impl WorldState {\n-    pub fn new(folder_roots: Vec<PathBuf>, workspaces: Vec<ProjectWorkspace>) -> WorldState {\n+    pub fn new(\n+        folder_roots: Vec<PathBuf>,\n+        workspaces: Vec<ProjectWorkspace>,\n+        lru_capacity: Option<usize>,\n+    ) -> WorldState {\n         let mut change = AnalysisChange::new();\n \n         let mut roots = Vec::new();\n@@ -74,7 +78,7 @@ impl WorldState {\n         }\n         change.set_crate_graph(crate_graph);\n \n-        let mut analysis_host = AnalysisHost::default();\n+        let mut analysis_host = AnalysisHost::new(lru_capacity);\n         analysis_host.apply_change(change);\n         WorldState {\n             roots_to_scan,"}, {"sha": "c2ed8d1268fe45b001d6a97e053f1ba15eca5cb4", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -232,6 +232,11 @@\n                     ],\n                     \"default\": \"off\",\n                     \"description\": \"Trace output of cargo-watch\"\n+                },\n+                \"rust-analyzer.lruCapacity\": {\n+                    \"type\": \"number\",\n+                    \"default\": null,\n+                    \"description\": \"Number of syntax trees rust-analyzer keeps in memory\"\n                 }\n             }\n         },"}, {"sha": "3024546d25e0e6ba93c5f853173f3c75df968481", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -19,6 +19,7 @@ export class Config {\n     public enableEnhancedTyping = true;\n     public raLspServerPath = RA_LSP_DEBUG || 'ra_lsp_server';\n     public showWorkspaceLoadedNotification = true;\n+    public lruCapacity: null | number = null;\n     public cargoWatchOptions: CargoWatchOptions = {\n         enableOnStartup: 'ask',\n         trace: 'off',\n@@ -109,5 +110,8 @@ export class Config {\n                 ''\n             );\n         }\n+        if (config.has('lruCapacity')) {\n+            this.lruCapacity = config.get('lruCapacity') as number;\n+        }\n     }\n }"}, {"sha": "7029142fdcd5ecc9ee1ac5511597c1062de3a6a3", "filename": "editors/code/src/server.ts", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/03645c55761f8c9345ee3837a6010e65e7a80179/editors%2Fcode%2Fsrc%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/03645c55761f8c9345ee3837a6010e65e7a80179/editors%2Fcode%2Fsrc%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fserver.ts?ref=03645c55761f8c9345ee3837a6010e65e7a80179", "patch": "@@ -35,7 +35,8 @@ export class Server {\n             initializationOptions: {\n                 publishDecorations: true,\n                 showWorkspaceLoaded:\n-                    Server.config.showWorkspaceLoadedNotification\n+                    Server.config.showWorkspaceLoadedNotification,\n+                lruCapacity: Server.config.lruCapacity\n             },\n             traceOutputChannel\n         };"}]}