{"sha": "5e695bbba1a682735e850e4e348804edb169bf53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNjk1YmJiYTFhNjgyNzM1ZTg1MGU0ZTM0ODgwNGVkYjE2OWJmNTM=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-07-10T03:17:14Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-07-10T12:54:50Z"}, "message": "Update CTFE to allow fns marked with the attr", "tree": {"sha": "04dc9e033e8bba0f53f3957df428652fa15d61c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04dc9e033e8bba0f53f3957df428652fa15d61c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e695bbba1a682735e850e4e348804edb169bf53", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEjbeLZzPb62/vY3smZSV3NIU3bZIFAmDpmJoACgkQZSV3NIU3\nbZIEtxAAmJ0uEMmwdV0/XDVuJqWQ4w/BCPjzMdQlGlZtM7J7R7lkLt3diTJGG974\niMhhWLT8I1YxrxgkB/d2097BTWxMKmbDrzOiE/Xrn1Y/f2Q0k5kI0F8CuNW1G+Db\nqM3VN8sQ4efreXsGOc+vXRq/hxGPTbAQWYUXFzzHaxAgLolugpKWK1llBLnGReSU\ndPPtFMSeY1maNUeTVYMtxv/BVCSWGD/dq/uUHR9R6KE81Fpb4Q2sM//kWltr8H0E\nobQz62WoZtaciQcMkqaZub+N0F5CMp4lNVXGQZ81wHMDTZVyCsBn9qbEkYDYv49U\n0AAa3YWURTP3Ody2ohq+UPNvNM27VHqxYoZu1/PCTXcbQ8/I1I8gLtZALJ3vuulW\nQmjXWvbEzNZwFvXF/avFXeWVKJ+v48WK/+1h0sFqGqb4qpBzhPd+zcgOC2KvZEhi\n0PJqH5P0zNeS4GCdAgm2CD1MRkwEP3FD8AF7VhWPQDrDXWRVlnptJbyf4tSOZGWh\nkZVPse0+oQIZXbLpQ+X3LMhB+Yu22MmiauHFYkg34tOOSuJE6WWIWCjIjtXIOc+t\ncqANRCtvYfTjExJEFOJanFSP/cW2Dky5tKd+mpV3Fvmriuf0gB2Ou7Hw2rjlNC1e\n+TJywTtKhlba5nUGaWAJfy3hOR8ZHl0tjvSO6bty3OGr10oFP3I=\n=fCue\n-----END PGP SIGNATURE-----", "payload": "tree 04dc9e033e8bba0f53f3957df428652fa15d61c9\nparent 554fad7bdac1655119f2450d3286463aa2290200\nauthor Deadbeef <ent3rm4n@gmail.com> 1625887034 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1625921690 +0800\n\nUpdate CTFE to allow fns marked with the attr\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e695bbba1a682735e850e4e348804edb169bf53", "html_url": "https://github.com/rust-lang/rust/commit/5e695bbba1a682735e850e4e348804edb169bf53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e695bbba1a682735e850e4e348804edb169bf53/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "554fad7bdac1655119f2450d3286463aa2290200", "url": "https://api.github.com/repos/rust-lang/rust/commits/554fad7bdac1655119f2450d3286463aa2290200", "html_url": "https://github.com/rust-lang/rust/commit/554fad7bdac1655119f2450d3286463aa2290200"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "f8b66badb8a4c2c3f8a9c0f1d760a539d192e6ca", "filename": "compiler/rustc_mir/src/const_eval/machine.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5e695bbba1a682735e850e4e348804edb169bf53/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e695bbba1a682735e850e4e348804edb169bf53/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=5e695bbba1a682735e850e4e348804edb169bf53", "patch": "@@ -235,12 +235,15 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n             // sensitive check here.  But we can at least rule out functions that are not const\n             // at all.\n             if !ecx.tcx.is_const_fn_raw(def.did) {\n-                // Some functions we support even if they are non-const -- but avoid testing\n-                // that for const fn!\n-                ecx.hook_panic_fn(instance, args)?;\n-                // We certainly do *not* want to actually call the fn\n-                // though, so be sure we return here.\n-                throw_unsup_format!(\"calling non-const function `{}`\", instance)\n+                // allow calling functions marked with #[default_method_body_is_const].\n+                if !ecx.tcx.has_attr(def.did, sym::default_method_body_is_const) {\n+                    // Some functions we support even if they are non-const -- but avoid testing\n+                    // that for const fn!\n+                    ecx.hook_panic_fn(instance, args)?;\n+                    // We certainly do *not* want to actually call the fn\n+                    // though, so be sure we return here.\n+                    throw_unsup_format!(\"calling non-const function `{}`\", instance)\n+                }\n             }\n         }\n         // This is a const fn. Call it."}]}