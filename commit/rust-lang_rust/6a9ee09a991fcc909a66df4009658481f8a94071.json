{"sha": "6a9ee09a991fcc909a66df4009658481f8a94071", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhOWVlMDlhOTkxZmNjOTA5YTY2ZGY0MDA5NjU4NDgxZjhhOTQwNzE=", "commit": {"author": {"name": "Flavio Percoco Premoli", "email": "flaper87@gmail.com", "date": "2015-01-24T09:42:40Z"}, "committer": {"name": "Flavio Percoco Premoli", "email": "flaper87@gmail.com", "date": "2015-01-24T09:42:40Z"}, "message": "Rollup merge of #21445 - P1start:no-implemented, r=nikomatsakis", "tree": {"sha": "3c9e66211057167c49689b77e18da0c220b23f98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c9e66211057167c49689b77e18da0c220b23f98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a9ee09a991fcc909a66df4009658481f8a94071", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a9ee09a991fcc909a66df4009658481f8a94071", "html_url": "https://github.com/rust-lang/rust/commit/6a9ee09a991fcc909a66df4009658481f8a94071", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a9ee09a991fcc909a66df4009658481f8a94071/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d19f28b2f238e051a80caa4af6e4c5ec89ad6909", "url": "https://api.github.com/repos/rust-lang/rust/commits/d19f28b2f238e051a80caa4af6e4c5ec89ad6909", "html_url": "https://github.com/rust-lang/rust/commit/d19f28b2f238e051a80caa4af6e4c5ec89ad6909"}, {"sha": "87db16cecd165ab8ed57dfa308a429868716fdc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/87db16cecd165ab8ed57dfa308a429868716fdc9", "html_url": "https://github.com/rust-lang/rust/commit/87db16cecd165ab8ed57dfa308a429868716fdc9"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "60403d1c0117988e0c278429af58f5839c154c00", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6a9ee09a991fcc909a66df4009658481f8a94071/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a9ee09a991fcc909a66df4009658481f8a94071/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=6a9ee09a991fcc909a66df4009658481f8a94071", "patch": "@@ -243,6 +243,8 @@ pub trait Show {\n /// Format trait for the `:?` format. Useful for debugging, most all types\n /// should implement this.\n #[unstable = \"I/O and core have yet to be reconciled\"]\n+#[rustc_on_unimplemented = \"`{Self}` cannot be formatted using `:?`; if it is defined in your \\\n+                            crate, add `#[derive(Debug)]` or manually implement it\"]\n pub trait Debug {\n     /// Formats the value using the given formatter.\n     fn fmt(&self, &mut Formatter) -> Result;\n@@ -266,6 +268,8 @@ pub trait String {\n /// When a value can be semantically expressed as a String, this trait may be\n /// used. It corresponds to the default format, `{}`.\n #[unstable = \"I/O and core have yet to be reconciled\"]\n+#[rustc_on_unimplemented = \"`{Self}` cannot be formatted with the default formatter; try using \\\n+                            `:?` instead if you are using a format string\"]\n pub trait Display {\n     /// Formats the value using the given formatter.\n     fn fmt(&self, &mut Formatter) -> Result;"}, {"sha": "ce872db0299b641927111c3f44c9fa8c0af4a945", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a9ee09a991fcc909a66df4009658481f8a94071/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a9ee09a991fcc909a66df4009658481f8a94071/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=6a9ee09a991fcc909a66df4009658481f8a94071", "patch": "@@ -82,6 +82,8 @@ use usize;\n /// else.\n #[lang=\"iterator\"]\n #[stable]\n+#[rustc_on_unimplemented = \"`{Self}` is not an iterator; maybe try calling `.iter()` or a similar \\\n+                            method\"]\n pub trait Iterator {\n     #[stable]\n     type Item;"}, {"sha": "688f0484401529233794fdea918635d4a8ecab98", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6a9ee09a991fcc909a66df4009658481f8a94071/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a9ee09a991fcc909a66df4009658481f8a94071/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=6a9ee09a991fcc909a66df4009658481f8a94071", "patch": "@@ -27,16 +27,18 @@\n \n use clone::Clone;\n \n-/// Types able to be transferred across task boundaries.\n+/// Types able to be transferred across thread boundaries.\n #[unstable = \"will be overhauled with new lifetime rules; see RFC 458\"]\n #[lang=\"send\"]\n+#[rustc_on_unimplemented = \"`{Self}` cannot be sent between threads safely\"]\n pub unsafe trait Send: 'static {\n     // empty.\n }\n \n /// Types with a constant size known at compile-time.\n #[stable]\n #[lang=\"sized\"]\n+#[rustc_on_unimplemented = \"`{Self}` does not have a constant size known at compile-time\"]\n pub trait Sized {\n     // Empty.\n }\n@@ -146,11 +148,11 @@ pub trait Copy {\n     // Empty.\n }\n \n-/// Types that can be safely shared between tasks when aliased.\n+/// Types that can be safely shared between threads when aliased.\n ///\n /// The precise definition is: a type `T` is `Sync` if `&T` is\n /// thread-safe. In other words, there is no possibility of data races\n-/// when passing `&T` references between tasks.\n+/// when passing `&T` references between threads.\n ///\n /// As one would expect, primitive types like `u8` and `f64` are all\n /// `Sync`, and so are simple aggregate types containing them (like\n@@ -193,6 +195,7 @@ pub trait Copy {\n /// `transmute`-ing from `&T` to `&mut T` is illegal).\n #[unstable = \"will be overhauled with new lifetime rules; see RFC 458\"]\n #[lang=\"sync\"]\n+#[rustc_on_unimplemented = \"`{Self}` cannot be shared between threads safely\"]\n pub unsafe trait Sync {\n     // Empty\n }"}]}