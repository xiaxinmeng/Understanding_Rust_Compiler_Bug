{"sha": "31b49b0be8e1153da13be71dcc9d6bff888217e2", "node_id": "C_kwDOAAsO6NoAKDMxYjQ5YjBiZThlMTE1M2RhMTNiZTcxZGNjOWQ2YmZmODg4MjE3ZTI", "commit": {"author": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-02-23T15:25:07Z"}, "committer": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-02-23T15:25:07Z"}, "message": "fix typo", "tree": {"sha": "b1e8091ae7573d4722047e8c0cee28cec51cb5a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1e8091ae7573d4722047e8c0cee28cec51cb5a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31b49b0be8e1153da13be71dcc9d6bff888217e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31b49b0be8e1153da13be71dcc9d6bff888217e2", "html_url": "https://github.com/rust-lang/rust/commit/31b49b0be8e1153da13be71dcc9d6bff888217e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31b49b0be8e1153da13be71dcc9d6bff888217e2/comments", "author": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db62821c03ed89404891499fb0840b0b7dc78e11", "url": "https://api.github.com/repos/rust-lang/rust/commits/db62821c03ed89404891499fb0840b0b7dc78e11", "html_url": "https://github.com/rust-lang/rust/commit/db62821c03ed89404891499fb0840b0b7dc78e11"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "d23c0c225e192e84fc4ad27b0e6a5d3ac613713d", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/31b49b0be8e1153da13be71dcc9d6bff888217e2/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31b49b0be8e1153da13be71dcc9d6bff888217e2/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=31b49b0be8e1153da13be71dcc9d6bff888217e2", "patch": "@@ -176,8 +176,7 @@ fn check_inputs(cx: &LateContext<'_>, params: &[Param<'_>], call_args: &[Expr<'_\n             PatKind::Binding(_, id, ..) if path_to_local_id(arg, id) => {},\n             _ => return false,\n         }\n-        // checks that parameters are not bound as `ref`\n-        //dbg!(binding_modes.get(param.pat.hir_id));\n+        // checks that parameters are not bound as `ref` or `ref mut`\n         if let Some(BindingMode::BindByReference(_)) = binding_modes.get(param.pat.hir_id) {\n             return false;\n         }"}]}