{"sha": "9f2ab5b9adc4bac7048e5226e5a4580c31f7e533", "node_id": "C_kwDOAAsO6NoAKDlmMmFiNWI5YWRjNGJhYzcwNDhlNTIyNmU1YTQ1ODBjMzFmN2U1MzM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-09-30T17:48:55Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-10-01T14:24:30Z"}, "message": "Use a SortedMap instead of a VecMap.", "tree": {"sha": "b21e76659005cf8412f9af9fb7faa54808aa0386", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b21e76659005cf8412f9af9fb7faa54808aa0386"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f2ab5b9adc4bac7048e5226e5a4580c31f7e533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f2ab5b9adc4bac7048e5226e5a4580c31f7e533", "html_url": "https://github.com/rust-lang/rust/commit/9f2ab5b9adc4bac7048e5226e5a4580c31f7e533", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f2ab5b9adc4bac7048e5226e5a4580c31f7e533/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13608715d81928954412993e4baccf2779102058", "url": "https://api.github.com/repos/rust-lang/rust/commits/13608715d81928954412993e4baccf2779102058", "html_url": "https://github.com/rust-lang/rust/commit/13608715d81928954412993e4baccf2779102058"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "fe257e10205faaba0a4ed055ec7faa3fd5ac4c7a", "filename": "compiler/rustc_data_structures/src/sorted_map.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9f2ab5b9adc4bac7048e5226e5a4580c31f7e533/compiler%2Frustc_data_structures%2Fsrc%2Fsorted_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f2ab5b9adc4bac7048e5226e5a4580c31f7e533/compiler%2Frustc_data_structures%2Fsrc%2Fsorted_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsorted_map.rs?ref=9f2ab5b9adc4bac7048e5226e5a4580c31f7e533", "patch": "@@ -96,6 +96,23 @@ impl<K: Ord, V> SortedMap<K, V> {\n         }\n     }\n \n+    /// Gets a mutable reference to the value in the entry, or insert a new one.\n+    #[inline]\n+    pub fn get_mut_or_insert_default(&mut self, key: K) -> &mut V\n+    where\n+        K: Eq,\n+        V: Default,\n+    {\n+        let index = match self.lookup_index_for(&key) {\n+            Ok(index) => index,\n+            Err(index) => {\n+                self.data.insert(index, (key, V::default()));\n+                index\n+            }\n+        };\n+        unsafe { &mut self.data.get_unchecked_mut(index).1 }\n+    }\n+\n     #[inline]\n     pub fn clear(&mut self) {\n         self.data.clear();"}, {"sha": "86be0bd8775d76cdcca9553035d3a8c973fc590c", "filename": "compiler/rustc_data_structures/src/vec_map.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9f2ab5b9adc4bac7048e5226e5a4580c31f7e533/compiler%2Frustc_data_structures%2Fsrc%2Fvec_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f2ab5b9adc4bac7048e5226e5a4580c31f7e533/compiler%2Frustc_data_structures%2Fsrc%2Fvec_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fvec_map.rs?ref=9f2ab5b9adc4bac7048e5226e5a4580c31f7e533", "patch": "@@ -53,20 +53,6 @@ where\n         self.0.iter_mut().find(|(key, _)| k == key.borrow()).map(|elem| &mut elem.1)\n     }\n \n-    /// Gets a mutable reference to the value in the entry, or insert a new one.\n-    pub fn get_mut_or_insert_default(&mut self, k: K) -> &mut V\n-    where\n-        K: Eq,\n-        V: Default,\n-    {\n-        let pos = self.0.iter().position(|(key, _)| &k == key).unwrap_or_else(|| {\n-            let pos = self.0.len();\n-            self.0.push((k, V::default()));\n-            pos\n-        });\n-        &mut self.0[pos].1\n-    }\n-\n     /// Returns the any value corresponding to the supplied predicate filter.\n     ///\n     /// The supplied predicate will be applied to each (key, value) pair and it will return a"}, {"sha": "f3e4f1faeb05c1af7bf4106f6a4ccde6170d0275", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f2ab5b9adc4bac7048e5226e5a4580c31f7e533/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f2ab5b9adc4bac7048e5226e5a4580c31f7e533/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=9f2ab5b9adc4bac7048e5226e5a4580c31f7e533", "patch": "@@ -1,7 +1,7 @@\n use std::cmp;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::vec_map::VecMap;\n+use rustc_data_structures::sorted_map::SortedMap;\n use rustc_errors::{Diagnostic, DiagnosticBuilder, DiagnosticId, DiagnosticMessage, MultiSpan};\n use rustc_hir::{HirId, ItemLocalId};\n use rustc_session::lint::{\n@@ -63,7 +63,7 @@ pub type LevelAndSource = (Level, LintLevelSource);\n /// by the attributes for *a single HirId*.\n #[derive(Default, Debug, HashStable)]\n pub struct ShallowLintLevelMap {\n-    pub specs: VecMap<ItemLocalId, FxHashMap<LintId, LevelAndSource>>,\n+    pub specs: SortedMap<ItemLocalId, FxHashMap<LintId, LevelAndSource>>,\n }\n \n /// From an initial level and source, verify the effect of special annotations:"}]}