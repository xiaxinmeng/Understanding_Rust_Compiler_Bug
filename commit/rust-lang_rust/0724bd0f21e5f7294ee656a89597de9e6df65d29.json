{"sha": "0724bd0f21e5f7294ee656a89597de9e6df65d29", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MjRiZDBmMjFlNWY3Mjk0ZWU2NTZhODk1OTdkZTllNmRmNjVkMjk=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-27T22:54:52Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-27T23:02:41Z"}, "message": "Add attribute completion tests", "tree": {"sha": "225cd1db98c12a11b90c9c3d9e0a5b99eb295cc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/225cd1db98c12a11b90c9c3d9e0a5b99eb295cc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0724bd0f21e5f7294ee656a89597de9e6df65d29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0724bd0f21e5f7294ee656a89597de9e6df65d29", "html_url": "https://github.com/rust-lang/rust/commit/0724bd0f21e5f7294ee656a89597de9e6df65d29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0724bd0f21e5f7294ee656a89597de9e6df65d29/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "594270be49fbd6e7aee9a36afab02920fd771706", "url": "https://api.github.com/repos/rust-lang/rust/commits/594270be49fbd6e7aee9a36afab02920fd771706", "html_url": "https://github.com/rust-lang/rust/commit/594270be49fbd6e7aee9a36afab02920fd771706"}], "stats": {"total": 407, "additions": 399, "deletions": 8}, "files": [{"sha": "79a9c6d87140f386cd034ece18b2df4fc32ccf18", "filename": "crates/ide_completion/src/completions/attribute.rs", "status": "modified", "additions": 399, "deletions": 8, "changes": 407, "blob_url": "https://github.com/rust-lang/rust/blob/0724bd0f21e5f7294ee656a89597de9e6df65d29/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0724bd0f21e5f7294ee656a89597de9e6df65d29/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs?ref=0724bd0f21e5f7294ee656a89597de9e6df65d29", "patch": "@@ -19,10 +19,6 @@ mod lint;\n pub(crate) use self::lint::LintCompletion;\n \n pub(crate) fn complete_attribute(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n-    if ctx.mod_declaration_under_caret.is_some() {\n-        return None;\n-    }\n-\n     let attribute = ctx.attribute_under_caret.as_ref()?;\n     match (attribute.path().and_then(|p| p.as_single_name_ref()), attribute.token_tree()) {\n         (Some(path), Some(token_tree)) => match path.text().as_str() {\n@@ -322,13 +318,281 @@ mod tests {\n         expect.assert_eq(&actual);\n     }\n \n+    #[test]\n+    fn complete_attribute_on_source_file() {\n+        check(\n+            r#\"#![$0]\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+                at crate_name = \"\"\n+                at feature(\u2026)\n+                at no_implicit_prelude\n+                at no_main\n+                at no_std\n+                at recursion_limit = \u2026\n+                at type_length_limit = \u2026\n+                at windows_subsystem = \"\u2026\"\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_module() {\n+        check(\n+            r#\"#[$0] mod foo;\"#,\n+            expect![[r#\"\n+            at allow(\u2026)\n+            at cfg(\u2026)\n+            at cfg_attr(\u2026)\n+            at deny(\u2026)\n+            at forbid(\u2026)\n+            at warn(\u2026)\n+            at deprecated\n+            at doc = \"\u2026\"\n+            at doc(hidden)\n+            at doc(alias = \"\u2026\")\n+            at must_use\n+            at no_mangle\n+            at path = \"\u2026\"\n+        \"#]],\n+        );\n+        check(\n+            r#\"mod foo {#![$0]}\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+                at no_implicit_prelude\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_macro_rules() {\n+        check(\n+            r#\"#[$0] macro_rules! foo {}\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+                at macro_export\n+                at macro_use\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_macro_def() {\n+        check(\n+            r#\"#[$0] macro foo {}\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_extern_crate() {\n+        check(\n+            r#\"#[$0] extern crate foo;\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+                at macro_use\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_use() {\n+        check(\n+            r#\"#[$0] use foo;\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_type_alias() {\n+        check(\n+            r#\"#[$0] type foo = ();\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+            \"#]],\n+        );\n+    }\n+\n     #[test]\n     fn complete_attribute_on_struct() {\n         check(\n-            r#\"\n-#[$0]\n-struct Test {}\n-        \"#,\n+            r#\"#[$0] struct Foo;\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+                at derive(\u2026)\n+                at repr(\u2026)\n+                at non_exhaustive\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_enum() {\n+        check(\n+            r#\"#[$0] enum Foo {}\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+                at derive(\u2026)\n+                at repr(\u2026)\n+                at non_exhaustive\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_const() {\n+        check(\n+            r#\"#[$0] const FOO: () = ();\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_static() {\n+        check(\n+            r#\"#[$0] static FOO: () = ()\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+                at export_name = \"\u2026\"\n+                at link_name = \"\u2026\"\n+                at link_section = \"\u2026\"\n+                at used\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_trait() {\n+        check(\n+            r#\"#[$0] trait Foo {}\"#,\n             expect![[r#\"\n                 at allow(\u2026)\n                 at cfg(\u2026)\n@@ -337,10 +601,137 @@ struct Test {}\n                 at forbid(\u2026)\n                 at warn(\u2026)\n                 at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n                 at must_use\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn complete_attribute_on_impl() {\n+        check(\n+            r#\"#[$0] impl () {}\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+                at automatically_derived\n+            \"#]],\n+        );\n+        check(\n+            r#\"impl () {#![$0]}\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_extern_block() {\n+        check(\n+            r#\"#[$0] extern {}\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+                at link\n+            \"#]],\n+        );\n+        check(\n+            r#\"extern {#![$0]}\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+                at link\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_variant() {\n+        check(\n+            r#\"enum Foo { #[$0] Bar }\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+                at non_exhaustive\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_expr() {\n+        check(\n+            r#\"fn main() { #[$0] foo() }\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+            \"#]],\n+        );\n+        check(\n+            r#\"fn main() { #[$0] foo(); }\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at deny(\u2026)\n+                at forbid(\u2026)\n+                at warn(\u2026)\n+            \"#]],\n+        );\n+    }\n+\n     #[test]\n     fn test_attribute_completion_inside_nested_attr() {\n         check(r#\"#[cfg($0)]\"#, expect![[]])"}]}