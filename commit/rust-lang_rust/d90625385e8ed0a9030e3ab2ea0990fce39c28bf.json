{"sha": "d90625385e8ed0a9030e3ab2ea0990fce39c28bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MDYyNTM4NWU4ZWQwYTkwMzBlM2FiMmVhMDk5MGZjZTM5YzI4YmY=", "commit": {"author": {"name": "Vardan Margaryan", "email": "v.t.margaryan@gmail.com", "date": "2020-05-15T21:19:30Z"}, "committer": {"name": "Vardan Margaryan", "email": "v.t.margaryan@gmail.com", "date": "2020-05-15T21:19:30Z"}, "message": "Add more test cases for match_wildcard_for_single_variants", "tree": {"sha": "4f0bcc721939cb9cf1e163b645be6539e05c5b79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f0bcc721939cb9cf1e163b645be6539e05c5b79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d90625385e8ed0a9030e3ab2ea0990fce39c28bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d90625385e8ed0a9030e3ab2ea0990fce39c28bf", "html_url": "https://github.com/rust-lang/rust/commit/d90625385e8ed0a9030e3ab2ea0990fce39c28bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d90625385e8ed0a9030e3ab2ea0990fce39c28bf/comments", "author": {"login": "vtmargaryan", "id": 8739550, "node_id": "MDQ6VXNlcjg3Mzk1NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8739550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtmargaryan", "html_url": "https://github.com/vtmargaryan", "followers_url": "https://api.github.com/users/vtmargaryan/followers", "following_url": "https://api.github.com/users/vtmargaryan/following{/other_user}", "gists_url": "https://api.github.com/users/vtmargaryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtmargaryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtmargaryan/subscriptions", "organizations_url": "https://api.github.com/users/vtmargaryan/orgs", "repos_url": "https://api.github.com/users/vtmargaryan/repos", "events_url": "https://api.github.com/users/vtmargaryan/events{/privacy}", "received_events_url": "https://api.github.com/users/vtmargaryan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vtmargaryan", "id": 8739550, "node_id": "MDQ6VXNlcjg3Mzk1NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8739550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtmargaryan", "html_url": "https://github.com/vtmargaryan", "followers_url": "https://api.github.com/users/vtmargaryan/followers", "following_url": "https://api.github.com/users/vtmargaryan/following{/other_user}", "gists_url": "https://api.github.com/users/vtmargaryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtmargaryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtmargaryan/subscriptions", "organizations_url": "https://api.github.com/users/vtmargaryan/orgs", "repos_url": "https://api.github.com/users/vtmargaryan/repos", "events_url": "https://api.github.com/users/vtmargaryan/events{/privacy}", "received_events_url": "https://api.github.com/users/vtmargaryan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2620d2449da851171773f7bec1396af11babe278", "url": "https://api.github.com/repos/rust-lang/rust/commits/2620d2449da851171773f7bec1396af11babe278", "html_url": "https://github.com/rust-lang/rust/commit/2620d2449da851171773f7bec1396af11babe278"}], "stats": {"total": 108, "additions": 104, "deletions": 4}, "files": [{"sha": "519200977a798d4356e29bf8bea1b55dcce5fa16", "filename": "tests/ui/match_wildcard_for_single_variants.fixed", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/d90625385e8ed0a9030e3ab2ea0990fce39c28bf/tests%2Fui%2Fmatch_wildcard_for_single_variants.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d90625385e8ed0a9030e3ab2ea0990fce39c28bf/tests%2Fui%2Fmatch_wildcard_for_single_variants.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wildcard_for_single_variants.fixed?ref=d90625385e8ed0a9030e3ab2ea0990fce39c28bf", "patch": "@@ -9,10 +9,51 @@ enum Foo {\n     C,\n }\n \n+enum Color {\n+    Red,\n+    Green,\n+    Blue,\n+    Rgb(u8, u8, u8),\n+}\n+\n fn main() {\n-    match Foo::A {\n+    let f = Foo::A;\n+    match f {\n         Foo::A => {},\n         Foo::B => {},\n         Foo::C => {},\n     }\n+\n+    let color = Color::Red;\n+\n+    // check exhaustive bindings\n+    match color {\n+        Color::Red => {},\n+        Color::Green => {},\n+        Color::Rgb(_r, _g, _b) => {},\n+        Color::Blue => {},\n+    }\n+\n+    // check exhaustive wild\n+    match color {\n+        Color::Red => {},\n+        Color::Green => {},\n+        Color::Rgb(..) => {},\n+        Color::Blue => {},\n+    }\n+    match color {\n+        Color::Red => {},\n+        Color::Green => {},\n+        Color::Rgb(_, _, _) => {},\n+        Color::Blue => {},\n+    }\n+\n+    // shouldn't lint as there is one missing variant\n+    // and one that isn't exhaustively covered\n+    match color {\n+        Color::Red => {},\n+        Color::Green => {},\n+        Color::Rgb(255, _, _) => {},\n+        _ => {},\n+    }\n }"}, {"sha": "1df917e085c7123a947294226dae591e207e0f3f", "filename": "tests/ui/match_wildcard_for_single_variants.rs", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/d90625385e8ed0a9030e3ab2ea0990fce39c28bf/tests%2Fui%2Fmatch_wildcard_for_single_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d90625385e8ed0a9030e3ab2ea0990fce39c28bf/tests%2Fui%2Fmatch_wildcard_for_single_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wildcard_for_single_variants.rs?ref=d90625385e8ed0a9030e3ab2ea0990fce39c28bf", "patch": "@@ -9,10 +9,51 @@ enum Foo {\n     C,\n }\n \n+enum Color {\n+    Red,\n+    Green,\n+    Blue,\n+    Rgb(u8, u8, u8),\n+}\n+\n fn main() {\n-    match Foo::A {\n+    let f = Foo::A;\n+    match f {\n         Foo::A => {},\n         Foo::B => {},\n         _ => {},\n     }\n+\n+    let color = Color::Red;\n+\n+    // check exhaustive bindings\n+    match color {\n+        Color::Red => {},\n+        Color::Green => {},\n+        Color::Rgb(_r, _g, _b) => {},\n+        _ => {},\n+    }\n+\n+    // check exhaustive wild\n+    match color {\n+        Color::Red => {},\n+        Color::Green => {},\n+        Color::Rgb(..) => {},\n+        _ => {},\n+    }\n+    match color {\n+        Color::Red => {},\n+        Color::Green => {},\n+        Color::Rgb(_, _, _) => {},\n+        _ => {},\n+    }\n+\n+    // shouldn't lint as there is one missing variant\n+    // and one that isn't exhaustively covered\n+    match color {\n+        Color::Red => {},\n+        Color::Green => {},\n+        Color::Rgb(255, _, _) => {},\n+        _ => {},\n+    }\n }"}, {"sha": "82790aa9e80bba14c4c5e652ac67654dc78f3554", "filename": "tests/ui/match_wildcard_for_single_variants.stderr", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d90625385e8ed0a9030e3ab2ea0990fce39c28bf/tests%2Fui%2Fmatch_wildcard_for_single_variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d90625385e8ed0a9030e3ab2ea0990fce39c28bf/tests%2Fui%2Fmatch_wildcard_for_single_variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wildcard_for_single_variants.stderr?ref=d90625385e8ed0a9030e3ab2ea0990fce39c28bf", "patch": "@@ -1,10 +1,28 @@\n error: wildcard match will miss any future added variants\n-  --> $DIR/match_wildcard_for_single_variants.rs:16:9\n+  --> $DIR/match_wildcard_for_single_variants.rs:24:9\n    |\n LL |         _ => {},\n    |         ^ help: try this: `Foo::C`\n    |\n    = note: `-D clippy::match-wildcard-for-single-variants` implied by `-D warnings`\n \n-error: aborting due to previous error\n+error: wildcard match will miss any future added variants\n+  --> $DIR/match_wildcard_for_single_variants.rs:34:9\n+   |\n+LL |         _ => {},\n+   |         ^ help: try this: `Color::Blue`\n+\n+error: wildcard match will miss any future added variants\n+  --> $DIR/match_wildcard_for_single_variants.rs:42:9\n+   |\n+LL |         _ => {},\n+   |         ^ help: try this: `Color::Blue`\n+\n+error: wildcard match will miss any future added variants\n+  --> $DIR/match_wildcard_for_single_variants.rs:48:9\n+   |\n+LL |         _ => {},\n+   |         ^ help: try this: `Color::Blue`\n+\n+error: aborting due to 4 previous errors\n "}]}