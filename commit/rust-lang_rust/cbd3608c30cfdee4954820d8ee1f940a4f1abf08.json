{"sha": "cbd3608c30cfdee4954820d8ee1f940a4f1abf08", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZDM2MDhjMzBjZmRlZTQ5NTQ4MjBkOGVlMWY5NDBhNGYxYWJmMDg=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-11T00:55:15Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-11T02:48:17Z"}, "message": "Organize command line options and start with upper case", "tree": {"sha": "535043d388e707efc9438b148c77ee004110545d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/535043d388e707efc9438b148c77ee004110545d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbd3608c30cfdee4954820d8ee1f940a4f1abf08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbd3608c30cfdee4954820d8ee1f940a4f1abf08", "html_url": "https://github.com/rust-lang/rust/commit/cbd3608c30cfdee4954820d8ee1f940a4f1abf08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbd3608c30cfdee4954820d8ee1f940a4f1abf08/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d17168f4ba004000a560aacd1bb7b9b215c64084", "url": "https://api.github.com/repos/rust-lang/rust/commits/d17168f4ba004000a560aacd1bb7b9b215c64084", "html_url": "https://github.com/rust-lang/rust/commit/d17168f4ba004000a560aacd1bb7b9b215c64084"}], "stats": {"total": 40, "additions": 19, "deletions": 21}, "files": [{"sha": "713d320aa78191fd47d3afbed723b4e9235a2d82", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 19, "deletions": 21, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/cbd3608c30cfdee4954820d8ee1f940a4f1abf08/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbd3608c30cfdee4954820d8ee1f940a4f1abf08/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=cbd3608c30cfdee4954820d8ee1f940a4f1abf08", "patch": "@@ -135,47 +135,45 @@ fn match_cli_path_or_file(\n \n fn make_opts() -> Options {\n     let mut opts = Options::new();\n-    opts.optflag(\"h\", \"help\", \"show this message\");\n-    opts.optflag(\"V\", \"version\", \"show version information\");\n-    opts.optflag(\"v\", \"verbose\", \"print verbose output\");\n-    opts.optopt(\n-        \"\",\n-        \"write-mode\",\n-        \"how to write output (not usable when piping from stdin)\",\n-        \"[replace|overwrite|display|plain|diff|coverage|checkstyle]\",\n-    );\n-    opts.optopt(\n-        \"\",\n-        \"color\",\n-        \"use colored output (if supported)\",\n-        \"[always|never|auto]\",\n-    );\n-    opts.optflag(\"\", \"skip-children\", \"don't reformat child modules\");\n \n+    opts.optflag(\"h\", \"help\", \"Show this message\");\n+    opts.optflag(\"V\", \"version\", \"Show version information\");\n+    opts.optflag(\"v\", \"verbose\", \"Print verbose output\");\n+    opts.optflag(\"\", \"skip-children\", \"Don't reformat child modules\");\n     opts.optflag(\n         \"\",\n         \"unstable-features\",\n         \"Enables unstable features. Only available on nightly channel\",\n     );\n-\n     opts.optflag(\n         \"\",\n         \"config-help\",\n-        \"show details of rustfmt configuration options\",\n+        \"Show details of rustfmt configuration options\",\n     );\n     opts.optflag(\n         \"\",\n         \"error-on-unformatted\",\n         \"Error if unable to get comments or string literals within max_width, \\\n          or they are left with trailing whitespaces\",\n     );\n-    opts.opt(\n+\n+    opts.optopt(\n+        \"\",\n+        \"write-mode\",\n+        \"How to write output (not usable when piping from stdin)\",\n+        \"[replace|overwrite|display|plain|diff|coverage|checkstyle]\",\n+    );\n+    opts.optopt(\n+        \"\",\n+        \"color\",\n+        \"Use colored output (if supported)\",\n+        \"[always|never|auto]\",\n+    );\n+    opts.optopt(\n         \"\",\n         \"dump-default-config\",\n         \"Dumps default configuration to PATH. PATH defaults to stdout, if omitted.\",\n         \"PATH\",\n-        HasArg::Maybe,\n-        Occur::Optional,\n     );\n     opts.optopt(\n         \"\","}]}