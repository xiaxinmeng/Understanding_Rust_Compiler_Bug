{"sha": "3d1a4e4f2792948d78b3fed030e93c9c156fe35a", "node_id": "C_kwDOAAsO6NoAKDNkMWE0ZTRmMjc5Mjk0OGQ3OGIzZmVkMDMwZTkzYzljMTU2ZmUzNWE", "commit": {"author": {"name": "Martin Nordholts", "email": "enselic@gmail.com", "date": "2022-08-31T16:11:48Z"}, "committer": {"name": "Martin Nordholts", "email": "enselic@gmail.com", "date": "2022-08-31T16:20:49Z"}, "message": "unix_sigpipe: Add docs for `init()` `sigpipe` param", "tree": {"sha": "59fb38ed6f51fddbaae29f6208e783104b9608fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59fb38ed6f51fddbaae29f6208e783104b9608fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d1a4e4f2792948d78b3fed030e93c9c156fe35a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d1a4e4f2792948d78b3fed030e93c9c156fe35a", "html_url": "https://github.com/rust-lang/rust/commit/3d1a4e4f2792948d78b3fed030e93c9c156fe35a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d1a4e4f2792948d78b3fed030e93c9c156fe35a/comments", "author": {"login": "Enselic", "id": 115040, "node_id": "MDQ6VXNlcjExNTA0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/115040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Enselic", "html_url": "https://github.com/Enselic", "followers_url": "https://api.github.com/users/Enselic/followers", "following_url": "https://api.github.com/users/Enselic/following{/other_user}", "gists_url": "https://api.github.com/users/Enselic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Enselic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Enselic/subscriptions", "organizations_url": "https://api.github.com/users/Enselic/orgs", "repos_url": "https://api.github.com/users/Enselic/repos", "events_url": "https://api.github.com/users/Enselic/events{/privacy}", "received_events_url": "https://api.github.com/users/Enselic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Enselic", "id": 115040, "node_id": "MDQ6VXNlcjExNTA0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/115040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Enselic", "html_url": "https://github.com/Enselic", "followers_url": "https://api.github.com/users/Enselic/followers", "following_url": "https://api.github.com/users/Enselic/following{/other_user}", "gists_url": "https://api.github.com/users/Enselic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Enselic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Enselic/subscriptions", "organizations_url": "https://api.github.com/users/Enselic/orgs", "repos_url": "https://api.github.com/users/Enselic/repos", "events_url": "https://api.github.com/users/Enselic/events{/privacy}", "received_events_url": "https://api.github.com/users/Enselic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "236903f7e9045717d7795ab12bdf349ccf276c3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/236903f7e9045717d7795ab12bdf349ccf276c3b", "html_url": "https://github.com/rust-lang/rust/commit/236903f7e9045717d7795ab12bdf349ccf276c3b"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "b3f6f82952b75a8a13d4a0535bc90d0250b853af", "filename": "library/std/src/rt.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d1a4e4f2792948d78b3fed030e93c9c156fe35a/library%2Fstd%2Fsrc%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d1a4e4f2792948d78b3fed030e93c9c156fe35a/library%2Fstd%2Fsrc%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Frt.rs?ref=3d1a4e4f2792948d78b3fed030e93c9c156fe35a", "patch": "@@ -72,6 +72,8 @@ macro_rules! rtunwrap {\n // Runs before `main`.\n // SAFETY: must be called only once during runtime initialization.\n // NOTE: this is not guaranteed to run, for example when Rust code is called externally.\n+// The extra parameter `sigpipe` allows rustc to generate code that instructs std whether\n+// or not to ignore `SIGPIPE`.\n #[cfg_attr(test, allow(dead_code))]\n unsafe fn init(argc: isize, argv: *const *const u8, sigpipe: u8) {\n     unsafe {"}, {"sha": "2856dfcb3707f867df11351d5fcf28d1b46ee219", "filename": "library/std/src/sys/unix/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d1a4e4f2792948d78b3fed030e93c9c156fe35a/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d1a4e4f2792948d78b3fed030e93c9c156fe35a/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs?ref=3d1a4e4f2792948d78b3fed030e93c9c156fe35a", "patch": "@@ -49,6 +49,8 @@ pub fn init(argc: isize, argv: *const *const u8, _sigpipe: u8) {}\n #[cfg(not(target_os = \"espidf\"))]\n // SAFETY: must be called only once during runtime initialization.\n // NOTE: this is not guaranteed to run, for example when Rust code is called externally.\n+// The extra parameter `sigpipe` allows rustc to generate code that instructs std whether\n+// or not to ignore `SIGPIPE`.\n pub unsafe fn init(argc: isize, argv: *const *const u8, sigpipe: u8) {\n     // The standard streams might be closed on application startup. To prevent\n     // std::io::{stdin, stdout,stderr} objects from using other unrelated file"}]}