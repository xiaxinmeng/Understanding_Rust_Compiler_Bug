{"sha": "f5e64aeb41ac1f567ba4261a66d4edb70b6a943f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZTY0YWViNDFhYzFmNTY3YmE0MjYxYTY2ZDRlZGI3MGI2YTk0M2Y=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-10-23T03:51:45Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-10-25T05:50:56Z"}, "message": "Test for mut in ident patterns.", "tree": {"sha": "795724c345149d39c82f31c22bc04924278e990b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/795724c345149d39c82f31c22bc04924278e990b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5e64aeb41ac1f567ba4261a66d4edb70b6a943f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5e64aeb41ac1f567ba4261a66d4edb70b6a943f", "html_url": "https://github.com/rust-lang/rust/commit/f5e64aeb41ac1f567ba4261a66d4edb70b6a943f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5e64aeb41ac1f567ba4261a66d4edb70b6a943f/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99b7662971e97cf53669b2f5620dcd9ff8b98bc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/99b7662971e97cf53669b2f5620dcd9ff8b98bc3", "html_url": "https://github.com/rust-lang/rust/commit/99b7662971e97cf53669b2f5620dcd9ff8b98bc3"}], "stats": {"total": 115, "additions": 115, "deletions": 0}, "files": [{"sha": "4b382a3116a6bb23817c1692279bc5342a721efc", "filename": "src/test/compile-fail/lint-unused-mut-variables.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f5e64aeb41ac1f567ba4261a66d4edb70b6a943f/src%2Ftest%2Fcompile-fail%2Flint-unused-mut-variables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e64aeb41ac1f567ba4261a66d4edb70b6a943f/src%2Ftest%2Fcompile-fail%2Flint-unused-mut-variables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unused-mut-variables.rs?ref=f5e64aeb41ac1f567ba4261a66d4edb70b6a943f", "patch": "@@ -20,6 +20,14 @@ fn main() {\n     let mut a = 2; //~ ERROR: variable does not need to be mutable\n     let mut b = 3; //~ ERROR: variable does not need to be mutable\n     let mut a = ~[3]; //~ ERROR: variable does not need to be mutable\n+    let (mut a, b) = (1, 2); //~ ERROR: variable does not need to be mutable\n+\n+    match 30 {\n+        mut x => {} //~ ERROR: variable does not need to be mutable\n+    }\n+\n+    let x = |mut y: int| 10; //~ ERROR: variable does not need to be mutable\n+    fn what(mut foo: int) {} //~ ERROR: variable does not need to be mutable\n \n     // positive cases\n     let mut a = 2;\n@@ -30,6 +38,17 @@ fn main() {\n     do callback {\n         a.push(3);\n     }\n+    let (mut a, b) = (1, 2);\n+    a = 34;\n+\n+    match 30 {\n+        mut x => {\n+            x = 21;\n+        }\n+    }\n+\n+    let x = |mut y: int| y = 32;\n+    fn nothing(mut foo: int) { foo = 37; }\n }\n \n fn callback(f: &fn()) {}"}, {"sha": "d9cdae4a4995fd5b5a6ebd780aab635f184c65e7", "filename": "src/test/compile-fail/mut-patterns.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f5e64aeb41ac1f567ba4261a66d4edb70b6a943f/src%2Ftest%2Fcompile-fail%2Fmut-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e64aeb41ac1f567ba4261a66d4edb70b6a943f/src%2Ftest%2Fcompile-fail%2Fmut-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmut-patterns.rs?ref=f5e64aeb41ac1f567ba4261a66d4edb70b6a943f", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Can't put mut in non-ident pattern\n+\n+pub fn main() {\n+    struct Foo { x: int }\n+    let mut Foo { x: x } = Foo { x: 3 }; //~ ERROR: expected `;` but found `{`\n+}"}, {"sha": "13303e7b108819481e33435615df81405530b6c7", "filename": "src/test/run-pass/mut-in-ident-patterns.rs", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/f5e64aeb41ac1f567ba4261a66d4edb70b6a943f/src%2Ftest%2Frun-pass%2Fmut-in-ident-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e64aeb41ac1f567ba4261a66d4edb70b6a943f/src%2Ftest%2Frun-pass%2Fmut-in-ident-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmut-in-ident-patterns.rs?ref=f5e64aeb41ac1f567ba4261a66d4edb70b6a943f", "patch": "@@ -0,0 +1,80 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo {\n+    fn foo(&self, mut x: int) -> int {\n+        let val = x;\n+        x = 37 * x;\n+        val + x\n+    }\n+}\n+\n+struct X;\n+impl Foo for X {}\n+\n+pub fn main() {\n+    let (a, mut b) = (23, 4);\n+    assert_eq!(a, 23);\n+    assert_eq!(b, 4);\n+    b = a + b;\n+    assert_eq!(b, 27);\n+\n+\n+    assert_eq!(X.foo(2), 76);\n+\n+    enum Bar {\n+       Foo(int),\n+       Baz(f32, u8)\n+    }\n+\n+    let (x, mut y) = (32, Foo(21));\n+\n+    match x {\n+        mut z @ 32 => {\n+            assert_eq!(z, 32);\n+            z = 34;\n+            assert_eq!(z, 34);\n+        }\n+        _ => {}\n+    }\n+\n+    check_bar(&y);\n+    y = Baz(10.0, 3);\n+    check_bar(&y);\n+\n+    fn check_bar(y: &Bar) {\n+        match y {\n+            &Foo(a) => {\n+                assert_eq!(a, 21);\n+            }\n+            &Baz(a, b) => {\n+                assert_eq!(a, 10.0);\n+                assert_eq!(b, 3);\n+            }\n+        }\n+    }\n+\n+    fn foo1((x, mut y): (f64, int), mut z: int) -> int {\n+        y = 2 * 6;\n+        z = y + (x as int);\n+        y - z\n+    }\n+\n+    struct A {\n+        x: int\n+    }\n+    let A { x: mut x } = A { x: 10 };\n+    assert_eq!(x, 10);\n+    x = 30;\n+    assert_eq!(x, 30);\n+\n+    (|A { x: mut t }: A| { t = t+1; t })(A { x: 34 });\n+\n+}"}]}