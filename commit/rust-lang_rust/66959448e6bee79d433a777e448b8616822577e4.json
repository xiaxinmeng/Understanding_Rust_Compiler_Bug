{"sha": "66959448e6bee79d433a777e448b8616822577e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2OTU5NDQ4ZTZiZWU3OWQ0MzNhNzc3ZTQ0OGI4NjE2ODIyNTc3ZTQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-03T17:51:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-03T17:51:14Z"}, "message": "Rollup merge of #81532 - estebank:ice-ice-baby, r=pnkfelix\n\nRemove incorrect `delay_span_bug`\n\nThe following code is supposed to compile\n\n```rust\nuse std::ops::BitOr;\n\npub trait IntWrapper {\n    type InternalStorage;\n}\n\nimpl<T> BitOr for dyn IntWrapper<InternalStorage = T>\nwhere\n    Self: Sized,\n    T: BitOr + BitOr<Output = T>,\n{\n    type Output = Self;\n    fn bitor(self, _other: Self) -> Self {\n        todo!()\n    }\n}\n```\n\nBefore this change it would ICE. In #70998 the removed logic was added\nto provide better suggestions, and the `delay_span_bug` guard was added\nto  protect against a potential logic error when returning traits. As it\nhappens, there are cases, like the one above, where traits can indeed be\nreturned, so valid code was being rejected.\n\nFix (but not close) #80207.", "tree": {"sha": "9c0a0b9aff521999ce705e55e9fadfc0b8d92e28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c0a0b9aff521999ce705e55e9fadfc0b8d92e28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66959448e6bee79d433a777e448b8616822577e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgGuKSCRBK7hj4Ov3rIwAAdHIIAKUB4uEhuHwSdHOKztnQo8eW\nrpagQXzTSO1vHCu6CNg9MkRREl3PFC0vW/E2hUK4k3mbDxSkfyLQgHWBaSSkCmi6\n+0r0aWPkPdCFcYP721eP/v6TCiH0gW7ocdu8Rsz94CSgsM23/n9952mczfcu02+7\nB7bzkstaNncHcMhTHtM4ZVQOA/kRlEYmXYOIpR3TuPlKJuJ311Q6xj8z0K8Ci7qe\nipOFr+pB2NgK2ZpKgJkRvWJgNIxAjJHeHbk0NBca0tAqkMaNMAGzRi+IOKD9OFH/\nfZCQZom2h31DO/p2xutTzUJtbUzXnAk7dbRAIJ22SFXiDDXiqe1Pl5hTEbs/cso=\n=becY\n-----END PGP SIGNATURE-----\n", "payload": "tree 9c0a0b9aff521999ce705e55e9fadfc0b8d92e28\nparent 00dabfbd28c59b2770f162e4d0e9ed1c929c74e2\nparent ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4\nauthor Mara Bos <m-ou.se@m-ou.se> 1612374674 +0100\ncommitter GitHub <noreply@github.com> 1612374674 +0100\n\nRollup merge of #81532 - estebank:ice-ice-baby, r=pnkfelix\n\nRemove incorrect `delay_span_bug`\n\nThe following code is supposed to compile\n\n```rust\nuse std::ops::BitOr;\n\npub trait IntWrapper {\n    type InternalStorage;\n}\n\nimpl<T> BitOr for dyn IntWrapper<InternalStorage = T>\nwhere\n    Self: Sized,\n    T: BitOr + BitOr<Output = T>,\n{\n    type Output = Self;\n    fn bitor(self, _other: Self) -> Self {\n        todo!()\n    }\n}\n```\n\nBefore this change it would ICE. In #70998 the removed logic was added\nto provide better suggestions, and the `delay_span_bug` guard was added\nto  protect against a potential logic error when returning traits. As it\nhappens, there are cases, like the one above, where traits can indeed be\nreturned, so valid code was being rejected.\n\nFix (but not close) #80207.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66959448e6bee79d433a777e448b8616822577e4", "html_url": "https://github.com/rust-lang/rust/commit/66959448e6bee79d433a777e448b8616822577e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66959448e6bee79d433a777e448b8616822577e4/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00dabfbd28c59b2770f162e4d0e9ed1c929c74e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/00dabfbd28c59b2770f162e4d0e9ed1c929c74e2", "html_url": "https://github.com/rust-lang/rust/commit/00dabfbd28c59b2770f162e4d0e9ed1c929c74e2"}, {"sha": "ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4", "html_url": "https://github.com/rust-lang/rust/commit/ede0a71b9ebc9d8c87a06dbd95ca41ef7a4f93e4"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "8e2b0bfd6629e249b165e6e838aea1cff1599e20", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66959448e6bee79d433a777e448b8616822577e4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66959448e6bee79d433a777e448b8616822577e4/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=66959448e6bee79d433a777e448b8616822577e4", "patch": "@@ -203,7 +203,6 @@ pub(super) fn check_fn<'a, 'tcx>(\n         // possible cases.\n         fcx.check_expr(&body.value);\n         fcx.require_type_is_sized(declared_ret_ty, decl.output.span(), traits::SizedReturnType);\n-        tcx.sess.delay_span_bug(decl.output.span(), \"`!Sized` return type\");\n     } else {\n         fcx.require_type_is_sized(declared_ret_ty, decl.output.span(), traits::SizedReturnType);\n         fcx.check_return_expr(&body.value);"}, {"sha": "75430da1482398b111a8e4a1dd2a780ebe9aa0da", "filename": "src/test/ui/typeck/issue-80207-unsized-return.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/66959448e6bee79d433a777e448b8616822577e4/src%2Ftest%2Fui%2Ftypeck%2Fissue-80207-unsized-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66959448e6bee79d433a777e448b8616822577e4/src%2Ftest%2Fui%2Ftypeck%2Fissue-80207-unsized-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-80207-unsized-return.rs?ref=66959448e6bee79d433a777e448b8616822577e4", "patch": "@@ -0,0 +1,20 @@\n+// check-pass\n+\n+trait Foo {\n+    fn do_stuff() -> Self;\n+}\n+\n+trait Bar {\n+    type Output;\n+}\n+\n+impl<T> Foo for dyn Bar<Output = T>\n+where\n+    Self: Sized,\n+{\n+    fn do_stuff() -> Self {\n+        todo!()\n+    }\n+}\n+\n+fn main() {}"}]}