{"sha": "b7d99983f879696522a5c770241a2fb171071eab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZDk5OTgzZjg3OTY5NjUyMmE1Yzc3MDI0MWEyZmIxNzEwNzFlYWI=", "commit": {"author": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2021-09-04T22:13:15Z"}, "committer": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2021-09-04T22:13:15Z"}, "message": "Add line that was unintentionally removed", "tree": {"sha": "0157210241bd8d9f7376c37bb263bb33e1ca3098", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0157210241bd8d9f7376c37bb263bb33e1ca3098"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7d99983f879696522a5c770241a2fb171071eab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7d99983f879696522a5c770241a2fb171071eab", "html_url": "https://github.com/rust-lang/rust/commit/b7d99983f879696522a5c770241a2fb171071eab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7d99983f879696522a5c770241a2fb171071eab/comments", "author": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc5633fed6905b1dbf307cbce795e2545817e023", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc5633fed6905b1dbf307cbce795e2545817e023", "html_url": "https://github.com/rust-lang/rust/commit/fc5633fed6905b1dbf307cbce795e2545817e023"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "4acde1b216535ebe9e6552af944f92770c1a113e", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7d99983f879696522a5c770241a2fb171071eab/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7d99983f879696522a5c770241a2fb171071eab/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=b7d99983f879696522a5c770241a2fb171071eab", "patch": "@@ -91,6 +91,7 @@ pub fn is_const_evaluatable<'cx, 'tcx>(\n                         ControlFlow::CONTINUE\n                     }\n                     Node::Cast(_, _, ty) => {\n+                        let ty = ty.subst(tcx, ct.substs);\n                         if ty.has_infer_types_or_consts() {\n                             failure_kind = FailureKind::MentionsInfer;\n                         } else if ty.definitely_has_param_types_or_consts(tcx) {"}]}