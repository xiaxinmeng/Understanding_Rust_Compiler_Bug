{"sha": "329a65530fecdb59bbf06c6830cd766778b155b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOWE2NTUzMGZlY2RiNTliYmYwNmM2ODMwY2Q3NjY3NzhiMTU1YjQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-29T02:24:04Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-29T02:24:04Z"}, "message": "Canonicalize hashtables after running them through htab_map. Closes #77.", "tree": {"sha": "10a90eb2e441f6558cb375ea2c8c449f387bc1b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10a90eb2e441f6558cb375ea2c8c449f387bc1b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/329a65530fecdb59bbf06c6830cd766778b155b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/329a65530fecdb59bbf06c6830cd766778b155b4", "html_url": "https://github.com/rust-lang/rust/commit/329a65530fecdb59bbf06c6830cd766778b155b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/329a65530fecdb59bbf06c6830cd766778b155b4/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd059a354d74983cc8f5aea2abb9f09db670b86c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd059a354d74983cc8f5aea2abb9f09db670b86c", "html_url": "https://github.com/rust-lang/rust/commit/bd059a354d74983cc8f5aea2abb9f09db670b86c"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "5160429ef50354e5f7d329be2a39f9d4ac537a5b", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/329a65530fecdb59bbf06c6830cd766778b155b4/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/329a65530fecdb59bbf06c6830cd766778b155b4/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=329a65530fecdb59bbf06c6830cd766778b155b4", "patch": "@@ -817,14 +817,13 @@ let rebuild_ty_under_params\n         end\n         params\n     in\n-    let substituted = ref false in\n     let rec rebuild_ty t =\n       let base = ty_fold_rebuild (fun t -> t) in\n       let ty_fold_param (i, mut) =\n         let param = Ast.TY_param (i, mut) in\n           match htab_search pmap param with\n               None -> param\n-            | Some arg -> (substituted := true; arg)\n+            | Some arg -> arg\n       in\n       let ty_fold_named n =\n         let rec rebuild_name n =\n@@ -863,7 +862,7 @@ let rebuild_ty_under_params\n                   begin\n                     match htab_search nmap id with\n                         None -> Ast.TY_named n\n-                      | Some arg -> (substituted := true; arg)\n+                      | Some arg -> arg\n                   end\n             | _ -> Ast.TY_named n\n       in\n@@ -873,14 +872,7 @@ let rebuild_ty_under_params\n             ty_fold_named = ty_fold_named;\n         }\n       in\n-      let t' = fold_ty fold t in\n-        (* FIXME (issue #77): \"substituted\" and \"ty'\" here are only required\n-         * because the current type-equality-comparison code in Type uses <>\n-         * and will judge some cases, such as rebuilt tags, as unequal simply\n-         * due to the different hashtable order in the fold.  *)\n-        if !substituted\n-        then t'\n-        else t\n+        fold_ty fold t\n     in\n       rebuild_ty ty\n ;;"}, {"sha": "5c381b812062f6049b02fd835ea1b08edba0afcf", "filename": "src/boot/util/common.ml", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/329a65530fecdb59bbf06c6830cd766778b155b4/src%2Fboot%2Futil%2Fcommon.ml", "raw_url": "https://github.com/rust-lang/rust/raw/329a65530fecdb59bbf06c6830cd766778b155b4/src%2Fboot%2Futil%2Fcommon.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Futil%2Fcommon.ml?ref=329a65530fecdb59bbf06c6830cd766778b155b4", "patch": "@@ -220,6 +220,21 @@ let htab_put (htab:('a,'b) Hashtbl.t) (a:'a) (b:'b) : unit =\n   Hashtbl.add htab a b\n ;;\n \n+(* This is completely ridiculous, but it turns out that ocaml hashtables are\n+ * order-of-element-addition sensitive when it comes to the built-in\n+ * polymorphic comparison operator. So you have to canonicalize them after\n+ * you've stopped adding things to them if you ever want to use them in a\n+ * term that requires structural comparison to work. Sigh.\n+ *)\n+\n+let htab_canonicalize (htab:('a,'b) Hashtbl.t) : ('a,'b) Hashtbl.t =\n+  let n = Hashtbl.create (Hashtbl.length htab) in\n+    Array.iter\n+      (fun k -> Hashtbl.add n k (Hashtbl.find htab k))\n+      (sorted_htab_keys htab);\n+    n\n+;;\n+\n let htab_map\n     (htab:('a,'b) Hashtbl.t)\n     (f:'a -> 'b -> ('c * 'd))\n@@ -230,10 +245,9 @@ let htab_map\n       htab_put ntab c d\n   in\n     Hashtbl.iter g htab;\n-    ntab\n+    htab_canonicalize (ntab)\n ;;\n \n-\n let htab_fold\n     (fn:'a -> 'b -> 'c -> 'c)\n     (init:'c)"}]}