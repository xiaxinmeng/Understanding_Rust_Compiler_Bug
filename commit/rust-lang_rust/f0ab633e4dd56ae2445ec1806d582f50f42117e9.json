{"sha": "f0ab633e4dd56ae2445ec1806d582f50f42117e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwYWI2MzNlNGRkNTZhZTI0NDVlYzE4MDZkNTgyZjUwZjQyMTE3ZTk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-15T14:06:58Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-22T23:29:29Z"}, "message": "let_chains: Remove ast::ExprKind::{IfLet, WhileLet} from visitors and introduce ::Let.", "tree": {"sha": "c6efd9fe396138a664ac4b382c0eef2115fde179", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6efd9fe396138a664ac4b382c0eef2115fde179"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0ab633e4dd56ae2445ec1806d582f50f42117e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0ab633e4dd56ae2445ec1806d582f50f42117e9", "html_url": "https://github.com/rust-lang/rust/commit/f0ab633e4dd56ae2445ec1806d582f50f42117e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0ab633e4dd56ae2445ec1806d582f50f42117e9/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42accc99e6c4ad83876460afbda9d0adab750930", "url": "https://api.github.com/repos/rust-lang/rust/commits/42accc99e6c4ad83876460afbda9d0adab750930", "html_url": "https://github.com/rust-lang/rust/commit/42accc99e6c4ad83876460afbda9d0adab750930"}], "stats": {"total": 46, "additions": 10, "deletions": 36}, "files": [{"sha": "09406f7306dd7ce0fccaa1c7ffb0105e2a8e188e", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f0ab633e4dd56ae2445ec1806d582f50f42117e9/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0ab633e4dd56ae2445ec1806d582f50f42117e9/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=f0ab633e4dd56ae2445ec1806d582f50f42117e9", "patch": "@@ -1580,17 +1580,9 @@ impl<'l, 'tcx, 'll, O: DumpOutput + 'll> Visitor<'l> for DumpVisitor<'l, 'tcx, '\n                 self.visit_expr(subexpression);\n                 visit::walk_block(self, block);\n             }\n-            ast::ExprKind::WhileLet(ref pats, ref subexpression, ref block, _) => {\n+            ast::ExprKind::Let(ref pats, ref scrutinee) => {\n                 self.process_var_decl_multi(pats);\n-                debug!(\"for loop, walk sub-expr: {:?}\", subexpression.node);\n-                self.visit_expr(subexpression);\n-                visit::walk_block(self, block);\n-            }\n-            ast::ExprKind::IfLet(ref pats, ref subexpression, ref block, ref opt_else) => {\n-                self.process_var_decl_multi(pats);\n-                self.visit_expr(subexpression);\n-                visit::walk_block(self, block);\n-                opt_else.as_ref().map(|el| self.visit_expr(el));\n+                self.visit_expr(scrutinee);\n             }\n             ast::ExprKind::Repeat(ref element, ref count) => {\n                 self.visit_expr(element);"}, {"sha": "35aa2eead0b2b186429f1e3dd5cbec3c1c4104cf", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f0ab633e4dd56ae2445ec1806d582f50f42117e9/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0ab633e4dd56ae2445ec1806d582f50f42117e9/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=f0ab633e4dd56ae2445ec1806d582f50f42117e9", "patch": "@@ -1110,28 +1110,20 @@ pub fn noop_visit_expr<T: MutVisitor>(Expr { node, id, span, attrs }: &mut Expr,\n             vis.visit_ty(ty);\n         }\n         ExprKind::AddrOf(_m, ohs) => vis.visit_expr(ohs),\n+        ExprKind::Let(pats, scrutinee) => {\n+            visit_vec(pats, |pat| vis.visit_pat(pat));\n+            vis.visit_expr(scrutinee);\n+        }\n         ExprKind::If(cond, tr, fl) => {\n             vis.visit_expr(cond);\n             vis.visit_block(tr);\n             visit_opt(fl, |fl| vis.visit_expr(fl));\n         }\n-        ExprKind::IfLet(pats, expr, tr, fl) => {\n-            visit_vec(pats, |pat| vis.visit_pat(pat));\n-            vis.visit_expr(expr);\n-            vis.visit_block(tr);\n-            visit_opt(fl, |fl| vis.visit_expr(fl));\n-        }\n         ExprKind::While(cond, body, label) => {\n             vis.visit_expr(cond);\n             vis.visit_block(body);\n             visit_opt(label, |label| vis.visit_label(label));\n         }\n-        ExprKind::WhileLet(pats, expr, body, label) => {\n-            visit_vec(pats, |pat| vis.visit_pat(pat));\n-            vis.visit_expr(expr);\n-            vis.visit_block(body);\n-            visit_opt(label, |label| vis.visit_label(label));\n-        }\n         ExprKind::ForLoop(pat, iter, body, label) => {\n             vis.visit_pat(pat);\n             vis.visit_expr(iter);"}, {"sha": "6ebfab3a133ef80da61e6f8d75be0c8afa8314c4", "filename": "src/libsyntax/parse/classify.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0ab633e4dd56ae2445ec1806d582f50f42117e9/src%2Flibsyntax%2Fparse%2Fclassify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0ab633e4dd56ae2445ec1806d582f50f42117e9/src%2Flibsyntax%2Fparse%2Fclassify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fclassify.rs?ref=f0ab633e4dd56ae2445ec1806d582f50f42117e9", "patch": "@@ -14,11 +14,9 @@ use crate::ast;\n pub fn expr_requires_semi_to_be_stmt(e: &ast::Expr) -> bool {\n     match e.node {\n         ast::ExprKind::If(..) |\n-        ast::ExprKind::IfLet(..) |\n         ast::ExprKind::Match(..) |\n         ast::ExprKind::Block(..) |\n         ast::ExprKind::While(..) |\n-        ast::ExprKind::WhileLet(..) |\n         ast::ExprKind::Loop(..) |\n         ast::ExprKind::ForLoop(..) |\n         ast::ExprKind::TryBlock(..) => false,"}, {"sha": "4d961142ff1c75f1d0f0b3ff4777e92566700cac", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f0ab633e4dd56ae2445ec1806d582f50f42117e9/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0ab633e4dd56ae2445ec1806d582f50f42117e9/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=f0ab633e4dd56ae2445ec1806d582f50f42117e9", "patch": "@@ -719,6 +719,10 @@ pub fn walk_expr<'a, V: Visitor<'a>>(visitor: &mut V, expression: &'a Expr) {\n             visitor.visit_expr(subexpression);\n             visitor.visit_ty(typ)\n         }\n+        ExprKind::Let(ref pats, ref scrutinee) => {\n+            walk_list!(visitor, visit_pat, pats);\n+            visitor.visit_expr(scrutinee);\n+        }\n         ExprKind::If(ref head_expression, ref if_block, ref optional_else) => {\n             visitor.visit_expr(head_expression);\n             visitor.visit_block(if_block);\n@@ -729,18 +733,6 @@ pub fn walk_expr<'a, V: Visitor<'a>>(visitor: &mut V, expression: &'a Expr) {\n             visitor.visit_expr(subexpression);\n             visitor.visit_block(block);\n         }\n-        ExprKind::IfLet(ref pats, ref subexpression, ref if_block, ref optional_else) => {\n-            walk_list!(visitor, visit_pat, pats);\n-            visitor.visit_expr(subexpression);\n-            visitor.visit_block(if_block);\n-            walk_list!(visitor, visit_expr, optional_else);\n-        }\n-        ExprKind::WhileLet(ref pats, ref subexpression, ref block, ref opt_label) => {\n-            walk_list!(visitor, visit_label, opt_label);\n-            walk_list!(visitor, visit_pat, pats);\n-            visitor.visit_expr(subexpression);\n-            visitor.visit_block(block);\n-        }\n         ExprKind::ForLoop(ref pattern, ref subexpression, ref block, ref opt_label) => {\n             walk_list!(visitor, visit_label, opt_label);\n             visitor.visit_pat(pattern);"}]}