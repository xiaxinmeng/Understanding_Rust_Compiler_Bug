{"sha": "083010f6339e558184f06ce76a18e1ad0b0ee936", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MzAxMGY2MzM5ZTU1ODE4NGYwNmNlNzZhMThlMWFkMGIwZWU5MzY=", "commit": {"author": {"name": "Omer Ben-Amram", "email": "omerbenamram@gmail.com", "date": "2019-12-14T11:29:42Z"}, "committer": {"name": "Omer Ben-Amram", "email": "omerbenamram@gmail.com", "date": "2019-12-14T11:29:42Z"}, "message": "removed `type.alias`", "tree": {"sha": "ab032c9efc825bf2fc76b27046d2f752464aaea3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab032c9efc825bf2fc76b27046d2f752464aaea3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/083010f6339e558184f06ce76a18e1ad0b0ee936", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/083010f6339e558184f06ce76a18e1ad0b0ee936", "html_url": "https://github.com/rust-lang/rust/commit/083010f6339e558184f06ce76a18e1ad0b0ee936", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/083010f6339e558184f06ce76a18e1ad0b0ee936/comments", "author": {"login": "omerbenamram", "id": 2467993, "node_id": "MDQ6VXNlcjI0Njc5OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2467993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omerbenamram", "html_url": "https://github.com/omerbenamram", "followers_url": "https://api.github.com/users/omerbenamram/followers", "following_url": "https://api.github.com/users/omerbenamram/following{/other_user}", "gists_url": "https://api.github.com/users/omerbenamram/gists{/gist_id}", "starred_url": "https://api.github.com/users/omerbenamram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omerbenamram/subscriptions", "organizations_url": "https://api.github.com/users/omerbenamram/orgs", "repos_url": "https://api.github.com/users/omerbenamram/repos", "events_url": "https://api.github.com/users/omerbenamram/events{/privacy}", "received_events_url": "https://api.github.com/users/omerbenamram/received_events", "type": "User", "site_admin": false}, "committer": {"login": "omerbenamram", "id": 2467993, "node_id": "MDQ6VXNlcjI0Njc5OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2467993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omerbenamram", "html_url": "https://github.com/omerbenamram", "followers_url": "https://api.github.com/users/omerbenamram/followers", "following_url": "https://api.github.com/users/omerbenamram/following{/other_user}", "gists_url": "https://api.github.com/users/omerbenamram/gists{/gist_id}", "starred_url": "https://api.github.com/users/omerbenamram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omerbenamram/subscriptions", "organizations_url": "https://api.github.com/users/omerbenamram/orgs", "repos_url": "https://api.github.com/users/omerbenamram/repos", "events_url": "https://api.github.com/users/omerbenamram/events{/privacy}", "received_events_url": "https://api.github.com/users/omerbenamram/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67641d3f5fd1cfd49673c4eea9e3d646ed97e108", "url": "https://api.github.com/repos/rust-lang/rust/commits/67641d3f5fd1cfd49673c4eea9e3d646ed97e108", "html_url": "https://github.com/rust-lang/rust/commit/67641d3f5fd1cfd49673c4eea9e3d646ed97e108"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "40605d9efdfbc4a69573a08538bbac9e19622758", "filename": "crates/ra_ide/src/snapshots/highlighting.html", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/083010f6339e558184f06ce76a18e1ad0b0ee936/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/083010f6339e558184f06ce76a18e1ad0b0ee936/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html?ref=083010f6339e558184f06ce76a18e1ad0b0ee936", "patch": "@@ -10,8 +10,10 @@\n .builtin            { color: #DD6718; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }\n+.type\\.param       { color: #20999D; }\n .attribute          { color: #94BFF3; }\n .literal            { color: #BFEBBF; }\n+.literal\\.numeric  { color: #6A8759; }\n .macro              { color: #94BFF3; }\n .variable           { color: #DCDCCC; }\n .variable\\.mut     { color: #DCDCCC; text-decoration: underline; }\n@@ -22,36 +24,36 @@\n </style>\n <pre><code><span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"attribute\">derive</span><span class=\"attribute\">(</span><span class=\"attribute\">Clone</span><span class=\"attribute\">,</span><span class=\"attribute\"> </span><span class=\"attribute\">Debug</span><span class=\"attribute\">)</span><span class=\"attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"type\">Foo</span> {\n-    <span class=\"keyword\">pub</span> <span class=\"field\">x</span>: <span class=\"type\">i32</span>,\n-    <span class=\"keyword\">pub</span> <span class=\"field\">y</span>: <span class=\"type\">i32</span>,\n+    <span class=\"keyword\">pub</span> <span class=\"field\">x</span>: <span class=\"type.builtin\">i32</span>,\n+    <span class=\"keyword\">pub</span> <span class=\"field\">y</span>: <span class=\"type.builtin\">i32</span>,\n }\n \n-<span class=\"keyword\">fn</span> <span class=\"function\">foo</span>&lt;<span class=\"type\">T</span>&gt;() -&gt; <span class=\"type\">T</span> {\n+<span class=\"keyword\">fn</span> <span class=\"function\">foo</span>&lt;<span class=\"type.param\">T</span>&gt;() -&gt; <span class=\"type.param\">T</span> {\n     <span class=\"macro\">unimplemented</span><span class=\"macro\">!</span>();\n-    <span class=\"function\">foo</span>::&lt;<span class=\"type\">i32</span>&gt;();\n+    <span class=\"function\">foo</span>::&lt;<span class=\"type.builtin\">i32</span>&gt;();\n }\n \n <span class=\"comment\">// comment</span>\n <span class=\"keyword\">fn</span> <span class=\"function\">main</span>() {\n-    <span class=\"macro\">println</span><span class=\"macro\">!</span>(<span class=\"string\">\"Hello, {}!\"</span>, <span class=\"literal\">92</span>);\n+    <span class=\"macro\">println</span><span class=\"macro\">!</span>(<span class=\"string\">\"Hello, {}!\"</span>, <span class=\"literal.numeric\">92</span>);\n \n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable.mut\">vec</span> = <span class=\"text\">Vec</span>::<span class=\"text\">new</span>();\n     <span class=\"keyword.control\">if</span> <span class=\"keyword\">true</span> {\n-        <span class=\"variable.mut\">vec</span>.<span class=\"text\">push</span>(<span class=\"type\">Foo</span> { <span class=\"field\">x</span>: <span class=\"literal\">0</span>, <span class=\"field\">y</span>: <span class=\"literal\">1</span> });\n+        <span class=\"variable.mut\">vec</span>.<span class=\"text\">push</span>(<span class=\"type\">Foo</span> { <span class=\"field\">x</span>: <span class=\"literal.numeric\">0</span>, <span class=\"field\">y</span>: <span class=\"literal.numeric\">1</span> });\n     }\n-    <span class=\"keyword.unsafe\">unsafe</span> { <span class=\"variable.mut\">vec</span>.<span class=\"text\">set_len</span>(<span class=\"literal\">0</span>); }\n+    <span class=\"keyword.unsafe\">unsafe</span> { <span class=\"variable.mut\">vec</span>.<span class=\"text\">set_len</span>(<span class=\"literal.numeric\">0</span>); }\n \n-    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable.mut\">x</span> = <span class=\"literal\">42</span>;\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable.mut\">x</span> = <span class=\"literal.numeric\">42</span>;\n     <span class=\"keyword\">let</span> <span class=\"variable.mut\">y</span> = &<span class=\"keyword\">mut</span> <span class=\"variable.mut\">x</span>;\n     <span class=\"keyword\">let</span> <span class=\"variable\">z</span> = &<span class=\"variable.mut\">y</span>;\n \n     <span class=\"variable.mut\">y</span>;\n }\n \n-<span class=\"keyword\">enum</span> <span class=\"type\">E</span>&lt;<span class=\"type\">X</span>&gt; {\n-    <span class=\"constant\">V</span>(<span class=\"type\">X</span>)\n+<span class=\"keyword\">enum</span> <span class=\"type\">E</span>&lt;<span class=\"type.param\">X</span>&gt; {\n+    <span class=\"constant\">V</span>(<span class=\"type.param\">X</span>)\n }\n \n-<span class=\"keyword\">impl</span>&lt;<span class=\"type\">X</span>&gt; <span class=\"type\">E</span>&lt;<span class=\"type\">X</span>&gt; {\n-    <span class=\"keyword\">fn</span> <span class=\"function\">new</span>&lt;<span class=\"type\">T</span>&gt;() -&gt; <span class=\"type\">E</span>&lt;<span class=\"type\">T</span>&gt; {}\n+<span class=\"keyword\">impl</span>&lt;<span class=\"type.param\">X</span>&gt; <span class=\"type\">E</span>&lt;<span class=\"type.param\">X</span>&gt; {\n+    <span class=\"keyword\">fn</span> <span class=\"function\">new</span>&lt;<span class=\"type.param\">T</span>&gt;() -&gt; <span class=\"type\">E</span>&lt;<span class=\"type.param\">T</span>&gt; {}\n }</code></pre>\n\\ No newline at end of file"}, {"sha": "235e09ffca52ebf4aa82d6d340b419d9a2c6af66", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/083010f6339e558184f06ce76a18e1ad0b0ee936/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083010f6339e558184f06ce76a18e1ad0b0ee936/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=083010f6339e558184f06ce76a18e1ad0b0ee936", "patch": "@@ -118,7 +118,7 @@ pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRa\n             INT_NUMBER | FLOAT_NUMBER => \"literal.numeric\",\n             BYTE => \"literal.byte\",\n             CHAR => \"literal.char\",\n-            LIFETIME => \"lifetime\",\n+            LIFETIME => \"type.lifetime\",\n             T![unsafe] => \"keyword.unsafe\",\n             k if is_control_keyword(k) => \"keyword.control\",\n             k if k.is_keyword() => \"keyword\",\n@@ -218,7 +218,7 @@ fn highlight_name(db: &RootDatabase, name_kind: NameKind) -> &'static str {\n         Field(_) => \"field\",\n         AssocItem(hir::AssocItem::Function(_)) => \"function\",\n         AssocItem(hir::AssocItem::Const(_)) => \"constant\",\n-        AssocItem(hir::AssocItem::TypeAlias(_)) => \"type.alias\",\n+        AssocItem(hir::AssocItem::TypeAlias(_)) => \"type\",\n         Def(hir::ModuleDef::Module(_)) => \"module\",\n         Def(hir::ModuleDef::Function(_)) => \"function\",\n         Def(hir::ModuleDef::Adt(_)) => \"type\",\n@@ -259,8 +259,10 @@ pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padd\n .builtin            { color: #DD6718; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }\n+.type\\\\.param       { color: #20999D; }\n .attribute          { color: #94BFF3; }\n .literal            { color: #BFEBBF; }\n+.literal\\\\.numeric  { color: #6A8759; }\n .macro              { color: #94BFF3; }\n .variable           { color: #DCDCCC; }\n .variable\\\\.mut     { color: #DCDCCC; text-decoration: underline; }"}, {"sha": "68b3b6e0563727996e07821f6f61524cb00e20ac", "filename": "editors/code/package.json", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/083010f6339e558184f06ce76a18e1ad0b0ee936/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/083010f6339e558184f06ce76a18e1ad0b0ee936/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=083010f6339e558184f06ce76a18e1ad0b0ee936", "patch": "@@ -485,6 +485,15 @@\n                     \"highContrast\": \"#4EC9B0\"\n                 }\n             },\n+            {\n+                \"id\": \"ralsp.type.lifetime\",\n+                \"description\": \"Color for `Self` param type\",\n+                \"defaults\": {\n+                    \"dark\": \"#4EC9B0\",\n+                    \"light\": \"#267F99\",\n+                    \"highContrast\": \"#4EC9B0\"\n+                }\n+            },\n             {\n                 \"id\": \"ralsp.type.self\",\n                 \"description\": \"Color for `Self` param type\","}, {"sha": "d7c0ae1316a6b7105f5227b42ffd9e3ce0223d96", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/083010f6339e558184f06ce76a18e1ad0b0ee936/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/083010f6339e558184f06ce76a18e1ad0b0ee936/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=083010f6339e558184f06ce76a18e1ad0b0ee936", "patch": "@@ -56,6 +56,7 @@ export class Highlighter {\n             decoration('type.self'),\n             decoration('type.generic'),\n             decoration('type.param'),\n+            decoration('type.lifetime'),\n             decoration('builtin'),\n             decoration('text'),\n             decoration('attribute'),"}]}