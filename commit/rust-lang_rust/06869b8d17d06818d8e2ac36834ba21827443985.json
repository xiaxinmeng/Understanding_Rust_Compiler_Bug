{"sha": "06869b8d17d06818d8e2ac36834ba21827443985", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2ODY5YjhkMTdkMDY4MThkOGUyYWMzNjgzNGJhMjE4Mjc0NDM5ODU=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-22T09:36:00Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-31T18:25:54Z"}, "message": "rustc_codegen_ssa: change set_var_name back to taking a &str.", "tree": {"sha": "d6db36d8bec15a121452d4d5de149e0886ee71ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6db36d8bec15a121452d4d5de149e0886ee71ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06869b8d17d06818d8e2ac36834ba21827443985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06869b8d17d06818d8e2ac36834ba21827443985", "html_url": "https://github.com/rust-lang/rust/commit/06869b8d17d06818d8e2ac36834ba21827443985", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06869b8d17d06818d8e2ac36834ba21827443985/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f4ee36e0330ef6db36f3cf2fe4d3ea19f1f0eb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f4ee36e0330ef6db36f3cf2fe4d3ea19f1f0eb4", "html_url": "https://github.com/rust-lang/rust/commit/5f4ee36e0330ef6db36f3cf2fe4d3ea19f1f0eb4"}], "stats": {"total": 44, "additions": 10, "deletions": 34}, "files": [{"sha": "0e6269fc7e1b1a3011930d9c2249921e5a9e3b51", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06869b8d17d06818d8e2ac36834ba21827443985/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06869b8d17d06818d8e2ac36834ba21827443985/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=06869b8d17d06818d8e2ac36834ba21827443985", "patch": "@@ -225,7 +225,7 @@ impl DebugInfoBuilderMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n         gdb::insert_reference_to_gdb_debug_scripts_section_global(self)\n     }\n \n-    fn set_var_name(&mut self, value: &'ll Value, name: impl ToString) {\n+    fn set_var_name(&mut self, value: &'ll Value, name: &str) {\n         // Avoid wasting time if LLVM value names aren't even enabled.\n         if self.sess().fewer_names() {\n             return;\n@@ -255,7 +255,7 @@ impl DebugInfoBuilderMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n             Err(_) => return,\n         }\n \n-        let cname = CString::new(name.to_string()).unwrap();\n+        let cname = SmallCStr::new(name);\n         unsafe {\n             llvm::LLVMSetValueName(value, cname.as_ptr());\n         }"}, {"sha": "29c0d70b58a90f503b435a2fe4aecd62c7940512", "filename": "src/librustc_codegen_ssa/mir/debuginfo.rs", "status": "modified", "additions": 7, "deletions": 31, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/06869b8d17d06818d8e2ac36834ba21827443985/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06869b8d17d06818d8e2ac36834ba21827443985/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs?ref=06869b8d17d06818d8e2ac36834ba21827443985", "patch": "@@ -7,7 +7,6 @@ use rustc::ty::layout::HasTyCtxt;\n use rustc_target::abi::{Variants, VariantIdx};\n use crate::traits::*;\n \n-use std::fmt;\n use syntax_pos::{DUMMY_SP, BytePos, Span};\n use syntax::symbol::kw;\n \n@@ -92,29 +91,6 @@ impl<D> DebugScope<D> {\n     }\n }\n \n-// HACK(eddyb) helpers for `set_var_name` calls, move elsewhere?\n-enum Either<T, U> {\n-    Left(T),\n-    Right(U),\n-}\n-\n-impl<T: fmt::Display, U: fmt::Display> fmt::Display for Either<T, U> {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        match self {\n-            Either::Left(x) => x.fmt(f),\n-            Either::Right(x) => x.fmt(f),\n-        }\n-    }\n-}\n-\n-struct DisplayViaDebug<T>(T);\n-\n-impl<T: fmt::Debug> fmt::Display for DisplayViaDebug<T> {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        self.0.fmt(f)\n-    }\n-}\n-\n impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n     pub fn set_debug_loc(\n         &mut self,\n@@ -207,26 +183,26 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n \n         let local_ref = &self.locals[local];\n \n-        {\n+        if !bx.sess().fewer_names() {\n             let name = match name {\n-                Some(name) if name != kw::Invalid => Either::Left(name),\n-                _ => Either::Right(DisplayViaDebug(local)),\n+                Some(name) if name != kw::Invalid => name.to_string(),\n+                _ => format!(\"{:?}\", local),\n             };\n             match local_ref {\n                 LocalRef::Place(place) |\n                 LocalRef::UnsizedPlace(place) => {\n-                    bx.set_var_name(place.llval, name);\n+                    bx.set_var_name(place.llval, &name);\n                 }\n                 LocalRef::Operand(Some(operand)) => match operand.val {\n                     OperandValue::Ref(x, ..) |\n                     OperandValue::Immediate(x) => {\n-                        bx.set_var_name(x, name);\n+                        bx.set_var_name(x, &name);\n                     }\n                     OperandValue::Pair(a, b) => {\n                         // FIXME(eddyb) these are scalar components,\n                         // maybe extract the high-level fields?\n-                        bx.set_var_name(a, format_args!(\"{}.0\", name));\n-                        bx.set_var_name(b, format_args!(\"{}.1\", name));\n+                        bx.set_var_name(a, &(name.clone() + \".0\"));\n+                        bx.set_var_name(b, &(name + \".1\"));\n                     }\n                 }\n                 LocalRef::Operand(None) => {}"}, {"sha": "4712eff67963e410ba160a15077c28d565d34d99", "filename": "src/librustc_codegen_ssa/traits/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06869b8d17d06818d8e2ac36834ba21827443985/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06869b8d17d06818d8e2ac36834ba21827443985/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdebuginfo.rs?ref=06869b8d17d06818d8e2ac36834ba21827443985", "patch": "@@ -57,5 +57,5 @@ pub trait DebugInfoBuilderMethods<'tcx>: BackendTypes {\n         span: Span,\n     );\n     fn insert_reference_to_gdb_debug_scripts_section_global(&mut self);\n-    fn set_var_name(&mut self, value: Self::Value, name: impl ToString);\n+    fn set_var_name(&mut self, value: Self::Value, name: &str);\n }"}]}