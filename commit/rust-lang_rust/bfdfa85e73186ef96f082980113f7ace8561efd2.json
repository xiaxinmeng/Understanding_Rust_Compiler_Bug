{"sha": "bfdfa85e73186ef96f082980113f7ace8561efd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmZGZhODVlNzMxODZlZjk2ZjA4Mjk4MDExM2Y3YWNlODU2MWVmZDI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-28T04:46:41Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-28T04:46:41Z"}, "message": "Add tests for Vec(Deque) array PartialEq impls.", "tree": {"sha": "363e1bb2866466148947aec599553d950f685d3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/363e1bb2866466148947aec599553d950f685d3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfdfa85e73186ef96f082980113f7ace8561efd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfdfa85e73186ef96f082980113f7ace8561efd2", "html_url": "https://github.com/rust-lang/rust/commit/bfdfa85e73186ef96f082980113f7ace8561efd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfdfa85e73186ef96f082980113f7ace8561efd2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "744ec8809dbdbee03422e2456f8caf549c69656d", "url": "https://api.github.com/repos/rust-lang/rust/commits/744ec8809dbdbee03422e2456f8caf549c69656d", "html_url": "https://github.com/rust-lang/rust/commit/744ec8809dbdbee03422e2456f8caf549c69656d"}], "stats": {"total": 131, "additions": 131, "deletions": 0}, "files": [{"sha": "db941a440e104c7e940f7cccbc5ea6edbf4d5dec", "filename": "src/test/ui/const-generics/array-impls/alloc-traits-impls-length-32.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/bfdfa85e73186ef96f082980113f7ace8561efd2/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-traits-impls-length-32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfdfa85e73186ef96f082980113f7ace8561efd2/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-traits-impls-length-32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-traits-impls-length-32.rs?ref=bfdfa85e73186ef96f082980113f7ace8561efd2", "patch": "@@ -0,0 +1,40 @@\n+// check-pass\n+\n+pub fn yes_vec_partial_eq_array<A, B>() -> impl PartialEq<[B; 32]>\n+where\n+    A: PartialEq<B>,\n+{\n+    Vec::<A>::new()\n+}\n+\n+pub fn yes_vec_partial_eq_ref_array<'a, A, B>() -> impl PartialEq<&'a [B; 32]>\n+where\n+    A: PartialEq<B>,\n+{\n+    Vec::<A>::new()\n+}\n+\n+use std::collections::VecDeque;\n+\n+pub fn yes_vecdeque_partial_eq_array<A, B>() -> impl PartialEq<[B; 32]>\n+where\n+    A: PartialEq<B>,\n+{\n+    VecDeque::<A>::new()\n+}\n+\n+pub fn yes_vecdeque_partial_eq_ref_array<'a, A, B>() -> impl PartialEq<&'a [B; 32]>\n+where\n+    A: PartialEq<B>,\n+{\n+    VecDeque::<A>::new()\n+}\n+\n+pub fn yes_vecdeque_partial_eq_ref_mut_array<'a, A, B>() -> impl PartialEq<&'a mut [B; 32]>\n+where\n+    A: PartialEq<B>,\n+{\n+    VecDeque::<A>::new()\n+}\n+\n+fn main() {}"}, {"sha": "19107e6bf16d5be779e9832384deb4ae2b643f8c", "filename": "src/test/ui/const-generics/array-impls/alloc-traits-no-impls-length-33.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/bfdfa85e73186ef96f082980113f7ace8561efd2/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-traits-no-impls-length-33.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfdfa85e73186ef96f082980113f7ace8561efd2/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-traits-no-impls-length-33.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-traits-no-impls-length-33.rs?ref=bfdfa85e73186ef96f082980113f7ace8561efd2", "patch": "@@ -0,0 +1,43 @@\n+pub fn no_vec_partial_eq_array<A, B>() -> impl PartialEq<[B; 33]>\n+//~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+where\n+    A: PartialEq<B>,\n+{\n+    Vec::<A>::new()\n+}\n+\n+pub fn no_vec_partial_eq_ref_array<'a, A, B>() -> impl PartialEq<&'a [B; 33]>\n+//~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+where\n+    A: PartialEq<B>,\n+{\n+    Vec::<A>::new()\n+}\n+\n+use std::collections::VecDeque;\n+\n+pub fn no_vecdeque_partial_eq_array<A, B>() -> impl PartialEq<[B; 33]>\n+//~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+where\n+    A: PartialEq<B>,\n+{\n+    VecDeque::<A>::new()\n+}\n+\n+pub fn no_vecdeque_partial_eq_ref_array<'a, A, B>() -> impl PartialEq<&'a [B; 33]>\n+//~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+where\n+    A: PartialEq<B>,\n+{\n+    VecDeque::<A>::new()\n+}\n+\n+pub fn no_vecdeque_partial_eq_ref_mut_array<'a, A, B>() -> impl PartialEq<&'a mut [B; 33]>\n+//~^ ERROR arrays only have std trait implementations for lengths 0..=32\n+where\n+    A: PartialEq<B>,\n+{\n+    VecDeque::<A>::new()\n+}\n+\n+fn main() {}"}, {"sha": "5c37468130c64bca9af6ef06f4b46cf05021f302", "filename": "src/test/ui/const-generics/array-impls/alloc-traits-no-impls-length-33.stderr", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/bfdfa85e73186ef96f082980113f7ace8561efd2/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-traits-no-impls-length-33.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bfdfa85e73186ef96f082980113f7ace8561efd2/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-traits-no-impls-length-33.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Falloc-traits-no-impls-length-33.stderr?ref=bfdfa85e73186ef96f082980113f7ace8561efd2", "patch": "@@ -0,0 +1,48 @@\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/alloc-traits-no-impls-length-33.rs:1:43\n+   |\n+LL | pub fn no_vec_partial_eq_array<A, B>() -> impl PartialEq<[B; 33]>\n+   |                                           ^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[B; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::cmp::PartialEq<[B; 33]>` for `std::vec::Vec<A>`\n+   = note: the return type of a function must have a statically known size\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/alloc-traits-no-impls-length-33.rs:9:51\n+   |\n+LL | pub fn no_vec_partial_eq_ref_array<'a, A, B>() -> impl PartialEq<&'a [B; 33]>\n+   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[B; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::cmp::PartialEq<&'a [B; 33]>` for `std::vec::Vec<A>`\n+   = note: the return type of a function must have a statically known size\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/alloc-traits-no-impls-length-33.rs:19:48\n+   |\n+LL | pub fn no_vecdeque_partial_eq_array<A, B>() -> impl PartialEq<[B; 33]>\n+   |                                                ^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[B; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::cmp::PartialEq<[B; 33]>` for `std::collections::VecDeque<A>`\n+   = note: the return type of a function must have a statically known size\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/alloc-traits-no-impls-length-33.rs:27:56\n+   |\n+LL | pub fn no_vecdeque_partial_eq_ref_array<'a, A, B>() -> impl PartialEq<&'a [B; 33]>\n+   |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[B; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::cmp::PartialEq<&'a [B; 33]>` for `std::collections::VecDeque<A>`\n+   = note: the return type of a function must have a statically known size\n+\n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/alloc-traits-no-impls-length-33.rs:35:60\n+   |\n+LL | pub fn no_vecdeque_partial_eq_ref_mut_array<'a, A, B>() -> impl PartialEq<&'a mut [B; 33]>\n+   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[B; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::cmp::PartialEq<&'a mut [B; 33]>` for `std::collections::VecDeque<A>`\n+   = note: the return type of a function must have a statically known size\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}