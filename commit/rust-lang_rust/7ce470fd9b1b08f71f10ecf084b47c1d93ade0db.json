{"sha": "7ce470fd9b1b08f71f10ecf084b47c1d93ade0db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZTQ3MGZkOWIxYjA4ZjcxZjEwZWNmMDg0YjQ3YzFkOTNhZGUwZGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-13T03:18:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-13T03:18:10Z"}, "message": "Auto merge of #84082 - andjo403:stabilize_nonzero_leading_trailing_zeros, r=m-ou-se\n\nStabilize nonzero_leading_trailing_zeros\n\nStabilizing nonzero_leading_trailing_zeros and due to this also stabilizing the intrinsic cttz_nonzero\n\nFCP finished here: https://github.com/rust-lang/rust/issues/79143#issuecomment-817216153\n`@rustbot` modify labels: +T-libs\n\nCloses #79143", "tree": {"sha": "49686d1d412e03706713781a1a7de8d600e5df70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49686d1d412e03706713781a1a7de8d600e5df70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db", "html_url": "https://github.com/rust-lang/rust/commit/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4d7ebf142d4dfc01f6435db1eb15eb337013aaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4d7ebf142d4dfc01f6435db1eb15eb337013aaf", "html_url": "https://github.com/rust-lang/rust/commit/d4d7ebf142d4dfc01f6435db1eb15eb337013aaf"}, {"sha": "12249acdc8373efdcb9836ca00a714de1e5d5e65", "url": "https://api.github.com/repos/rust-lang/rust/commits/12249acdc8373efdcb9836ca00a714de1e5d5e65", "html_url": "https://github.com/rust-lang/rust/commit/12249acdc8373efdcb9836ca00a714de1e5d5e65"}], "stats": {"total": 47, "additions": 37, "deletions": 10}, "files": [{"sha": "1ba0b23ae5be3c0d1bb03342bed35084bfcd8235", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=7ce470fd9b1b08f71f10ecf084b47c1d93ade0db", "patch": "@@ -1543,7 +1543,7 @@ extern \"rust-intrinsic\" {\n     /// let num_trailing = unsafe { cttz_nonzero(x) };\n     /// assert_eq!(num_trailing, 3);\n     /// ```\n-    #[rustc_const_unstable(feature = \"const_cttz\", issue = \"none\")]\n+    #[rustc_const_stable(feature = \"const_cttz\", since = \"1.53.0\")]\n     pub fn cttz_nonzero<T: Copy>(x: T) -> T;\n \n     /// Reverses the bytes in an integer type `T`."}, {"sha": "d0c52a445919011f0de0f42eff678082a1a7f38c", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=7ce470fd9b1b08f71f10ecf084b47c1d93ade0db", "patch": "@@ -79,7 +79,6 @@\n #![feature(const_int_unchecked_arith)]\n #![feature(const_mut_refs)]\n #![feature(const_refs_to_cell)]\n-#![feature(const_cttz)]\n #![feature(const_panic)]\n #![feature(const_pin)]\n #![feature(const_fn)]"}, {"sha": "81262a2f91839a65208ee73e05c584fbcdfd8313", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=7ce470fd9b1b08f71f10ecf084b47c1d93ade0db", "patch": "@@ -191,13 +191,12 @@ macro_rules! nonzero_leading_trailing_zeros {\n                 /// Basic usage:\n                 ///\n                 /// ```\n-                /// #![feature(nonzero_leading_trailing_zeros)]\n                 #[doc = concat!(\"let n = std::num::\", stringify!($Ty), \"::new(\", stringify!($LeadingTestExpr), \").unwrap();\")]\n                 ///\n                 /// assert_eq!(n.leading_zeros(), 0);\n                 /// ```\n-                #[unstable(feature = \"nonzero_leading_trailing_zeros\", issue = \"79143\")]\n-                #[rustc_const_unstable(feature = \"nonzero_leading_trailing_zeros\", issue = \"79143\")]\n+                #[stable(feature = \"nonzero_leading_trailing_zeros\", since = \"1.53.0\")]\n+                #[rustc_const_stable(feature = \"nonzero_leading_trailing_zeros\", since = \"1.53.0\")]\n                 #[inline]\n                 pub const fn leading_zeros(self) -> u32 {\n                     // SAFETY: since `self` can not be zero it is safe to call ctlz_nonzero\n@@ -214,13 +213,12 @@ macro_rules! nonzero_leading_trailing_zeros {\n                 /// Basic usage:\n                 ///\n                 /// ```\n-                /// #![feature(nonzero_leading_trailing_zeros)]\n                 #[doc = concat!(\"let n = std::num::\", stringify!($Ty), \"::new(0b0101000).unwrap();\")]\n                 ///\n                 /// assert_eq!(n.trailing_zeros(), 3);\n                 /// ```\n-                #[unstable(feature = \"nonzero_leading_trailing_zeros\", issue = \"79143\")]\n-                #[rustc_const_unstable(feature = \"nonzero_leading_trailing_zeros\", issue = \"79143\")]\n+                #[stable(feature = \"nonzero_leading_trailing_zeros\", since = \"1.53.0\")]\n+                #[rustc_const_stable(feature = \"nonzero_leading_trailing_zeros\", since = \"1.53.0\")]\n                 #[inline]\n                 pub const fn trailing_zeros(self) -> u32 {\n                     // SAFETY: since `self` can not be zero it is safe to call cttz_nonzero"}, {"sha": "6053cbdbbf4351f777594d3360ef75357b381e74", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=7ce470fd9b1b08f71f10ecf084b47c1d93ade0db", "patch": "@@ -67,7 +67,6 @@\n #![feature(ptr_metadata)]\n #![feature(once_cell)]\n #![feature(unsized_tuple_coercion)]\n-#![feature(nonzero_leading_trailing_zeros)]\n #![feature(const_option)]\n #![feature(integer_atomics)]\n #![feature(slice_group_by)]"}, {"sha": "2ccc5d27bbb781f5fc5138dc79a25e76c60bcaeb", "filename": "src/test/ui/consts/const-int-unchecked.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs?ref=7ce470fd9b1b08f71f10ecf084b47c1d93ade0db", "patch": "@@ -186,4 +186,13 @@ const _: i32 = unsafe { std::intrinsics::unchecked_rem(i32::MIN, -1) };\n //~^ ERROR any use of this value will cause an error\n //~| WARN this was previously accepted by the compiler but is being phased out\n \n+// capture fault with zero value\n+\n+const _: u32 = unsafe { std::intrinsics::ctlz_nonzero(0) };\n+//~^ ERROR any use of this value will cause an error\n+//~| WARN this was previously accepted by the compiler but is being phased out\n+const _: u32 = unsafe { std::intrinsics::cttz_nonzero(0) };\n+//~^ ERROR any use of this value will cause an error\n+//~| WARN this was previously accepted by the compiler but is being phased out\n+\n fn main() {}"}, {"sha": "999b26543e2d51041141ecb42ad24186ba38c703", "filename": "src/test/ui/consts/const-int-unchecked.stderr", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7ce470fd9b1b08f71f10ecf084b47c1d93ade0db/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr?ref=7ce470fd9b1b08f71f10ecf084b47c1d93ade0db", "patch": "@@ -516,5 +516,27 @@ LL | const _: i32 = unsafe { std::intrinsics::unchecked_rem(i32::MIN, -1) };\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n \n-error: aborting due to 47 previous errors\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:191:25\n+   |\n+LL | const _: u32 = unsafe { std::intrinsics::ctlz_nonzero(0) };\n+   | ------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   |                         |\n+   |                         `ctlz_nonzero` called on 0\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:194:25\n+   |\n+LL | const _: u32 = unsafe { std::intrinsics::cttz_nonzero(0) };\n+   | ------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   |                         |\n+   |                         `cttz_nonzero` called on 0\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: aborting due to 49 previous errors\n "}]}