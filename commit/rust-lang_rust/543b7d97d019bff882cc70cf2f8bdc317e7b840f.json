{"sha": "543b7d97d019bff882cc70cf2f8bdc317e7b840f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0M2I3ZDk3ZDAxOWJmZjg4MmNjNzBjZjJmOGJkYzMxN2U3Yjg0MGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-11T06:15:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-11T06:15:59Z"}, "message": "Auto merge of #65912 - estebank:variants-orig, r=petrochenkov\n\nPoint at the span for the definition of crate foreign ADTs\n\nFollow up to #65421. Partially addresses #65386. Blocked on #53081.", "tree": {"sha": "2122031377f7caeba3d84b2d4ee271c9fda208ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2122031377f7caeba3d84b2d4ee271c9fda208ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/543b7d97d019bff882cc70cf2f8bdc317e7b840f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/543b7d97d019bff882cc70cf2f8bdc317e7b840f", "html_url": "https://github.com/rust-lang/rust/commit/543b7d97d019bff882cc70cf2f8bdc317e7b840f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/543b7d97d019bff882cc70cf2f8bdc317e7b840f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88d1109600660d1acb471e85631e1ea349843fd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/88d1109600660d1acb471e85631e1ea349843fd9", "html_url": "https://github.com/rust-lang/rust/commit/88d1109600660d1acb471e85631e1ea349843fd9"}, {"sha": "38a3506c451d097ed19263b3734421b3e5ee5bfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/38a3506c451d097ed19263b3734421b3e5ee5bfa", "html_url": "https://github.com/rust-lang/rust/commit/38a3506c451d097ed19263b3734421b3e5ee5bfa"}], "stats": {"total": 369, "additions": 310, "deletions": 59}, "files": [{"sha": "fb7e5541e266eed383eb02a6661b14689d467f40", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -478,6 +478,10 @@ impl CStore {\n         self.get_crate_data(cnum).source.clone()\n     }\n \n+    pub fn get_span_untracked(&self, def_id: DefId, sess: &Session) -> Span {\n+        self.get_crate_data(def_id.krate).get_span(def_id.index, sess)\n+    }\n+\n     pub fn item_generics_num_lifetimes(&self, def_id: DefId, sess: &Session) -> usize {\n         self.get_crate_data(def_id.krate).get_generics(def_id.index, sess).own_counts().lifetimes\n     }"}, {"sha": "974206797549906f2e40c5f690353338e037b385", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -9,7 +9,7 @@ use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_feature::BUILTIN_ATTRIBUTES;\n use rustc_hir::def::Namespace::{self, *};\n use rustc_hir::def::{self, DefKind, NonMacroAttrKind};\n-use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX};\n+use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::{kw, Symbol};\n@@ -780,8 +780,14 @@ impl<'a> Resolver<'a> {\n                 suggestion.candidate.to_string(),\n                 Applicability::MaybeIncorrect,\n             );\n-            let def_span =\n-                suggestion.res.opt_def_id().and_then(|def_id| self.definitions.opt_span(def_id));\n+            let def_span = suggestion.res.opt_def_id().and_then(|def_id| match def_id.krate {\n+                LOCAL_CRATE => self.definitions.opt_span(def_id),\n+                _ => Some(\n+                    self.session\n+                        .source_map()\n+                        .def_span(self.cstore().get_span_untracked(def_id, self.session)),\n+                ),\n+            });\n             if let Some(span) = def_span {\n                 err.span_label(\n                     span,"}, {"sha": "d1af5b458cc0ada803bc3cd1659c52c5511bb6f5", "filename": "src/test/ui/derives/deriving-meta-unknown-trait.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fderives%2Fderiving-meta-unknown-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fderives%2Fderiving-meta-unknown-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderiving-meta-unknown-trait.rs?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,3 +1,7 @@\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n #[derive(Eqr)]\n //~^ ERROR cannot find derive macro `Eqr` in this scope\n //~| ERROR cannot find derive macro `Eqr` in this scope"}, {"sha": "ead131323246ad01541afc7bd621a2b28f7b3caa", "filename": "src/test/ui/derives/deriving-meta-unknown-trait.stderr", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fderives%2Fderiving-meta-unknown-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fderives%2Fderiving-meta-unknown-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderiving-meta-unknown-trait.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,14 +1,24 @@\n error: cannot find derive macro `Eqr` in this scope\n-  --> $DIR/deriving-meta-unknown-trait.rs:1:10\n+  --> $DIR/deriving-meta-unknown-trait.rs:5:10\n    |\n LL | #[derive(Eqr)]\n    |          ^^^ help: a derive macro with a similar name exists: `Eq`\n+   | \n+  ::: $SRC_DIR/libcore/cmp.rs:LL:COL\n+   |\n+LL | pub macro Eq($item:item) {\n+   | ------------------------ similarly named derive macro `Eq` defined here\n \n error: cannot find derive macro `Eqr` in this scope\n-  --> $DIR/deriving-meta-unknown-trait.rs:1:10\n+  --> $DIR/deriving-meta-unknown-trait.rs:5:10\n    |\n LL | #[derive(Eqr)]\n    |          ^^^ help: a derive macro with a similar name exists: `Eq`\n+   | \n+  ::: $SRC_DIR/libcore/cmp.rs:LL:COL\n+   |\n+LL | pub macro Eq($item:item) {\n+   | ------------------------ similarly named derive macro `Eq` defined here\n \n error: aborting due to 2 previous errors\n "}, {"sha": "9da3a5f5bdb3d053297b450bddbe1277d4829544", "filename": "src/test/ui/empty/empty-struct-braces-expr.stderr", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -9,6 +9,11 @@ LL |     let e1 = Empty1;\n    |              |\n    |              did you mean `Empty1 { /* fields */ }`?\n    |              help: a unit struct with a similar name exists: `XEmpty2`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n+   |\n+LL | pub struct XEmpty2;\n+   | ------------------- similarly named unit struct `XEmpty2` defined here\n \n error[E0423]: expected function, tuple struct or tuple variant, found struct `Empty1`\n   --> $DIR/empty-struct-braces-expr.rs:16:14\n@@ -21,6 +26,11 @@ LL |     let e1 = Empty1();\n    |              |\n    |              did you mean `Empty1 { /* fields */ }`?\n    |              help: a unit struct with a similar name exists: `XEmpty2`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n+   |\n+LL | pub struct XEmpty2;\n+   | ------------------- similarly named unit struct `XEmpty2` defined here\n \n error[E0423]: expected value, found struct variant `E::Empty3`\n   --> $DIR/empty-struct-braces-expr.rs:18:14\n@@ -48,6 +58,11 @@ LL |     let xe1 = XEmpty1;\n    |               |\n    |               did you mean `XEmpty1 { /* fields */ }`?\n    |               help: a unit struct with a similar name exists: `XEmpty2`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n+   |\n+LL | pub struct XEmpty2;\n+   | ------------------- similarly named unit struct `XEmpty2` defined here\n \n error[E0423]: expected function, tuple struct or tuple variant, found struct `XEmpty1`\n   --> $DIR/empty-struct-braces-expr.rs:23:15\n@@ -57,6 +72,11 @@ LL |     let xe1 = XEmpty1();\n    |               |\n    |               did you mean `XEmpty1 { /* fields */ }`?\n    |               help: a unit struct with a similar name exists: `XEmpty2`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n+   |\n+LL | pub struct XEmpty2;\n+   | ------------------- similarly named unit struct `XEmpty2` defined here\n \n error[E0599]: no variant or associated item named `Empty3` found for enum `empty_struct::XE` in the current scope\n   --> $DIR/empty-struct-braces-expr.rs:25:19"}, {"sha": "0ff21c91b78fd25980a09bb4490cf02491e9c1fd", "filename": "src/test/ui/empty/empty-struct-braces-pat-1.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-1.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -15,6 +15,11 @@ LL |         XE::XEmpty3 => ()\n    |         |   |\n    |         |   help: a unit variant with a similar name exists: `XEmpty4`\n    |         did you mean `XE::XEmpty3 { /* fields */ }`?\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:7:5\n+   |\n+LL |     XEmpty4,\n+   |     ------- similarly named unit variant `XEmpty4` defined here\n \n error: aborting due to 2 previous errors\n "}, {"sha": "80c29db8d9b77a8d67fa6e741a50f234cda1a6e0", "filename": "src/test/ui/empty/empty-struct-braces-pat-2.stderr", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-2.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -9,6 +9,11 @@ LL |         Empty1() => ()\n    |         |\n    |         did you mean `Empty1 { /* fields */ }`?\n    |         help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found struct `XEmpty1`\n   --> $DIR/empty-struct-braces-pat-2.rs:18:9\n@@ -18,6 +23,11 @@ LL |         XEmpty1() => ()\n    |         |\n    |         did you mean `XEmpty1 { /* fields */ }`?\n    |         help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found struct `Empty1`\n   --> $DIR/empty-struct-braces-pat-2.rs:21:9\n@@ -30,6 +40,11 @@ LL |         Empty1(..) => ()\n    |         |\n    |         did you mean `Empty1 { /* fields */ }`?\n    |         help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found struct `XEmpty1`\n   --> $DIR/empty-struct-braces-pat-2.rs:24:9\n@@ -39,6 +54,11 @@ LL |         XEmpty1(..) => ()\n    |         |\n    |         did you mean `XEmpty1 { /* fields */ }`?\n    |         help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error: aborting due to 4 previous errors\n "}, {"sha": "05439b39ea39dfe80e321b4dc2dead35cc412c5a", "filename": "src/test/ui/empty/empty-struct-braces-pat-3.stderr", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-3.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -15,6 +15,11 @@ LL |         XE::XEmpty3() => ()\n    |         |   |\n    |         |   help: a tuple variant with a similar name exists: `XEmpty5`\n    |         did you mean `XE::XEmpty3 { /* fields */ }`?\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:8:5\n+   |\n+LL |     XEmpty5(),\n+   |     --------- similarly named tuple variant `XEmpty5` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found struct variant `E::Empty3`\n   --> $DIR/empty-struct-braces-pat-3.rs:25:9\n@@ -33,6 +38,11 @@ LL |         XE::XEmpty3(..) => ()\n    |         |   |\n    |         |   help: a tuple variant with a similar name exists: `XEmpty5`\n    |         did you mean `XE::XEmpty3 { /* fields */ }`?\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:8:5\n+   |\n+LL |     XEmpty5(),\n+   |     --------- similarly named tuple variant `XEmpty5` defined here\n \n error: aborting due to 4 previous errors\n "}, {"sha": "9388ed2665710d7896ce47cff1e9142284f523c7", "filename": "src/test/ui/empty/empty-struct-tuple-pat.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -33,6 +33,11 @@ LL |         XE::XEmpty5 => (),\n    |         |   |\n    |         |   help: a unit variant with a similar name exists: `XEmpty4`\n    |         did you mean `XE::XEmpty5( /* fields */ )`?\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:7:5\n+   |\n+LL |     XEmpty4,\n+   |     ------- similarly named unit variant `XEmpty4` defined here\n \n error: aborting due to 4 previous errors\n "}, {"sha": "8ee14a3d01d899ccde72f5d933f0d85b55f5c15b", "filename": "src/test/ui/empty/empty-struct-unit-pat.stderr", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-unit-pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fempty%2Fempty-struct-unit-pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-unit-pat.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -3,24 +3,44 @@ error[E0532]: expected tuple struct or tuple variant, found unit struct `Empty2`\n    |\n LL |         Empty2() => ()\n    |         ^^^^^^ help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `XEmpty2`\n   --> $DIR/empty-struct-unit-pat.rs:24:9\n    |\n LL |         XEmpty2() => ()\n    |         ^^^^^^^ help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `Empty2`\n   --> $DIR/empty-struct-unit-pat.rs:28:9\n    |\n LL |         Empty2(..) => ()\n    |         ^^^^^^ help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found unit struct `XEmpty2`\n   --> $DIR/empty-struct-unit-pat.rs:32:9\n    |\n LL |         XEmpty2(..) => ()\n    |         ^^^^^^^ help: a tuple struct with a similar name exists: `XEmpty6`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n+   |\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found unit variant `E::Empty4`\n   --> $DIR/empty-struct-unit-pat.rs:37:9\n@@ -35,6 +55,11 @@ LL |         XE::XEmpty4() => (),\n    |         ^^^^-------\n    |             |\n    |             help: a tuple variant with a similar name exists: `XEmpty5`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:8:5\n+   |\n+LL |     XEmpty5(),\n+   |     --------- similarly named tuple variant `XEmpty5` defined here\n \n error[E0532]: expected tuple struct or tuple variant, found unit variant `E::Empty4`\n   --> $DIR/empty-struct-unit-pat.rs:46:9\n@@ -49,6 +74,11 @@ LL |         XE::XEmpty4(..) => (),\n    |         ^^^^-------\n    |             |\n    |             help: a tuple variant with a similar name exists: `XEmpty5`\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:8:5\n+   |\n+LL |     XEmpty5(),\n+   |     --------- similarly named tuple variant `XEmpty5` defined here\n \n error: aborting due to 8 previous errors\n "}, {"sha": "c93a03cdec66a00de224b8be617079397650f384", "filename": "src/test/ui/issues/issue-17546.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fissues%2Fissue-17546.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fissues%2Fissue-17546.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17546.rs?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,3 +1,7 @@\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n use foo::MyEnum::Result;\n use foo::NoResult; // Through a re-export\n "}, {"sha": "2d532cdb9d8a9f53e886f4c2786bfe4088799671", "filename": "src/test/ui/issues/issue-17546.stderr", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,8 +1,13 @@\n error[E0573]: expected type, found variant `NoResult`\n-  --> $DIR/issue-17546.rs:12:17\n+  --> $DIR/issue-17546.rs:16:17\n    |\n LL |     fn new() -> NoResult<MyEnum, String> {\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^\n+   | \n+  ::: $SRC_DIR/libcore/result.rs:LL:COL\n+   |\n+LL | pub enum Result<T, E> {\n+   | --------------------- similarly named enum `Result` defined here\n    |\n help: try using the variant's enum\n    |\n@@ -14,7 +19,7 @@ LL |     fn new() -> Result<MyEnum, String> {\n    |                 ^^^^^^\n \n error[E0573]: expected type, found variant `Result`\n-  --> $DIR/issue-17546.rs:22:17\n+  --> $DIR/issue-17546.rs:26:17\n    |\n LL |     fn new() -> Result<foo::MyEnum, String> {\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a type\n@@ -32,7 +37,7 @@ LL |     use std::result::Result;\n      and 1 other candidate\n \n error[E0573]: expected type, found variant `Result`\n-  --> $DIR/issue-17546.rs:28:13\n+  --> $DIR/issue-17546.rs:32:13\n    |\n LL | fn new() -> Result<foo::MyEnum, String> {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a type\n@@ -50,10 +55,15 @@ LL | use std::result::Result;\n      and 1 other candidate\n \n error[E0573]: expected type, found variant `NoResult`\n-  --> $DIR/issue-17546.rs:33:15\n+  --> $DIR/issue-17546.rs:37:15\n    |\n LL | fn newer() -> NoResult<foo::MyEnum, String> {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | \n+  ::: $SRC_DIR/libcore/result.rs:LL:COL\n+   |\n+LL | pub enum Result<T, E> {\n+   | --------------------- similarly named enum `Result` defined here\n    |\n help: try using the variant's enum\n    |"}, {"sha": "1571cd2bbf68356cea14be42d15fb54c4c729289", "filename": "src/test/ui/issues/issue-7607-1.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fissues%2Fissue-7607-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fissues%2Fissue-7607-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7607-1.rs?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,3 +1,7 @@\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n struct Foo {\n     x: isize\n }"}, {"sha": "94f489e209e32e87560364094deaf2a1067fa877", "filename": "src/test/ui/issues/issue-7607-1.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fissues%2Fissue-7607-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fissues%2Fissue-7607-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7607-1.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,8 +1,13 @@\n error[E0412]: cannot find type `Fo` in this scope\n-  --> $DIR/issue-7607-1.rs:5:6\n+  --> $DIR/issue-7607-1.rs:9:6\n    |\n LL | impl Fo {\n    |      ^^ help: a trait with a similar name exists: `Fn`\n+   | \n+  ::: $SRC_DIR/libcore/ops/function.rs:LL:COL\n+   |\n+LL | pub trait Fn<Args>: FnMut<Args> {\n+   | ------------------------------- similarly named trait `Fn` defined here\n \n error: aborting due to previous error\n "}, {"sha": "b2892f3b6c239fc10815bcb18dbeff9187c03dfe", "filename": "src/test/ui/macros/macro-name-typo.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.rs?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,3 +1,7 @@\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n fn main() {\n     printlx!(\"oh noes!\"); //~ ERROR cannot find\n }"}, {"sha": "00afbde8932fca2426c64030396dc52b9f037a1a", "filename": "src/test/ui/macros/macro-name-typo.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-name-typo.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,8 +1,13 @@\n error: cannot find macro `printlx` in this scope\n-  --> $DIR/macro-name-typo.rs:2:5\n+  --> $DIR/macro-name-typo.rs:6:5\n    |\n LL |     printlx!(\"oh noes!\");\n    |     ^^^^^^^ help: a macro with a similar name exists: `println`\n+   | \n+  ::: $SRC_DIR/libstd/macros.rs:LL:COL\n+   |\n+LL | macro_rules! println {\n+   | -------------------- similarly named macro `println` defined here\n \n error: aborting due to previous error\n "}, {"sha": "3c3948ca3c36129acb7612ed5db8b3dbd3f46108", "filename": "src/test/ui/macros/macro-path-prelude-fail-3.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.rs?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,3 +1,7 @@\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n fn main() {\n     inline!(); //~ ERROR cannot find macro `inline` in this scope\n }"}, {"sha": "536459067437dc58d1a8e9260fe14face3755040", "filename": "src/test/ui/macros/macro-path-prelude-fail-3.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,8 +1,13 @@\n error: cannot find macro `inline` in this scope\n-  --> $DIR/macro-path-prelude-fail-3.rs:2:5\n+  --> $DIR/macro-path-prelude-fail-3.rs:6:5\n    |\n LL |     inline!();\n    |     ^^^^^^ help: a macro with a similar name exists: `line`\n+   | \n+  ::: $SRC_DIR/libcore/macros/mod.rs:LL:COL\n+   |\n+LL |     macro_rules! line {\n+   |     ----------------- similarly named macro `line` defined here\n \n error: aborting due to previous error\n "}, {"sha": "74fb519cc82ffe6be0ce4a10c582bd89490d9caa", "filename": "src/test/ui/macros/macro-use-wrong-name.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-wrong-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-wrong-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-use-wrong-name.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -3,6 +3,11 @@ error: cannot find macro `macro_two` in this scope\n    |\n LL |     macro_two!();\n    |     ^^^^^^^^^ help: a macro with a similar name exists: `macro_one`\n+   | \n+  ::: $DIR/auxiliary/two_macros.rs:2:1\n+   |\n+LL | macro_rules! macro_one { () => (\"one\") }\n+   | ---------------------- similarly named macro `macro_one` defined here\n \n error: aborting due to previous error\n "}, {"sha": "13d727de441cb8cef49e2d5546725c2a196269c8", "filename": "src/test/ui/namespace/namespace-mix.stderr", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -24,6 +24,11 @@ error[E0423]: expected value, found type alias `xm1::S`\n    |\n LL |     check(xm1::S);\n    |           ^^^^^^\n+   | \n+  ::: $DIR/auxiliary/namespace-mix.rs:3:5\n+   |\n+LL |     pub struct TS();\n+   |     ---------------- similarly named tuple struct `TS` defined here\n    |\n    = note: can't use a type alias as a constructor\n help: a tuple struct with a similar name exists\n@@ -64,6 +69,11 @@ error[E0423]: expected value, found struct variant `xm7::V`\n    |\n LL |     check(xm7::V);\n    |           ^^^^^^ did you mean `xm7::V { /* fields */ }`?\n+   | \n+  ::: $DIR/auxiliary/namespace-mix.rs:7:9\n+   |\n+LL |         TV(),\n+   |         ---- similarly named tuple variant `TV` defined here\n    |\n help: a tuple variant with a similar name exists\n    |"}, {"sha": "95a3f9695127029d29b889fb9388ad131c64d49e", "filename": "src/test/ui/proc-macro/parent-source-spans.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.rs?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,3 +1,7 @@\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // aux-build:parent-source-spans.rs\n #![feature(decl_macro, proc_macro_hygiene)]\n "}, {"sha": "9f0fefcfe6c03e68880ab9b759bc32f6dfb7d05a", "filename": "src/test/ui/proc-macro/parent-source-spans.stderr", "status": "modified", "additions": 36, "deletions": 21, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,5 +1,5 @@\n error: first final: \"hello\"\n-  --> $DIR/parent-source-spans.rs:15:12\n+  --> $DIR/parent-source-spans.rs:19:12\n    |\n LL |     three!($a, $b);\n    |            ^^\n@@ -8,7 +8,7 @@ LL |     one!(\"hello\", \"world\");\n    |     ----------------------- in this macro invocation\n \n error: second final: \"world\"\n-  --> $DIR/parent-source-spans.rs:15:16\n+  --> $DIR/parent-source-spans.rs:19:16\n    |\n LL |     three!($a, $b);\n    |                ^^\n@@ -17,7 +17,7 @@ LL |     one!(\"hello\", \"world\");\n    |     ----------------------- in this macro invocation\n \n error: first parent: \"hello\"\n-  --> $DIR/parent-source-spans.rs:9:5\n+  --> $DIR/parent-source-spans.rs:13:5\n    |\n LL |     two!($a, $b);\n    |     ^^^^^^^^^^^^^\n@@ -26,7 +26,7 @@ LL |     one!(\"hello\", \"world\");\n    |     ----------------------- in this macro invocation\n \n error: second parent: \"world\"\n-  --> $DIR/parent-source-spans.rs:9:5\n+  --> $DIR/parent-source-spans.rs:13:5\n    |\n LL |     two!($a, $b);\n    |     ^^^^^^^^^^^^^\n@@ -35,31 +35,31 @@ LL |     one!(\"hello\", \"world\");\n    |     ----------------------- in this macro invocation\n \n error: first grandparent: \"hello\"\n-  --> $DIR/parent-source-spans.rs:35:5\n+  --> $DIR/parent-source-spans.rs:39:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: second grandparent: \"world\"\n-  --> $DIR/parent-source-spans.rs:35:5\n+  --> $DIR/parent-source-spans.rs:39:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: first source: \"hello\"\n-  --> $DIR/parent-source-spans.rs:35:5\n+  --> $DIR/parent-source-spans.rs:39:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: second source: \"world\"\n-  --> $DIR/parent-source-spans.rs:35:5\n+  --> $DIR/parent-source-spans.rs:39:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: first final: \"yay\"\n-  --> $DIR/parent-source-spans.rs:15:12\n+  --> $DIR/parent-source-spans.rs:19:12\n    |\n LL |     three!($a, $b);\n    |            ^^\n@@ -68,7 +68,7 @@ LL |     two!(\"yay\", \"rust\");\n    |     -------------------- in this macro invocation\n \n error: second final: \"rust\"\n-  --> $DIR/parent-source-spans.rs:15:16\n+  --> $DIR/parent-source-spans.rs:19:16\n    |\n LL |     three!($a, $b);\n    |                ^^\n@@ -77,79 +77,94 @@ LL |     two!(\"yay\", \"rust\");\n    |     -------------------- in this macro invocation\n \n error: first parent: \"yay\"\n-  --> $DIR/parent-source-spans.rs:41:5\n+  --> $DIR/parent-source-spans.rs:45:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: second parent: \"rust\"\n-  --> $DIR/parent-source-spans.rs:41:5\n+  --> $DIR/parent-source-spans.rs:45:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: first source: \"yay\"\n-  --> $DIR/parent-source-spans.rs:41:5\n+  --> $DIR/parent-source-spans.rs:45:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: second source: \"rust\"\n-  --> $DIR/parent-source-spans.rs:41:5\n+  --> $DIR/parent-source-spans.rs:45:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: first final: \"hip\"\n-  --> $DIR/parent-source-spans.rs:47:12\n+  --> $DIR/parent-source-spans.rs:51:12\n    |\n LL |     three!(\"hip\", \"hop\");\n    |            ^^^^^\n \n error: second final: \"hop\"\n-  --> $DIR/parent-source-spans.rs:47:19\n+  --> $DIR/parent-source-spans.rs:51:19\n    |\n LL |     three!(\"hip\", \"hop\");\n    |                   ^^^^^\n \n error: first source: \"hip\"\n-  --> $DIR/parent-source-spans.rs:47:12\n+  --> $DIR/parent-source-spans.rs:51:12\n    |\n LL |     three!(\"hip\", \"hop\");\n    |            ^^^^^\n \n error: second source: \"hop\"\n-  --> $DIR/parent-source-spans.rs:47:19\n+  --> $DIR/parent-source-spans.rs:51:19\n    |\n LL |     three!(\"hip\", \"hop\");\n    |                   ^^^^^\n \n error[E0425]: cannot find value `ok` in this scope\n-  --> $DIR/parent-source-spans.rs:28:5\n+  --> $DIR/parent-source-spans.rs:32:5\n    |\n LL |     parent_source_spans!($($tokens)*);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a tuple variant with a similar name exists: `Ok`\n ...\n LL |     one!(\"hello\", \"world\");\n    |     ----------------------- in this macro invocation\n+   | \n+  ::: $SRC_DIR/libcore/result.rs:LL:COL\n+   |\n+LL |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n+   |     --------------------------------------------------- similarly named tuple variant `Ok` defined here\n \n error[E0425]: cannot find value `ok` in this scope\n-  --> $DIR/parent-source-spans.rs:28:5\n+  --> $DIR/parent-source-spans.rs:32:5\n    |\n LL |     parent_source_spans!($($tokens)*);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a tuple variant with a similar name exists: `Ok`\n ...\n LL |     two!(\"yay\", \"rust\");\n    |     -------------------- in this macro invocation\n+   | \n+  ::: $SRC_DIR/libcore/result.rs:LL:COL\n+   |\n+LL |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n+   |     --------------------------------------------------- similarly named tuple variant `Ok` defined here\n \n error[E0425]: cannot find value `ok` in this scope\n-  --> $DIR/parent-source-spans.rs:28:5\n+  --> $DIR/parent-source-spans.rs:32:5\n    |\n LL |     parent_source_spans!($($tokens)*);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a tuple variant with a similar name exists: `Ok`\n ...\n LL |     three!(\"hip\", \"hop\");\n    |     --------------------- in this macro invocation\n+   | \n+  ::: $SRC_DIR/libcore/result.rs:LL:COL\n+   |\n+LL |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n+   |     --------------------------------------------------- similarly named tuple variant `Ok` defined here\n \n error: aborting due to 21 previous errors\n "}, {"sha": "8ff36ff0a26e21b5380cd02aabcd785a084a43e7", "filename": "src/test/ui/proc-macro/resolve-error.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.rs?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,3 +1,7 @@\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // aux-build:derive-foo.rs\n // aux-build:derive-clona.rs\n // aux-build:test-macros.rs"}, {"sha": "73a6ab1cfb91055edaae2c166cc032270ed3786b", "filename": "src/test/ui/proc-macro/resolve-error.stderr", "status": "modified", "additions": 54, "deletions": 14, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,17 +1,22 @@\n error: cannot find macro `bang_proc_macrp` in this scope\n-  --> $DIR/resolve-error.rs:60:5\n+  --> $DIR/resolve-error.rs:64:5\n    |\n LL |     bang_proc_macrp!();\n    |     ^^^^^^^^^^^^^^^ help: a macro with a similar name exists: `bang_proc_macro`\n+   | \n+  ::: $DIR/auxiliary/test-macros.rs:15:1\n+   |\n+LL | pub fn empty(_: TokenStream) -> TokenStream {\n+   | ------------------------------------------- similarly named macro `bang_proc_macro` defined here\n \n error: cannot find macro `Dlona` in this scope\n-  --> $DIR/resolve-error.rs:57:5\n+  --> $DIR/resolve-error.rs:61:5\n    |\n LL |     Dlona!();\n    |     ^^^^^\n \n error: cannot find macro `attr_proc_macra` in this scope\n-  --> $DIR/resolve-error.rs:54:5\n+  --> $DIR/resolve-error.rs:58:5\n    |\n LL | / macro_rules! attr_proc_mac {\n LL | |     () => {}\n@@ -22,7 +27,7 @@ LL |       attr_proc_macra!();\n    |       ^^^^^^^^^^^^^^^ help: a macro with a similar name exists: `attr_proc_mac`\n \n error: cannot find macro `FooWithLongNama` in this scope\n-  --> $DIR/resolve-error.rs:51:5\n+  --> $DIR/resolve-error.rs:55:5\n    |\n LL | / macro_rules! FooWithLongNam {\n LL | |     () => {}\n@@ -33,64 +38,99 @@ LL |       FooWithLongNama!();\n    |       ^^^^^^^^^^^^^^^ help: a macro with a similar name exists: `FooWithLongNam`\n \n error: cannot find derive macro `attr_proc_macra` in this scope\n-  --> $DIR/resolve-error.rs:45:10\n+  --> $DIR/resolve-error.rs:49:10\n    |\n LL | #[derive(attr_proc_macra)]\n    |          ^^^^^^^^^^^^^^^\n \n error: cannot find derive macro `attr_proc_macra` in this scope\n-  --> $DIR/resolve-error.rs:45:10\n+  --> $DIR/resolve-error.rs:49:10\n    |\n LL | #[derive(attr_proc_macra)]\n    |          ^^^^^^^^^^^^^^^\n \n error: cannot find derive macro `Dlona` in this scope\n-  --> $DIR/resolve-error.rs:40:10\n+  --> $DIR/resolve-error.rs:44:10\n    |\n LL | #[derive(Dlona)]\n    |          ^^^^^ help: a derive macro with a similar name exists: `Clona`\n+   | \n+  ::: $DIR/auxiliary/derive-clona.rs:11:1\n+   |\n+LL | pub fn derive_clonea(input: TokenStream) -> TokenStream {\n+   | ------------------------------------------------------- similarly named derive macro `Clona` defined here\n \n error: cannot find derive macro `Dlona` in this scope\n-  --> $DIR/resolve-error.rs:40:10\n+  --> $DIR/resolve-error.rs:44:10\n    |\n LL | #[derive(Dlona)]\n    |          ^^^^^ help: a derive macro with a similar name exists: `Clona`\n+   | \n+  ::: $DIR/auxiliary/derive-clona.rs:11:1\n+   |\n+LL | pub fn derive_clonea(input: TokenStream) -> TokenStream {\n+   | ------------------------------------------------------- similarly named derive macro `Clona` defined here\n \n error: cannot find derive macro `Dlone` in this scope\n-  --> $DIR/resolve-error.rs:35:10\n+  --> $DIR/resolve-error.rs:39:10\n    |\n LL | #[derive(Dlone)]\n    |          ^^^^^ help: a derive macro with a similar name exists: `Clone`\n+   | \n+  ::: $SRC_DIR/libcore/clone.rs:LL:COL\n+   |\n+LL | pub macro Clone($item:item) {\n+   | --------------------------- similarly named derive macro `Clone` defined here\n \n error: cannot find derive macro `Dlone` in this scope\n-  --> $DIR/resolve-error.rs:35:10\n+  --> $DIR/resolve-error.rs:39:10\n    |\n LL | #[derive(Dlone)]\n    |          ^^^^^ help: a derive macro with a similar name exists: `Clone`\n+   | \n+  ::: $SRC_DIR/libcore/clone.rs:LL:COL\n+   |\n+LL | pub macro Clone($item:item) {\n+   | --------------------------- similarly named derive macro `Clone` defined here\n \n error: cannot find attribute `FooWithLongNan` in this scope\n-  --> $DIR/resolve-error.rs:32:3\n+  --> $DIR/resolve-error.rs:36:3\n    |\n LL | #[FooWithLongNan]\n    |   ^^^^^^^^^^^^^^\n \n error: cannot find attribute `attr_proc_macra` in this scope\n-  --> $DIR/resolve-error.rs:28:3\n+  --> $DIR/resolve-error.rs:32:3\n    |\n LL | #[attr_proc_macra]\n    |   ^^^^^^^^^^^^^^^ help: an attribute macro with a similar name exists: `attr_proc_macro`\n+   | \n+  ::: $DIR/auxiliary/test-macros.rs:20:1\n+   |\n+LL | pub fn empty_attr(_: TokenStream, _: TokenStream) -> TokenStream {\n+   | ---------------------------------------------------------------- similarly named attribute macro `attr_proc_macro` defined here\n \n error: cannot find derive macro `FooWithLongNan` in this scope\n-  --> $DIR/resolve-error.rs:22:10\n+  --> $DIR/resolve-error.rs:26:10\n    |\n LL | #[derive(FooWithLongNan)]\n    |          ^^^^^^^^^^^^^^ help: a derive macro with a similar name exists: `FooWithLongName`\n+   | \n+  ::: $DIR/auxiliary/derive-foo.rs:11:1\n+   |\n+LL | pub fn derive_foo(input: TokenStream) -> TokenStream {\n+   | ---------------------------------------------------- similarly named derive macro `FooWithLongName` defined here\n \n error: cannot find derive macro `FooWithLongNan` in this scope\n-  --> $DIR/resolve-error.rs:22:10\n+  --> $DIR/resolve-error.rs:26:10\n    |\n LL | #[derive(FooWithLongNan)]\n    |          ^^^^^^^^^^^^^^ help: a derive macro with a similar name exists: `FooWithLongName`\n+   | \n+  ::: $DIR/auxiliary/derive-foo.rs:11:1\n+   |\n+LL | pub fn derive_foo(input: TokenStream) -> TokenStream {\n+   | ---------------------------------------------------- similarly named derive macro `FooWithLongName` defined here\n \n error: aborting due to 14 previous errors\n "}, {"sha": "6a98782a9badf07a7490b1113c168a894a7c5b15", "filename": "src/test/ui/resolve/levenshtein.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.rs?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,3 +1,7 @@\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n const MAX_ITEM: usize = 10;\n \n fn foo_bar() {}"}, {"sha": "a622d6cb34948c62ec14cc50c90d7581fb1abf7b", "filename": "src/test/ui/resolve/levenshtein.stderr", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,11 +1,11 @@\n error[E0412]: cannot find type `esize` in this scope\n-  --> $DIR/levenshtein.rs:5:11\n+  --> $DIR/levenshtein.rs:9:11\n    |\n LL | fn foo(c: esize) {} // Misspelled primitive type name.\n    |           ^^^^^ help: a builtin type with a similar name exists: `isize`\n \n error[E0412]: cannot find type `Baz` in this scope\n-  --> $DIR/levenshtein.rs:10:10\n+  --> $DIR/levenshtein.rs:14:10\n    |\n LL | enum Bar { }\n    | ------------ similarly named enum `Bar` defined here\n@@ -14,19 +14,24 @@ LL | type A = Baz; // Misspelled type name.\n    |          ^^^ help: an enum with a similar name exists: `Bar`\n \n error[E0412]: cannot find type `Opiton` in this scope\n-  --> $DIR/levenshtein.rs:12:10\n+  --> $DIR/levenshtein.rs:16:10\n    |\n LL | type B = Opiton<u8>; // Misspelled type name from the prelude.\n    |          ^^^^^^ help: an enum with a similar name exists: `Option`\n+   | \n+  ::: $SRC_DIR/libcore/option.rs:LL:COL\n+   |\n+LL | pub enum Option<T> {\n+   | ------------------ similarly named enum `Option` defined here\n \n error[E0412]: cannot find type `Baz` in this scope\n-  --> $DIR/levenshtein.rs:16:14\n+  --> $DIR/levenshtein.rs:20:14\n    |\n LL |     type A = Baz; // No suggestion here, Bar is not visible\n    |              ^^^ not found in this scope\n \n error[E0425]: cannot find value `MAXITEM` in this scope\n-  --> $DIR/levenshtein.rs:24:20\n+  --> $DIR/levenshtein.rs:28:20\n    |\n LL | const MAX_ITEM: usize = 10;\n    | --------------------------- similarly named constant `MAX_ITEM` defined here\n@@ -35,7 +40,7 @@ LL |     let v = [0u32; MAXITEM]; // Misspelled constant name.\n    |                    ^^^^^^^ help: a constant with a similar name exists: `MAX_ITEM`\n \n error[E0425]: cannot find function `foobar` in this scope\n-  --> $DIR/levenshtein.rs:26:5\n+  --> $DIR/levenshtein.rs:30:5\n    |\n LL | fn foo_bar() {}\n    | --------------- similarly named function `foo_bar` defined here\n@@ -44,7 +49,7 @@ LL |     foobar(); // Misspelled function name.\n    |     ^^^^^^ help: a function with a similar name exists: `foo_bar`\n \n error[E0412]: cannot find type `first` in module `m`\n-  --> $DIR/levenshtein.rs:28:15\n+  --> $DIR/levenshtein.rs:32:15\n    |\n LL |     pub struct First;\n    |     ----------------- similarly named struct `First` defined here\n@@ -53,7 +58,7 @@ LL |     let b: m::first = m::second; // Misspelled item in module.\n    |               ^^^^^ help: a struct with a similar name exists (notice the capitalization): `First`\n \n error[E0425]: cannot find value `second` in module `m`\n-  --> $DIR/levenshtein.rs:28:26\n+  --> $DIR/levenshtein.rs:32:26\n    |\n LL |     pub struct Second;\n    |     ------------------ similarly named unit struct `Second` defined here"}, {"sha": "e1e3317093a3191f9de7a12e898edb31693f7618", "filename": "src/test/ui/suggestions/attribute-typos.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.rs?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,3 +1,7 @@\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n #[deprcated] //~ ERROR cannot find attribute `deprcated` in this scope\n fn foo() {}\n "}, {"sha": "a0943592539af90689edc6574ebeadcdbaa148c2", "filename": "src/test/ui/suggestions/attribute-typos.stderr", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/543b7d97d019bff882cc70cf2f8bdc317e7b840f/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr?ref=543b7d97d019bff882cc70cf2f8bdc317e7b840f", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: attributes starting with `rustc` are reserved for use by the `rustc` compiler\n-  --> $DIR/attribute-typos.rs:7:3\n+  --> $DIR/attribute-typos.rs:11:3\n    |\n LL | #[rustc_err]\n    |   ^^^^^^^^^\n@@ -8,19 +8,24 @@ LL | #[rustc_err]\n    = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error: cannot find attribute `rustc_err` in this scope\n-  --> $DIR/attribute-typos.rs:7:3\n+  --> $DIR/attribute-typos.rs:11:3\n    |\n LL | #[rustc_err]\n    |   ^^^^^^^^^ help: a built-in attribute with a similar name exists: `rustc_error`\n \n error: cannot find attribute `tests` in this scope\n-  --> $DIR/attribute-typos.rs:4:3\n+  --> $DIR/attribute-typos.rs:8:3\n    |\n LL | #[tests]\n    |   ^^^^^ help: an attribute macro with a similar name exists: `test`\n+   | \n+  ::: $SRC_DIR/libcore/macros/mod.rs:LL:COL\n+   |\n+LL |     pub macro test($item:item) {\n+   |     -------------------------- similarly named attribute macro `test` defined here\n \n error: cannot find attribute `deprcated` in this scope\n-  --> $DIR/attribute-typos.rs:1:3\n+  --> $DIR/attribute-typos.rs:5:3\n    |\n LL | #[deprcated]\n    |   ^^^^^^^^^ help: a built-in attribute with a similar name exists: `deprecated`"}]}