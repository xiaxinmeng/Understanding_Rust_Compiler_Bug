{"sha": "9165e3b3810f7f602edc4977bf032a5cd53378cc", "node_id": "C_kwDOAAsO6NoAKDkxNjVlM2IzODEwZjdmNjAyZWRjNDk3N2JmMDMyYTVjZDUzMzc4Y2M", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-07-01T13:04:58Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-07-01T13:21:55Z"}, "message": "Update hir-ty test outputs", "tree": {"sha": "1930bc7c277dfb720e8adc30dd312c16703118c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1930bc7c277dfb720e8adc30dd312c16703118c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9165e3b3810f7f602edc4977bf032a5cd53378cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9165e3b3810f7f602edc4977bf032a5cd53378cc", "html_url": "https://github.com/rust-lang/rust/commit/9165e3b3810f7f602edc4977bf032a5cd53378cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9165e3b3810f7f602edc4977bf032a5cd53378cc/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "531e1523908c7f2201ad3c877ede48a3faec14be", "url": "https://api.github.com/repos/rust-lang/rust/commits/531e1523908c7f2201ad3c877ede48a3faec14be", "html_url": "https://github.com/rust-lang/rust/commit/531e1523908c7f2201ad3c877ede48a3faec14be"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "e188d80eb81738925f8650ccfd67accc2216f442", "filename": "crates/hir-def/src/body/lower.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9165e3b3810f7f602edc4977bf032a5cd53378cc/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9165e3b3810f7f602edc4977bf032a5cd53378cc/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs?ref=9165e3b3810f7f602edc4977bf032a5cd53378cc", "patch": "@@ -631,7 +631,6 @@ impl ExprCollector<'_> {\n                     let mac_call = mac.macro_call()?;\n                     let syntax_ptr = AstPtr::new(expr);\n                     let macro_ptr = AstPtr::new(&mac_call);\n-                    // let prev_stmt = self.statements_in_scope.len();\n                     let stmt = self.collect_macro_call(\n                         mac_call,\n                         macro_ptr,"}, {"sha": "019c10712b5cbefb9ba41f9f379db67123df0c56", "filename": "crates/hir-def/src/body/scope.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9165e3b3810f7f602edc4977bf032a5cd53378cc/crates%2Fhir-def%2Fsrc%2Fbody%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9165e3b3810f7f602edc4977bf032a5cd53378cc/crates%2Fhir-def%2Fsrc%2Fbody%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody%2Fscope.rs?ref=9165e3b3810f7f602edc4977bf032a5cd53378cc", "patch": "@@ -175,6 +175,9 @@ fn compute_expr_scopes(expr: ExprId, body: &Body, scopes: &mut ExprScopes, scope\n \n     scopes.set_scope(expr, *scope);\n     match &body[expr] {\n+        Expr::MacroStmts { statements, tail } => {\n+            compute_block_scopes(statements, *tail, body, scopes, *scope);\n+        }\n         Expr::Block { statements, tail, id, label } => {\n             let scope = scopes.new_block_scope(*scope, *id, make_label(label));\n             // Overwrite the old scope for the block expr, so that every block scope can be found"}, {"sha": "5a3cde028da1c98bef3b157d69920684563a4787", "filename": "crates/hir-ty/src/tests/macros.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9165e3b3810f7f602edc4977bf032a5cd53378cc/crates%2Fhir-ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9165e3b3810f7f602edc4977bf032a5cd53378cc/crates%2Fhir-ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fmacros.rs?ref=9165e3b3810f7f602edc4977bf032a5cd53378cc", "patch": "@@ -191,6 +191,8 @@ fn expr_macro_def_expanded_in_various_places() {\n             !0..6 '1isize': isize\n             !0..6 '1isize': isize\n             !0..6 '1isize': isize\n+            !0..6 '1isize': isize\n+            !0..6 '1isize': isize\n             39..442 '{     ...!(); }': ()\n             73..94 'spam!(...am!())': {unknown}\n             100..119 'for _ ...!() {}': ()\n@@ -272,6 +274,8 @@ fn expr_macro_rules_expanded_in_various_places() {\n             !0..6 '1isize': isize\n             !0..6 '1isize': isize\n             !0..6 '1isize': isize\n+            !0..6 '1isize': isize\n+            !0..6 '1isize': isize\n             53..456 '{     ...!(); }': ()\n             87..108 'spam!(...am!())': {unknown}\n             114..133 'for _ ...!() {}': ()\n@@ -306,7 +310,6 @@ fn expr_macro_expanded_in_stmts() {\n         }\n         \"#,\n         expect![[r#\"\n-            !0..8 'leta=();': ()\n             !0..8 'leta=();': ()\n             !3..4 'a': ()\n             !5..7 '()': ()\n@@ -335,16 +338,16 @@ fn recurisve_macro_expanded_in_stmts() {\n         }\n         \"#,\n         expect![[r#\"\n-            !0..7 'leta=3;': {unknown}\n-            !0..7 'leta=3;': {unknown}\n-            !0..13 'ng!{[leta=3]}': {unknown}\n-            !0..13 'ng!{[leta=]3}': {unknown}\n-            !0..13 'ng!{[leta]=3}': {unknown}\n+            !0..7 'leta=3;': ()\n+            !0..13 'ng!{[leta=3]}': ()\n+            !0..13 'ng!{[leta=]3}': ()\n+            !0..13 'ng!{[leta]=3}': ()\n+            !0..13 'ng!{[let]a=3}': ()\n             !3..4 'a': i32\n             !5..6 '3': i32\n             196..237 '{     ...= a; }': ()\n-            229..230 'b': i32\n-            233..234 'a': i32\n+            229..230 'b': {unknown}\n+            233..234 'a': {unknown}\n         \"#]],\n     );\n }\n@@ -364,8 +367,8 @@ fn recursive_inner_item_macro_rules() {\n         \"#,\n         expect![[r#\"\n             !0..1 '1': i32\n-            !0..26 'macro_...>{1};}': {unknown}\n-            !0..26 'macro_...>{1};}': {unknown}\n+            !0..7 'mac!($)': ()\n+            !0..26 'macro_...>{1};}': ()\n             107..143 '{     ...!(); }': ()\n             129..130 'a': i32\n         \"#]],"}, {"sha": "d41470d29f7316450a13e16b2811091970e9f917", "filename": "crates/hir-ty/src/tests/regression.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9165e3b3810f7f602edc4977bf032a5cd53378cc/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9165e3b3810f7f602edc4977bf032a5cd53378cc/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs?ref=9165e3b3810f7f602edc4977bf032a5cd53378cc", "patch": "@@ -573,6 +573,7 @@ fn issue_6811() {\n         }\n         \"#,\n         expect![[r#\"\n+            !0..16 'let_a=...t_b=1;': ()\n             !3..5 '_a': i32\n             !6..7 '1': i32\n             !11..13 '_b': i32\n@@ -1012,17 +1013,17 @@ fn cfg_tail() {\n         \"#,\n         expect![[r#\"\n             14..53 '{     ...)] 9 }': ()\n-            20..31 '{ \"first\" }': ()\n+            20..31 '{ \"first\" }': &str\n             22..29 '\"first\"': &str\n             72..190 '{     ...] 13 }': ()\n             78..88 '{ \"fake\" }': &str\n             80..86 '\"fake\"': &str\n             93..103 '{ \"fake\" }': &str\n             95..101 '\"fake\"': &str\n-            108..120 '{ \"second\" }': ()\n+            108..120 '{ \"second\" }': &str\n             110..118 '\"second\"': &str\n             210..273 '{     ... 15; }': ()\n-            216..227 '{ \"third\" }': ()\n+            216..227 '{ \"third\" }': &str\n             218..225 '\"third\"': &str\n             293..357 '{     ...] 15 }': ()\n             299..311 '{ \"fourth\" }': &str"}]}