{"sha": "afb9171b64fdf50e483f4165f621e35dd9c92d27", "node_id": "C_kwDOAAsO6NoAKGFmYjkxNzFiNjRmZGY1MGU0ODNmNDE2NWY2MjFlMzVkZDljOTJkMjc", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-05-11T11:49:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-11T11:49:29Z"}, "message": "Rollup merge of #96898 - RalfJung:interpret-pop-debug, r=oli-obk\n\nlogging: add env var to control verbose scope entry/exit logging\n\n~~This got removed in https://github.com/rust-lang/rust/pull/75143, and I find this makes long traces a lot harder to read, so I propose we add this back.~~\n\nExample trace:\n```\n\u2502 \u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step return\n\u2502 \u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::eval_context popping stack frame (returning from function)\n\u2502 \u2502\u250c\u2518rustc_const_eval::interpret::eval_context::frame std::ptr::mut_ptr::<impl *mut u8>::guaranteed_eq\n\u2502 \u251c\u2518rustc_const_eval::interpret::eval_context::frame std::ptr::mut_ptr::<impl *mut u8>::is_null\n\u2502 \u251c\u25001ms  INFO rustc_const_eval::interpret::step // executing bb2\n\u2502 \u251c\u25001ms  INFO rustc_const_eval::interpret::step StorageDead(_4)\n\u2502 \u251c\u25001ms  INFO rustc_const_eval::interpret::step StorageDead(_2)\n\u2502 \u251c\u25001ms  INFO rustc_const_eval::interpret::step return\n\u2502 \u251c\u25001ms  INFO rustc_const_eval::interpret::eval_context popping stack frame (returning from function)\n\u2502\u250c\u2518rustc_const_eval::interpret::eval_context::frame std::ptr::mut_ptr::<impl *mut u8>::is_null\n\u251c\u2518rustc_const_eval::interpret::eval_context::frame std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors\n\u251c\u2500178ms  INFO rustc_const_eval::interpret::step // executing bb2\n\u251c\u2500178ms  INFO rustc_const_eval::interpret::step StorageDead(_5)\n\n```\n\nr? `@oli-obk`", "tree": {"sha": "831c1419bb83525f461cec26d51d416964e273b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/831c1419bb83525f461cec26d51d416964e273b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afb9171b64fdf50e483f4165f621e35dd9c92d27", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJie6LJCRBK7hj4Ov3rIwAAsJ8IAEJbDFXvRgzjFTxU/Vz/79wk\nWwERMICCeFtW2ILuKUZJuVXAmemwhEUB5S96BppvRlXMAtqFjbGwObeXaQBVVzRP\n/EN6ryUswpFI+pYama2f05q6zD1MtLTZb2REeVThoM8TLyUmPe1c9VzK+vhmPK4s\n+fc41DRuLcvrEC2iYcDWBafCglPLnSJ5iOsgiDi+T5TIRt3E6yCjiso2Tuu/saGz\nmmsVIxbrxjHVkk9pW+HBz3ilip97Qn1aE4cG5MdPM9GRAt4W5pPjIBD6Ta8H1DOI\nfv81yOOBShcAiAww8lt8mE5gJAVbFPd7GX5p/z1KpsS3tz22Bk1+p8EvWyhko+w=\n=uJqP\n-----END PGP SIGNATURE-----\n", "payload": "tree 831c1419bb83525f461cec26d51d416964e273b9\nparent 0c2cee2e9db93ddb54086239009f617e7d2db951\nparent 831bd969674fd8afa751b13db543d58b2176c98c\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1652269769 +0200\ncommitter GitHub <noreply@github.com> 1652269769 +0200\n\nRollup merge of #96898 - RalfJung:interpret-pop-debug, r=oli-obk\n\nlogging: add env var to control verbose scope entry/exit logging\n\n~~This got removed in https://github.com/rust-lang/rust/pull/75143, and I find this makes long traces a lot harder to read, so I propose we add this back.~~\n\nExample trace:\n```\n\u2502 \u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::step return\n\u2502 \u2502 \u251c\u25000ms  INFO rustc_const_eval::interpret::eval_context popping stack frame (returning from function)\n\u2502 \u2502\u250c\u2518rustc_const_eval::interpret::eval_context::frame std::ptr::mut_ptr::<impl *mut u8>::guaranteed_eq\n\u2502 \u251c\u2518rustc_const_eval::interpret::eval_context::frame std::ptr::mut_ptr::<impl *mut u8>::is_null\n\u2502 \u251c\u25001ms  INFO rustc_const_eval::interpret::step // executing bb2\n\u2502 \u251c\u25001ms  INFO rustc_const_eval::interpret::step StorageDead(_4)\n\u2502 \u251c\u25001ms  INFO rustc_const_eval::interpret::step StorageDead(_2)\n\u2502 \u251c\u25001ms  INFO rustc_const_eval::interpret::step return\n\u2502 \u251c\u25001ms  INFO rustc_const_eval::interpret::eval_context popping stack frame (returning from function)\n\u2502\u250c\u2518rustc_const_eval::interpret::eval_context::frame std::ptr::mut_ptr::<impl *mut u8>::is_null\n\u251c\u2518rustc_const_eval::interpret::eval_context::frame std::sys_common::thread_local_dtor::register_dtor_fallback::run_dtors\n\u251c\u2500178ms  INFO rustc_const_eval::interpret::step // executing bb2\n\u251c\u2500178ms  INFO rustc_const_eval::interpret::step StorageDead(_5)\n\n```\n\nr? `@oli-obk`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afb9171b64fdf50e483f4165f621e35dd9c92d27", "html_url": "https://github.com/rust-lang/rust/commit/afb9171b64fdf50e483f4165f621e35dd9c92d27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afb9171b64fdf50e483f4165f621e35dd9c92d27/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c2cee2e9db93ddb54086239009f617e7d2db951", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c2cee2e9db93ddb54086239009f617e7d2db951", "html_url": "https://github.com/rust-lang/rust/commit/0c2cee2e9db93ddb54086239009f617e7d2db951"}, {"sha": "831bd969674fd8afa751b13db543d58b2176c98c", "url": "https://api.github.com/repos/rust-lang/rust/commits/831bd969674fd8afa751b13db543d58b2176c98c", "html_url": "https://github.com/rust-lang/rust/commit/831bd969674fd8afa751b13db543d58b2176c98c"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "c152815eeca68e408d9f470021f73992f6b56bc0", "filename": "compiler/rustc_log/src/lib.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/afb9171b64fdf50e483f4165f621e35dd9c92d27/compiler%2Frustc_log%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afb9171b64fdf50e483f4165f621e35dd9c92d27/compiler%2Frustc_log%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_log%2Fsrc%2Flib.rs?ref=afb9171b64fdf50e483f4165f621e35dd9c92d27", "patch": "@@ -67,11 +67,24 @@ pub fn init_env_logger(env: &str) -> Result<(), Error> {\n         Err(VarError::NotUnicode(_value)) => return Err(Error::NonUnicodeColorValue),\n     };\n \n+    let verbose_entry_exit = match env::var_os(String::from(env) + \"_ENTRY_EXIT\") {\n+        None => false,\n+        Some(v) => {\n+            if &v == \"0\" {\n+                false\n+            } else {\n+                true\n+            }\n+        }\n+    };\n+\n     let layer = tracing_tree::HierarchicalLayer::default()\n         .with_writer(io::stderr)\n         .with_indent_lines(true)\n         .with_ansi(color_logs)\n         .with_targets(true)\n+        .with_verbose_exit(verbose_entry_exit)\n+        .with_verbose_entry(verbose_entry_exit)\n         .with_indent_amount(2);\n     #[cfg(parallel_compiler)]\n     let layer = layer.with_thread_ids(true).with_thread_names(true);"}]}