{"sha": "99cde8482efaed4757422d24cd46de8fa64c92cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5Y2RlODQ4MmVmYWVkNDc1NzQyMmQyNGNkNDZkZThmYTY0YzkyY2I=", "commit": {"author": {"name": "Dmitry Vasiliev", "email": "dima@hlabs.org", "date": "2014-01-18T18:18:44Z"}, "committer": {"name": "Dmitry Vasiliev", "email": "dima@hlabs.org", "date": "2014-01-18T18:18:44Z"}, "message": "Ignore all newline characters in Base64 decoder\n\nIgnore all newline characters in Base64 decoder to make it compatible\nwith other Base64 decoders.", "tree": {"sha": "6fefd13480c4696e567507b5b0b14a6aef70a035", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fefd13480c4696e567507b5b0b14a6aef70a035"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99cde8482efaed4757422d24cd46de8fa64c92cb", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99cde8482efaed4757422d24cd46de8fa64c92cb", "html_url": "https://github.com/rust-lang/rust/commit/99cde8482efaed4757422d24cd46de8fa64c92cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99cde8482efaed4757422d24cd46de8fa64c92cb/comments", "author": {"login": "hdima", "id": 160338, "node_id": "MDQ6VXNlcjE2MDMzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/160338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdima", "html_url": "https://github.com/hdima", "followers_url": "https://api.github.com/users/hdima/followers", "following_url": "https://api.github.com/users/hdima/following{/other_user}", "gists_url": "https://api.github.com/users/hdima/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdima/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdima/subscriptions", "organizations_url": "https://api.github.com/users/hdima/orgs", "repos_url": "https://api.github.com/users/hdima/repos", "events_url": "https://api.github.com/users/hdima/events{/privacy}", "received_events_url": "https://api.github.com/users/hdima/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hdima", "id": 160338, "node_id": "MDQ6VXNlcjE2MDMzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/160338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdima", "html_url": "https://github.com/hdima", "followers_url": "https://api.github.com/users/hdima/followers", "following_url": "https://api.github.com/users/hdima/following{/other_user}", "gists_url": "https://api.github.com/users/hdima/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdima/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdima/subscriptions", "organizations_url": "https://api.github.com/users/hdima/orgs", "repos_url": "https://api.github.com/users/hdima/repos", "events_url": "https://api.github.com/users/hdima/events{/privacy}", "received_events_url": "https://api.github.com/users/hdima/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf07c80838e59cb21748f7e3b092ced96f41a208", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf07c80838e59cb21748f7e3b092ced96f41a208", "html_url": "https://github.com/rust-lang/rust/commit/bf07c80838e59cb21748f7e3b092ced96f41a208"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "1043f700aa7e99bee1ae9e5679529ee637e046b5", "filename": "src/libextra/base64.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/99cde8482efaed4757422d24cd46de8fa64c92cb/src%2Flibextra%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99cde8482efaed4757422d24cd46de8fa64c92cb/src%2Flibextra%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fbase64.rs?ref=99cde8482efaed4757422d24cd46de8fa64c92cb", "patch": "@@ -237,8 +237,9 @@ impl<'a> FromBase64 for &'a str {\n         }\n \n         for (idx, byte) in it {\n-            if (byte as char) != '=' {\n-                return Err(InvalidBase64Character(self.char_at(idx), idx));\n+            match byte as char {\n+                '='|'\\r'|'\\n' => continue,\n+                _ => return Err(InvalidBase64Character(self.char_at(idx), idx)),\n             }\n         }\n \n@@ -310,6 +311,8 @@ mod test {\n     fn test_from_base64_newlines() {\n         assert_eq!(\"Zm9v\\r\\nYmFy\".from_base64().unwrap(),\n                    \"foobar\".as_bytes().to_owned());\n+        assert_eq!(\"Zm9vYg==\\r\\n\".from_base64().unwrap(),\n+                   \"foob\".as_bytes().to_owned());\n     }\n \n     #[test]"}]}