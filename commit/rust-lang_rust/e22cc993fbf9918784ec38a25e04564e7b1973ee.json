{"sha": "e22cc993fbf9918784ec38a25e04564e7b1973ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMmNjOTkzZmJmOTkxODc4NGVjMzhhMjVlMDQ1NjRlN2IxOTczZWU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-05-09T14:08:04Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-05-09T14:08:04Z"}, "message": "Visit move out of `_0` when visiting `return`", "tree": {"sha": "3f5677927db2d776fcb34a9eb2a49bb36238ebc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f5677927db2d776fcb34a9eb2a49bb36238ebc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e22cc993fbf9918784ec38a25e04564e7b1973ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e22cc993fbf9918784ec38a25e04564e7b1973ee", "html_url": "https://github.com/rust-lang/rust/commit/e22cc993fbf9918784ec38a25e04564e7b1973ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e22cc993fbf9918784ec38a25e04564e7b1973ee/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c59a81a5fcbaaca311f744cd7c68d99bfbb05d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c59a81a5fcbaaca311f744cd7c68d99bfbb05d3", "html_url": "https://github.com/rust-lang/rust/commit/7c59a81a5fcbaaca311f744cd7c68d99bfbb05d3"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "1f097f24942decf27a19892b858a94c04c623e5d", "filename": "src/librustc_middle/mir/visit.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e22cc993fbf9918784ec38a25e04564e7b1973ee/src%2Flibrustc_middle%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e22cc993fbf9918784ec38a25e04564e7b1973ee/src%2Flibrustc_middle%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fvisit.rs?ref=e22cc993fbf9918784ec38a25e04564e7b1973ee", "patch": "@@ -427,13 +427,29 @@ macro_rules! make_mir_visitor {\n                     TerminatorKind::Goto { .. } |\n                     TerminatorKind::Resume |\n                     TerminatorKind::Abort |\n-                    TerminatorKind::Return |\n                     TerminatorKind::GeneratorDrop |\n                     TerminatorKind::Unreachable |\n                     TerminatorKind::FalseEdges { .. } |\n                     TerminatorKind::FalseUnwind { .. } => {\n                     }\n \n+                    TerminatorKind::Return => {\n+                        // `return` logically moves from the return place `_0`. Note that the place\n+                        // cannot be changed by any visitor, though.\n+                        let $($mutability)? local = RETURN_PLACE;\n+                        self.visit_local(\n+                            & $($mutability)? local,\n+                            PlaceContext::NonMutatingUse(NonMutatingUseContext::Move),\n+                            source_location,\n+                        );\n+\n+                        assert_eq!(\n+                            local,\n+                            RETURN_PLACE,\n+                            \"`MutVisitor` tried to mutate return place of `return` terminator\"\n+                        );\n+                    }\n+\n                     TerminatorKind::SwitchInt {\n                         discr,\n                         switch_ty,"}, {"sha": "ba406c72df8488225a10da8425e45b66752fdf8f", "filename": "src/librustc_mir/transform/copy_prop.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e22cc993fbf9918784ec38a25e04564e7b1973ee/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e22cc993fbf9918784ec38a25e04564e7b1973ee/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs?ref=e22cc993fbf9918784ec38a25e04564e7b1973ee", "patch": "@@ -73,7 +73,12 @@ impl<'tcx> MirPass<'tcx> for CopyPropagation {\n                     }\n                     // Conservatively gives up if the dest is an argument,\n                     // because there may be uses of the original argument value.\n-                    if body.local_kind(dest_local) == LocalKind::Arg {\n+                    // Also gives up on the return place, as we cannot propagate into its implicit\n+                    // use by `return`.\n+                    if matches!(\n+                        body.local_kind(dest_local),\n+                        LocalKind::Arg | LocalKind::ReturnPointer\n+                    ) {\n                         debug!(\"  Can't copy-propagate local: dest {:?} (argument)\", dest_local);\n                         continue;\n                     }"}, {"sha": "bfc872be653a596ca25db421d3f6a00d58b40089", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e22cc993fbf9918784ec38a25e04564e7b1973ee/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e22cc993fbf9918784ec38a25e04564e7b1973ee/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=e22cc993fbf9918784ec38a25e04564e7b1973ee", "patch": "@@ -91,6 +91,16 @@ impl<'tcx> MutVisitor<'tcx> for RenameLocalVisitor<'tcx> {\n             *local = self.to;\n         }\n     }\n+\n+    fn visit_terminator_kind(&mut self, kind: &mut TerminatorKind<'tcx>, location: Location) {\n+        match kind {\n+            TerminatorKind::Return => {\n+                // Do not replace the implicit `_0` access here, as that's not possible. The\n+                // transform already handles `return` correctly.\n+            }\n+            _ => self.super_terminator_kind(kind, location),\n+        }\n+    }\n }\n \n struct DerefArgVisitor<'tcx> {"}, {"sha": "632408fde749f225ef864c88f92faaecf48917cd", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e22cc993fbf9918784ec38a25e04564e7b1973ee/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e22cc993fbf9918784ec38a25e04564e7b1973ee/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=e22cc993fbf9918784ec38a25e04564e7b1973ee", "patch": "@@ -732,7 +732,11 @@ impl<'a, 'tcx> MutVisitor<'tcx> for Integrator<'a, 'tcx> {\n     }\n \n     fn visit_terminator_kind(&mut self, kind: &mut TerminatorKind<'tcx>, loc: Location) {\n-        self.super_terminator_kind(kind, loc);\n+        // Don't try to modify the implicit `_0` access on return (`return` terminators are\n+        // replaced down below anyways).\n+        if !matches!(kind, TerminatorKind::Return) {\n+            self.super_terminator_kind(kind, loc);\n+        }\n \n         match *kind {\n             TerminatorKind::GeneratorDrop | TerminatorKind::Yield { .. } => bug!(),"}]}