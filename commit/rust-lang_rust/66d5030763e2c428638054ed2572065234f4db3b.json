{"sha": "66d5030763e2c428638054ed2572065234f4db3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZDUwMzA3NjNlMmM0Mjg2MzgwNTRlZDI1NzIwNjUyMzRmNGRiM2I=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-08T00:13:24Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-08T03:04:38Z"}, "message": "implement BaseIter for SmallIntMap", "tree": {"sha": "f16f2962a7c29ed91c90567b3f7098b4818a8150", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f16f2962a7c29ed91c90567b3f7098b4818a8150"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66d5030763e2c428638054ed2572065234f4db3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66d5030763e2c428638054ed2572065234f4db3b", "html_url": "https://github.com/rust-lang/rust/commit/66d5030763e2c428638054ed2572065234f4db3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66d5030763e2c428638054ed2572065234f4db3b/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e01824477751561fa0c1c13db13d0fbda341008e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e01824477751561fa0c1c13db13d0fbda341008e", "html_url": "https://github.com/rust-lang/rust/commit/e01824477751561fa0c1c13db13d0fbda341008e"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "9789dbea131d90469c3bb885592dcec981497abc", "filename": "src/libstd/smallintmap.rs", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/66d5030763e2c428638054ed2572065234f4db3b/src%2Flibstd%2Fsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d5030763e2c428638054ed2572065234f4db3b/src%2Flibstd%2Fsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsmallintmap.rs?ref=66d5030763e2c428638054ed2572065234f4db3b", "patch": "@@ -14,13 +14,28 @@\n  */\n \n use core::container::{Container, Mutable, Map, Set};\n+use core::iter::BaseIter;\n use core::option::{Some, None};\n use core::prelude::*;\n \n pub struct SmallIntMap<T> {\n     priv v: ~[Option<T>],\n }\n \n+impl<V> SmallIntMap<V>: BaseIter<(uint, &V)> {\n+    /// Visit all key-value pairs in order\n+    pure fn each(&self, it: fn(&(uint, &self/V)) -> bool) {\n+        for uint::range(0, self.v.len()) |i| {\n+            match self.v[i] {\n+              Some(ref elt) => if !it(&(i, elt)) { break },\n+              None => ()\n+            }\n+        }\n+    }\n+\n+    pure fn size_hint(&self) -> Option<uint> { Some(self.len()) }\n+}\n+\n impl<V> SmallIntMap<V>: Container {\n     /// Return the number of elements in the map\n     pure fn len(&self) -> uint {\n@@ -48,14 +63,14 @@ impl<V> SmallIntMap<V>: Map<uint, V> {\n         self.find(key).is_some()\n     }\n \n-    /// Visit all keys\n+    /// Visit all keys in order\n     pure fn each_key(&self, blk: fn(key: &uint) -> bool) {\n-        self.each(|k, _| blk(k))\n+        self.each(|&(k, _)| blk(&k))\n     }\n \n-    /// Visit all values\n+    /// Visit all values in order\n     pure fn each_value(&self, blk: fn(value: &V) -> bool) {\n-        self.each(|_, v| blk(v))\n+        self.each(|&(_, v)| blk(v))\n     }\n \n     /// Return the value corresponding to the key in the map\n@@ -99,16 +114,6 @@ pub impl<V> SmallIntMap<V> {\n     /// Create an empty SmallIntMap\n     static pure fn new() -> SmallIntMap<V> { SmallIntMap{v: ~[]} }\n \n-    /// Visit all key-value pairs\n-    pure fn each(&self, it: fn(key: &uint, value: &V) -> bool) {\n-        for uint::range(0, self.v.len()) |i| {\n-            match self.v[i] {\n-              Some(ref elt) => if !it(&i, elt) { break },\n-              None => ()\n-            }\n-        }\n-    }\n-\n     pure fn get(&self, key: &uint) -> &self/V {\n         self.find(key).expect(\"key not present\")\n     }"}]}