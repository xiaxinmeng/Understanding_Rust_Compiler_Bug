{"sha": "b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMzQwYjVjZWE1ZmRhZWZhNGNiYzdlZWM4Y2ViMDU5MmViZTIyNTU=", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2020-07-21T01:28:51Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2020-07-21T01:28:51Z"}, "message": "Expand test to cover type_name and monomorphic use", "tree": {"sha": "cdea0a6448222d182721d9a2dc5e4ec1761d9f85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdea0a6448222d182721d9a2dc5e4ec1761d9f85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255", "html_url": "https://github.com/rust-lang/rust/commit/b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fb260bb32a2da7d7ea63b759eef77072a95614b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb260bb32a2da7d7ea63b759eef77072a95614b", "html_url": "https://github.com/rust-lang/rust/commit/4fb260bb32a2da7d7ea63b759eef77072a95614b"}], "stats": {"total": 92, "additions": 77, "deletions": 15}, "files": [{"sha": "7706a97f23b4834bd0c2166e8354c0659ca34f4b", "filename": "src/test/ui/consts/issue-73976-monomorphic.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-monomorphic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-monomorphic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-monomorphic.rs?ref=b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255", "patch": "@@ -0,0 +1,36 @@\n+// check-pass\n+//\n+// This test is complement to the test in issue-73976-polymorphic.rs.\n+// In that test we ensure that polymorphic use of type_id and type_name in patterns\n+// will be properly rejected. This test will ensure that monomorphic use of these\n+// would not be wrongly rejected in patterns.\n+\n+#![feature(const_type_id)]\n+#![feature(const_type_name)]\n+\n+use std::any::{self, TypeId};\n+\n+pub struct GetTypeId<T>(T);\n+\n+impl<T: 'static> GetTypeId<T> {\n+    pub const VALUE: TypeId = TypeId::of::<T>();\n+}\n+\n+const fn check_type_id<T: 'static>() -> bool {\n+    matches!(GetTypeId::<T>::VALUE, GetTypeId::<usize>::VALUE)\n+}\n+\n+pub struct GetTypeNameLen<T>(T);\n+\n+impl<T: 'static> GetTypeNameLen<T> {\n+    pub const VALUE: usize = any::type_name::<T>().len();\n+}\n+\n+const fn check_type_name_len<T: 'static>() -> bool {\n+    matches!(GetTypeNameLen::<T>::VALUE, GetTypeNameLen::<usize>::VALUE)\n+}\n+\n+fn main() {\n+    assert!(check_type_id::<usize>());\n+    assert!(check_type_name_len::<usize>());\n+}"}, {"sha": "28b84518719a1b1cd01a2844ba437df31d074963", "filename": "src/test/ui/consts/issue-73976-polymorphic.rs", "status": "renamed", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-polymorphic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-polymorphic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-polymorphic.rs?ref=b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255", "patch": "@@ -6,8 +6,9 @@\n // Currently we just disallow this usage and require pattern is monomorphic.\n \n #![feature(const_type_id)]\n+#![feature(const_type_name)]\n \n-use std::any::TypeId;\n+use std::any::{self, TypeId};\n \n pub struct GetTypeId<T>(T);\n \n@@ -21,6 +22,19 @@ const fn check_type_id<T: 'static>() -> bool {\n     //~| ERROR could not evaluate constant pattern\n }\n \n+pub struct GetTypeNameLen<T>(T);\n+\n+impl<T: 'static> GetTypeNameLen<T> {\n+    pub const VALUE: usize = any::type_name::<T>().len();\n+}\n+\n+const fn check_type_name_len<T: 'static>() -> bool {\n+    matches!(GetTypeNameLen::<T>::VALUE, GetTypeNameLen::<T>::VALUE)\n+    //~^ ERROR could not evaluate constant pattern\n+    //~| ERROR could not evaluate constant pattern\n+}\n+\n fn main() {\n     assert!(check_type_id::<usize>());\n+    assert!(check_type_name_len::<usize>());\n }", "previous_filename": "src/test/ui/consts/issue-73976.rs"}, {"sha": "c90ce2bd06a67660b72c4470ac054b7449ad2891", "filename": "src/test/ui/consts/issue-73976-polymorphic.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-polymorphic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-polymorphic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-73976-polymorphic.stderr?ref=b3340b5cea5fdaefa4cbc7eec8ceb0592ebe2255", "patch": "@@ -0,0 +1,26 @@\n+error: could not evaluate constant pattern\n+  --> $DIR/issue-73976-polymorphic.rs:20:37\n+   |\n+LL |     matches!(GetTypeId::<T>::VALUE, GetTypeId::<T>::VALUE)\n+   |                                     ^^^^^^^^^^^^^^^^^^^^^\n+\n+error: could not evaluate constant pattern\n+  --> $DIR/issue-73976-polymorphic.rs:32:42\n+   |\n+LL |     matches!(GetTypeNameLen::<T>::VALUE, GetTypeNameLen::<T>::VALUE)\n+   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: could not evaluate constant pattern\n+  --> $DIR/issue-73976-polymorphic.rs:20:37\n+   |\n+LL |     matches!(GetTypeId::<T>::VALUE, GetTypeId::<T>::VALUE)\n+   |                                     ^^^^^^^^^^^^^^^^^^^^^\n+\n+error: could not evaluate constant pattern\n+  --> $DIR/issue-73976-polymorphic.rs:32:42\n+   |\n+LL |     matches!(GetTypeNameLen::<T>::VALUE, GetTypeNameLen::<T>::VALUE)\n+   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "dbb7690b849c85f730504baffed97954e165b356", "filename": "src/test/ui/consts/issue-73976.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4fb260bb32a2da7d7ea63b759eef77072a95614b/src%2Ftest%2Fui%2Fconsts%2Fissue-73976.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fb260bb32a2da7d7ea63b759eef77072a95614b/src%2Ftest%2Fui%2Fconsts%2Fissue-73976.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-73976.stderr?ref=4fb260bb32a2da7d7ea63b759eef77072a95614b", "patch": "@@ -1,14 +0,0 @@\n-error: could not evaluate constant pattern\n-  --> $DIR/issue-73976.rs:19:37\n-   |\n-LL |     matches!(GetTypeId::<T>::VALUE, GetTypeId::<T>::VALUE)\n-   |                                     ^^^^^^^^^^^^^^^^^^^^^\n-\n-error: could not evaluate constant pattern\n-  --> $DIR/issue-73976.rs:19:37\n-   |\n-LL |     matches!(GetTypeId::<T>::VALUE, GetTypeId::<T>::VALUE)\n-   |                                     ^^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 2 previous errors\n-"}]}