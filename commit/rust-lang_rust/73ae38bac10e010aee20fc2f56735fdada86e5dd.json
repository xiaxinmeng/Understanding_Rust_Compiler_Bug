{"sha": "73ae38bac10e010aee20fc2f56735fdada86e5dd", "node_id": "C_kwDOAAsO6NoAKDczYWUzOGJhYzEwZTAxMGFlZTIwZmMyZjU2NzM1ZmRhZGE4NmU1ZGQ", "commit": {"author": {"name": "Jean CASPAR", "email": "55629512+JeanCASPAR@users.noreply.github.com", "date": "2022-08-16T20:28:51Z"}, "committer": {"name": "Jean CASPAR", "email": "55629512+JeanCASPAR@users.noreply.github.com", "date": "2022-08-22T17:19:58Z"}, "message": "Migrate ast_lowering::path to SessionDiagnostic", "tree": {"sha": "f8470a3e29081125967775e4e3850d908ef73a3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8470a3e29081125967775e4e3850d908ef73a3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73ae38bac10e010aee20fc2f56735fdada86e5dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73ae38bac10e010aee20fc2f56735fdada86e5dd", "html_url": "https://github.com/rust-lang/rust/commit/73ae38bac10e010aee20fc2f56735fdada86e5dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73ae38bac10e010aee20fc2f56735fdada86e5dd/comments", "author": {"login": "JeanCASPAR", "id": 55629512, "node_id": "MDQ6VXNlcjU1NjI5NTEy", "avatar_url": "https://avatars.githubusercontent.com/u/55629512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeanCASPAR", "html_url": "https://github.com/JeanCASPAR", "followers_url": "https://api.github.com/users/JeanCASPAR/followers", "following_url": "https://api.github.com/users/JeanCASPAR/following{/other_user}", "gists_url": "https://api.github.com/users/JeanCASPAR/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeanCASPAR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeanCASPAR/subscriptions", "organizations_url": "https://api.github.com/users/JeanCASPAR/orgs", "repos_url": "https://api.github.com/users/JeanCASPAR/repos", "events_url": "https://api.github.com/users/JeanCASPAR/events{/privacy}", "received_events_url": "https://api.github.com/users/JeanCASPAR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeanCASPAR", "id": 55629512, "node_id": "MDQ6VXNlcjU1NjI5NTEy", "avatar_url": "https://avatars.githubusercontent.com/u/55629512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeanCASPAR", "html_url": "https://github.com/JeanCASPAR", "followers_url": "https://api.github.com/users/JeanCASPAR/followers", "following_url": "https://api.github.com/users/JeanCASPAR/following{/other_user}", "gists_url": "https://api.github.com/users/JeanCASPAR/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeanCASPAR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeanCASPAR/subscriptions", "organizations_url": "https://api.github.com/users/JeanCASPAR/orgs", "repos_url": "https://api.github.com/users/JeanCASPAR/repos", "events_url": "https://api.github.com/users/JeanCASPAR/events{/privacy}", "received_events_url": "https://api.github.com/users/JeanCASPAR/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8a33cf27166d3eabaffc58ed3799e054af3b0c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8a33cf27166d3eabaffc58ed3799e054af3b0c6", "html_url": "https://github.com/rust-lang/rust/commit/a8a33cf27166d3eabaffc58ed3799e054af3b0c6"}], "stats": {"total": 61, "additions": 46, "deletions": 15}, "files": [{"sha": "40583d7ae96618810f85c36c3745c375c6fd0b2e", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73ae38bac10e010aee20fc2f56735fdada86e5dd/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/73ae38bac10e010aee20fc2f56735fdada86e5dd/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=73ae38bac10e010aee20fc2f56735fdada86e5dd", "patch": "@@ -3575,6 +3575,7 @@ dependencies = [\n  \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_index\",\n+ \"rustc_macros\",\n  \"rustc_middle\",\n  \"rustc_query_system\",\n  \"rustc_session\","}, {"sha": "474aff2e2aac06fabc947ac8c733fa227c732e65", "filename": "compiler/rustc_ast_lowering/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73ae38bac10e010aee20fc2f56735fdada86e5dd/compiler%2Frustc_ast_lowering%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/73ae38bac10e010aee20fc2f56735fdada86e5dd/compiler%2Frustc_ast_lowering%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2FCargo.toml?ref=73ae38bac10e010aee20fc2f56735fdada86e5dd", "patch": "@@ -15,6 +15,7 @@ rustc_target = { path = \"../rustc_target\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_middle = { path = \"../rustc_middle\" }\n+rustc_macros = { path = \"../rustc_macros\" }\n rustc_query_system = { path = \"../rustc_query_system\" }\n rustc_span = { path = \"../rustc_span\" }\n rustc_errors = { path = \"../rustc_errors\" }"}, {"sha": "8701491c9eb3d08e6d7562bd244cbc8c0929ce3b", "filename": "compiler/rustc_ast_lowering/src/errors.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/73ae38bac10e010aee20fc2f56735fdada86e5dd/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73ae38bac10e010aee20fc2f56735fdada86e5dd/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs?ref=73ae38bac10e010aee20fc2f56735fdada86e5dd", "patch": "@@ -0,0 +1,29 @@\n+use rustc_errors::{fluent, AddSubdiagnostic, Applicability, Diagnostic};\n+use rustc_macros::SessionDiagnostic;\n+use rustc_span::Span;\n+\n+#[derive(SessionDiagnostic, Clone, Copy)]\n+#[error(ast_lowering::generic_type_with_parentheses, code = \"E0214\")]\n+pub struct GenericTypeWithParentheses {\n+    #[primary_span]\n+    #[label]\n+    pub span: Span,\n+    #[subdiagnostic]\n+    pub sub: Option<UseAngleBrackets>,\n+}\n+\n+#[derive(Clone, Copy)]\n+pub struct UseAngleBrackets {\n+    pub open_param: Span,\n+    pub close_param: Span,\n+}\n+\n+impl AddSubdiagnostic for UseAngleBrackets {\n+    fn add_to_diagnostic(self, diag: &mut Diagnostic) {\n+        diag.multipart_suggestion(\n+            fluent::ast_lowering::use_angle_brackets,\n+            vec![(self.open_param, String::from(\"<\")), (self.close_param, String::from(\">\"))],\n+            Applicability::MaybeIncorrect,\n+        );\n+    }\n+}"}, {"sha": "c1d9a7e690e690c590e125554f711b317998320c", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73ae38bac10e010aee20fc2f56735fdada86e5dd/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73ae38bac10e010aee20fc2f56735fdada86e5dd/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=73ae38bac10e010aee20fc2f56735fdada86e5dd", "patch": "@@ -75,6 +75,7 @@ macro_rules! arena_vec {\n \n mod asm;\n mod block;\n+mod errors;\n mod expr;\n mod index;\n mod item;"}, {"sha": "5874d08a94fe06bac55a516e8abef538f386aa58", "filename": "compiler/rustc_ast_lowering/src/path.rs", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/73ae38bac10e010aee20fc2f56735fdada86e5dd/compiler%2Frustc_ast_lowering%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73ae38bac10e010aee20fc2f56735fdada86e5dd/compiler%2Frustc_ast_lowering%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fpath.rs?ref=73ae38bac10e010aee20fc2f56735fdada86e5dd", "patch": "@@ -1,11 +1,11 @@\n use crate::ImplTraitPosition;\n \n+use super::errors::{GenericTypeWithParentheses, UseAngleBrackets};\n use super::ResolverAstLoweringExt;\n use super::{GenericArgsCtor, LifetimeRes, ParenthesizedGenericArgs};\n use super::{ImplTraitContext, LoweringContext, ParamMode};\n \n use rustc_ast::{self as ast, *};\n-use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, PartialRes, Res};\n use rustc_hir::GenericArg;\n@@ -185,18 +185,15 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n     ) -> hir::PathSegment<'hir> {\n         debug!(\"path_span: {:?}, lower_path_segment(segment: {:?})\", path_span, segment,);\n         let (mut generic_args, infer_args) = if let Some(ref generic_args) = segment.args {\n-            let msg = \"parenthesized type parameters may only be used with a `Fn` trait\";\n             match **generic_args {\n                 GenericArgs::AngleBracketed(ref data) => {\n                     self.lower_angle_bracketed_parameter_data(data, param_mode, itctx)\n                 }\n                 GenericArgs::Parenthesized(ref data) => match parenthesized_generic_args {\n                     ParenthesizedGenericArgs::Ok => self.lower_parenthesized_parameter_data(data),\n                     ParenthesizedGenericArgs::Err => {\n-                        let mut err = struct_span_err!(self.tcx.sess, data.span, E0214, \"{}\", msg);\n-                        err.span_label(data.span, \"only `Fn` traits may use parentheses\");\n                         // Suggest replacing parentheses with angle brackets `Trait(params...)` to `Trait<params...>`\n-                        if !data.inputs.is_empty() {\n+                        let sub = if !data.inputs.is_empty() {\n                             // Start of the span to the 1st character of 1st argument\n                             let open_param = data.inputs_span.shrink_to_lo().to(data\n                                 .inputs\n@@ -212,16 +209,12 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                                 .span\n                                 .shrink_to_hi()\n                                 .to(data.inputs_span.shrink_to_hi());\n-                            err.multipart_suggestion(\n-                                &format!(\"use angle brackets instead\",),\n-                                vec![\n-                                    (open_param, String::from(\"<\")),\n-                                    (close_param, String::from(\">\")),\n-                                ],\n-                                Applicability::MaybeIncorrect,\n-                            );\n-                        }\n-                        err.emit();\n+\n+                            Some(UseAngleBrackets { open_param, close_param })\n+                        } else {\n+                            None\n+                        };\n+                        self.tcx.sess.emit_err(GenericTypeWithParentheses { span: data.span, sub });\n                         (\n                             self.lower_angle_bracketed_parameter_data(\n                                 &data.as_angle_bracketed_args(),"}, {"sha": "ac7fc37e37dd57fd91a4309975bb7b56a1fd164e", "filename": "compiler/rustc_error_messages/locales/en-US/ast_lowering.ftl", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/73ae38bac10e010aee20fc2f56735fdada86e5dd/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_lowering.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/73ae38bac10e010aee20fc2f56735fdada86e5dd/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_lowering.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_lowering.ftl?ref=73ae38bac10e010aee20fc2f56735fdada86e5dd", "patch": "@@ -0,0 +1,5 @@\n+ast_lowering_generic_type_with_parentheses =\n+    parenthesized type parameters may only be used with a `Fn` trait\n+    .label = only `Fn` traits may use parentheses\n+\n+ast_lowering_use_angle_brackets = use angle brackets instead"}, {"sha": "31455d47698cb0ea3e2bfcbcf2fb58862cc4df59", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73ae38bac10e010aee20fc2f56735fdada86e5dd/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73ae38bac10e010aee20fc2f56735fdada86e5dd/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=73ae38bac10e010aee20fc2f56735fdada86e5dd", "patch": "@@ -32,6 +32,7 @@ pub use unic_langid::{langid, LanguageIdentifier};\n \n // Generates `DEFAULT_LOCALE_RESOURCES` static and `fluent_generated` module.\n fluent_messages! {\n+    ast_lowering => \"../locales/en-US/ast_lowering.ftl\",\n     ast_passes => \"../locales/en-US/ast_passes.ftl\",\n     borrowck => \"../locales/en-US/borrowck.ftl\",\n     builtin_macros => \"../locales/en-US/builtin_macros.ftl\","}]}