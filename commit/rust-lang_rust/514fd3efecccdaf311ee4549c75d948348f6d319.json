{"sha": "514fd3efecccdaf311ee4549c75d948348f6d319", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNGZkM2VmZWNjY2RhZjMxMWVlNDU0OWM3NWQ5NDgzNDhmNmQzMTk=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-03T22:30:06Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-04T00:40:44Z"}, "message": "Assert that constants are translated with the correct size.", "tree": {"sha": "cea6cbed95971d1afa1b66582c1ec6db83d6fcc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cea6cbed95971d1afa1b66582c1ec6db83d6fcc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/514fd3efecccdaf311ee4549c75d948348f6d319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/514fd3efecccdaf311ee4549c75d948348f6d319", "html_url": "https://github.com/rust-lang/rust/commit/514fd3efecccdaf311ee4549c75d948348f6d319", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/514fd3efecccdaf311ee4549c75d948348f6d319/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f0a123f0d1c8718b015c973b3780bc9353e9159", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f0a123f0d1c8718b015c973b3780bc9353e9159", "html_url": "https://github.com/rust-lang/rust/commit/5f0a123f0d1c8718b015c973b3780bc9353e9159"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "e61afbdce25052eec2eff9de6128bb0cbf085748", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/514fd3efecccdaf311ee4549c75d948348f6d319/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/514fd3efecccdaf311ee4549c75d948348f6d319/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=514fd3efecccdaf311ee4549c75d948348f6d319", "patch": "@@ -20,6 +20,7 @@ use middle::trans::expr;\n use middle::trans::machine;\n use middle::trans::type_of;\n use middle::ty;\n+use util::ppaux::{expr_repr, ty_to_str};\n \n use core::libc::c_uint;\n use syntax::{ast, ast_util, codemap, ast_map};\n@@ -150,6 +151,24 @@ pub fn get_const_val(cx: @CrateContext, def_id: ast::def_id) -> ValueRef {\n }\n \n pub fn const_expr(cx: @CrateContext, e: @ast::expr) -> ValueRef {\n+    let ety = ty::expr_ty_adjusted(cx.tcx, e);\n+    let llty = type_of::sizing_type_of(cx, ety);\n+    let llconst = const_expr_unchecked(cx, e);\n+    let csize = machine::llsize_of_alloc(cx, val_ty(llconst));\n+    let tsize = machine::llsize_of_alloc(cx, llty);\n+    if csize != tsize {\n+        unsafe {\n+            llvm::LLVMDumpValue(llconst);\n+            llvm::LLVMDumpValue(C_null(llty));\n+        }\n+        cx.sess.bug(fmt!(\"const %s of type %s has size %u instead of %u\",\n+                         expr_repr(cx.tcx, e), ty_to_str(cx.tcx, ety),\n+                         csize, tsize));\n+    }\n+    llconst\n+}\n+\n+fn const_expr_unchecked(cx: @CrateContext, e: @ast::expr) -> ValueRef {\n     unsafe {\n         let _icx = cx.insn_ctxt(\"const_expr\");\n         return match /*bad*/copy e.node {"}]}