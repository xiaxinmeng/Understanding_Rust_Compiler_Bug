{"sha": "4ebc16c1edbe8560f66238983ffa4b10870dad68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYmMxNmMxZWRiZTg1NjBmNjYyMzg5ODNmZmE0YjEwODcwZGFkNjg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-04-12T13:16:14Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-04-12T13:16:14Z"}, "message": "Rollup merge of #24072 - ebfull:explain_closure_type_err, r=pnkfelix\n\nAlso fixed bug calling .note() instead of .help()\r\n\r\nSee #24036", "tree": {"sha": "5bb7a7a76b4e46274350fc43871bde14cc834117", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bb7a7a76b4e46274350fc43871bde14cc834117"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ebc16c1edbe8560f66238983ffa4b10870dad68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ebc16c1edbe8560f66238983ffa4b10870dad68", "html_url": "https://github.com/rust-lang/rust/commit/4ebc16c1edbe8560f66238983ffa4b10870dad68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ebc16c1edbe8560f66238983ffa4b10870dad68/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1e3c25a2688664e85052b6205187b62410c0df0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1e3c25a2688664e85052b6205187b62410c0df0", "html_url": "https://github.com/rust-lang/rust/commit/a1e3c25a2688664e85052b6205187b62410c0df0"}, {"sha": "3308c06e33855f89627b417fd6b57f76d9df50a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3308c06e33855f89627b417fd6b57f76d9df50a1", "html_url": "https://github.com/rust-lang/rust/commit/3308c06e33855f89627b417fd6b57f76d9df50a1"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "03e76f5ee2573a30acfc8b32eb07c19b23c09de4", "filename": "src/librustc/middle/infer/error_reporting.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Flibrustc%2Fmiddle%2Finfer%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Flibrustc%2Fmiddle%2Finfer%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Ferror_reporting.rs?ref=4ebc16c1edbe8560f66238983ffa4b10870dad68", "patch": "@@ -373,8 +373,9 @@ impl<'a, 'tcx> ErrorReporting<'tcx> for InferCtxt<'a, 'tcx> {\n     fn report_and_explain_type_error(&self,\n                                      trace: TypeTrace<'tcx>,\n                                      terr: &ty::type_err<'tcx>) {\n+        let span = trace.origin.span();\n         self.report_type_error(trace, terr);\n-        ty::note_and_explain_type_err(self.tcx, terr);\n+        ty::note_and_explain_type_err(self.tcx, terr, span);\n     }\n \n     /// Returns a string of the form \"expected `{}`, found `{}`\", or None if this is a derived\n@@ -812,7 +813,7 @@ impl<'a, 'tcx> ErrorReporting<'tcx> for InferCtxt<'a, 'tcx> {\n         }\n         self.give_suggestion(same_regions);\n         for &(ref trace, terr) in trace_origins {\n-            self.report_type_error(trace.clone(), &terr);\n+            self.report_and_explain_type_error(trace.clone(), &terr);\n         }\n     }\n "}, {"sha": "0f62b440bf32d1abf1eeafbbb4b803275a5dfffa", "filename": "src/librustc/middle/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs?ref=4ebc16c1edbe8560f66238983ffa4b10870dad68", "patch": "@@ -987,7 +987,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     error_str));\n \n                 if let Some(err) = err {\n-                    ty::note_and_explain_type_err(self.tcx, err)\n+                    ty::note_and_explain_type_err(self.tcx, err, sp)\n                 }\n             }\n         }"}, {"sha": "0a747ba881fd62f00297e9a071f131164fd9f7c4", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=4ebc16c1edbe8560f66238983ffa4b10870dad68", "patch": "@@ -5103,7 +5103,7 @@ pub fn type_err_to_str<'tcx>(cx: &ctxt<'tcx>, err: &type_err<'tcx>) -> String {\n     }\n }\n \n-pub fn note_and_explain_type_err(cx: &ctxt, err: &type_err) {\n+pub fn note_and_explain_type_err<'tcx>(cx: &ctxt<'tcx>, err: &type_err<'tcx>, sp: Span) {\n     match *err {\n         terr_regions_does_not_outlive(subregion, superregion) => {\n             note_and_explain_region(cx, \"\", subregion, \"...\");\n@@ -5134,6 +5134,16 @@ pub fn note_and_explain_type_err(cx: &ctxt, err: &type_err) {\n                                     \"expected concrete lifetime is \",\n                                     conc_region, \"\");\n         }\n+        terr_sorts(values) => {\n+            let expected_str = ty_sort_string(cx, values.expected);\n+            let found_str = ty_sort_string(cx, values.found);\n+            if expected_str == found_str && expected_str == \"closure\" {\n+                cx.sess.span_note(sp, &format!(\"no two closures, even if identical, have the same \\\n+                                                type\"));\n+                cx.sess.span_help(sp, &format!(\"consider boxing your closure and/or \\\n+                                        using it as a trait object\"));\n+            }\n+        }\n         _ => {}\n     }\n }"}, {"sha": "500af5fc772f5ca2d6e18046f8f83ed94f80a560", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=4ebc16c1edbe8560f66238983ffa4b10870dad68", "patch": "@@ -163,7 +163,7 @@ impl Session {\n         self.diagnostic().handler().note(msg)\n     }\n     pub fn help(&self, msg: &str) {\n-        self.diagnostic().handler().note(msg)\n+        self.diagnostic().handler().help(msg)\n     }\n     pub fn opt_span_bug(&self, opt_sp: Option<Span>, msg: &str) -> ! {\n         match opt_sp {"}, {"sha": "862c454a3883360eabacd2cb7af2641c50a58843", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=4ebc16c1edbe8560f66238983ffa4b10870dad68", "patch": "@@ -3575,7 +3575,7 @@ fn check_expr_with_unifier<'a, 'tcx, F>(fcx: &FnCtxt<'a, 'tcx>,\n                                             .ty_to_string(\n                                                 actual_structure_type),\n                                          type_error_description);\n-                    ty::note_and_explain_type_err(tcx, &type_error);\n+                    ty::note_and_explain_type_err(tcx, &type_error, path.span);\n                 }\n             }\n         }"}, {"sha": "be3fc860b2b1239cad25fb50e0667dfc4557113e", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=4ebc16c1edbe8560f66238983ffa4b10870dad68", "patch": "@@ -200,7 +200,7 @@ fn require_same_types<'a, 'tcx, M>(tcx: &ty::ctxt<'tcx>,\n                                       msg(),\n                                       ty::type_err_to_str(tcx,\n                                                           terr));\n-            ty::note_and_explain_type_err(tcx, terr);\n+            ty::note_and_explain_type_err(tcx, terr, span);\n             false\n         }\n     }"}, {"sha": "3c8a64eaf7de4411255e54a3859bb7bdb2368a39", "filename": "src/test/compile-fail/issue-24036.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Ftest%2Fcompile-fail%2Fissue-24036.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ebc16c1edbe8560f66238983ffa4b10870dad68/src%2Ftest%2Fcompile-fail%2Fissue-24036.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-24036.rs?ref=4ebc16c1edbe8560f66238983ffa4b10870dad68", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn closure_to_loc() {\n+    let mut x = |c| c + 1;\n+    x = |c| c + 1;\n+    //~^ ERROR mismatched types\n+    //~| NOTE no two closures, even if identical, have the same type\n+    //~| HELP consider boxing your closure and/or using it as a trait object\n+}\n+\n+fn closure_from_match() {\n+    let x = match 1usize {\n+        1 => |c| c + 1,\n+        2 => |c| c - 1,\n+        _ => |c| c - 1\n+    };\n+    //~^^^^^ ERROR match arms have incompatible types\n+    //~| NOTE no two closures, even if identical, have the same type\n+    //~| HELP consider boxing your closure and/or using it as a trait object\n+}\n+\n+fn main() { }"}]}