{"sha": "a0cd46554d850d99f985be911215ac41978533a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwY2Q0NjU1NGQ4NTBkOTlmOTg1YmU5MTEyMTVhYzQxOTc4NTMzYTI=", "commit": {"author": {"name": "Thomas Wickham", "email": "mackwic@gmail.com", "date": "2016-01-31T11:26:15Z"}, "committer": {"name": "Thomas Wickham", "email": "mackwic@gmail.com", "date": "2016-01-31T11:26:15Z"}, "message": " Doc:std::convert: disambiguate traits and keywords", "tree": {"sha": "d129215a66ee6f929843ae4816d78ea7f6445b0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d129215a66ee6f929843ae4816d78ea7f6445b0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0cd46554d850d99f985be911215ac41978533a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0cd46554d850d99f985be911215ac41978533a2", "html_url": "https://github.com/rust-lang/rust/commit/a0cd46554d850d99f985be911215ac41978533a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0cd46554d850d99f985be911215ac41978533a2/comments", "author": {"login": "mackwic", "id": 558091, "node_id": "MDQ6VXNlcjU1ODA5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/558091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mackwic", "html_url": "https://github.com/mackwic", "followers_url": "https://api.github.com/users/mackwic/followers", "following_url": "https://api.github.com/users/mackwic/following{/other_user}", "gists_url": "https://api.github.com/users/mackwic/gists{/gist_id}", "starred_url": "https://api.github.com/users/mackwic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mackwic/subscriptions", "organizations_url": "https://api.github.com/users/mackwic/orgs", "repos_url": "https://api.github.com/users/mackwic/repos", "events_url": "https://api.github.com/users/mackwic/events{/privacy}", "received_events_url": "https://api.github.com/users/mackwic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mackwic", "id": 558091, "node_id": "MDQ6VXNlcjU1ODA5MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/558091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mackwic", "html_url": "https://github.com/mackwic", "followers_url": "https://api.github.com/users/mackwic/followers", "following_url": "https://api.github.com/users/mackwic/following{/other_user}", "gists_url": "https://api.github.com/users/mackwic/gists{/gist_id}", "starred_url": "https://api.github.com/users/mackwic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mackwic/subscriptions", "organizations_url": "https://api.github.com/users/mackwic/orgs", "repos_url": "https://api.github.com/users/mackwic/repos", "events_url": "https://api.github.com/users/mackwic/events{/privacy}", "received_events_url": "https://api.github.com/users/mackwic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cda8e4eaac843471dd33d93d9d5cc892d29cc4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cda8e4eaac843471dd33d93d9d5cc892d29cc4c", "html_url": "https://github.com/rust-lang/rust/commit/6cda8e4eaac843471dd33d93d9d5cc892d29cc4c"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "c207ad16595d199b77ac1a5ac73cda365fc7f2d8", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a0cd46554d850d99f985be911215ac41978533a2/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0cd46554d850d99f985be911215ac41978533a2/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=a0cd46554d850d99f985be911215ac41978533a2", "patch": "@@ -17,13 +17,13 @@\n //! Like many traits, these are often used as bounds for generic functions, to\n //! support arguments of multiple types.\n //!\n-//! - Use `as` for reference-to-reference conversions\n-//! - Use `into` when you want to consume the value\n-//! - `from` is the more flexible way, which can convert values and references\n+//! - Impl the `As*` traits for reference-to-reference conversions\n+//! - Impl the `Into` trait when you want to consume the value in the conversion\n+//! - The `From` trait is the most flexible, usefull for values _and_ references conversions\n //!\n //! As a library writer, you should prefer implementing `From<T>` rather than\n //! `Into<U>`, as `From` provides greater flexibility and offer the equivalent `Into`\n-//! implementation for free thanks to a blanket implementation in the standard library.\n+//! implementation for free, thanks to a blanket implementation in the standard library.\n //!\n //! **Note: these traits must not fail**. If the conversion can fail, you must use a dedicated\n //! method which return an `Option<T>` or a `Result<T, E>`.\n@@ -103,7 +103,7 @@ pub trait AsMut<T: ?Sized> {\n ///\n /// Library writer should not implement directly this trait, but should prefer the implementation\n /// of the `From` trait, which offer greater flexibility and provide the equivalent `Into`\n-/// implementation for free thanks to a blanket implementation in the standard library.\n+/// implementation for free, thanks to a blanket implementation in the standard library.\n ///\n /// # Examples\n ///\n@@ -119,7 +119,7 @@ pub trait AsMut<T: ?Sized> {\n /// is_hello(s);\n /// ```\n ///\n-/// #Generic Impls\n+/// # Generic Impls\n ///\n /// - `From<T> for U` implies `Into<U> for T`\n /// - `into()` is reflexive, which means that `Into<T> for T` is implemented"}]}