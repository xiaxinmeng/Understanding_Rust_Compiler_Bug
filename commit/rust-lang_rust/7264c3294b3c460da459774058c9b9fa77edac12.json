{"sha": "7264c3294b3c460da459774058c9b9fa77edac12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNjRjMzI5NGIzYzQ2MGRhNDU5Nzc0MDU4YzliOWZhNzdlZGFjMTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-01T19:07:09Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-01T19:07:09Z"}, "message": "finer concurrency", "tree": {"sha": "5e6e2c4d50ce167d2b90b50452ffbf9aa05c3b95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e6e2c4d50ce167d2b90b50452ffbf9aa05c3b95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7264c3294b3c460da459774058c9b9fa77edac12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7264c3294b3c460da459774058c9b9fa77edac12", "html_url": "https://github.com/rust-lang/rust/commit/7264c3294b3c460da459774058c9b9fa77edac12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7264c3294b3c460da459774058c9b9fa77edac12/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1954df63364ab07b99f6b6eaf228a14bae61e81e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1954df63364ab07b99f6b6eaf228a14bae61e81e", "html_url": "https://github.com/rust-lang/rust/commit/1954df63364ab07b99f6b6eaf228a14bae61e81e"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "c343ac57bed933dcf26b2033612eac18a49b1862", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7264c3294b3c460da459774058c9b9fa77edac12/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7264c3294b3c460da459774058c9b9fa77edac12/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=7264c3294b3c460da459774058c9b9fa77edac12", "patch": "@@ -12,6 +12,7 @@ unicode-xid = \"0.1.0\"\n text_unit = \"0.1.2\"\n itertools = \"0.7.5\"\n drop_bomb = \"0.1.4\"\n+parking_lot = \"0.6.0\"\n \n [dev-dependencies]\n testutils = { path = \"./tests/testutils\" }"}, {"sha": "94d843db38b4e6ba44430cf4742a33b218c63b19", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7264c3294b3c460da459774058c9b9fa77edac12/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7264c3294b3c460da459774058c9b9fa77edac12/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=7264c3294b3c460da459774058c9b9fa77edac12", "patch": "@@ -24,6 +24,7 @@ extern crate itertools;\n extern crate text_unit;\n extern crate unicode_xid;\n extern crate drop_bomb;\n+extern crate parking_lot;\n \n pub mod algo;\n pub mod ast;"}, {"sha": "e124fc76eee73d6b7efee6c0e4b062c2f06e9436", "filename": "src/yellow/red.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7264c3294b3c460da459774058c9b9fa77edac12/src%2Fyellow%2Fred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7264c3294b3c460da459774058c9b9fa77edac12/src%2Fyellow%2Fred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fyellow%2Fred.rs?ref=7264c3294b3c460da459774058c9b9fa77edac12", "patch": "@@ -1,4 +1,5 @@\n-use std::{ptr, sync::RwLock};\n+use std::ptr;\n+use parking_lot::RwLock;\n use {yellow::GreenNode, TextUnit};\n \n #[derive(Debug)]\n@@ -66,20 +67,20 @@ impl RedNode {\n         if idx >= self.n_children() {\n             return None;\n         }\n-        match &self.children.read().unwrap()[idx] {\n+        match &self.children.read()[idx] {\n             Some(child) => return Some(child.into()),\n             None => (),\n         }\n-        let mut children = self.children.write().unwrap();\n+        let green_children = self.green.children();\n+        let start_offset = self.start_offset()\n+            + green_children[..idx]\n+            .iter()\n+            .map(|x| x.text_len())\n+            .sum::<TextUnit>();\n+        let child =\n+            RedNode::new_child(green_children[idx].clone(), self.into(), start_offset, idx);\n+        let mut children = self.children.write();\n         if children[idx].is_none() {\n-            let green_children = self.green.children();\n-            let start_offset = self.start_offset()\n-                + green_children[..idx]\n-                    .iter()\n-                    .map(|x| x.text_len())\n-                    .sum::<TextUnit>();\n-            let child =\n-                RedNode::new_child(green_children[idx].clone(), self.into(), start_offset, idx);\n             children[idx] = Some(child)\n         }\n         Some(children[idx].as_ref().unwrap().into())"}]}