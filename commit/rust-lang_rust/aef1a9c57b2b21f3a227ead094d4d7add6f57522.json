{"sha": "aef1a9c57b2b21f3a227ead094d4d7add6f57522", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZjFhOWM1N2IyYjIxZjNhMjI3ZWFkMDk0ZDRkN2FkZDZmNTc1MjI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-21T03:39:15Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-21T03:39:15Z"}, "message": "rustc: Prevant an out of bounds access in typeck\n\nCloses #7092", "tree": {"sha": "53a5795f2e8ab8e9691e0536cba52e758655c9ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53a5795f2e8ab8e9691e0536cba52e758655c9ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aef1a9c57b2b21f3a227ead094d4d7add6f57522", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aef1a9c57b2b21f3a227ead094d4d7add6f57522", "html_url": "https://github.com/rust-lang/rust/commit/aef1a9c57b2b21f3a227ead094d4d7add6f57522", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aef1a9c57b2b21f3a227ead094d4d7add6f57522/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd88e2b7291170d0dac536130307a8cc680c8294", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd88e2b7291170d0dac536130307a8cc680c8294", "html_url": "https://github.com/rust-lang/rust/commit/fd88e2b7291170d0dac536130307a8cc680c8294"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "9e8edfccd5b5fd0358c38f83e1b65eb8a4f6efe8", "filename": "src/librustc/middle/typeck/check/method.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/aef1a9c57b2b21f3a227ead094d4d7add6f57522/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef1a9c57b2b21f3a227ead094d4d7add6f57522/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=aef1a9c57b2b21f3a227ead094d4d7add6f57522", "patch": "@@ -555,17 +555,13 @@ impl<'a> LookupContext<'a> {\n                                            param_ty: param_ty) {\n         debug!(\"push_inherent_candidates_from_param(param_ty={:?})\",\n                param_ty);\n-        self.push_inherent_candidates_from_bounds(\n-            rcvr_ty,\n-            self.fcx\n-                .inh\n-                .param_env\n-                .type_param_bounds\n-                .get(param_ty.idx)\n-                .trait_bounds\n-                .as_slice(),\n-            restrict_to,\n-            param_numbered(param_ty.idx));\n+        let i = param_ty.idx;\n+        match self.fcx.inh.param_env.type_param_bounds.as_slice().get(i) {\n+            Some(b) => self.push_inherent_candidates_from_bounds(\n+                            rcvr_ty, b.trait_bounds.as_slice(), restrict_to,\n+                            param_numbered(param_ty.idx)),\n+            None => {}\n+        }\n     }\n \n "}, {"sha": "bcecab80758103a54d9809c24dbcefef93fb087f", "filename": "src/test/compile-fail/issue-7092.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/aef1a9c57b2b21f3a227ead094d4d7add6f57522/src%2Ftest%2Fcompile-fail%2Fissue-7092.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef1a9c57b2b21f3a227ead094d4d7add6f57522/src%2Ftest%2Fcompile-fail%2Fissue-7092.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7092.rs?ref=aef1a9c57b2b21f3a227ead094d4d7add6f57522", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Whatever {\n+}\n+\n+fn foo(x: Whatever) {\n+    match x {\n+        Some(field) => field.access(),\n+        //~^ ERROR: mismatched types: expected `Whatever` but found\n+        //~^^ ERROR: does not implement any method in scope named `access`\n+    }\n+}\n+\n+fn main(){}"}]}