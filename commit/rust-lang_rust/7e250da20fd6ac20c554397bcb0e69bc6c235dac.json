{"sha": "7e250da20fd6ac20c554397bcb0e69bc6c235dac", "node_id": "C_kwDOAAsO6NoAKDdlMjUwZGEyMGZkNmFjMjBjNTU0Mzk3YmNiMGU2OWJjNmMyMzVkYWM", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-09-22T10:34:23Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-09-23T12:27:34Z"}, "message": "rename Unevaluated to UnevaluatedConst", "tree": {"sha": "801dfae3b1810a8a15e86d2b6dc19bffc9738b25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/801dfae3b1810a8a15e86d2b6dc19bffc9738b25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e250da20fd6ac20c554397bcb0e69bc6c235dac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e250da20fd6ac20c554397bcb0e69bc6c235dac", "html_url": "https://github.com/rust-lang/rust/commit/7e250da20fd6ac20c554397bcb0e69bc6c235dac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e250da20fd6ac20c554397bcb0e69bc6c235dac/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c5882018f7f686a5a0b3a631cad33503987e5aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c5882018f7f686a5a0b3a631cad33503987e5aa", "html_url": "https://github.com/rust-lang/rust/commit/3c5882018f7f686a5a0b3a631cad33503987e5aa"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e12805b093cc7487f9e0774fdc531fe4be0c18a8", "filename": "src/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e250da20fd6ac20c554397bcb0e69bc6c235dac/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e250da20fd6ac20c554397bcb0e69bc6c235dac/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=7e250da20fd6ac20c554397bcb0e69bc6c235dac", "patch": "@@ -109,7 +109,7 @@ pub(crate) fn codegen_constant<'tcx>(\n ) -> CValue<'tcx> {\n     let (const_val, ty) = match fx.monomorphize(constant.literal) {\n         ConstantKind::Ty(const_) => unreachable!(\"{:?}\", const_),\n-        ConstantKind::Unevaluated(mir::Unevaluated { def, substs, promoted }, ty)\n+        ConstantKind::Unevaluated(mir::UnevaluatedConst { def, substs, promoted }, ty)\n             if fx.tcx.is_static(def.did) =>\n         {\n             assert!(substs.is_empty());"}]}