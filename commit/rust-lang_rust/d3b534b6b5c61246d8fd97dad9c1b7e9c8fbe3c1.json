{"sha": "d3b534b6b5c61246d8fd97dad9c1b7e9c8fbe3c1", "node_id": "C_kwDOAAsO6NoAKGQzYjUzNGI2YjVjNjEyNDZkOGZkOTdkYWQ5YzFiN2U5YzhmYmUzYzE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-01-27T15:09:39Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-02-02T15:40:12Z"}, "message": "manual formatting", "tree": {"sha": "d6d3edf7592c552d879d367c8eccd8a1eb9ca43c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6d3edf7592c552d879d367c8eccd8a1eb9ca43c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3b534b6b5c61246d8fd97dad9c1b7e9c8fbe3c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3b534b6b5c61246d8fd97dad9c1b7e9c8fbe3c1", "html_url": "https://github.com/rust-lang/rust/commit/d3b534b6b5c61246d8fd97dad9c1b7e9c8fbe3c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3b534b6b5c61246d8fd97dad9c1b7e9c8fbe3c1/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8c29b3e28b3f22a3ec6e8efc416b53cc044a882", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8c29b3e28b3f22a3ec6e8efc416b53cc044a882", "html_url": "https://github.com/rust-lang/rust/commit/d8c29b3e28b3f22a3ec6e8efc416b53cc044a882"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "44e3da11826cd00c08d92f99a97c907dcf8bd72e", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3b534b6b5c61246d8fd97dad9c1b7e9c8fbe3c1/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b534b6b5c61246d8fd97dad9c1b7e9c8fbe3c1/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=d3b534b6b5c61246d8fd97dad9c1b7e9c8fbe3c1", "patch": "@@ -1654,7 +1654,7 @@ impl<'tcx> LateLintPass<'tcx> for TrivialConstraints {\n                     Coerce(..) |\n                     ConstEvaluatable(..) |\n                     ConstEquate(..) |\n-                OpaqueType(..) |\n+                    OpaqueType(..) |\n                     TypeWellFormedFromEnv(..) => continue,\n                 };\n                 if predicate.is_global() {"}]}