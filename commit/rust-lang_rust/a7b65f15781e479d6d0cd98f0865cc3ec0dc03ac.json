{"sha": "a7b65f15781e479d6d0cd98f0865cc3ec0dc03ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YjY1ZjE1NzgxZTQ3OWQ2ZDBjZDk4ZjA4NjVjYzNlYzBkYzAzYWM=", "commit": {"author": {"name": "Giang Nguyen", "email": "nguyengiangdev@gmail.com", "date": "2017-01-16T09:58:07Z"}, "committer": {"name": "Son", "email": "leson.phung@gmail.com", "date": "2017-02-02T11:19:41Z"}, "message": "Add doc field init shorthand", "tree": {"sha": "06fbe1bda97c711b05cfb5ab795593a90204a69d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06fbe1bda97c711b05cfb5ab795593a90204a69d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7b65f15781e479d6d0cd98f0865cc3ec0dc03ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7b65f15781e479d6d0cd98f0865cc3ec0dc03ac", "html_url": "https://github.com/rust-lang/rust/commit/a7b65f15781e479d6d0cd98f0865cc3ec0dc03ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7b65f15781e479d6d0cd98f0865cc3ec0dc03ac/comments", "author": null, "committer": {"login": "phungleson", "id": 93457, "node_id": "MDQ6VXNlcjkzNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/93457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phungleson", "html_url": "https://github.com/phungleson", "followers_url": "https://api.github.com/users/phungleson/followers", "following_url": "https://api.github.com/users/phungleson/following{/other_user}", "gists_url": "https://api.github.com/users/phungleson/gists{/gist_id}", "starred_url": "https://api.github.com/users/phungleson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phungleson/subscriptions", "organizations_url": "https://api.github.com/users/phungleson/orgs", "repos_url": "https://api.github.com/users/phungleson/repos", "events_url": "https://api.github.com/users/phungleson/events{/privacy}", "received_events_url": "https://api.github.com/users/phungleson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3388855443ccfdce427dbbbf8c3d7c3c78bd7b81", "url": "https://api.github.com/repos/rust-lang/rust/commits/3388855443ccfdce427dbbbf8c3d7c3c78bd7b81", "html_url": "https://github.com/rust-lang/rust/commit/3388855443ccfdce427dbbbf8c3d7c3c78bd7b81"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "5a13746d0a87f2ad2a8ccdab8ff6db7769940704", "filename": "src/doc/book/structs.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a7b65f15781e479d6d0cd98f0865cc3ec0dc03ac/src%2Fdoc%2Fbook%2Fstructs.md", "raw_url": "https://github.com/rust-lang/rust/raw/a7b65f15781e479d6d0cd98f0865cc3ec0dc03ac/src%2Fdoc%2Fbook%2Fstructs.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fstructs.md?ref=a7b65f15781e479d6d0cd98f0865cc3ec0dc03ac", "patch": "@@ -117,6 +117,28 @@ fn main() {\n }\n ```\n \n+We can initializing a data structure (struct, enum, union) with named fields, by writing `fieldname` as a shorthand for `fieldname: fieldname`. This allows a compact syntax for initialization, with less duplication:\n+\n+```\n+#![feature(field_init_shorthand)]\n+\n+#[derive(Debug)]\n+struct Person<'a> {\n+    name: &'a str,\n+    age: u8\n+}\n+\n+fn main() {\n+    // Create struct with field init shorthand\n+    let name = \"Peter\";\n+    let age = 27;\n+    let peter = Person { name, age };\n+    \n+    // Print debug struct\n+    println!(\"{:?}\", peter);\n+}\n+```\n+\n # Update syntax\n \n A `struct` can include `..` to indicate that you want to use a copy of some"}]}