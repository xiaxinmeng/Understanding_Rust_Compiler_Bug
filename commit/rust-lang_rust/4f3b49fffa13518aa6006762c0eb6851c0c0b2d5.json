{"sha": "4f3b49fffa13518aa6006762c0eb6851c0c0b2d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmM2I0OWZmZmExMzUxOGFhNjAwNjc2MmMwZWI2ODUxYzBjMGIyZDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-18T20:50:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-18T20:50:01Z"}, "message": "Auto merge of #84767 - scottmcm:try_trait_actual, r=lcnr\n\nImplement the new desugaring from `try_trait_v2`\n\n~~Currently blocked on https://github.com/rust-lang/rust/issues/84782, which has a PR in https://github.com/rust-lang/rust/pull/84811~~ Rebased atop that fix.\n\n`try_trait_v2` tracking issue: https://github.com/rust-lang/rust/issues/84277\n\nUnfortunately this is already touching a ton of things, so if you have suggestions for good ways to split it up, I'd be happy to hear them.  (The combination between the use in the library, the compiler changes, the corresponding diagnostic differences, even MIR tests mean that I don't really have a great plan for it other than trying to have decently-readable commits.\n\nr? `@ghost`\n\n~~(This probably shouldn't go in during the last week before the fork anyway.)~~ Fork happened.", "tree": {"sha": "bb391eec3383673103ca43f9e027d144cbcb35c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb391eec3383673103ca43f9e027d144cbcb35c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f3b49fffa13518aa6006762c0eb6851c0c0b2d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f3b49fffa13518aa6006762c0eb6851c0c0b2d5", "html_url": "https://github.com/rust-lang/rust/commit/4f3b49fffa13518aa6006762c0eb6851c0c0b2d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f3b49fffa13518aa6006762c0eb6851c0c0b2d5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c086676657b7f7e422d0a7c0fed044e2d7251b61", "url": "https://api.github.com/repos/rust-lang/rust/commits/c086676657b7f7e422d0a7c0fed044e2d7251b61", "html_url": "https://github.com/rust-lang/rust/commit/c086676657b7f7e422d0a7c0fed044e2d7251b61"}, {"sha": "300f628111d1203ce7d59096c0a1def82116fd8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/300f628111d1203ce7d59096c0a1def82116fd8f", "html_url": "https://github.com/rust-lang/rust/commit/300f628111d1203ce7d59096c0a1def82116fd8f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d8417c7dc70d80a09ff72ec86258b13c430dab48", "filename": "clippy_lints/src/needless_question_mark.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f3b49fffa13518aa6006762c0eb6851c0c0b2d5/clippy_lints%2Fsrc%2Fneedless_question_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3b49fffa13518aa6006762c0eb6851c0c0b2d5/clippy_lints%2Fsrc%2Fneedless_question_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_question_mark.rs?ref=4f3b49fffa13518aa6006762c0eb6851c0c0b2d5", "patch": "@@ -147,7 +147,7 @@ fn is_some_or_ok_call<'a>(cx: &'a LateContext<'_>, expr: &'a Expr<'_>) -> Option\n         if let ExprKind::Call(called, args) = &inner_expr_with_q.kind;\n         if args.len() == 1;\n \n-        if let ExprKind::Path(QPath::LangItem(LangItem::TryIntoResult, _)) = &called.kind;\n+        if let ExprKind::Path(QPath::LangItem(LangItem::TryTraitBranch, _)) = &called.kind;\n         then {\n             // Extract inner expr type from match argument generated by\n             // question mark operator"}, {"sha": "f2ba2b2ecf63976a7781f118cdf8ecd7566c1e4b", "filename": "clippy_lints/src/try_err.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f3b49fffa13518aa6006762c0eb6851c0c0b2d5/clippy_lints%2Fsrc%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3b49fffa13518aa6006762c0eb6851c0c0b2d5/clippy_lints%2Fsrc%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftry_err.rs?ref=4f3b49fffa13518aa6006762c0eb6851c0c0b2d5", "patch": "@@ -64,7 +64,7 @@ impl<'tcx> LateLintPass<'tcx> for TryErr {\n             if let ExprKind::Match(match_arg, _, MatchSource::TryDesugar) = expr.kind;\n             if let ExprKind::Call(match_fun, try_args) = match_arg.kind;\n             if let ExprKind::Path(ref match_fun_path) = match_fun.kind;\n-            if matches!(match_fun_path, QPath::LangItem(LangItem::TryIntoResult, _));\n+            if matches!(match_fun_path, QPath::LangItem(LangItem::TryTraitBranch, _));\n             if let Some(try_arg) = try_args.get(0);\n             if let ExprKind::Call(err_fun, err_args) = try_arg.kind;\n             if let Some(err_arg) = err_args.get(0);"}, {"sha": "c27a6d4e347b5893f6c7f2b6b07ca3e6a51a0c47", "filename": "clippy_lints/src/unused_io_amount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f3b49fffa13518aa6006762c0eb6851c0c0b2d5/clippy_lints%2Fsrc%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3b49fffa13518aa6006762c0eb6851c0c0b2d5/clippy_lints%2Fsrc%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_io_amount.rs?ref=4f3b49fffa13518aa6006762c0eb6851c0c0b2d5", "patch": "@@ -45,7 +45,7 @@ impl<'tcx> LateLintPass<'tcx> for UnusedIoAmount {\n                 if let hir::ExprKind::Call(func, args) = res.kind {\n                     if matches!(\n                         func.kind,\n-                        hir::ExprKind::Path(hir::QPath::LangItem(hir::LangItem::TryIntoResult, _))\n+                        hir::ExprKind::Path(hir::QPath::LangItem(hir::LangItem::TryTraitBranch, _))\n                     ) {\n                         check_map_error(cx, &args[0], expr);\n                     }"}]}