{"sha": "8d990c3aafed9bedd0a3619db13effa891b2c068", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkOTkwYzNhYWZlZDliZWRkMGEzNjE5ZGIxM2VmZmE4OTFiMmMwNjg=", "commit": {"author": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2013-11-23T13:42:51Z"}, "committer": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2013-11-24T10:08:40Z"}, "message": "std::libc: Remove TCHAR types", "tree": {"sha": "ccf0fe1bdf1a9a36b34bb07369a69c21cede3c07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccf0fe1bdf1a9a36b34bb07369a69c21cede3c07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d990c3aafed9bedd0a3619db13effa891b2c068", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d990c3aafed9bedd0a3619db13effa891b2c068", "html_url": "https://github.com/rust-lang/rust/commit/8d990c3aafed9bedd0a3619db13effa891b2c068", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d990c3aafed9bedd0a3619db13effa891b2c068/comments", "author": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "738eb9b930825ad6b4974dd8b645ec753231161c", "url": "https://api.github.com/repos/rust-lang/rust/commits/738eb9b930825ad6b4974dd8b645ec753231161c", "html_url": "https://github.com/rust-lang/rust/commit/738eb9b930825ad6b4974dd8b645ec753231161c"}], "stats": {"total": 37, "additions": 17, "deletions": 20}, "files": [{"sha": "344ab04605d77b1e1995a01e149452a3ec557176", "filename": "src/libstd/libc.rs", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/8d990c3aafed9bedd0a3619db13effa891b2c068/src%2Flibstd%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d990c3aafed9bedd0a3619db13effa891b2c068/src%2Flibstd%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flibc.rs?ref=8d990c3aafed9bedd0a3619db13effa891b2c068", "patch": "@@ -732,12 +732,12 @@ pub mod types {\n \n                 pub type LPCWSTR = *WCHAR;\n                 pub type LPCSTR = *CHAR;\n-                pub type LPCTSTR = *CHAR;\n-                pub type LPTCH = *CHAR;\n \n                 pub type LPWSTR = *mut WCHAR;\n                 pub type LPSTR = *mut CHAR;\n-                pub type LPTSTR = *mut CHAR;\n+\n+                pub type LPWCH = *mut WCHAR;\n+                pub type LPCH = *mut CHAR;\n \n                 // Not really, but opaque to us.\n                 pub type LPSECURITY_ATTRIBUTES = LPVOID;\n@@ -760,9 +760,9 @@ pub mod types {\n \n                 pub struct STARTUPINFO {\n                     cb: DWORD,\n-                    lpReserved: LPTSTR,\n-                    lpDesktop: LPTSTR,\n-                    lpTitle: LPTSTR,\n+                    lpReserved: LPWSTR,\n+                    lpDesktop: LPWSTR,\n+                    lpTitle: LPWSTR,\n                     dwX: DWORD,\n                     dwY: DWORD,\n                     dwXSize: DWORD,\n@@ -908,12 +908,9 @@ pub mod types {\n \n                 pub type LPCWSTR = *WCHAR;\n                 pub type LPCSTR = *CHAR;\n-                pub type LPCTSTR = *CHAR;\n-                pub type LPTCH = *CHAR;\n \n                 pub type LPWSTR = *mut WCHAR;\n                 pub type LPSTR = *mut CHAR;\n-                pub type LPTSTR = *mut CHAR;\n \n                 // Not really, but opaque to us.\n                 pub type LPSECURITY_ATTRIBUTES = LPVOID;\n@@ -936,9 +933,9 @@ pub mod types {\n \n                 pub struct STARTUPINFO {\n                     cb: DWORD,\n-                    lpReserved: LPTSTR,\n-                    lpDesktop: LPTSTR,\n-                    lpTitle: LPTSTR,\n+                    lpReserved: LPWSTR,\n+                    lpDesktop: LPWSTR,\n+                    lpTitle: LPWSTR,\n                     dwX: DWORD,\n                     dwY: DWORD,\n                     dwXSize: DWORD,\n@@ -3515,8 +3512,8 @@ pub mod funcs {\n         pub mod kernel32 {\n             use libc::types::os::arch::c95::{c_uint};\n             use libc::types::os::arch::extra::{BOOL, DWORD, SIZE_T, HMODULE};\n-            use libc::types::os::arch::extra::{LPCWSTR, LPWSTR, LPCTSTR,\n-                                               LPTSTR, LPTCH, LPDWORD, LPVOID,\n+            use libc::types::os::arch::extra::{LPCWSTR, LPWSTR, LPCSTR, LPSTR, LPCH,\n+                                               LPDWORD, LPVOID,\n                                                LPCVOID, LPOVERLAPPED};\n             use libc::types::os::arch::extra::{LPSECURITY_ATTRIBUTES, LPSTARTUPINFO,\n                                                LPPROCESS_INFORMATION,\n@@ -3532,8 +3529,8 @@ pub mod funcs {\n                                                -> DWORD;\n                 pub fn SetEnvironmentVariableW(n: LPCWSTR, v: LPCWSTR)\n                                                -> BOOL;\n-                pub fn GetEnvironmentStringsA() -> LPTCH;\n-                pub fn FreeEnvironmentStringsA(env_ptr: LPTCH) -> BOOL;\n+                pub fn GetEnvironmentStringsA() -> LPCH;\n+                pub fn FreeEnvironmentStringsA(env_ptr: LPCH) -> BOOL;\n                 pub fn GetModuleFileNameW(hModule: HMODULE,\n                                           lpFilename: LPWSTR,\n                                           nSize: DWORD)\n@@ -3572,16 +3569,16 @@ pub mod funcs {\n                                    dwProcessId: DWORD)\n                                    -> HANDLE;\n                 pub fn GetCurrentProcess() -> HANDLE;\n-                pub fn CreateProcessA(lpApplicationName: LPCTSTR,\n-                                      lpCommandLine: LPTSTR,\n+                pub fn CreateProcessA(lpApplicationName: LPCSTR,\n+                                      lpCommandLine: LPSTR,\n                                       lpProcessAttributes:\n                                       LPSECURITY_ATTRIBUTES,\n                                       lpThreadAttributes:\n                                       LPSECURITY_ATTRIBUTES,\n                                       bInheritHandles: BOOL,\n                                       dwCreationFlags: DWORD,\n                                       lpEnvironment: LPVOID,\n-                                      lpCurrentDirectory: LPCTSTR,\n+                                      lpCurrentDirectory: LPCSTR,\n                                       lpStartupInfo: LPSTARTUPINFO,\n                                       lpProcessInformation:\n                                       LPPROCESS_INFORMATION)\n@@ -3621,7 +3618,7 @@ pub mod funcs {\n                                           flProtect: DWORD,\n                                           dwMaximumSizeHigh: DWORD,\n                                           dwMaximumSizeLow: DWORD,\n-                                          lpName: LPCTSTR)\n+                                          lpName: LPCWSTR)\n                                           -> HANDLE;\n                 pub fn MapViewOfFile(hFileMappingObject: HANDLE,\n                                      dwDesiredAccess: DWORD,"}]}