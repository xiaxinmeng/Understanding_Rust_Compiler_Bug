{"sha": "a6d3e57dca68fde4effdda3e4ae2887aa535fcd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZDNlNTdkY2E2OGZkZTRlZmZkZGEzZTRhZTI4ODdhYTUzNWZjZDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-06T04:56:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-06T04:56:53Z"}, "message": "auto merge of #10900 : yichoi/rust/mac_android_cross, r=alexcrichton\n\nthis patch should be followed by https://github.com/alexcrichton/libuv/pull/2", "tree": {"sha": "3a4f3b004615b1c4faa7c6503aa6f1e9396da1d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a4f3b004615b1c4faa7c6503aa6f1e9396da1d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6d3e57dca68fde4effdda3e4ae2887aa535fcd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6d3e57dca68fde4effdda3e4ae2887aa535fcd6", "html_url": "https://github.com/rust-lang/rust/commit/a6d3e57dca68fde4effdda3e4ae2887aa535fcd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6d3e57dca68fde4effdda3e4ae2887aa535fcd6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdcf28dd30d0f8505deae147e1dfe21120a3b8f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdcf28dd30d0f8505deae147e1dfe21120a3b8f3", "html_url": "https://github.com/rust-lang/rust/commit/cdcf28dd30d0f8505deae147e1dfe21120a3b8f3"}, {"sha": "635002a3503b1020433f729dbb5b37e30a691813", "url": "https://api.github.com/repos/rust-lang/rust/commits/635002a3503b1020433f729dbb5b37e30a691813", "html_url": "https://github.com/rust-lang/rust/commit/635002a3503b1020433f729dbb5b37e30a691813"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "cc96bea9fa1b14bd6b02c5287eb46d99b0da31b2", "filename": "src/librustc/back/archive.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6d3e57dca68fde4effdda3e4ae2887aa535fcd6/src%2Flibrustc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d3e57dca68fde4effdda3e4ae2887aa535fcd6/src%2Flibrustc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Farchive.rs?ref=a6d3e57dca68fde4effdda3e4ae2887aa535fcd6", "patch": "@@ -10,6 +10,7 @@\n \n //! A helper class for dealing with static archives\n \n+use back::link::{get_ar_prog};\n use driver::session::Session;\n use metadata::filesearch;\n use lib::llvm::{ArchiveRef, llvm};\n@@ -37,7 +38,8 @@ pub struct ArchiveRO {\n \n fn run_ar(sess: Session, args: &str, cwd: Option<&Path>,\n         paths: &[&Path]) -> ProcessOutput {\n-    let ar = sess.opts.ar.clone().unwrap_or_else(|| ~\"ar\");\n+    let ar = get_ar_prog(sess);\n+\n     let mut args = ~[args.to_owned()];\n     let mut paths = paths.iter().map(|p| p.as_str().unwrap().to_owned());\n     args.extend(&mut paths);"}, {"sha": "a73c3cf6b5ca2146d770498532c9d9c16bd68b44", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a6d3e57dca68fde4effdda3e4ae2887aa535fcd6/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d3e57dca68fde4effdda3e4ae2887aa535fcd6/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=a6d3e57dca68fde4effdda3e4ae2887aa535fcd6", "patch": "@@ -723,16 +723,39 @@ pub fn get_cc_prog(sess: Session) -> ~str {\n     // It would be flexible to use cc (system's default C compiler)\n     // instead of hard-coded gcc.\n     // For win32, there is no cc command, so we add a condition to make it use gcc.\n+    match sess.targ_cfg.os {\n+        abi::OsWin32 => return ~\"gcc\",\n+        _ => {},\n+    }\n+\n+    get_system_tool(sess, \"cc\")\n+}\n+\n+pub fn get_ar_prog(sess: Session) -> ~str {\n+    match sess.opts.ar {\n+        Some(ref ar) => return ar.to_owned(),\n+        None => {}\n+    }\n+\n+    get_system_tool(sess, \"ar\")\n+}\n+\n+fn get_system_tool(sess: Session, tool: &str) -> ~str {\n     match sess.targ_cfg.os {\n         abi::OsAndroid => match sess.opts.android_cross_path {\n-            Some(ref path) => format!(\"{}/bin/arm-linux-androideabi-gcc\", *path),\n+            Some(ref path) => {\n+                let tool_str = match tool {\n+                    \"cc\" => \"gcc\",\n+                    _ => tool\n+                };\n+                format!(\"{}/bin/arm-linux-androideabi-{}\", *path, tool_str)\n+            }\n             None => {\n-                sess.fatal(\"need Android NDK path for linking \\\n-                            (--android-cross-path)\")\n+                sess.fatal(format!(\"need Android NDK path for the '{}' tool \\\n+                                    (--android-cross-path)\", tool))\n             }\n         },\n-        abi::OsWin32 => ~\"gcc\",\n-        _ => ~\"cc\",\n+        _ => tool.to_owned(),\n     }\n }\n "}]}