{"sha": "d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YzUyYmZiMTcwOGJmMWM1M2VhMmZjNzIyYWE0ZDk3NjI5ODJlOTA=", "commit": {"author": {"name": "Clint Frederickson", "email": "clint.frederickson@ironcorelabs.com", "date": "2019-02-06T15:42:21Z"}, "committer": {"name": "Clint Frederickson", "email": "clint.frederickson@ironcorelabs.com", "date": "2019-02-06T15:42:21Z"}, "message": "error output updated by ./x.py test --stage 1 src/test/ui --incremental --bless", "tree": {"sha": "354ba0eb9eee2826379f4a54bd61ff0d846ceccd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/354ba0eb9eee2826379f4a54bd61ff0d846ceccd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "html_url": "https://github.com/rust-lang/rust/commit/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/comments", "author": {"login": "clintfred", "id": 19213143, "node_id": "MDQ6VXNlcjE5MjEzMTQz", "avatar_url": "https://avatars.githubusercontent.com/u/19213143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintfred", "html_url": "https://github.com/clintfred", "followers_url": "https://api.github.com/users/clintfred/followers", "following_url": "https://api.github.com/users/clintfred/following{/other_user}", "gists_url": "https://api.github.com/users/clintfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintfred/subscriptions", "organizations_url": "https://api.github.com/users/clintfred/orgs", "repos_url": "https://api.github.com/users/clintfred/repos", "events_url": "https://api.github.com/users/clintfred/events{/privacy}", "received_events_url": "https://api.github.com/users/clintfred/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clintfred", "id": 19213143, "node_id": "MDQ6VXNlcjE5MjEzMTQz", "avatar_url": "https://avatars.githubusercontent.com/u/19213143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintfred", "html_url": "https://github.com/clintfred", "followers_url": "https://api.github.com/users/clintfred/followers", "following_url": "https://api.github.com/users/clintfred/following{/other_user}", "gists_url": "https://api.github.com/users/clintfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintfred/subscriptions", "organizations_url": "https://api.github.com/users/clintfred/orgs", "repos_url": "https://api.github.com/users/clintfred/repos", "events_url": "https://api.github.com/users/clintfred/events{/privacy}", "received_events_url": "https://api.github.com/users/clintfred/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a15916b245b9a9d92ee77e3a995ff6bfd6c502fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a15916b245b9a9d92ee77e3a995ff6bfd6c502fc", "html_url": "https://github.com/rust-lang/rust/commit/a15916b245b9a9d92ee77e3a995ff6bfd6c502fc"}], "stats": {"total": 76, "additions": 38, "deletions": 38}, "files": [{"sha": "71b4dbe2aa0c9a4470a77b77e0c2e7fd6431ed23", "filename": "src/test/ui/borrowck/borrowck-asm.mir.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-asm.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-asm.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-asm.mir.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -8,7 +8,7 @@ LL |             asm!(\"nop\" : : \"r\"(x));\n    |                                - value moved here\n LL |         }\n LL |         let z = x;  //[ast]~ ERROR use of moved value: `x`\n-   |                 ^ value used here after move\n+   |                 ^ value used here after partial move\n \n error[E0503]: cannot use `x` because it was mutably borrowed\n   --> $DIR/borrowck-asm.rs:35:32\n@@ -71,7 +71,7 @@ LL |         let x = &mut 2;\n    |             - move occurs because `x` has type `&mut i32`, which does not implement the `Copy` trait\n LL |         unsafe {\n LL |             asm!(\"nop\" : : \"r\"(x), \"r\"(x) );    //[ast]~ ERROR use of moved value\n-   |                                -       ^ value used here after move\n+   |                                -       ^ value used here after partial move\n    |                                |\n    |                                value moved here\n "}, {"sha": "52cb98333ac2e5a12cd0b3b5342f5e98dfebbf34", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.mir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.mir.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -367,7 +367,7 @@ error[E0382]: use of moved value: `x`\n LL |                 drop(x);\n    |                      - value moved here\n LL |                 drop(x); //[ast]~ ERROR use of moved value: `x`\n-   |                      ^ value used here after move\n+   |                      ^ value used here after partial move\n    |\n    = note: move occurs because `x` has type `std::vec::Vec<i32>`, which does not implement the `Copy` trait\n "}, {"sha": "c2db8b5830f55815a2ab27c6bc165643ce0ed000", "filename": "src/test/ui/borrowck/borrowck-drop-from-guard.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-drop-from-guard.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-drop-from-guard.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-drop-from-guard.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -8,7 +8,7 @@ LL |         Some(_) if { drop(my_str); false } => {}\n    |                           ------ value moved here\n LL |         Some(_) => {}\n LL |         None => { foo(my_str); } //~ ERROR [E0382]\n-   |                       ^^^^^^ value used here after move\n+   |                       ^^^^^^ value used here after partial move\n \n error: aborting due to previous error\n "}, {"sha": "d0105e311bc692d69613f182432bc0bacb250319", "filename": "src/test/ui/borrowck/borrowck-issue-48962.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-issue-48962.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-issue-48962.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-issue-48962.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -6,7 +6,7 @@ LL |     let mut src = &mut node;\n LL |     {src};\n    |      --- value moved here\n LL |     src.next = None; //~ ERROR use of moved value: `src` [E0382]\n-   |     ^^^^^^^^ value used here after move\n+   |     ^^^^^^^^ value used here after partial move\n \n error[E0382]: use of moved value: `src`\n   --> $DIR/borrowck-issue-48962.rs:22:5\n@@ -16,7 +16,7 @@ LL |     let mut src = &mut (22, 44);\n LL |     {src};\n    |      --- value moved here\n LL |     src.0 = 66; //~ ERROR use of moved value: `src` [E0382]\n-   |     ^^^^^^^^^^ value used here after move\n+   |     ^^^^^^^^^^ value used here after partial move\n \n error: aborting due to 2 previous errors\n "}, {"sha": "e362fcb7d54cd9b1be148a4642c31168692154aa", "filename": "src/test/ui/borrowck/borrowck-move-moved-value-into-closure.mir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-moved-value-into-closure.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-moved-value-into-closure.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-moved-value-into-closure.mir.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -11,7 +11,7 @@ LL |     call_f(move|| { *t + 1 });\n LL |     call_f(move|| { *t + 1 }); //[ast]~ ERROR capture of moved value\n    |            ^^^^^^    - use occurs due to use in closure\n    |            |\n-   |            value used here after move\n+   |            value used here after partial move\n \n error: aborting due to previous error\n "}, {"sha": "e366d7b95c36865abd3db3094c294b542f5b7625", "filename": "src/test/ui/borrowck/borrowck-move-out-from-array.mir.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-from-array.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-from-array.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-from-array.mir.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -4,7 +4,7 @@ error[E0382]: use of moved value: `a[..]`\n LL |     let [_, _x] = a;\n    |             -- value moved here\n LL |     let [.., _y] = a; //[ast]~ ERROR [E0382]\n-   |              ^^ value used here after move\n+   |              ^^ value used here after partial move\n    |\n    = note: move occurs because `a[..]` has type `std::boxed::Box<i32>`, which does not implement the `Copy` trait\n \n@@ -14,7 +14,7 @@ error[E0382]: use of moved value: `a[..]`\n LL |     let [_x, _] = a;\n    |          -- value moved here\n LL |     let [_y..] = a; //[ast]~ ERROR [E0382]\n-   |          ^^ value used here after move\n+   |          ^^ value used here after partial move\n    |\n    = note: move occurs because `a[..]` has type `std::boxed::Box<i32>`, which does not implement the `Copy` trait\n "}, {"sha": "351fbab2d3f09fbba0f673a26e9314553110c369", "filename": "src/test/ui/borrowck/borrowck-reinit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reinit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reinit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reinit.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -17,7 +17,7 @@ LL |     let mut x = Box::new(0);\n LL |     drop(x);\n    |          - value moved here\n LL |     let _ = (1,x); //~ ERROR use of moved value: `x` (Ast)\n-   |                ^ value used here after move\n+   |                ^ value used here after partial move\n \n error: aborting due to 2 previous errors\n "}, {"sha": "bdf99b0906e6ffb94ee2aa35a6382c57d4b3c2f0", "filename": "src/test/ui/borrowck/issue-54499-field-mutation-of-moved-out-with-mut.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fissue-54499-field-mutation-of-moved-out-with-mut.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fissue-54499-field-mutation-of-moved-out-with-mut.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-54499-field-mutation-of-moved-out-with-mut.nll.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -6,7 +6,7 @@ LL |         let mut t: Tuple = (S(0), 0);\n LL |         drop(t);\n    |              - value moved here\n LL |         t.0 = S(1);\n-   |         ^^^^^^^^^^ value partially assigned here after move\n+   |         ^^^^^^^^^^ value partially assigned here after partial move\n \n error[E0382]: assign to part of moved value: `u`\n   --> $DIR/issue-54499-field-mutation-of-moved-out-with-mut.rs:34:9\n@@ -16,7 +16,7 @@ LL |         let mut u: Tpair = Tpair(S(0), 0);\n LL |         drop(u);\n    |              - value moved here\n LL |         u.0 = S(1);\n-   |         ^^^^^^^^^^ value partially assigned here after move\n+   |         ^^^^^^^^^^ value partially assigned here after partial move\n \n error[E0382]: assign to part of moved value: `v`\n   --> $DIR/issue-54499-field-mutation-of-moved-out-with-mut.rs:45:9\n@@ -26,7 +26,7 @@ LL |         let mut v: Spair = Spair { x: S(0), y: 0 };\n LL |         drop(v);\n    |              - value moved here\n LL |         v.x = S(1);\n-   |         ^^^^^^^^^^ value partially assigned here after move\n+   |         ^^^^^^^^^^ value partially assigned here after partial move\n \n error: aborting due to 3 previous errors\n "}, {"sha": "9505f305c615102c245925ef1696e47859c5c9c1", "filename": "src/test/ui/borrowck/issue-54499-field-mutation-of-moved-out.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fissue-54499-field-mutation-of-moved-out.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Fissue-54499-field-mutation-of-moved-out.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-54499-field-mutation-of-moved-out.nll.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -15,7 +15,7 @@ LL |         let t: Tuple = (S(0), 0);\n LL |         drop(t);\n    |              - value moved here\n LL |         t.0 = S(1);\n-   |         ^^^^^^^^^^ value partially assigned here after move\n+   |         ^^^^^^^^^^ value partially assigned here after partial move\n \n error[E0594]: cannot assign to `t.1`, as `t` is not declared as mutable\n   --> $DIR/issue-54499-field-mutation-of-moved-out.rs:27:9\n@@ -43,7 +43,7 @@ LL |         let u: Tpair = Tpair(S(0), 0);\n LL |         drop(u);\n    |              - value moved here\n LL |         u.0 = S(1);\n-   |         ^^^^^^^^^^ value partially assigned here after move\n+   |         ^^^^^^^^^^ value partially assigned here after partial move\n \n error[E0594]: cannot assign to `u.1`, as `u` is not declared as mutable\n   --> $DIR/issue-54499-field-mutation-of-moved-out.rs:42:9\n@@ -71,7 +71,7 @@ LL |         let v: Spair = Spair { x: S(0), y: 0 };\n LL |         drop(v);\n    |              - value moved here\n LL |         v.x = S(1);\n-   |         ^^^^^^^^^^ value partially assigned here after move\n+   |         ^^^^^^^^^^ value partially assigned here after partial move\n \n error[E0594]: cannot assign to `v.y`, as `v` is not declared as mutable\n   --> $DIR/issue-54499-field-mutation-of-moved-out.rs:57:9"}, {"sha": "39ff1234eb7f9f099a8932a6e9b0e78c76150358", "filename": "src/test/ui/borrowck/two-phase-nonrecv-autoref.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-nonrecv-autoref.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-nonrecv-autoref.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-nonrecv-autoref.nll.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -13,7 +13,7 @@ error[E0382]: use of moved value: `*f`\n LL |     fn twice_ten_so<F: FnOnce(i32) -> i32>(f: Box<F>) {\n    |                     - consider adding a `Copy` constraint to this type argument\n LL |         f(f(10));\n-   |         - ^ value used here after move\n+   |         - ^ value used here after partial move\n    |         |\n    |         value moved here\n    |\n@@ -44,7 +44,7 @@ error[E0382]: use of moved value: `*f`\n   --> $DIR/two-phase-nonrecv-autoref.rs:85:11\n    |\n LL |         f(f(10));\n-   |         - ^ value used here after move\n+   |         - ^ value used here after partial move\n    |         |\n    |         value moved here\n    |"}, {"sha": "71bf9cfd0997c7b7e83b424487652196fa85bdf6", "filename": "src/test/ui/issues/issue-29723.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fissues%2Fissue-29723.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fissues%2Fissue-29723.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-29723.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -8,7 +8,7 @@ LL |         0 if { drop(s); false } => String::from(\"oops\"),\n    |                     - value moved here\n ...\n LL |             s\n-   |             ^ value used here after move\n+   |             ^ value used here after partial move\n \n error: aborting due to previous error\n "}, {"sha": "936467fce8277cbdb3c79c4fb66a2235189d018c", "filename": "src/test/ui/issues/issue-34721.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fissues%2Fissue-34721.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fissues%2Fissue-34721.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34721.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -13,7 +13,7 @@ LL |             x.zero()\n    |             - value moved here\n LL |         };\n LL |         x.zero()\n-   |         ^ value used here after move\n+   |         ^ value used here after partial move\n \n error: aborting due to previous error\n "}, {"sha": "bbf88959ebd9dc43b2575e1d05eecc74eb634bfb", "filename": "src/test/ui/moves/moves-based-on-type-tuple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-tuple.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -14,7 +14,7 @@ error[E0382]: use of moved value: `x` (Mir)\n LL | fn dup(x: Box<isize>) -> Box<(Box<isize>,Box<isize>)> {\n    |        - move occurs because `x` has type `std::boxed::Box<isize>`, which does not implement the `Copy` trait\n LL |     box (x, x)\n-   |          -  ^ value used here after move\n+   |          -  ^ value used here after partial move\n    |          |\n    |          value moved here\n "}, {"sha": "67b0fb422e26fd14bf79a00acf0166b6dda07846", "filename": "src/test/ui/nll/closure-access-spans.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fnll%2Fclosure-access-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fnll%2Fclosure-access-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-access-spans.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -66,7 +66,7 @@ LL |     let r = x;\n LL |     || x.len(); //~ ERROR\n    |     ^^ - borrow occurs due to use in closure\n    |     |\n-   |     value borrowed here after move\n+   |     value borrowed here after partial move\n \n error[E0382]: borrow of moved value: `x`\n   --> $DIR/closure-access-spans.rs:42:5\n@@ -78,7 +78,7 @@ LL |     let r = x;\n LL |     || x = String::new(); //~ ERROR\n    |     ^^ - borrow occurs due to use in closure\n    |     |\n-   |     value borrowed here after move\n+   |     value borrowed here after partial move\n \n error[E0382]: borrow of moved value: `x`\n   --> $DIR/closure-access-spans.rs:47:5\n@@ -90,7 +90,7 @@ LL |     let r = x;\n LL |     || *x = String::new(); //~ ERROR\n    |     ^^  - borrow occurs due to use in closure\n    |     |\n-   |     value borrowed here after move\n+   |     value borrowed here after partial move\n \n error[E0382]: use of moved value: `x`\n   --> $DIR/closure-access-spans.rs:52:5\n@@ -102,7 +102,7 @@ LL |     let r = x;\n LL |     || x; //~ ERROR\n    |     ^^ - use occurs due to use in closure\n    |     |\n-   |     value used here after move\n+   |     value used here after partial move\n \n error: aborting due to 9 previous errors\n "}, {"sha": "53f3a8c82e0b5190a2faf9fb21f7e71f2b933086", "filename": "src/test/ui/nll/closure-move-spans.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fnll%2Fclosure-move-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fnll%2Fclosure-move-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-move-spans.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -8,7 +8,7 @@ LL |     || x;\n    |     |\n    |     value moved into closure here\n LL |     let y = x; //~ ERROR\n-   |             ^ value used here after move\n+   |             ^ value used here after partial move\n \n error[E0382]: borrow of moved value: `x`\n   --> $DIR/closure-move-spans.rs:12:13\n@@ -20,7 +20,7 @@ LL |     || x;\n    |     |\n    |     value moved into closure here\n LL |     let y = &x; //~ ERROR\n-   |             ^^ value borrowed here after move\n+   |             ^^ value borrowed here after partial move\n \n error[E0382]: borrow of moved value: `x`\n   --> $DIR/closure-move-spans.rs:17:13\n@@ -32,7 +32,7 @@ LL |     || x;\n    |     |\n    |     value moved into closure here\n LL |     let y = &mut x; //~ ERROR\n-   |             ^^^^^^ value borrowed here after move\n+   |             ^^^^^^ value borrowed here after partial move\n \n error: aborting due to 3 previous errors\n "}, {"sha": "9e1ba3a4e1bcbbe6c86dbc53aec36618bae74981", "filename": "src/test/ui/nll/decl-macro-illegal-copy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fnll%2Fdecl-macro-illegal-copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fnll%2Fdecl-macro-illegal-copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fdecl-macro-illegal-copy.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -5,7 +5,7 @@ LL |     $wrapper.inner\n    |     -------------- value moved here\n ...\n LL |         wrapper.inner,\n-   |         ^^^^^^^^^^^^^ value used here after move\n+   |         ^^^^^^^^^^^^^ value used here after partial move\n    |\n    = note: move occurs because `wrapper.inner` has type `NonCopy`, which does not implement the `Copy` trait\n "}, {"sha": "7715c14d7a345a27552bff82f09d1932607e7520", "filename": "src/test/ui/nll/issue-21232-partial-init-and-erroneous-use.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fnll%2Fissue-21232-partial-init-and-erroneous-use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fnll%2Fissue-21232-partial-init-and-erroneous-use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-21232-partial-init-and-erroneous-use.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -18,7 +18,7 @@ LL |     let mut d = D { x: 0, s: S{ y: 0, z: 0 } };\n LL |     drop(d);\n    |          - value moved here\n LL |     d.x = 10;\n-   |     ^^^^^^^^ value assigned here after move\n+   |     ^^^^^^^^ value assigned here after partial move\n \n error[E0381]: assign to part of possibly uninitialized variable: `d`\n   --> $DIR/issue-21232-partial-init-and-erroneous-use.rs:49:5"}, {"sha": "ac15d9ba26c4d3c234ae4bfc1dad76909f867a38", "filename": "src/test/ui/nll/issue-21232-partial-init-and-use.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fnll%2Fissue-21232-partial-init-and-use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fnll%2Fissue-21232-partial-init-and-use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-21232-partial-init-and-use.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -18,7 +18,7 @@ LL |     let mut s: S<B> = S::new(); drop(s);\n    |         |\n    |         move occurs because `s` has type `S<std::boxed::Box<u32>>`, which does not implement the `Copy` trait\n LL |     s.x = 10; s.y = Box::new(20);\n-   |     ^^^^^^^^ value partially assigned here after move\n+   |     ^^^^^^^^ value partially assigned here after partial move\n \n error[E0382]: assign to part of moved value: `t`\n   --> $DIR/issue-21232-partial-init-and-use.rs:120:5\n@@ -28,7 +28,7 @@ LL |     let mut t: T = (0, Box::new(0)); drop(t);\n    |         |\n    |         move occurs because `t` has type `(u32, std::boxed::Box<u32>)`, which does not implement the `Copy` trait\n LL |     t.0 = 10; t.1 = Box::new(20);\n-   |     ^^^^^^^^ value partially assigned here after move\n+   |     ^^^^^^^^ value partially assigned here after partial move\n \n error[E0381]: assign to part of possibly uninitialized variable: `s`\n   --> $DIR/issue-21232-partial-init-and-use.rs:127:5\n@@ -50,7 +50,7 @@ LL |     let mut s: S<B> = S::new(); drop(s);\n    |         |\n    |         move occurs because `s` has type `S<std::boxed::Box<u32>>`, which does not implement the `Copy` trait\n LL |     s.x = 10;\n-   |     ^^^^^^^^ value partially assigned here after move\n+   |     ^^^^^^^^ value partially assigned here after partial move\n \n error[E0382]: assign to part of moved value: `t`\n   --> $DIR/issue-21232-partial-init-and-use.rs:148:5\n@@ -60,7 +60,7 @@ LL |     let mut t: T = (0, Box::new(0)); drop(t);\n    |         |\n    |         move occurs because `t` has type `(u32, std::boxed::Box<u32>)`, which does not implement the `Copy` trait\n LL |     t.0 = 10;\n-   |     ^^^^^^^^ value partially assigned here after move\n+   |     ^^^^^^^^ value partially assigned here after partial move\n \n error[E0381]: assign to part of possibly uninitialized variable: `s`\n   --> $DIR/issue-21232-partial-init-and-use.rs:155:5\n@@ -159,7 +159,7 @@ LL |     match c {\n LL |         c2 => {\n    |         -- value moved here\n LL |             c.0 = 2; //~ ERROR assign to part of moved value\n-   |             ^^^^^^^ value partially assigned here after move\n+   |             ^^^^^^^ value partially assigned here after partial move\n \n error[E0382]: assign to part of moved value: `c`\n   --> $DIR/issue-21232-partial-init-and-use.rs:269:13"}, {"sha": "8b52cc113ccc5fc1660eb5e3955d22c1fd231868", "filename": "src/test/ui/nll/move-subpaths-moves-root.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fnll%2Fmove-subpaths-moves-root.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Fnll%2Fmove-subpaths-moves-root.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmove-subpaths-moves-root.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -4,7 +4,7 @@ error[E0382]: use of moved value: `x`\n LL |     drop(x.0);\n    |          --- value moved here\n LL |     drop(x); //~ ERROR use of moved value\n-   |          ^ value used here after move\n+   |          ^ value used here after partial move\n    |\n    = note: move occurs because `x.0` has type `std::vec::Vec<i32>`, which does not implement the `Copy` trait\n "}, {"sha": "8967e77b5a7cc39aa90b90595d992448991a1637", "filename": "src/test/ui/try-block/try-block-bad-lifetime.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-bad-lifetime.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -32,7 +32,7 @@ LL |             Err(k) ?;\n    |                 - value moved here\n ...\n LL |         ::std::mem::drop(k); //~ ERROR use of moved value: `k`\n-   |                          ^ value used here after move\n+   |                          ^ value used here after partial move\n \n error[E0506]: cannot assign to `i` because it is borrowed\n   --> $DIR/try-block-bad-lifetime.rs:32:9"}, {"sha": "33561eae46a2a34b1dbef70dd116c4679081885b", "filename": "src/test/ui/try-block/try-block-maybe-bad-lifetime.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-maybe-bad-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4c52bfb1708bf1c53ea2fc722aa4d9762982e90/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-maybe-bad-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-maybe-bad-lifetime.stderr?ref=d4c52bfb1708bf1c53ea2fc722aa4d9762982e90", "patch": "@@ -20,7 +20,7 @@ LL |             ::std::mem::drop(x);\n    |                              - value moved here\n LL |         };\n LL |         println!(\"{}\", x); //~ ERROR borrow of moved value: `x`\n-   |                        ^ value borrowed here after move\n+   |                        ^ value borrowed here after partial move\n \n error[E0506]: cannot assign to `i` because it is borrowed\n   --> $DIR/try-block-maybe-bad-lifetime.rs:40:9"}]}