{"sha": "37fd2941a1290a287935988641dc14233ee5e236", "node_id": "C_kwDOAAsO6NoAKDM3ZmQyOTQxYTEyOTBhMjg3OTM1OTg4NjQxZGMxNDIzM2VlNWUyMzY", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-06-17T22:01:19Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-06-17T22:09:20Z"}, "message": "rustc_target: Remove some redundant target properties", "tree": {"sha": "40a19d12f8ba06fd4b1d88f32326e49820ff6fbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40a19d12f8ba06fd4b1d88f32326e49820ff6fbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37fd2941a1290a287935988641dc14233ee5e236", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37fd2941a1290a287935988641dc14233ee5e236", "html_url": "https://github.com/rust-lang/rust/commit/37fd2941a1290a287935988641dc14233ee5e236", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37fd2941a1290a287935988641dc14233ee5e236/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cb9899e780bcefb9008088c1e6d6cd5fe2593b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cb9899e780bcefb9008088c1e6d6cd5fe2593b4", "html_url": "https://github.com/rust-lang/rust/commit/0cb9899e780bcefb9008088c1e6d6cd5fe2593b4"}], "stats": {"total": 31, "additions": 11, "deletions": 20}, "files": [{"sha": "c007728095f79852708a56c28313c3c8cbcbcd96", "filename": "compiler/rustc_codegen_llvm/src/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs?ref=37fd2941a1290a287935988641dc14233ee5e236", "patch": "@@ -906,7 +906,7 @@ impl<'ll> CodegenCx<'ll, '_> {\n             return eh_catch_typeinfo;\n         }\n         let tcx = self.tcx;\n-        assert!(self.sess().target.is_like_emscripten);\n+        assert!(self.sess().target.os == \"emscripten\");\n         let eh_catch_typeinfo = match tcx.lang_items().eh_catch_typeinfo() {\n             Some(def_id) => self.get_static(def_id),\n             _ => {"}, {"sha": "9f3647492877ccd3eda40354ac6c15e0da5b883a", "filename": "compiler/rustc_codegen_llvm/src/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs?ref=37fd2941a1290a287935988641dc14233ee5e236", "patch": "@@ -441,7 +441,7 @@ fn try_intrinsic<'ll>(\n         bx.store(bx.const_i32(0), dest, ret_align);\n     } else if wants_msvc_seh(bx.sess()) {\n         codegen_msvc_try(bx, try_func, data, catch_func, dest);\n-    } else if bx.sess().target.is_like_emscripten {\n+    } else if bx.sess().target.os == \"emscripten\" {\n         codegen_emcc_try(bx, try_func, data, catch_func, dest);\n     } else {\n         codegen_gnu_try(bx, try_func, data, catch_func, dest);"}, {"sha": "aaf7e4bb0454d6d0ccc0b6e05ee68905c9d60db8", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=37fd2941a1290a287935988641dc14233ee5e236", "patch": "@@ -2031,7 +2031,7 @@ fn add_order_independent_options(\n \n     add_link_script(cmd, sess, tmpdir, crate_type);\n \n-    if sess.target.is_like_fuchsia && crate_type == CrateType::Executable {\n+    if sess.target.os == \"fuchsia\" && crate_type == CrateType::Executable {\n         let prefix = if sess.opts.debugging_opts.sanitizer.contains(SanitizerSet::ADDRESS) {\n             \"asan/\"\n         } else {\n@@ -2051,7 +2051,7 @@ fn add_order_independent_options(\n         cmd.no_crt_objects();\n     }\n \n-    if sess.target.is_like_emscripten {\n+    if sess.target.os == \"emscripten\" {\n         cmd.arg(\"-s\");\n         cmd.arg(if sess.panic_strategy() == PanicStrategy::Abort {\n             \"DISABLE_EXCEPTION_CATCHING=1\""}, {"sha": "3291be05807f6b099d26c7805f1e287e06e0a196", "filename": "compiler/rustc_passes/src/weak_lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_passes%2Fsrc%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_passes%2Fsrc%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fweak_lang_items.rs?ref=37fd2941a1290a287935988641dc14233ee5e236", "patch": "@@ -17,7 +17,7 @@ pub fn check_crate<'tcx>(tcx: TyCtxt<'tcx>, items: &mut lang_items::LanguageItem\n     if items.eh_personality().is_none() {\n         items.missing.push(LangItem::EhPersonality);\n     }\n-    if tcx.sess.target.is_like_emscripten && items.eh_catch_typeinfo().is_none() {\n+    if tcx.sess.target.os == \"emscripten\" && items.eh_catch_typeinfo().is_none() {\n         items.missing.push(LangItem::EhCatchTypeinfo);\n     }\n "}, {"sha": "25842049413bd6a6a9f746afd5e715710bff092c", "filename": "compiler/rustc_target/src/asm/aarch64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_target%2Fsrc%2Fasm%2Faarch64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_target%2Fsrc%2Fasm%2Faarch64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Faarch64.rs?ref=37fd2941a1290a287935988641dc14233ee5e236", "patch": "@@ -74,7 +74,7 @@ impl AArch64InlineAsmRegClass {\n }\n \n pub fn target_reserves_x18(target: &Target) -> bool {\n-    target.os == \"android\" || target.is_like_fuchsia || target.is_like_osx || target.is_like_windows\n+    target.os == \"android\" || target.os == \"fuchsia\" || target.is_like_osx || target.is_like_windows\n }\n \n fn reserved_x18("}, {"sha": "b64875e32bdd70f9bda3b60909d3cefcab5f7a08", "filename": "compiler/rustc_target/src/spec/fuchsia_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffuchsia_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffuchsia_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffuchsia_base.rs?ref=37fd2941a1290a287935988641dc14233ee5e236", "patch": "@@ -28,7 +28,6 @@ pub fn opts() -> TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n         families: cvs![\"unix\"],\n-        is_like_fuchsia: true,\n         pre_link_args,\n         pre_link_objects: crt_objects::new(&[\n             (LinkOutputKind::DynamicNoPicExe, &[\"Scrt1.o\"]),"}, {"sha": "955fb1f3964f7608b9bf74dc486f35261afafcd1", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=37fd2941a1290a287935988641dc14233ee5e236", "patch": "@@ -1271,12 +1271,6 @@ pub struct TargetOptions {\n     ///   - uses SEH-based unwinding,\n     ///   - supports control flow guard mechanism.\n     pub is_like_msvc: bool,\n-    /// Whether the target toolchain is like Emscripten's. Only useful for compiling with\n-    /// Emscripten toolchain.\n-    /// Defaults to false.\n-    pub is_like_emscripten: bool,\n-    /// Whether the target toolchain is like Fuchsia's.\n-    pub is_like_fuchsia: bool,\n     /// Whether a target toolchain is like WASM.\n     pub is_like_wasm: bool,\n     /// Version of DWARF to use if not using the default.\n@@ -1503,9 +1497,7 @@ impl Default for TargetOptions {\n             is_like_osx: false,\n             is_like_solaris: false,\n             is_like_windows: false,\n-            is_like_emscripten: false,\n             is_like_msvc: false,\n-            is_like_fuchsia: false,\n             is_like_wasm: false,\n             dwarf_version: None,\n             linker_is_gnu: true,\n@@ -2110,8 +2102,6 @@ impl Target {\n         key!(is_like_solaris, bool);\n         key!(is_like_windows, bool);\n         key!(is_like_msvc, bool);\n-        key!(is_like_emscripten, bool);\n-        key!(is_like_fuchsia, bool);\n         key!(is_like_wasm, bool);\n         key!(dwarf_version, Option<u32>);\n         key!(linker_is_gnu, bool);\n@@ -2358,8 +2348,6 @@ impl ToJson for Target {\n         target_option_val!(is_like_solaris);\n         target_option_val!(is_like_windows);\n         target_option_val!(is_like_msvc);\n-        target_option_val!(is_like_emscripten);\n-        target_option_val!(is_like_fuchsia);\n         target_option_val!(is_like_wasm);\n         target_option_val!(dwarf_version);\n         target_option_val!(linker_is_gnu);"}, {"sha": "0865ca7ea7df064fc9828d85ee35db9f2c143cce", "filename": "compiler/rustc_target/src/spec/tests/tests_impl.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_target%2Fsrc%2Fspec%2Ftests%2Ftests_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_target%2Fsrc%2Fspec%2Ftests%2Ftests_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Ftests%2Ftests_impl.rs?ref=37fd2941a1290a287935988641dc14233ee5e236", "patch": "@@ -8,7 +8,12 @@ pub(super) fn test_target(target: Target) {\n \n impl Target {\n     fn check_consistency(&self) {\n+        assert_eq!(self.is_like_osx, self.vendor == \"apple\");\n+        assert_eq!(self.is_like_solaris, self.os == \"solaris\" || self.os == \"illumos\");\n+        assert_eq!(self.is_like_windows, self.os == \"windows\" || self.os == \"uefi\");\n+        assert_eq!(self.is_like_wasm, self.arch == \"wasm32\" || self.arch == \"wasm64\");\n         assert!(self.is_like_windows || !self.is_like_msvc);\n+\n         // Check that LLD with the given flavor is treated identically to the linker it emulates.\n         // If your target really needs to deviate from the rules below, except it and document the\n         // reasons."}, {"sha": "4f21b7020eca69f6e91962cd8bd595109637f585", "filename": "compiler/rustc_target/src/spec/wasm32_unknown_emscripten.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37fd2941a1290a287935988641dc14233ee5e236/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_unknown_emscripten.rs?ref=37fd2941a1290a287935988641dc14233ee5e236", "patch": "@@ -26,7 +26,6 @@ pub fn target() -> Target {\n         // functionality, and a .wasm file.\n         exe_suffix: \".js\".into(),\n         linker: None,\n-        is_like_emscripten: true,\n         panic_strategy: PanicStrategy::Unwind,\n         post_link_args,\n         families: cvs![\"unix\", \"wasm\"],"}]}