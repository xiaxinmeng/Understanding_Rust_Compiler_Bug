{"sha": "f19684c7cf1819cf42b73d4358740c1392198e4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxOTY4NGM3Y2YxODE5Y2Y0MmI3M2Q0MzU4NzQwYzEzOTIxOThlNGQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-03-03T08:50:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-03T08:50:08Z"}, "message": "Rollup merge of #69619 - matthiaskrgr:misc, r=eddyb\n\nmore cleanups\n\n* use starts_with() instead of chars().next() == Some(x)\n* use subsec_micros() instead of subsec_nanos() / 1000\n* use for (idx, item) in iter.enumerate() instead of manually counting loop iterations with variables\n* use values() or keys() respectively when iterating only over keys or values of maps.", "tree": {"sha": "7128cfbecc9a276891e46977f4a44a537ddd44eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7128cfbecc9a276891e46977f4a44a537ddd44eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f19684c7cf1819cf42b73d4358740c1392198e4d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeXhpACRBK7hj4Ov3rIwAAdHIIAGrVxuESytugpnpCsDEsco4A\n/rK+DvPJdrRidQSzni8xZOWkPxiIRI4hcS56BiNckPtDwghPYjmRw7+28Dh3e9fL\nfGHe03At6A/4o87VNVhixL1gxPuE6jxFxYsZfbQt9eKhpGOgxyz0fre9kMF8OaEg\njkjyGnWnH6Pw0nsQYOO5C11WwRcvnje2vRp4diPrRJIyO90NpG3reqnfdkLATMU3\n4Pbc3/lKTpvfZW6mq0cGN8iV1Z9yMDeXGJfeMhcvrmr6fpDjXpB+hjh3mb5bvGnE\n8i6jyQJBKPUjf9y2N3C+r3nex3cHb04ubuW2z65SWljUSICWPHalP2bYhbN/yuk=\n=jVGa\n-----END PGP SIGNATURE-----\n", "payload": "tree 7128cfbecc9a276891e46977f4a44a537ddd44eb\nparent 4699b29a04e84746e28ef688f02993c3b4d54951\nparent 21affdd00d52fba6388f1858a52c253b3f83a90d\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1583225408 +0900\ncommitter GitHub <noreply@github.com> 1583225408 +0900\n\nRollup merge of #69619 - matthiaskrgr:misc, r=eddyb\n\nmore cleanups\n\n* use starts_with() instead of chars().next() == Some(x)\n* use subsec_micros() instead of subsec_nanos() / 1000\n* use for (idx, item) in iter.enumerate() instead of manually counting loop iterations with variables\n* use values() or keys() respectively when iterating only over keys or values of maps.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f19684c7cf1819cf42b73d4358740c1392198e4d", "html_url": "https://github.com/rust-lang/rust/commit/f19684c7cf1819cf42b73d4358740c1392198e4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f19684c7cf1819cf42b73d4358740c1392198e4d/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4699b29a04e84746e28ef688f02993c3b4d54951", "url": "https://api.github.com/repos/rust-lang/rust/commits/4699b29a04e84746e28ef688f02993c3b4d54951", "html_url": "https://github.com/rust-lang/rust/commit/4699b29a04e84746e28ef688f02993c3b4d54951"}, {"sha": "21affdd00d52fba6388f1858a52c253b3f83a90d", "url": "https://api.github.com/repos/rust-lang/rust/commits/21affdd00d52fba6388f1858a52c253b3f83a90d", "html_url": "https://github.com/rust-lang/rust/commit/21affdd00d52fba6388f1858a52c253b3f83a90d"}], "stats": {"total": 33, "additions": 15, "deletions": 18}, "files": [{"sha": "f9c8b01571e04d1086ed6a86bd9f96cb1ea26903", "filename": "src/librustc/traits/structural_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs?ref=f19684c7cf1819cf42b73d4358740c1392198e4d", "patch": "@@ -234,7 +234,7 @@ impl BoundNamesCollector {\n             start = false;\n             write!(fmt, \"{}\", r)?;\n         }\n-        for (_, t) in &self.types {\n+        for t in self.types.values() {\n             if !start {\n                 write!(fmt, \", \")?;\n             }"}, {"sha": "f1b4b828c71fa00f419514374ef7785d4ee2c7a8", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=f19684c7cf1819cf42b73d4358740c1392198e4d", "patch": "@@ -1382,10 +1382,8 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n \n         // Write down the order of our locals that will be promoted to the prefix.\n         {\n-            let mut idx = 0u32;\n-            for local in ineligible_locals.iter() {\n-                assignments[local] = Ineligible(Some(idx));\n-                idx += 1;\n+            for (idx, local) in ineligible_locals.iter().enumerate() {\n+                assignments[local] = Ineligible(Some(idx as u32));\n             }\n         }\n         debug!(\"generator saved local assignments: {:?}\", assignments);"}, {"sha": "3724a83a94981c486191c5b3d4ca4bbfafc0fe07", "filename": "src/librustc_builtin_macros/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_builtin_macros%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_builtin_macros%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fformat.rs?ref=f19684c7cf1819cf42b73d4358740c1392198e4d", "patch": "@@ -188,7 +188,7 @@ fn parse_args<'a>(\n                 let mut err = ecx\n                     .struct_span_err(e.span, \"positional arguments cannot follow named arguments\");\n                 err.span_label(e.span, \"positional arguments must be before named arguments\");\n-                for (_, pos) in &names {\n+                for pos in names.values() {\n                     err.span_label(args[*pos].span, \"named argument\");\n                 }\n                 err.emit();"}, {"sha": "eb9d4b887ad1d192edce00390260c99e4af1d23d", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=f19684c7cf1819cf42b73d4358740c1392198e4d", "patch": "@@ -1574,9 +1574,9 @@ impl EmitterWriter {\n \n             let line_start = sm.lookup_char_pos(parts[0].span.lo()).line;\n             draw_col_separator_no_space(&mut buffer, 1, max_line_num_len + 1);\n-            let mut line_pos = 0;\n             let mut lines = complete.lines();\n-            for line in lines.by_ref().take(MAX_SUGGESTION_HIGHLIGHT_LINES) {\n+            for (line_pos, line) in lines.by_ref().take(MAX_SUGGESTION_HIGHLIGHT_LINES).enumerate()\n+            {\n                 // Print the span column to avoid confusion\n                 buffer.puts(\n                     row_num,\n@@ -1587,7 +1587,6 @@ impl EmitterWriter {\n                 // print the suggestion\n                 draw_col_separator(&mut buffer, row_num, max_line_num_len + 1);\n                 buffer.append(row_num, line, Style::NoStyle);\n-                line_pos += 1;\n                 row_num += 1;\n             }\n "}, {"sha": "f948e22e84b10fa158d5972e412a116fc369eeca", "filename": "src/librustc_hir/hir.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_hir%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_hir%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fhir.rs?ref=f19684c7cf1819cf42b73d4358740c1392198e4d", "patch": "@@ -679,15 +679,15 @@ impl Crate<'_> {\n     where\n         V: itemlikevisit::ItemLikeVisitor<'hir>,\n     {\n-        for (_, item) in &self.items {\n+        for item in self.items.values() {\n             visitor.visit_item(item);\n         }\n \n-        for (_, trait_item) in &self.trait_items {\n+        for trait_item in self.trait_items.values() {\n             visitor.visit_trait_item(trait_item);\n         }\n \n-        for (_, impl_item) in &self.impl_items {\n+        for impl_item in self.impl_items.values() {\n             visitor.visit_impl_item(impl_item);\n         }\n     }"}, {"sha": "b7278ecd5e4076cff4b24a849ad806117fe78c0f", "filename": "src/librustc_infer/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=f19684c7cf1819cf42b73d4358740c1392198e4d", "patch": "@@ -751,7 +751,7 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n         let dummy_source = graph.add_node(());\n         let dummy_sink = graph.add_node(());\n \n-        for (constraint, _) in &self.data.constraints {\n+        for constraint in self.data.constraints.keys() {\n             match *constraint {\n                 Constraint::VarSubVar(a_id, b_id) => {\n                     graph.add_edge("}, {"sha": "bbd4f3b35508e0a97a33ca44fd60d14f35ea984c", "filename": "src/librustc_infer/infer/region_constraints/leak_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs?ref=f19684c7cf1819cf42b73d4358740c1392198e4d", "patch": "@@ -34,7 +34,7 @@ impl<'tcx> RegionConstraintCollector<'tcx> {\n         assert!(self.in_snapshot());\n \n         // Go through each placeholder that we created.\n-        for (_, &placeholder_region) in placeholder_map {\n+        for &placeholder_region in placeholder_map.values() {\n             // Find the universe this placeholder inhabits.\n             let placeholder = match placeholder_region {\n                 ty::RePlaceholder(p) => p,"}, {"sha": "193b6d75935b2163972ea213267b4150ee05bb39", "filename": "src/librustc_resolve/late/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs?ref=f19684c7cf1819cf42b73d4358740c1392198e4d", "patch": "@@ -347,7 +347,7 @@ fn krate(tcx: TyCtxt<'_>) -> NamedRegionMap {\n             lifetime_uses: &mut Default::default(),\n             missing_named_lifetime_spots: vec![],\n         };\n-        for (_, item) in &krate.items {\n+        for item in krate.items.values() {\n             visitor.visit_item(item);\n         }\n     }"}, {"sha": "199b476cb9a3e74ff44d0d081d9a0ee472a9f243", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=f19684c7cf1819cf42b73d4358740c1392198e4d", "patch": "@@ -1652,7 +1652,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         }\n \n         for (projection_bound, _) in &bounds.projection_bounds {\n-            for (_, def_ids) in &mut associated_types {\n+            for def_ids in associated_types.values_mut() {\n                 def_ids.remove(&projection_bound.projection_def_id());\n             }\n         }"}, {"sha": "14f7a6b6817ef17ea02303b6bee5fb8f2744cebd", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=f19684c7cf1819cf42b73d4358740c1392198e4d", "patch": "@@ -526,7 +526,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 // we may want to suggest removing a `&`.\n                 if !sm.span_to_filename(expr.span).is_real() {\n                     if let Ok(code) = sm.span_to_snippet(sp) {\n-                        if code.chars().next() == Some('&') {\n+                        if code.starts_with('&') {\n                             return Some((\n                                 sp,\n                                 \"consider removing the borrow\","}, {"sha": "b37675e0a0a008a4afdcb01fd7dda5522a585330", "filename": "src/libstd/sys/unix/net.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19684c7cf1819cf42b73d4358740c1392198e4d/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fnet.rs?ref=f19684c7cf1819cf42b73d4358740c1392198e4d", "patch": "@@ -280,7 +280,7 @@ impl Socket {\n                 };\n                 let mut timeout = libc::timeval {\n                     tv_sec: secs,\n-                    tv_usec: (dur.subsec_nanos() / 1000) as libc::suseconds_t,\n+                    tv_usec: dur.subsec_micros() as libc::suseconds_t,\n                 };\n                 if timeout.tv_sec == 0 && timeout.tv_usec == 0 {\n                     timeout.tv_usec = 1;"}]}