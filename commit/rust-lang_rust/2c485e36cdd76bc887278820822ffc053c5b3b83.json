{"sha": "2c485e36cdd76bc887278820822ffc053c5b3b83", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNDg1ZTM2Y2RkNzZiYzg4NzI3ODgyMDgyMmZmYzA1M2M1YjNiODM=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-03-01T22:25:23Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-03-01T22:25:23Z"}, "message": "Don't move `yield` or inline assembly into closure", "tree": {"sha": "8f1b52a42cbd5b43e78018304619c4b1c47f4196", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f1b52a42cbd5b43e78018304619c4b1c47f4196"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c485e36cdd76bc887278820822ffc053c5b3b83", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF4EABYKAAYFAmA9ahQACgkQ2lnoZDo37Qb6cgEAgEjhrHOj7uKa2cVN/rqiyu6c\nD6e+pyV8YvuuIJyvasUBAJIhUYEsyOEiznAOvxkzZ1Wa0CvdNsHrO5VtJSPDlPcN\n=Y0Cr\n-----END PGP SIGNATURE-----", "payload": "tree 8f1b52a42cbd5b43e78018304619c4b1c47f4196\nparent a3278a16d31198d45c710c3c4dde433fc77d8d90\nauthor Jason Newcomb <jsnewcomb@pm.me> 1614637523 -0500\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1614637523 -0500\n\nDon't move `yield` or inline assembly into closure\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c485e36cdd76bc887278820822ffc053c5b3b83", "html_url": "https://github.com/rust-lang/rust/commit/2c485e36cdd76bc887278820822ffc053c5b3b83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c485e36cdd76bc887278820822ffc053c5b3b83/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3278a16d31198d45c710c3c4dde433fc77d8d90", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3278a16d31198d45c710c3c4dde433fc77d8d90", "html_url": "https://github.com/rust-lang/rust/commit/a3278a16d31198d45c710c3c4dde433fc77d8d90"}], "stats": {"total": 71, "additions": 51, "deletions": 20}, "files": [{"sha": "ac1d51e1993b481581627a5c5b576954b55a6c81", "filename": "clippy_lints/src/manual_map.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2c485e36cdd76bc887278820822ffc053c5b3b83/clippy_lints%2Fsrc%2Fmanual_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c485e36cdd76bc887278820822ffc053c5b3b83/clippy_lints%2Fsrc%2Fmanual_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_map.rs?ref=2c485e36cdd76bc887278820822ffc053c5b3b83", "patch": "@@ -203,7 +203,12 @@ fn can_move_expr_to_closure(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) -> boo\n \n         fn visit_expr(&mut self, e: &'tcx Expr<'_>) {\n             match e.kind {\n-                ExprKind::Break(..) | ExprKind::Continue(_) | ExprKind::Ret(_) => {\n+                ExprKind::Break(..)\n+                | ExprKind::Continue(_)\n+                | ExprKind::Ret(_)\n+                | ExprKind::Yield(..)\n+                | ExprKind::InlineAsm(_)\n+                | ExprKind::LlvmInlineAsm(_) => {\n                     self.make_closure = false;\n                 },\n                 // Accessing a field of a local value can only be done if the type isn't"}, {"sha": "9222aaf6c789c20b96f3c3effc69655187c21c26", "filename": "tests/ui/manual_map_option.fixed", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2c485e36cdd76bc887278820822ffc053c5b3b83/tests%2Fui%2Fmanual_map_option.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2c485e36cdd76bc887278820822ffc053c5b3b83/tests%2Fui%2Fmanual_map_option.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option.fixed?ref=2c485e36cdd76bc887278820822ffc053c5b3b83", "patch": "@@ -1,3 +1,4 @@\n+// edition:2018\n // run-rustfix\n \n #![warn(clippy::manual_map)]\n@@ -115,4 +116,16 @@ fn main() {\n     Some(0).map(|x| vec![x]);\n \n     option_env!(\"\").map(String::from);\n+\n+    // #6819\n+    async fn f2(x: u32) -> u32 {\n+        x\n+    }\n+\n+    async fn f3() {\n+        match Some(0) {\n+            Some(x) => Some(f2(x).await),\n+            None => None,\n+        };\n+    }\n }"}, {"sha": "1ccb450619c69127897206289409c6fd2b32d5b4", "filename": "tests/ui/manual_map_option.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2c485e36cdd76bc887278820822ffc053c5b3b83/tests%2Fui%2Fmanual_map_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c485e36cdd76bc887278820822ffc053c5b3b83/tests%2Fui%2Fmanual_map_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option.rs?ref=2c485e36cdd76bc887278820822ffc053c5b3b83", "patch": "@@ -1,3 +1,4 @@\n+// edition:2018\n // run-rustfix\n \n #![warn(clippy::manual_map)]\n@@ -173,4 +174,16 @@ fn main() {\n         Some(x) => Some(String::from(x)),\n         None => None,\n     };\n+\n+    // #6819\n+    async fn f2(x: u32) -> u32 {\n+        x\n+    }\n+\n+    async fn f3() {\n+        match Some(0) {\n+            Some(x) => Some(f2(x).await),\n+            None => None,\n+        };\n+    }\n }"}, {"sha": "d9f86eecd93f6cb357711f6a1c8da23777233949", "filename": "tests/ui/manual_map_option.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/2c485e36cdd76bc887278820822ffc053c5b3b83/tests%2Fui%2Fmanual_map_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c485e36cdd76bc887278820822ffc053c5b3b83/tests%2Fui%2Fmanual_map_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option.stderr?ref=2c485e36cdd76bc887278820822ffc053c5b3b83", "patch": "@@ -1,5 +1,5 @@\n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:13:5\n+  --> $DIR/manual_map_option.rs:14:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(_) => Some(2),\n@@ -10,7 +10,7 @@ LL | |     };\n    = note: `-D clippy::manual-map` implied by `-D warnings`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:18:5\n+  --> $DIR/manual_map_option.rs:19:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(x) => Some(x + 1),\n@@ -19,7 +19,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| x + 1)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:23:5\n+  --> $DIR/manual_map_option.rs:24:5\n    |\n LL | /     match Some(\"\") {\n LL | |         Some(x) => Some(x.is_empty()),\n@@ -28,7 +28,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(\"\").map(|x| x.is_empty())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:28:5\n+  --> $DIR/manual_map_option.rs:29:5\n    |\n LL | /     if let Some(x) = Some(0) {\n LL | |         Some(!x)\n@@ -38,7 +38,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| !x)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:35:5\n+  --> $DIR/manual_map_option.rs:36:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(x) => { Some(std::convert::identity(x)) }\n@@ -47,7 +47,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(std::convert::identity)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:40:5\n+  --> $DIR/manual_map_option.rs:41:5\n    |\n LL | /     match Some(&String::new()) {\n LL | |         Some(x) => Some(str::len(x)),\n@@ -56,7 +56,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(&String::new()).map(|x| str::len(x))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:50:5\n+  --> $DIR/manual_map_option.rs:51:5\n    |\n LL | /     match &Some([0, 1]) {\n LL | |         Some(x) => Some(x[0]),\n@@ -65,7 +65,7 @@ LL | |     };\n    | |_____^ help: try this: `Some([0, 1]).as_ref().map(|x| x[0])`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:55:5\n+  --> $DIR/manual_map_option.rs:56:5\n    |\n LL | /     match &Some(0) {\n LL | |         &Some(x) => Some(x * 2),\n@@ -74,7 +74,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| x * 2)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:60:5\n+  --> $DIR/manual_map_option.rs:61:5\n    |\n LL | /     match Some(String::new()) {\n LL | |         Some(ref x) => Some(x.is_empty()),\n@@ -83,7 +83,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.is_empty())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:65:5\n+  --> $DIR/manual_map_option.rs:66:5\n    |\n LL | /     match &&Some(String::new()) {\n LL | |         Some(x) => Some(x.len()),\n@@ -92,7 +92,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.len())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:70:5\n+  --> $DIR/manual_map_option.rs:71:5\n    |\n LL | /     match &&Some(0) {\n LL | |         &&Some(x) => Some(x + x),\n@@ -101,7 +101,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| x + x)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:83:9\n+  --> $DIR/manual_map_option.rs:84:9\n    |\n LL | /         match &mut Some(String::new()) {\n LL | |             Some(x) => Some(x.push_str(\"\")),\n@@ -110,7 +110,7 @@ LL | |         };\n    | |_________^ help: try this: `Some(String::new()).as_mut().map(|x| x.push_str(\"\"))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:89:5\n+  --> $DIR/manual_map_option.rs:90:5\n    |\n LL | /     match &mut Some(String::new()) {\n LL | |         Some(ref x) => Some(x.len()),\n@@ -119,7 +119,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.len())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:94:5\n+  --> $DIR/manual_map_option.rs:95:5\n    |\n LL | /     match &mut &Some(String::new()) {\n LL | |         Some(x) => Some(x.is_empty()),\n@@ -128,7 +128,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.is_empty())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:99:5\n+  --> $DIR/manual_map_option.rs:100:5\n    |\n LL | /     match Some((0, 1, 2)) {\n LL | |         Some((x, y, z)) => Some(x + y + z),\n@@ -137,7 +137,7 @@ LL | |     };\n    | |_____^ help: try this: `Some((0, 1, 2)).map(|(x, y, z)| x + y + z)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:104:5\n+  --> $DIR/manual_map_option.rs:105:5\n    |\n LL | /     match Some([1, 2, 3]) {\n LL | |         Some([first, ..]) => Some(first),\n@@ -146,7 +146,7 @@ LL | |     };\n    | |_____^ help: try this: `Some([1, 2, 3]).map(|[first, ..]| first)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:109:5\n+  --> $DIR/manual_map_option.rs:110:5\n    |\n LL | /     match &Some((String::new(), \"test\")) {\n LL | |         Some((x, y)) => Some((y, x)),\n@@ -155,7 +155,7 @@ LL | |     };\n    | |_____^ help: try this: `Some((String::new(), \"test\")).as_ref().map(|(x, y)| (y, x))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:167:5\n+  --> $DIR/manual_map_option.rs:168:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(x) => Some(vec![x]),\n@@ -164,7 +164,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| vec![x])`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:172:5\n+  --> $DIR/manual_map_option.rs:173:5\n    |\n LL | /     match option_env!(\"\") {\n LL | |         Some(x) => Some(String::from(x)),"}]}