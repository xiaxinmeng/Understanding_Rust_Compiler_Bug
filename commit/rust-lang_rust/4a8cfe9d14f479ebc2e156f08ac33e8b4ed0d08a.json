{"sha": "4a8cfe9d14f479ebc2e156f08ac33e8b4ed0d08a", "node_id": "C_kwDOAAsO6NoAKDRhOGNmZTlkMTRmNDc5ZWJjMmUxNTZmMDhhYzMzZThiNGVkMGQwOGE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-12T05:10:29Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-13T02:21:15Z"}, "message": "Sort elaborated existential predicates in object_ty_for_trait", "tree": {"sha": "3bc2107291364b553694cdf0bd3420b48e308659", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bc2107291364b553694cdf0bd3420b48e308659"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a8cfe9d14f479ebc2e156f08ac33e8b4ed0d08a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a8cfe9d14f479ebc2e156f08ac33e8b4ed0d08a", "html_url": "https://github.com/rust-lang/rust/commit/4a8cfe9d14f479ebc2e156f08ac33e8b4ed0d08a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a8cfe9d14f479ebc2e156f08ac33e8b4ed0d08a/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0938e1680daf66ca6aad428aedf9a920a0dab5ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/0938e1680daf66ca6aad428aedf9a920a0dab5ad", "html_url": "https://github.com/rust-lang/rust/commit/0938e1680daf66ca6aad428aedf9a920a0dab5ad"}], "stats": {"total": 54, "additions": 43, "deletions": 11}, "files": [{"sha": "545524f63a7bccaf5548766e5935ea1b539f2b8a", "filename": "compiler/rustc_trait_selection/src/traits/object_safety.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4a8cfe9d14f479ebc2e156f08ac33e8b4ed0d08a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a8cfe9d14f479ebc2e156f08ac33e8b4ed0d08a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs?ref=4a8cfe9d14f479ebc2e156f08ac33e8b4ed0d08a", "patch": "@@ -581,17 +581,24 @@ fn object_ty_for_trait<'tcx>(\n     });\n     debug!(?trait_predicate);\n \n-    let elaborated_predicates = elaborate_trait_ref(tcx, trait_ref).filter_map(|obligation| {\n-        debug!(?obligation);\n-        let pred = obligation.predicate.to_opt_poly_projection_pred()?;\n-        Some(pred.map_bound(|p| {\n-            ty::ExistentialPredicate::Projection(ty::ExistentialProjection {\n-                item_def_id: p.projection_ty.item_def_id,\n-                substs: p.projection_ty.substs,\n-                term: p.term,\n-            })\n-        }))\n-    });\n+    let mut elaborated_predicates: Vec<_> = elaborate_trait_ref(tcx, trait_ref)\n+        .filter_map(|obligation| {\n+            debug!(?obligation);\n+            let pred = obligation.predicate.to_opt_poly_projection_pred()?;\n+            Some(pred.map_bound(|p| {\n+                ty::ExistentialPredicate::Projection(ty::ExistentialProjection {\n+                    item_def_id: p.projection_ty.item_def_id,\n+                    substs: p.projection_ty.substs,\n+                    term: p.term,\n+                })\n+            }))\n+        })\n+        .collect();\n+    // NOTE: Since #37965, the existential predicates list has depended on the\n+    // list of predicates to be sorted. This is mostly to enforce that the primary\n+    // predicate comes first.\n+    elaborated_predicates.sort_by(|a, b| a.skip_binder().stable_cmp(tcx, &b.skip_binder()));\n+    elaborated_predicates.dedup();\n \n     let existential_predicates = tcx\n         .mk_poly_existential_predicates(iter::once(trait_predicate).chain(elaborated_predicates));"}, {"sha": "843391cffb273df4a6726cfa53c032405592cbd9", "filename": "src/test/ui/object-safety/issue-102933.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4a8cfe9d14f479ebc2e156f08ac33e8b4ed0d08a/src%2Ftest%2Fui%2Fobject-safety%2Fissue-102933.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a8cfe9d14f479ebc2e156f08ac33e8b4ed0d08a/src%2Ftest%2Fui%2Fobject-safety%2Fissue-102933.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-safety%2Fissue-102933.rs?ref=4a8cfe9d14f479ebc2e156f08ac33e8b4ed0d08a", "patch": "@@ -0,0 +1,25 @@\n+// check-pass\n+\n+use std::future::Future;\n+\n+pub trait Service {\n+    type Response;\n+    type Future: Future<Output = Self::Response>;\n+}\n+\n+pub trait A1: Service<Response = i32> {}\n+\n+pub trait A2: Service<Future = Box<dyn Future<Output = i32>>> + A1 {\n+    fn foo(&self) {}\n+}\n+\n+pub trait B1: Service<Future = Box<dyn Future<Output = i32>>> {}\n+\n+pub trait B2: Service<Response = i32> + B1 {\n+    fn foo(&self) {}\n+}\n+\n+fn main() {\n+    let x: &dyn A2 = todo!();\n+    let x: &dyn B2 = todo!();\n+}"}]}