{"sha": "7b4402746fca13ea8901ed9f440b22073123c6c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiNDQwMjc0NmZjYTEzZWE4OTAxZWQ5ZjQ0MGIyMjA3MzEyM2M2Yzk=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-08T08:34:49Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-08T08:34:49Z"}, "message": "Add comments explaining why we do something complex for (un)init", "tree": {"sha": "1f3771bb45dff5a257166b051b6b75c391dd9ef6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f3771bb45dff5a257166b051b6b75c391dd9ef6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b4402746fca13ea8901ed9f440b22073123c6c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b4402746fca13ea8901ed9f440b22073123c6c9", "html_url": "https://github.com/rust-lang/rust/commit/7b4402746fca13ea8901ed9f440b22073123c6c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b4402746fca13ea8901ed9f440b22073123c6c9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be91aea0fa285a86291e70259fb7be1d472674a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/be91aea0fa285a86291e70259fb7be1d472674a8", "html_url": "https://github.com/rust-lang/rust/commit/be91aea0fa285a86291e70259fb7be1d472674a8"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "f31156a03e495c7433a97ec0871c8d4c0a0e74e2", "filename": "src/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b4402746fca13ea8901ed9f440b22073123c6c9/src%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b4402746fca13ea8901ed9f440b22073123c6c9/src%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic.rs?ref=7b4402746fca13ea8901ed9f440b22073123c6c9", "patch": "@@ -331,6 +331,7 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n             \"likely\" | \"unlikely\" | \"forget\" => {}\n \n             \"init\" => {\n+                // we don't want to force an allocation in case the destination is a simple value\n                 match dest {\n                     Place::Local { frame, local } => {\n                         match self.stack()[frame].locals[local].access()? {\n@@ -618,6 +619,7 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n             }\n \n             \"uninit\" => {\n+                // we don't want to force an allocation in case the destination is a simple value\n                 match dest {\n                     Place::Local { frame, local } => {\n                         match self.stack()[frame].locals[local].access()? {"}]}