{"sha": "921f0d9ca919245dfce2e0e672601619e7b0bf58", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMWYwZDljYTkxOTI0NWRmY2UyZTBlNjcyNjAxNjE5ZTdiMGJmNTg=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-13T15:54:54Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-19T07:52:36Z"}, "message": "Outright ignore any alignment in `const_field`", "tree": {"sha": "508fa5624c6718314c4d1850832559c432f0c91c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/508fa5624c6718314c4d1850832559c432f0c91c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/921f0d9ca919245dfce2e0e672601619e7b0bf58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/921f0d9ca919245dfce2e0e672601619e7b0bf58", "html_url": "https://github.com/rust-lang/rust/commit/921f0d9ca919245dfce2e0e672601619e7b0bf58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/921f0d9ca919245dfce2e0e672601619e7b0bf58/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "667f94cb247ae826563ad185170747dc0ac8d658", "url": "https://api.github.com/repos/rust-lang/rust/commits/667f94cb247ae826563ad185170747dc0ac8d658", "html_url": "https://github.com/rust-lang/rust/commit/667f94cb247ae826563ad185170747dc0ac8d658"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "2b1e56e97fc599ae06951faf75cd347116e721c4", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/921f0d9ca919245dfce2e0e672601619e7b0bf58/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921f0d9ca919245dfce2e0e672601619e7b0bf58/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=921f0d9ca919245dfce2e0e672601619e7b0bf58", "patch": "@@ -483,11 +483,9 @@ pub fn const_field<'tcx>(\n     let ecx = mk_eval_cx(tcx, DUMMY_SP, param_env);\n     // get the operand again\n     let mut op = ecx.eval_const_to_op(value, None).unwrap();\n-    // adjust the alignment of `op` to the one of the allocation, since it may be a field of a\n+    // Ignore the alignment when accessing the field, since it may be a field of a\n     // packed struct and thus end up causing an alignment error if we read from it.\n-    if let ConstValue::ByRef(_, alloc) = value.val {\n-        op.force_alignment(alloc.align);\n-    }\n+    op.force_unaligned_access();\n     // downcast\n     let down = match variant {\n         None => op,"}, {"sha": "04473bcb8e14df25faa1cf6eb46277331786edb2", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/921f0d9ca919245dfce2e0e672601619e7b0bf58/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921f0d9ca919245dfce2e0e672601619e7b0bf58/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=921f0d9ca919245dfce2e0e672601619e7b0bf58", "patch": "@@ -185,11 +185,9 @@ impl<'tcx, Tag> OpTy<'tcx, Tag> {\n     /// packedness. We could clone the allocation and adjust the alignment, but that seems wasteful,\n     /// since the alignment is already encoded in the allocation. We know it is alright, because\n     /// validation checked everything before the initial constant entered match checking.\n-    pub(crate) fn force_alignment(&mut self, align: Align) {\n+    pub(crate) fn force_unaligned_access(&mut self) {\n         if let Operand::Indirect(mplace) = &mut self.op {\n-            if align < mplace.align {\n-                mplace.align = align;\n-            }\n+            mplace.align = Align::from_bytes(1).unwrap();\n         }\n     }\n }"}]}