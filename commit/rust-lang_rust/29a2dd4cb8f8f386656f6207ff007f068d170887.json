{"sha": "29a2dd4cb8f8f386656f6207ff007f068d170887", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YTJkZDRjYjhmOGYzODY2NTZmNjIwN2ZmMDA3ZjA2OGQxNzA4ODc=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2018-01-17T20:11:40Z"}, "committer": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2018-01-17T20:11:40Z"}, "message": "Fix bug. Don't expect lint when acc is on rhs", "tree": {"sha": "5c756134e183d63c781b6210c871077bfbab163b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c756134e183d63c781b6210c871077bfbab163b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29a2dd4cb8f8f386656f6207ff007f068d170887", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29a2dd4cb8f8f386656f6207ff007f068d170887", "html_url": "https://github.com/rust-lang/rust/commit/29a2dd4cb8f8f386656f6207ff007f068d170887", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29a2dd4cb8f8f386656f6207ff007f068d170887/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cac693bc767e6c5648baeab1164feb4aea6ae30", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cac693bc767e6c5648baeab1164feb4aea6ae30", "html_url": "https://github.com/rust-lang/rust/commit/1cac693bc767e6c5648baeab1164feb4aea6ae30"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "f7a4b39c7a6f205c090aa0882e64ea21a427fe08", "filename": "tests/ui/methods.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/29a2dd4cb8f8f386656f6207ff007f068d170887/tests%2Fui%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a2dd4cb8f8f386656f6207ff007f068d170887/tests%2Fui%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.rs?ref=29a2dd4cb8f8f386656f6207ff007f068d170887", "patch": "@@ -389,19 +389,12 @@ fn iter_skip_next() {\n fn unnecessary_fold() {\n     // Can be replaced by .any\n     let _ = (0..3).fold(false, |acc, x| acc || x > 2);\n-    let _ = (0..3).fold(false, |acc, x| x > 2 || acc);\n-\n     // Can be replaced by .all\n     let _ = (0..3).fold(true, |acc, x| acc && x > 2);\n-    let _ = (0..3).fold(true, |acc, x| x > 2 && acc);\n-\n     // Can be replaced by .sum\n     let _ = (0..3).fold(0, |acc, x| acc + x);\n-    let _ = (0..3).fold(0, |acc, x| x + acc);\n-\n     // Can be replaced by .product\n     let _ = (0..3).fold(1, |acc, x| acc * x);\n-    let _ = (0..3).fold(1, |acc, x| x * acc);\n }\n \n /// Should trigger the `UNNECESSARY_FOLD` lint, with an error span including exactly `.fold(...)`\n@@ -416,6 +409,16 @@ fn unnecessary_fold_should_ignore() {\n     let _ = (0..3).fold(1, |acc, x| acc + x);\n     let _ = (0..3).fold(0, |acc, x| acc * x);\n     let _ = (0..3).fold(0, |acc, x| 1 + acc + x);\n+\n+    // We only match against an accumulator on the left\n+    // hand side. We could lint for .sum and .product when\n+    // it's on the right, but don't for now (and this wouldn't\n+    // be valid if we extended the lint to cover arbitrary numeric\n+    // types).\n+    let _ = (0..3).fold(false, |acc, x| x > 2 || acc);\n+    let _ = (0..3).fold(true, |acc, x| x > 2 && acc);\n+    let _ = (0..3).fold(0, |acc, x| x + acc);\n+    let _ = (0..3).fold(1, |acc, x| x * acc);\n }\n \n #[allow(similar_names)]"}, {"sha": "57f073f00b040d1c8dd0bfb1312b5250df94c926", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/29a2dd4cb8f8f386656f6207ff007f068d170887/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29a2dd4cb8f8f386656f6207ff007f068d170887/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=29a2dd4cb8f8f386656f6207ff007f068d170887", "patch": "@@ -502,33 +502,33 @@ error: this `.fold` can be written more succinctly using another method\n     = note: `-D fold-any` implied by `-D warnings`\n \n error: this `.fold` can be written more succinctly using another method\n-   --> $DIR/methods.rs:395:19\n+   --> $DIR/methods.rs:393:19\n     |\n-395 |     let _ = (0..3).fold(true, |acc, x| acc && x > 2);\n+393 |     let _ = (0..3).fold(true, |acc, x| acc && x > 2);\n     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.all(|x| x > 2)`\n \n error: this `.fold` can be written more succinctly using another method\n-   --> $DIR/methods.rs:399:19\n+   --> $DIR/methods.rs:395:19\n     |\n-399 |     let _ = (0..3).fold(0, |acc, x| acc + x);\n-    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.sum(|x| x)`\n+395 |     let _ = (0..3).fold(0, |acc, x| acc + x);\n+    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.sum()`\n \n error: this `.fold` can be written more succinctly using another method\n-   --> $DIR/methods.rs:403:19\n+   --> $DIR/methods.rs:397:19\n     |\n-403 |     let _ = (0..3).fold(1, |acc, x| acc * x);\n-    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.product(|x| x)`\n+397 |     let _ = (0..3).fold(1, |acc, x| acc * x);\n+    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.product()`\n \n error: this `.fold` can be written more succinctly using another method\n-   --> $DIR/methods.rs:409:34\n+   --> $DIR/methods.rs:402:34\n     |\n-409 |     let _ = (0..3).map(|x| 2 * x).fold(false, |acc, x| acc || x > 2);\n+402 |     let _ = (0..3).map(|x| 2 * x).fold(false, |acc, x| acc || x > 2);\n     |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `.any(|x| x > 2)`\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:424:13\n+   --> $DIR/methods.rs:427:13\n     |\n-424 |     let _ = opt.unwrap();\n+427 |     let _ = opt.unwrap();\n     |             ^^^^^^^^^^^^\n     |\n     = note: `-D option-unwrap-used` implied by `-D warnings`"}]}