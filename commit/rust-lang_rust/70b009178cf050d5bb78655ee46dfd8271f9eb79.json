{"sha": "70b009178cf050d5bb78655ee46dfd8271f9eb79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwYjAwOTE3OGNmMDUwZDViYjc4NjU1ZWU0NmRmZDgyNzFmOWViNzk=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2011-08-12T17:39:58Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-08-16T22:05:57Z"}, "message": "Remove support for expr[T] syntax.", "tree": {"sha": "264494961445754e353e11d9e2d4dd2505491636", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/264494961445754e353e11d9e2d4dd2505491636"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70b009178cf050d5bb78655ee46dfd8271f9eb79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70b009178cf050d5bb78655ee46dfd8271f9eb79", "html_url": "https://github.com/rust-lang/rust/commit/70b009178cf050d5bb78655ee46dfd8271f9eb79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70b009178cf050d5bb78655ee46dfd8271f9eb79/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c92f5b34d5603de89570d6ab9978469a17335eed", "url": "https://api.github.com/repos/rust-lang/rust/commits/c92f5b34d5603de89570d6ab9978469a17335eed", "html_url": "https://github.com/rust-lang/rust/commit/c92f5b34d5603de89570d6ab9978469a17335eed"}], "stats": {"total": 12, "additions": 1, "deletions": 11}, "files": [{"sha": "267308c1c04e5fec69789185598faaf033726ea7", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/70b009178cf050d5bb78655ee46dfd8271f9eb79/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70b009178cf050d5bb78655ee46dfd8271f9eb79/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=70b009178cf050d5bb78655ee46dfd8271f9eb79", "patch": "@@ -780,17 +780,7 @@ fn parse_path(p: &parser) -> ast::path {\n fn parse_path_and_ty_param_substs(p: &parser) -> ast::path {\n     let lo = p.get_lo_pos();\n     let path = parse_path(p);\n-    if p.peek() == token::LBRACKET {\n-        let seq =\n-            parse_seq(token::LBRACKET, token::RBRACKET, some(token::COMMA),\n-                      bind parse_ty(_, false), p);\n-        let hi = seq.span.hi;\n-        path =\n-            spanned(lo, hi,\n-                    {global: path.node.global,\n-                     idents: path.node.idents,\n-                     types: seq.node});\n-    } else if p.peek() == token::MOD_SEP {\n+    if p.peek() == token::MOD_SEP {\n         p.bump();\n \n         let seq = parse_seq_lt_gt(some(token::COMMA), bind parse_ty(_, false),"}]}