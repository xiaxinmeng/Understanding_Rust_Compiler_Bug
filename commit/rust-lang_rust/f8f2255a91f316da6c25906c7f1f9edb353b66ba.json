{"sha": "f8f2255a91f316da6c25906c7f1f9edb353b66ba", "node_id": "C_kwDOAAsO6NoAKGY4ZjIyNTVhOTFmMzE2ZGE2YzI1OTA2YzdmMWY5ZWRiMzUzYjY2YmE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-23T07:03:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-23T07:07:32Z"}, "message": "readme: document permissive-provenance flag", "tree": {"sha": "fb8119b8a5bb021f0023a3dd765bc416ff4e47fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb8119b8a5bb021f0023a3dd765bc416ff4e47fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8f2255a91f316da6c25906c7f1f9edb353b66ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8f2255a91f316da6c25906c7f1f9edb353b66ba", "html_url": "https://github.com/rust-lang/rust/commit/f8f2255a91f316da6c25906c7f1f9edb353b66ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8f2255a91f316da6c25906c7f1f9edb353b66ba/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7bc441fd342783ad42b8a9fbb2a1595e80044ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7bc441fd342783ad42b8a9fbb2a1595e80044ad", "html_url": "https://github.com/rust-lang/rust/commit/f7bc441fd342783ad42b8a9fbb2a1595e80044ad"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "235b81173b5fb42fc97614e57224736b91659426", "filename": "README.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f8f2255a91f316da6c25906c7f1f9edb353b66ba/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/f8f2255a91f316da6c25906c7f1f9edb353b66ba/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=f8f2255a91f316da6c25906c7f1f9edb353b66ba", "patch": "@@ -318,6 +318,17 @@ to Miri failing to detect cases of undefined behavior in a program.\n   application instead of raising an error within the context of Miri (and halting\n   execution). Note that code might not expect these operations to ever panic, so\n   this flag can lead to strange (mis)behavior.\n+* `-Zmiri-permissive-provenance` is **experimental**. This will make Miri do a\n+  best-effort attempt to implement the semantics of\n+  [`expose_addr`](https://doc.rust-lang.org/nightly/std/primitive.pointer.html#method.expose_addr)\n+  and\n+  [`ptr::from_exposed_addr`](https://doc.rust-lang.org/nightly/std/ptr/fn.from_exposed_addr.html)\n+  for pointer-to-int and int-to-pointer casts, respectively. This will\n+  necessarily miss some bugs as those semantics are not efficiently\n+  implementable in a sanitizer, but it will only miss bugs that concerns\n+  memory/pointers which is subject to these operations. Also note that this flag\n+  is currently incompatible with Stacked Borrows, so you will have to also pass\n+  `-Zmiri-disable-stacked-borrows` to use this.\n * `-Zmiri-seed=<hex>` configures the seed of the RNG that Miri uses to resolve\n   non-determinism.  This RNG is used to pick base addresses for allocations.\n   When isolation is enabled (the default), this is also used to emulate system"}]}