{"sha": "d4039c5d402033e28744b91b95ea1c560fa4ab0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MDM5YzVkNDAyMDMzZTI4NzQ0YjkxYjk1ZWExYzU2MGZhNGFiMGI=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-01-06T23:45:13Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-01-07T20:56:04Z"}, "message": "extend warning cycle to cover matching unit-structs via `S(..)`\n\n(this makes them handled like enum unit-variants.)", "tree": {"sha": "56cef2ac7231cca4c146faac99351d615f161af2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56cef2ac7231cca4c146faac99351d615f161af2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4039c5d402033e28744b91b95ea1c560fa4ab0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4039c5d402033e28744b91b95ea1c560fa4ab0b", "html_url": "https://github.com/rust-lang/rust/commit/d4039c5d402033e28744b91b95ea1c560fa4ab0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4039c5d402033e28744b91b95ea1c560fa4ab0b/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25d1f4bc21a2ab77e12ebcd8c5fb479b563d3bf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/25d1f4bc21a2ab77e12ebcd8c5fb479b563d3bf7", "html_url": "https://github.com/rust-lang/rust/commit/25d1f4bc21a2ab77e12ebcd8c5fb479b563d3bf7"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "2e69ff100bf4dc57be1a998bc340163957ed6b2f", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d4039c5d402033e28744b91b95ea1c560fa4ab0b/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4039c5d402033e28744b91b95ea1c560fa4ab0b/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=d4039c5d402033e28744b91b95ea1c560fa4ab0b", "patch": "@@ -659,6 +659,12 @@ pub fn check_pat_enum<'a, 'tcx>(pcx: &pat_ctxt<'a, 'tcx>,\n     let report_bad_struct_kind = |is_warning| {\n         bad_struct_kind_err(tcx.sess, pat.span, path, is_warning);\n         if is_warning {\n+            // Boo! Too painful to attach this to the actual warning,\n+            // it should go away at some point though.\n+            tcx.sess.span_note_without_error(\n+                pat.span,\n+                \"this warning will become a HARD ERROR in a future release. \\\n+                 See RFC 218 for details.\");\n             return;\n         }\n \n@@ -699,12 +705,6 @@ pub fn check_pat_enum<'a, 'tcx>(pcx: &pat_ctxt<'a, 'tcx>,\n                 report_bad_struct_kind(is_special_case);\n                 if !is_special_case {\n                     return\n-                } else {\n-                    // Boo! Too painful to attach this to the actual warning,\n-                    // it should go away at some point though.\n-                    tcx.sess.span_note_without_error(pat.span,\n-                        \"this warning will become a HARD ERROR in a future release. \\\n-                        See RFC 218 for details.\");\n                 }\n             }\n             (variant.fields\n@@ -718,7 +718,10 @@ pub fn check_pat_enum<'a, 'tcx>(pcx: &pat_ctxt<'a, 'tcx>,\n         ty::TyStruct(struct_def, expected_substs) => {\n             let variant = struct_def.struct_variant();\n             if is_tuple_struct_pat && variant.kind() != ty::VariantKind::Tuple {\n-                report_bad_struct_kind(false);\n+                // Matching unit structs with tuple variant patterns (`UnitVariant(..)`)\n+                // is allowed for backward compatibility.\n+                let is_special_case = variant.kind() == ty::VariantKind::Unit;\n+                report_bad_struct_kind(is_special_case);\n                 return;\n             }\n             (variant.fields"}]}