{"sha": "a201348775081ae24bbd016b089b93906f44e3b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyMDEzNDg3NzUwODFhZTI0YmJkMDE2YjA4OWI5MzkwNmY0NGUzYjc=", "commit": {"author": {"name": "Josh Driver", "email": "keeperofdakeys@gmail.com", "date": "2017-02-05T01:52:29Z"}, "committer": {"name": "Josh Driver", "email": "keeperofdakeys@gmail.com", "date": "2017-02-05T01:52:29Z"}, "message": "Update pretty test for derive attributes\n\nRemove attr-variant-data.rs since it relies on quirks\nin legacy custom derive resolution (undefined derives\nonly print a warning).\n\nAdd a new test which uses a defined proc macro derive,\nand tests pretty printing of proc macro derive\nattributes.", "tree": {"sha": "11eaeb5b8f8888acf082b3a5991e5b043eede906", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11eaeb5b8f8888acf082b3a5991e5b043eede906"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a201348775081ae24bbd016b089b93906f44e3b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a201348775081ae24bbd016b089b93906f44e3b7", "html_url": "https://github.com/rust-lang/rust/commit/a201348775081ae24bbd016b089b93906f44e3b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a201348775081ae24bbd016b089b93906f44e3b7/comments", "author": {"login": "keeperofdakeys", "id": 141626, "node_id": "MDQ6VXNlcjE0MTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/141626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keeperofdakeys", "html_url": "https://github.com/keeperofdakeys", "followers_url": "https://api.github.com/users/keeperofdakeys/followers", "following_url": "https://api.github.com/users/keeperofdakeys/following{/other_user}", "gists_url": "https://api.github.com/users/keeperofdakeys/gists{/gist_id}", "starred_url": "https://api.github.com/users/keeperofdakeys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keeperofdakeys/subscriptions", "organizations_url": "https://api.github.com/users/keeperofdakeys/orgs", "repos_url": "https://api.github.com/users/keeperofdakeys/repos", "events_url": "https://api.github.com/users/keeperofdakeys/events{/privacy}", "received_events_url": "https://api.github.com/users/keeperofdakeys/received_events", "type": "User", "site_admin": false}, "committer": {"login": "keeperofdakeys", "id": 141626, "node_id": "MDQ6VXNlcjE0MTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/141626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keeperofdakeys", "html_url": "https://github.com/keeperofdakeys", "followers_url": "https://api.github.com/users/keeperofdakeys/followers", "following_url": "https://api.github.com/users/keeperofdakeys/following{/other_user}", "gists_url": "https://api.github.com/users/keeperofdakeys/gists{/gist_id}", "starred_url": "https://api.github.com/users/keeperofdakeys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keeperofdakeys/subscriptions", "organizations_url": "https://api.github.com/users/keeperofdakeys/orgs", "repos_url": "https://api.github.com/users/keeperofdakeys/repos", "events_url": "https://api.github.com/users/keeperofdakeys/events{/privacy}", "received_events_url": "https://api.github.com/users/keeperofdakeys/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbdd0388664127c3dd2c3e6a162b597a87ffa7c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbdd0388664127c3dd2c3e6a162b597a87ffa7c9", "html_url": "https://github.com/rust-lang/rust/commit/fbdd0388664127c3dd2c3e6a162b597a87ffa7c9"}], "stats": {"total": 116, "additions": 65, "deletions": 51}, "files": [{"sha": "a1c581a18682c5a1fdf5373568a0e2e080027ee1", "filename": "src/test/pretty/attr-derive.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/a201348775081ae24bbd016b089b93906f44e3b7/src%2Ftest%2Fpretty%2Fattr-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a201348775081ae24bbd016b089b93906f44e3b7/src%2Ftest%2Fpretty%2Fattr-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fattr-derive.rs?ref=a201348775081ae24bbd016b089b93906f44e3b7", "patch": "@@ -0,0 +1,43 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:derive-foo.rs\n+// ignore-stage1\n+// pp-exact\n+// Testing that both the inner item and next outer item are\n+// preserved, and that the first outer item parsed in main is not\n+// accidentally carried over to each inner function\n+\n+#[macro_use]\n+extern crate derive_foo;\n+\n+#[derive(Foo)]\n+struct X;\n+\n+#[derive(Foo)]\n+#[Bar]\n+struct Y;\n+\n+#[derive(Foo)]\n+struct WithRef {\n+    x: X,\n+    #[Bar]\n+    y: Y,\n+}\n+\n+#[derive(Foo)]\n+enum Enum {\n+\n+    #[Bar]\n+    Asdf,\n+    Qwerty,\n+}\n+\n+fn main() { }"}, {"sha": "1ffacaa9f5a5d89bbc6add9c3674d0ec2ba77cfb", "filename": "src/test/pretty/attr-variant-data.rs", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/fbdd0388664127c3dd2c3e6a162b597a87ffa7c9/src%2Ftest%2Fpretty%2Fattr-variant-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbdd0388664127c3dd2c3e6a162b597a87ffa7c9/src%2Ftest%2Fpretty%2Fattr-variant-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fattr-variant-data.rs?ref=fbdd0388664127c3dd2c3e6a162b597a87ffa7c9", "patch": "@@ -1,51 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// pp-exact\n-// Testing that both the inner item and next outer item are\n-// preserved, and that the first outer item parsed in main is not\n-// accidentally carried over to each inner function\n-\n-#![feature(custom_attribute)]\n-#![feature(custom_derive)]\n-\n-#[derive(Serialize, Deserialize)]\n-struct X;\n-\n-#[derive(Serialize, Deserialize)]\n-struct WithRef<'a, T: 'a> {\n-    #[serde(skip_deserializing)]\n-    t: Option<&'a T>,\n-    #[serde(serialize_with = \"ser_x\", deserialize_with = \"de_x\")]\n-    x: X,\n-}\n-\n-#[derive(Serialize, Deserialize)]\n-enum EnumWith<T> {\n-    Unit,\n-    Newtype(\n-            #[serde(serialize_with = \"ser_x\", deserialize_with = \"de_x\")]\n-            X),\n-    Tuple(T,\n-          #[serde(serialize_with = \"ser_x\", deserialize_with = \"de_x\")]\n-          X),\n-    Struct {\n-        t: T,\n-        #[serde(serialize_with = \"ser_x\", deserialize_with = \"de_x\")]\n-        x: X,\n-    },\n-}\n-\n-#[derive(Serialize, Deserialize)]\n-struct Tuple<T>(T,\n-                #[serde(serialize_with = \"ser_x\", deserialize_with = \"de_x\")]\n-                X);\n-\n-fn main() { }"}, {"sha": "bd81d3e5a3b53f26260647f268cbfebe0127726c", "filename": "src/test/pretty/auxiliary/derive-foo.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a201348775081ae24bbd016b089b93906f44e3b7/src%2Ftest%2Fpretty%2Fauxiliary%2Fderive-foo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a201348775081ae24bbd016b089b93906f44e3b7/src%2Ftest%2Fpretty%2Fauxiliary%2Fderive-foo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fauxiliary%2Fderive-foo.rs?ref=a201348775081ae24bbd016b089b93906f44e3b7", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::TokenStream;\n+\n+#[proc_macro_derive(Foo, attributes(Bar))]\n+pub fn derive(input: TokenStream) -> TokenStream {\n+    \"\".parse().unwrap()\n+}"}]}