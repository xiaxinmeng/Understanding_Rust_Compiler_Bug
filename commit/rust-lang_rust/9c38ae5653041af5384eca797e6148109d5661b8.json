{"sha": "9c38ae5653041af5384eca797e6148109d5661b8", "node_id": "C_kwDOAAsO6NoAKDljMzhhZTU2NTMwNDFhZjUzODRlY2E3OTdlNjE0ODEwOWQ1NjYxYjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-11T14:43:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-11T14:43:13Z"}, "message": "Rollup merge of #108542 - bwmf2:expanded, r=wesleywiser\n\nForce parentheses around `match` expression in binary expression\n\nThis attempts to solve https://github.com/rust-lang/rust/issues/98790.", "tree": {"sha": "fa081a083891a7ad07aa1d9426e28dc2a93bfb07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa081a083891a7ad07aa1d9426e28dc2a93bfb07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c38ae5653041af5384eca797e6148109d5661b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkDJOBCRBK7hj4Ov3rIwAAOqEIAGHgJT3aFjkKEY1FSzy6AOBd\n4dKN6XElOxMQYpGFOS1lr+KEGaPCyJm3CnzLs2NlMc6o03zXEVOzWgP8VPeVlBlt\nKJ9/zMYA9FLZ+YXP1eIGmpgMwFDtvrB4D2sXz570i5hkitUGtoGJtLibpgD06UqD\nxK8ipZtqOvn7+ba+gHvs6qRXj/DK0RmhjHt7c28cqO7UDQ4sXA8KK0/msLTc+Opp\nSzfKHKN2obbjr54Uy/J3RuNQGR0Z0mKEoKD3FzgzF0neiC3+Hu9kKZQA0e0ZWrWI\ntVzukt2Zf9a3wFlX8B1RuflswzBb7FlTVL8p/zJ5jiwSwvIi4e1xvh0ZNKZncKY=\n=5XeC\n-----END PGP SIGNATURE-----\n", "payload": "tree fa081a083891a7ad07aa1d9426e28dc2a93bfb07\nparent 244ec84a82032f0b4039cecdf914eeae0b791ee0\nparent 219195fc4c98649785154e2c66075be716bc0c01\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678545793 +0100\ncommitter GitHub <noreply@github.com> 1678545793 +0100\n\nRollup merge of #108542 - bwmf2:expanded, r=wesleywiser\n\nForce parentheses around `match` expression in binary expression\n\nThis attempts to solve https://github.com/rust-lang/rust/issues/98790.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c38ae5653041af5384eca797e6148109d5661b8", "html_url": "https://github.com/rust-lang/rust/commit/9c38ae5653041af5384eca797e6148109d5661b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c38ae5653041af5384eca797e6148109d5661b8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "244ec84a82032f0b4039cecdf914eeae0b791ee0", "url": "https://api.github.com/repos/rust-lang/rust/commits/244ec84a82032f0b4039cecdf914eeae0b791ee0", "html_url": "https://github.com/rust-lang/rust/commit/244ec84a82032f0b4039cecdf914eeae0b791ee0"}, {"sha": "219195fc4c98649785154e2c66075be716bc0c01", "url": "https://api.github.com/repos/rust-lang/rust/commits/219195fc4c98649785154e2c66075be716bc0c01", "html_url": "https://github.com/rust-lang/rust/commit/219195fc4c98649785154e2c66075be716bc0c01"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "a4d91a956627337198777f92d76886aad5ad6130", "filename": "compiler/rustc_ast_pretty/src/pprust/state/expr.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c38ae5653041af5384eca797e6148109d5661b8/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c38ae5653041af5384eca797e6148109d5661b8/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs?ref=9c38ae5653041af5384eca797e6148109d5661b8", "patch": "@@ -244,6 +244,10 @@ impl<'a> State<'a> {\n             (&ast::ExprKind::Let { .. }, _) if !parser::needs_par_as_let_scrutinee(prec) => {\n                 parser::PREC_FORCE_PAREN\n             }\n+            // For a binary expression like `(match () { _ => a }) OP b`, the parens are required\n+            // otherwise the parser would interpret `match () { _ => a }` as a statement,\n+            // with the remaining `OP b` not making sense. So we force parens.\n+            (&ast::ExprKind::Match(..), _) => parser::PREC_FORCE_PAREN,\n             _ => left_prec,\n         };\n "}, {"sha": "8fe6fc41d10b77435e0e39bb330d9de117bc7f13", "filename": "tests/ui/macros/issue-98790.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9c38ae5653041af5384eca797e6148109d5661b8/tests%2Fui%2Fmacros%2Fissue-98790.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c38ae5653041af5384eca797e6148109d5661b8/tests%2Fui%2Fmacros%2Fissue-98790.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-98790.rs?ref=9c38ae5653041af5384eca797e6148109d5661b8", "patch": "@@ -0,0 +1,24 @@\n+// run-pass\n+\n+macro_rules! stringify_item {\n+    ($item:item) => {\n+        stringify!($item)\n+    };\n+}\n+\n+macro_rules! repro {\n+    ($expr:expr) => {\n+        stringify_item! {\n+            pub fn repro() -> bool {\n+                $expr\n+            }\n+        }\n+    };\n+}\n+\n+fn main() {\n+    assert_eq!(\n+        repro!(match () { () => true } | true),\n+        \"pub fn repro() -> bool { (match () { () => true, }) | true }\"\n+    );\n+}"}, {"sha": "39ba1714cc70b4e16a17adddf7952174b20c9dc6", "filename": "tests/ui/macros/rfc-2011-nicer-assert-messages/all-expr-kinds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c38ae5653041af5384eca797e6148109d5661b8/tests%2Fui%2Fmacros%2Frfc-2011-nicer-assert-messages%2Fall-expr-kinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c38ae5653041af5384eca797e6148109d5661b8/tests%2Fui%2Fmacros%2Frfc-2011-nicer-assert-messages%2Fall-expr-kinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Frfc-2011-nicer-assert-messages%2Fall-expr-kinds.rs?ref=9c38ae5653041af5384eca797e6148109d5661b8", "patch": "@@ -164,7 +164,7 @@ fn main() {\n     // mac call\n \n     // match\n-    [ match elem { _ => elem } == 3 ] => \"Assertion failed: match elem { _ => elem, } == 3\"\n+    [ match elem { _ => elem } == 3 ] => \"Assertion failed: (match elem { _ => elem, }) == 3\"\n \n     // ret\n     [ (|| { return elem; })() == 3 ] => \"Assertion failed: (|| { return elem; })() == 3\""}]}