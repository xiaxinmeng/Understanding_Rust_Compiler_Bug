{"sha": "620be9235dbbb2f57462761bcfe0bebb8e2bbece", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMGJlOTIzNWRiYmIyZjU3NDYyNzYxYmNmZTBiZWJiOGUyYmJlY2U=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T02:17:29Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:34Z"}, "message": "librustc: De-`@mut` the `cnum_map`", "tree": {"sha": "8650b4a8a030e868078df7cdfe616d893b8a88b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8650b4a8a030e868078df7cdfe616d893b8a88b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/620be9235dbbb2f57462761bcfe0bebb8e2bbece", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/620be9235dbbb2f57462761bcfe0bebb8e2bbece", "html_url": "https://github.com/rust-lang/rust/commit/620be9235dbbb2f57462761bcfe0bebb8e2bbece", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/620be9235dbbb2f57462761bcfe0bebb8e2bbece/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a9c37b7f53cf6dfb1f540c87e3a1d04f5d704ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a9c37b7f53cf6dfb1f540c87e3a1d04f5d704ba", "html_url": "https://github.com/rust-lang/rust/commit/5a9c37b7f53cf6dfb1f540c87e3a1d04f5d704ba"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "2b0d6479d0cb6e2a6c1c38bdfcdea367e12c54f6", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/620be9235dbbb2f57462761bcfe0bebb8e2bbece/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/620be9235dbbb2f57462761bcfe0bebb8e2bbece/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=620be9235dbbb2f57462761bcfe0bebb8e2bbece", "patch": "@@ -15,6 +15,7 @@ use metadata::cstore;\n use metadata::decoder;\n use metadata::loader;\n \n+use std::cell::RefCell;\n use std::hashmap::HashMap;\n use syntax::ast;\n use syntax::abi;\n@@ -347,5 +348,5 @@ fn resolve_crate_deps(e: &mut Env, cdata: &[u8]) -> cstore::cnum_map {\n           }\n         }\n     }\n-    return @mut cnum_map;\n+    return @RefCell::new(cnum_map);\n }"}, {"sha": "f567665256bdc5002554926bb5ad2abd7a62ad40", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/620be9235dbbb2f57462761bcfe0bebb8e2bbece/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/620be9235dbbb2f57462761bcfe0bebb8e2bbece/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=620be9235dbbb2f57462761bcfe0bebb8e2bbece", "patch": "@@ -24,7 +24,7 @@ use syntax::parse::token::ident_interner;\n // local crate numbers (as generated during this session). Each external\n // crate may refer to types in other external crates, and each has their\n // own crate numbers.\n-pub type cnum_map = @mut HashMap<ast::CrateNum, ast::CrateNum>;\n+pub type cnum_map = @RefCell<HashMap<ast::CrateNum, ast::CrateNum>>;\n \n pub enum MetadataBlob {\n     MetadataVec(~[u8]),"}, {"sha": "a0b339cc91d74e772a82ed031978da931accd95f", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/620be9235dbbb2f57462761bcfe0bebb8e2bbece/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/620be9235dbbb2f57462761bcfe0bebb8e2bbece/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=620be9235dbbb2f57462761bcfe0bebb8e2bbece", "patch": "@@ -1197,9 +1197,15 @@ pub fn translate_def_id(cdata: Cmd, did: ast::DefId) -> ast::DefId {\n         return ast::DefId { crate: cdata.cnum, node: did.node };\n     }\n \n-    match cdata.cnum_map.find(&did.crate) {\n-      option::Some(&n) => ast::DefId { crate: n, node: did.node },\n-      option::None => fail!(\"didn't find a crate in the cnum_map\")\n+    let cnum_map = cdata.cnum_map.borrow();\n+    match cnum_map.get().find(&did.crate) {\n+        Some(&n) => {\n+            ast::DefId {\n+                crate: n,\n+                node: did.node,\n+            }\n+        }\n+        None => fail!(\"didn't find a crate in the cnum_map\")\n     }\n }\n "}, {"sha": "dd886b3054e89aa8515a384ce2e948add77c8f15", "filename": "src/librustc/middle/borrowck/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/620be9235dbbb2f57462761bcfe0bebb8e2bbece/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/620be9235dbbb2f57462761bcfe0bebb8e2bbece/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs?ref=620be9235dbbb2f57462761bcfe0bebb8e2bbece", "patch": "@@ -83,7 +83,7 @@ pub fn check_crate(\n         capture_map: capture_map,\n         root_map: root_map(),\n         write_guard_map: @RefCell::new(HashSet::new()),\n-        stats: @mut BorrowStats {\n+        stats: @BorrowStats {\n             loaned_paths_same: Cell::new(0),\n             loaned_paths_imm: Cell::new(0),\n             stable_paths: Cell::new(0),\n@@ -172,7 +172,7 @@ pub struct BorrowckCtxt {\n     write_guard_map: write_guard_map,\n \n     // Statistics:\n-    stats: @mut BorrowStats\n+    stats: @BorrowStats\n }\n \n pub struct BorrowStats {"}]}