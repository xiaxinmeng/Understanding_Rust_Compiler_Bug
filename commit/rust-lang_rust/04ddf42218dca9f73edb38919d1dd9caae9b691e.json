{"sha": "04ddf42218dca9f73edb38919d1dd9caae9b691e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZGRmNDIyMThkY2E5ZjczZWRiMzg5MTlkMWRkOWNhYWU5YjY5MWU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-24T21:10:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-24T21:10:06Z"}, "message": "Rollup merge of #81310 - tmiasko:in-pattern, r=petrochenkov\n\nDo not mark unit variants as used when in path pattern\n\nRecord that we are processing a pattern so that code responsible for\nhandling path resolution can correctly decide whether to mark it as\nused or not.\n\nCloses #76788.", "tree": {"sha": "d16b7bccb1a8a36c18c4865bea87700d438ac155", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d16b7bccb1a8a36c18c4865bea87700d438ac155"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04ddf42218dca9f73edb38919d1dd9caae9b691e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgDeIvCRBK7hj4Ov3rIwAAdHIIAC4RvW4nNtPRp+8mRxqP1CYU\n7MDilfVgSnLO2jOmnp1HzoTO2ctD2dCp7VkQGvW/vxvbfL4E/11anT+r/7mwHce1\nQYyTJLoEBQFKbPUbcz6/xuCP4uUo+HukWgLh9sKuDvHuBV67Mq/7GFvOIJ5OUmAt\nJ0r4xM5LM4mIGanS0mXwsGCCWqknt0nlx8Gks7/J0/D6M+U1su4e8KuKpSyofmKo\nogG9qIn3/qBCgBDPtWHVyunWP8Fi6VfTU/pP48WuJrBjuwck9ZhoV6TQz2+mIv1n\nLBG+DIhWeiqJrdrKg4PQGlSV4gSGOsQ1EHYJ/Twj7JssirppaBI13xSYvHDsK1s=\n=pSSz\n-----END PGP SIGNATURE-----\n", "payload": "tree d16b7bccb1a8a36c18c4865bea87700d438ac155\nparent ee4461a996dba7a1c7064fdc04934e9b7f01f7f3\nparent 99a1dea1b7727885d2660bae665cff165fb86a50\nauthor Jonas Schievink <jonasschievink@gmail.com> 1611522606 +0100\ncommitter GitHub <noreply@github.com> 1611522606 +0100\n\nRollup merge of #81310 - tmiasko:in-pattern, r=petrochenkov\n\nDo not mark unit variants as used when in path pattern\n\nRecord that we are processing a pattern so that code responsible for\nhandling path resolution can correctly decide whether to mark it as\nused or not.\n\nCloses #76788.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04ddf42218dca9f73edb38919d1dd9caae9b691e", "html_url": "https://github.com/rust-lang/rust/commit/04ddf42218dca9f73edb38919d1dd9caae9b691e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04ddf42218dca9f73edb38919d1dd9caae9b691e/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee4461a996dba7a1c7064fdc04934e9b7f01f7f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee4461a996dba7a1c7064fdc04934e9b7f01f7f3", "html_url": "https://github.com/rust-lang/rust/commit/ee4461a996dba7a1c7064fdc04934e9b7f01f7f3"}, {"sha": "99a1dea1b7727885d2660bae665cff165fb86a50", "url": "https://api.github.com/repos/rust-lang/rust/commits/99a1dea1b7727885d2660bae665cff165fb86a50", "html_url": "https://github.com/rust-lang/rust/commit/99a1dea1b7727885d2660bae665cff165fb86a50"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "3b1b53553d5e46c30e0235e4f64e20077bfdbf87", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04ddf42218dca9f73edb38919d1dd9caae9b691e/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04ddf42218dca9f73edb38919d1dd9caae9b691e/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=04ddf42218dca9f73edb38919d1dd9caae9b691e", "patch": "@@ -290,6 +290,7 @@ impl<'tcx> Visitor<'tcx> for MarkSymbolVisitor<'tcx> {\n     }\n \n     fn visit_pat(&mut self, pat: &'tcx hir::Pat<'tcx>) {\n+        self.in_pat = true;\n         match pat.kind {\n             PatKind::Struct(ref path, ref fields, _) => {\n                 let res = self.typeck_results().qpath_res(path, pat.hir_id);\n@@ -302,7 +303,6 @@ impl<'tcx> Visitor<'tcx> for MarkSymbolVisitor<'tcx> {\n             _ => (),\n         }\n \n-        self.in_pat = true;\n         intravisit::walk_pat(self, pat);\n         self.in_pat = false;\n     }"}, {"sha": "0bcdd6edf0d667aff4ba68279b4a051804539d68", "filename": "src/test/ui/lint/dead-code/const-and-self.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/04ddf42218dca9f73edb38919d1dd9caae9b691e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fconst-and-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04ddf42218dca9f73edb38919d1dd9caae9b691e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fconst-and-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fconst-and-self.rs?ref=04ddf42218dca9f73edb38919d1dd9caae9b691e", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n \n-#![deny(dead_code)]\n+#![warn(dead_code)]\n \n const TLC: usize = 4;\n \n@@ -28,8 +28,27 @@ impl Foo<Y> for X {\n     }\n }\n \n+enum E {\n+    A,\n+    B, //~ WARN variant is never constructed: `B`\n+    C, //~ WARN variant is never constructed: `C`\n+}\n+\n+type F = E;\n+\n+impl E {\n+    fn check(&self) -> bool {\n+        match self {\n+            Self::A => true,\n+            Self::B => false,\n+            F::C => false,\n+        }\n+    }\n+}\n+\n fn main() {\n     let s = [0,1,2,3];\n     s.doit();\n     X::foo();\n+    E::A.check();\n }"}, {"sha": "c0e406189e8ab3a64ecfe1b47994e4beac1493de", "filename": "src/test/ui/lint/dead-code/const-and-self.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/04ddf42218dca9f73edb38919d1dd9caae9b691e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fconst-and-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/04ddf42218dca9f73edb38919d1dd9caae9b691e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fconst-and-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fconst-and-self.stderr?ref=04ddf42218dca9f73edb38919d1dd9caae9b691e", "patch": "@@ -0,0 +1,20 @@\n+warning: variant is never constructed: `B`\n+  --> $DIR/const-and-self.rs:33:5\n+   |\n+LL |     B,\n+   |     ^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/const-and-self.rs:3:9\n+   |\n+LL | #![warn(dead_code)]\n+   |         ^^^^^^^^^\n+\n+warning: variant is never constructed: `C`\n+  --> $DIR/const-and-self.rs:34:5\n+   |\n+LL |     C,\n+   |     ^\n+\n+warning: 2 warnings emitted\n+"}]}