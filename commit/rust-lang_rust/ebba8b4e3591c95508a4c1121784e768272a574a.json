{"sha": "ebba8b4e3591c95508a4c1121784e768272a574a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViYmE4YjRlMzU5MWM5NTUwOGE0YzExMjE3ODRlNzY4MjcyYTU3NGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-16T05:39:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-16T05:39:42Z"}, "message": "auto merge of #5408 : thestinger/rust/trie, r=pcwalton\n\nThe chunk fix is cherry picked from @graydon's `gc` branch.", "tree": {"sha": "c03376d29dbe1548524c430938a820ec9cbfac72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c03376d29dbe1548524c430938a820ec9cbfac72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebba8b4e3591c95508a4c1121784e768272a574a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebba8b4e3591c95508a4c1121784e768272a574a", "html_url": "https://github.com/rust-lang/rust/commit/ebba8b4e3591c95508a4c1121784e768272a574a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebba8b4e3591c95508a4c1121784e768272a574a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc5ad5070d06015d6a45f656882ae245197d0ff8", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc5ad5070d06015d6a45f656882ae245197d0ff8", "html_url": "https://github.com/rust-lang/rust/commit/dc5ad5070d06015d6a45f656882ae245197d0ff8"}, {"sha": "d856215b925441a4889cb23cab5758c36e4a4746", "url": "https://api.github.com/repos/rust-lang/rust/commits/d856215b925441a4889cb23cab5758c36e4a4746", "html_url": "https://github.com/rust-lang/rust/commit/d856215b925441a4889cb23cab5758c36e4a4746"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "15b0e16043431759f9111b0cee8b427696d7b018", "filename": "src/libcore/trie.rs", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/ebba8b4e3591c95508a4c1121784e768272a574a/src%2Flibcore%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebba8b4e3591c95508a4c1121784e768272a574a/src%2Flibcore%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftrie.rs?ref=ebba8b4e3591c95508a4c1121784e768272a574a", "patch": "@@ -137,6 +137,7 @@ impl<T> Map<uint, T> for TrieMap<T> {\n }\n \n impl<T> TrieMap<T> {\n+    /// Create an empty TrieMap\n     #[inline(always)]\n     static pure fn new() -> TrieMap<T> {\n         TrieMap{root: TrieNode::new(), length: 0}\n@@ -191,6 +192,12 @@ impl Mutable for TrieSet {\n }\n \n impl TrieSet {\n+    /// Create an empty TrieSet\n+    #[inline(always)]\n+    static pure fn new() -> TrieSet {\n+        TrieSet{map: TrieMap::new()}\n+    }\n+\n     /// Return true if the set contains a value\n     #[inline(always)]\n     pure fn contains(&self, value: &uint) -> bool {\n@@ -265,8 +272,8 @@ impl<T> TrieNode<T> {\n // if this was done via a trait, the key could be generic\n #[inline(always)]\n pure fn chunk(n: uint, idx: uint) -> uint {\n-    let real_idx = uint::bytes - 1 - idx;\n-    (n >> (SHIFT * real_idx)) & MASK\n+    let sh = uint::bits - (SHIFT * (idx + 1));\n+    (n >> sh) & MASK\n }\n \n fn insert<T>(count: &mut uint, child: &mut Child<T>, key: uint, value: T,\n@@ -462,4 +469,26 @@ mod tests {\n             n -= 1;\n         }\n     }\n+\n+    #[test]\n+    fn test_sane_chunk() {\n+        let x = 1;\n+        let y = 1 << (uint::bits - 1);\n+\n+        let mut trie = TrieSet::new();\n+\n+        fail_unless!(trie.insert(x));\n+        fail_unless!(trie.insert(y));\n+\n+        fail_unless!(trie.len() == 2);\n+\n+        let expected = [x, y];\n+\n+        let mut i = 0;\n+\n+        for trie.each |x| {\n+            fail_unless!(expected[i] == *x);\n+            i += 1;\n+        }\n+    }\n }"}]}