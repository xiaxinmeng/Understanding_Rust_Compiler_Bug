{"sha": "075380dd56439cdaf1967b7298e10b96b995fc07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NTM4MGRkNTY0MzljZGFmMTk2N2I3Mjk4ZTEwYjk2Yjk5NWZjMDc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-10T12:42:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-10T12:42:26Z"}, "message": "Look through Arc for goto type definition", "tree": {"sha": "754d726b02595db4dcc4594712e30ca97a336988", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/754d726b02595db4dcc4594712e30ca97a336988"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/075380dd56439cdaf1967b7298e10b96b995fc07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/075380dd56439cdaf1967b7298e10b96b995fc07", "html_url": "https://github.com/rust-lang/rust/commit/075380dd56439cdaf1967b7298e10b96b995fc07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/075380dd56439cdaf1967b7298e10b96b995fc07/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd4502fd47ecd74ac52815fe8598b002ca1316a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd4502fd47ecd74ac52815fe8598b002ca1316a0", "html_url": "https://github.com/rust-lang/rust/commit/cd4502fd47ecd74ac52815fe8598b002ca1316a0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "069cb283e5a5a78207022a38b37f80fb5a097c6d", "filename": "crates/ra_ide/src/goto_type_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/075380dd56439cdaf1967b7298e10b96b995fc07/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/075380dd56439cdaf1967b7298e10b96b995fc07/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs?ref=075380dd56439cdaf1967b7298e10b96b995fc07", "patch": "@@ -35,7 +35,7 @@ pub(crate) fn goto_type_definition(\n         Some((ty, node))\n     })?;\n \n-    let adt_def = ty.autoderef(db).find_map(|ty| ty.as_adt())?;\n+    let adt_def = ty.autoderef(db).filter_map(|ty| ty.as_adt()).last()?;\n \n     let nav = adt_def.to_nav(db);\n     Some(RangeInfo::new(node.text_range(), vec![nav]))"}]}