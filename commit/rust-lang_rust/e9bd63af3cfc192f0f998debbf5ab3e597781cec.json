{"sha": "e9bd63af3cfc192f0f998debbf5ab3e597781cec", "node_id": "C_kwDOAAsO6NoAKGU5YmQ2M2FmM2NmYzE5MmYwZjk5OGRlYmJmNWFiM2U1OTc3ODFjZWM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-06-15T17:14:49Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-06-15T17:14:49Z"}, "message": "Ignore -Clink-arg=-import-instr-limit", "tree": {"sha": "5bc67aff79b182c57f006bdbe45e132e87f1ff2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bc67aff79b182c57f006bdbe45e132e87f1ff2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9bd63af3cfc192f0f998debbf5ab3e597781cec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9bd63af3cfc192f0f998debbf5ab3e597781cec", "html_url": "https://github.com/rust-lang/rust/commit/e9bd63af3cfc192f0f998debbf5ab3e597781cec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9bd63af3cfc192f0f998debbf5ab3e597781cec/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "485d7e129f5beb67e7769014959e07aff5989d22", "url": "https://api.github.com/repos/rust-lang/rust/commits/485d7e129f5beb67e7769014959e07aff5989d22", "html_url": "https://github.com/rust-lang/rust/commit/485d7e129f5beb67e7769014959e07aff5989d22"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "9e92d656c76efeb99fbc45ee8355acc70c81606c", "filename": "src/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e9bd63af3cfc192f0f998debbf5ab3e597781cec/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9bd63af3cfc192f0f998debbf5ab3e597781cec/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=e9bd63af3cfc192f0f998debbf5ab3e597781cec", "patch": "@@ -82,6 +82,11 @@ impl BackendConfig {\n \n         let mut config = BackendConfig::default();\n         for opt in opts {\n+            if opt.starts_with(\"-import-instr-limit\") {\n+                // Silently ignore -import-instr-limit. It is set by rust's build system even when\n+                // testing cg_clif.\n+                continue;\n+            }\n             if let Some((name, value)) = opt.split_once('=') {\n                 match name {\n                     \"mode\" => config.codegen_mode = value.parse()?,"}]}