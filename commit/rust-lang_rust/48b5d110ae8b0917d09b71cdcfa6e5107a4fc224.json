{"sha": "48b5d110ae8b0917d09b71cdcfa6e5107a4fc224", "node_id": "C_kwDOAAsO6NoAKDQ4YjVkMTEwYWU4YjA5MTdkMDliNzFjZGNmYTZlNTEwN2E0ZmMyMjQ", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-09-28T18:00:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-28T18:00:16Z"}, "message": "Rollup merge of #89255 - FabianWolff:issue-88806, r=cjgillot\n\nFix incorrect disambiguation suggestion for associated items\n\nFixes #88806. I have not added a new test case, because the erroneous behavior is already present in existing test cases.", "tree": {"sha": "fa6719e53509e39ddd87795732f64600c5834ab8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa6719e53509e39ddd87795732f64600c5834ab8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhU1gwCRBK7hj4Ov3rIwAAFRwIAD15EGs1AUh6D6ucpLhOgpzB\nx93sL6zyxm3MyYTPHbMCFY5af9cDUTsTTAi2QPP6VO/r6xTh2vUu45LLmLyV8Bu+\n0lfCftZiGU+1PnRR3W7wRlpUO5NHsQg/+vrgVm0+i8JCxfVT5vEnvip7GZ99yT4L\nSGCOVr7dfjoSKDTqclms/t+IIdfH0etXw49lJ8/XRnN3LsYb9velaEsxfGppwzug\nspfyEZZPTSwBadxkapyGxTE1RWG0SyM4mGRjJqrDjC5uMDE+p72ZXfLKL3l0QD6R\nWqXurYETnDvQOaTXWJyCQpELl8TGV830sG02ty2LVc2fM4mQO7flqONJT2cf3H8=\n=hvM4\n-----END PGP SIGNATURE-----\n", "payload": "tree fa6719e53509e39ddd87795732f64600c5834ab8\nparent e601554dc0e2443a286cf529c1463b00d8e1fdde\nparent 3d08ff1c19360e89a351184b9191454045059823\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1632852016 +0200\ncommitter GitHub <noreply@github.com> 1632852016 +0200\n\nRollup merge of #89255 - FabianWolff:issue-88806, r=cjgillot\n\nFix incorrect disambiguation suggestion for associated items\n\nFixes #88806. I have not added a new test case, because the erroneous behavior is already present in existing test cases.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224", "html_url": "https://github.com/rust-lang/rust/commit/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e601554dc0e2443a286cf529c1463b00d8e1fdde", "url": "https://api.github.com/repos/rust-lang/rust/commits/e601554dc0e2443a286cf529c1463b00d8e1fdde", "html_url": "https://github.com/rust-lang/rust/commit/e601554dc0e2443a286cf529c1463b00d8e1fdde"}, {"sha": "3d08ff1c19360e89a351184b9191454045059823", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d08ff1c19360e89a351184b9191454045059823", "html_url": "https://github.com/rust-lang/rust/commit/3d08ff1c19360e89a351184b9191454045059823"}], "stats": {"total": 48, "additions": 28, "deletions": 20}, "files": [{"sha": "9c7853dd78d3bbb61fd295857dff464714a0f7ba", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=48b5d110ae8b0917d09b71cdcfa6e5107a4fc224", "patch": "@@ -176,6 +176,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 sugg_span,\n                                 idx,\n                                 self.tcx.sess.source_map(),\n+                                item.fn_has_self_parameter,\n                             );\n                         }\n                     }\n@@ -218,6 +219,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             sugg_span,\n                             idx,\n                             self.tcx.sess.source_map(),\n+                            item.fn_has_self_parameter,\n                         );\n                     }\n                 }\n@@ -1736,6 +1738,7 @@ fn print_disambiguation_help(\n     span: Span,\n     candidate: Option<usize>,\n     source_map: &source_map::SourceMap,\n+    fn_has_self_parameter: bool,\n ) {\n     let mut applicability = Applicability::MachineApplicable;\n     let (span, sugg) = if let (ty::AssocKind::Fn, Some(args)) = (kind, args) {\n@@ -1754,9 +1757,14 @@ fn print_disambiguation_help(\n                 .collect::<Vec<_>>()\n                 .join(\", \"),\n         );\n+        let trait_name = if !fn_has_self_parameter {\n+            format!(\"<{} as {}>\", rcvr_ty, trait_name)\n+        } else {\n+            trait_name\n+        };\n         (span, format!(\"{}::{}{}\", trait_name, item_name, args))\n     } else {\n-        (span.with_hi(item_name.span.lo()), format!(\"{}::\", trait_name))\n+        (span.with_hi(item_name.span.lo()), format!(\"<{} as {}>::\", rcvr_ty, trait_name))\n     };\n     err.span_suggestion_verbose(\n         span,"}, {"sha": "60cf9a533cd72cb1aa8884fdafec6e6e7ac06cfc", "filename": "src/test/ui/associated-consts/associated-const-ambiguity-report.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224/src%2Ftest%2Fui%2Fassociated-consts%2Fassociated-const-ambiguity-report.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224/src%2Ftest%2Fui%2Fassociated-consts%2Fassociated-const-ambiguity-report.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-consts%2Fassociated-const-ambiguity-report.stderr?ref=48b5d110ae8b0917d09b71cdcfa6e5107a4fc224", "patch": "@@ -16,12 +16,12 @@ LL |     const ID: i32 = 3;\n    |     ^^^^^^^^^^^^^^^^^^\n help: disambiguate the associated constant for candidate #1\n    |\n-LL | const X: i32 = Foo::ID;\n-   |                ~~~~~\n+LL | const X: i32 = <i32 as Foo>::ID;\n+   |                ~~~~~~~~~~~~~~\n help: disambiguate the associated constant for candidate #2\n    |\n-LL | const X: i32 = Bar::ID;\n-   |                ~~~~~\n+LL | const X: i32 = <i32 as Bar>::ID;\n+   |                ~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "e296217026570208b02c4531fab814979ab02640", "filename": "src/test/ui/error-codes/E0034.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr?ref=48b5d110ae8b0917d09b71cdcfa6e5107a4fc224", "patch": "@@ -16,12 +16,12 @@ LL |     fn foo() {}\n    |     ^^^^^^^^\n help: disambiguate the associated function for candidate #1\n    |\n-LL |     Trait1::foo()\n-   |     ~~~~~~~~\n+LL |     <Test as Trait1>::foo()\n+   |     ~~~~~~~~~~~~~~~~~~\n help: disambiguate the associated function for candidate #2\n    |\n-LL |     Trait2::foo()\n-   |     ~~~~~~~~\n+LL |     <Test as Trait2>::foo()\n+   |     ~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "4ba778e0ef7256fa8eb5947a131d53754da067dd", "filename": "src/test/ui/methods/method-ambig-two-traits-from-impls2.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr?ref=48b5d110ae8b0917d09b71cdcfa6e5107a4fc224", "patch": "@@ -16,12 +16,12 @@ LL |     fn foo() {}\n    |     ^^^^^^^^\n help: disambiguate the associated function for candidate #1\n    |\n-LL |     A::foo();\n-   |     ~~~\n+LL |     <AB as A>::foo();\n+   |     ~~~~~~~~~~~\n help: disambiguate the associated function for candidate #2\n    |\n-LL |     B::foo();\n-   |     ~~~\n+LL |     <AB as B>::foo();\n+   |     ~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "783f5aca4174681a49181bed9bc80f0f35c32bab", "filename": "src/test/ui/span/issue-7575.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48b5d110ae8b0917d09b71cdcfa6e5107a4fc224/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr?ref=48b5d110ae8b0917d09b71cdcfa6e5107a4fc224", "patch": "@@ -27,16 +27,16 @@ LL |     fn f9(_: usize) -> usize;\n            candidate #3: `UnusedTrait`\n help: disambiguate the associated function for candidate #1\n    |\n-LL |     u.f8(42) + CtxtFn::f9(u, 342) + m.fff(42)\n-   |                ~~~~~~~~~~~~~~~~~~\n+LL |     u.f8(42) + <usize as CtxtFn>::f9(u, 342) + m.fff(42)\n+   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n help: disambiguate the associated function for candidate #2\n    |\n-LL |     u.f8(42) + OtherTrait::f9(u, 342) + m.fff(42)\n-   |                ~~~~~~~~~~~~~~~~~~~~~~\n+LL |     u.f8(42) + <usize as OtherTrait>::f9(u, 342) + m.fff(42)\n+   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n help: disambiguate the associated function for candidate #3\n    |\n-LL |     u.f8(42) + UnusedTrait::f9(u, 342) + m.fff(42)\n-   |                ~~~~~~~~~~~~~~~~~~~~~~~\n+LL |     u.f8(42) + <usize as UnusedTrait>::f9(u, 342) + m.fff(42)\n+   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0599]: no method named `fff` found for struct `Myisize` in the current scope\n   --> $DIR/issue-7575.rs:62:30\n@@ -72,7 +72,7 @@ LL |     fn is_str() -> bool {\n    = help: items from traits can only be used if the type parameter is bounded by the trait\n help: disambiguate the associated function for the candidate\n    |\n-LL |     ManyImplTrait::is_str(t)\n+LL |     <T as ManyImplTrait>::is_str(t)\n    |\n \n error: aborting due to 3 previous errors"}]}