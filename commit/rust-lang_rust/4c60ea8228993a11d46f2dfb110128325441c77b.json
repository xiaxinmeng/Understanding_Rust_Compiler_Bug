{"sha": "4c60ea8228993a11d46f2dfb110128325441c77b", "node_id": "C_kwDOAAsO6NoAKDRjNjBlYTgyMjg5OTNhMTFkNDZmMmRmYjExMDEyODMyNTQ0MWM3N2I", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-09-06T00:16:28Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-11-19T00:10:28Z"}, "message": "Add checks for more empty attributes.", "tree": {"sha": "eaa250d92b96b8e26b8f1f06dd6ccd526518ef40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eaa250d92b96b8e26b8f1f06dd6ccd526518ef40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c60ea8228993a11d46f2dfb110128325441c77b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c60ea8228993a11d46f2dfb110128325441c77b", "html_url": "https://github.com/rust-lang/rust/commit/4c60ea8228993a11d46f2dfb110128325441c77b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c60ea8228993a11d46f2dfb110128325441c77b/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67a5b193c113b56cc885006a675280add09a14e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/67a5b193c113b56cc885006a675280add09a14e3", "html_url": "https://github.com/rust-lang/rust/commit/67a5b193c113b56cc885006a675280add09a14e3"}], "stats": {"total": 375, "additions": 255, "deletions": 120}, "files": [{"sha": "2def57cf02a61564b412ba20da6af37c1bccd5a5", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4c60ea8228993a11d46f2dfb110128325441c77b/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c60ea8228993a11d46f2dfb110128325441c77b/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=4c60ea8228993a11d46f2dfb110128325441c77b", "patch": "@@ -173,8 +173,17 @@ impl CheckAttrVisitor<'tcx> {\n             }\n \n             // Warn on useless empty attributes.\n-            if matches!(attr.name_or_empty(), sym::macro_use)\n-                && attr.meta_item_list().map_or(false, |list| list.is_empty())\n+            if matches!(\n+                attr.name_or_empty(),\n+                sym::macro_use\n+                    | sym::allow\n+                    | sym::warn\n+                    | sym::deny\n+                    | sym::forbid\n+                    | sym::feature\n+                    | sym::repr\n+                    | sym::target_feature\n+            ) && attr.meta_item_list().map_or(false, |list| list.is_empty())\n             {\n                 self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n                     lint.build(\"unused attribute\")"}, {"sha": "7e9b05587b075e56805c54349b1cb9841d351491", "filename": "src/test/ui/empty/empty-attributes.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4c60ea8228993a11d46f2dfb110128325441c77b/src%2Ftest%2Fui%2Fempty%2Fempty-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c60ea8228993a11d46f2dfb110128325441c77b/src%2Ftest%2Fui%2Fempty%2Fempty-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-attributes.rs?ref=4c60ea8228993a11d46f2dfb110128325441c77b", "patch": "@@ -0,0 +1,14 @@\n+#![deny(unused_attributes)]\n+#![allow()] //~ ERROR unused attribute\n+#![warn()] //~ ERROR unused attribute\n+#![deny()] //~ ERROR unused attribute\n+#![forbid()] //~ ERROR unused attribute\n+#![feature()] //~ ERROR unused attribute\n+\n+#[repr()] //~ ERROR unused attribute\n+pub struct S;\n+\n+#[target_feature()] //~ ERROR unused attribute\n+pub unsafe fn foo() {}\n+\n+fn main() {}"}, {"sha": "e0798e4f0c69fc9b610fc5ad79113f887b321711", "filename": "src/test/ui/empty/empty-attributes.stderr", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/4c60ea8228993a11d46f2dfb110128325441c77b/src%2Ftest%2Fui%2Fempty%2Fempty-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c60ea8228993a11d46f2dfb110128325441c77b/src%2Ftest%2Fui%2Fempty%2Fempty-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-attributes.stderr?ref=4c60ea8228993a11d46f2dfb110128325441c77b", "patch": "@@ -0,0 +1,63 @@\n+error: unused attribute\n+  --> $DIR/empty-attributes.rs:8:1\n+   |\n+LL | #[repr()]\n+   | ^^^^^^^^^ help: remove this attribute\n+   |\n+note: the lint level is defined here\n+  --> $DIR/empty-attributes.rs:1:9\n+   |\n+LL | #![deny(unused_attributes)]\n+   |         ^^^^^^^^^^^^^^^^^\n+   = note: attribute `repr` with an empty list has no effect\n+\n+error: unused attribute\n+  --> $DIR/empty-attributes.rs:11:1\n+   |\n+LL | #[target_feature()]\n+   | ^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n+   |\n+   = note: attribute `target_feature` with an empty list has no effect\n+\n+error: unused attribute\n+  --> $DIR/empty-attributes.rs:2:1\n+   |\n+LL | #![allow()]\n+   | ^^^^^^^^^^^ help: remove this attribute\n+   |\n+   = note: attribute `allow` with an empty list has no effect\n+\n+error: unused attribute\n+  --> $DIR/empty-attributes.rs:3:1\n+   |\n+LL | #![warn()]\n+   | ^^^^^^^^^^ help: remove this attribute\n+   |\n+   = note: attribute `warn` with an empty list has no effect\n+\n+error: unused attribute\n+  --> $DIR/empty-attributes.rs:4:1\n+   |\n+LL | #![deny()]\n+   | ^^^^^^^^^^ help: remove this attribute\n+   |\n+   = note: attribute `deny` with an empty list has no effect\n+\n+error: unused attribute\n+  --> $DIR/empty-attributes.rs:5:1\n+   |\n+LL | #![forbid()]\n+   | ^^^^^^^^^^^^ help: remove this attribute\n+   |\n+   = note: attribute `forbid` with an empty list has no effect\n+\n+error: unused attribute\n+  --> $DIR/empty-attributes.rs:6:1\n+   |\n+LL | #![feature()]\n+   | ^^^^^^^^^^^^^ help: remove this attribute\n+   |\n+   = note: attribute `feature` with an empty list has no effect\n+\n+error: aborting due to 7 previous errors\n+"}, {"sha": "1fe133ac2bc98d04d8a97e8cedd18538c1efcbd4", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs-error.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4c60ea8228993a11d46f2dfb110128325441c77b/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c60ea8228993a11d46f2dfb110128325441c77b/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.rs?ref=4c60ea8228993a11d46f2dfb110128325441c77b", "patch": "@@ -134,4 +134,27 @@ mod start {\n     //~^ ERROR: `start` attribute can only be used on functions\n }\n \n+#[repr(C)]\n+//~^ ERROR: attribute should be applied to a struct, enum, or union\n+mod repr {\n+//~^ NOTE not a struct, enum, or union\n+    mod inner { #![repr(C)] }\n+    //~^ ERROR: attribute should be applied to a struct, enum, or union\n+    //~| NOTE not a struct, enum, or union\n+\n+    #[repr(C)] fn f() { }\n+    //~^ ERROR: attribute should be applied to a struct, enum, or union\n+    //~| NOTE not a struct, enum, or union\n+\n+    struct S;\n+\n+    #[repr(C)] type T = S;\n+    //~^ ERROR: attribute should be applied to a struct, enum, or union\n+    //~| NOTE not a struct, enum, or union\n+\n+    #[repr(C)] impl S { }\n+    //~^ ERROR: attribute should be applied to a struct, enum, or union\n+    //~| NOTE not a struct, enum, or union\n+}\n+\n fn main() {}"}, {"sha": "9e2e2d4137d258ca3aa4c20044f66164b342f0da", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs-error.stderr", "status": "modified", "additions": 42, "deletions": 3, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/4c60ea8228993a11d46f2dfb110128325441c77b/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c60ea8228993a11d46f2dfb110128325441c77b/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.stderr?ref=4c60ea8228993a11d46f2dfb110128325441c77b", "patch": "@@ -91,6 +91,21 @@ LL | |     }\n LL | | }\n    | |_- not a free function, impl method or static\n \n+error[E0517]: attribute should be applied to a struct, enum, or union\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:137:8\n+   |\n+LL |   #[repr(C)]\n+   |          ^\n+LL |\n+LL | / mod repr {\n+LL | |\n+LL | |     mod inner { #![repr(C)] }\n+LL | |\n+...  |\n+LL | |\n+LL | | }\n+   | |_- not a struct, enum, or union\n+\n error: attribute should be applied to an `extern crate` item\n   --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:25:1\n    |\n@@ -235,7 +250,31 @@ error: attribute should be applied to a free function, impl method or static\n LL |         #[export_name = \"2200\"] fn bar() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a free function, impl method or static\n \n-error: aborting due to 34 previous errors\n+error[E0517]: attribute should be applied to a struct, enum, or union\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:141:25\n+   |\n+LL |     mod inner { #![repr(C)] }\n+   |     --------------------^---- not a struct, enum, or union\n+\n+error[E0517]: attribute should be applied to a struct, enum, or union\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:145:12\n+   |\n+LL |     #[repr(C)] fn f() { }\n+   |            ^   ---------- not a struct, enum, or union\n+\n+error[E0517]: attribute should be applied to a struct, enum, or union\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:151:12\n+   |\n+LL |     #[repr(C)] type T = S;\n+   |            ^   ----------- not a struct, enum, or union\n+\n+error[E0517]: attribute should be applied to a struct, enum, or union\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:155:12\n+   |\n+LL |     #[repr(C)] impl S { }\n+   |            ^   ---------- not a struct, enum, or union\n+\n+error: aborting due to 39 previous errors\n \n-Some errors have detailed explanations: E0518, E0658.\n-For more information about an error, try `rustc --explain E0518`.\n+Some errors have detailed explanations: E0517, E0518, E0658.\n+For more information about an error, try `rustc --explain E0517`."}, {"sha": "1ddf8508cc8ccf9e42649de3cc076d8715d05ba6", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4c60ea8228993a11d46f2dfb110128325441c77b/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c60ea8228993a11d46f2dfb110128325441c77b/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs?ref=4c60ea8228993a11d46f2dfb110128325441c77b", "patch": "@@ -245,19 +245,6 @@ mod bench {\n     impl S { }\n }\n \n-#[repr()]\n-mod repr {\n-    mod inner { #![repr()] }\n-\n-    #[repr()] fn f() { }\n-\n-    struct S;\n-\n-    #[repr()] type T = S;\n-\n-    #[repr()] impl S { }\n-}\n-\n #[path = \"3800\"]\n mod path {\n     mod inner { #![path=\"3800\"] }"}, {"sha": "b98374bfa80ccc4de89cad9b00452b583b3f00c5", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 102, "deletions": 102, "changes": 204, "blob_url": "https://github.com/rust-lang/rust/blob/4c60ea8228993a11d46f2dfb110128325441c77b/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c60ea8228993a11d46f2dfb110128325441c77b/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=4c60ea8228993a11d46f2dfb110128325441c77b", "patch": "@@ -173,15 +173,15 @@ LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:412:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:399:17\n    |\n LL |     mod inner { #![macro_escape] }\n    |                 ^^^^^^^^^^^^^^^^\n    |\n    = help: try an outer attribute: `#[macro_use]`\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:409:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:396:1\n    |\n LL | #[macro_escape]\n    | ^^^^^^^^^^^^^^^\n@@ -213,13 +213,13 @@ LL | #![warn(unused_attributes, unknown_lints)]\n    |         ^^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:278:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:265:1\n    |\n LL | #[automatically_derived]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:296:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:283:1\n    |\n LL |   #[no_mangle]\n    |   ^^^^^^^^^^^^\n@@ -236,31 +236,31 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:336:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:323:1\n    |\n LL | #[should_panic]\n    | ^^^^^^^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:354:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:341:1\n    |\n LL | #[ignore]\n    | ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:389:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:376:1\n    |\n LL | #[reexport_test_harness_main = \"2900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:429:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:416:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:465:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:452:1\n    |\n LL |   #[cold]\n    |   ^^^^^^^\n@@ -277,7 +277,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:494:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:481:1\n    |\n LL |   #[link_name = \"1900\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^\n@@ -294,7 +294,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:533:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:520:1\n    |\n LL |   #[link_section = \"1800\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -311,37 +311,37 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:624:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:611:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:630:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:662:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:649:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:682:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:669:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:714:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:733:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -443,291 +443,291 @@ LL |     #[macro_export] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[path]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:265:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:252:5\n    |\n LL |     #[path = \"3800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: `#[path]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:268:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:255:5\n    |\n LL |     #[path = \"3800\"]  struct S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: `#[path]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:271:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:258:5\n    |\n LL |     #[path = \"3800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: `#[path]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:274:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:261:5\n    |\n LL |     #[path = \"3800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:281:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:268:17\n    |\n LL |     mod inner { #![automatically_derived] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:284:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:271:5\n    |\n LL |     #[automatically_derived] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:287:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:274:5\n    |\n LL |     #[automatically_derived] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[automatically_derived]` only has an effect on items\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:290:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:277:5\n    |\n LL |     #[automatically_derived] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:301:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:288:17\n    |\n LL |     mod inner { #![no_mangle] }\n    |     ------------^^^^^^^^^^^^^-- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:308:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:295:5\n    |\n LL |     #[no_mangle] struct S;\n    |     ^^^^^^^^^^^^ --------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:313:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:300:5\n    |\n LL |     #[no_mangle] type T = S;\n    |     ^^^^^^^^^^^^ ----------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:318:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:305:5\n    |\n LL |     #[no_mangle] impl S { }\n    |     ^^^^^^^^^^^^ ---------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:324:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:311:9\n    |\n LL |         #[no_mangle] fn foo();\n    |         ^^^^^^^^^^^^ --------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:329:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:316:9\n    |\n LL |         #[no_mangle] fn bar() {}\n    |         ^^^^^^^^^^^^ ----------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:339:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:326:17\n    |\n LL |     mod inner { #![should_panic] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:344:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:331:5\n    |\n LL |     #[should_panic] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:347:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:334:5\n    |\n LL |     #[should_panic] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[should_panic]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:350:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:337:5\n    |\n LL |     #[should_panic] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:357:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:344:17\n    |\n LL |     mod inner { #![ignore] }\n    |                 ^^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:362:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:349:5\n    |\n LL |     #[ignore] struct S;\n    |     ^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:365:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:352:5\n    |\n LL |     #[ignore] type T = S;\n    |     ^^^^^^^^^\n \n warning: `#[ignore]` only has an effect on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:368:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:355:5\n    |\n LL |     #[ignore] impl S { }\n    |     ^^^^^^^^^\n \n warning: `#[no_implicit_prelude]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:376:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:363:5\n    |\n LL |     #[no_implicit_prelude] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[no_implicit_prelude]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:379:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:366:5\n    |\n LL |     #[no_implicit_prelude] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[no_implicit_prelude]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:382:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:369:5\n    |\n LL |     #[no_implicit_prelude] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[no_implicit_prelude]` only has an effect on modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:385:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:372:5\n    |\n LL |     #[no_implicit_prelude] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:392:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:379:17\n    |\n LL |     mod inner { #![reexport_test_harness_main=\"2900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:395:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:382:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:385:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:388:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:404:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:391:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:416:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:403:5\n    |\n LL |     #[macro_escape] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:419:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:406:5\n    |\n LL |     #[macro_escape] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:422:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:409:5\n    |\n LL |     #[macro_escape] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:425:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:412:5\n    |\n LL |     #[macro_escape] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:432:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:419:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:435:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:422:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:425:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:441:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:428:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:444:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:431:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:471:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:458:17\n    |\n LL |     mod inner { #![cold] }\n    |     ------------^^^^^^^^-- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:478:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:465:5\n    |\n LL |     #[cold] struct S;\n    |     ^^^^^^^ --------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:483:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:470:5\n    |\n LL |     #[cold] type T = S;\n    |     ^^^^^^^ ----------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:488:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:475:5\n    |\n LL |     #[cold] impl S { }\n    |     ^^^^^^^ ---------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:500:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:487:5\n    |\n LL |     #[link_name = \"1900\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n@@ -737,259 +737,259 @@ LL |     extern \"C\" { }\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n help: try `#[link(name = \"1900\")]` instead\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:500:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:487:5\n    |\n LL |     #[link_name = \"1900\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:507:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:494:17\n    |\n LL |     mod inner { #![link_name=\"1900\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^-- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:512:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:5\n    |\n LL |     #[link_name = \"1900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:517:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:504:5\n    |\n LL |     #[link_name = \"1900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^ --------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:522:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:509:5\n    |\n LL |     #[link_name = \"1900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^ ----------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:527:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:514:5\n    |\n LL |     #[link_name = \"1900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:539:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:526:17\n    |\n LL |     mod inner { #![link_section=\"1800\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:546:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:533:5\n    |\n LL |     #[link_section = \"1800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:551:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:538:5\n    |\n LL |     #[link_section = \"1800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:556:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:543:5\n    |\n LL |     #[link_section = \"1800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:627:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:614:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:630:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:617:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:633:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:620:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:636:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:623:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:626:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:646:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:633:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:649:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:636:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:652:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:655:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:642:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:658:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:645:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:665:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:652:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:655:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:671:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:658:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:674:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:661:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:677:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:664:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:672:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:688:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:675:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:691:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:678:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:694:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:681:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:684:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:717:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:704:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:707:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:723:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:710:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:713:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:729:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:736:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:723:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:739:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:742:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:729:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:745:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:732:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:748:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:735:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}