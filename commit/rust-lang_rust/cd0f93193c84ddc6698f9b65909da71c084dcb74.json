{"sha": "cd0f93193c84ddc6698f9b65909da71c084dcb74", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMGY5MzE5M2M4NGRkYzY2OThmOWI2NTkwOWRhNzFjMDg0ZGNiNzQ=", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-06-09T00:19:03Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-06-21T06:07:28Z"}, "message": "Use Tera templates for rustdoc.\n\nReplaces a format!() call in layout::render with a template\nexpansion. Introduces a `templates` field in SharedContext so parts\nof rustdoc can share pre-rendered templates.\n\nThis currently builds in a copy of the single template available, like\nwith static files. However, future work can make this live-loadable with\na perma-unstable flag, to make rustdoc developers' work easier.", "tree": {"sha": "3f0b0152ed00f9f65dfdf6e0de2fb4d8443b4e4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f0b0152ed00f9f65dfdf6e0de2fb4d8443b4e4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd0f93193c84ddc6698f9b65909da71c084dcb74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd0f93193c84ddc6698f9b65909da71c084dcb74", "html_url": "https://github.com/rust-lang/rust/commit/cd0f93193c84ddc6698f9b65909da71c084dcb74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd0f93193c84ddc6698f9b65909da71c084dcb74/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50a407200b970d8a48e4e58de37c94df355f5472", "url": "https://api.github.com/repos/rust-lang/rust/commits/50a407200b970d8a48e4e58de37c94df355f5472", "html_url": "https://github.com/rust-lang/rust/commit/50a407200b970d8a48e4e58de37c94df355f5472"}], "stats": {"total": 428, "additions": 252, "deletions": 176}, "files": [{"sha": "d2e2e77300c71c4d6486096c640af15da548b2c6", "filename": "Cargo.lock", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/cd0f93193c84ddc6698f9b65909da71c084dcb74/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/cd0f93193c84ddc6698f9b65909da71c084dcb74/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=cd0f93193c84ddc6698f9b65909da71c084dcb74", "patch": "@@ -1482,6 +1482,17 @@ dependencies = [\n  \"regex\",\n ]\n \n+[[package]]\n+name = \"globwalk\"\n+version = \"0.8.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"93e3af942408868f6934a7b85134a3230832b9977cf66125df2f9edcfce4ddcc\"\n+dependencies = [\n+ \"bitflags\",\n+ \"ignore\",\n+ \"walkdir\",\n+]\n+\n [[package]]\n name = \"gsgdt\"\n version = \"0.1.2\"\n@@ -4518,6 +4529,7 @@ dependencies = [\n  \"serde_json\",\n  \"smallvec\",\n  \"tempfile\",\n+ \"tera\",\n  \"tracing\",\n  \"tracing-subscriber\",\n  \"tracing-tree\",\n@@ -5099,6 +5111,21 @@ dependencies = [\n  \"utf-8\",\n ]\n \n+[[package]]\n+name = \"tera\"\n+version = \"1.10.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"81060acb882480c8793782eb96bc86f5c83d2fc7175ad46c375c6956ef7afa62\"\n+dependencies = [\n+ \"globwalk\",\n+ \"lazy_static\",\n+ \"pest\",\n+ \"pest_derive\",\n+ \"regex\",\n+ \"serde\",\n+ \"serde_json\",\n+]\n+\n [[package]]\n name = \"term\"\n version = \"0.0.0\""}, {"sha": "d5957b632dc167abad3f01877c79333cbabcc4e4", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=cd0f93193c84ddc6698f9b65909da71c084dcb74", "patch": "@@ -21,6 +21,7 @@ regex = \"1\"\n rustdoc-json-types = { path = \"../rustdoc-json-types\" }\n tracing = \"0.1\"\n tracing-tree = \"0.1.9\"\n+tera = { version = \"1.10.0\", default-features = false }\n \n [dependencies.tracing-subscriber]\n version = \"0.2.13\""}, {"sha": "56d2ca57218c55be305c1f1b64c44a9c28199882", "filename": "src/librustdoc/externalfiles.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fexternalfiles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fexternalfiles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fexternalfiles.rs?ref=cd0f93193c84ddc6698f9b65909da71c084dcb74", "patch": "@@ -4,7 +4,9 @@ use std::fs;\n use std::path::Path;\n use std::str;\n \n-#[derive(Clone, Debug)]\n+use serde::Serialize;\n+\n+#[derive(Clone, Debug, Serialize)]\n crate struct ExternalHtml {\n     /// Content that will be included inline in the <head> section of a\n     /// rendered Markdown file or generated documentation"}, {"sha": "6ed603c96bbf2820a5bf2c43d807e0086ddb569f", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 40, "deletions": 174, "changes": 214, "blob_url": "https://github.com/rust-lang/rust/blob/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=cd0f93193c84ddc6698f9b65909da71c084dcb74", "patch": "@@ -7,7 +7,9 @@ use crate::html::escape::Escape;\n use crate::html::format::{Buffer, Print};\n use crate::html::render::{ensure_trailing_slash, StylePath};\n \n-#[derive(Clone)]\n+use serde::Serialize;\n+\n+#[derive(Clone, Serialize)]\n crate struct Layout {\n     crate logo: String,\n     crate favicon: String,\n@@ -22,6 +24,7 @@ crate struct Layout {\n     crate generate_search_filter: bool,\n }\n \n+#[derive(Serialize)]\n crate struct Page<'a> {\n     crate title: &'a str,\n     crate css_class: &'a str,\n@@ -40,192 +43,55 @@ impl<'a> Page<'a> {\n     }\n }\n \n+#[derive(Serialize)]\n+struct PageLayout<'a> {\n+    static_root_path: &'a str,\n+    page: &'a Page<'a>,\n+    layout: &'a Layout,\n+    style_files: String,\n+    sidebar: String,\n+    content: String,\n+    krate_with_trailing_slash: String,\n+}\n+\n crate fn render<T: Print, S: Print>(\n+    templates: &tera::Tera,\n     layout: &Layout,\n     page: &Page<'_>,\n     sidebar: S,\n     t: T,\n     style_files: &[StylePath],\n ) -> String {\n     let static_root_path = page.get_static_root_path();\n-    format!(\n-        \"<!DOCTYPE html>\\\n-<html lang=\\\"en\\\">\\\n-<head>\\\n-    <meta charset=\\\"utf-8\\\">\\\n-    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\\n-    <meta name=\\\"generator\\\" content=\\\"rustdoc\\\">\\\n-    <meta name=\\\"description\\\" content=\\\"{description}\\\">\\\n-    <meta name=\\\"keywords\\\" content=\\\"{keywords}\\\">\\\n-    <title>{title}</title>\\\n-    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{static_root_path}normalize{suffix}.css\\\">\\\n-    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{static_root_path}rustdoc{suffix}.css\\\" \\\n-          id=\\\"mainThemeStyle\\\">\\\n-    {style_files}\\\n-    <script id=\\\"default-settings\\\"{default_settings}></script>\\\n-    <script src=\\\"{static_root_path}storage{suffix}.js\\\"></script>\\\n-    <script src=\\\"{root_path}crates{suffix}.js\\\"></script>\\\n-    <noscript><link rel=\\\"stylesheet\\\" href=\\\"{static_root_path}noscript{suffix}.css\\\"></noscript>\\\n-    {css_extension}\\\n-    {favicon}\\\n-    {in_header}\\\n-    <style type=\\\"text/css\\\">\\\n-    #crate-search{{background-image:url(\\\"{static_root_path}down-arrow{suffix}.svg\\\");}}\\\n-    </style>\\\n-</head>\\\n-<body class=\\\"rustdoc {css_class}\\\">\\\n-    <!--[if lte IE 11]>\\\n-    <div class=\\\"warning\\\">\\\n-        This old browser is unsupported and will most likely display funky \\\n-        things.\\\n-    </div>\\\n-    <![endif]-->\\\n-    {before_content}\\\n-    <nav class=\\\"sidebar\\\">\\\n-        <div class=\\\"sidebar-menu\\\" role=\\\"button\\\">&#9776;</div>\\\n-        {logo}\\\n-        {sidebar}\\\n-    </nav>\\\n-    <div class=\\\"theme-picker\\\">\\\n-        <button id=\\\"theme-picker\\\" aria-label=\\\"Pick another theme!\\\" aria-haspopup=\\\"menu\\\" title=\\\"themes\\\">\\\n-            <img src=\\\"{static_root_path}brush{suffix}.svg\\\" \\\n-                 width=\\\"18\\\" height=\\\"18\\\" \\\n-                 alt=\\\"Pick another theme!\\\">\\\n-        </button>\\\n-        <div id=\\\"theme-choices\\\" role=\\\"menu\\\"></div>\\\n-    </div>\\\n-    <nav class=\\\"sub\\\">\\\n-        <form class=\\\"search-form\\\">\\\n-            <div class=\\\"search-container\\\">\\\n-                <div>{filter_crates}\\\n-                    <input class=\\\"search-input\\\" name=\\\"search\\\" \\\n-                           disabled \\\n-                           autocomplete=\\\"off\\\" \\\n-                           spellcheck=\\\"false\\\" \\\n-                           placeholder=\\\"Click or press \u2018S\u2019 to search, \u2018?\u2019 for more options\u2026\\\" \\\n-                           type=\\\"search\\\">\\\n-                </div>\\\n-                <button type=\\\"button\\\" id=\\\"help-button\\\" title=\\\"help\\\">?</button>\\\n-                <a id=\\\"settings-menu\\\" href=\\\"{root_path}settings.html\\\" title=\\\"settings\\\">\\\n-                    <img src=\\\"{static_root_path}wheel{suffix}.svg\\\" \\\n-                         width=\\\"18\\\" height=\\\"18\\\" \\\n-                         alt=\\\"Change settings\\\">\\\n-                </a>\\\n-            </div>\\\n-        </form>\\\n-    </nav>\\\n-    <section id=\\\"main\\\" class=\\\"content\\\">{content}</section>\\\n-    <section id=\\\"search\\\" class=\\\"content hidden\\\"></section>\\\n-    {after_content}\\\n-    <div id=\\\"rustdoc-vars\\\" data-root-path=\\\"{root_path}\\\" data-current-crate=\\\"{krate}\\\" \\\n-       data-search-index-js=\\\"{root_path}search-index{suffix}.js\\\" \\\n-       data-search-js=\\\"{static_root_path}search{suffix}.js\\\"></div>\\\n-    <script src=\\\"{static_root_path}main{suffix}.js\\\"></script>\\\n-    {extra_scripts}\\\n-</body>\\\n-</html>\",\n-        css_extension = if layout.css_file_extension.is_some() {\n+    let krate_with_trailing_slash = ensure_trailing_slash(&layout.krate).to_string();\n+    let style_files = style_files\n+        .iter()\n+        .filter_map(|t| {\n+            if let Some(stem) = t.path.file_stem() { Some((stem, t.disabled)) } else { None }\n+        })\n+        .filter_map(|t| if let Some(path) = t.0.to_str() { Some((path, t.1)) } else { None })\n+        .map(|t| {\n             format!(\n-                \"<link rel=\\\"stylesheet\\\" \\\n-                       type=\\\"text/css\\\" \\\n-                       href=\\\"{static_root_path}theme{suffix}.css\\\">\",\n-                static_root_path = static_root_path,\n-                suffix = page.resource_suffix\n-            )\n-        } else {\n-            String::new()\n-        },\n-        content = Buffer::html().to_display(t),\n-        static_root_path = static_root_path,\n-        root_path = page.root_path,\n-        css_class = page.css_class,\n-        logo = {\n-            if layout.logo.is_empty() {\n-                format!(\n-                    \"<a href='{root}{path}index.html'>\\\n-                     <div class='logo-container rust-logo'>\\\n-                     <img src='{static_root_path}rust-logo{suffix}.png' alt='logo'></div></a>\",\n-                    root = page.root_path,\n-                    path = ensure_trailing_slash(&layout.krate),\n-                    static_root_path = static_root_path,\n-                    suffix = page.resource_suffix\n-                )\n-            } else {\n-                format!(\n-                    \"<a href='{root}{path}index.html'>\\\n-                     <div class='logo-container'><img src='{logo}' alt='logo'></div></a>\",\n-                    root = page.root_path,\n-                    path = ensure_trailing_slash(&layout.krate),\n-                    logo = layout.logo\n-                )\n-            }\n-        },\n-        title = page.title,\n-        description = Escape(page.description),\n-        keywords = page.keywords,\n-        favicon = if layout.favicon.is_empty() {\n-            format!(\n-                r##\"<link rel=\"icon\" type=\"image/svg+xml\" href=\"{static_root_path}favicon{suffix}.svg\">\n-<link rel=\"alternate icon\" type=\"image/png\" href=\"{static_root_path}favicon-16x16{suffix}.png\">\n-<link rel=\"alternate icon\" type=\"image/png\" href=\"{static_root_path}favicon-32x32{suffix}.png\">\"##,\n-                static_root_path = static_root_path,\n-                suffix = page.resource_suffix\n-            )\n-        } else {\n-            format!(r#\"<link rel=\"shortcut icon\" href=\"{}\">\"#, layout.favicon)\n-        },\n-        in_header = layout.external_html.in_header,\n-        before_content = layout.external_html.before_content,\n-        after_content = layout.external_html.after_content,\n-        sidebar = Buffer::html().to_display(sidebar),\n-        krate = layout.krate,\n-        default_settings = layout\n-            .default_settings\n-            .iter()\n-            .map(|(k, v)| format!(r#\" data-{}=\"{}\"\"#, k.replace('-', \"_\"), Escape(v)))\n-            .collect::<String>(),\n-        style_files = style_files\n-            .iter()\n-            .filter_map(|t| {\n-                if let Some(stem) = t.path.file_stem() { Some((stem, t.disabled)) } else { None }\n-            })\n-            .filter_map(|t| {\n-                if let Some(path) = t.0.to_str() { Some((path, t.1)) } else { None }\n-            })\n-            .map(|t| format!(\n                 r#\"<link rel=\"stylesheet\" type=\"text/css\" href=\"{}.css\" {} {}>\"#,\n                 Escape(&format!(\"{}{}{}\", static_root_path, t.0, page.resource_suffix)),\n                 if t.1 { \"disabled\" } else { \"\" },\n                 if t.0 == \"light\" { \"id=\\\"themeStyle\\\"\" } else { \"\" }\n-            ))\n-            .collect::<String>(),\n-        suffix = page.resource_suffix,\n-        extra_scripts = page\n-            .static_extra_scripts\n-            .iter()\n-            .map(|e| {\n-                format!(\n-                    \"<script src=\\\"{static_root_path}{extra_script}.js\\\"></script>\",\n-                    static_root_path = static_root_path,\n-                    extra_script = e\n-                )\n-            })\n-            .chain(page.extra_scripts.iter().map(|e| {\n-                format!(\n-                    \"<script src=\\\"{root_path}{extra_script}.js\\\"></script>\",\n-                    root_path = page.root_path,\n-                    extra_script = e\n-                )\n-            }))\n-            .collect::<String>(),\n-        filter_crates = if layout.generate_search_filter {\n-            \"<select id=\\\"crate-search\\\">\\\n-                 <option value=\\\"All crates\\\">All crates</option>\\\n-             </select>\"\n-        } else {\n-            \"\"\n-        },\n-    )\n+            )\n+        })\n+        .collect::<String>();\n+    let content = Buffer::html().to_display(t); // Note: This must happen before making the sidebar.\n+    let sidebar = Buffer::html().to_display(sidebar);\n+    let teractx = tera::Context::from_serialize(PageLayout {\n+        static_root_path,\n+        page,\n+        layout,\n+        style_files,\n+        sidebar,\n+        content,\n+        krate_with_trailing_slash,\n+    })\n+    .unwrap();\n+    templates.render(\"page.html\", &teractx).unwrap()\n }\n \n crate fn redirect(url: &str) -> String {"}, {"sha": "2085739fc46ec68e4ef80ea13878a399f59828d2", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=cd0f93193c84ddc6698f9b65909da71c084dcb74", "patch": "@@ -1,5 +1,6 @@\n use std::cell::RefCell;\n use std::collections::BTreeMap;\n+use std::error::Error as StdError;\n use std::io;\n use std::path::{Path, PathBuf};\n use std::rc::Rc;\n@@ -29,6 +30,7 @@ use crate::formats::FormatRenderer;\n use crate::html::escape::Escape;\n use crate::html::format::Buffer;\n use crate::html::markdown::{self, plain_text_summary, ErrorCodes, IdMap};\n+use crate::html::static_files::PAGE;\n use crate::html::{layout, sources};\n \n /// Major driving force in all rustdoc rendering. This contains information\n@@ -121,6 +123,8 @@ crate struct SharedContext<'tcx> {\n     /// to `Some(...)`, it'll store redirections and then generate a JSON file at the top level of\n     /// the crate.\n     redirections: Option<RefCell<FxHashMap<String, String>>>,\n+\n+    pub(crate) templates: tera::Tera,\n }\n \n impl SharedContext<'_> {\n@@ -218,6 +222,7 @@ impl<'tcx> Context<'tcx> {\n \n         if !self.render_redirect_pages {\n             layout::render(\n+                &self.shared.templates,\n                 &self.shared.layout,\n                 &page,\n                 |buf: &mut _| print_sidebar(self, it, buf),\n@@ -408,6 +413,12 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         let mut issue_tracker_base_url = None;\n         let mut include_sources = true;\n \n+        let mut templates = tera::Tera::default();\n+        templates.add_raw_template(\"page.html\", PAGE).map_err(|e| Error {\n+            file: \"page.html\".into(),\n+            error: format!(\"{}: {}\", e, e.source().map(|e| e.to_string()).unwrap_or_default()),\n+        })?;\n+\n         // Crawl the crate attributes looking for attributes which control how we're\n         // going to emit HTML\n         for attr in krate.module.attrs.lists(sym::doc) {\n@@ -454,6 +465,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             errors: receiver,\n             redirections: if generate_redirect_map { Some(Default::default()) } else { None },\n             show_type_layout,\n+            templates,\n         };\n \n         // Add the default themes to the `Vec` of stylepaths\n@@ -540,6 +552,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         };\n         let all = self.shared.all.replace(AllTypes::new());\n         let v = layout::render(\n+            &self.shared.templates,\n             &self.shared.layout,\n             &page,\n             sidebar,\n@@ -557,6 +570,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         let sidebar = \"<p class=\\\"location\\\">Settings</p><div class=\\\"sidebar-elems\\\"></div>\";\n         style_files.push(StylePath { path: PathBuf::from(\"settings.css\"), disabled: false });\n         let v = layout::render(\n+            &self.shared.templates,\n             &self.shared.layout,\n             &page,\n             sidebar,"}, {"sha": "840566731d78db51fad00712ce5e14f8e60c1d9b", "filename": "src/librustdoc/html/render/write_shared.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs?ref=cd0f93193c84ddc6698f9b65909da71c084dcb74", "patch": "@@ -460,7 +460,14 @@ pub(super) fn write_shared(\n                     })\n                     .collect::<String>()\n             );\n-            let v = layout::render(&cx.shared.layout, &page, \"\", content, &cx.shared.style_files);\n+            let v = layout::render(\n+                &cx.shared.templates,\n+                &cx.shared.layout,\n+                &page,\n+                \"\",\n+                content,\n+                &cx.shared.style_files,\n+            );\n             cx.shared.fs.write(&dst, v.as_bytes())?;\n         }\n     }"}, {"sha": "80dd7a7a952f0071fd6501cb29053b6894a7b9fc", "filename": "src/librustdoc/html/sources.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fsources.rs?ref=cd0f93193c84ddc6698f9b65909da71c084dcb74", "patch": "@@ -136,6 +136,7 @@ impl SourceCollector<'_, 'tcx> {\n             static_extra_scripts: &[&format!(\"source-script{}\", self.scx.resource_suffix)],\n         };\n         let v = layout::render(\n+            &self.scx.templates,\n             &self.scx.layout,\n             &page,\n             \"\","}, {"sha": "00e13d4ec1aa8847a0aec16f154667023fa9eea9", "filename": "src/librustdoc/html/static_files.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs?ref=cd0f93193c84ddc6698f9b65909da71c084dcb74", "patch": "@@ -64,6 +64,8 @@ crate static RUST_FAVICON_SVG: &[u8] = include_bytes!(\"static/favicon.svg\");\n crate static RUST_FAVICON_PNG_16: &[u8] = include_bytes!(\"static/favicon-16x16.png\");\n crate static RUST_FAVICON_PNG_32: &[u8] = include_bytes!(\"static/favicon-32x32.png\");\n \n+crate static PAGE: &str = include_str!(\"templates/page.html\");\n+\n /// The built-in themes given to every documentation site.\n crate mod themes {\n     /// The \"light\" theme, selected by default when no setting is available. Used as the basis for"}, {"sha": "fff65e3b5ff24fb6d46e539bf4cb14f41e906874", "filename": "src/librustdoc/html/templates/STYLE.md", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Ftemplates%2FSTYLE.md", "raw_url": "https://github.com/rust-lang/rust/raw/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Ftemplates%2FSTYLE.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2FSTYLE.md?ref=cd0f93193c84ddc6698f9b65909da71c084dcb74", "patch": "@@ -0,0 +1,37 @@\n+# Style for Templates\n+\n+This directory has templates in the [Tera templating language](teradoc), which is very\n+similar to [Jinja2](jinjadoc) and [Django](djangodoc) templates, and also to [Askama](askamadoc).\n+\n+[teradoc]: https://tera.netlify.app/docs/#templates\n+[jinjadoc]: https://jinja.palletsprojects.com/en/3.0.x/templates/\n+[djangodoc]: https://docs.djangoproject.com/en/3.2/topics/templates/\n+[askamadoc]: https://docs.rs/askama/0.10.5/askama/\n+\n+We want our rendered output to have as little unnecessary whitespace as\n+possible, so that pages load quickly. To achieve that we use Tera's\n+[whitespace control] features. At the end of most lines, we put an empty comment\n+tag with the whitespace control characters: `{#- -#}`. This causes all\n+whitespace between the end of the line and the beginning of the next, including\n+indentation, to be omitted on render. Sometimes we want to preserve a single\n+space. In those cases we put the space at the end of the line, followed by\n+`{# -#}`, which is a directive to remove following whitespace but not preceding.\n+We also use the whitespace control characters in most instances of tags with\n+control flow, for example `{%- if foo -%}`.\n+\n+[whitespace control]: https://tera.netlify.app/docs/#whitespace-control\n+\n+We want our templates to be readable, so we use indentation and newlines\n+liberally. We indent by four spaces after opening an HTML tag _or_ a Tera\n+tag. In most cases an HTML tag should be followed by a newline, but if the\n+tag has simple contents and fits with its close tag on a single line, the\n+contents don't necessarily need a new line.\n+\n+Tera templates support quite sophisticated control flow. To keep our templates\n+simple and understandable, we use only a subset: `if` and `for`. In particular\n+we avoid [assignments in the template logic](assignments) and [Tera\n+macros](macros). This also may make things easier if we switch to a different\n+Jinja-style template system, like Askama, in the future.\n+\n+[assignments]: https://tera.netlify.app/docs/#assignments\n+[macros]: https://tera.netlify.app/docs/#macros"}, {"sha": "9b1bef5e4476760d880ae4f8b4ce685b10b6ba2c", "filename": "src/librustdoc/html/templates/page.html", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "raw_url": "https://github.com/rust-lang/rust/raw/cd0f93193c84ddc6698f9b65909da71c084dcb74/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html?ref=cd0f93193c84ddc6698f9b65909da71c084dcb74", "patch": "@@ -0,0 +1,119 @@\n+<!DOCTYPE html> {#- -#}\n+<html lang=\"en\"> {#- -#}\n+<head> {#- -#}\n+    <meta charset=\"utf-8\"> {#- -#}\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> {#- -#}\n+    <meta name=\"generator\" content=\"rustdoc\"> {#- -#}\n+    <meta name=\"description\" content=\"{{page.description}}\"> {#- -#}\n+    <meta name=\"keywords\" content=\"{{page.keywords}}\"> {#- -#}\n+    <title>{{page.title}}</title> {#- -#}\n+    <link rel=\"stylesheet\" type=\"text/css\" {# -#}\n+          href=\"{{static_root_path | safe}}normalize{{page.resource_suffix}}.css\"> {#- -#}\n+    <link rel=\"stylesheet\" type=\"text/css\" {# -#}\n+          href=\"{{static_root_path | safe}}rustdoc{{page.resource_suffix}}.css\" {# -#}\n+          id=\"mainThemeStyle\"> {#- -#}\n+    {{- style_files | safe -}}\n+    <script id=\"default-settings\" {# -#}\n+      {% for k, v in layout.default_settings %}\n+        data-{{k}}=\"{{v}}\"\n+      {%- endfor -%}\n+    ></script> {#- -#}\n+    <script src=\"{{static_root_path | safe}}storage{{page.resource_suffix}}.js\"></script> {#- -#}\n+    <script src=\"{{page.root_path | safe}}crates{{page.resource_suffix}}.js\"></script> {#- -#}\n+    <noscript> {#- -#}\n+        <link rel=\"stylesheet\" {# -#}\n+           href=\"{{static_root_path | safe}}noscript{{page.resource_suffix}}.css\"> {#- -#}\n+    </noscript> {#- -#}\n+    {%- if layout.css_file_extension -%}\n+        <link rel=\"stylesheet\" type=\"text/css\" {# -#}\n+            href=\"{{static_root_path | safe}}theme{{page.resource_suffix}}.css\"> {#- -#}\n+    {%- endif -%}\n+    {%- if layout.favicon -%}\n+        <link rel=\"shortcut icon\" href=\"{{layout.favicon}}\"> {#- -#}\n+    {%- else -%}\n+        <link rel=\"icon\" type=\"image/svg+xml\" {# -#}\n+            href=\"{{static_root_path | safe}}favicon{{page.resource_suffix}}.svg\"> {#- -#}\n+        <link rel=\"alternate icon\" type=\"image/png\" {# -#}\n+            href=\"{{static_root_path | safe}}favicon-16x16{{page.resource_suffix}}.png\"> {#- -#}\n+        <link rel=\"alternate icon\" type=\"image/png\" {# -#}\n+            href=\"{{static_root_path | safe}}favicon-32x32{{page.resource_suffix}}.png\"> {#- -#}\n+    {%- endif -%}\n+    {{- layout.external_html.in_header | safe -}}\n+    <style type=\"text/css\"> {#- -#}\n+    #crate-search{ {#- -#}\n+        background-image:url(\"{{static_root_path | safe}}down-arrow{{page.resource_suffix}}.svg\"); {#- -#}\n+    } {#- -#}\n+    </style> {#- -#}\n+</head> {#- -#}\n+<body class=\"rustdoc {{page.css_class}}\"> {#- -#}\n+    <!--[if lte IE 11]> {#- -#}\n+    <div class=\"warning\"> {#- -#}\n+        This old browser is unsupported and will most likely display funky things. {#- -#}\n+    </div> {#- -#}\n+    <![endif]--> {#- -#}\n+    {{- layout.external_html.before_content | safe -}}\n+    <nav class=\"sidebar\"> {#- -#}\n+        <div class=\"sidebar-menu\" role=\"button\">&#9776;</div> {#- -#}\n+        <a href='{{page.root_path | safe}}{{krate_with_trailing_slash | safe}}index.html'> {#- -#}\n+            <div class='logo-container rust-logo'> {#- -#}\n+            <img src='\n+                {%- if layout.logo -%}\n+                {{layout.logo}}\n+                {%- else -%}\n+                {{static_root_path | safe}}rust-logo{{page.resource_suffix}}.png\n+                {%- endif -%}\n+                ' alt='logo'> {#- -#}\n+            </div> {#- -#}\n+        </a> {#- -#}\n+        {{- sidebar | safe -}}\n+    </nav> {#- -#}\n+    <div class=\"theme-picker\"> {#- -#}\n+        <button id=\"theme-picker\" aria-label=\"Pick another theme!\" aria-haspopup=\"menu\" title=\"themes\"> {#- -#}\n+            <img width=\"18\" height=\"18\" alt=\"Pick another theme!\" {# -#}\n+             src=\"{{static_root_path | safe}}brush{{page.resource_suffix}}.svg\"> {#- -#}\n+        </button> {#- -#}\n+        <div id=\"theme-choices\" role=\"menu\"></div> {#- -#}\n+    </div> {#- -#}\n+    <nav class=\"sub\"> {#- -#}\n+        <form class=\"search-form\"> {#- -#}\n+            <div class=\"search-container\"> {#- -#}\n+                <div>{%- if layout.generate_search_filter -%}\n+                    <select id=\"crate-search\"> {#- -#}\n+                        <option value=\"All crates\">All crates</option> {#- -#}\n+                    </select> {#- -#}\n+                    {%- endif -%}\n+                    <input {# -#}\n+                        class=\"search-input\"{# -#}\n+                        name=\"search\" {# -#}\n+                        disabled {# -#}\n+                        autocomplete=\"off\" {# -#}\n+                        spellcheck=\"false\" {# -#}\n+                        placeholder=\"Click or press \u2018S\u2019 to search, \u2018?\u2019 for more options\u2026\" {# -#}\n+                        type=\"search\"> {#- -#}\n+                </div> {#- -#}\n+                <button type=\"button\" id=\"help-button\" title=\"help\">?</button> {#- -#}\n+                <a id=\"settings-menu\" href=\"{{page.root_path | safe}}settings.html\" title=\"settings\"> {#- -#}\n+                    <img width=\"18\" height=\"18\" alt=\"Change settings\" {# -#}\n+                         src=\"{{static_root_path | safe}}wheel{{page.resource_suffix}}.svg\"> {#- -#}\n+                </a> {#- -#}\n+            </div> {#- -#}\n+        </form> {#- -#}\n+    </nav> {#- -#}\n+    <section id=\"main\" class=\"content\">{{- content | safe -}}</section> {#- -#}\n+    <section id=\"search\" class=\"content hidden\"></section> {#- -#}\n+    {{- layout.external_html.after_content | safe -}}\n+    <div id=\"rustdoc-vars\" {# -#}\n+         data-root-path=\"{{page.root_path | safe}}\" {# -#}\n+         data-current-crate=\"{{layout.krate}}\" {# -#}\n+         data-search-index-js=\"{{page.root_path | safe}}search-index{{page.resource_suffix}}.js\" {# -#}\n+         data-search-js=\"{{static_root_path | safe}}search{{page.resource_suffix}}.js\"> {#- -#}\n+    </div>\n+    <script src=\"{{static_root_path | safe}}main{{page.resource_suffix}}.js\"></script> {#- -#}\n+    {%- for script in page.static_extra_scripts -%}\n+    <script src=\"{{static_root_path | safe}}{{script}}.js\"></script> {#- -#}\n+    {% endfor %}\n+    {%- for script in page.extra_scripts -%}\n+    <script src=\"{{page.root_path | safe}}{{script}}.js\"></script> {#- -#}\n+    {% endfor %}\n+</body> {#- -#}\n+</html> {#- -#}"}]}