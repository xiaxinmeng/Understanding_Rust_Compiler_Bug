{"sha": "67259e74a480c8bccc5a6f0c25c3b98c47be9f1d", "node_id": "C_kwDOAAsO6NoAKDY3MjU5ZTc0YTQ4MGM4YmNjYzVhNmYwYzI1YzNiOThjNDdiZTlmMWQ", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-31T18:56:40Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-31T18:56:40Z"}, "message": "Extract constant MARGIN out of Printer struct", "tree": {"sha": "c0c300b34a0d8054128498172f583ead71a9a474", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0c300b34a0d8054128498172f583ead71a9a474"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67259e74a480c8bccc5a6f0c25c3b98c47be9f1d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmH4MOgACgkQ+boUO5X/\nbYKSrBAAkcJQhRDwkTFREh8wUY0OSs/9wmBidTHlO8kkkOUMaACWBZbz6SDUwMGL\nG3zF689T7dIbQmDDMIrtwscVigeJ3TKOPr9aewcwT9gXaKKHtZ24XUCYF7QNI8Wv\n7LDL1arHcSCNcDIAPmyhPuGl7DQRX8VzqpaCOpjVePYVMsWjOYQ8BuqHXNwwbwD5\nG3bsSFYj7CR8TFcgJNEQoGSPN/g77hUidIL81OQZigwEuEnrQXeu8eCIV+Wz+Tze\nvi7IVBWE4qojK9Og6PWOlz/YJrY6NMgdzSjynDCU2ZDh4eRpJ0gAmvzB8b27/lHw\njfm5xcsgus6EsibvDq0dIHcPbe5b1tb6+YbSKgoR80qZ7PVf0pEqiFjDuC6k/jfA\nkCzi7c3Hcnp0v7OfBE7OkQPLTCt305bVUGjKmeb27M6u5iXOu6nKObrb4P/o3p4K\nyI7mTvxGkEvG8hPesvdTI2QzFIQ70WABvLKVc0l1gZWs1GqdRbj7sUF0Vr0cBPp1\nmj19YQl8QnvtOcQLlFPosCwUWLOn25k7pD4J116/h87u5dhg14Ur8VJMGu6xbi8r\nfxEattpkERvyCRjsAjpObyYjyXIiQhoFTxfhbtUka0Ex0tV5zVpjL+A9Seykacze\nQa05siDwG5CNprt9+/OeAy4fEWb4YZagDfiFhVKrpiaTcKj8IW0=\n=k5Ir\n-----END PGP SIGNATURE-----", "payload": "tree c0c300b34a0d8054128498172f583ead71a9a474\nparent 24b8bb13bff98bb747cd403b86596af43aceee78\nauthor David Tolnay <dtolnay@gmail.com> 1643655400 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1643655400 -0800\n\nExtract constant MARGIN out of Printer struct\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67259e74a480c8bccc5a6f0c25c3b98c47be9f1d", "html_url": "https://github.com/rust-lang/rust/commit/67259e74a480c8bccc5a6f0c25c3b98c47be9f1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67259e74a480c8bccc5a6f0c25c3b98c47be9f1d/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24b8bb13bff98bb747cd403b86596af43aceee78", "url": "https://api.github.com/repos/rust-lang/rust/commits/24b8bb13bff98bb747cd403b86596af43aceee78", "html_url": "https://github.com/rust-lang/rust/commit/24b8bb13bff98bb747cd403b86596af43aceee78"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "3e1b6e35170e211659f31942f38c2b9d735ffe4e", "filename": "compiler/rustc_ast_pretty/src/pp.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/67259e74a480c8bccc5a6f0c25c3b98c47be9f1d/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67259e74a480c8bccc5a6f0c25c3b98c47be9f1d/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs?ref=67259e74a480c8bccc5a6f0c25c3b98c47be9f1d", "patch": "@@ -199,10 +199,11 @@ enum PrintFrame {\n \n const SIZE_INFINITY: isize = 0xffff;\n \n+/// Target line width.\n+const MARGIN: isize = 78;\n+\n pub struct Printer {\n     out: String,\n-    /// Width of lines we're constrained to\n-    margin: isize,\n     /// Number of spaces left on line\n     space: isize,\n     /// Ring-buffer of tokens and calculated sizes\n@@ -237,11 +238,9 @@ struct BufEntry {\n \n impl Printer {\n     pub fn new() -> Self {\n-        let linewidth = 78;\n         Printer {\n             out: String::new(),\n-            margin: linewidth as isize,\n-            space: linewidth as isize,\n+            space: MARGIN,\n             buf: RingBuffer::new(),\n             left_total: 0,\n             right_total: 0,\n@@ -395,7 +394,7 @@ impl Printer {\n             self.print_stack.push(PrintFrame::Broken { indent: self.indent, breaks: token.breaks });\n             self.indent = match token.indent {\n                 IndentStyle::Block { offset } => (self.indent as isize + offset) as usize,\n-                IndentStyle::Visual => (self.margin - self.space) as usize,\n+                IndentStyle::Visual => (MARGIN - self.space) as usize,\n             };\n         } else {\n             self.print_stack.push(PrintFrame::Fits);\n@@ -421,7 +420,7 @@ impl Printer {\n             self.out.push('\\n');\n             let indent = self.indent as isize + token.offset;\n             self.pending_indentation = indent;\n-            self.space = self.margin - indent;\n+            self.space = MARGIN - indent;\n         }\n     }\n "}]}