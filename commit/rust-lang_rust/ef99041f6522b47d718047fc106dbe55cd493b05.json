{"sha": "ef99041f6522b47d718047fc106dbe55cd493b05", "node_id": "C_kwDOAAsO6NoAKGVmOTkwNDFmNjUyMmI0N2Q3MTgwNDdmYzEwNmRiZTU1Y2Q0OTNiMDU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-27T12:58:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-27T12:58:54Z"}, "message": "Auto merge of #9860 - Alexendoo:msrv-outer-attr, r=Jarcho\n\nAllow using `clippy::msrv` as an outer attribute\n\nchangelog: Allow specifying `#[clippy::msrv]` as an outer attribute\n\nProbably not too useful to clippy users, but it makes the MSRV tests slightly cleaner", "tree": {"sha": "4bc660afca32cb82a425b813a9cb10d10252b3a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bc660afca32cb82a425b813a9cb10d10252b3a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef99041f6522b47d718047fc106dbe55cd493b05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef99041f6522b47d718047fc106dbe55cd493b05", "html_url": "https://github.com/rust-lang/rust/commit/ef99041f6522b47d718047fc106dbe55cd493b05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef99041f6522b47d718047fc106dbe55cd493b05/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "030b4b7ad919dbb221f3db9f11d82c28606dfe31", "url": "https://api.github.com/repos/rust-lang/rust/commits/030b4b7ad919dbb221f3db9f11d82c28606dfe31", "html_url": "https://github.com/rust-lang/rust/commit/030b4b7ad919dbb221f3db9f11d82c28606dfe31"}, {"sha": "461e219d1d4167139a842b290cd1c019ff2d52a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/461e219d1d4167139a842b290cd1c019ff2d52a2", "html_url": "https://github.com/rust-lang/rust/commit/461e219d1d4167139a842b290cd1c019ff2d52a2"}], "stats": {"total": 1778, "additions": 799, "deletions": 979}, "files": [{"sha": "1c199d57f5143feee5f05b8c8896870382a2b6aa", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -224,7 +224,7 @@ in the `Cargo.toml` can be used.\n rust-version = \"1.30\"\n ```\n \n-The MSRV can also be specified as an inner attribute, like below.\n+The MSRV can also be specified as an attribute, like below.\n \n ```rust\n #![feature(custom_inner_attributes)]"}, {"sha": "5419eb5c21dcd05ba33f46084363f12cd123e5b2", "filename": "book/src/configuration.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/book%2Fsrc%2Fconfiguration.md", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/book%2Fsrc%2Fconfiguration.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/book%2Fsrc%2Fconfiguration.md?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -72,7 +72,7 @@ minimum supported Rust version (MSRV) in the clippy configuration file.\n msrv = \"1.30.0\"\n ```\n \n-The MSRV can also be specified as an inner attribute, like below.\n+The MSRV can also be specified as an attribute, like below.\n \n ```rust\n #![feature(custom_inner_attributes)]"}, {"sha": "8b4eee8c9d94d3b3f6ddaaa72507a59de8149d70", "filename": "book/src/development/adding_lints.md", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/book%2Fsrc%2Fdevelopment%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/book%2Fsrc%2Fdevelopment%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/book%2Fsrc%2Fdevelopment%2Fadding_lints.md?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -463,7 +463,7 @@ if !self.msrv.meets(msrvs::STR_STRIP_PREFIX) {\n }\n ```\n \n-The project's MSRV can also be specified as an inner attribute, which overrides\n+The project's MSRV can also be specified as an attribute, which overrides\n the value from `clippy.toml`. This can be accounted for using the\n `extract_msrv_attr!(LintContext)` macro and passing\n `LateContext`/`EarlyContext`.\n@@ -483,19 +483,15 @@ have a case for the version below the MSRV and one with the same contents but\n for the MSRV version itself.\n \n ```rust\n-#![feature(custom_inner_attributes)]\n-\n ...\n \n+#[clippy::msrv = \"1.44\"]\n fn msrv_1_44() {\n-    #![clippy::msrv = \"1.44\"]\n-\n     /* something that would trigger the lint */\n }\n \n+#[clippy::msrv = \"1.45\"]\n fn msrv_1_45() {\n-    #![clippy::msrv = \"1.45\"]\n-\n     /* something that would trigger the lint */\n }\n ```"}, {"sha": "7987a233bdc184b960f9c53fbd4b9d2c0d0c7619", "filename": "clippy_utils/src/attrs.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/clippy_utils%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/clippy_utils%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fattrs.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -125,19 +125,19 @@ fn parse_attrs<F: FnMut(u64)>(sess: &Session, attrs: &[ast::Attribute], name: &'\n     }\n }\n \n-pub fn get_unique_inner_attr(sess: &Session, attrs: &[ast::Attribute], name: &'static str) -> Option<ast::Attribute> {\n-    let mut unique_attr = None;\n+pub fn get_unique_attr<'a>(\n+    sess: &'a Session,\n+    attrs: &'a [ast::Attribute],\n+    name: &'static str,\n+) -> Option<&'a ast::Attribute> {\n+    let mut unique_attr: Option<&ast::Attribute> = None;\n     for attr in get_attr(sess, attrs, name) {\n-        match attr.style {\n-            ast::AttrStyle::Inner if unique_attr.is_none() => unique_attr = Some(attr.clone()),\n-            ast::AttrStyle::Inner => {\n-                sess.struct_span_err(attr.span, &format!(\"`{name}` is defined multiple times\"))\n-                    .span_note(unique_attr.as_ref().unwrap().span, \"first definition found here\")\n-                    .emit();\n-            },\n-            ast::AttrStyle::Outer => {\n-                sess.span_err(attr.span, format!(\"`{name}` cannot be an outer attribute\"));\n-            },\n+        if let Some(duplicate) = unique_attr {\n+            sess.struct_span_err(attr.span, &format!(\"`{name}` is defined multiple times\"))\n+                .span_note(duplicate.span, \"first definition found here\")\n+                .emit();\n+        } else {\n+            unique_attr = Some(attr);\n         }\n     }\n     unique_attr"}, {"sha": "12a512f78a699eb30c92ac178b17663db424d090", "filename": "clippy_utils/src/msrvs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/clippy_utils%2Fsrc%2Fmsrvs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/clippy_utils%2Fsrc%2Fmsrvs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmsrvs.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -5,7 +5,7 @@ use rustc_semver::RustcVersion;\n use rustc_session::Session;\n use rustc_span::Span;\n \n-use crate::attrs::get_unique_inner_attr;\n+use crate::attrs::get_unique_attr;\n \n macro_rules! msrv_aliases {\n     ($($major:literal,$minor:literal,$patch:literal {\n@@ -118,7 +118,7 @@ impl Msrv {\n     }\n \n     fn parse_attr(sess: &Session, attrs: &[Attribute]) -> Option<RustcVersion> {\n-        if let Some(msrv_attr) = get_unique_inner_attr(sess, attrs, \"msrv\") {\n+        if let Some(msrv_attr) = get_unique_attr(sess, attrs, \"msrv\") {\n             if let Some(msrv) = msrv_attr.value_str() {\n                 return parse_msrv(&msrv.to_string(), Some(sess), Some(msrv_attr.span));\n             }"}, {"sha": "adcbd4d5134d340180d994835720ee39ec11a9af", "filename": "tests/ui/almost_complete_letter_range.fixed", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Falmost_complete_letter_range.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Falmost_complete_letter_range.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falmost_complete_letter_range.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -2,7 +2,6 @@\n // edition:2018\n // aux-build:macro_rules.rs\n \n-#![feature(custom_inner_attributes)]\n #![feature(exclusive_range_pattern)]\n #![feature(stmt_expr_attributes)]\n #![warn(clippy::almost_complete_letter_range)]\n@@ -62,16 +61,16 @@ fn main() {\n     b!();\n }\n \n+#[clippy::msrv = \"1.25\"]\n fn _under_msrv() {\n-    #![clippy::msrv = \"1.25\"]\n     let _ = match 'a' {\n         'a'...'z' => 1,\n         _ => 2,\n     };\n }\n \n+#[clippy::msrv = \"1.26\"]\n fn _meets_msrv() {\n-    #![clippy::msrv = \"1.26\"]\n     let _ = 'a'..='z';\n     let _ = match 'a' {\n         'a'..='z' => 1,"}, {"sha": "9979316eca4290a4d6718cb17182b112c7760257", "filename": "tests/ui/almost_complete_letter_range.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Falmost_complete_letter_range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Falmost_complete_letter_range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falmost_complete_letter_range.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -2,7 +2,6 @@\n // edition:2018\n // aux-build:macro_rules.rs\n \n-#![feature(custom_inner_attributes)]\n #![feature(exclusive_range_pattern)]\n #![feature(stmt_expr_attributes)]\n #![warn(clippy::almost_complete_letter_range)]\n@@ -62,16 +61,16 @@ fn main() {\n     b!();\n }\n \n+#[clippy::msrv = \"1.25\"]\n fn _under_msrv() {\n-    #![clippy::msrv = \"1.25\"]\n     let _ = match 'a' {\n         'a'..'z' => 1,\n         _ => 2,\n     };\n }\n \n+#[clippy::msrv = \"1.26\"]\n fn _meets_msrv() {\n-    #![clippy::msrv = \"1.26\"]\n     let _ = 'a'..'z';\n     let _ = match 'a' {\n         'a'..'z' => 1,"}, {"sha": "9abf6d6c5e7d00c4fea180c6219eb7a3804a4cc2", "filename": "tests/ui/almost_complete_letter_range.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Falmost_complete_letter_range.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Falmost_complete_letter_range.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falmost_complete_letter_range.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,5 @@\n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:30:17\n+  --> $DIR/almost_complete_letter_range.rs:29:17\n    |\n LL |         let _ = ('a') ..'z';\n    |                 ^^^^^^--^^^\n@@ -9,71 +9,71 @@ LL |         let _ = ('a') ..'z';\n    = note: `-D clippy::almost-complete-letter-range` implied by `-D warnings`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:31:17\n+  --> $DIR/almost_complete_letter_range.rs:30:17\n    |\n LL |         let _ = 'A' .. ('Z');\n    |                 ^^^^--^^^^^^\n    |                     |\n    |                     help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:37:13\n+  --> $DIR/almost_complete_letter_range.rs:36:13\n    |\n LL |     let _ = (b'a')..(b'z');\n    |             ^^^^^^--^^^^^^\n    |                   |\n    |                   help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:38:13\n+  --> $DIR/almost_complete_letter_range.rs:37:13\n    |\n LL |     let _ = b'A'..b'Z';\n    |             ^^^^--^^^^\n    |                 |\n    |                 help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:43:13\n+  --> $DIR/almost_complete_letter_range.rs:42:13\n    |\n LL |     let _ = a!()..'z';\n    |             ^^^^--^^^\n    |                 |\n    |                 help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:46:9\n+  --> $DIR/almost_complete_letter_range.rs:45:9\n    |\n LL |         b'a'..b'z' if true => 1,\n    |         ^^^^--^^^^\n    |             |\n    |             help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:47:9\n+  --> $DIR/almost_complete_letter_range.rs:46:9\n    |\n LL |         b'A'..b'Z' if true => 2,\n    |         ^^^^--^^^^\n    |             |\n    |             help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:54:9\n+  --> $DIR/almost_complete_letter_range.rs:53:9\n    |\n LL |         'a'..'z' if true => 1,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:55:9\n+  --> $DIR/almost_complete_letter_range.rs:54:9\n    |\n LL |         'A'..'Z' if true => 2,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:23:17\n+  --> $DIR/almost_complete_letter_range.rs:22:17\n    |\n LL |         let _ = 'a'..'z';\n    |                 ^^^--^^^\n@@ -86,23 +86,23 @@ LL |     b!();\n    = note: this error originates in the macro `b` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:68:9\n+  --> $DIR/almost_complete_letter_range.rs:67:9\n    |\n LL |         'a'..'z' => 1,\n    |         ^^^--^^^\n    |            |\n    |            help: use an inclusive range: `...`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:75:13\n+  --> $DIR/almost_complete_letter_range.rs:74:13\n    |\n LL |     let _ = 'a'..'z';\n    |             ^^^--^^^\n    |                |\n    |                help: use an inclusive range: `..=`\n \n error: almost complete ascii letter range\n-  --> $DIR/almost_complete_letter_range.rs:77:9\n+  --> $DIR/almost_complete_letter_range.rs:76:9\n    |\n LL |         'a'..'z' => 1,\n    |         ^^^--^^^"}, {"sha": "8676b562b4f9e864611d290253895122f2e9bf42", "filename": "tests/ui/cast_abs_to_unsigned.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcast_abs_to_unsigned.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcast_abs_to_unsigned.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_abs_to_unsigned.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::cast_abs_to_unsigned)]\n #![allow(clippy::uninlined_format_args, unused)]\n \n@@ -33,16 +32,14 @@ fn main() {\n     let _ = (x as i64 - y as i64).unsigned_abs() as u32;\n }\n \n+#[clippy::msrv = \"1.50\"]\n fn msrv_1_50() {\n-    #![clippy::msrv = \"1.50\"]\n-\n     let x: i32 = 10;\n     assert_eq!(10u32, x.abs() as u32);\n }\n \n+#[clippy::msrv = \"1.51\"]\n fn msrv_1_51() {\n-    #![clippy::msrv = \"1.51\"]\n-\n     let x: i32 = 10;\n     assert_eq!(10u32, x.unsigned_abs());\n }"}, {"sha": "5775af874f8fcec64593fd0915d92202f7f98238", "filename": "tests/ui/cast_abs_to_unsigned.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcast_abs_to_unsigned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcast_abs_to_unsigned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_abs_to_unsigned.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::cast_abs_to_unsigned)]\n #![allow(clippy::uninlined_format_args, unused)]\n \n@@ -33,16 +32,14 @@ fn main() {\n     let _ = (x as i64 - y as i64).abs() as u32;\n }\n \n+#[clippy::msrv = \"1.50\"]\n fn msrv_1_50() {\n-    #![clippy::msrv = \"1.50\"]\n-\n     let x: i32 = 10;\n     assert_eq!(10u32, x.abs() as u32);\n }\n \n+#[clippy::msrv = \"1.51\"]\n fn msrv_1_51() {\n-    #![clippy::msrv = \"1.51\"]\n-\n     let x: i32 = 10;\n     assert_eq!(10u32, x.abs() as u32);\n }"}, {"sha": "4668554f4511c2bfc2320d261b883dfcfd7c1636", "filename": "tests/ui/cast_abs_to_unsigned.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcast_abs_to_unsigned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcast_abs_to_unsigned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_abs_to_unsigned.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,109 +1,109 @@\n error: casting the result of `i32::abs()` to u32\n-  --> $DIR/cast_abs_to_unsigned.rs:9:18\n+  --> $DIR/cast_abs_to_unsigned.rs:8:18\n    |\n LL |     let y: u32 = x.abs() as u32;\n    |                  ^^^^^^^^^^^^^^ help: replace with: `x.unsigned_abs()`\n    |\n    = note: `-D clippy::cast-abs-to-unsigned` implied by `-D warnings`\n \n error: casting the result of `i32::abs()` to usize\n-  --> $DIR/cast_abs_to_unsigned.rs:13:20\n+  --> $DIR/cast_abs_to_unsigned.rs:12:20\n    |\n LL |     let _: usize = a.abs() as usize;\n    |                    ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i32::abs()` to usize\n-  --> $DIR/cast_abs_to_unsigned.rs:14:20\n+  --> $DIR/cast_abs_to_unsigned.rs:13:20\n    |\n LL |     let _: usize = a.abs() as _;\n    |                    ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i32::abs()` to usize\n-  --> $DIR/cast_abs_to_unsigned.rs:15:13\n+  --> $DIR/cast_abs_to_unsigned.rs:14:13\n    |\n LL |     let _ = a.abs() as usize;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to usize\n-  --> $DIR/cast_abs_to_unsigned.rs:18:13\n+  --> $DIR/cast_abs_to_unsigned.rs:17:13\n    |\n LL |     let _ = a.abs() as usize;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to u8\n-  --> $DIR/cast_abs_to_unsigned.rs:19:13\n+  --> $DIR/cast_abs_to_unsigned.rs:18:13\n    |\n LL |     let _ = a.abs() as u8;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to u16\n-  --> $DIR/cast_abs_to_unsigned.rs:20:13\n+  --> $DIR/cast_abs_to_unsigned.rs:19:13\n    |\n LL |     let _ = a.abs() as u16;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to u32\n-  --> $DIR/cast_abs_to_unsigned.rs:21:13\n+  --> $DIR/cast_abs_to_unsigned.rs:20:13\n    |\n LL |     let _ = a.abs() as u32;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to u64\n-  --> $DIR/cast_abs_to_unsigned.rs:22:13\n+  --> $DIR/cast_abs_to_unsigned.rs:21:13\n    |\n LL |     let _ = a.abs() as u64;\n    |             ^^^^^^^^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to u128\n-  --> $DIR/cast_abs_to_unsigned.rs:23:13\n+  --> $DIR/cast_abs_to_unsigned.rs:22:13\n    |\n LL |     let _ = a.abs() as u128;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `isize::abs()` to usize\n-  --> $DIR/cast_abs_to_unsigned.rs:26:13\n+  --> $DIR/cast_abs_to_unsigned.rs:25:13\n    |\n LL |     let _ = a.abs() as usize;\n    |             ^^^^^^^^^^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `isize::abs()` to u8\n-  --> $DIR/cast_abs_to_unsigned.rs:27:13\n+  --> $DIR/cast_abs_to_unsigned.rs:26:13\n    |\n LL |     let _ = a.abs() as u8;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `isize::abs()` to u16\n-  --> $DIR/cast_abs_to_unsigned.rs:28:13\n+  --> $DIR/cast_abs_to_unsigned.rs:27:13\n    |\n LL |     let _ = a.abs() as u16;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `isize::abs()` to u32\n-  --> $DIR/cast_abs_to_unsigned.rs:29:13\n+  --> $DIR/cast_abs_to_unsigned.rs:28:13\n    |\n LL |     let _ = a.abs() as u32;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `isize::abs()` to u64\n-  --> $DIR/cast_abs_to_unsigned.rs:30:13\n+  --> $DIR/cast_abs_to_unsigned.rs:29:13\n    |\n LL |     let _ = a.abs() as u64;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `isize::abs()` to u128\n-  --> $DIR/cast_abs_to_unsigned.rs:31:13\n+  --> $DIR/cast_abs_to_unsigned.rs:30:13\n    |\n LL |     let _ = a.abs() as u128;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to u32\n-  --> $DIR/cast_abs_to_unsigned.rs:33:13\n+  --> $DIR/cast_abs_to_unsigned.rs:32:13\n    |\n LL |     let _ = (x as i64 - y as i64).abs() as u32;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `(x as i64 - y as i64).unsigned_abs()`\n \n error: casting the result of `i32::abs()` to u32\n-  --> $DIR/cast_abs_to_unsigned.rs:47:23\n+  --> $DIR/cast_abs_to_unsigned.rs:44:23\n    |\n LL |     assert_eq!(10u32, x.abs() as u32);\n    |                       ^^^^^^^^^^^^^^ help: replace with: `x.unsigned_abs()`"}, {"sha": "13b3cf838c9f02c2a75ee76b362670a416e945a0", "filename": "tests/ui/cast_lossless_bool.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcast_lossless_bool.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcast_lossless_bool.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_bool.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(dead_code)]\n #![warn(clippy::cast_lossless)]\n \n@@ -42,14 +41,12 @@ mod cast_lossless_in_impl {\n     }\n }\n \n+#[clippy::msrv = \"1.27\"]\n fn msrv_1_27() {\n-    #![clippy::msrv = \"1.27\"]\n-\n     let _ = true as u8;\n }\n \n+#[clippy::msrv = \"1.28\"]\n fn msrv_1_28() {\n-    #![clippy::msrv = \"1.28\"]\n-\n     let _ = u8::from(true);\n }"}, {"sha": "3eed2135562c8b7c3de500699b97cb06aa3ea50f", "filename": "tests/ui/cast_lossless_bool.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcast_lossless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcast_lossless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_bool.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(dead_code)]\n #![warn(clippy::cast_lossless)]\n \n@@ -42,14 +41,12 @@ mod cast_lossless_in_impl {\n     }\n }\n \n+#[clippy::msrv = \"1.27\"]\n fn msrv_1_27() {\n-    #![clippy::msrv = \"1.27\"]\n-\n     let _ = true as u8;\n }\n \n+#[clippy::msrv = \"1.28\"]\n fn msrv_1_28() {\n-    #![clippy::msrv = \"1.28\"]\n-\n     let _ = true as u8;\n }"}, {"sha": "ce240b70f891d2624c0a7a1c4ec255106a12a68f", "filename": "tests/ui/cast_lossless_bool.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcast_lossless_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcast_lossless_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_bool.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,85 +1,85 @@\n error: casting `bool` to `u8` is more cleanly stated with `u8::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:9:13\n+  --> $DIR/cast_lossless_bool.rs:8:13\n    |\n LL |     let _ = true as u8;\n    |             ^^^^^^^^^^ help: try: `u8::from(true)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting `bool` to `u16` is more cleanly stated with `u16::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:10:13\n+  --> $DIR/cast_lossless_bool.rs:9:13\n    |\n LL |     let _ = true as u16;\n    |             ^^^^^^^^^^^ help: try: `u16::from(true)`\n \n error: casting `bool` to `u32` is more cleanly stated with `u32::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:11:13\n+  --> $DIR/cast_lossless_bool.rs:10:13\n    |\n LL |     let _ = true as u32;\n    |             ^^^^^^^^^^^ help: try: `u32::from(true)`\n \n error: casting `bool` to `u64` is more cleanly stated with `u64::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:12:13\n+  --> $DIR/cast_lossless_bool.rs:11:13\n    |\n LL |     let _ = true as u64;\n    |             ^^^^^^^^^^^ help: try: `u64::from(true)`\n \n error: casting `bool` to `u128` is more cleanly stated with `u128::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:13:13\n+  --> $DIR/cast_lossless_bool.rs:12:13\n    |\n LL |     let _ = true as u128;\n    |             ^^^^^^^^^^^^ help: try: `u128::from(true)`\n \n error: casting `bool` to `usize` is more cleanly stated with `usize::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:14:13\n+  --> $DIR/cast_lossless_bool.rs:13:13\n    |\n LL |     let _ = true as usize;\n    |             ^^^^^^^^^^^^^ help: try: `usize::from(true)`\n \n error: casting `bool` to `i8` is more cleanly stated with `i8::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:16:13\n+  --> $DIR/cast_lossless_bool.rs:15:13\n    |\n LL |     let _ = true as i8;\n    |             ^^^^^^^^^^ help: try: `i8::from(true)`\n \n error: casting `bool` to `i16` is more cleanly stated with `i16::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:17:13\n+  --> $DIR/cast_lossless_bool.rs:16:13\n    |\n LL |     let _ = true as i16;\n    |             ^^^^^^^^^^^ help: try: `i16::from(true)`\n \n error: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:18:13\n+  --> $DIR/cast_lossless_bool.rs:17:13\n    |\n LL |     let _ = true as i32;\n    |             ^^^^^^^^^^^ help: try: `i32::from(true)`\n \n error: casting `bool` to `i64` is more cleanly stated with `i64::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:19:13\n+  --> $DIR/cast_lossless_bool.rs:18:13\n    |\n LL |     let _ = true as i64;\n    |             ^^^^^^^^^^^ help: try: `i64::from(true)`\n \n error: casting `bool` to `i128` is more cleanly stated with `i128::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:20:13\n+  --> $DIR/cast_lossless_bool.rs:19:13\n    |\n LL |     let _ = true as i128;\n    |             ^^^^^^^^^^^^ help: try: `i128::from(true)`\n \n error: casting `bool` to `isize` is more cleanly stated with `isize::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:21:13\n+  --> $DIR/cast_lossless_bool.rs:20:13\n    |\n LL |     let _ = true as isize;\n    |             ^^^^^^^^^^^^^ help: try: `isize::from(true)`\n \n error: casting `bool` to `u16` is more cleanly stated with `u16::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:24:13\n+  --> $DIR/cast_lossless_bool.rs:23:13\n    |\n LL |     let _ = (true | false) as u16;\n    |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `u16::from(true | false)`\n \n error: casting `bool` to `u8` is more cleanly stated with `u8::from(_)`\n-  --> $DIR/cast_lossless_bool.rs:54:13\n+  --> $DIR/cast_lossless_bool.rs:51:13\n    |\n LL |     let _ = true as u8;\n    |             ^^^^^^^^^^ help: try: `u8::from(true)`"}, {"sha": "b970b1209b6546a90fb05658810e029a06a6f8a5", "filename": "tests/ui/cfg_attr_rustfmt.fixed", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcfg_attr_rustfmt.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcfg_attr_rustfmt.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcfg_attr_rustfmt.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![feature(stmt_expr_attributes, custom_inner_attributes)]\n+#![feature(stmt_expr_attributes)]\n \n #![allow(unused, clippy::no_effect, clippy::unnecessary_operation)]\n #![warn(clippy::deprecated_cfg_attr)]\n@@ -30,16 +30,14 @@ mod foo {\n     pub fn f() {}\n }\n \n+#[clippy::msrv = \"1.29\"]\n fn msrv_1_29() {\n-    #![clippy::msrv = \"1.29\"]\n-\n     #[cfg_attr(rustfmt, rustfmt::skip)]\n     1+29;\n }\n \n+#[clippy::msrv = \"1.30\"]\n fn msrv_1_30() {\n-    #![clippy::msrv = \"1.30\"]\n-\n     #[rustfmt::skip]\n     1+30;\n }"}, {"sha": "0a8e6a89d8a0f510a162fbe9ca3d6dcedd028c7d", "filename": "tests/ui/cfg_attr_rustfmt.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcfg_attr_rustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcfg_attr_rustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcfg_attr_rustfmt.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![feature(stmt_expr_attributes, custom_inner_attributes)]\n+#![feature(stmt_expr_attributes)]\n \n #![allow(unused, clippy::no_effect, clippy::unnecessary_operation)]\n #![warn(clippy::deprecated_cfg_attr)]\n@@ -30,16 +30,14 @@ mod foo {\n     pub fn f() {}\n }\n \n+#[clippy::msrv = \"1.29\"]\n fn msrv_1_29() {\n-    #![clippy::msrv = \"1.29\"]\n-\n     #[cfg_attr(rustfmt, rustfmt::skip)]\n     1+29;\n }\n \n+#[clippy::msrv = \"1.30\"]\n fn msrv_1_30() {\n-    #![clippy::msrv = \"1.30\"]\n-\n     #[cfg_attr(rustfmt, rustfmt::skip)]\n     1+30;\n }"}, {"sha": "524a2bf72484bf1d4a0d1a13dc791cd31385fb4b", "filename": "tests/ui/cfg_attr_rustfmt.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcfg_attr_rustfmt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcfg_attr_rustfmt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcfg_attr_rustfmt.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -13,7 +13,7 @@ LL | #[cfg_attr(rustfmt, rustfmt_skip)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `#[rustfmt::skip]`\n \n error: `cfg_attr` is deprecated for rustfmt and got replaced by tool attributes\n-  --> $DIR/cfg_attr_rustfmt.rs:43:5\n+  --> $DIR/cfg_attr_rustfmt.rs:41:5\n    |\n LL |     #[cfg_attr(rustfmt, rustfmt::skip)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `#[rustfmt::skip]`"}, {"sha": "e279ba3147bba3420159b3cccb6a0bc5181efda0", "filename": "tests/ui/checked_conversions.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fchecked_conversions.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fchecked_conversions.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_conversions.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(\n     clippy::cast_lossless,\n     unused,\n@@ -78,16 +77,14 @@ pub const fn issue_8898(i: u32) -> bool {\n     i <= i32::MAX as u32\n }\n \n+#[clippy::msrv = \"1.33\"]\n fn msrv_1_33() {\n-    #![clippy::msrv = \"1.33\"]\n-\n     let value: i64 = 33;\n     let _ = value <= (u32::MAX as i64) && value >= 0;\n }\n \n+#[clippy::msrv = \"1.34\"]\n fn msrv_1_34() {\n-    #![clippy::msrv = \"1.34\"]\n-\n     let value: i64 = 34;\n     let _ = u32::try_from(value).is_ok();\n }"}, {"sha": "9d7a40995c3735b82daecc483e1d566c40a8709e", "filename": "tests/ui/checked_conversions.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_conversions.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(\n     clippy::cast_lossless,\n     unused,\n@@ -78,16 +77,14 @@ pub const fn issue_8898(i: u32) -> bool {\n     i <= i32::MAX as u32\n }\n \n+#[clippy::msrv = \"1.33\"]\n fn msrv_1_33() {\n-    #![clippy::msrv = \"1.33\"]\n-\n     let value: i64 = 33;\n     let _ = value <= (u32::MAX as i64) && value >= 0;\n }\n \n+#[clippy::msrv = \"1.34\"]\n fn msrv_1_34() {\n-    #![clippy::msrv = \"1.34\"]\n-\n     let value: i64 = 34;\n     let _ = value <= (u32::MAX as i64) && value >= 0;\n }"}, {"sha": "273ead73bda580a27607ef7362eb3654c06efe10", "filename": "tests/ui/checked_conversions.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fchecked_conversions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fchecked_conversions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_conversions.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,103 +1,103 @@\n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:17:13\n+  --> $DIR/checked_conversions.rs:16:13\n    |\n LL |     let _ = value <= (u32::max_value() as i64) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u32::try_from(value).is_ok()`\n    |\n    = note: `-D clippy::checked-conversions` implied by `-D warnings`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:18:13\n+  --> $DIR/checked_conversions.rs:17:13\n    |\n LL |     let _ = value <= (u32::MAX as i64) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u32::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:22:13\n+  --> $DIR/checked_conversions.rs:21:13\n    |\n LL |     let _ = value <= i64::from(u16::max_value()) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u16::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:23:13\n+  --> $DIR/checked_conversions.rs:22:13\n    |\n LL |     let _ = value <= i64::from(u16::MAX) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u16::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:27:13\n+  --> $DIR/checked_conversions.rs:26:13\n    |\n LL |     let _ = value <= (u8::max_value() as isize) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u8::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:28:13\n+  --> $DIR/checked_conversions.rs:27:13\n    |\n LL |     let _ = value <= (u8::MAX as isize) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u8::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:34:13\n+  --> $DIR/checked_conversions.rs:33:13\n    |\n LL |     let _ = value <= (i32::max_value() as i64) && value >= (i32::min_value() as i64);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:35:13\n+  --> $DIR/checked_conversions.rs:34:13\n    |\n LL |     let _ = value <= (i32::MAX as i64) && value >= (i32::MIN as i64);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:39:13\n+  --> $DIR/checked_conversions.rs:38:13\n    |\n LL |     let _ = value <= i64::from(i16::max_value()) && value >= i64::from(i16::min_value());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i16::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:40:13\n+  --> $DIR/checked_conversions.rs:39:13\n    |\n LL |     let _ = value <= i64::from(i16::MAX) && value >= i64::from(i16::MIN);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i16::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:46:13\n+  --> $DIR/checked_conversions.rs:45:13\n    |\n LL |     let _ = value <= i32::max_value() as u32;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:47:13\n+  --> $DIR/checked_conversions.rs:46:13\n    |\n LL |     let _ = value <= i32::MAX as u32;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:51:13\n+  --> $DIR/checked_conversions.rs:50:13\n    |\n LL |     let _ = value <= isize::max_value() as usize && value as i32 == 5;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `isize::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:52:13\n+  --> $DIR/checked_conversions.rs:51:13\n    |\n LL |     let _ = value <= isize::MAX as usize && value as i32 == 5;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `isize::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:56:13\n+  --> $DIR/checked_conversions.rs:55:13\n    |\n LL |     let _ = value <= u16::max_value() as u32 && value as i32 == 5;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u16::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:57:13\n+  --> $DIR/checked_conversions.rs:56:13\n    |\n LL |     let _ = value <= u16::MAX as u32 && value as i32 == 5;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u16::try_from(value).is_ok()`\n \n error: checked cast can be simplified\n-  --> $DIR/checked_conversions.rs:92:13\n+  --> $DIR/checked_conversions.rs:89:13\n    |\n LL |     let _ = value <= (u32::MAX as i64) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u32::try_from(value).is_ok()`"}, {"sha": "ecbfc1feedf62f4f1a8d812bb270d9b9193719cb", "filename": "tests/ui/cloned_instead_of_copied.fixed", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcloned_instead_of_copied.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcloned_instead_of_copied.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcloned_instead_of_copied.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::cloned_instead_of_copied)]\n #![allow(unused)]\n \n@@ -17,23 +16,20 @@ fn main() {\n     let _ = Some(&String::new()).cloned();\n }\n \n+#[clippy::msrv = \"1.34\"]\n fn msrv_1_34() {\n-    #![clippy::msrv = \"1.34\"]\n-\n     let _ = [1].iter().cloned();\n     let _ = Some(&1).cloned();\n }\n \n+#[clippy::msrv = \"1.35\"]\n fn msrv_1_35() {\n-    #![clippy::msrv = \"1.35\"]\n-\n     let _ = [1].iter().cloned();\n     let _ = Some(&1).copied(); // Option::copied needs 1.35\n }\n \n+#[clippy::msrv = \"1.36\"]\n fn msrv_1_36() {\n-    #![clippy::msrv = \"1.36\"]\n-\n     let _ = [1].iter().copied(); // Iterator::copied needs 1.36\n     let _ = Some(&1).copied();\n }"}, {"sha": "163dc3dddce62de3e9d452c0bcc3fa0983196864", "filename": "tests/ui/cloned_instead_of_copied.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcloned_instead_of_copied.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcloned_instead_of_copied.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcloned_instead_of_copied.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::cloned_instead_of_copied)]\n #![allow(unused)]\n \n@@ -17,23 +16,20 @@ fn main() {\n     let _ = Some(&String::new()).cloned();\n }\n \n+#[clippy::msrv = \"1.34\"]\n fn msrv_1_34() {\n-    #![clippy::msrv = \"1.34\"]\n-\n     let _ = [1].iter().cloned();\n     let _ = Some(&1).cloned();\n }\n \n+#[clippy::msrv = \"1.35\"]\n fn msrv_1_35() {\n-    #![clippy::msrv = \"1.35\"]\n-\n     let _ = [1].iter().cloned();\n     let _ = Some(&1).cloned(); // Option::copied needs 1.35\n }\n \n+#[clippy::msrv = \"1.36\"]\n fn msrv_1_36() {\n-    #![clippy::msrv = \"1.36\"]\n-\n     let _ = [1].iter().cloned(); // Iterator::copied needs 1.36\n     let _ = Some(&1).cloned();\n }"}, {"sha": "e0361acd956072d53a704a40f10dd3de1b998f20", "filename": "tests/ui/cloned_instead_of_copied.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcloned_instead_of_copied.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fcloned_instead_of_copied.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcloned_instead_of_copied.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,49 +1,49 @@\n error: used `cloned` where `copied` could be used instead\n-  --> $DIR/cloned_instead_of_copied.rs:9:24\n+  --> $DIR/cloned_instead_of_copied.rs:8:24\n    |\n LL |     let _ = [1].iter().cloned();\n    |                        ^^^^^^ help: try: `copied`\n    |\n    = note: `-D clippy::cloned-instead-of-copied` implied by `-D warnings`\n \n error: used `cloned` where `copied` could be used instead\n-  --> $DIR/cloned_instead_of_copied.rs:10:31\n+  --> $DIR/cloned_instead_of_copied.rs:9:31\n    |\n LL |     let _ = vec![\"hi\"].iter().cloned();\n    |                               ^^^^^^ help: try: `copied`\n \n error: used `cloned` where `copied` could be used instead\n-  --> $DIR/cloned_instead_of_copied.rs:11:22\n+  --> $DIR/cloned_instead_of_copied.rs:10:22\n    |\n LL |     let _ = Some(&1).cloned();\n    |                      ^^^^^^ help: try: `copied`\n \n error: used `cloned` where `copied` could be used instead\n-  --> $DIR/cloned_instead_of_copied.rs:12:34\n+  --> $DIR/cloned_instead_of_copied.rs:11:34\n    |\n LL |     let _ = Box::new([1].iter()).cloned();\n    |                                  ^^^^^^ help: try: `copied`\n \n error: used `cloned` where `copied` could be used instead\n-  --> $DIR/cloned_instead_of_copied.rs:13:32\n+  --> $DIR/cloned_instead_of_copied.rs:12:32\n    |\n LL |     let _ = Box::new(Some(&1)).cloned();\n    |                                ^^^^^^ help: try: `copied`\n \n error: used `cloned` where `copied` could be used instead\n-  --> $DIR/cloned_instead_of_copied.rs:31:22\n+  --> $DIR/cloned_instead_of_copied.rs:28:22\n    |\n LL |     let _ = Some(&1).cloned(); // Option::copied needs 1.35\n    |                      ^^^^^^ help: try: `copied`\n \n error: used `cloned` where `copied` could be used instead\n-  --> $DIR/cloned_instead_of_copied.rs:37:24\n+  --> $DIR/cloned_instead_of_copied.rs:33:24\n    |\n LL |     let _ = [1].iter().cloned(); // Iterator::copied needs 1.36\n    |                        ^^^^^^ help: try: `copied`\n \n error: used `cloned` where `copied` could be used instead\n-  --> $DIR/cloned_instead_of_copied.rs:38:22\n+  --> $DIR/cloned_instead_of_copied.rs:34:22\n    |\n LL |     let _ = Some(&1).cloned();\n    |                      ^^^^^^ help: try: `copied`"}, {"sha": "b63cbd8a8e6bde03c72dde203720fa44646f548f", "filename": "tests/ui/err_expect.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ferr_expect.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ferr_expect.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferr_expect.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(unused)]\n \n struct MyTypeNonDebug;\n@@ -16,16 +15,14 @@ fn main() {\n     test_non_debug.err().expect(\"Testing non debug type\");\n }\n \n+#[clippy::msrv = \"1.16\"]\n fn msrv_1_16() {\n-    #![clippy::msrv = \"1.16\"]\n-\n     let x: Result<u32, &str> = Ok(16);\n     x.err().expect(\"16\");\n }\n \n+#[clippy::msrv = \"1.17\"]\n fn msrv_1_17() {\n-    #![clippy::msrv = \"1.17\"]\n-\n     let x: Result<u32, &str> = Ok(17);\n     x.expect_err(\"17\");\n }"}, {"sha": "c081a745fb4069b9809a25ab53a2622c40d0ed69", "filename": "tests/ui/err_expect.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ferr_expect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ferr_expect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferr_expect.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(unused)]\n \n struct MyTypeNonDebug;\n@@ -16,16 +15,14 @@ fn main() {\n     test_non_debug.err().expect(\"Testing non debug type\");\n }\n \n+#[clippy::msrv = \"1.16\"]\n fn msrv_1_16() {\n-    #![clippy::msrv = \"1.16\"]\n-\n     let x: Result<u32, &str> = Ok(16);\n     x.err().expect(\"16\");\n }\n \n+#[clippy::msrv = \"1.17\"]\n fn msrv_1_17() {\n-    #![clippy::msrv = \"1.17\"]\n-\n     let x: Result<u32, &str> = Ok(17);\n     x.err().expect(\"17\");\n }"}, {"sha": "82c0754cfb00b20ff49202cf9f5510284edf83cf", "filename": "tests/ui/err_expect.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ferr_expect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ferr_expect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferr_expect.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,13 +1,13 @@\n error: called `.err().expect()` on a `Result` value\n-  --> $DIR/err_expect.rs:13:16\n+  --> $DIR/err_expect.rs:12:16\n    |\n LL |     test_debug.err().expect(\"Testing debug type\");\n    |                ^^^^^^^^^^^^ help: try: `expect_err`\n    |\n    = note: `-D clippy::err-expect` implied by `-D warnings`\n \n error: called `.err().expect()` on a `Result` value\n-  --> $DIR/err_expect.rs:30:7\n+  --> $DIR/err_expect.rs:27:7\n    |\n LL |     x.err().expect(\"17\");\n    |       ^^^^^^^^^^^^ help: try: `expect_err`"}, {"sha": "462d46169fcbec0dff6c86ca1d848df8cee13e5e", "filename": "tests/ui/filter_map_next_fixable.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ffilter_map_next_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ffilter_map_next_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_map_next_fixable.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::all, clippy::pedantic)]\n #![allow(unused)]\n \n@@ -11,16 +10,14 @@ fn main() {\n     assert_eq!(element, Some(1));\n }\n \n+#[clippy::msrv = \"1.29\"]\n fn msrv_1_29() {\n-    #![clippy::msrv = \"1.29\"]\n-\n     let a = [\"1\", \"lol\", \"3\", \"NaN\", \"5\"];\n     let _: Option<i32> = a.iter().filter_map(|s| s.parse().ok()).next();\n }\n \n+#[clippy::msrv = \"1.30\"]\n fn msrv_1_30() {\n-    #![clippy::msrv = \"1.30\"]\n-\n     let a = [\"1\", \"lol\", \"3\", \"NaN\", \"5\"];\n     let _: Option<i32> = a.iter().find_map(|s| s.parse().ok());\n }"}, {"sha": "2ea00cf73072e6abecc95e73dc07c45d2d46da96", "filename": "tests/ui/filter_map_next_fixable.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ffilter_map_next_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ffilter_map_next_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_map_next_fixable.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::all, clippy::pedantic)]\n #![allow(unused)]\n \n@@ -11,16 +10,14 @@ fn main() {\n     assert_eq!(element, Some(1));\n }\n \n+#[clippy::msrv = \"1.29\"]\n fn msrv_1_29() {\n-    #![clippy::msrv = \"1.29\"]\n-\n     let a = [\"1\", \"lol\", \"3\", \"NaN\", \"5\"];\n     let _: Option<i32> = a.iter().filter_map(|s| s.parse().ok()).next();\n }\n \n+#[clippy::msrv = \"1.30\"]\n fn msrv_1_30() {\n-    #![clippy::msrv = \"1.30\"]\n-\n     let a = [\"1\", \"lol\", \"3\", \"NaN\", \"5\"];\n     let _: Option<i32> = a.iter().filter_map(|s| s.parse().ok()).next();\n }"}, {"sha": "a9fc6abe88facbda0ab9009ee0063ed5d14a14db", "filename": "tests/ui/filter_map_next_fixable.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ffilter_map_next_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ffilter_map_next_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_map_next_fixable.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,13 +1,13 @@\n error: called `filter_map(..).next()` on an `Iterator`. This is more succinctly expressed by calling `.find_map(..)` instead\n-  --> $DIR/filter_map_next_fixable.rs:10:32\n+  --> $DIR/filter_map_next_fixable.rs:9:32\n    |\n LL |     let element: Option<i32> = a.iter().filter_map(|s| s.parse().ok()).next();\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `a.iter().find_map(|s| s.parse().ok())`\n    |\n    = note: `-D clippy::filter-map-next` implied by `-D warnings`\n \n error: called `filter_map(..).next()` on an `Iterator`. This is more succinctly expressed by calling `.find_map(..)` instead\n-  --> $DIR/filter_map_next_fixable.rs:25:26\n+  --> $DIR/filter_map_next_fixable.rs:22:26\n    |\n LL |     let _: Option<i32> = a.iter().filter_map(|s| s.parse().ok()).next();\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `a.iter().find_map(|s| s.parse().ok())`"}, {"sha": "125c9a69cd3fd1fdd48f8b7a37d7672d84f18a9a", "filename": "tests/ui/from_over_into.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ffrom_over_into.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ffrom_over_into.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffrom_over_into.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::from_over_into)]\n #![allow(unused)]\n \n@@ -60,9 +59,8 @@ impl From<String> for A {\n     }\n }\n \n+#[clippy::msrv = \"1.40\"]\n fn msrv_1_40() {\n-    #![clippy::msrv = \"1.40\"]\n-\n     struct FromOverInto<T>(Vec<T>);\n \n     impl<T> Into<FromOverInto<T>> for Vec<T> {\n@@ -72,9 +70,8 @@ fn msrv_1_40() {\n     }\n }\n \n+#[clippy::msrv = \"1.41\"]\n fn msrv_1_41() {\n-    #![clippy::msrv = \"1.41\"]\n-\n     struct FromOverInto<T>(Vec<T>);\n \n     impl<T> From<Vec<T>> for FromOverInto<T> {"}, {"sha": "5aa127bfabe4b792a59ab914277c7034d7e06b2b", "filename": "tests/ui/from_over_into.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ffrom_over_into.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ffrom_over_into.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffrom_over_into.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::from_over_into)]\n #![allow(unused)]\n \n@@ -60,9 +59,8 @@ impl From<String> for A {\n     }\n }\n \n+#[clippy::msrv = \"1.40\"]\n fn msrv_1_40() {\n-    #![clippy::msrv = \"1.40\"]\n-\n     struct FromOverInto<T>(Vec<T>);\n \n     impl<T> Into<FromOverInto<T>> for Vec<T> {\n@@ -72,9 +70,8 @@ fn msrv_1_40() {\n     }\n }\n \n+#[clippy::msrv = \"1.41\"]\n fn msrv_1_41() {\n-    #![clippy::msrv = \"1.41\"]\n-\n     struct FromOverInto<T>(Vec<T>);\n \n     impl<T> Into<FromOverInto<T>> for Vec<T> {"}, {"sha": "a1764a5ea12ae8f5deef37156c803d244523c4f0", "filename": "tests/ui/from_over_into.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ffrom_over_into.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ffrom_over_into.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffrom_over_into.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,5 @@\n error: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n-  --> $DIR/from_over_into.rs:10:1\n+  --> $DIR/from_over_into.rs:9:1\n    |\n LL | impl Into<StringWrapper> for String {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -13,7 +13,7 @@ LL ~         StringWrapper(val)\n    |\n \n error: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n-  --> $DIR/from_over_into.rs:18:1\n+  --> $DIR/from_over_into.rs:17:1\n    |\n LL | impl Into<SelfType> for String {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -26,7 +26,7 @@ LL ~         SelfType(String::new())\n    |\n \n error: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n-  --> $DIR/from_over_into.rs:33:1\n+  --> $DIR/from_over_into.rs:32:1\n    |\n LL | impl Into<SelfKeywords> for X {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -41,7 +41,7 @@ LL ~         let _: X = val;\n    |\n \n error: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n-  --> $DIR/from_over_into.rs:45:1\n+  --> $DIR/from_over_into.rs:44:1\n    |\n LL | impl core::convert::Into<bool> for crate::ExplicitPaths {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -59,7 +59,7 @@ LL ~         val.0\n    |\n \n error: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n-  --> $DIR/from_over_into.rs:80:5\n+  --> $DIR/from_over_into.rs:77:5\n    |\n LL |     impl<T> Into<FromOverInto<T>> for Vec<T> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "0e89fdb0dfa28c028d5c7df3edc22ff125512386", "filename": "tests/ui/if_then_some_else_none.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fif_then_some_else_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fif_then_some_else_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_then_some_else_none.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,4 @@\n #![warn(clippy::if_then_some_else_none)]\n-#![feature(custom_inner_attributes)]\n \n fn main() {\n     // Should issue an error.\n@@ -66,8 +65,8 @@ fn main() {\n     let _ = if foo() { into_some(\"foo\") } else { None };\n }\n \n+#[clippy::msrv = \"1.49\"]\n fn _msrv_1_49() {\n-    #![clippy::msrv = \"1.49\"]\n     // `bool::then` was stabilized in 1.50. Do not lint this\n     let _ = if foo() {\n         println!(\"true!\");\n@@ -77,8 +76,8 @@ fn _msrv_1_49() {\n     };\n }\n \n+#[clippy::msrv = \"1.50\"]\n fn _msrv_1_50() {\n-    #![clippy::msrv = \"1.50\"]\n     let _ = if foo() {\n         println!(\"true!\");\n         Some(150)"}, {"sha": "d728a3c31a3ba95fabc9b0fa3d587946a1eb5ab3", "filename": "tests/ui/if_then_some_else_none.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fif_then_some_else_none.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fif_then_some_else_none.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_then_some_else_none.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,5 @@\n error: this could be simplified with `bool::then`\n-  --> $DIR/if_then_some_else_none.rs:6:13\n+  --> $DIR/if_then_some_else_none.rs:5:13\n    |\n LL |       let _ = if foo() {\n    |  _____________^\n@@ -14,7 +14,7 @@ LL | |     };\n    = note: `-D clippy::if-then-some-else-none` implied by `-D warnings`\n \n error: this could be simplified with `bool::then`\n-  --> $DIR/if_then_some_else_none.rs:14:13\n+  --> $DIR/if_then_some_else_none.rs:13:13\n    |\n LL |       let _ = if matches!(true, true) {\n    |  _____________^\n@@ -28,23 +28,23 @@ LL | |     };\n    = help: consider using `bool::then` like: `matches!(true, true).then(|| { /* snippet */ matches!(true, false) })`\n \n error: this could be simplified with `bool::then_some`\n-  --> $DIR/if_then_some_else_none.rs:23:28\n+  --> $DIR/if_then_some_else_none.rs:22:28\n    |\n LL |     let _ = x.and_then(|o| if o < 32 { Some(o) } else { None });\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using `bool::then_some` like: `(o < 32).then_some(o)`\n \n error: this could be simplified with `bool::then_some`\n-  --> $DIR/if_then_some_else_none.rs:27:13\n+  --> $DIR/if_then_some_else_none.rs:26:13\n    |\n LL |     let _ = if !x { Some(0) } else { None };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using `bool::then_some` like: `(!x).then_some(0)`\n \n error: this could be simplified with `bool::then`\n-  --> $DIR/if_then_some_else_none.rs:82:13\n+  --> $DIR/if_then_some_else_none.rs:81:13\n    |\n LL |       let _ = if foo() {\n    |  _____________^"}, {"sha": "f7902e6fd53893b717509873b314486a99da2c56", "filename": "tests/ui/manual_clamp.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_clamp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_clamp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_clamp.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,4 +1,3 @@\n-#![feature(custom_inner_attributes)]\n #![warn(clippy::manual_clamp)]\n #![allow(\n     unused,\n@@ -304,9 +303,8 @@ fn cmp_min_max(input: i32) -> i32 {\n     input * 3\n }\n \n+#[clippy::msrv = \"1.49\"]\n fn msrv_1_49() {\n-    #![clippy::msrv = \"1.49\"]\n-\n     let (input, min, max) = (0, -1, 2);\n     let _ = if input < min {\n         min\n@@ -317,9 +315,8 @@ fn msrv_1_49() {\n     };\n }\n \n+#[clippy::msrv = \"1.50\"]\n fn msrv_1_50() {\n-    #![clippy::msrv = \"1.50\"]\n-\n     let (input, min, max) = (0, -1, 2);\n     let _ = if input < min {\n         min"}, {"sha": "988ad1527e837aa9528ff263f28b526ee062afb0", "filename": "tests/ui/manual_clamp.stderr", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_clamp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_clamp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_clamp.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,5 @@\n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:77:5\n+  --> $DIR/manual_clamp.rs:76:5\n    |\n LL | /     if x9 < min {\n LL | |         x9 = min;\n@@ -13,7 +13,7 @@ LL | |     }\n    = note: `-D clippy::manual-clamp` implied by `-D warnings`\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:92:5\n+  --> $DIR/manual_clamp.rs:91:5\n    |\n LL | /     if x11 > max {\n LL | |         x11 = max;\n@@ -26,7 +26,7 @@ LL | |     }\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:100:5\n+  --> $DIR/manual_clamp.rs:99:5\n    |\n LL | /     if min > x12 {\n LL | |         x12 = min;\n@@ -39,7 +39,7 @@ LL | |     }\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:108:5\n+  --> $DIR/manual_clamp.rs:107:5\n    |\n LL | /     if max < x13 {\n LL | |         x13 = max;\n@@ -52,7 +52,7 @@ LL | |     }\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:162:5\n+  --> $DIR/manual_clamp.rs:161:5\n    |\n LL | /     if max < x33 {\n LL | |         x33 = max;\n@@ -65,7 +65,7 @@ LL | |     }\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:22:14\n+  --> $DIR/manual_clamp.rs:21:14\n    |\n LL |       let x0 = if max < input {\n    |  ______________^\n@@ -80,7 +80,7 @@ LL | |     };\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:30:14\n+  --> $DIR/manual_clamp.rs:29:14\n    |\n LL |       let x1 = if input > max {\n    |  ______________^\n@@ -95,7 +95,7 @@ LL | |     };\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:38:14\n+  --> $DIR/manual_clamp.rs:37:14\n    |\n LL |       let x2 = if input < min {\n    |  ______________^\n@@ -110,7 +110,7 @@ LL | |     };\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:46:14\n+  --> $DIR/manual_clamp.rs:45:14\n    |\n LL |       let x3 = if min > input {\n    |  ______________^\n@@ -125,23 +125,23 @@ LL | |     };\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:54:14\n+  --> $DIR/manual_clamp.rs:53:14\n    |\n LL |     let x4 = input.max(min).min(max);\n    |              ^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(min, max)`\n    |\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:56:14\n+  --> $DIR/manual_clamp.rs:55:14\n    |\n LL |     let x5 = input.min(max).max(min);\n    |              ^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(min, max)`\n    |\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:58:14\n+  --> $DIR/manual_clamp.rs:57:14\n    |\n LL |       let x6 = match input {\n    |  ______________^\n@@ -154,7 +154,7 @@ LL | |     };\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:64:14\n+  --> $DIR/manual_clamp.rs:63:14\n    |\n LL |       let x7 = match input {\n    |  ______________^\n@@ -167,7 +167,7 @@ LL | |     };\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:70:14\n+  --> $DIR/manual_clamp.rs:69:14\n    |\n LL |       let x8 = match input {\n    |  ______________^\n@@ -180,7 +180,7 @@ LL | |     };\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:84:15\n+  --> $DIR/manual_clamp.rs:83:15\n    |\n LL |       let x10 = match input {\n    |  _______________^\n@@ -193,7 +193,7 @@ LL | |     };\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:115:15\n+  --> $DIR/manual_clamp.rs:114:15\n    |\n LL |       let x14 = if input > CONST_MAX {\n    |  _______________^\n@@ -208,7 +208,7 @@ LL | |     };\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:124:19\n+  --> $DIR/manual_clamp.rs:123:19\n    |\n LL |           let x15 = if input > max {\n    |  ___________________^\n@@ -224,71 +224,71 @@ LL | |         };\n    = note: clamp returns NaN if the input is NaN\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:135:19\n+  --> $DIR/manual_clamp.rs:134:19\n    |\n LL |         let x16 = cmp_max(cmp_min(input, CONST_MAX), CONST_MIN);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_MIN, CONST_MAX)`\n    |\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:136:19\n+  --> $DIR/manual_clamp.rs:135:19\n    |\n LL |         let x17 = cmp_min(cmp_max(input, CONST_MIN), CONST_MAX);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_MIN, CONST_MAX)`\n    |\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:137:19\n+  --> $DIR/manual_clamp.rs:136:19\n    |\n LL |         let x18 = cmp_max(CONST_MIN, cmp_min(input, CONST_MAX));\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_MIN, CONST_MAX)`\n    |\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:138:19\n+  --> $DIR/manual_clamp.rs:137:19\n    |\n LL |         let x19 = cmp_min(CONST_MAX, cmp_max(input, CONST_MIN));\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_MIN, CONST_MAX)`\n    |\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:139:19\n+  --> $DIR/manual_clamp.rs:138:19\n    |\n LL |         let x20 = cmp_max(cmp_min(CONST_MAX, input), CONST_MIN);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_MIN, CONST_MAX)`\n    |\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:140:19\n+  --> $DIR/manual_clamp.rs:139:19\n    |\n LL |         let x21 = cmp_min(cmp_max(CONST_MIN, input), CONST_MAX);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_MIN, CONST_MAX)`\n    |\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:141:19\n+  --> $DIR/manual_clamp.rs:140:19\n    |\n LL |         let x22 = cmp_max(CONST_MIN, cmp_min(CONST_MAX, input));\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_MIN, CONST_MAX)`\n    |\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:142:19\n+  --> $DIR/manual_clamp.rs:141:19\n    |\n LL |         let x23 = cmp_min(CONST_MAX, cmp_max(CONST_MIN, input));\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_MIN, CONST_MAX)`\n    |\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:144:19\n+  --> $DIR/manual_clamp.rs:143:19\n    |\n LL |         let x24 = f64::max(f64::min(input, CONST_F64_MAX), CONST_F64_MIN);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_F64_MIN, CONST_F64_MAX)`\n@@ -297,7 +297,7 @@ LL |         let x24 = f64::max(f64::min(input, CONST_F64_MAX), CONST_F64_MIN);\n    = note: clamp returns NaN if the input is NaN\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:145:19\n+  --> $DIR/manual_clamp.rs:144:19\n    |\n LL |         let x25 = f64::min(f64::max(input, CONST_F64_MIN), CONST_F64_MAX);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_F64_MIN, CONST_F64_MAX)`\n@@ -306,7 +306,7 @@ LL |         let x25 = f64::min(f64::max(input, CONST_F64_MIN), CONST_F64_MAX);\n    = note: clamp returns NaN if the input is NaN\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:146:19\n+  --> $DIR/manual_clamp.rs:145:19\n    |\n LL |         let x26 = f64::max(CONST_F64_MIN, f64::min(input, CONST_F64_MAX));\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_F64_MIN, CONST_F64_MAX)`\n@@ -315,7 +315,7 @@ LL |         let x26 = f64::max(CONST_F64_MIN, f64::min(input, CONST_F64_MAX));\n    = note: clamp returns NaN if the input is NaN\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:147:19\n+  --> $DIR/manual_clamp.rs:146:19\n    |\n LL |         let x27 = f64::min(CONST_F64_MAX, f64::max(input, CONST_F64_MIN));\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_F64_MIN, CONST_F64_MAX)`\n@@ -324,7 +324,7 @@ LL |         let x27 = f64::min(CONST_F64_MAX, f64::max(input, CONST_F64_MIN));\n    = note: clamp returns NaN if the input is NaN\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:148:19\n+  --> $DIR/manual_clamp.rs:147:19\n    |\n LL |         let x28 = f64::max(f64::min(CONST_F64_MAX, input), CONST_F64_MIN);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_F64_MIN, CONST_F64_MAX)`\n@@ -333,7 +333,7 @@ LL |         let x28 = f64::max(f64::min(CONST_F64_MAX, input), CONST_F64_MIN);\n    = note: clamp returns NaN if the input is NaN\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:149:19\n+  --> $DIR/manual_clamp.rs:148:19\n    |\n LL |         let x29 = f64::min(f64::max(CONST_F64_MIN, input), CONST_F64_MAX);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_F64_MIN, CONST_F64_MAX)`\n@@ -342,7 +342,7 @@ LL |         let x29 = f64::min(f64::max(CONST_F64_MIN, input), CONST_F64_MAX);\n    = note: clamp returns NaN if the input is NaN\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:150:19\n+  --> $DIR/manual_clamp.rs:149:19\n    |\n LL |         let x30 = f64::max(CONST_F64_MIN, f64::min(CONST_F64_MAX, input));\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_F64_MIN, CONST_F64_MAX)`\n@@ -351,7 +351,7 @@ LL |         let x30 = f64::max(CONST_F64_MIN, f64::min(CONST_F64_MAX, input));\n    = note: clamp returns NaN if the input is NaN\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:151:19\n+  --> $DIR/manual_clamp.rs:150:19\n    |\n LL |         let x31 = f64::min(CONST_F64_MAX, f64::max(CONST_F64_MIN, input));\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `input.clamp(CONST_F64_MIN, CONST_F64_MAX)`\n@@ -360,7 +360,7 @@ LL |         let x31 = f64::min(CONST_F64_MAX, f64::max(CONST_F64_MIN, input));\n    = note: clamp returns NaN if the input is NaN\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:154:5\n+  --> $DIR/manual_clamp.rs:153:5\n    |\n LL | /     if x32 < min {\n LL | |         x32 = min;\n@@ -372,7 +372,7 @@ LL | |     }\n    = note: clamp will panic if max < min\n \n error: clamp-like pattern without using clamp function\n-  --> $DIR/manual_clamp.rs:324:13\n+  --> $DIR/manual_clamp.rs:321:13\n    |\n LL |       let _ = if input < min {\n    |  _____________^"}, {"sha": "231ba83b1426130a3b6482d8e9cb938aacfced4d", "filename": "tests/ui/manual_is_ascii_check.fixed", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_is_ascii_check.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_is_ascii_check.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_is_ascii_check.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(unused, dead_code)]\n #![warn(clippy::manual_is_ascii_check)]\n \n@@ -18,28 +17,26 @@ fn main() {\n     assert!(matches!('x', 'A'..='Z' | 'a'..='z' | '_'));\n }\n \n+#[clippy::msrv = \"1.23\"]\n fn msrv_1_23() {\n-    #![clippy::msrv = \"1.23\"]\n-\n     assert!(matches!(b'1', b'0'..=b'9'));\n     assert!(matches!('X', 'A'..='Z'));\n     assert!(matches!('x', 'A'..='Z' | 'a'..='z'));\n }\n \n+#[clippy::msrv = \"1.24\"]\n fn msrv_1_24() {\n-    #![clippy::msrv = \"1.24\"]\n-\n     assert!(b'1'.is_ascii_digit());\n     assert!('X'.is_ascii_uppercase());\n     assert!('x'.is_ascii_alphabetic());\n }\n \n+#[clippy::msrv = \"1.46\"]\n fn msrv_1_46() {\n-    #![clippy::msrv = \"1.46\"]\n     const FOO: bool = matches!('x', '0'..='9');\n }\n \n+#[clippy::msrv = \"1.47\"]\n fn msrv_1_47() {\n-    #![clippy::msrv = \"1.47\"]\n     const FOO: bool = 'x'.is_ascii_digit();\n }"}, {"sha": "39ee6151c56f08ff53b77377e9eb916b437d00a6", "filename": "tests/ui/manual_is_ascii_check.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_is_ascii_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_is_ascii_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_is_ascii_check.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(unused, dead_code)]\n #![warn(clippy::manual_is_ascii_check)]\n \n@@ -18,28 +17,26 @@ fn main() {\n     assert!(matches!('x', 'A'..='Z' | 'a'..='z' | '_'));\n }\n \n+#[clippy::msrv = \"1.23\"]\n fn msrv_1_23() {\n-    #![clippy::msrv = \"1.23\"]\n-\n     assert!(matches!(b'1', b'0'..=b'9'));\n     assert!(matches!('X', 'A'..='Z'));\n     assert!(matches!('x', 'A'..='Z' | 'a'..='z'));\n }\n \n+#[clippy::msrv = \"1.24\"]\n fn msrv_1_24() {\n-    #![clippy::msrv = \"1.24\"]\n-\n     assert!(matches!(b'1', b'0'..=b'9'));\n     assert!(matches!('X', 'A'..='Z'));\n     assert!(matches!('x', 'A'..='Z' | 'a'..='z'));\n }\n \n+#[clippy::msrv = \"1.46\"]\n fn msrv_1_46() {\n-    #![clippy::msrv = \"1.46\"]\n     const FOO: bool = matches!('x', '0'..='9');\n }\n \n+#[clippy::msrv = \"1.47\"]\n fn msrv_1_47() {\n-    #![clippy::msrv = \"1.47\"]\n     const FOO: bool = matches!('x', '0'..='9');\n }"}, {"sha": "397cbe05c822ad7fba97b5f46d02fd569e2882fe", "filename": "tests/ui/manual_is_ascii_check.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_is_ascii_check.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_is_ascii_check.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_is_ascii_check.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,67 +1,67 @@\n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:8:13\n+  --> $DIR/manual_is_ascii_check.rs:7:13\n    |\n LL |     assert!(matches!('x', 'a'..='z'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'x'.is_ascii_lowercase()`\n    |\n    = note: `-D clippy::manual-is-ascii-check` implied by `-D warnings`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:9:13\n+  --> $DIR/manual_is_ascii_check.rs:8:13\n    |\n LL |     assert!(matches!('X', 'A'..='Z'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'X'.is_ascii_uppercase()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:10:13\n+  --> $DIR/manual_is_ascii_check.rs:9:13\n    |\n LL |     assert!(matches!(b'x', b'a'..=b'z'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'x'.is_ascii_lowercase()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:11:13\n+  --> $DIR/manual_is_ascii_check.rs:10:13\n    |\n LL |     assert!(matches!(b'X', b'A'..=b'Z'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'X'.is_ascii_uppercase()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:14:13\n+  --> $DIR/manual_is_ascii_check.rs:13:13\n    |\n LL |     assert!(matches!(num, '0'..='9'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `num.is_ascii_digit()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:15:13\n+  --> $DIR/manual_is_ascii_check.rs:14:13\n    |\n LL |     assert!(matches!(b'1', b'0'..=b'9'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'1'.is_ascii_digit()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:16:13\n+  --> $DIR/manual_is_ascii_check.rs:15:13\n    |\n LL |     assert!(matches!('x', 'A'..='Z' | 'a'..='z'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'x'.is_ascii_alphabetic()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:32:13\n+  --> $DIR/manual_is_ascii_check.rs:29:13\n    |\n LL |     assert!(matches!(b'1', b'0'..=b'9'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'1'.is_ascii_digit()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:33:13\n+  --> $DIR/manual_is_ascii_check.rs:30:13\n    |\n LL |     assert!(matches!('X', 'A'..='Z'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'X'.is_ascii_uppercase()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:34:13\n+  --> $DIR/manual_is_ascii_check.rs:31:13\n    |\n LL |     assert!(matches!('x', 'A'..='Z' | 'a'..='z'));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'x'.is_ascii_alphabetic()`\n \n error: manual check for common ascii range\n-  --> $DIR/manual_is_ascii_check.rs:44:23\n+  --> $DIR/manual_is_ascii_check.rs:41:23\n    |\n LL |     const FOO: bool = matches!('x', '0'..='9');\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'x'.is_ascii_digit()`"}, {"sha": "4cdc0546a7446ab6176a759ed867d6048ccb0bad", "filename": "tests/ui/manual_rem_euclid.fixed", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_rem_euclid.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_rem_euclid.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_rem_euclid.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,7 +1,6 @@\n // run-rustfix\n // aux-build:macro_rules.rs\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::manual_rem_euclid)]\n \n #[macro_use]\n@@ -55,31 +54,27 @@ pub const fn const_rem_euclid_4(num: i32) -> i32 {\n     num.rem_euclid(4)\n }\n \n+#[clippy::msrv = \"1.37\"]\n pub fn msrv_1_37() {\n-    #![clippy::msrv = \"1.37\"]\n-\n     let x: i32 = 10;\n     let _: i32 = ((x % 4) + 4) % 4;\n }\n \n+#[clippy::msrv = \"1.38\"]\n pub fn msrv_1_38() {\n-    #![clippy::msrv = \"1.38\"]\n-\n     let x: i32 = 10;\n     let _: i32 = x.rem_euclid(4);\n }\n \n // For const fns:\n+#[clippy::msrv = \"1.51\"]\n pub const fn msrv_1_51() {\n-    #![clippy::msrv = \"1.51\"]\n-\n     let x: i32 = 10;\n     let _: i32 = ((x % 4) + 4) % 4;\n }\n \n+#[clippy::msrv = \"1.52\"]\n pub const fn msrv_1_52() {\n-    #![clippy::msrv = \"1.52\"]\n-\n     let x: i32 = 10;\n     let _: i32 = x.rem_euclid(4);\n }"}, {"sha": "58a9e20f38b1375c3fba248fa4b0321af34e8270", "filename": "tests/ui/manual_rem_euclid.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_rem_euclid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_rem_euclid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_rem_euclid.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,7 +1,6 @@\n // run-rustfix\n // aux-build:macro_rules.rs\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::manual_rem_euclid)]\n \n #[macro_use]\n@@ -55,31 +54,27 @@ pub const fn const_rem_euclid_4(num: i32) -> i32 {\n     ((num % 4) + 4) % 4\n }\n \n+#[clippy::msrv = \"1.37\"]\n pub fn msrv_1_37() {\n-    #![clippy::msrv = \"1.37\"]\n-\n     let x: i32 = 10;\n     let _: i32 = ((x % 4) + 4) % 4;\n }\n \n+#[clippy::msrv = \"1.38\"]\n pub fn msrv_1_38() {\n-    #![clippy::msrv = \"1.38\"]\n-\n     let x: i32 = 10;\n     let _: i32 = ((x % 4) + 4) % 4;\n }\n \n // For const fns:\n+#[clippy::msrv = \"1.51\"]\n pub const fn msrv_1_51() {\n-    #![clippy::msrv = \"1.51\"]\n-\n     let x: i32 = 10;\n     let _: i32 = ((x % 4) + 4) % 4;\n }\n \n+#[clippy::msrv = \"1.52\"]\n pub const fn msrv_1_52() {\n-    #![clippy::msrv = \"1.52\"]\n-\n     let x: i32 = 10;\n     let _: i32 = ((x % 4) + 4) % 4;\n }"}, {"sha": "e3122a588b64d1d4a2d204eadcc06223c009a27b", "filename": "tests/ui/manual_rem_euclid.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_rem_euclid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_rem_euclid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_rem_euclid.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,37 +1,37 @@\n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:20:18\n+  --> $DIR/manual_rem_euclid.rs:19:18\n    |\n LL |     let _: i32 = ((value % 4) + 4) % 4;\n    |                  ^^^^^^^^^^^^^^^^^^^^^ help: consider using: `value.rem_euclid(4)`\n    |\n    = note: `-D clippy::manual-rem-euclid` implied by `-D warnings`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:21:18\n+  --> $DIR/manual_rem_euclid.rs:20:18\n    |\n LL |     let _: i32 = (4 + (value % 4)) % 4;\n    |                  ^^^^^^^^^^^^^^^^^^^^^ help: consider using: `value.rem_euclid(4)`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:22:18\n+  --> $DIR/manual_rem_euclid.rs:21:18\n    |\n LL |     let _: i32 = (value % 4 + 4) % 4;\n    |                  ^^^^^^^^^^^^^^^^^^^ help: consider using: `value.rem_euclid(4)`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:23:18\n+  --> $DIR/manual_rem_euclid.rs:22:18\n    |\n LL |     let _: i32 = (4 + value % 4) % 4;\n    |                  ^^^^^^^^^^^^^^^^^^^ help: consider using: `value.rem_euclid(4)`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:24:22\n+  --> $DIR/manual_rem_euclid.rs:23:22\n    |\n LL |     let _: i32 = 1 + (4 + value % 4) % 4;\n    |                      ^^^^^^^^^^^^^^^^^^^ help: consider using: `value.rem_euclid(4)`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:13:22\n+  --> $DIR/manual_rem_euclid.rs:12:22\n    |\n LL |         let _: i32 = ((value % 4) + 4) % 4;\n    |                      ^^^^^^^^^^^^^^^^^^^^^ help: consider using: `value.rem_euclid(4)`\n@@ -42,25 +42,25 @@ LL |     internal_rem_euclid!();\n    = note: this error originates in the macro `internal_rem_euclid` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:50:5\n+  --> $DIR/manual_rem_euclid.rs:49:5\n    |\n LL |     ((num % 4) + 4) % 4\n    |     ^^^^^^^^^^^^^^^^^^^ help: consider using: `num.rem_euclid(4)`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:55:5\n+  --> $DIR/manual_rem_euclid.rs:54:5\n    |\n LL |     ((num % 4) + 4) % 4\n    |     ^^^^^^^^^^^^^^^^^^^ help: consider using: `num.rem_euclid(4)`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:69:18\n+  --> $DIR/manual_rem_euclid.rs:66:18\n    |\n LL |     let _: i32 = ((x % 4) + 4) % 4;\n    |                  ^^^^^^^^^^^^^^^^^ help: consider using: `x.rem_euclid(4)`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:84:18\n+  --> $DIR/manual_rem_euclid.rs:79:18\n    |\n LL |     let _: i32 = ((x % 4) + 4) % 4;\n    |                  ^^^^^^^^^^^^^^^^^ help: consider using: `x.rem_euclid(4)`"}, {"sha": "e5ae3cf3e5033295b16936b7f71fac65269834f7", "filename": "tests/ui/manual_retain.fixed", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_retain.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_retain.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_retain.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-#![feature(custom_inner_attributes)]\n #![warn(clippy::manual_retain)]\n #![allow(unused)]\n use std::collections::BTreeMap;\n@@ -216,23 +215,23 @@ fn vec_deque_retain() {\n     bar = foobar.into_iter().filter(|x| x % 2 == 0).collect();\n }\n \n+#[clippy::msrv = \"1.52\"]\n fn _msrv_153() {\n-    #![clippy::msrv = \"1.52\"]\n     let mut btree_map: BTreeMap<i8, i8> = (0..8).map(|x| (x, x * 10)).collect();\n     btree_map = btree_map.into_iter().filter(|(k, _)| k % 2 == 0).collect();\n \n     let mut btree_set = BTreeSet::from([1, 2, 3, 4, 5, 6]);\n     btree_set = btree_set.iter().filter(|&x| x % 2 == 0).copied().collect();\n }\n \n+#[clippy::msrv = \"1.25\"]\n fn _msrv_126() {\n-    #![clippy::msrv = \"1.25\"]\n     let mut s = String::from(\"foobar\");\n     s = s.chars().filter(|&c| c != 'o').to_owned().collect();\n }\n \n+#[clippy::msrv = \"1.17\"]\n fn _msrv_118() {\n-    #![clippy::msrv = \"1.17\"]\n     let mut hash_set = HashSet::from([1, 2, 3, 4, 5, 6]);\n     hash_set = hash_set.into_iter().filter(|x| x % 2 == 0).collect();\n     let mut hash_map: HashMap<i8, i8> = (0..8).map(|x| (x, x * 10)).collect();"}, {"sha": "1021f15edd1ea9c579aa8ceff38c17f12eb22414", "filename": "tests/ui/manual_retain.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_retain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_retain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_retain.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-#![feature(custom_inner_attributes)]\n #![warn(clippy::manual_retain)]\n #![allow(unused)]\n use std::collections::BTreeMap;\n@@ -222,23 +221,23 @@ fn vec_deque_retain() {\n     bar = foobar.into_iter().filter(|x| x % 2 == 0).collect();\n }\n \n+#[clippy::msrv = \"1.52\"]\n fn _msrv_153() {\n-    #![clippy::msrv = \"1.52\"]\n     let mut btree_map: BTreeMap<i8, i8> = (0..8).map(|x| (x, x * 10)).collect();\n     btree_map = btree_map.into_iter().filter(|(k, _)| k % 2 == 0).collect();\n \n     let mut btree_set = BTreeSet::from([1, 2, 3, 4, 5, 6]);\n     btree_set = btree_set.iter().filter(|&x| x % 2 == 0).copied().collect();\n }\n \n+#[clippy::msrv = \"1.25\"]\n fn _msrv_126() {\n-    #![clippy::msrv = \"1.25\"]\n     let mut s = String::from(\"foobar\");\n     s = s.chars().filter(|&c| c != 'o').to_owned().collect();\n }\n \n+#[clippy::msrv = \"1.17\"]\n fn _msrv_118() {\n-    #![clippy::msrv = \"1.17\"]\n     let mut hash_set = HashSet::from([1, 2, 3, 4, 5, 6]);\n     hash_set = hash_set.into_iter().filter(|x| x % 2 == 0).collect();\n     let mut hash_map: HashMap<i8, i8> = (0..8).map(|x| (x, x * 10)).collect();"}, {"sha": "89316ce1d99818d83c236178381da84272d8d8f8", "filename": "tests/ui/manual_retain.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_retain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_retain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_retain.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,19 +1,19 @@\n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:52:5\n+  --> $DIR/manual_retain.rs:51:5\n    |\n LL |     btree_map = btree_map.into_iter().filter(|(k, _)| k % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_map.retain(|k, _| k % 2 == 0)`\n    |\n    = note: `-D clippy::manual-retain` implied by `-D warnings`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:53:5\n+  --> $DIR/manual_retain.rs:52:5\n    |\n LL |     btree_map = btree_map.into_iter().filter(|(_, v)| v % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_map.retain(|_, &mut v| v % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:54:5\n+  --> $DIR/manual_retain.rs:53:5\n    |\n LL | /     btree_map = btree_map\n LL | |         .into_iter()\n@@ -22,37 +22,37 @@ LL | |         .collect();\n    | |__________________^ help: consider calling `.retain()` instead: `btree_map.retain(|k, &mut v| (k % 2 == 0) && (v % 2 == 0))`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:76:5\n+  --> $DIR/manual_retain.rs:75:5\n    |\n LL |     btree_set = btree_set.iter().filter(|&x| x % 2 == 0).copied().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_set.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:77:5\n+  --> $DIR/manual_retain.rs:76:5\n    |\n LL |     btree_set = btree_set.iter().filter(|&x| x % 2 == 0).cloned().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_set.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:78:5\n+  --> $DIR/manual_retain.rs:77:5\n    |\n LL |     btree_set = btree_set.into_iter().filter(|x| x % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_set.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:108:5\n+  --> $DIR/manual_retain.rs:107:5\n    |\n LL |     hash_map = hash_map.into_iter().filter(|(k, _)| k % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_map.retain(|k, _| k % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:109:5\n+  --> $DIR/manual_retain.rs:108:5\n    |\n LL |     hash_map = hash_map.into_iter().filter(|(_, v)| v % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_map.retain(|_, &mut v| v % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:110:5\n+  --> $DIR/manual_retain.rs:109:5\n    |\n LL | /     hash_map = hash_map\n LL | |         .into_iter()\n@@ -61,61 +61,61 @@ LL | |         .collect();\n    | |__________________^ help: consider calling `.retain()` instead: `hash_map.retain(|k, &mut v| (k % 2 == 0) && (v % 2 == 0))`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:131:5\n+  --> $DIR/manual_retain.rs:130:5\n    |\n LL |     hash_set = hash_set.into_iter().filter(|x| x % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_set.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:132:5\n+  --> $DIR/manual_retain.rs:131:5\n    |\n LL |     hash_set = hash_set.iter().filter(|&x| x % 2 == 0).copied().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_set.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:133:5\n+  --> $DIR/manual_retain.rs:132:5\n    |\n LL |     hash_set = hash_set.iter().filter(|&x| x % 2 == 0).cloned().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_set.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:162:5\n+  --> $DIR/manual_retain.rs:161:5\n    |\n LL |     s = s.chars().filter(|&c| c != 'o').to_owned().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `s.retain(|c| c != 'o')`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:174:5\n+  --> $DIR/manual_retain.rs:173:5\n    |\n LL |     vec = vec.iter().filter(|&x| x % 2 == 0).copied().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:175:5\n+  --> $DIR/manual_retain.rs:174:5\n    |\n LL |     vec = vec.iter().filter(|&x| x % 2 == 0).cloned().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:176:5\n+  --> $DIR/manual_retain.rs:175:5\n    |\n LL |     vec = vec.into_iter().filter(|x| x % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:198:5\n+  --> $DIR/manual_retain.rs:197:5\n    |\n LL |     vec_deque = vec_deque.iter().filter(|&x| x % 2 == 0).copied().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec_deque.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:199:5\n+  --> $DIR/manual_retain.rs:198:5\n    |\n LL |     vec_deque = vec_deque.iter().filter(|&x| x % 2 == 0).cloned().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec_deque.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/manual_retain.rs:200:5\n+  --> $DIR/manual_retain.rs:199:5\n    |\n LL |     vec_deque = vec_deque.into_iter().filter(|x| x % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec_deque.retain(|x| x % 2 == 0)`"}, {"sha": "50b02019cc274f67c33d571a402c7e889f868b08", "filename": "tests/ui/manual_split_once.fixed", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_split_once.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_split_once.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_split_once.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::manual_split_once)]\n #![allow(unused, clippy::iter_skip_next, clippy::iter_nth_zero)]\n \n@@ -127,8 +126,8 @@ fn indirect() -> Option<()> {\n     None\n }\n \n+#[clippy::msrv = \"1.51\"]\n fn _msrv_1_51() {\n-    #![clippy::msrv = \"1.51\"]\n     // `str::split_once` was stabilized in 1.52. Do not lint this\n     let _ = \"key=value\".splitn(2, '=').nth(1).unwrap();\n \n@@ -137,8 +136,8 @@ fn _msrv_1_51() {\n     let b = iter.next().unwrap();\n }\n \n+#[clippy::msrv = \"1.52\"]\n fn _msrv_1_52() {\n-    #![clippy::msrv = \"1.52\"]\n     let _ = \"key=value\".split_once('=').unwrap().1;\n \n     let (a, b) = \"a.b.c\".split_once('.').unwrap();"}, {"sha": "e1e8b71a9deff62a3b716b033e777402a732d0e9", "filename": "tests/ui/manual_split_once.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_split_once.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_split_once.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_split_once.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::manual_split_once)]\n #![allow(unused, clippy::iter_skip_next, clippy::iter_nth_zero)]\n \n@@ -127,8 +126,8 @@ fn indirect() -> Option<()> {\n     None\n }\n \n+#[clippy::msrv = \"1.51\"]\n fn _msrv_1_51() {\n-    #![clippy::msrv = \"1.51\"]\n     // `str::split_once` was stabilized in 1.52. Do not lint this\n     let _ = \"key=value\".splitn(2, '=').nth(1).unwrap();\n \n@@ -137,8 +136,8 @@ fn _msrv_1_51() {\n     let b = iter.next().unwrap();\n }\n \n+#[clippy::msrv = \"1.52\"]\n fn _msrv_1_52() {\n-    #![clippy::msrv = \"1.52\"]\n     let _ = \"key=value\".splitn(2, '=').nth(1).unwrap();\n \n     let mut iter = \"a.b.c\".splitn(2, '.');"}, {"sha": "78da5a16cc52b69366ad355a359c6e1d587594fe", "filename": "tests/ui/manual_split_once.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_split_once.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_split_once.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_split_once.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,85 +1,85 @@\n error: manual implementation of `split_once`\n-  --> $DIR/manual_split_once.rs:14:13\n+  --> $DIR/manual_split_once.rs:13:13\n    |\n LL |     let _ = \"key=value\".splitn(2, '=').nth(1).unwrap();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `\"key=value\".split_once('=').unwrap().1`\n    |\n    = note: `-D clippy::manual-split-once` implied by `-D warnings`\n \n error: manual implementation of `split_once`\n-  --> $DIR/manual_split_once.rs:15:13\n+  --> $DIR/manual_split_once.rs:14:13\n    |\n LL |     let _ = \"key=value\".splitn(2, '=').skip(1).next().unwrap();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `\"key=value\".split_once('=').unwrap().1`\n \n error: manual implementation of `split_once`\n-  --> $DIR/manual_split_once.rs:16:18\n+  --> $DIR/manual_split_once.rs:15:18\n    |\n LL |     let (_, _) = \"key=value\".splitn(2, '=').next_tuple().unwrap();\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `\"key=value\".split_once('=')`\n \n error: manual implementation of `split_once`\n-  --> $DIR/manual_split_once.rs:19:13\n+  --> $DIR/manual_split_once.rs:18:13\n    |\n LL |     let _ = s.splitn(2, '=').nth(1).unwrap();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.split_once('=').unwrap().1`\n \n error: manual implementation of `split_once`\n-  --> $DIR/manual_split_once.rs:22:13\n+  --> $DIR/manual_split_once.rs:21:13\n    |\n LL |     let _ = s.splitn(2, '=').nth(1).unwrap();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.split_once('=').unwrap().1`\n \n error: manual implementation of `split_once`\n-  --> $DIR/manual_split_once.rs:25:13\n+  --> $DIR/manual_split_once.rs:24:13\n    |\n LL |     let _ = s.splitn(2, '=').skip(1).next().unwrap();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.split_once('=').unwrap().1`\n \n error: manual implementation of `split_once`\n-  --> $DIR/manual_split_once.rs:28:17\n+  --> $DIR/manual_split_once.rs:27:17\n    |\n LL |         let _ = s.splitn(2, '=').nth(1)?;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.split_once('=')?.1`\n \n error: manual implementation of `split_once`\n-  --> $DIR/manual_split_once.rs:29:17\n+  --> $DIR/manual_split_once.rs:28:17\n    |\n LL |         let _ = s.splitn(2, '=').skip(1).next()?;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.split_once('=')?.1`\n \n error: manual implementation of `rsplit_once`\n-  --> $DIR/manual_split_once.rs:30:17\n+  --> $DIR/manual_split_once.rs:29:17\n    |\n LL |         let _ = s.rsplitn(2, '=').nth(1)?;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.rsplit_once('=')?.0`\n \n error: manual implementation of `rsplit_once`\n-  --> $DIR/manual_split_once.rs:31:17\n+  --> $DIR/manual_split_once.rs:30:17\n    |\n LL |         let _ = s.rsplitn(2, '=').skip(1).next()?;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.rsplit_once('=')?.0`\n \n error: manual implementation of `rsplit_once`\n-  --> $DIR/manual_split_once.rs:39:13\n+  --> $DIR/manual_split_once.rs:38:13\n    |\n LL |     let _ = \"key=value\".rsplitn(2, '=').nth(1).unwrap();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `\"key=value\".rsplit_once('=').unwrap().0`\n \n error: manual implementation of `rsplit_once`\n-  --> $DIR/manual_split_once.rs:40:18\n+  --> $DIR/manual_split_once.rs:39:18\n    |\n LL |     let (_, _) = \"key=value\".rsplitn(2, '=').next_tuple().unwrap();\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `\"key=value\".rsplit_once('=').map(|(x, y)| (y, x))`\n \n error: manual implementation of `rsplit_once`\n-  --> $DIR/manual_split_once.rs:41:13\n+  --> $DIR/manual_split_once.rs:40:13\n    |\n LL |     let _ = s.rsplitn(2, '=').nth(1);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `s.rsplit_once('=').map(|x| x.0)`\n \n error: manual implementation of `split_once`\n-  --> $DIR/manual_split_once.rs:45:5\n+  --> $DIR/manual_split_once.rs:44:5\n    |\n LL |     let mut iter = \"a.b.c\".splitn(2, '.');\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -104,7 +104,7 @@ LL +\n    |\n \n error: manual implementation of `split_once`\n-  --> $DIR/manual_split_once.rs:49:5\n+  --> $DIR/manual_split_once.rs:48:5\n    |\n LL |     let mut iter = \"a.b.c\".splitn(2, '.');\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -129,7 +129,7 @@ LL +\n    |\n \n error: manual implementation of `rsplit_once`\n-  --> $DIR/manual_split_once.rs:53:5\n+  --> $DIR/manual_split_once.rs:52:5\n    |\n LL |     let mut iter = \"a.b.c\".rsplitn(2, '.');\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -154,7 +154,7 @@ LL +\n    |\n \n error: manual implementation of `rsplit_once`\n-  --> $DIR/manual_split_once.rs:57:5\n+  --> $DIR/manual_split_once.rs:56:5\n    |\n LL |     let mut iter = \"a.b.c\".rsplitn(2, '.');\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -179,13 +179,13 @@ LL +\n    |\n \n error: manual implementation of `split_once`\n-  --> $DIR/manual_split_once.rs:142:13\n+  --> $DIR/manual_split_once.rs:141:13\n    |\n LL |     let _ = \"key=value\".splitn(2, '=').nth(1).unwrap();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `\"key=value\".split_once('=').unwrap().1`\n \n error: manual implementation of `split_once`\n-  --> $DIR/manual_split_once.rs:144:5\n+  --> $DIR/manual_split_once.rs:143:5\n    |\n LL |     let mut iter = \"a.b.c\".splitn(2, '.');\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "3d56f2a0dedb2deefbc3676374964f9bd3d3bb1d", "filename": "tests/ui/manual_str_repeat.fixed", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_str_repeat.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_str_repeat.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_str_repeat.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::manual_str_repeat)]\n \n use std::borrow::Cow;\n@@ -54,13 +53,13 @@ fn main() {\n     let _: String = repeat(x).take(count).collect();\n }\n \n+#[clippy::msrv = \"1.15\"]\n fn _msrv_1_15() {\n-    #![clippy::msrv = \"1.15\"]\n     // `str::repeat` was stabilized in 1.16. Do not lint this\n     let _: String = std::iter::repeat(\"test\").take(10).collect();\n }\n \n+#[clippy::msrv = \"1.16\"]\n fn _msrv_1_16() {\n-    #![clippy::msrv = \"1.16\"]\n     let _: String = \"test\".repeat(10);\n }"}, {"sha": "e8240a949dbc248c4b2ad11dd2a67a42204a01d7", "filename": "tests/ui/manual_str_repeat.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_str_repeat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_str_repeat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_str_repeat.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::manual_str_repeat)]\n \n use std::borrow::Cow;\n@@ -54,13 +53,13 @@ fn main() {\n     let _: String = repeat(x).take(count).collect();\n }\n \n+#[clippy::msrv = \"1.15\"]\n fn _msrv_1_15() {\n-    #![clippy::msrv = \"1.15\"]\n     // `str::repeat` was stabilized in 1.16. Do not lint this\n     let _: String = std::iter::repeat(\"test\").take(10).collect();\n }\n \n+#[clippy::msrv = \"1.16\"]\n fn _msrv_1_16() {\n-    #![clippy::msrv = \"1.16\"]\n     let _: String = std::iter::repeat(\"test\").take(10).collect();\n }"}, {"sha": "bdfee7cab261e197ce9abce874836ba234448b23", "filename": "tests/ui/manual_str_repeat.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_str_repeat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_str_repeat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_str_repeat.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,61 +1,61 @@\n error: manual implementation of `str::repeat` using iterators\n-  --> $DIR/manual_str_repeat.rs:10:21\n+  --> $DIR/manual_str_repeat.rs:9:21\n    |\n LL |     let _: String = std::iter::repeat(\"test\").take(10).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `\"test\".repeat(10)`\n    |\n    = note: `-D clippy::manual-str-repeat` implied by `-D warnings`\n \n error: manual implementation of `str::repeat` using iterators\n-  --> $DIR/manual_str_repeat.rs:11:21\n+  --> $DIR/manual_str_repeat.rs:10:21\n    |\n LL |     let _: String = std::iter::repeat('x').take(10).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `\"x\".repeat(10)`\n \n error: manual implementation of `str::repeat` using iterators\n-  --> $DIR/manual_str_repeat.rs:12:21\n+  --> $DIR/manual_str_repeat.rs:11:21\n    |\n LL |     let _: String = std::iter::repeat('/'').take(10).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `\"'\".repeat(10)`\n \n error: manual implementation of `str::repeat` using iterators\n-  --> $DIR/manual_str_repeat.rs:13:21\n+  --> $DIR/manual_str_repeat.rs:12:21\n    |\n LL |     let _: String = std::iter::repeat('\"').take(10).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `\"/\"\".repeat(10)`\n \n error: manual implementation of `str::repeat` using iterators\n-  --> $DIR/manual_str_repeat.rs:17:13\n+  --> $DIR/manual_str_repeat.rs:16:13\n    |\n LL |     let _ = repeat(x).take(count + 2).collect::<String>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `x.repeat(count + 2)`\n \n error: manual implementation of `str::repeat` using iterators\n-  --> $DIR/manual_str_repeat.rs:26:21\n+  --> $DIR/manual_str_repeat.rs:25:21\n    |\n LL |     let _: String = repeat(*x).take(count).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `(*x).repeat(count)`\n \n error: manual implementation of `str::repeat` using iterators\n-  --> $DIR/manual_str_repeat.rs:35:21\n+  --> $DIR/manual_str_repeat.rs:34:21\n    |\n LL |     let _: String = repeat(x).take(count).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `x.repeat(count)`\n \n error: manual implementation of `str::repeat` using iterators\n-  --> $DIR/manual_str_repeat.rs:47:21\n+  --> $DIR/manual_str_repeat.rs:46:21\n    |\n LL |     let _: String = repeat(Cow::Borrowed(\"test\")).take(count).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `Cow::Borrowed(\"test\").repeat(count)`\n \n error: manual implementation of `str::repeat` using iterators\n-  --> $DIR/manual_str_repeat.rs:50:21\n+  --> $DIR/manual_str_repeat.rs:49:21\n    |\n LL |     let _: String = repeat(x).take(count).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `x.repeat(count)`\n \n error: manual implementation of `str::repeat` using iterators\n-  --> $DIR/manual_str_repeat.rs:65:21\n+  --> $DIR/manual_str_repeat.rs:64:21\n    |\n LL |     let _: String = std::iter::repeat(\"test\").take(10).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `\"test\".repeat(10)`"}, {"sha": "b0b1c262aeed846f9bb6e105014cf575d4eaa5eb", "filename": "tests/ui/manual_strip.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_strip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_strip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_strip.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,4 +1,3 @@\n-#![feature(custom_inner_attributes)]\n #![warn(clippy::manual_strip)]\n \n fn main() {\n@@ -66,18 +65,16 @@ fn main() {\n     }\n }\n \n+#[clippy::msrv = \"1.44\"]\n fn msrv_1_44() {\n-    #![clippy::msrv = \"1.44\"]\n-\n     let s = \"abc\";\n     if s.starts_with('a') {\n         s[1..].to_string();\n     }\n }\n \n+#[clippy::msrv = \"1.45\"]\n fn msrv_1_45() {\n-    #![clippy::msrv = \"1.45\"]\n-\n     let s = \"abc\";\n     if s.starts_with('a') {\n         s[1..].to_string();"}, {"sha": "f592e898fc928d7e7d8b8c05f263cd6e8af401b3", "filename": "tests/ui/manual_strip.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_strip.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmanual_strip.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_strip.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,11 +1,11 @@\n error: stripping a prefix manually\n-  --> $DIR/manual_strip.rs:8:24\n+  --> $DIR/manual_strip.rs:7:24\n    |\n LL |         str::to_string(&s[\"ab\".len()..]);\n    |                        ^^^^^^^^^^^^^^^^\n    |\n note: the prefix was tested here\n-  --> $DIR/manual_strip.rs:7:5\n+  --> $DIR/manual_strip.rs:6:5\n    |\n LL |     if s.starts_with(\"ab\") {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -21,13 +21,13 @@ LL ~         <stripped>.to_string();\n    |\n \n error: stripping a suffix manually\n-  --> $DIR/manual_strip.rs:16:24\n+  --> $DIR/manual_strip.rs:15:24\n    |\n LL |         str::to_string(&s[..s.len() - \"bc\".len()]);\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: the suffix was tested here\n-  --> $DIR/manual_strip.rs:15:5\n+  --> $DIR/manual_strip.rs:14:5\n    |\n LL |     if s.ends_with(\"bc\") {\n    |     ^^^^^^^^^^^^^^^^^^^^^\n@@ -42,13 +42,13 @@ LL ~         <stripped>.to_string();\n    |\n \n error: stripping a prefix manually\n-  --> $DIR/manual_strip.rs:25:24\n+  --> $DIR/manual_strip.rs:24:24\n    |\n LL |         str::to_string(&s[1..]);\n    |                        ^^^^^^^\n    |\n note: the prefix was tested here\n-  --> $DIR/manual_strip.rs:24:5\n+  --> $DIR/manual_strip.rs:23:5\n    |\n LL |     if s.starts_with('a') {\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n@@ -60,13 +60,13 @@ LL ~         <stripped>.to_string();\n    |\n \n error: stripping a prefix manually\n-  --> $DIR/manual_strip.rs:32:24\n+  --> $DIR/manual_strip.rs:31:24\n    |\n LL |         str::to_string(&s[prefix.len()..]);\n    |                        ^^^^^^^^^^^^^^^^^^\n    |\n note: the prefix was tested here\n-  --> $DIR/manual_strip.rs:31:5\n+  --> $DIR/manual_strip.rs:30:5\n    |\n LL |     if s.starts_with(prefix) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -77,13 +77,13 @@ LL ~         str::to_string(<stripped>);\n    |\n \n error: stripping a prefix manually\n-  --> $DIR/manual_strip.rs:38:24\n+  --> $DIR/manual_strip.rs:37:24\n    |\n LL |         str::to_string(&s[PREFIX.len()..]);\n    |                        ^^^^^^^^^^^^^^^^^^\n    |\n note: the prefix was tested here\n-  --> $DIR/manual_strip.rs:37:5\n+  --> $DIR/manual_strip.rs:36:5\n    |\n LL |     if s.starts_with(PREFIX) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -95,13 +95,13 @@ LL ~         str::to_string(<stripped>);\n    |\n \n error: stripping a prefix manually\n-  --> $DIR/manual_strip.rs:45:24\n+  --> $DIR/manual_strip.rs:44:24\n    |\n LL |         str::to_string(&TARGET[prefix.len()..]);\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: the prefix was tested here\n-  --> $DIR/manual_strip.rs:44:5\n+  --> $DIR/manual_strip.rs:43:5\n    |\n LL |     if TARGET.starts_with(prefix) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -112,13 +112,13 @@ LL ~         str::to_string(<stripped>);\n    |\n \n error: stripping a prefix manually\n-  --> $DIR/manual_strip.rs:51:9\n+  --> $DIR/manual_strip.rs:50:9\n    |\n LL |         s1[2..].to_uppercase();\n    |         ^^^^^^^\n    |\n note: the prefix was tested here\n-  --> $DIR/manual_strip.rs:50:5\n+  --> $DIR/manual_strip.rs:49:5\n    |\n LL |     if s1.starts_with(\"ab\") {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -129,13 +129,13 @@ LL ~         <stripped>.to_uppercase();\n    |\n \n error: stripping a prefix manually\n-  --> $DIR/manual_strip.rs:83:9\n+  --> $DIR/manual_strip.rs:80:9\n    |\n LL |         s[1..].to_string();\n    |         ^^^^^^\n    |\n note: the prefix was tested here\n-  --> $DIR/manual_strip.rs:82:5\n+  --> $DIR/manual_strip.rs:79:5\n    |\n LL |     if s.starts_with('a') {\n    |     ^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "32631024ca5dca840d75fecb7487f7aceca29642", "filename": "tests/ui/map_unwrap_or.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmap_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmap_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_unwrap_or.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // aux-build:option_helpers.rs\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::map_unwrap_or)]\n #![allow(clippy::uninlined_format_args, clippy::unnecessary_lazy_evaluations)]\n \n@@ -82,17 +81,15 @@ fn main() {\n     result_methods();\n }\n \n+#[clippy::msrv = \"1.40\"]\n fn msrv_1_40() {\n-    #![clippy::msrv = \"1.40\"]\n-\n     let res: Result<i32, ()> = Ok(1);\n \n     let _ = res.map(|x| x + 1).unwrap_or_else(|_e| 0);\n }\n \n+#[clippy::msrv = \"1.41\"]\n fn msrv_1_41() {\n-    #![clippy::msrv = \"1.41\"]\n-\n     let res: Result<i32, ()> = Ok(1);\n \n     let _ = res.map(|x| x + 1).unwrap_or_else(|_e| 0);"}, {"sha": "41781b050fa20a5df494c0625c2c73608d8d42d8", "filename": "tests/ui/map_unwrap_or.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmap_unwrap_or.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmap_unwrap_or.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_unwrap_or.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,5 @@\n error: called `map(<f>).unwrap_or(<a>)` on an `Option` value. This can be done more directly by calling `map_or(<a>, <f>)` instead\n-  --> $DIR/map_unwrap_or.rs:18:13\n+  --> $DIR/map_unwrap_or.rs:17:13\n    |\n LL |       let _ = opt.map(|x| x + 1)\n    |  _____________^\n@@ -15,7 +15,7 @@ LL +     let _ = opt.map_or(0, |x| x + 1);\n    |\n \n error: called `map(<f>).unwrap_or(<a>)` on an `Option` value. This can be done more directly by calling `map_or(<a>, <f>)` instead\n-  --> $DIR/map_unwrap_or.rs:22:13\n+  --> $DIR/map_unwrap_or.rs:21:13\n    |\n LL |       let _ = opt.map(|x| {\n    |  _____________^\n@@ -33,7 +33,7 @@ LL ~     );\n    |\n \n error: called `map(<f>).unwrap_or(<a>)` on an `Option` value. This can be done more directly by calling `map_or(<a>, <f>)` instead\n-  --> $DIR/map_unwrap_or.rs:26:13\n+  --> $DIR/map_unwrap_or.rs:25:13\n    |\n LL |       let _ = opt.map(|x| x + 1)\n    |  _____________^\n@@ -50,7 +50,7 @@ LL ~         }, |x| x + 1);\n    |\n \n error: called `map(<f>).unwrap_or(None)` on an `Option` value. This can be done more directly by calling `and_then(<f>)` instead\n-  --> $DIR/map_unwrap_or.rs:31:13\n+  --> $DIR/map_unwrap_or.rs:30:13\n    |\n LL |     let _ = opt.map(|x| Some(x + 1)).unwrap_or(None);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -62,7 +62,7 @@ LL +     let _ = opt.and_then(|x| Some(x + 1));\n    |\n \n error: called `map(<f>).unwrap_or(None)` on an `Option` value. This can be done more directly by calling `and_then(<f>)` instead\n-  --> $DIR/map_unwrap_or.rs:33:13\n+  --> $DIR/map_unwrap_or.rs:32:13\n    |\n LL |       let _ = opt.map(|x| {\n    |  _____________^\n@@ -80,7 +80,7 @@ LL ~     );\n    |\n \n error: called `map(<f>).unwrap_or(None)` on an `Option` value. This can be done more directly by calling `and_then(<f>)` instead\n-  --> $DIR/map_unwrap_or.rs:37:13\n+  --> $DIR/map_unwrap_or.rs:36:13\n    |\n LL |       let _ = opt\n    |  _____________^\n@@ -95,7 +95,7 @@ LL +         .and_then(|x| Some(x + 1));\n    |\n \n error: called `map(<f>).unwrap_or(<a>)` on an `Option` value. This can be done more directly by calling `map_or(<a>, <f>)` instead\n-  --> $DIR/map_unwrap_or.rs:48:13\n+  --> $DIR/map_unwrap_or.rs:47:13\n    |\n LL |     let _ = Some(\"prefix\").map(|p| format!(\"{}.\", p)).unwrap_or(id);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -107,7 +107,7 @@ LL +     let _ = Some(\"prefix\").map_or(id, |p| format!(\"{}.\", p));\n    |\n \n error: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value. This can be done more directly by calling `map_or_else(<g>, <f>)` instead\n-  --> $DIR/map_unwrap_or.rs:52:13\n+  --> $DIR/map_unwrap_or.rs:51:13\n    |\n LL |       let _ = opt.map(|x| {\n    |  _____________^\n@@ -117,7 +117,7 @@ LL | |     ).unwrap_or_else(|| 0);\n    | |__________________________^\n \n error: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value. This can be done more directly by calling `map_or_else(<g>, <f>)` instead\n-  --> $DIR/map_unwrap_or.rs:56:13\n+  --> $DIR/map_unwrap_or.rs:55:13\n    |\n LL |       let _ = opt.map(|x| x + 1)\n    |  _____________^\n@@ -127,7 +127,7 @@ LL | |         );\n    | |_________^\n \n error: called `map(<f>).unwrap_or_else(<g>)` on a `Result` value. This can be done more directly by calling `.map_or_else(<g>, <f>)` instead\n-  --> $DIR/map_unwrap_or.rs:68:13\n+  --> $DIR/map_unwrap_or.rs:67:13\n    |\n LL |       let _ = res.map(|x| {\n    |  _____________^\n@@ -137,7 +137,7 @@ LL | |     ).unwrap_or_else(|_e| 0);\n    | |____________________________^\n \n error: called `map(<f>).unwrap_or_else(<g>)` on a `Result` value. This can be done more directly by calling `.map_or_else(<g>, <f>)` instead\n-  --> $DIR/map_unwrap_or.rs:72:13\n+  --> $DIR/map_unwrap_or.rs:71:13\n    |\n LL |       let _ = res.map(|x| x + 1)\n    |  _____________^\n@@ -147,7 +147,7 @@ LL | |         });\n    | |__________^\n \n error: called `map(<f>).unwrap_or_else(<g>)` on a `Result` value. This can be done more directly by calling `.map_or_else(<g>, <f>)` instead\n-  --> $DIR/map_unwrap_or.rs:98:13\n+  --> $DIR/map_unwrap_or.rs:95:13\n    |\n LL |     let _ = res.map(|x| x + 1).unwrap_or_else(|_e| 0);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `res.map_or_else(|_e| 0, |x| x + 1)`"}, {"sha": "55cd15bd5c3858adb81df923ac8830385a5b5c48", "filename": "tests/ui/match_expr_like_matches_macro.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmatch_expr_like_matches_macro.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmatch_expr_like_matches_macro.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_expr_like_matches_macro.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::match_like_matches_macro)]\n #![allow(\n     unreachable_patterns,\n@@ -200,17 +199,15 @@ fn main() {\n     };\n }\n \n+#[clippy::msrv = \"1.41\"]\n fn msrv_1_41() {\n-    #![clippy::msrv = \"1.41\"]\n-\n     let _y = match Some(5) {\n         Some(0) => true,\n         _ => false,\n     };\n }\n \n+#[clippy::msrv = \"1.42\"]\n fn msrv_1_42() {\n-    #![clippy::msrv = \"1.42\"]\n-\n     let _y = matches!(Some(5), Some(0));\n }"}, {"sha": "5d645e108e511859e73013037be76ffcd786e59b", "filename": "tests/ui/match_expr_like_matches_macro.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmatch_expr_like_matches_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmatch_expr_like_matches_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_expr_like_matches_macro.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::match_like_matches_macro)]\n #![allow(\n     unreachable_patterns,\n@@ -241,18 +240,16 @@ fn main() {\n     };\n }\n \n+#[clippy::msrv = \"1.41\"]\n fn msrv_1_41() {\n-    #![clippy::msrv = \"1.41\"]\n-\n     let _y = match Some(5) {\n         Some(0) => true,\n         _ => false,\n     };\n }\n \n+#[clippy::msrv = \"1.42\"]\n fn msrv_1_42() {\n-    #![clippy::msrv = \"1.42\"]\n-\n     let _y = match Some(5) {\n         Some(0) => true,\n         _ => false,"}, {"sha": "46f67ef4900f8d6d001ccd47e07748801013bfa8", "filename": "tests/ui/match_expr_like_matches_macro.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmatch_expr_like_matches_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmatch_expr_like_matches_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_expr_like_matches_macro.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,5 @@\n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:16:14\n+  --> $DIR/match_expr_like_matches_macro.rs:15:14\n    |\n LL |       let _y = match x {\n    |  ______________^\n@@ -11,7 +11,7 @@ LL | |     };\n    = note: `-D clippy::match-like-matches-macro` implied by `-D warnings`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:22:14\n+  --> $DIR/match_expr_like_matches_macro.rs:21:14\n    |\n LL |       let _w = match x {\n    |  ______________^\n@@ -21,7 +21,7 @@ LL | |     };\n    | |_____^ help: try this: `matches!(x, Some(_))`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/match_expr_like_matches_macro.rs:28:14\n+  --> $DIR/match_expr_like_matches_macro.rs:27:14\n    |\n LL |       let _z = match x {\n    |  ______________^\n@@ -33,7 +33,7 @@ LL | |     };\n    = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:34:15\n+  --> $DIR/match_expr_like_matches_macro.rs:33:15\n    |\n LL |       let _zz = match x {\n    |  _______________^\n@@ -43,13 +43,13 @@ LL | |     };\n    | |_____^ help: try this: `!matches!(x, Some(r) if r == 0)`\n \n error: if let .. else expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:40:16\n+  --> $DIR/match_expr_like_matches_macro.rs:39:16\n    |\n LL |     let _zzz = if let Some(5) = x { true } else { false };\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `matches!(x, Some(5))`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:64:20\n+  --> $DIR/match_expr_like_matches_macro.rs:63:20\n    |\n LL |           let _ans = match x {\n    |  ____________________^\n@@ -60,7 +60,7 @@ LL | |         };\n    | |_________^ help: try this: `matches!(x, E::A(_) | E::B(_))`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:74:20\n+  --> $DIR/match_expr_like_matches_macro.rs:73:20\n    |\n LL |           let _ans = match x {\n    |  ____________________^\n@@ -73,7 +73,7 @@ LL | |         };\n    | |_________^ help: try this: `matches!(x, E::A(_) | E::B(_))`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:84:20\n+  --> $DIR/match_expr_like_matches_macro.rs:83:20\n    |\n LL |           let _ans = match x {\n    |  ____________________^\n@@ -84,7 +84,7 @@ LL | |         };\n    | |_________^ help: try this: `!matches!(x, E::B(_) | E::C)`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:144:18\n+  --> $DIR/match_expr_like_matches_macro.rs:143:18\n    |\n LL |           let _z = match &z {\n    |  __________________^\n@@ -94,7 +94,7 @@ LL | |         };\n    | |_________^ help: try this: `matches!(z, Some(3))`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:153:18\n+  --> $DIR/match_expr_like_matches_macro.rs:152:18\n    |\n LL |           let _z = match &z {\n    |  __________________^\n@@ -104,7 +104,7 @@ LL | |         };\n    | |_________^ help: try this: `matches!(&z, Some(3))`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:170:21\n+  --> $DIR/match_expr_like_matches_macro.rs:169:21\n    |\n LL |               let _ = match &z {\n    |  _____________________^\n@@ -114,7 +114,7 @@ LL | |             };\n    | |_____________^ help: try this: `matches!(&z, AnEnum::X)`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:184:20\n+  --> $DIR/match_expr_like_matches_macro.rs:183:20\n    |\n LL |           let _res = match &val {\n    |  ____________________^\n@@ -124,7 +124,7 @@ LL | |         };\n    | |_________^ help: try this: `matches!(&val, &Some(ref _a))`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:196:20\n+  --> $DIR/match_expr_like_matches_macro.rs:195:20\n    |\n LL |           let _res = match &val {\n    |  ____________________^\n@@ -134,7 +134,7 @@ LL | |         };\n    | |_________^ help: try this: `matches!(&val, &Some(ref _a))`\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_expr_like_matches_macro.rs:256:14\n+  --> $DIR/match_expr_like_matches_macro.rs:253:14\n    |\n LL |       let _y = match Some(5) {\n    |  ______________^"}, {"sha": "874d558433034d217e246dd8fcf38e17f842b4bb", "filename": "tests/ui/mem_replace.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmem_replace.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmem_replace.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_replace.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(unused)]\n #![warn(\n     clippy::all,\n@@ -80,16 +79,14 @@ fn main() {\n     dont_lint_primitive();\n }\n \n+#[clippy::msrv = \"1.39\"]\n fn msrv_1_39() {\n-    #![clippy::msrv = \"1.39\"]\n-\n     let mut s = String::from(\"foo\");\n     let _ = std::mem::replace(&mut s, String::default());\n }\n \n+#[clippy::msrv = \"1.40\"]\n fn msrv_1_40() {\n-    #![clippy::msrv = \"1.40\"]\n-\n     let mut s = String::from(\"foo\");\n     let _ = std::mem::take(&mut s);\n }"}, {"sha": "f4f3bff514463e4a04a661ab372d36579e59ec0b", "filename": "tests/ui/mem_replace.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmem_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmem_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_replace.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(unused)]\n #![warn(\n     clippy::all,\n@@ -80,16 +79,14 @@ fn main() {\n     dont_lint_primitive();\n }\n \n+#[clippy::msrv = \"1.39\"]\n fn msrv_1_39() {\n-    #![clippy::msrv = \"1.39\"]\n-\n     let mut s = String::from(\"foo\");\n     let _ = std::mem::replace(&mut s, String::default());\n }\n \n+#[clippy::msrv = \"1.40\"]\n fn msrv_1_40() {\n-    #![clippy::msrv = \"1.40\"]\n-\n     let mut s = String::from(\"foo\");\n     let _ = std::mem::replace(&mut s, String::default());\n }"}, {"sha": "caa127f76eeffa8a1d92b0b75437807eb2d8bac0", "filename": "tests/ui/mem_replace.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmem_replace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmem_replace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_replace.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,123 +1,123 @@\n error: replacing an `Option` with `None`\n-  --> $DIR/mem_replace.rs:17:13\n+  --> $DIR/mem_replace.rs:16:13\n    |\n LL |     let _ = mem::replace(&mut an_option, None);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider `Option::take()` instead: `an_option.take()`\n    |\n    = note: `-D clippy::mem-replace-option-with-none` implied by `-D warnings`\n \n error: replacing an `Option` with `None`\n-  --> $DIR/mem_replace.rs:19:13\n+  --> $DIR/mem_replace.rs:18:13\n    |\n LL |     let _ = mem::replace(an_option, None);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider `Option::take()` instead: `an_option.take()`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:24:13\n+  --> $DIR/mem_replace.rs:23:13\n    |\n LL |     let _ = std::mem::replace(&mut s, String::default());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut s)`\n    |\n    = note: `-D clippy::mem-replace-with-default` implied by `-D warnings`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:27:13\n+  --> $DIR/mem_replace.rs:26:13\n    |\n LL |     let _ = std::mem::replace(s, String::default());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(s)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:28:13\n+  --> $DIR/mem_replace.rs:27:13\n    |\n LL |     let _ = std::mem::replace(s, Default::default());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(s)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:31:13\n+  --> $DIR/mem_replace.rs:30:13\n    |\n LL |     let _ = std::mem::replace(&mut v, Vec::default());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut v)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:32:13\n+  --> $DIR/mem_replace.rs:31:13\n    |\n LL |     let _ = std::mem::replace(&mut v, Default::default());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut v)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:33:13\n+  --> $DIR/mem_replace.rs:32:13\n    |\n LL |     let _ = std::mem::replace(&mut v, Vec::new());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut v)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:34:13\n+  --> $DIR/mem_replace.rs:33:13\n    |\n LL |     let _ = std::mem::replace(&mut v, vec![]);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut v)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:37:13\n+  --> $DIR/mem_replace.rs:36:13\n    |\n LL |     let _ = std::mem::replace(&mut hash_map, HashMap::new());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut hash_map)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:40:13\n+  --> $DIR/mem_replace.rs:39:13\n    |\n LL |     let _ = std::mem::replace(&mut btree_map, BTreeMap::new());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut btree_map)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:43:13\n+  --> $DIR/mem_replace.rs:42:13\n    |\n LL |     let _ = std::mem::replace(&mut vd, VecDeque::new());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut vd)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:46:13\n+  --> $DIR/mem_replace.rs:45:13\n    |\n LL |     let _ = std::mem::replace(&mut hash_set, HashSet::new());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut hash_set)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:49:13\n+  --> $DIR/mem_replace.rs:48:13\n    |\n LL |     let _ = std::mem::replace(&mut btree_set, BTreeSet::new());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut btree_set)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:52:13\n+  --> $DIR/mem_replace.rs:51:13\n    |\n LL |     let _ = std::mem::replace(&mut list, LinkedList::new());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut list)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:55:13\n+  --> $DIR/mem_replace.rs:54:13\n    |\n LL |     let _ = std::mem::replace(&mut binary_heap, BinaryHeap::new());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut binary_heap)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:58:13\n+  --> $DIR/mem_replace.rs:57:13\n    |\n LL |     let _ = std::mem::replace(&mut tuple, (vec![], BinaryHeap::new()));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut tuple)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:61:13\n+  --> $DIR/mem_replace.rs:60:13\n    |\n LL |     let _ = std::mem::replace(&mut refstr, \"\");\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut refstr)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:64:13\n+  --> $DIR/mem_replace.rs:63:13\n    |\n LL |     let _ = std::mem::replace(&mut slice, &[]);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut slice)`\n \n error: replacing a value of type `T` with `T::default()` is better expressed using `std::mem::take`\n-  --> $DIR/mem_replace.rs:94:13\n+  --> $DIR/mem_replace.rs:91:13\n    |\n LL |     let _ = std::mem::replace(&mut s, String::default());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `std::mem::take(&mut s)`"}, {"sha": "955e7eb727634134ddd9df2c9ef39c8b6692e9a4", "filename": "tests/ui/min_rust_version_attr.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmin_rust_version_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmin_rust_version_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_rust_version_attr.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -3,27 +3,37 @@\n \n fn main() {}\n \n+#[clippy::msrv = \"1.42.0\"]\n fn just_under_msrv() {\n-    #![clippy::msrv = \"1.42.0\"]\n     let log2_10 = 3.321928094887362;\n }\n \n+#[clippy::msrv = \"1.43.0\"]\n fn meets_msrv() {\n-    #![clippy::msrv = \"1.43.0\"]\n     let log2_10 = 3.321928094887362;\n }\n \n+#[clippy::msrv = \"1.44.0\"]\n fn just_above_msrv() {\n-    #![clippy::msrv = \"1.44.0\"]\n     let log2_10 = 3.321928094887362;\n }\n \n+#[clippy::msrv = \"1.42\"]\n fn no_patch_under() {\n-    #![clippy::msrv = \"1.42\"]\n     let log2_10 = 3.321928094887362;\n }\n \n+#[clippy::msrv = \"1.43\"]\n fn no_patch_meets() {\n+    let log2_10 = 3.321928094887362;\n+}\n+\n+fn inner_attr_under() {\n+    #![clippy::msrv = \"1.42\"]\n+    let log2_10 = 3.321928094887362;\n+}\n+\n+fn inner_attr_meets() {\n     #![clippy::msrv = \"1.43\"]\n     let log2_10 = 3.321928094887362;\n }"}, {"sha": "7e2135584efde60aa144b334f15ed722860406b0", "filename": "tests/ui/min_rust_version_attr.stderr", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmin_rust_version_attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmin_rust_version_attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_rust_version_attr.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -32,12 +32,20 @@ LL |     let log2_10 = 3.321928094887362;\n    = help: consider using the constant directly\n \n error: approximate value of `f{32, 64}::consts::LOG2_10` found\n-  --> $DIR/min_rust_version_attr.rs:45:27\n+  --> $DIR/min_rust_version_attr.rs:48:19\n+   |\n+LL |     let log2_10 = 3.321928094887362;\n+   |                   ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using the constant directly\n+\n+error: approximate value of `f{32, 64}::consts::LOG2_10` found\n+  --> $DIR/min_rust_version_attr.rs:55:27\n    |\n LL |             let log2_10 = 3.321928094887362;\n    |                           ^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using the constant directly\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 6 previous errors\n "}, {"sha": "675b780315251ce20f64f17b62a4ff9c1075172c", "filename": "tests/ui/min_rust_version_invalid_attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmin_rust_version_invalid_attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmin_rust_version_invalid_attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_rust_version_invalid_attr.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -4,7 +4,7 @@ error: `invalid.version` is not a valid Rust version\n LL | #![clippy::msrv = \"invalid.version\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: `msrv` cannot be an outer attribute\n+error: `invalid.version` is not a valid Rust version\n   --> $DIR/min_rust_version_invalid_attr.rs:6:1\n    |\n LL | #[clippy::msrv = \"invalid.version\"]"}, {"sha": "75cace1816754e75eb17dca1d10e1063f528ac73", "filename": "tests/ui/missing_const_for_fn/cant_be_const.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmissing_const_for_fn%2Fcant_be_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmissing_const_for_fn%2Fcant_be_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_const_for_fn%2Fcant_be_const.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -7,7 +7,6 @@\n \n #![warn(clippy::missing_const_for_fn)]\n #![feature(start)]\n-#![feature(custom_inner_attributes)]\n \n extern crate helper;\n extern crate proc_macro_with_span;\n@@ -115,9 +114,8 @@ fn unstably_const_fn() {\n     helper::unstably_const_fn()\n }\n \n+#[clippy::msrv = \"1.46.0\"]\n mod const_fn_stabilized_after_msrv {\n-    #![clippy::msrv = \"1.46.0\"]\n-\n     // Do not lint this because `u8::is_ascii_digit` is stabilized as a const function in 1.47.0.\n     fn const_fn_stabilized_after_msrv(byte: u8) {\n         byte.is_ascii_digit();"}, {"sha": "0246c8622ed3adf6b7f6c7086843b83b4049b960", "filename": "tests/ui/missing_const_for_fn/could_be_const.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n #![warn(clippy::missing_const_for_fn)]\n #![allow(incomplete_features, clippy::let_and_return)]\n-#![feature(custom_inner_attributes)]\n \n use std::mem::transmute;\n \n@@ -68,24 +67,21 @@ mod with_drop {\n     }\n }\n \n+#[clippy::msrv = \"1.47.0\"]\n mod const_fn_stabilized_before_msrv {\n-    #![clippy::msrv = \"1.47.0\"]\n-\n     // This could be const because `u8::is_ascii_digit` is a stable const function in 1.47.\n     fn const_fn_stabilized_before_msrv(byte: u8) {\n         byte.is_ascii_digit();\n     }\n }\n \n+#[clippy::msrv = \"1.45\"]\n fn msrv_1_45() -> i32 {\n-    #![clippy::msrv = \"1.45\"]\n-\n     45\n }\n \n+#[clippy::msrv = \"1.46\"]\n fn msrv_1_46() -> i32 {\n-    #![clippy::msrv = \"1.46\"]\n-\n     46\n }\n "}, {"sha": "955e1ed26340899c898c4eedcd508b384ac2c2f1", "filename": "tests/ui/missing_const_for_fn/could_be_const.stderr", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,5 @@\n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:13:5\n+  --> $DIR/could_be_const.rs:12:5\n    |\n LL | /     pub fn new() -> Self {\n LL | |         Self { guess: 42 }\n@@ -9,23 +9,23 @@ LL | |     }\n    = note: `-D clippy::missing-const-for-fn` implied by `-D warnings`\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:17:5\n+  --> $DIR/could_be_const.rs:16:5\n    |\n LL | /     fn const_generic_params<'a, T, const N: usize>(&self, b: &'a [T; N]) -> &'a [T; N] {\n LL | |         b\n LL | |     }\n    | |_____^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:23:1\n+  --> $DIR/could_be_const.rs:22:1\n    |\n LL | / fn one() -> i32 {\n LL | |     1\n LL | | }\n    | |_^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:28:1\n+  --> $DIR/could_be_const.rs:27:1\n    |\n LL | / fn two() -> i32 {\n LL | |     let abc = 2;\n@@ -34,59 +34,57 @@ LL | | }\n    | |_^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:34:1\n+  --> $DIR/could_be_const.rs:33:1\n    |\n LL | / fn string() -> String {\n LL | |     String::new()\n LL | | }\n    | |_^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:39:1\n+  --> $DIR/could_be_const.rs:38:1\n    |\n LL | / unsafe fn four() -> i32 {\n LL | |     4\n LL | | }\n    | |_^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:44:1\n+  --> $DIR/could_be_const.rs:43:1\n    |\n LL | / fn generic<T>(t: T) -> T {\n LL | |     t\n LL | | }\n    | |_^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:52:1\n+  --> $DIR/could_be_const.rs:51:1\n    |\n LL | / fn generic_arr<T: Copy>(t: [T; 1]) -> T {\n LL | |     t[0]\n LL | | }\n    | |_^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:65:9\n+  --> $DIR/could_be_const.rs:64:9\n    |\n LL | /         pub fn b(self, a: &A) -> B {\n LL | |             B\n LL | |         }\n    | |_________^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:75:5\n+  --> $DIR/could_be_const.rs:73:5\n    |\n LL | /     fn const_fn_stabilized_before_msrv(byte: u8) {\n LL | |         byte.is_ascii_digit();\n LL | |     }\n    | |_____^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:86:1\n+  --> $DIR/could_be_const.rs:84:1\n    |\n LL | / fn msrv_1_46() -> i32 {\n-LL | |     #![clippy::msrv = \"1.46\"]\n-LL | |\n LL | |     46\n LL | | }\n    | |_^"}, {"sha": "4cb7f6b687f1195c3bb429b941c8ca256f6534d3", "filename": "tests/ui/needless_borrow.fixed", "status": "modified", "additions": 7, "deletions": 26, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_borrow.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_borrow.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,13 +1,13 @@\n // run-rustfix\n-#![feature(custom_inner_attributes, lint_reasons)]\n-\n-#[warn(clippy::all, clippy::needless_borrow)]\n-#[allow(unused_variables)]\n-#[allow(\n+#![feature(lint_reasons)]\n+#![allow(\n+    unused,\n     clippy::uninlined_format_args,\n     clippy::unnecessary_mut_passed,\n     clippy::unnecessary_to_owned\n )]\n+#![warn(clippy::needless_borrow)]\n+\n fn main() {\n     let a = 5;\n     let ref_a = &a;\n@@ -171,14 +171,12 @@ impl<'a> Trait for &'a str {}\n \n fn h(_: &dyn Trait) {}\n \n-#[allow(dead_code)]\n fn check_expect_suppression() {\n     let a = 5;\n     #[expect(clippy::needless_borrow)]\n     let _ = x(&&a);\n }\n \n-#[allow(dead_code)]\n mod issue9160 {\n     pub struct S<F> {\n         f: F,\n@@ -267,7 +265,6 @@ where\n }\n \n // https://github.com/rust-lang/rust-clippy/pull/9136#pullrequestreview-1037379321\n-#[allow(dead_code)]\n mod copyable_iterator {\n     #[derive(Clone, Copy)]\n     struct Iter;\n@@ -287,25 +284,20 @@ mod copyable_iterator {\n     }\n }\n \n+#[clippy::msrv = \"1.52.0\"]\n mod under_msrv {\n-    #![allow(dead_code)]\n-    #![clippy::msrv = \"1.52.0\"]\n-\n     fn foo() {\n         let _ = std::process::Command::new(\"ls\").args(&[\"-a\", \"-l\"]).status().unwrap();\n     }\n }\n \n+#[clippy::msrv = \"1.53.0\"]\n mod meets_msrv {\n-    #![allow(dead_code)]\n-    #![clippy::msrv = \"1.53.0\"]\n-\n     fn foo() {\n         let _ = std::process::Command::new(\"ls\").args([\"-a\", \"-l\"]).status().unwrap();\n     }\n }\n \n-#[allow(unused)]\n fn issue9383() {\n     // Should not lint because unions need explicit deref when accessing field\n     use std::mem::ManuallyDrop;\n@@ -334,7 +326,6 @@ fn issue9383() {\n     }\n }\n \n-#[allow(dead_code)]\n fn closure_test() {\n     let env = \"env\".to_owned();\n     let arg = \"arg\".to_owned();\n@@ -348,7 +339,6 @@ fn closure_test() {\n     f(arg);\n }\n \n-#[allow(dead_code)]\n mod significant_drop {\n     #[derive(Debug)]\n     struct X;\n@@ -368,15 +358,13 @@ mod significant_drop {\n     fn debug(_: impl std::fmt::Debug) {}\n }\n \n-#[allow(dead_code)]\n mod used_exactly_once {\n     fn foo(x: String) {\n         use_x(x);\n     }\n     fn use_x(_: impl AsRef<str>) {}\n }\n \n-#[allow(dead_code)]\n mod used_more_than_once {\n     fn foo(x: String) {\n         use_x(&x);\n@@ -387,7 +375,6 @@ mod used_more_than_once {\n }\n \n // https://github.com/rust-lang/rust-clippy/issues/9111#issuecomment-1277114280\n-#[allow(dead_code)]\n mod issue_9111 {\n     struct A;\n \n@@ -409,7 +396,6 @@ mod issue_9111 {\n     }\n }\n \n-#[allow(dead_code)]\n mod issue_9710 {\n     fn main() {\n         let string = String::new();\n@@ -421,7 +407,6 @@ mod issue_9710 {\n     fn f<T: AsRef<str>>(_: T) {}\n }\n \n-#[allow(dead_code)]\n mod issue_9739 {\n     fn foo<D: std::fmt::Display>(_it: impl IntoIterator<Item = D>) {}\n \n@@ -434,7 +419,6 @@ mod issue_9739 {\n     }\n }\n \n-#[allow(dead_code)]\n mod issue_9739_method_variant {\n     struct S;\n \n@@ -451,7 +435,6 @@ mod issue_9739_method_variant {\n     }\n }\n \n-#[allow(dead_code)]\n mod issue_9782 {\n     fn foo<T: AsRef<[u8]>>(t: T) {\n         println!(\"{}\", std::mem::size_of::<T>());\n@@ -475,7 +458,6 @@ mod issue_9782 {\n     }\n }\n \n-#[allow(dead_code)]\n mod issue_9782_type_relative_variant {\n     struct S;\n \n@@ -493,7 +475,6 @@ mod issue_9782_type_relative_variant {\n     }\n }\n \n-#[allow(dead_code)]\n mod issue_9782_method_variant {\n     struct S;\n "}, {"sha": "9a01190ed8dbd585127276cde688afa19fd07730", "filename": "tests/ui/needless_borrow.rs", "status": "modified", "additions": 7, "deletions": 26, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,13 +1,13 @@\n // run-rustfix\n-#![feature(custom_inner_attributes, lint_reasons)]\n-\n-#[warn(clippy::all, clippy::needless_borrow)]\n-#[allow(unused_variables)]\n-#[allow(\n+#![feature(lint_reasons)]\n+#![allow(\n+    unused,\n     clippy::uninlined_format_args,\n     clippy::unnecessary_mut_passed,\n     clippy::unnecessary_to_owned\n )]\n+#![warn(clippy::needless_borrow)]\n+\n fn main() {\n     let a = 5;\n     let ref_a = &a;\n@@ -171,14 +171,12 @@ impl<'a> Trait for &'a str {}\n \n fn h(_: &dyn Trait) {}\n \n-#[allow(dead_code)]\n fn check_expect_suppression() {\n     let a = 5;\n     #[expect(clippy::needless_borrow)]\n     let _ = x(&&a);\n }\n \n-#[allow(dead_code)]\n mod issue9160 {\n     pub struct S<F> {\n         f: F,\n@@ -267,7 +265,6 @@ where\n }\n \n // https://github.com/rust-lang/rust-clippy/pull/9136#pullrequestreview-1037379321\n-#[allow(dead_code)]\n mod copyable_iterator {\n     #[derive(Clone, Copy)]\n     struct Iter;\n@@ -287,25 +284,20 @@ mod copyable_iterator {\n     }\n }\n \n+#[clippy::msrv = \"1.52.0\"]\n mod under_msrv {\n-    #![allow(dead_code)]\n-    #![clippy::msrv = \"1.52.0\"]\n-\n     fn foo() {\n         let _ = std::process::Command::new(\"ls\").args(&[\"-a\", \"-l\"]).status().unwrap();\n     }\n }\n \n+#[clippy::msrv = \"1.53.0\"]\n mod meets_msrv {\n-    #![allow(dead_code)]\n-    #![clippy::msrv = \"1.53.0\"]\n-\n     fn foo() {\n         let _ = std::process::Command::new(\"ls\").args(&[\"-a\", \"-l\"]).status().unwrap();\n     }\n }\n \n-#[allow(unused)]\n fn issue9383() {\n     // Should not lint because unions need explicit deref when accessing field\n     use std::mem::ManuallyDrop;\n@@ -334,7 +326,6 @@ fn issue9383() {\n     }\n }\n \n-#[allow(dead_code)]\n fn closure_test() {\n     let env = \"env\".to_owned();\n     let arg = \"arg\".to_owned();\n@@ -348,7 +339,6 @@ fn closure_test() {\n     f(arg);\n }\n \n-#[allow(dead_code)]\n mod significant_drop {\n     #[derive(Debug)]\n     struct X;\n@@ -368,15 +358,13 @@ mod significant_drop {\n     fn debug(_: impl std::fmt::Debug) {}\n }\n \n-#[allow(dead_code)]\n mod used_exactly_once {\n     fn foo(x: String) {\n         use_x(&x);\n     }\n     fn use_x(_: impl AsRef<str>) {}\n }\n \n-#[allow(dead_code)]\n mod used_more_than_once {\n     fn foo(x: String) {\n         use_x(&x);\n@@ -387,7 +375,6 @@ mod used_more_than_once {\n }\n \n // https://github.com/rust-lang/rust-clippy/issues/9111#issuecomment-1277114280\n-#[allow(dead_code)]\n mod issue_9111 {\n     struct A;\n \n@@ -409,7 +396,6 @@ mod issue_9111 {\n     }\n }\n \n-#[allow(dead_code)]\n mod issue_9710 {\n     fn main() {\n         let string = String::new();\n@@ -421,7 +407,6 @@ mod issue_9710 {\n     fn f<T: AsRef<str>>(_: T) {}\n }\n \n-#[allow(dead_code)]\n mod issue_9739 {\n     fn foo<D: std::fmt::Display>(_it: impl IntoIterator<Item = D>) {}\n \n@@ -434,7 +419,6 @@ mod issue_9739 {\n     }\n }\n \n-#[allow(dead_code)]\n mod issue_9739_method_variant {\n     struct S;\n \n@@ -451,7 +435,6 @@ mod issue_9739_method_variant {\n     }\n }\n \n-#[allow(dead_code)]\n mod issue_9782 {\n     fn foo<T: AsRef<[u8]>>(t: T) {\n         println!(\"{}\", std::mem::size_of::<T>());\n@@ -475,7 +458,6 @@ mod issue_9782 {\n     }\n }\n \n-#[allow(dead_code)]\n mod issue_9782_type_relative_variant {\n     struct S;\n \n@@ -493,7 +475,6 @@ mod issue_9782_type_relative_variant {\n     }\n }\n \n-#[allow(dead_code)]\n mod issue_9782_method_variant {\n     struct S;\n "}, {"sha": "d26c317124b8d18d3dc900d31c8badce92e20af1", "filename": "tests/ui/needless_borrow.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -163,55 +163,55 @@ LL |     let _ = std::fs::write(\"x\", &\"\".to_string());\n    |                                 ^^^^^^^^^^^^^^^ help: change this to: `\"\".to_string()`\n \n error: this expression borrows a value the compiler would automatically borrow\n-  --> $DIR/needless_borrow.rs:192:13\n+  --> $DIR/needless_borrow.rs:190:13\n    |\n LL |             (&self.f)()\n    |             ^^^^^^^^^ help: change this to: `(self.f)`\n \n error: this expression borrows a value the compiler would automatically borrow\n-  --> $DIR/needless_borrow.rs:201:13\n+  --> $DIR/needless_borrow.rs:199:13\n    |\n LL |             (&mut self.f)()\n    |             ^^^^^^^^^^^^^ help: change this to: `(self.f)`\n \n error: the borrowed expression implements the required traits\n-  --> $DIR/needless_borrow.rs:286:20\n+  --> $DIR/needless_borrow.rs:283:20\n    |\n LL |         takes_iter(&mut x)\n    |                    ^^^^^^ help: change this to: `x`\n \n error: the borrowed expression implements the required traits\n-  --> $DIR/needless_borrow.rs:304:55\n+  --> $DIR/needless_borrow.rs:297:55\n    |\n LL |         let _ = std::process::Command::new(\"ls\").args(&[\"-a\", \"-l\"]).status().unwrap();\n    |                                                       ^^^^^^^^^^^^^ help: change this to: `[\"-a\", \"-l\"]`\n \n error: the borrowed expression implements the required traits\n-  --> $DIR/needless_borrow.rs:344:37\n+  --> $DIR/needless_borrow.rs:335:37\n    |\n LL |         let _ = std::fs::write(\"x\", &arg);\n    |                                     ^^^^ help: change this to: `arg`\n \n error: the borrowed expression implements the required traits\n-  --> $DIR/needless_borrow.rs:345:37\n+  --> $DIR/needless_borrow.rs:336:37\n    |\n LL |         let _ = std::fs::write(\"x\", &loc);\n    |                                     ^^^^ help: change this to: `loc`\n \n error: the borrowed expression implements the required traits\n-  --> $DIR/needless_borrow.rs:364:15\n+  --> $DIR/needless_borrow.rs:354:15\n    |\n LL |         debug(&x);\n    |               ^^ help: change this to: `x`\n \n error: the borrowed expression implements the required traits\n-  --> $DIR/needless_borrow.rs:374:15\n+  --> $DIR/needless_borrow.rs:363:15\n    |\n LL |         use_x(&x);\n    |               ^^ help: change this to: `x`\n \n error: the borrowed expression implements the required traits\n-  --> $DIR/needless_borrow.rs:474:13\n+  --> $DIR/needless_borrow.rs:457:13\n    |\n LL |         foo(&a);\n    |             ^^ help: change this to: `a`"}, {"sha": "7eaca571992f46d971bea18739e3b7c50e565381", "filename": "tests/ui/needless_question_mark.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_question_mark.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_question_mark.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_question_mark.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -8,7 +8,6 @@\n     dead_code,\n     unused_must_use\n )]\n-#![feature(custom_inner_attributes)]\n \n struct TO {\n     magic: Option<usize>,"}, {"sha": "960bc7b78983f96d17d454b568f9c17eafa72aa6", "filename": "tests/ui/needless_question_mark.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_question_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_question_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_question_mark.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -8,7 +8,6 @@\n     dead_code,\n     unused_must_use\n )]\n-#![feature(custom_inner_attributes)]\n \n struct TO {\n     magic: Option<usize>,"}, {"sha": "d1f89e326c67c3ab65b1dd7e6f31eb52e0093c01", "filename": "tests/ui/needless_question_mark.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_question_mark.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_question_mark.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_question_mark.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,73 +1,73 @@\n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:23:12\n+  --> $DIR/needless_question_mark.rs:22:12\n    |\n LL |     return Some(to.magic?);\n    |            ^^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `to.magic`\n    |\n    = note: `-D clippy::needless-question-mark` implied by `-D warnings`\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:31:12\n+  --> $DIR/needless_question_mark.rs:30:12\n    |\n LL |     return Some(to.magic?)\n    |            ^^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `to.magic`\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:36:5\n+  --> $DIR/needless_question_mark.rs:35:5\n    |\n LL |     Some(to.magic?)\n    |     ^^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `to.magic`\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:41:21\n+  --> $DIR/needless_question_mark.rs:40:21\n    |\n LL |     to.and_then(|t| Some(t.magic?))\n    |                     ^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `t.magic`\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:50:9\n+  --> $DIR/needless_question_mark.rs:49:9\n    |\n LL |         Some(t.magic?)\n    |         ^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `t.magic`\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:55:12\n+  --> $DIR/needless_question_mark.rs:54:12\n    |\n LL |     return Ok(tr.magic?);\n    |            ^^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `tr.magic`\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:62:12\n+  --> $DIR/needless_question_mark.rs:61:12\n    |\n LL |     return Ok(tr.magic?)\n    |            ^^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `tr.magic`\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:66:5\n+  --> $DIR/needless_question_mark.rs:65:5\n    |\n LL |     Ok(tr.magic?)\n    |     ^^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `tr.magic`\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:70:21\n+  --> $DIR/needless_question_mark.rs:69:21\n    |\n LL |     tr.and_then(|t| Ok(t.magic?))\n    |                     ^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `t.magic`\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:78:9\n+  --> $DIR/needless_question_mark.rs:77:9\n    |\n LL |         Ok(t.magic?)\n    |         ^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `t.magic`\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:85:16\n+  --> $DIR/needless_question_mark.rs:84:16\n    |\n LL |         return Ok(t.magic?);\n    |                ^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `t.magic`\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:120:27\n+  --> $DIR/needless_question_mark.rs:119:27\n    |\n LL |         || -> Option<_> { Some(Some($expr)?) }()\n    |                           ^^^^^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `Some($expr)`\n@@ -78,13 +78,13 @@ LL |     let _x = some_and_qmark_in_macro!(x?);\n    = note: this error originates in the macro `some_and_qmark_in_macro` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:131:5\n+  --> $DIR/needless_question_mark.rs:130:5\n    |\n LL |     Some(to.magic?)\n    |     ^^^^^^^^^^^^^^^ help: try removing question mark and `Some()`: `to.magic`\n \n error: question mark operator is useless here\n-  --> $DIR/needless_question_mark.rs:139:5\n+  --> $DIR/needless_question_mark.rs:138:5\n    |\n LL |     Ok(s.magic?)\n    |     ^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `s.magic`"}, {"sha": "5496031fefabf9f9fa8335328850685a5e13621e", "filename": "tests/ui/needless_splitn.fixed", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_splitn.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_splitn.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_splitn.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,7 +1,6 @@\n // run-rustfix\n // edition:2018\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::needless_splitn)]\n #![allow(clippy::iter_skip_next, clippy::iter_nth_zero, clippy::manual_split_once)]\n \n@@ -40,8 +39,8 @@ fn _question_mark(s: &str) -> Option<()> {\n     Some(())\n }\n \n+#[clippy::msrv = \"1.51\"]\n fn _test_msrv() {\n-    #![clippy::msrv = \"1.51\"]\n     // `manual_split_once` MSRV shouldn't apply to `needless_splitn`\n     let _ = \"key=value\".split('=').nth(0).unwrap();\n }"}, {"sha": "35c2465bae13138f2da781f87ed30d800f84e35a", "filename": "tests/ui/needless_splitn.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_splitn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_splitn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_splitn.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,7 +1,6 @@\n // run-rustfix\n // edition:2018\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::needless_splitn)]\n #![allow(clippy::iter_skip_next, clippy::iter_nth_zero, clippy::manual_split_once)]\n \n@@ -40,8 +39,8 @@ fn _question_mark(s: &str) -> Option<()> {\n     Some(())\n }\n \n+#[clippy::msrv = \"1.51\"]\n fn _test_msrv() {\n-    #![clippy::msrv = \"1.51\"]\n     // `manual_split_once` MSRV shouldn't apply to `needless_splitn`\n     let _ = \"key=value\".splitn(2, '=').nth(0).unwrap();\n }"}, {"sha": "f607d8e1ab5f40dd97e380dc78c55c2bf98353f1", "filename": "tests/ui/needless_splitn.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_splitn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fneedless_splitn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_splitn.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,79 +1,79 @@\n error: unnecessary use of `splitn`\n-  --> $DIR/needless_splitn.rs:15:13\n+  --> $DIR/needless_splitn.rs:14:13\n    |\n LL |     let _ = str.splitn(2, '=').next();\n    |             ^^^^^^^^^^^^^^^^^^ help: try this: `str.split('=')`\n    |\n    = note: `-D clippy::needless-splitn` implied by `-D warnings`\n \n error: unnecessary use of `splitn`\n-  --> $DIR/needless_splitn.rs:16:13\n+  --> $DIR/needless_splitn.rs:15:13\n    |\n LL |     let _ = str.splitn(2, '=').nth(0);\n    |             ^^^^^^^^^^^^^^^^^^ help: try this: `str.split('=')`\n \n error: unnecessary use of `splitn`\n-  --> $DIR/needless_splitn.rs:19:18\n+  --> $DIR/needless_splitn.rs:18:18\n    |\n LL |     let (_, _) = str.splitn(3, '=').next_tuple().unwrap();\n    |                  ^^^^^^^^^^^^^^^^^^ help: try this: `str.split('=')`\n \n error: unnecessary use of `rsplitn`\n-  --> $DIR/needless_splitn.rs:22:13\n+  --> $DIR/needless_splitn.rs:21:13\n    |\n LL |     let _ = str.rsplitn(2, '=').next();\n    |             ^^^^^^^^^^^^^^^^^^^ help: try this: `str.rsplit('=')`\n \n error: unnecessary use of `rsplitn`\n-  --> $DIR/needless_splitn.rs:23:13\n+  --> $DIR/needless_splitn.rs:22:13\n    |\n LL |     let _ = str.rsplitn(2, '=').nth(0);\n    |             ^^^^^^^^^^^^^^^^^^^ help: try this: `str.rsplit('=')`\n \n error: unnecessary use of `rsplitn`\n-  --> $DIR/needless_splitn.rs:26:18\n+  --> $DIR/needless_splitn.rs:25:18\n    |\n LL |     let (_, _) = str.rsplitn(3, '=').next_tuple().unwrap();\n    |                  ^^^^^^^^^^^^^^^^^^^ help: try this: `str.rsplit('=')`\n \n error: unnecessary use of `splitn`\n-  --> $DIR/needless_splitn.rs:28:13\n+  --> $DIR/needless_splitn.rs:27:13\n    |\n LL |     let _ = str.splitn(5, '=').next();\n    |             ^^^^^^^^^^^^^^^^^^ help: try this: `str.split('=')`\n \n error: unnecessary use of `splitn`\n-  --> $DIR/needless_splitn.rs:29:13\n+  --> $DIR/needless_splitn.rs:28:13\n    |\n LL |     let _ = str.splitn(5, '=').nth(3);\n    |             ^^^^^^^^^^^^^^^^^^ help: try this: `str.split('=')`\n \n error: unnecessary use of `splitn`\n-  --> $DIR/needless_splitn.rs:35:13\n+  --> $DIR/needless_splitn.rs:34:13\n    |\n LL |     let _ = s.splitn(2, '=').next()?;\n    |             ^^^^^^^^^^^^^^^^ help: try this: `s.split('=')`\n \n error: unnecessary use of `splitn`\n-  --> $DIR/needless_splitn.rs:36:13\n+  --> $DIR/needless_splitn.rs:35:13\n    |\n LL |     let _ = s.splitn(2, '=').nth(0)?;\n    |             ^^^^^^^^^^^^^^^^ help: try this: `s.split('=')`\n \n error: unnecessary use of `rsplitn`\n-  --> $DIR/needless_splitn.rs:37:13\n+  --> $DIR/needless_splitn.rs:36:13\n    |\n LL |     let _ = s.rsplitn(2, '=').next()?;\n    |             ^^^^^^^^^^^^^^^^^ help: try this: `s.rsplit('=')`\n \n error: unnecessary use of `rsplitn`\n-  --> $DIR/needless_splitn.rs:38:13\n+  --> $DIR/needless_splitn.rs:37:13\n    |\n LL |     let _ = s.rsplitn(2, '=').nth(0)?;\n    |             ^^^^^^^^^^^^^^^^^ help: try this: `s.rsplit('=')`\n \n error: unnecessary use of `splitn`\n-  --> $DIR/needless_splitn.rs:46:13\n+  --> $DIR/needless_splitn.rs:45:13\n    |\n LL |     let _ = \"key=value\".splitn(2, '=').nth(0).unwrap();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `\"key=value\".split('=')`"}, {"sha": "d124d133faa21ff8418703726c06ae7a941f9f35", "filename": "tests/ui/option_as_ref_deref.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Foption_as_ref_deref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Foption_as_ref_deref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_as_ref_deref.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(unused, clippy::redundant_clone)]\n #![warn(clippy::option_as_ref_deref)]\n \n@@ -44,16 +43,14 @@ fn main() {\n     let _ = opt.as_deref();\n }\n \n+#[clippy::msrv = \"1.39\"]\n fn msrv_1_39() {\n-    #![clippy::msrv = \"1.39\"]\n-\n     let opt = Some(String::from(\"123\"));\n     let _ = opt.as_ref().map(String::as_str);\n }\n \n+#[clippy::msrv = \"1.40\"]\n fn msrv_1_40() {\n-    #![clippy::msrv = \"1.40\"]\n-\n     let opt = Some(String::from(\"123\"));\n     let _ = opt.as_deref();\n }"}, {"sha": "86e354c6716bba5da71df2c5fa42f95d4fd42656", "filename": "tests/ui/option_as_ref_deref.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Foption_as_ref_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Foption_as_ref_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_as_ref_deref.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(unused, clippy::redundant_clone)]\n #![warn(clippy::option_as_ref_deref)]\n \n@@ -47,16 +46,14 @@ fn main() {\n     let _ = opt.as_ref().map(std::ops::Deref::deref);\n }\n \n+#[clippy::msrv = \"1.39\"]\n fn msrv_1_39() {\n-    #![clippy::msrv = \"1.39\"]\n-\n     let opt = Some(String::from(\"123\"));\n     let _ = opt.as_ref().map(String::as_str);\n }\n \n+#[clippy::msrv = \"1.40\"]\n fn msrv_1_40() {\n-    #![clippy::msrv = \"1.40\"]\n-\n     let opt = Some(String::from(\"123\"));\n     let _ = opt.as_ref().map(String::as_str);\n }"}, {"sha": "e471b56eea8170ef94c98de551e0c41e4d13736f", "filename": "tests/ui/option_as_ref_deref.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Foption_as_ref_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Foption_as_ref_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_as_ref_deref.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,13 +1,13 @@\n error: called `.as_ref().map(Deref::deref)` on an Option value. This can be done more directly by calling `opt.clone().as_deref()` instead\n-  --> $DIR/option_as_ref_deref.rs:14:13\n+  --> $DIR/option_as_ref_deref.rs:13:13\n    |\n LL |     let _ = opt.clone().as_ref().map(Deref::deref).map(str::len);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `opt.clone().as_deref()`\n    |\n    = note: `-D clippy::option-as-ref-deref` implied by `-D warnings`\n \n error: called `.as_ref().map(Deref::deref)` on an Option value. This can be done more directly by calling `opt.clone().as_deref()` instead\n-  --> $DIR/option_as_ref_deref.rs:17:13\n+  --> $DIR/option_as_ref_deref.rs:16:13\n    |\n LL |       let _ = opt.clone()\n    |  _____________^\n@@ -17,97 +17,97 @@ LL | |         )\n    | |_________^ help: try using as_deref instead: `opt.clone().as_deref()`\n \n error: called `.as_mut().map(DerefMut::deref_mut)` on an Option value. This can be done more directly by calling `opt.as_deref_mut()` instead\n-  --> $DIR/option_as_ref_deref.rs:23:13\n+  --> $DIR/option_as_ref_deref.rs:22:13\n    |\n LL |     let _ = opt.as_mut().map(DerefMut::deref_mut);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref_mut instead: `opt.as_deref_mut()`\n \n error: called `.as_ref().map(String::as_str)` on an Option value. This can be done more directly by calling `opt.as_deref()` instead\n-  --> $DIR/option_as_ref_deref.rs:25:13\n+  --> $DIR/option_as_ref_deref.rs:24:13\n    |\n LL |     let _ = opt.as_ref().map(String::as_str);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `opt.as_deref()`\n \n error: called `.as_ref().map(|x| x.as_str())` on an Option value. This can be done more directly by calling `opt.as_deref()` instead\n-  --> $DIR/option_as_ref_deref.rs:26:13\n+  --> $DIR/option_as_ref_deref.rs:25:13\n    |\n LL |     let _ = opt.as_ref().map(|x| x.as_str());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `opt.as_deref()`\n \n error: called `.as_mut().map(String::as_mut_str)` on an Option value. This can be done more directly by calling `opt.as_deref_mut()` instead\n-  --> $DIR/option_as_ref_deref.rs:27:13\n+  --> $DIR/option_as_ref_deref.rs:26:13\n    |\n LL |     let _ = opt.as_mut().map(String::as_mut_str);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref_mut instead: `opt.as_deref_mut()`\n \n error: called `.as_mut().map(|x| x.as_mut_str())` on an Option value. This can be done more directly by calling `opt.as_deref_mut()` instead\n-  --> $DIR/option_as_ref_deref.rs:28:13\n+  --> $DIR/option_as_ref_deref.rs:27:13\n    |\n LL |     let _ = opt.as_mut().map(|x| x.as_mut_str());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref_mut instead: `opt.as_deref_mut()`\n \n error: called `.as_ref().map(CString::as_c_str)` on an Option value. This can be done more directly by calling `Some(CString::new(vec![]).unwrap()).as_deref()` instead\n-  --> $DIR/option_as_ref_deref.rs:29:13\n+  --> $DIR/option_as_ref_deref.rs:28:13\n    |\n LL |     let _ = Some(CString::new(vec![]).unwrap()).as_ref().map(CString::as_c_str);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `Some(CString::new(vec![]).unwrap()).as_deref()`\n \n error: called `.as_ref().map(OsString::as_os_str)` on an Option value. This can be done more directly by calling `Some(OsString::new()).as_deref()` instead\n-  --> $DIR/option_as_ref_deref.rs:30:13\n+  --> $DIR/option_as_ref_deref.rs:29:13\n    |\n LL |     let _ = Some(OsString::new()).as_ref().map(OsString::as_os_str);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `Some(OsString::new()).as_deref()`\n \n error: called `.as_ref().map(PathBuf::as_path)` on an Option value. This can be done more directly by calling `Some(PathBuf::new()).as_deref()` instead\n-  --> $DIR/option_as_ref_deref.rs:31:13\n+  --> $DIR/option_as_ref_deref.rs:30:13\n    |\n LL |     let _ = Some(PathBuf::new()).as_ref().map(PathBuf::as_path);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `Some(PathBuf::new()).as_deref()`\n \n error: called `.as_ref().map(Vec::as_slice)` on an Option value. This can be done more directly by calling `Some(Vec::<()>::new()).as_deref()` instead\n-  --> $DIR/option_as_ref_deref.rs:32:13\n+  --> $DIR/option_as_ref_deref.rs:31:13\n    |\n LL |     let _ = Some(Vec::<()>::new()).as_ref().map(Vec::as_slice);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `Some(Vec::<()>::new()).as_deref()`\n \n error: called `.as_mut().map(Vec::as_mut_slice)` on an Option value. This can be done more directly by calling `Some(Vec::<()>::new()).as_deref_mut()` instead\n-  --> $DIR/option_as_ref_deref.rs:33:13\n+  --> $DIR/option_as_ref_deref.rs:32:13\n    |\n LL |     let _ = Some(Vec::<()>::new()).as_mut().map(Vec::as_mut_slice);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref_mut instead: `Some(Vec::<()>::new()).as_deref_mut()`\n \n error: called `.as_ref().map(|x| x.deref())` on an Option value. This can be done more directly by calling `opt.as_deref()` instead\n-  --> $DIR/option_as_ref_deref.rs:35:13\n+  --> $DIR/option_as_ref_deref.rs:34:13\n    |\n LL |     let _ = opt.as_ref().map(|x| x.deref());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `opt.as_deref()`\n \n error: called `.as_mut().map(|x| x.deref_mut())` on an Option value. This can be done more directly by calling `opt.clone().as_deref_mut()` instead\n-  --> $DIR/option_as_ref_deref.rs:36:13\n+  --> $DIR/option_as_ref_deref.rs:35:13\n    |\n LL |     let _ = opt.clone().as_mut().map(|x| x.deref_mut()).map(|x| x.len());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref_mut instead: `opt.clone().as_deref_mut()`\n \n error: called `.as_ref().map(|x| &**x)` on an Option value. This can be done more directly by calling `opt.as_deref()` instead\n-  --> $DIR/option_as_ref_deref.rs:43:13\n+  --> $DIR/option_as_ref_deref.rs:42:13\n    |\n LL |     let _ = opt.as_ref().map(|x| &**x);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `opt.as_deref()`\n \n error: called `.as_mut().map(|x| &mut **x)` on an Option value. This can be done more directly by calling `opt.as_deref_mut()` instead\n-  --> $DIR/option_as_ref_deref.rs:44:13\n+  --> $DIR/option_as_ref_deref.rs:43:13\n    |\n LL |     let _ = opt.as_mut().map(|x| &mut **x);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref_mut instead: `opt.as_deref_mut()`\n \n error: called `.as_ref().map(std::ops::Deref::deref)` on an Option value. This can be done more directly by calling `opt.as_deref()` instead\n-  --> $DIR/option_as_ref_deref.rs:47:13\n+  --> $DIR/option_as_ref_deref.rs:46:13\n    |\n LL |     let _ = opt.as_ref().map(std::ops::Deref::deref);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `opt.as_deref()`\n \n error: called `.as_ref().map(String::as_str)` on an Option value. This can be done more directly by calling `opt.as_deref()` instead\n-  --> $DIR/option_as_ref_deref.rs:61:13\n+  --> $DIR/option_as_ref_deref.rs:58:13\n    |\n LL |     let _ = opt.as_ref().map(String::as_str);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using as_deref instead: `opt.as_deref()`"}, {"sha": "df36a9b842bf7f9f57066dc0c743393c397ce49a", "filename": "tests/ui/ptr_as_ptr.fixed", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fptr_as_ptr.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fptr_as_ptr.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_as_ptr.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -2,7 +2,6 @@\n // aux-build:macro_rules.rs\n \n #![warn(clippy::ptr_as_ptr)]\n-#![feature(custom_inner_attributes)]\n \n extern crate macro_rules;\n \n@@ -45,8 +44,8 @@ fn main() {\n     let _ = macro_rules::ptr_as_ptr_cast!(ptr);\n }\n \n+#[clippy::msrv = \"1.37\"]\n fn _msrv_1_37() {\n-    #![clippy::msrv = \"1.37\"]\n     let ptr: *const u32 = &42_u32;\n     let mut_ptr: *mut u32 = &mut 42_u32;\n \n@@ -55,8 +54,8 @@ fn _msrv_1_37() {\n     let _ = mut_ptr as *mut i32;\n }\n \n+#[clippy::msrv = \"1.38\"]\n fn _msrv_1_38() {\n-    #![clippy::msrv = \"1.38\"]\n     let ptr: *const u32 = &42_u32;\n     let mut_ptr: *mut u32 = &mut 42_u32;\n "}, {"sha": "302c66462d9b9e5ddd5f92f2d14ded1388cfe3ee", "filename": "tests/ui/ptr_as_ptr.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fptr_as_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fptr_as_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_as_ptr.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -2,7 +2,6 @@\n // aux-build:macro_rules.rs\n \n #![warn(clippy::ptr_as_ptr)]\n-#![feature(custom_inner_attributes)]\n \n extern crate macro_rules;\n \n@@ -45,8 +44,8 @@ fn main() {\n     let _ = macro_rules::ptr_as_ptr_cast!(ptr);\n }\n \n+#[clippy::msrv = \"1.37\"]\n fn _msrv_1_37() {\n-    #![clippy::msrv = \"1.37\"]\n     let ptr: *const u32 = &42_u32;\n     let mut_ptr: *mut u32 = &mut 42_u32;\n \n@@ -55,8 +54,8 @@ fn _msrv_1_37() {\n     let _ = mut_ptr as *mut i32;\n }\n \n+#[clippy::msrv = \"1.38\"]\n fn _msrv_1_38() {\n-    #![clippy::msrv = \"1.38\"]\n     let ptr: *const u32 = &42_u32;\n     let mut_ptr: *mut u32 = &mut 42_u32;\n "}, {"sha": "a68e1cab6d357ecc6a2296287d643343bad2e42c", "filename": "tests/ui/ptr_as_ptr.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fptr_as_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fptr_as_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_as_ptr.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,37 +1,37 @@\n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:19:13\n+  --> $DIR/ptr_as_ptr.rs:18:13\n    |\n LL |     let _ = ptr as *const i32;\n    |             ^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `ptr.cast::<i32>()`\n    |\n    = note: `-D clippy::ptr-as-ptr` implied by `-D warnings`\n \n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:20:13\n+  --> $DIR/ptr_as_ptr.rs:19:13\n    |\n LL |     let _ = mut_ptr as *mut i32;\n    |             ^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `mut_ptr.cast::<i32>()`\n \n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:25:17\n+  --> $DIR/ptr_as_ptr.rs:24:17\n    |\n LL |         let _ = *ptr_ptr as *const i32;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(*ptr_ptr).cast::<i32>()`\n \n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:38:25\n+  --> $DIR/ptr_as_ptr.rs:37:25\n    |\n LL |     let _: *const i32 = ptr as *const _;\n    |                         ^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `ptr.cast()`\n \n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:39:23\n+  --> $DIR/ptr_as_ptr.rs:38:23\n    |\n LL |     let _: *mut i32 = mut_ptr as _;\n    |                       ^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `mut_ptr.cast()`\n \n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:11:9\n+  --> $DIR/ptr_as_ptr.rs:10:9\n    |\n LL |         $ptr as *const i32\n    |         ^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `$ptr.cast::<i32>()`\n@@ -42,13 +42,13 @@ LL |     let _ = cast_it!(ptr);\n    = note: this error originates in the macro `cast_it` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:63:13\n+  --> $DIR/ptr_as_ptr.rs:62:13\n    |\n LL |     let _ = ptr as *const i32;\n    |             ^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `ptr.cast::<i32>()`\n \n error: `as` casting between raw pointers without changing its mutability\n-  --> $DIR/ptr_as_ptr.rs:64:13\n+  --> $DIR/ptr_as_ptr.rs:63:13\n    |\n LL |     let _ = mut_ptr as *mut i32;\n    |             ^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `mut_ptr.cast::<i32>()`"}, {"sha": "4923731fe45e8f8889f8e90ad5441e3ce81e0f4d", "filename": "tests/ui/range_contains.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Frange_contains.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Frange_contains.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_contains.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::manual_range_contains)]\n #![allow(unused)]\n #![allow(clippy::no_effect)]\n@@ -65,16 +64,14 @@ pub const fn in_range(a: i32) -> bool {\n     3 <= a && a <= 20\n }\n \n+#[clippy::msrv = \"1.34\"]\n fn msrv_1_34() {\n-    #![clippy::msrv = \"1.34\"]\n-\n     let x = 5;\n     x >= 8 && x < 34;\n }\n \n+#[clippy::msrv = \"1.35\"]\n fn msrv_1_35() {\n-    #![clippy::msrv = \"1.35\"]\n-\n     let x = 5;\n     (8..35).contains(&x);\n }"}, {"sha": "d623ccb5da636fe71874883d0f4b9ed5f6147f08", "filename": "tests/ui/range_contains.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Frange_contains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Frange_contains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_contains.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::manual_range_contains)]\n #![allow(unused)]\n #![allow(clippy::no_effect)]\n@@ -65,16 +64,14 @@ pub const fn in_range(a: i32) -> bool {\n     3 <= a && a <= 20\n }\n \n+#[clippy::msrv = \"1.34\"]\n fn msrv_1_34() {\n-    #![clippy::msrv = \"1.34\"]\n-\n     let x = 5;\n     x >= 8 && x < 34;\n }\n \n+#[clippy::msrv = \"1.35\"]\n fn msrv_1_35() {\n-    #![clippy::msrv = \"1.35\"]\n-\n     let x = 5;\n     x >= 8 && x < 35;\n }"}, {"sha": "ea34023a46645f14322dbf063b50e9139cd9c430", "filename": "tests/ui/range_contains.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Frange_contains.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Frange_contains.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_contains.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,127 +1,127 @@\n error: manual `Range::contains` implementation\n-  --> $DIR/range_contains.rs:14:5\n+  --> $DIR/range_contains.rs:13:5\n    |\n LL |     x >= 8 && x < 12;\n    |     ^^^^^^^^^^^^^^^^ help: use: `(8..12).contains(&x)`\n    |\n    = note: `-D clippy::manual-range-contains` implied by `-D warnings`\n \n error: manual `Range::contains` implementation\n-  --> $DIR/range_contains.rs:15:5\n+  --> $DIR/range_contains.rs:14:5\n    |\n LL |     x < 42 && x >= 21;\n    |     ^^^^^^^^^^^^^^^^^ help: use: `(21..42).contains(&x)`\n \n error: manual `Range::contains` implementation\n-  --> $DIR/range_contains.rs:16:5\n+  --> $DIR/range_contains.rs:15:5\n    |\n LL |     100 > x && 1 <= x;\n    |     ^^^^^^^^^^^^^^^^^ help: use: `(1..100).contains(&x)`\n \n error: manual `RangeInclusive::contains` implementation\n-  --> $DIR/range_contains.rs:19:5\n+  --> $DIR/range_contains.rs:18:5\n    |\n LL |     x >= 9 && x <= 99;\n    |     ^^^^^^^^^^^^^^^^^ help: use: `(9..=99).contains(&x)`\n \n error: manual `RangeInclusive::contains` implementation\n-  --> $DIR/range_contains.rs:20:5\n+  --> $DIR/range_contains.rs:19:5\n    |\n LL |     x <= 33 && x >= 1;\n    |     ^^^^^^^^^^^^^^^^^ help: use: `(1..=33).contains(&x)`\n \n error: manual `RangeInclusive::contains` implementation\n-  --> $DIR/range_contains.rs:21:5\n+  --> $DIR/range_contains.rs:20:5\n    |\n LL |     999 >= x && 1 <= x;\n    |     ^^^^^^^^^^^^^^^^^^ help: use: `(1..=999).contains(&x)`\n \n error: manual `!Range::contains` implementation\n-  --> $DIR/range_contains.rs:24:5\n+  --> $DIR/range_contains.rs:23:5\n    |\n LL |     x < 8 || x >= 12;\n    |     ^^^^^^^^^^^^^^^^ help: use: `!(8..12).contains(&x)`\n \n error: manual `!Range::contains` implementation\n-  --> $DIR/range_contains.rs:25:5\n+  --> $DIR/range_contains.rs:24:5\n    |\n LL |     x >= 42 || x < 21;\n    |     ^^^^^^^^^^^^^^^^^ help: use: `!(21..42).contains(&x)`\n \n error: manual `!Range::contains` implementation\n-  --> $DIR/range_contains.rs:26:5\n+  --> $DIR/range_contains.rs:25:5\n    |\n LL |     100 <= x || 1 > x;\n    |     ^^^^^^^^^^^^^^^^^ help: use: `!(1..100).contains(&x)`\n \n error: manual `!RangeInclusive::contains` implementation\n-  --> $DIR/range_contains.rs:29:5\n+  --> $DIR/range_contains.rs:28:5\n    |\n LL |     x < 9 || x > 99;\n    |     ^^^^^^^^^^^^^^^ help: use: `!(9..=99).contains(&x)`\n \n error: manual `!RangeInclusive::contains` implementation\n-  --> $DIR/range_contains.rs:30:5\n+  --> $DIR/range_contains.rs:29:5\n    |\n LL |     x > 33 || x < 1;\n    |     ^^^^^^^^^^^^^^^ help: use: `!(1..=33).contains(&x)`\n \n error: manual `!RangeInclusive::contains` implementation\n-  --> $DIR/range_contains.rs:31:5\n+  --> $DIR/range_contains.rs:30:5\n    |\n LL |     999 < x || 1 > x;\n    |     ^^^^^^^^^^^^^^^^ help: use: `!(1..=999).contains(&x)`\n \n error: manual `Range::contains` implementation\n-  --> $DIR/range_contains.rs:46:5\n+  --> $DIR/range_contains.rs:45:5\n    |\n LL |     y >= 0. && y < 1.;\n    |     ^^^^^^^^^^^^^^^^^ help: use: `(0. ..1.).contains(&y)`\n \n error: manual `!RangeInclusive::contains` implementation\n-  --> $DIR/range_contains.rs:47:5\n+  --> $DIR/range_contains.rs:46:5\n    |\n LL |     y < 0. || y > 1.;\n    |     ^^^^^^^^^^^^^^^^ help: use: `!(0. ..=1.).contains(&y)`\n \n error: manual `RangeInclusive::contains` implementation\n-  --> $DIR/range_contains.rs:50:5\n+  --> $DIR/range_contains.rs:49:5\n    |\n LL |     x >= -10 && x <= 10;\n    |     ^^^^^^^^^^^^^^^^^^^ help: use: `(-10..=10).contains(&x)`\n \n error: manual `RangeInclusive::contains` implementation\n-  --> $DIR/range_contains.rs:52:5\n+  --> $DIR/range_contains.rs:51:5\n    |\n LL |     y >= -3. && y <= 3.;\n    |     ^^^^^^^^^^^^^^^^^^^ help: use: `(-3. ..=3.).contains(&y)`\n \n error: manual `RangeInclusive::contains` implementation\n-  --> $DIR/range_contains.rs:57:30\n+  --> $DIR/range_contains.rs:56:30\n    |\n LL |     (x >= 0) && (x <= 10) && (z >= 0) && (z <= 10);\n    |                              ^^^^^^^^^^^^^^^^^^^^^ help: use: `(0..=10).contains(&z)`\n \n error: manual `RangeInclusive::contains` implementation\n-  --> $DIR/range_contains.rs:57:5\n+  --> $DIR/range_contains.rs:56:5\n    |\n LL |     (x >= 0) && (x <= 10) && (z >= 0) && (z <= 10);\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: use: `(0..=10).contains(&x)`\n \n error: manual `!Range::contains` implementation\n-  --> $DIR/range_contains.rs:58:29\n+  --> $DIR/range_contains.rs:57:29\n    |\n LL |     (x < 0) || (x >= 10) || (z < 0) || (z >= 10);\n    |                             ^^^^^^^^^^^^^^^^^^^^ help: use: `!(0..10).contains(&z)`\n \n error: manual `!Range::contains` implementation\n-  --> $DIR/range_contains.rs:58:5\n+  --> $DIR/range_contains.rs:57:5\n    |\n LL |     (x < 0) || (x >= 10) || (z < 0) || (z >= 10);\n    |     ^^^^^^^^^^^^^^^^^^^^ help: use: `!(0..10).contains(&x)`\n \n error: manual `Range::contains` implementation\n-  --> $DIR/range_contains.rs:79:5\n+  --> $DIR/range_contains.rs:76:5\n    |\n LL |     x >= 8 && x < 35;\n    |     ^^^^^^^^^^^^^^^^ help: use: `(8..35).contains(&x)`"}, {"sha": "ec7f8ae923a793b3241715b68653b80f98180be6", "filename": "tests/ui/redundant_field_names.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fredundant_field_names.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fredundant_field_names.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_field_names.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::redundant_field_names)]\n #![allow(clippy::no_effect, dead_code, unused_variables)]\n \n@@ -72,16 +71,14 @@ fn issue_3476() {\n     S { foo: foo::<i32> };\n }\n \n+#[clippy::msrv = \"1.16\"]\n fn msrv_1_16() {\n-    #![clippy::msrv = \"1.16\"]\n-\n     let start = 0;\n     let _ = RangeFrom { start: start };\n }\n \n+#[clippy::msrv = \"1.17\"]\n fn msrv_1_17() {\n-    #![clippy::msrv = \"1.17\"]\n-\n     let start = 0;\n     let _ = RangeFrom { start };\n }"}, {"sha": "73122016cf69e9eefec777cde172735926f503ee", "filename": "tests/ui/redundant_field_names.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_field_names.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::redundant_field_names)]\n #![allow(clippy::no_effect, dead_code, unused_variables)]\n \n@@ -72,16 +71,14 @@ fn issue_3476() {\n     S { foo: foo::<i32> };\n }\n \n+#[clippy::msrv = \"1.16\"]\n fn msrv_1_16() {\n-    #![clippy::msrv = \"1.16\"]\n-\n     let start = 0;\n     let _ = RangeFrom { start: start };\n }\n \n+#[clippy::msrv = \"1.17\"]\n fn msrv_1_17() {\n-    #![clippy::msrv = \"1.17\"]\n-\n     let start = 0;\n     let _ = RangeFrom { start: start };\n }"}, {"sha": "00a72c50cf7d0324cc3600fc069cc333d9158594", "filename": "tests/ui/redundant_field_names.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fredundant_field_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fredundant_field_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_field_names.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,49 +1,49 @@\n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:36:9\n+  --> $DIR/redundant_field_names.rs:35:9\n    |\n LL |         gender: gender,\n    |         ^^^^^^^^^^^^^^ help: replace it with: `gender`\n    |\n    = note: `-D clippy::redundant-field-names` implied by `-D warnings`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:37:9\n+  --> $DIR/redundant_field_names.rs:36:9\n    |\n LL |         age: age,\n    |         ^^^^^^^^ help: replace it with: `age`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:58:25\n+  --> $DIR/redundant_field_names.rs:57:25\n    |\n LL |     let _ = RangeFrom { start: start };\n    |                         ^^^^^^^^^^^^ help: replace it with: `start`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:59:23\n+  --> $DIR/redundant_field_names.rs:58:23\n    |\n LL |     let _ = RangeTo { end: end };\n    |                       ^^^^^^^^ help: replace it with: `end`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:60:21\n+  --> $DIR/redundant_field_names.rs:59:21\n    |\n LL |     let _ = Range { start: start, end: end };\n    |                     ^^^^^^^^^^^^ help: replace it with: `start`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:60:35\n+  --> $DIR/redundant_field_names.rs:59:35\n    |\n LL |     let _ = Range { start: start, end: end };\n    |                                   ^^^^^^^^ help: replace it with: `end`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:62:32\n+  --> $DIR/redundant_field_names.rs:61:32\n    |\n LL |     let _ = RangeToInclusive { end: end };\n    |                                ^^^^^^^^ help: replace it with: `end`\n \n error: redundant field names in struct initialization\n-  --> $DIR/redundant_field_names.rs:86:25\n+  --> $DIR/redundant_field_names.rs:83:25\n    |\n LL |     let _ = RangeFrom { start: start };\n    |                         ^^^^^^^^^^^^ help: replace it with: `start`"}, {"sha": "4c5846fe837eaa8a68ed10ad585271923f0f6588", "filename": "tests/ui/redundant_static_lifetimes.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fredundant_static_lifetimes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fredundant_static_lifetimes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_static_lifetimes.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(unused)]\n \n #[derive(Debug)]\n@@ -56,14 +55,12 @@ impl Bar for Foo {\n     const TRAIT_VAR: &'static str = \"foo\";\n }\n \n+#[clippy::msrv = \"1.16\"]\n fn msrv_1_16() {\n-    #![clippy::msrv = \"1.16\"]\n-\n     static V: &'static u8 = &16;\n }\n \n+#[clippy::msrv = \"1.17\"]\n fn msrv_1_17() {\n-    #![clippy::msrv = \"1.17\"]\n-\n     static V: &u8 = &17;\n }"}, {"sha": "64a66be1a83c753ff8a786167759fd4f04ea52ef", "filename": "tests/ui/redundant_static_lifetimes.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fredundant_static_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fredundant_static_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_static_lifetimes.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![allow(unused)]\n \n #[derive(Debug)]\n@@ -56,14 +55,12 @@ impl Bar for Foo {\n     const TRAIT_VAR: &'static str = \"foo\";\n }\n \n+#[clippy::msrv = \"1.16\"]\n fn msrv_1_16() {\n-    #![clippy::msrv = \"1.16\"]\n-\n     static V: &'static u8 = &16;\n }\n \n+#[clippy::msrv = \"1.17\"]\n fn msrv_1_17() {\n-    #![clippy::msrv = \"1.17\"]\n-\n     static V: &'static u8 = &17;\n }"}, {"sha": "0938ebf783ff16888852e0be386dc22c86f1c254", "filename": "tests/ui/redundant_static_lifetimes.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fredundant_static_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fredundant_static_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_static_lifetimes.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,103 +1,103 @@\n error: constants have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:9:17\n+  --> $DIR/redundant_static_lifetimes.rs:8:17\n    |\n LL | const VAR_ONE: &'static str = \"Test constant #1\"; // ERROR Consider removing 'static.\n    |                -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = note: `-D clippy::redundant-static-lifetimes` implied by `-D warnings`\n \n error: constants have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:13:21\n+  --> $DIR/redundant_static_lifetimes.rs:12:21\n    |\n LL | const VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n    |                    -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: constants have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:15:32\n+  --> $DIR/redundant_static_lifetimes.rs:14:32\n    |\n LL | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n    |                               -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: constants have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:15:47\n+  --> $DIR/redundant_static_lifetimes.rs:14:47\n    |\n LL | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n    |                                              -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: constants have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:17:17\n+  --> $DIR/redundant_static_lifetimes.rs:16:17\n    |\n LL | const VAR_SIX: &'static u8 = &5;\n    |                -^^^^^^^--- help: consider removing `'static`: `&u8`\n \n error: constants have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:19:20\n+  --> $DIR/redundant_static_lifetimes.rs:18:20\n    |\n LL | const VAR_HEIGHT: &'static Foo = &Foo {};\n    |                   -^^^^^^^---- help: consider removing `'static`: `&Foo`\n \n error: constants have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:21:19\n+  --> $DIR/redundant_static_lifetimes.rs:20:19\n    |\n LL | const VAR_SLICE: &'static [u8] = b\"Test constant #1\"; // ERROR Consider removing 'static.\n    |                  -^^^^^^^----- help: consider removing `'static`: `&[u8]`\n \n error: constants have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:23:19\n+  --> $DIR/redundant_static_lifetimes.rs:22:19\n    |\n LL | const VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n    |                  -^^^^^^^--------- help: consider removing `'static`: `&(u8, u8)`\n \n error: constants have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:25:19\n+  --> $DIR/redundant_static_lifetimes.rs:24:19\n    |\n LL | const VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n    |                  -^^^^^^^-------- help: consider removing `'static`: `&[u8; 1]`\n \n error: statics have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:27:25\n+  --> $DIR/redundant_static_lifetimes.rs:26:25\n    |\n LL | static STATIC_VAR_ONE: &'static str = \"Test static #1\"; // ERROR Consider removing 'static.\n    |                        -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: statics have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:31:29\n+  --> $DIR/redundant_static_lifetimes.rs:30:29\n    |\n LL | static STATIC_VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n    |                            -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: statics have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:33:25\n+  --> $DIR/redundant_static_lifetimes.rs:32:25\n    |\n LL | static STATIC_VAR_SIX: &'static u8 = &5;\n    |                        -^^^^^^^--- help: consider removing `'static`: `&u8`\n \n error: statics have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:35:28\n+  --> $DIR/redundant_static_lifetimes.rs:34:28\n    |\n LL | static STATIC_VAR_HEIGHT: &'static Foo = &Foo {};\n    |                           -^^^^^^^---- help: consider removing `'static`: `&Foo`\n \n error: statics have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:37:27\n+  --> $DIR/redundant_static_lifetimes.rs:36:27\n    |\n LL | static STATIC_VAR_SLICE: &'static [u8] = b\"Test static #3\"; // ERROR Consider removing 'static.\n    |                          -^^^^^^^----- help: consider removing `'static`: `&[u8]`\n \n error: statics have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:39:27\n+  --> $DIR/redundant_static_lifetimes.rs:38:27\n    |\n LL | static STATIC_VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n    |                          -^^^^^^^--------- help: consider removing `'static`: `&(u8, u8)`\n \n error: statics have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:41:27\n+  --> $DIR/redundant_static_lifetimes.rs:40:27\n    |\n LL | static STATIC_VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n    |                          -^^^^^^^-------- help: consider removing `'static`: `&[u8; 1]`\n \n error: statics have by default a `'static` lifetime\n-  --> $DIR/redundant_static_lifetimes.rs:68:16\n+  --> $DIR/redundant_static_lifetimes.rs:65:16\n    |\n LL |     static V: &'static u8 = &17;\n    |               -^^^^^^^--- help: consider removing `'static`: `&u8`"}, {"sha": "1309c91b81c9830b52f9813d1bf0d75b572251e3", "filename": "tests/ui/seek_from_current.fixed", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fseek_from_current.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fseek_from_current.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fseek_from_current.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,21 +1,20 @@\n // run-rustfix\n #![warn(clippy::seek_from_current)]\n-#![feature(custom_inner_attributes)]\n \n use std::fs::File;\n use std::io::{self, Seek, SeekFrom, Write};\n \n+#[clippy::msrv = \"1.50\"]\n fn _msrv_1_50() -> io::Result<()> {\n-    #![clippy::msrv = \"1.50\"]\n     let mut f = File::create(\"foo.txt\")?;\n     f.write_all(b\"Hi!\")?;\n     f.seek(SeekFrom::Current(0))?;\n     f.seek(SeekFrom::Current(1))?;\n     Ok(())\n }\n \n+#[clippy::msrv = \"1.51\"]\n fn _msrv_1_51() -> io::Result<()> {\n-    #![clippy::msrv = \"1.51\"]\n     let mut f = File::create(\"foo.txt\")?;\n     f.write_all(b\"Hi!\")?;\n     f.stream_position()?;"}, {"sha": "5d9b1424cf686fe5bd1ec150b86c7e8d6a7f0d3a", "filename": "tests/ui/seek_from_current.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fseek_from_current.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fseek_from_current.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fseek_from_current.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,21 +1,20 @@\n // run-rustfix\n #![warn(clippy::seek_from_current)]\n-#![feature(custom_inner_attributes)]\n \n use std::fs::File;\n use std::io::{self, Seek, SeekFrom, Write};\n \n+#[clippy::msrv = \"1.50\"]\n fn _msrv_1_50() -> io::Result<()> {\n-    #![clippy::msrv = \"1.50\"]\n     let mut f = File::create(\"foo.txt\")?;\n     f.write_all(b\"Hi!\")?;\n     f.seek(SeekFrom::Current(0))?;\n     f.seek(SeekFrom::Current(1))?;\n     Ok(())\n }\n \n+#[clippy::msrv = \"1.51\"]\n fn _msrv_1_51() -> io::Result<()> {\n-    #![clippy::msrv = \"1.51\"]\n     let mut f = File::create(\"foo.txt\")?;\n     f.write_all(b\"Hi!\")?;\n     f.seek(SeekFrom::Current(0))?;"}, {"sha": "c079f361192928bcea5fe74a99da5e93cc521309", "filename": "tests/ui/seek_from_current.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fseek_from_current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fseek_from_current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fseek_from_current.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,5 @@\n error: using `SeekFrom::Current` to start from current position\n-  --> $DIR/seek_from_current.rs:21:5\n+  --> $DIR/seek_from_current.rs:20:5\n    |\n LL |     f.seek(SeekFrom::Current(0))?;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `f.stream_position()`"}, {"sha": "9d0d1124c460ed45b1b5894bd3878b18d15def72", "filename": "tests/ui/seek_to_start_instead_of_rewind.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fseek_to_start_instead_of_rewind.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fseek_to_start_instead_of_rewind.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fseek_to_start_instead_of_rewind.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n #![allow(unused)]\n-#![feature(custom_inner_attributes)]\n #![warn(clippy::seek_to_start_instead_of_rewind)]\n \n use std::fs::OpenOptions;\n@@ -94,9 +93,8 @@ fn main() {\n     assert_eq!(&buf, hello);\n }\n \n+#[clippy::msrv = \"1.54\"]\n fn msrv_1_54() {\n-    #![clippy::msrv = \"1.54\"]\n-\n     let mut f = OpenOptions::new()\n         .write(true)\n         .read(true)\n@@ -115,9 +113,8 @@ fn msrv_1_54() {\n     assert_eq!(&buf, hello);\n }\n \n+#[clippy::msrv = \"1.55\"]\n fn msrv_1_55() {\n-    #![clippy::msrv = \"1.55\"]\n-\n     let mut f = OpenOptions::new()\n         .write(true)\n         .read(true)"}, {"sha": "c5bc57cc3a74ce617a96b4dd401a58cca895647b", "filename": "tests/ui/seek_to_start_instead_of_rewind.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fseek_to_start_instead_of_rewind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fseek_to_start_instead_of_rewind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fseek_to_start_instead_of_rewind.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n #![allow(unused)]\n-#![feature(custom_inner_attributes)]\n #![warn(clippy::seek_to_start_instead_of_rewind)]\n \n use std::fs::OpenOptions;\n@@ -94,9 +93,8 @@ fn main() {\n     assert_eq!(&buf, hello);\n }\n \n+#[clippy::msrv = \"1.54\"]\n fn msrv_1_54() {\n-    #![clippy::msrv = \"1.54\"]\n-\n     let mut f = OpenOptions::new()\n         .write(true)\n         .read(true)\n@@ -115,9 +113,8 @@ fn msrv_1_54() {\n     assert_eq!(&buf, hello);\n }\n \n+#[clippy::msrv = \"1.55\"]\n fn msrv_1_55() {\n-    #![clippy::msrv = \"1.55\"]\n-\n     let mut f = OpenOptions::new()\n         .write(true)\n         .read(true)"}, {"sha": "6cce025359fe2918bce42ea6bdbef601d8c74948", "filename": "tests/ui/seek_to_start_instead_of_rewind.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fseek_to_start_instead_of_rewind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fseek_to_start_instead_of_rewind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fseek_to_start_instead_of_rewind.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,19 +1,19 @@\n error: used `seek` to go to the start of the stream\n-  --> $DIR/seek_to_start_instead_of_rewind.rs:54:7\n+  --> $DIR/seek_to_start_instead_of_rewind.rs:53:7\n    |\n LL |     t.seek(SeekFrom::Start(0));\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `rewind()`\n    |\n    = note: `-D clippy::seek-to-start-instead-of-rewind` implied by `-D warnings`\n \n error: used `seek` to go to the start of the stream\n-  --> $DIR/seek_to_start_instead_of_rewind.rs:59:7\n+  --> $DIR/seek_to_start_instead_of_rewind.rs:58:7\n    |\n LL |     t.seek(SeekFrom::Start(0));\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `rewind()`\n \n error: used `seek` to go to the start of the stream\n-  --> $DIR/seek_to_start_instead_of_rewind.rs:131:7\n+  --> $DIR/seek_to_start_instead_of_rewind.rs:128:7\n    |\n LL |     f.seek(SeekFrom::Start(0));\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `rewind()`"}, {"sha": "074dae5fb2868bf1906f523e3c9aa0b222427eb3", "filename": "tests/ui/transmute_ptr_to_ref.fixed", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ftransmute_ptr_to_ref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ftransmute_ptr_to_ref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_ptr_to_ref.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::transmute_ptr_to_ref)]\n #![allow(clippy::match_single_binding)]\n \n@@ -51,8 +50,8 @@ unsafe fn _issue8924<'a, 'b, 'c>(x: *const &'a u32, y: *const &'b u32) -> &'c &'\n     }\n }\n \n+#[clippy::msrv = \"1.38\"]\n unsafe fn _meets_msrv<'a, 'b, 'c>(x: *const &'a u32) -> &'c &'b u32 {\n-    #![clippy::msrv = \"1.38\"]\n     let a = 0u32;\n     let a = &a as *const u32;\n     let _: &u32 = &*a;\n@@ -63,8 +62,8 @@ unsafe fn _meets_msrv<'a, 'b, 'c>(x: *const &'a u32) -> &'c &'b u32 {\n     }\n }\n \n+#[clippy::msrv = \"1.37\"]\n unsafe fn _under_msrv<'a, 'b, 'c>(x: *const &'a u32) -> &'c &'b u32 {\n-    #![clippy::msrv = \"1.37\"]\n     let a = 0u32;\n     let a = &a as *const u32;\n     let _: &u32 = &*a;"}, {"sha": "2edc122cf47127b1b8e364f3ce4409e72d209855", "filename": "tests/ui/transmute_ptr_to_ref.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ftransmute_ptr_to_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ftransmute_ptr_to_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_ptr_to_ref.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // run-rustfix\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::transmute_ptr_to_ref)]\n #![allow(clippy::match_single_binding)]\n \n@@ -51,8 +50,8 @@ unsafe fn _issue8924<'a, 'b, 'c>(x: *const &'a u32, y: *const &'b u32) -> &'c &'\n     }\n }\n \n+#[clippy::msrv = \"1.38\"]\n unsafe fn _meets_msrv<'a, 'b, 'c>(x: *const &'a u32) -> &'c &'b u32 {\n-    #![clippy::msrv = \"1.38\"]\n     let a = 0u32;\n     let a = &a as *const u32;\n     let _: &u32 = std::mem::transmute(a);\n@@ -63,8 +62,8 @@ unsafe fn _meets_msrv<'a, 'b, 'c>(x: *const &'a u32) -> &'c &'b u32 {\n     }\n }\n \n+#[clippy::msrv = \"1.37\"]\n unsafe fn _under_msrv<'a, 'b, 'c>(x: *const &'a u32) -> &'c &'b u32 {\n-    #![clippy::msrv = \"1.37\"]\n     let a = 0u32;\n     let a = &a as *const u32;\n     let _: &u32 = std::mem::transmute(a);"}, {"sha": "b3e6c09d2d7a1f2882996aa36818067edec35586", "filename": "tests/ui/transmute_ptr_to_ref.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ftransmute_ptr_to_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Ftransmute_ptr_to_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_ptr_to_ref.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,133 +1,133 @@\n error: transmute from a pointer type (`*const T`) to a reference type (`&T`)\n-  --> $DIR/transmute_ptr_to_ref.rs:8:17\n+  --> $DIR/transmute_ptr_to_ref.rs:7:17\n    |\n LL |     let _: &T = std::mem::transmute(p);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*p`\n    |\n    = note: `-D clippy::transmute-ptr-to-ref` implied by `-D warnings`\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n-  --> $DIR/transmute_ptr_to_ref.rs:11:21\n+  --> $DIR/transmute_ptr_to_ref.rs:10:21\n    |\n LL |     let _: &mut T = std::mem::transmute(m);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *m`\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&T`)\n-  --> $DIR/transmute_ptr_to_ref.rs:14:17\n+  --> $DIR/transmute_ptr_to_ref.rs:13:17\n    |\n LL |     let _: &T = std::mem::transmute(m);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*m`\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n-  --> $DIR/transmute_ptr_to_ref.rs:17:21\n+  --> $DIR/transmute_ptr_to_ref.rs:16:21\n    |\n LL |     let _: &mut T = std::mem::transmute(p as *mut T);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *(p as *mut T)`\n \n error: transmute from a pointer type (`*const U`) to a reference type (`&T`)\n-  --> $DIR/transmute_ptr_to_ref.rs:20:17\n+  --> $DIR/transmute_ptr_to_ref.rs:19:17\n    |\n LL |     let _: &T = std::mem::transmute(o);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(o as *const T)`\n \n error: transmute from a pointer type (`*mut U`) to a reference type (`&mut T`)\n-  --> $DIR/transmute_ptr_to_ref.rs:23:21\n+  --> $DIR/transmute_ptr_to_ref.rs:22:21\n    |\n LL |     let _: &mut T = std::mem::transmute(om);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *(om as *mut T)`\n \n error: transmute from a pointer type (`*mut U`) to a reference type (`&T`)\n-  --> $DIR/transmute_ptr_to_ref.rs:26:17\n+  --> $DIR/transmute_ptr_to_ref.rs:25:17\n    |\n LL |     let _: &T = std::mem::transmute(om);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(om as *const T)`\n \n error: transmute from a pointer type (`*const i32`) to a reference type (`&_issue1231::Foo<'_, u8>`)\n-  --> $DIR/transmute_ptr_to_ref.rs:36:32\n+  --> $DIR/transmute_ptr_to_ref.rs:35:32\n    |\n LL |     let _: &Foo<u8> = unsafe { std::mem::transmute::<_, &Foo<_>>(raw) };\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*raw.cast::<Foo<_>>()`\n \n error: transmute from a pointer type (`*const i32`) to a reference type (`&_issue1231::Foo<'_, &u8>`)\n-  --> $DIR/transmute_ptr_to_ref.rs:38:33\n+  --> $DIR/transmute_ptr_to_ref.rs:37:33\n    |\n LL |     let _: &Foo<&u8> = unsafe { std::mem::transmute::<_, &Foo<&_>>(raw) };\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*raw.cast::<Foo<&_>>()`\n \n error: transmute from a pointer type (`*const i32`) to a reference type (`&u8`)\n-  --> $DIR/transmute_ptr_to_ref.rs:42:14\n+  --> $DIR/transmute_ptr_to_ref.rs:41:14\n    |\n LL |     unsafe { std::mem::transmute::<_, Bar>(raw) };\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(raw as *const u8)`\n \n error: transmute from a pointer type (`*const &u32`) to a reference type (`&&u32`)\n-  --> $DIR/transmute_ptr_to_ref.rs:47:14\n+  --> $DIR/transmute_ptr_to_ref.rs:46:14\n    |\n LL |         0 => std::mem::transmute(x),\n    |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*x.cast::<&u32>()`\n \n error: transmute from a pointer type (`*const &u32`) to a reference type (`&&u32`)\n-  --> $DIR/transmute_ptr_to_ref.rs:48:14\n+  --> $DIR/transmute_ptr_to_ref.rs:47:14\n    |\n LL |         1 => std::mem::transmute(y),\n    |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*y.cast::<&u32>()`\n \n error: transmute from a pointer type (`*const &u32`) to a reference type (`&&u32`)\n-  --> $DIR/transmute_ptr_to_ref.rs:49:14\n+  --> $DIR/transmute_ptr_to_ref.rs:48:14\n    |\n LL |         2 => std::mem::transmute::<_, &&'b u32>(x),\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*x.cast::<&'b u32>()`\n \n error: transmute from a pointer type (`*const &u32`) to a reference type (`&&u32`)\n-  --> $DIR/transmute_ptr_to_ref.rs:50:14\n+  --> $DIR/transmute_ptr_to_ref.rs:49:14\n    |\n LL |         _ => std::mem::transmute::<_, &&'b u32>(y),\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*y.cast::<&'b u32>()`\n \n error: transmute from a pointer type (`*const u32`) to a reference type (`&u32`)\n-  --> $DIR/transmute_ptr_to_ref.rs:58:19\n+  --> $DIR/transmute_ptr_to_ref.rs:57:19\n    |\n LL |     let _: &u32 = std::mem::transmute(a);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*a`\n \n error: transmute from a pointer type (`*const u32`) to a reference type (`&u32`)\n-  --> $DIR/transmute_ptr_to_ref.rs:59:19\n+  --> $DIR/transmute_ptr_to_ref.rs:58:19\n    |\n LL |     let _: &u32 = std::mem::transmute::<_, &u32>(a);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*a.cast::<u32>()`\n \n error: transmute from a pointer type (`*const &u32`) to a reference type (`&&u32`)\n-  --> $DIR/transmute_ptr_to_ref.rs:61:14\n+  --> $DIR/transmute_ptr_to_ref.rs:60:14\n    |\n LL |         0 => std::mem::transmute(x),\n    |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*x.cast::<&u32>()`\n \n error: transmute from a pointer type (`*const &u32`) to a reference type (`&&u32`)\n-  --> $DIR/transmute_ptr_to_ref.rs:62:14\n+  --> $DIR/transmute_ptr_to_ref.rs:61:14\n    |\n LL |         _ => std::mem::transmute::<_, &&'b u32>(x),\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*x.cast::<&'b u32>()`\n \n error: transmute from a pointer type (`*const u32`) to a reference type (`&u32`)\n-  --> $DIR/transmute_ptr_to_ref.rs:70:19\n+  --> $DIR/transmute_ptr_to_ref.rs:69:19\n    |\n LL |     let _: &u32 = std::mem::transmute(a);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*a`\n \n error: transmute from a pointer type (`*const u32`) to a reference type (`&u32`)\n-  --> $DIR/transmute_ptr_to_ref.rs:71:19\n+  --> $DIR/transmute_ptr_to_ref.rs:70:19\n    |\n LL |     let _: &u32 = std::mem::transmute::<_, &u32>(a);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(a as *const u32)`\n \n error: transmute from a pointer type (`*const &u32`) to a reference type (`&&u32`)\n-  --> $DIR/transmute_ptr_to_ref.rs:73:14\n+  --> $DIR/transmute_ptr_to_ref.rs:72:14\n    |\n LL |         0 => std::mem::transmute(x),\n    |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(x as *const () as *const &u32)`\n \n error: transmute from a pointer type (`*const &u32`) to a reference type (`&&u32`)\n-  --> $DIR/transmute_ptr_to_ref.rs:74:14\n+  --> $DIR/transmute_ptr_to_ref.rs:73:14\n    |\n LL |         _ => std::mem::transmute::<_, &&'b u32>(x),\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(x as *const () as *const &'b u32)`"}, {"sha": "46ec7771114f1f7c22d9e69bbcec798d8f6ac722", "filename": "tests/ui/uninlined_format_args.fixed", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funinlined_format_args.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funinlined_format_args.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // aux-build:proc_macro_with_span.rs\n // run-rustfix\n-#![feature(custom_inner_attributes)]\n #![warn(clippy::uninlined_format_args)]\n #![allow(named_arguments_used_positionally, unused_imports, unused_macros, unused_variables)]\n #![allow(clippy::eq_op, clippy::format_in_format_args, clippy::print_literal)]\n@@ -164,14 +163,14 @@ fn main() {\n     tester(42);\n }\n \n+#[clippy::msrv = \"1.57\"]\n fn _under_msrv() {\n-    #![clippy::msrv = \"1.57\"]\n     let local_i32 = 1;\n     println!(\"don't expand='{}'\", local_i32);\n }\n \n+#[clippy::msrv = \"1.58\"]\n fn _meets_msrv() {\n-    #![clippy::msrv = \"1.58\"]\n     let local_i32 = 1;\n     println!(\"expand='{local_i32}'\");\n }"}, {"sha": "35b3677a8968ffe480a4fafcf62adc979c1e17b7", "filename": "tests/ui/uninlined_format_args.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funinlined_format_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funinlined_format_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,5 @@\n // aux-build:proc_macro_with_span.rs\n // run-rustfix\n-#![feature(custom_inner_attributes)]\n #![warn(clippy::uninlined_format_args)]\n #![allow(named_arguments_used_positionally, unused_imports, unused_macros, unused_variables)]\n #![allow(clippy::eq_op, clippy::format_in_format_args, clippy::print_literal)]\n@@ -169,14 +168,14 @@ fn main() {\n     tester(42);\n }\n \n+#[clippy::msrv = \"1.57\"]\n fn _under_msrv() {\n-    #![clippy::msrv = \"1.57\"]\n     let local_i32 = 1;\n     println!(\"don't expand='{}'\", local_i32);\n }\n \n+#[clippy::msrv = \"1.58\"]\n fn _meets_msrv() {\n-    #![clippy::msrv = \"1.58\"]\n     let local_i32 = 1;\n     println!(\"expand='{}'\", local_i32);\n }"}, {"sha": "05ed5b6616c09a4aecea7fc7a8bad89e30b7ac51", "filename": "tests/ui/uninlined_format_args.stderr", "status": "modified", "additions": 76, "deletions": 76, "changes": 152, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funinlined_format_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funinlined_format_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,5 +1,5 @@\n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:41:5\n+  --> $DIR/uninlined_format_args.rs:40:5\n    |\n LL |     println!(\"val='{}'\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -12,7 +12,7 @@ LL +     println!(\"val='{local_i32}'\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:42:5\n+  --> $DIR/uninlined_format_args.rs:41:5\n    |\n LL |     println!(\"val='{   }'\", local_i32); // 3 spaces\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -24,7 +24,7 @@ LL +     println!(\"val='{local_i32}'\"); // 3 spaces\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:43:5\n+  --> $DIR/uninlined_format_args.rs:42:5\n    |\n LL |     println!(\"val='{    }'\", local_i32); // tab\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -36,7 +36,7 @@ LL +     println!(\"val='{local_i32}'\"); // tab\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:44:5\n+  --> $DIR/uninlined_format_args.rs:43:5\n    |\n LL |     println!(\"val='{     }'\", local_i32); // space+tab\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -48,7 +48,7 @@ LL +     println!(\"val='{local_i32}'\"); // space+tab\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:45:5\n+  --> $DIR/uninlined_format_args.rs:44:5\n    |\n LL |     println!(\"val='{     }'\", local_i32); // tab+space\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -60,7 +60,7 @@ LL +     println!(\"val='{local_i32}'\"); // tab+space\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:46:5\n+  --> $DIR/uninlined_format_args.rs:45:5\n    |\n LL | /     println!(\n LL | |         \"val='{\n@@ -70,7 +70,7 @@ LL | |     );\n    | |_____^\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:51:5\n+  --> $DIR/uninlined_format_args.rs:50:5\n    |\n LL |     println!(\"{}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -82,7 +82,7 @@ LL +     println!(\"{local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:52:5\n+  --> $DIR/uninlined_format_args.rs:51:5\n    |\n LL |     println!(\"{}\", fn_arg);\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n@@ -94,7 +94,7 @@ LL +     println!(\"{fn_arg}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:53:5\n+  --> $DIR/uninlined_format_args.rs:52:5\n    |\n LL |     println!(\"{:?}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -106,7 +106,7 @@ LL +     println!(\"{local_i32:?}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:54:5\n+  --> $DIR/uninlined_format_args.rs:53:5\n    |\n LL |     println!(\"{:#?}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -118,7 +118,7 @@ LL +     println!(\"{local_i32:#?}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:55:5\n+  --> $DIR/uninlined_format_args.rs:54:5\n    |\n LL |     println!(\"{:4}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -130,7 +130,7 @@ LL +     println!(\"{local_i32:4}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:56:5\n+  --> $DIR/uninlined_format_args.rs:55:5\n    |\n LL |     println!(\"{:04}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -142,7 +142,7 @@ LL +     println!(\"{local_i32:04}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:57:5\n+  --> $DIR/uninlined_format_args.rs:56:5\n    |\n LL |     println!(\"{:<3}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -154,7 +154,7 @@ LL +     println!(\"{local_i32:<3}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:58:5\n+  --> $DIR/uninlined_format_args.rs:57:5\n    |\n LL |     println!(\"{:#010x}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -166,7 +166,7 @@ LL +     println!(\"{local_i32:#010x}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:59:5\n+  --> $DIR/uninlined_format_args.rs:58:5\n    |\n LL |     println!(\"{:.1}\", local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -178,7 +178,7 @@ LL +     println!(\"{local_f64:.1}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:60:5\n+  --> $DIR/uninlined_format_args.rs:59:5\n    |\n LL |     println!(\"Hello {} is {:.*}\", \"x\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -190,7 +190,7 @@ LL +     println!(\"Hello {} is {local_f64:.local_i32$}\", \"x\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:61:5\n+  --> $DIR/uninlined_format_args.rs:60:5\n    |\n LL |     println!(\"Hello {} is {:.*}\", local_i32, 5, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -202,7 +202,7 @@ LL +     println!(\"Hello {local_i32} is {local_f64:.*}\", 5);\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:62:5\n+  --> $DIR/uninlined_format_args.rs:61:5\n    |\n LL |     println!(\"Hello {} is {2:.*}\", local_i32, 5, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -214,7 +214,7 @@ LL +     println!(\"Hello {local_i32} is {local_f64:.*}\", 5);\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:63:5\n+  --> $DIR/uninlined_format_args.rs:62:5\n    |\n LL |     println!(\"{} {}\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -226,7 +226,7 @@ LL +     println!(\"{local_i32} {local_f64}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:64:5\n+  --> $DIR/uninlined_format_args.rs:63:5\n    |\n LL |     println!(\"{}, {}\", local_i32, local_opt.unwrap());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -238,7 +238,7 @@ LL +     println!(\"{local_i32}, {}\", local_opt.unwrap());\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:65:5\n+  --> $DIR/uninlined_format_args.rs:64:5\n    |\n LL |     println!(\"{}\", val);\n    |     ^^^^^^^^^^^^^^^^^^^\n@@ -250,7 +250,7 @@ LL +     println!(\"{val}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:66:5\n+  --> $DIR/uninlined_format_args.rs:65:5\n    |\n LL |     println!(\"{}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -262,7 +262,7 @@ LL +     println!(\"{val}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:68:5\n+  --> $DIR/uninlined_format_args.rs:67:5\n    |\n LL |     println!(\"val='{/t }'\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -274,7 +274,7 @@ LL +     println!(\"val='{local_i32}'\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:69:5\n+  --> $DIR/uninlined_format_args.rs:68:5\n    |\n LL |     println!(\"val='{/n }'\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -286,7 +286,7 @@ LL +     println!(\"val='{local_i32}'\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:70:5\n+  --> $DIR/uninlined_format_args.rs:69:5\n    |\n LL |     println!(\"val='{local_i32}'\", local_i32 = local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -298,7 +298,7 @@ LL +     println!(\"val='{local_i32}'\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:71:5\n+  --> $DIR/uninlined_format_args.rs:70:5\n    |\n LL |     println!(\"val='{local_i32}'\", local_i32 = fn_arg);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -310,7 +310,7 @@ LL +     println!(\"val='{fn_arg}'\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:72:5\n+  --> $DIR/uninlined_format_args.rs:71:5\n    |\n LL |     println!(\"{0}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -322,7 +322,7 @@ LL +     println!(\"{local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:73:5\n+  --> $DIR/uninlined_format_args.rs:72:5\n    |\n LL |     println!(\"{0:?}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -334,7 +334,7 @@ LL +     println!(\"{local_i32:?}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:74:5\n+  --> $DIR/uninlined_format_args.rs:73:5\n    |\n LL |     println!(\"{0:#?}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -346,7 +346,7 @@ LL +     println!(\"{local_i32:#?}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:75:5\n+  --> $DIR/uninlined_format_args.rs:74:5\n    |\n LL |     println!(\"{0:04}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -358,7 +358,7 @@ LL +     println!(\"{local_i32:04}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:76:5\n+  --> $DIR/uninlined_format_args.rs:75:5\n    |\n LL |     println!(\"{0:<3}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -370,7 +370,7 @@ LL +     println!(\"{local_i32:<3}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:77:5\n+  --> $DIR/uninlined_format_args.rs:76:5\n    |\n LL |     println!(\"{0:#010x}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -382,7 +382,7 @@ LL +     println!(\"{local_i32:#010x}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:78:5\n+  --> $DIR/uninlined_format_args.rs:77:5\n    |\n LL |     println!(\"{0:.1}\", local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -394,7 +394,7 @@ LL +     println!(\"{local_f64:.1}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:79:5\n+  --> $DIR/uninlined_format_args.rs:78:5\n    |\n LL |     println!(\"{0} {0}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -406,7 +406,7 @@ LL +     println!(\"{local_i32} {local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:80:5\n+  --> $DIR/uninlined_format_args.rs:79:5\n    |\n LL |     println!(\"{1} {} {0} {}\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -418,7 +418,7 @@ LL +     println!(\"{local_f64} {local_i32} {local_i32} {local_f64}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:81:5\n+  --> $DIR/uninlined_format_args.rs:80:5\n    |\n LL |     println!(\"{0} {1}\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -430,7 +430,7 @@ LL +     println!(\"{local_i32} {local_f64}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:82:5\n+  --> $DIR/uninlined_format_args.rs:81:5\n    |\n LL |     println!(\"{1} {0}\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -442,7 +442,7 @@ LL +     println!(\"{local_f64} {local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:83:5\n+  --> $DIR/uninlined_format_args.rs:82:5\n    |\n LL |     println!(\"{1} {0} {1} {0}\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -454,7 +454,7 @@ LL +     println!(\"{local_f64} {local_i32} {local_f64} {local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:85:5\n+  --> $DIR/uninlined_format_args.rs:84:5\n    |\n LL |     println!(\"{v}\", v = local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -466,7 +466,7 @@ LL +     println!(\"{local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:86:5\n+  --> $DIR/uninlined_format_args.rs:85:5\n    |\n LL |     println!(\"{local_i32:0$}\", width);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -478,7 +478,7 @@ LL +     println!(\"{local_i32:width$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:87:5\n+  --> $DIR/uninlined_format_args.rs:86:5\n    |\n LL |     println!(\"{local_i32:w$}\", w = width);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -490,7 +490,7 @@ LL +     println!(\"{local_i32:width$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:88:5\n+  --> $DIR/uninlined_format_args.rs:87:5\n    |\n LL |     println!(\"{local_i32:.0$}\", prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -502,7 +502,7 @@ LL +     println!(\"{local_i32:.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:89:5\n+  --> $DIR/uninlined_format_args.rs:88:5\n    |\n LL |     println!(\"{local_i32:.p$}\", p = prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -514,7 +514,7 @@ LL +     println!(\"{local_i32:.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:90:5\n+  --> $DIR/uninlined_format_args.rs:89:5\n    |\n LL |     println!(\"{:0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -526,7 +526,7 @@ LL +     println!(\"{val:val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:91:5\n+  --> $DIR/uninlined_format_args.rs:90:5\n    |\n LL |     println!(\"{0:0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -538,7 +538,7 @@ LL +     println!(\"{val:val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:92:5\n+  --> $DIR/uninlined_format_args.rs:91:5\n    |\n LL |     println!(\"{:0$.0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -550,7 +550,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:93:5\n+  --> $DIR/uninlined_format_args.rs:92:5\n    |\n LL |     println!(\"{0:0$.0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -562,7 +562,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:94:5\n+  --> $DIR/uninlined_format_args.rs:93:5\n    |\n LL |     println!(\"{0:0$.v$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -574,7 +574,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:95:5\n+  --> $DIR/uninlined_format_args.rs:94:5\n    |\n LL |     println!(\"{0:v$.0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -586,7 +586,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:96:5\n+  --> $DIR/uninlined_format_args.rs:95:5\n    |\n LL |     println!(\"{v:0$.0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -598,7 +598,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:97:5\n+  --> $DIR/uninlined_format_args.rs:96:5\n    |\n LL |     println!(\"{v:v$.0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -610,7 +610,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:98:5\n+  --> $DIR/uninlined_format_args.rs:97:5\n    |\n LL |     println!(\"{v:0$.v$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -622,7 +622,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:99:5\n+  --> $DIR/uninlined_format_args.rs:98:5\n    |\n LL |     println!(\"{v:v$.v$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -634,7 +634,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:100:5\n+  --> $DIR/uninlined_format_args.rs:99:5\n    |\n LL |     println!(\"{:0$}\", width);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -646,7 +646,7 @@ LL +     println!(\"{width:width$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:101:5\n+  --> $DIR/uninlined_format_args.rs:100:5\n    |\n LL |     println!(\"{:1$}\", local_i32, width);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -658,7 +658,7 @@ LL +     println!(\"{local_i32:width$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:102:5\n+  --> $DIR/uninlined_format_args.rs:101:5\n    |\n LL |     println!(\"{:w$}\", w = width);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -670,7 +670,7 @@ LL +     println!(\"{width:width$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:103:5\n+  --> $DIR/uninlined_format_args.rs:102:5\n    |\n LL |     println!(\"{:w$}\", local_i32, w = width);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -682,7 +682,7 @@ LL +     println!(\"{local_i32:width$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:104:5\n+  --> $DIR/uninlined_format_args.rs:103:5\n    |\n LL |     println!(\"{:.0$}\", prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -694,7 +694,7 @@ LL +     println!(\"{prec:.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:105:5\n+  --> $DIR/uninlined_format_args.rs:104:5\n    |\n LL |     println!(\"{:.1$}\", local_i32, prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -706,7 +706,7 @@ LL +     println!(\"{local_i32:.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:106:5\n+  --> $DIR/uninlined_format_args.rs:105:5\n    |\n LL |     println!(\"{:.p$}\", p = prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -718,7 +718,7 @@ LL +     println!(\"{prec:.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:107:5\n+  --> $DIR/uninlined_format_args.rs:106:5\n    |\n LL |     println!(\"{:.p$}\", local_i32, p = prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -730,7 +730,7 @@ LL +     println!(\"{local_i32:.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:108:5\n+  --> $DIR/uninlined_format_args.rs:107:5\n    |\n LL |     println!(\"{:0$.1$}\", width, prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -742,7 +742,7 @@ LL +     println!(\"{width:width$.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:109:5\n+  --> $DIR/uninlined_format_args.rs:108:5\n    |\n LL |     println!(\"{:0$.w$}\", width, w = prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -754,7 +754,7 @@ LL +     println!(\"{width:width$.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:110:5\n+  --> $DIR/uninlined_format_args.rs:109:5\n    |\n LL |     println!(\"{:1$.2$}\", local_f64, width, prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -766,7 +766,7 @@ LL +     println!(\"{local_f64:width$.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:111:5\n+  --> $DIR/uninlined_format_args.rs:110:5\n    |\n LL |     println!(\"{:1$.2$} {0} {1} {2}\", local_f64, width, prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -778,7 +778,7 @@ LL +     println!(\"{local_f64:width$.prec$} {local_f64} {width} {prec}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:112:5\n+  --> $DIR/uninlined_format_args.rs:111:5\n    |\n LL | /     println!(\n LL | |         \"{0:1$.2$} {0:2$.1$} {1:0$.2$} {1:2$.0$} {2:0$.1$} {2:1$.0$}\",\n@@ -787,7 +787,7 @@ LL | |     );\n    | |_____^\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:123:5\n+  --> $DIR/uninlined_format_args.rs:122:5\n    |\n LL |     println!(\"Width = {}, value with width = {:0$}\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -799,7 +799,7 @@ LL +     println!(\"Width = {local_i32}, value with width = {local_f64:local_i32$\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:124:5\n+  --> $DIR/uninlined_format_args.rs:123:5\n    |\n LL |     println!(\"{:w$.p$}\", local_i32, w = width, p = prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -811,7 +811,7 @@ LL +     println!(\"{local_i32:width$.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:125:5\n+  --> $DIR/uninlined_format_args.rs:124:5\n    |\n LL |     println!(\"{:w$.p$}\", w = width, p = prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -823,7 +823,7 @@ LL +     println!(\"{width:width$.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:126:20\n+  --> $DIR/uninlined_format_args.rs:125:20\n    |\n LL |     println!(\"{}\", format!(\"{}\", local_i32));\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -835,7 +835,7 @@ LL +     println!(\"{}\", format!(\"{local_i32}\"));\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:144:5\n+  --> $DIR/uninlined_format_args.rs:143:5\n    |\n LL | /     println!(\n LL | |         \"{}\",\n@@ -845,7 +845,7 @@ LL | |     );\n    | |_____^\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:149:5\n+  --> $DIR/uninlined_format_args.rs:148:5\n    |\n LL |     println!(\"{}\", /* comment with a comma , in it */ val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -857,7 +857,7 @@ LL +     println!(\"{val}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:155:9\n+  --> $DIR/uninlined_format_args.rs:154:9\n    |\n LL |         panic!(\"p1 {}\", local_i32);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -869,7 +869,7 @@ LL +         panic!(\"p1 {local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:158:9\n+  --> $DIR/uninlined_format_args.rs:157:9\n    |\n LL |         panic!(\"p2 {0}\", local_i32);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -881,7 +881,7 @@ LL +         panic!(\"p2 {local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:161:9\n+  --> $DIR/uninlined_format_args.rs:160:9\n    |\n LL |         panic!(\"p3 {local_i32}\", local_i32 = local_i32);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -893,7 +893,7 @@ LL +         panic!(\"p3 {local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:181:5\n+  --> $DIR/uninlined_format_args.rs:180:5\n    |\n LL |     println!(\"expand='{}'\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "ddeda795f81793e8d70d7109a16c958a4821f7f0", "filename": "tests/ui/unnecessary_to_owned.fixed", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funnecessary_to_owned.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funnecessary_to_owned.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_to_owned.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -2,7 +2,6 @@\n \n #![allow(clippy::needless_borrow, clippy::ptr_arg)]\n #![warn(clippy::unnecessary_to_owned)]\n-#![feature(custom_inner_attributes)]\n \n use std::borrow::Cow;\n use std::ffi::{CStr, CString, OsStr, OsString};\n@@ -215,14 +214,14 @@ fn get_file_path(_file_type: &FileType) -> Result<std::path::PathBuf, std::io::E\n \n fn require_string(_: &String) {}\n \n+#[clippy::msrv = \"1.35\"]\n fn _msrv_1_35() {\n-    #![clippy::msrv = \"1.35\"]\n     // `copied` was stabilized in 1.36, so clippy should use `cloned`.\n     let _ = &[\"x\"][..].iter().cloned();\n }\n \n+#[clippy::msrv = \"1.36\"]\n fn _msrv_1_36() {\n-    #![clippy::msrv = \"1.36\"]\n     let _ = &[\"x\"][..].iter().copied();\n }\n "}, {"sha": "95d2576733cd75ea8e42bf0ea127fb8983f7e451", "filename": "tests/ui/unnecessary_to_owned.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_to_owned.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -2,7 +2,6 @@\n \n #![allow(clippy::needless_borrow, clippy::ptr_arg)]\n #![warn(clippy::unnecessary_to_owned)]\n-#![feature(custom_inner_attributes)]\n \n use std::borrow::Cow;\n use std::ffi::{CStr, CString, OsStr, OsString};\n@@ -215,14 +214,14 @@ fn get_file_path(_file_type: &FileType) -> Result<std::path::PathBuf, std::io::E\n \n fn require_string(_: &String) {}\n \n+#[clippy::msrv = \"1.35\"]\n fn _msrv_1_35() {\n-    #![clippy::msrv = \"1.35\"]\n     // `copied` was stabilized in 1.36, so clippy should use `cloned`.\n     let _ = &[\"x\"][..].to_vec().into_iter();\n }\n \n+#[clippy::msrv = \"1.36\"]\n fn _msrv_1_36() {\n-    #![clippy::msrv = \"1.36\"]\n     let _ = &[\"x\"][..].to_vec().into_iter();\n }\n "}, {"sha": "4918fe35598602f8c3b19eb45c1b6f16c2053d48", "filename": "tests/ui/unnecessary_to_owned.stderr", "status": "modified", "additions": 84, "deletions": 84, "changes": 168, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funnecessary_to_owned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funnecessary_to_owned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_to_owned.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,482 +1,482 @@\n error: redundant clone\n-  --> $DIR/unnecessary_to_owned.rs:151:64\n+  --> $DIR/unnecessary_to_owned.rs:150:64\n    |\n LL |     require_c_str(&CString::from_vec_with_nul(vec![0]).unwrap().to_owned());\n    |                                                                ^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/unnecessary_to_owned.rs:151:20\n+  --> $DIR/unnecessary_to_owned.rs:150:20\n    |\n LL |     require_c_str(&CString::from_vec_with_nul(vec![0]).unwrap().to_owned());\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: `-D clippy::redundant-clone` implied by `-D warnings`\n \n error: redundant clone\n-  --> $DIR/unnecessary_to_owned.rs:152:40\n+  --> $DIR/unnecessary_to_owned.rs:151:40\n    |\n LL |     require_os_str(&OsString::from(\"x\").to_os_string());\n    |                                        ^^^^^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/unnecessary_to_owned.rs:152:21\n+  --> $DIR/unnecessary_to_owned.rs:151:21\n    |\n LL |     require_os_str(&OsString::from(\"x\").to_os_string());\n    |                     ^^^^^^^^^^^^^^^^^^^\n \n error: redundant clone\n-  --> $DIR/unnecessary_to_owned.rs:153:48\n+  --> $DIR/unnecessary_to_owned.rs:152:48\n    |\n LL |     require_path(&std::path::PathBuf::from(\"x\").to_path_buf());\n    |                                                ^^^^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/unnecessary_to_owned.rs:153:19\n+  --> $DIR/unnecessary_to_owned.rs:152:19\n    |\n LL |     require_path(&std::path::PathBuf::from(\"x\").to_path_buf());\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: redundant clone\n-  --> $DIR/unnecessary_to_owned.rs:154:35\n+  --> $DIR/unnecessary_to_owned.rs:153:35\n    |\n LL |     require_str(&String::from(\"x\").to_string());\n    |                                   ^^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/unnecessary_to_owned.rs:154:18\n+  --> $DIR/unnecessary_to_owned.rs:153:18\n    |\n LL |     require_str(&String::from(\"x\").to_string());\n    |                  ^^^^^^^^^^^^^^^^^\n \n error: redundant clone\n-  --> $DIR/unnecessary_to_owned.rs:155:39\n+  --> $DIR/unnecessary_to_owned.rs:154:39\n    |\n LL |     require_slice(&[String::from(\"x\")].to_owned());\n    |                                       ^^^^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/unnecessary_to_owned.rs:155:20\n+  --> $DIR/unnecessary_to_owned.rs:154:20\n    |\n LL |     require_slice(&[String::from(\"x\")].to_owned());\n    |                    ^^^^^^^^^^^^^^^^^^^\n \n error: unnecessary use of `into_owned`\n-  --> $DIR/unnecessary_to_owned.rs:60:36\n+  --> $DIR/unnecessary_to_owned.rs:59:36\n    |\n LL |     require_c_str(&Cow::from(c_str).into_owned());\n    |                                    ^^^^^^^^^^^^^ help: remove this\n    |\n    = note: `-D clippy::unnecessary-to-owned` implied by `-D warnings`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:61:19\n+  --> $DIR/unnecessary_to_owned.rs:60:19\n    |\n LL |     require_c_str(&c_str.to_owned());\n    |                   ^^^^^^^^^^^^^^^^^ help: use: `c_str`\n \n error: unnecessary use of `to_os_string`\n-  --> $DIR/unnecessary_to_owned.rs:63:20\n+  --> $DIR/unnecessary_to_owned.rs:62:20\n    |\n LL |     require_os_str(&os_str.to_os_string());\n    |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `os_str`\n \n error: unnecessary use of `into_owned`\n-  --> $DIR/unnecessary_to_owned.rs:64:38\n+  --> $DIR/unnecessary_to_owned.rs:63:38\n    |\n LL |     require_os_str(&Cow::from(os_str).into_owned());\n    |                                      ^^^^^^^^^^^^^ help: remove this\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:65:20\n+  --> $DIR/unnecessary_to_owned.rs:64:20\n    |\n LL |     require_os_str(&os_str.to_owned());\n    |                    ^^^^^^^^^^^^^^^^^^ help: use: `os_str`\n \n error: unnecessary use of `to_path_buf`\n-  --> $DIR/unnecessary_to_owned.rs:67:18\n+  --> $DIR/unnecessary_to_owned.rs:66:18\n    |\n LL |     require_path(&path.to_path_buf());\n    |                  ^^^^^^^^^^^^^^^^^^^ help: use: `path`\n \n error: unnecessary use of `into_owned`\n-  --> $DIR/unnecessary_to_owned.rs:68:34\n+  --> $DIR/unnecessary_to_owned.rs:67:34\n    |\n LL |     require_path(&Cow::from(path).into_owned());\n    |                                  ^^^^^^^^^^^^^ help: remove this\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:69:18\n+  --> $DIR/unnecessary_to_owned.rs:68:18\n    |\n LL |     require_path(&path.to_owned());\n    |                  ^^^^^^^^^^^^^^^^ help: use: `path`\n \n error: unnecessary use of `to_string`\n-  --> $DIR/unnecessary_to_owned.rs:71:17\n+  --> $DIR/unnecessary_to_owned.rs:70:17\n    |\n LL |     require_str(&s.to_string());\n    |                 ^^^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `into_owned`\n-  --> $DIR/unnecessary_to_owned.rs:72:30\n+  --> $DIR/unnecessary_to_owned.rs:71:30\n    |\n LL |     require_str(&Cow::from(s).into_owned());\n    |                              ^^^^^^^^^^^^^ help: remove this\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:73:17\n+  --> $DIR/unnecessary_to_owned.rs:72:17\n    |\n LL |     require_str(&s.to_owned());\n    |                 ^^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_string`\n-  --> $DIR/unnecessary_to_owned.rs:74:17\n+  --> $DIR/unnecessary_to_owned.rs:73:17\n    |\n LL |     require_str(&x_ref.to_string());\n    |                 ^^^^^^^^^^^^^^^^^^ help: use: `x_ref.as_ref()`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:76:19\n+  --> $DIR/unnecessary_to_owned.rs:75:19\n    |\n LL |     require_slice(&slice.to_vec());\n    |                   ^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `into_owned`\n-  --> $DIR/unnecessary_to_owned.rs:77:36\n+  --> $DIR/unnecessary_to_owned.rs:76:36\n    |\n LL |     require_slice(&Cow::from(slice).into_owned());\n    |                                    ^^^^^^^^^^^^^ help: remove this\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:78:19\n+  --> $DIR/unnecessary_to_owned.rs:77:19\n    |\n LL |     require_slice(&array.to_owned());\n    |                   ^^^^^^^^^^^^^^^^^ help: use: `array.as_ref()`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:79:19\n+  --> $DIR/unnecessary_to_owned.rs:78:19\n    |\n LL |     require_slice(&array_ref.to_owned());\n    |                   ^^^^^^^^^^^^^^^^^^^^^ help: use: `array_ref.as_ref()`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:80:19\n+  --> $DIR/unnecessary_to_owned.rs:79:19\n    |\n LL |     require_slice(&slice.to_owned());\n    |                   ^^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `into_owned`\n-  --> $DIR/unnecessary_to_owned.rs:83:42\n+  --> $DIR/unnecessary_to_owned.rs:82:42\n    |\n LL |     require_x(&Cow::<X>::Owned(x.clone()).into_owned());\n    |                                          ^^^^^^^^^^^^^ help: remove this\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:86:25\n+  --> $DIR/unnecessary_to_owned.rs:85:25\n    |\n LL |     require_deref_c_str(c_str.to_owned());\n    |                         ^^^^^^^^^^^^^^^^ help: use: `c_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:87:26\n+  --> $DIR/unnecessary_to_owned.rs:86:26\n    |\n LL |     require_deref_os_str(os_str.to_owned());\n    |                          ^^^^^^^^^^^^^^^^^ help: use: `os_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:88:24\n+  --> $DIR/unnecessary_to_owned.rs:87:24\n    |\n LL |     require_deref_path(path.to_owned());\n    |                        ^^^^^^^^^^^^^^^ help: use: `path`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:89:23\n+  --> $DIR/unnecessary_to_owned.rs:88:23\n    |\n LL |     require_deref_str(s.to_owned());\n    |                       ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:90:25\n+  --> $DIR/unnecessary_to_owned.rs:89:25\n    |\n LL |     require_deref_slice(slice.to_owned());\n    |                         ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:92:30\n+  --> $DIR/unnecessary_to_owned.rs:91:30\n    |\n LL |     require_impl_deref_c_str(c_str.to_owned());\n    |                              ^^^^^^^^^^^^^^^^ help: use: `c_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:93:31\n+  --> $DIR/unnecessary_to_owned.rs:92:31\n    |\n LL |     require_impl_deref_os_str(os_str.to_owned());\n    |                               ^^^^^^^^^^^^^^^^^ help: use: `os_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:94:29\n+  --> $DIR/unnecessary_to_owned.rs:93:29\n    |\n LL |     require_impl_deref_path(path.to_owned());\n    |                             ^^^^^^^^^^^^^^^ help: use: `path`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:95:28\n+  --> $DIR/unnecessary_to_owned.rs:94:28\n    |\n LL |     require_impl_deref_str(s.to_owned());\n    |                            ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:96:30\n+  --> $DIR/unnecessary_to_owned.rs:95:30\n    |\n LL |     require_impl_deref_slice(slice.to_owned());\n    |                              ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:98:29\n+  --> $DIR/unnecessary_to_owned.rs:97:29\n    |\n LL |     require_deref_str_slice(s.to_owned(), slice.to_owned());\n    |                             ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:98:43\n+  --> $DIR/unnecessary_to_owned.rs:97:43\n    |\n LL |     require_deref_str_slice(s.to_owned(), slice.to_owned());\n    |                                           ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:99:29\n+  --> $DIR/unnecessary_to_owned.rs:98:29\n    |\n LL |     require_deref_slice_str(slice.to_owned(), s.to_owned());\n    |                             ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:99:47\n+  --> $DIR/unnecessary_to_owned.rs:98:47\n    |\n LL |     require_deref_slice_str(slice.to_owned(), s.to_owned());\n    |                                               ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:101:26\n+  --> $DIR/unnecessary_to_owned.rs:100:26\n    |\n LL |     require_as_ref_c_str(c_str.to_owned());\n    |                          ^^^^^^^^^^^^^^^^ help: use: `c_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:102:27\n+  --> $DIR/unnecessary_to_owned.rs:101:27\n    |\n LL |     require_as_ref_os_str(os_str.to_owned());\n    |                           ^^^^^^^^^^^^^^^^^ help: use: `os_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:103:25\n+  --> $DIR/unnecessary_to_owned.rs:102:25\n    |\n LL |     require_as_ref_path(path.to_owned());\n    |                         ^^^^^^^^^^^^^^^ help: use: `path`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:104:24\n+  --> $DIR/unnecessary_to_owned.rs:103:24\n    |\n LL |     require_as_ref_str(s.to_owned());\n    |                        ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:105:24\n+  --> $DIR/unnecessary_to_owned.rs:104:24\n    |\n LL |     require_as_ref_str(x.to_owned());\n    |                        ^^^^^^^^^^^^ help: use: `&x`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:106:26\n+  --> $DIR/unnecessary_to_owned.rs:105:26\n    |\n LL |     require_as_ref_slice(array.to_owned());\n    |                          ^^^^^^^^^^^^^^^^ help: use: `array`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:107:26\n+  --> $DIR/unnecessary_to_owned.rs:106:26\n    |\n LL |     require_as_ref_slice(array_ref.to_owned());\n    |                          ^^^^^^^^^^^^^^^^^^^^ help: use: `array_ref`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:108:26\n+  --> $DIR/unnecessary_to_owned.rs:107:26\n    |\n LL |     require_as_ref_slice(slice.to_owned());\n    |                          ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:110:31\n+  --> $DIR/unnecessary_to_owned.rs:109:31\n    |\n LL |     require_impl_as_ref_c_str(c_str.to_owned());\n    |                               ^^^^^^^^^^^^^^^^ help: use: `c_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:111:32\n+  --> $DIR/unnecessary_to_owned.rs:110:32\n    |\n LL |     require_impl_as_ref_os_str(os_str.to_owned());\n    |                                ^^^^^^^^^^^^^^^^^ help: use: `os_str`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:112:30\n+  --> $DIR/unnecessary_to_owned.rs:111:30\n    |\n LL |     require_impl_as_ref_path(path.to_owned());\n    |                              ^^^^^^^^^^^^^^^ help: use: `path`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:113:29\n+  --> $DIR/unnecessary_to_owned.rs:112:29\n    |\n LL |     require_impl_as_ref_str(s.to_owned());\n    |                             ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:114:29\n+  --> $DIR/unnecessary_to_owned.rs:113:29\n    |\n LL |     require_impl_as_ref_str(x.to_owned());\n    |                             ^^^^^^^^^^^^ help: use: `&x`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:115:31\n+  --> $DIR/unnecessary_to_owned.rs:114:31\n    |\n LL |     require_impl_as_ref_slice(array.to_owned());\n    |                               ^^^^^^^^^^^^^^^^ help: use: `array`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:116:31\n+  --> $DIR/unnecessary_to_owned.rs:115:31\n    |\n LL |     require_impl_as_ref_slice(array_ref.to_owned());\n    |                               ^^^^^^^^^^^^^^^^^^^^ help: use: `array_ref`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:117:31\n+  --> $DIR/unnecessary_to_owned.rs:116:31\n    |\n LL |     require_impl_as_ref_slice(slice.to_owned());\n    |                               ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:119:30\n+  --> $DIR/unnecessary_to_owned.rs:118:30\n    |\n LL |     require_as_ref_str_slice(s.to_owned(), array.to_owned());\n    |                              ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:119:44\n+  --> $DIR/unnecessary_to_owned.rs:118:44\n    |\n LL |     require_as_ref_str_slice(s.to_owned(), array.to_owned());\n    |                                            ^^^^^^^^^^^^^^^^ help: use: `array`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:120:30\n+  --> $DIR/unnecessary_to_owned.rs:119:30\n    |\n LL |     require_as_ref_str_slice(s.to_owned(), array_ref.to_owned());\n    |                              ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:120:44\n+  --> $DIR/unnecessary_to_owned.rs:119:44\n    |\n LL |     require_as_ref_str_slice(s.to_owned(), array_ref.to_owned());\n    |                                            ^^^^^^^^^^^^^^^^^^^^ help: use: `array_ref`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:121:30\n+  --> $DIR/unnecessary_to_owned.rs:120:30\n    |\n LL |     require_as_ref_str_slice(s.to_owned(), slice.to_owned());\n    |                              ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:121:44\n+  --> $DIR/unnecessary_to_owned.rs:120:44\n    |\n LL |     require_as_ref_str_slice(s.to_owned(), slice.to_owned());\n    |                                            ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:122:30\n+  --> $DIR/unnecessary_to_owned.rs:121:30\n    |\n LL |     require_as_ref_slice_str(array.to_owned(), s.to_owned());\n    |                              ^^^^^^^^^^^^^^^^ help: use: `array`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:122:48\n+  --> $DIR/unnecessary_to_owned.rs:121:48\n    |\n LL |     require_as_ref_slice_str(array.to_owned(), s.to_owned());\n    |                                                ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:123:30\n+  --> $DIR/unnecessary_to_owned.rs:122:30\n    |\n LL |     require_as_ref_slice_str(array_ref.to_owned(), s.to_owned());\n    |                              ^^^^^^^^^^^^^^^^^^^^ help: use: `array_ref`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:123:52\n+  --> $DIR/unnecessary_to_owned.rs:122:52\n    |\n LL |     require_as_ref_slice_str(array_ref.to_owned(), s.to_owned());\n    |                                                    ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:124:30\n+  --> $DIR/unnecessary_to_owned.rs:123:30\n    |\n LL |     require_as_ref_slice_str(slice.to_owned(), s.to_owned());\n    |                              ^^^^^^^^^^^^^^^^ help: use: `slice`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:124:48\n+  --> $DIR/unnecessary_to_owned.rs:123:48\n    |\n LL |     require_as_ref_slice_str(slice.to_owned(), s.to_owned());\n    |                                                ^^^^^^^^^^^^ help: use: `s`\n \n error: unnecessary use of `to_string`\n-  --> $DIR/unnecessary_to_owned.rs:126:20\n+  --> $DIR/unnecessary_to_owned.rs:125:20\n    |\n LL |     let _ = x.join(&x_ref.to_string());\n    |                    ^^^^^^^^^^^^^^^^^^ help: use: `x_ref`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:128:13\n+  --> $DIR/unnecessary_to_owned.rs:127:13\n    |\n LL |     let _ = slice.to_vec().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `slice.iter().copied()`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:129:13\n+  --> $DIR/unnecessary_to_owned.rs:128:13\n    |\n LL |     let _ = slice.to_owned().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `slice.iter().copied()`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:130:13\n+  --> $DIR/unnecessary_to_owned.rs:129:13\n    |\n LL |     let _ = [std::path::PathBuf::new()][..].to_vec().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[std::path::PathBuf::new()][..].iter().cloned()`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:131:13\n+  --> $DIR/unnecessary_to_owned.rs:130:13\n    |\n LL |     let _ = [std::path::PathBuf::new()][..].to_owned().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[std::path::PathBuf::new()][..].iter().cloned()`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:133:13\n+  --> $DIR/unnecessary_to_owned.rs:132:13\n    |\n LL |     let _ = IntoIterator::into_iter(slice.to_vec());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `slice.iter().copied()`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:134:13\n+  --> $DIR/unnecessary_to_owned.rs:133:13\n    |\n LL |     let _ = IntoIterator::into_iter(slice.to_owned());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `slice.iter().copied()`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:135:13\n+  --> $DIR/unnecessary_to_owned.rs:134:13\n    |\n LL |     let _ = IntoIterator::into_iter([std::path::PathBuf::new()][..].to_vec());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[std::path::PathBuf::new()][..].iter().cloned()`\n \n error: unnecessary use of `to_owned`\n-  --> $DIR/unnecessary_to_owned.rs:136:13\n+  --> $DIR/unnecessary_to_owned.rs:135:13\n    |\n LL |     let _ = IntoIterator::into_iter([std::path::PathBuf::new()][..].to_owned());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[std::path::PathBuf::new()][..].iter().cloned()`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:198:14\n+  --> $DIR/unnecessary_to_owned.rs:197:14\n    |\n LL |     for t in file_types.to_vec() {\n    |              ^^^^^^^^^^^^^^^^^^^\n@@ -492,25 +492,25 @@ LL +         let path = match get_file_path(t) {\n    |\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:221:14\n+  --> $DIR/unnecessary_to_owned.rs:220:14\n    |\n LL |     let _ = &[\"x\"][..].to_vec().into_iter();\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[\"x\"][..].iter().cloned()`\n \n error: unnecessary use of `to_vec`\n-  --> $DIR/unnecessary_to_owned.rs:226:14\n+  --> $DIR/unnecessary_to_owned.rs:225:14\n    |\n LL |     let _ = &[\"x\"][..].to_vec().into_iter();\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `[\"x\"][..].iter().copied()`\n \n error: unnecessary use of `to_string`\n-  --> $DIR/unnecessary_to_owned.rs:273:24\n+  --> $DIR/unnecessary_to_owned.rs:272:24\n    |\n LL |         Box::new(build(y.to_string()))\n    |                        ^^^^^^^^^^^^^ help: use: `y`\n \n error: unnecessary use of `to_string`\n-  --> $DIR/unnecessary_to_owned.rs:381:12\n+  --> $DIR/unnecessary_to_owned.rs:380:12\n    |\n LL |         id(\"abc\".to_string())\n    |            ^^^^^^^^^^^^^^^^^ help: use: `\"abc\"`"}, {"sha": "0a8e7b34dfa4fcdd622b742c45b94a1b3d7ae939", "filename": "tests/ui/unnested_or_patterns.fixed", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funnested_or_patterns.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funnested_or_patterns.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnested_or_patterns.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![feature(box_patterns, custom_inner_attributes)]\n+#![feature(box_patterns)]\n #![warn(clippy::unnested_or_patterns)]\n #![allow(clippy::cognitive_complexity, clippy::match_ref_pats, clippy::upper_case_acronyms)]\n #![allow(unreachable_patterns, irrefutable_let_patterns, unused)]\n@@ -34,14 +34,12 @@ fn main() {\n     if let S { x: 0, y, .. } | S { y, x: 1 } = (S { x: 0, y: 1 }) {}\n }\n \n+#[clippy::msrv = \"1.52\"]\n fn msrv_1_52() {\n-    #![clippy::msrv = \"1.52\"]\n-\n     if let [1] | [52] = [0] {}\n }\n \n+#[clippy::msrv = \"1.53\"]\n fn msrv_1_53() {\n-    #![clippy::msrv = \"1.53\"]\n-\n     if let [1 | 53] = [0] {}\n }"}, {"sha": "2c454adfe89db0066ebd5df473c9c0c898005524", "filename": "tests/ui/unnested_or_patterns.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funnested_or_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funnested_or_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnested_or_patterns.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n \n-#![feature(box_patterns, custom_inner_attributes)]\n+#![feature(box_patterns)]\n #![warn(clippy::unnested_or_patterns)]\n #![allow(clippy::cognitive_complexity, clippy::match_ref_pats, clippy::upper_case_acronyms)]\n #![allow(unreachable_patterns, irrefutable_let_patterns, unused)]\n@@ -34,14 +34,12 @@ fn main() {\n     if let S { x: 0, y, .. } | S { y, x: 1 } = (S { x: 0, y: 1 }) {}\n }\n \n+#[clippy::msrv = \"1.52\"]\n fn msrv_1_52() {\n-    #![clippy::msrv = \"1.52\"]\n-\n     if let [1] | [52] = [0] {}\n }\n \n+#[clippy::msrv = \"1.53\"]\n fn msrv_1_53() {\n-    #![clippy::msrv = \"1.53\"]\n-\n     if let [1] | [53] = [0] {}\n }"}, {"sha": "a1f193db555ad12f26fc5729490ec59d454b5758", "filename": "tests/ui/unnested_or_patterns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funnested_or_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Funnested_or_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnested_or_patterns.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -176,7 +176,7 @@ LL |     if let S { x: 0 | 1, y } = (S { x: 0, y: 1 }) {}\n    |            ~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n-  --> $DIR/unnested_or_patterns.rs:46:12\n+  --> $DIR/unnested_or_patterns.rs:44:12\n    |\n LL |     if let [1] | [53] = [0] {}\n    |            ^^^^^^^^^^"}, {"sha": "0a6166571ebe38c3f5c4bab85661b346f9751937", "filename": "tests/ui/use_self.fixed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fuse_self.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fuse_self.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.fixed?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,7 +1,6 @@\n // run-rustfix\n // aux-build:proc_macro_derive.rs\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::use_self)]\n #![allow(dead_code, unreachable_code)]\n #![allow(\n@@ -619,9 +618,8 @@ mod issue6902 {\n     }\n }\n \n+#[clippy::msrv = \"1.36\"]\n fn msrv_1_36() {\n-    #![clippy::msrv = \"1.36\"]\n-\n     enum E {\n         A,\n     }\n@@ -635,9 +633,8 @@ fn msrv_1_36() {\n     }\n }\n \n+#[clippy::msrv = \"1.37\"]\n fn msrv_1_37() {\n-    #![clippy::msrv = \"1.37\"]\n-\n     enum E {\n         A,\n     }"}, {"sha": "39c2b431f7fb95323766b0ed75ce269494881637", "filename": "tests/ui/use_self.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.rs?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,7 +1,6 @@\n // run-rustfix\n // aux-build:proc_macro_derive.rs\n \n-#![feature(custom_inner_attributes)]\n #![warn(clippy::use_self)]\n #![allow(dead_code, unreachable_code)]\n #![allow(\n@@ -619,9 +618,8 @@ mod issue6902 {\n     }\n }\n \n+#[clippy::msrv = \"1.36\"]\n fn msrv_1_36() {\n-    #![clippy::msrv = \"1.36\"]\n-\n     enum E {\n         A,\n     }\n@@ -635,9 +633,8 @@ fn msrv_1_36() {\n     }\n }\n \n+#[clippy::msrv = \"1.37\"]\n fn msrv_1_37() {\n-    #![clippy::msrv = \"1.37\"]\n-\n     enum E {\n         A,\n     }"}, {"sha": "48364c40c3b26007ca5b0d6049d9fa8168df407d", "filename": "tests/ui/use_self.stderr", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fuse_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef99041f6522b47d718047fc106dbe55cd493b05/tests%2Fui%2Fuse_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.stderr?ref=ef99041f6522b47d718047fc106dbe55cd493b05", "patch": "@@ -1,253 +1,253 @@\n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:23:21\n+  --> $DIR/use_self.rs:22:21\n    |\n LL |         fn new() -> Foo {\n    |                     ^^^ help: use the applicable keyword: `Self`\n    |\n    = note: `-D clippy::use-self` implied by `-D warnings`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:24:13\n+  --> $DIR/use_self.rs:23:13\n    |\n LL |             Foo {}\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:26:22\n+  --> $DIR/use_self.rs:25:22\n    |\n LL |         fn test() -> Foo {\n    |                      ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:27:13\n+  --> $DIR/use_self.rs:26:13\n    |\n LL |             Foo::new()\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:32:25\n+  --> $DIR/use_self.rs:31:25\n    |\n LL |         fn default() -> Foo {\n    |                         ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:33:13\n+  --> $DIR/use_self.rs:32:13\n    |\n LL |             Foo::new()\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:98:24\n+  --> $DIR/use_self.rs:97:24\n    |\n LL |         fn bad(foos: &[Foo]) -> impl Iterator<Item = &Foo> {\n    |                        ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:98:55\n+  --> $DIR/use_self.rs:97:55\n    |\n LL |         fn bad(foos: &[Foo]) -> impl Iterator<Item = &Foo> {\n    |                                                       ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:113:13\n+  --> $DIR/use_self.rs:112:13\n    |\n LL |             TS(0)\n    |             ^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:148:29\n+  --> $DIR/use_self.rs:147:29\n    |\n LL |                 fn bar() -> Bar {\n    |                             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:149:21\n+  --> $DIR/use_self.rs:148:21\n    |\n LL |                     Bar { foo: Foo {} }\n    |                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:160:21\n+  --> $DIR/use_self.rs:159:21\n    |\n LL |         fn baz() -> Foo {\n    |                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:161:13\n+  --> $DIR/use_self.rs:160:13\n    |\n LL |             Foo {}\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:178:21\n+  --> $DIR/use_self.rs:177:21\n    |\n LL |             let _ = Enum::B(42);\n    |                     ^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:179:21\n+  --> $DIR/use_self.rs:178:21\n    |\n LL |             let _ = Enum::C { field: true };\n    |                     ^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:180:21\n+  --> $DIR/use_self.rs:179:21\n    |\n LL |             let _ = Enum::A;\n    |                     ^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:222:13\n+  --> $DIR/use_self.rs:221:13\n    |\n LL |             nested::A::fun_1();\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:223:13\n+  --> $DIR/use_self.rs:222:13\n    |\n LL |             nested::A::A;\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:225:13\n+  --> $DIR/use_self.rs:224:13\n    |\n LL |             nested::A {};\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:244:13\n+  --> $DIR/use_self.rs:243:13\n    |\n LL |             TestStruct::from_something()\n    |             ^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:258:25\n+  --> $DIR/use_self.rs:257:25\n    |\n LL |         async fn g() -> S {\n    |                         ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:259:13\n+  --> $DIR/use_self.rs:258:13\n    |\n LL |             S {}\n    |             ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:263:16\n+  --> $DIR/use_self.rs:262:16\n    |\n LL |             &p[S::A..S::B]\n    |                ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:263:22\n+  --> $DIR/use_self.rs:262:22\n    |\n LL |             &p[S::A..S::B]\n    |                      ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:286:29\n+  --> $DIR/use_self.rs:285:29\n    |\n LL |         fn foo(value: T) -> Foo<T> {\n    |                             ^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:287:13\n+  --> $DIR/use_self.rs:286:13\n    |\n LL |             Foo::<T> { value }\n    |             ^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:459:13\n+  --> $DIR/use_self.rs:458:13\n    |\n LL |             A::new::<submod::B>(submod::B {})\n    |             ^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:496:13\n+  --> $DIR/use_self.rs:495:13\n    |\n LL |             S2::new()\n    |             ^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:533:17\n+  --> $DIR/use_self.rs:532:17\n    |\n LL |                 Foo::Bar => unimplemented!(),\n    |                 ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:534:17\n+  --> $DIR/use_self.rs:533:17\n    |\n LL |                 Foo::Baz => unimplemented!(),\n    |                 ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:540:20\n+  --> $DIR/use_self.rs:539:20\n    |\n LL |             if let Foo::Bar = self {\n    |                    ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:564:17\n+  --> $DIR/use_self.rs:563:17\n    |\n LL |                 Something::Num(n) => *n,\n    |                 ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:565:17\n+  --> $DIR/use_self.rs:564:17\n    |\n LL |                 Something::TupleNums(n, _m) => *n,\n    |                 ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:566:17\n+  --> $DIR/use_self.rs:565:17\n    |\n LL |                 Something::StructNums { one, two: _ } => *one,\n    |                 ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:572:17\n+  --> $DIR/use_self.rs:571:17\n    |\n LL |                 crate::issue8845::Something::Num(n) => *n,\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:573:17\n+  --> $DIR/use_self.rs:572:17\n    |\n LL |                 crate::issue8845::Something::TupleNums(n, _m) => *n,\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:574:17\n+  --> $DIR/use_self.rs:573:17\n    |\n LL |                 crate::issue8845::Something::StructNums { one, two: _ } => *one,\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:590:17\n+  --> $DIR/use_self.rs:589:17\n    |\n LL |             let Foo(x) = self;\n    |                 ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:595:17\n+  --> $DIR/use_self.rs:594:17\n    |\n LL |             let crate::issue8845::Foo(x) = self;\n    |                 ^^^^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:602:17\n+  --> $DIR/use_self.rs:601:17\n    |\n LL |             let Bar { x, .. } = self;\n    |                 ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:607:17\n+  --> $DIR/use_self.rs:606:17\n    |\n LL |             let crate::issue8845::Bar { x, .. } = self;\n    |                 ^^^^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:648:17\n+  --> $DIR/use_self.rs:645:17\n    |\n LL |                 E::A => {},\n    |                 ^ help: use the applicable keyword: `Self`"}]}