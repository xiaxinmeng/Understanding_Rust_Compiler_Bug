{"sha": "559141c8279429e90a8b524301c7485d70ecfb4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1OTE0MWM4Mjc5NDI5ZTkwYThiNTI0MzAxYzc0ODVkNzBlY2ZiNGM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-11-23T16:14:41Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-11-23T16:14:41Z"}, "message": "Add missing examples to SocketAddrV6", "tree": {"sha": "6ced638a434d9e4db7c9fce19fa83f3be22e0704", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ced638a434d9e4db7c9fce19fa83f3be22e0704"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/559141c8279429e90a8b524301c7485d70ecfb4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/559141c8279429e90a8b524301c7485d70ecfb4c", "html_url": "https://github.com/rust-lang/rust/commit/559141c8279429e90a8b524301c7485d70ecfb4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/559141c8279429e90a8b524301c7485d70ecfb4c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fba8df2115141173ad60837f129f18e74424531", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fba8df2115141173ad60837f129f18e74424531", "html_url": "https://github.com/rust-lang/rust/commit/9fba8df2115141173ad60837f129f18e74424531"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "0aac95ac02e7a2e59da5a6172e9a3591008821a0", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/559141c8279429e90a8b524301c7485d70ecfb4c/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/559141c8279429e90a8b524301c7485d70ecfb4c/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=559141c8279429e90a8b524301c7485d70ecfb4c", "patch": "@@ -236,6 +236,14 @@ impl SocketAddrV4 {\n impl SocketAddrV6 {\n     /// Creates a new socket address from the ip/port/flowinfo/scope_id\n     /// components.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::{SocketAddrV6, Ipv6Addr};\n+    ///\n+    /// let socket = SocketAddrV6::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1), 8080, 0, 0);\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn new(ip: Ipv6Addr, port: u16, flowinfo: u32, scope_id: u32)\n                -> SocketAddrV6 {\n@@ -252,6 +260,15 @@ impl SocketAddrV6 {\n     }\n \n     /// Returns the IP address associated with this socket address.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::{SocketAddrV6, Ipv6Addr};\n+    ///\n+    /// let socket = SocketAddrV6::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1), 8080, 0, 0);\n+    /// assert_eq!(socket.ip(), &Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1));\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn ip(&self) -> &Ipv6Addr {\n         unsafe {\n@@ -260,44 +277,111 @@ impl SocketAddrV6 {\n     }\n \n     /// Change the IP address associated with this socket address.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::{SocketAddrV6, Ipv6Addr};\n+    ///\n+    /// let mut socket = SocketAddrV6::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1), 8080, 0, 0);\n+    /// socket.set_ip(Ipv6Addr::new(76, 45, 0, 0, 0, 0, 0, 0));\n+    /// assert_eq!(socket.ip(), &Ipv6Addr::new(76, 45, 0, 0, 0, 0, 0, 0));\n+    /// ```\n     #[stable(feature = \"sockaddr_setters\", since = \"1.9.0\")]\n     pub fn set_ip(&mut self, new_ip: Ipv6Addr) {\n         self.inner.sin6_addr = *new_ip.as_inner()\n     }\n \n     /// Returns the port number associated with this socket address.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::{SocketAddrV6, Ipv6Addr};\n+    ///\n+    /// let socket = SocketAddrV6::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1), 8080, 0, 0);\n+    /// assert_eq!(socket.port(), 8080);\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn port(&self) -> u16 {\n         ntoh(self.inner.sin6_port)\n     }\n \n     /// Change the port number associated with this socket address.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::{SocketAddrV6, Ipv6Addr};\n+    ///\n+    /// let mut socket = SocketAddrV6::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1), 8080, 0, 0);\n+    /// socket.set_port(4242);\n+    /// assert_eq!(socket.port(), 4242);\n+    /// ```\n     #[stable(feature = \"sockaddr_setters\", since = \"1.9.0\")]\n     pub fn set_port(&mut self, new_port: u16) {\n         self.inner.sin6_port = hton(new_port);\n     }\n \n     /// Returns the flow information associated with this address,\n     /// corresponding to the `sin6_flowinfo` field in C.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::{SocketAddrV6, Ipv6Addr};\n+    ///\n+    /// let socket = SocketAddrV6::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1), 8080, 10, 0);\n+    /// assert_eq!(socket.flowinfo(), 10);\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn flowinfo(&self) -> u32 {\n         self.inner.sin6_flowinfo\n     }\n \n     /// Change the flow information associated with this socket address.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::{SocketAddrV6, Ipv6Addr};\n+    ///\n+    /// let mut socket = SocketAddrV6::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1), 8080, 10, 0);\n+    /// socket.set_flowinfo(56);\n+    /// assert_eq!(socket.flowinfo(), 56);\n+    /// ```\n     #[stable(feature = \"sockaddr_setters\", since = \"1.9.0\")]\n     pub fn set_flowinfo(&mut self, new_flowinfo: u32) {\n         self.inner.sin6_flowinfo = new_flowinfo;\n     }\n \n     /// Returns the scope ID associated with this address,\n     /// corresponding to the `sin6_scope_id` field in C.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::{SocketAddrV6, Ipv6Addr};\n+    ///\n+    /// let socket = SocketAddrV6::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1), 8080, 0, 78);\n+    /// assert_eq!(socket.scope_id(), 78);\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn scope_id(&self) -> u32 {\n         self.inner.sin6_scope_id\n     }\n \n     /// Change the scope ID associated with this socket address.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::net::{SocketAddrV6, Ipv6Addr};\n+    ///\n+    /// let mut socket = SocketAddrV6::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1), 8080, 0, 78);\n+    /// socket.set_scope_id(42);\n+    /// assert_eq!(socket.scope_id(), 42);\n+    /// ```\n     #[stable(feature = \"sockaddr_setters\", since = \"1.9.0\")]\n     pub fn set_scope_id(&mut self, new_scope_id: u32) {\n         self.inner.sin6_scope_id = new_scope_id;"}]}