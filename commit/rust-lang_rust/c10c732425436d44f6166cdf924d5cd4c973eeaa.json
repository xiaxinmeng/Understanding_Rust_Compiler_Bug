{"sha": "c10c732425436d44f6166cdf924d5cd4c973eeaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMGM3MzI0MjU0MzZkNDRmNjE2NmNkZjkyNGQ1Y2Q0Yzk3M2VlYWE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-07-22T20:05:34Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-07-22T20:07:57Z"}, "message": "Simplify CompilerCalls impl", "tree": {"sha": "b9f7fd0413862bf3da5342e405848a6f311125e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9f7fd0413862bf3da5342e405848a6f311125e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c10c732425436d44f6166cdf924d5cd4c973eeaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c10c732425436d44f6166cdf924d5cd4c973eeaa", "html_url": "https://github.com/rust-lang/rust/commit/c10c732425436d44f6166cdf924d5cd4c973eeaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c10c732425436d44f6166cdf924d5cd4c973eeaa/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e8a5b399030c4ce6a2a16c3af3a528f26cec24f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e8a5b399030c4ce6a2a16c3af3a528f26cec24f", "html_url": "https://github.com/rust-lang/rust/commit/8e8a5b399030c4ce6a2a16c3af3a528f26cec24f"}], "stats": {"total": 34, "additions": 1, "deletions": 33}, "files": [{"sha": "b2a0f7aed4f1d0882b2670f9c02ae393fdead477", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 33, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c10c732425436d44f6166cdf924d5cd4c973eeaa/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c10c732425436d44f6166cdf924d5cd4c973eeaa/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=c10c732425436d44f6166cdf924d5cd4c973eeaa", "patch": "@@ -285,33 +285,11 @@ fn fmt_lines(changes: &mut ChangeSet, config: &Config) -> FormatReport {\n }\n \n struct RustFmtCalls {\n-    input_path: Option<PathBuf>,\n     write_mode: WriteMode,\n     config: Option<Box<config::Config>>,\n }\n \n impl<'a> CompilerCalls<'a> for RustFmtCalls {\n-    fn early_callback(&mut self,\n-                      _: &getopts::Matches,\n-                      _: &diagnostics::registry::Registry)\n-                      -> Compilation {\n-        Compilation::Continue\n-    }\n-\n-    fn some_input(&mut self,\n-                  input: Input,\n-                  input_path: Option<PathBuf>)\n-                  -> (Input, Option<PathBuf>) {\n-        match input_path {\n-            Some(ref ip) => self.input_path = Some(ip.clone()),\n-            _ => {\n-                // FIXME should handle string input and write to stdout or something\n-                panic!(\"No input path\");\n-            }\n-        }\n-        (input, input_path)\n-    }\n-\n     fn no_input(&mut self,\n                 _: &getopts::Matches,\n                 _: &rustc_config::Options,\n@@ -322,16 +300,6 @@ impl<'a> CompilerCalls<'a> for RustFmtCalls {\n         panic!(\"No input supplied to RustFmt\");\n     }\n \n-    fn late_callback(&mut self,\n-                     _: &getopts::Matches,\n-                     _: &Session,\n-                     _: &Input,\n-                     _: &Option<PathBuf>,\n-                     _: &Option<PathBuf>)\n-                     -> Compilation {\n-        Compilation::Continue\n-    }\n-\n     fn build_controller(&mut self, _: &Session) -> driver::CompileController<'a> {\n         let write_mode = self.write_mode;\n \n@@ -373,6 +341,6 @@ impl<'a> CompilerCalls<'a> for RustFmtCalls {\n // default_config is a string of toml data to be used to configure rustfmt.\n pub fn run(args: Vec<String>, write_mode: WriteMode, default_config: &str) {\n     let config = Some(Box::new(config::Config::from_toml(default_config)));\n-    let mut call_ctxt = RustFmtCalls { input_path: None, write_mode: write_mode, config: config };\n+    let mut call_ctxt = RustFmtCalls { write_mode: write_mode, config: config };\n     rustc_driver::run_compiler(&args, &mut call_ctxt);\n }"}]}