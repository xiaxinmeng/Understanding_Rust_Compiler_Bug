{"sha": "e578a536c703cd799b74f261e345121bd889be45", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NzhhNTM2YzcwM2NkNzk5Yjc0ZjI2MWUzNDUxMjFiZDg4OWJlNDU=", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-13T09:13:31Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-17T15:49:50Z"}, "message": "move derefs_to_slice to methods/utils.rs", "tree": {"sha": "54fe7423d6b331c3288579369c89f2b40a34b57c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54fe7423d6b331c3288579369c89f2b40a34b57c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e578a536c703cd799b74f261e345121bd889be45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e578a536c703cd799b74f261e345121bd889be45", "html_url": "https://github.com/rust-lang/rust/commit/e578a536c703cd799b74f261e345121bd889be45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e578a536c703cd799b74f261e345121bd889be45/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c07c046b317bf9a75b04e97c37396436351d80ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/c07c046b317bf9a75b04e97c37396436351d80ab", "html_url": "https://github.com/rust-lang/rust/commit/c07c046b317bf9a75b04e97c37396436351d80ab"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "3596aaa089b33a42eebd3b240638240fc741bef4", "filename": "clippy_lints/src/methods/utils.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/e578a536c703cd799b74f261e345121bd889be45/clippy_lints%2Fsrc%2Fmethods%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e578a536c703cd799b74f261e345121bd889be45/clippy_lints%2Fsrc%2Fmethods%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Futils.rs?ref=e578a536c703cd799b74f261e345121bd889be45", "patch": "@@ -0,0 +1,46 @@\n+use crate::utils::is_type_diagnostic_item;\n+use rustc_hir as hir;\n+use rustc_lint::LateContext;\n+use rustc_middle::ty;\n+use rustc_middle::ty::Ty;\n+use rustc_span::symbol::sym;\n+\n+pub fn derefs_to_slice<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    expr: &'tcx hir::Expr<'tcx>,\n+    ty: Ty<'tcx>,\n+) -> Option<&'tcx hir::Expr<'tcx>> {\n+    fn may_slice<'a>(cx: &LateContext<'a>, ty: Ty<'a>) -> bool {\n+        match ty.kind() {\n+            ty::Slice(_) => true,\n+            ty::Adt(def, _) if def.is_box() => may_slice(cx, ty.boxed_ty()),\n+            ty::Adt(..) => is_type_diagnostic_item(cx, ty, sym::vec_type),\n+            ty::Array(_, size) => size\n+                .try_eval_usize(cx.tcx, cx.param_env)\n+                .map_or(false, |size| size < 32),\n+            ty::Ref(_, inner, _) => may_slice(cx, inner),\n+            _ => false,\n+        }\n+    }\n+\n+    if let hir::ExprKind::MethodCall(ref path, _, ref args, _) = expr.kind {\n+        if path.ident.name == sym::iter && may_slice(cx, cx.typeck_results().expr_ty(&args[0])) {\n+            Some(&args[0])\n+        } else {\n+            None\n+        }\n+    } else {\n+        match ty.kind() {\n+            ty::Slice(_) => Some(expr),\n+            ty::Adt(def, _) if def.is_box() && may_slice(cx, ty.boxed_ty()) => Some(expr),\n+            ty::Ref(_, inner, _) => {\n+                if may_slice(cx, inner) {\n+                    Some(expr)\n+                } else {\n+                    None\n+                }\n+            },\n+            _ => None,\n+        }\n+    }\n+}"}]}