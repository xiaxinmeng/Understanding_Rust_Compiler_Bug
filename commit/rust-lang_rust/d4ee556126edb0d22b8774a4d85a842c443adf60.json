{"sha": "d4ee556126edb0d22b8774a4d85a842c443adf60", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0ZWU1NTYxMjZlZGIwZDIyYjg3NzRhNGQ4NWE4NDJjNDQzYWRmNjA=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-23T10:34:02Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-23T10:34:02Z"}, "message": "Follow naming scheme for \"frame\" methods", "tree": {"sha": "d750a8994d4e085038042da6454d2cf4378bc50e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d750a8994d4e085038042da6454d2cf4378bc50e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4ee556126edb0d22b8774a4d85a842c443adf60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4ee556126edb0d22b8774a4d85a842c443adf60", "html_url": "https://github.com/rust-lang/rust/commit/d4ee556126edb0d22b8774a4d85a842c443adf60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4ee556126edb0d22b8774a4d85a842c443adf60/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c57d1d256b84d3bd7f4a1d9613091bd9ec3ca02", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c57d1d256b84d3bd7f4a1d9613091bd9ec3ca02", "html_url": "https://github.com/rust-lang/rust/commit/2c57d1d256b84d3bd7f4a1d9613091bd9ec3ca02"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "132b753eb9a62dc92595556e7d95224b0ed9663e", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d4ee556126edb0d22b8774a4d85a842c443adf60/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ee556126edb0d22b8774a4d85a842c443adf60/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=d4ee556126edb0d22b8774a4d85a842c443adf60", "patch": "@@ -282,12 +282,12 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n         }\n     }\n \n-    pub fn monomorphize_in_frame<T: TypeFoldable<'tcx> + Subst<'tcx>>(\n+    pub(super) fn monomorphize<T: TypeFoldable<'tcx> + Subst<'tcx>>(\n         &self,\n         t: T,\n     ) -> EvalResult<'tcx, T> {\n         match self.stack.last() {\n-            Some(frame) => Ok(self.monomorphize(t, frame.instance.substs)),\n+            Some(frame) => Ok(self.monomorphize_with_substs(t, frame.instance.substs)),\n             None => if t.needs_subst() {\n                 err!(TooGeneric).into()\n             } else {\n@@ -296,7 +296,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n         }\n     }\n \n-    pub fn monomorphize<T: TypeFoldable<'tcx> + Subst<'tcx>>(\n+    fn monomorphize_with_substs<T: TypeFoldable<'tcx> + Subst<'tcx>>(\n         &self,\n         t: T,\n         substs: &'tcx Substs<'tcx>\n@@ -315,7 +315,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n         let cell = &frame.local_layouts[local];\n         if cell.get().is_none() {\n             let local_ty = frame.mir.local_decls[local].ty;\n-            let local_ty = self.monomorphize(local_ty, frame.instance.substs);\n+            let local_ty = self.monomorphize_with_substs(local_ty, frame.instance.substs);\n             let layout = self.layout_of(local_ty)?;\n             cell.set(Some(layout));\n         }"}, {"sha": "8741571342f83aff5e01e3700d028791d9d92a4e", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4ee556126edb0d22b8774a4d85a842c443adf60/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ee556126edb0d22b8774a4d85a842c443adf60/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=d4ee556126edb0d22b8774a4d85a842c443adf60", "patch": "@@ -508,7 +508,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n \n             Constant(ref constant) => {\n                 let layout = from_known_layout(layout, || {\n-                    let ty = self.monomorphize_in_frame(mir_op.ty(self.mir(), *self.tcx))?;\n+                    let ty = self.monomorphize(mir_op.ty(self.mir(), *self.tcx))?;\n                     self.layout_of(ty)\n                 })?;\n                 let op = self.const_value_to_op(*constant.literal)?;"}, {"sha": "25f3e4c1f771d80879409f9c6c0e9fe939659c0e", "filename": "src/librustc_mir/interpret/step.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4ee556126edb0d22b8774a4d85a842c443adf60/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4ee556126edb0d22b8774a4d85a842c443adf60/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fstep.rs?ref=d4ee556126edb0d22b8774a4d85a842c443adf60", "patch": "@@ -248,7 +248,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n             }\n \n             NullaryOp(mir::NullOp::SizeOf, ty) => {\n-                let ty = self.monomorphize_in_frame(ty)?;\n+                let ty = self.monomorphize(ty)?;\n                 let layout = self.layout_of(ty)?;\n                 assert!(!layout.is_unsized(),\n                         \"SizeOf nullary MIR operator called for unsized type\");\n@@ -260,7 +260,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n             }\n \n             Cast(kind, ref operand, cast_ty) => {\n-                debug_assert_eq!(self.monomorphize_in_frame(cast_ty)?, dest.layout.ty);\n+                debug_assert_eq!(self.monomorphize(cast_ty)?, dest.layout.ty);\n                 let src = self.eval_operand(operand, None)?;\n                 self.cast(src, kind, dest)?;\n             }"}]}