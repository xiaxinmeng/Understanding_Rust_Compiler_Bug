{"sha": "eb0cdc02e3b443fe119cb4957856a63dbd5923d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViMGNkYzAyZTNiNDQzZmUxMTljYjQ5NTc4NTZhNjNkYmQ1OTIzZDQ=", "commit": {"author": {"name": "Lenny222", "email": "github@kudling.de", "date": "2011-12-24T09:41:11Z"}, "committer": {"name": "Lenny222", "email": "github@kudling.de", "date": "2011-12-24T09:41:11Z"}, "message": "char: add is_lowercase(), is_uppercase()", "tree": {"sha": "9cf0ac2bce40110667e28b044566cbaea3a51524", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cf0ac2bce40110667e28b044566cbaea3a51524"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb0cdc02e3b443fe119cb4957856a63dbd5923d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb0cdc02e3b443fe119cb4957856a63dbd5923d4", "html_url": "https://github.com/rust-lang/rust/commit/eb0cdc02e3b443fe119cb4957856a63dbd5923d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb0cdc02e3b443fe119cb4957856a63dbd5923d4/comments", "author": null, "committer": null, "parents": [{"sha": "47271ab4c85ecc4b7c3f1c079f8bc221a5d7ca0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/47271ab4c85ecc4b7c3f1c079f8bc221a5d7ca0d", "html_url": "https://github.com/rust-lang/rust/commit/47271ab4c85ecc4b7c3f1c079f8bc221a5d7ca0d"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "05ca5a3c59e7b99691dd9e2e191a366a5295c8d4", "filename": "src/libcore/char.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/eb0cdc02e3b443fe119cb4957856a63dbd5923d4/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb0cdc02e3b443fe119cb4957856a63dbd5923d4/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=eb0cdc02e3b443fe119cb4957856a63dbd5923d4", "patch": "@@ -41,6 +41,26 @@ import is_alphabetic = unicode::derived_property::Alphabetic;\n import is_XID_start = unicode::derived_property::XID_Start;\n import is_XID_continue = unicode::derived_property::XID_Continue;\n \n+/*\n+Function: is_lowercase\n+\n+Indicates whether a character is in lower case, defined in terms of the\n+Unicode General Category 'Ll'.\n+*/\n+pure fn is_lowercase(c: char) -> bool {\n+    ret unicode::general_category::Ll(c);\n+}\n+\n+/*\n+Function: is_uppercase\n+\n+Indicates whether a character is in upper case, defined in terms of the\n+Unicode General Category 'Lu'.\n+*/\n+pure fn is_uppercase(c: char) -> bool {\n+    ret unicode::general_category::Lu(c);\n+}\n+\n /*\n Function: is_whitespace\n \n@@ -126,4 +146,4 @@ pure fn cmp(a: char, b: char) -> int {\n     ret  if b > a { -1 }\n     else if b < a { 1 }\n     else { 0 }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "1ed61f5632f0434125a04ac7579cfa2b4eac4c53", "filename": "src/test/stdtest/char.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/eb0cdc02e3b443fe119cb4957856a63dbd5923d4/src%2Ftest%2Fstdtest%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb0cdc02e3b443fe119cb4957856a63dbd5923d4/src%2Ftest%2Fstdtest%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fchar.rs?ref=eb0cdc02e3b443fe119cb4957856a63dbd5923d4", "patch": "@@ -3,6 +3,24 @@ import core::*;\n use std;\n import char;\n \n+#[test]\n+fn test_is_lowercase() {\n+    assert char::is_lowercase('a');\n+    assert char::is_lowercase('\u00f6');\n+    assert char::is_lowercase('\u00df');\n+    assert !char::is_lowercase('\u00dc');\n+    assert !char::is_lowercase('P');\n+}\n+\n+#[test]\n+fn test_is_uppercase() {\n+    assert !char::is_uppercase('h');\n+    assert !char::is_uppercase('\u00e4');\n+    assert !char::is_uppercase('\u00df');\n+    assert char::is_uppercase('\u00d6');\n+    assert char::is_uppercase('T');\n+}\n+\n #[test]\n fn test_is_whitespace() {\n     assert char::is_whitespace(' ');"}]}