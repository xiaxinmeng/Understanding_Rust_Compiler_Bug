{"sha": "4814fa488e44e641ff788dda9a07bbcc33a59560", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MTRmYTQ4OGU0NGU2NDFmZjc4OGRkYTlhMDdiYmNjMzNhNTk1NjA=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2017-01-30T06:39:03Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2017-01-30T06:39:03Z"}, "message": "doc: minor Option improvements", "tree": {"sha": "581ceacbd8792a6de0fee985fe790c8a9456810d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/581ceacbd8792a6de0fee985fe790c8a9456810d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4814fa488e44e641ff788dda9a07bbcc33a59560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4814fa488e44e641ff788dda9a07bbcc33a59560", "html_url": "https://github.com/rust-lang/rust/commit/4814fa488e44e641ff788dda9a07bbcc33a59560", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4814fa488e44e641ff788dda9a07bbcc33a59560/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45b273af4a48e9625749286049326abe4fce064c", "url": "https://api.github.com/repos/rust-lang/rust/commits/45b273af4a48e9625749286049326abe4fce064c", "html_url": "https://github.com/rust-lang/rust/commit/45b273af4a48e9625749286049326abe4fce064c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c4d7b2dcf96fb258f38a88754387d2e4cda4ba9c", "filename": "src/libcore/option.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4814fa488e44e641ff788dda9a07bbcc33a59560/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4814fa488e44e641ff788dda9a07bbcc33a59560/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=4814fa488e44e641ff788dda9a07bbcc33a59560", "patch": "@@ -60,7 +60,7 @@\n //! the optional owned box, [`Option`]`<`[`Box<T>`]`>`.\n //!\n //! The following example uses [`Option`] to create an optional box of\n-//! [`i32`]. Notice that in order to use the inner [`i32`] value first the\n+//! [`i32`]. Notice that in order to use the inner [`i32`] value first, the\n //! `check_optional` function needs to use pattern matching to\n //! determine whether the box has a value (i.e. it is [`Some(...)`][`Some`]) or\n //! not ([`None`]).\n@@ -74,8 +74,8 @@\n //!\n //! fn check_optional(optional: &Option<Box<i32>>) {\n //!     match *optional {\n-//!         Some(ref p) => println!(\"have value {}\", p),\n-//!         None => println!(\"have no value\"),\n+//!         Some(ref p) => println!(\"has value {}\", p),\n+//!         None => println!(\"has no value\"),\n //!     }\n //! }\n //! ```"}]}