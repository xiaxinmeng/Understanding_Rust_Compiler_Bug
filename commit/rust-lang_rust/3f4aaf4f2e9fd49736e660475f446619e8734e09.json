{"sha": "3f4aaf4f2e9fd49736e660475f446619e8734e09", "node_id": "C_kwDOAAsO6NoAKDNmNGFhZjRmMmU5ZmQ0OTczNmU2NjA0NzVmNDQ2NjE5ZTg3MzRlMDk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-09T22:29:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-09T22:29:56Z"}, "message": "Rollup merge of #91504 - cynecx:used_retain, r=nikic\n\n`#[used(linker)]` attribute\n\nSee https://github.com/dtolnay/linkme/issues/41#issuecomment-927255631.", "tree": {"sha": "ee6ff4aed191d3baab16454560fe605299af423c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee6ff4aed191d3baab16454560fe605299af423c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f4aaf4f2e9fd49736e660475f446619e8734e09", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiBEBkCRBK7hj4Ov3rIwAAKjYIAIYL7FgGxyMI2AxCzhE8j60M\ni30O1+lCuo+wMt3+ImiQXIJ831/aQX8f37Lw/oYuzn/L7/neK+2ckN3qlYlwaiSv\nPlmZ3W3cQLzgADkHhvfKsBonVWUAh+bRH7s0DFo0Oo3h1sVRmWYnrF6lewIN4UPB\niwhXkQrvTQm55QHEQwG5Kvz3/InjOl4dVX58+rvM6JUnrg5DqMkBXfCnJYXF/IAV\np2MmrzhQdTTuRg38RNAG3NfnWXXrXbc4JQo4WIEbsZ25RkYHUyJBqrCIM5pPYLST\nvl2XtqcrpnHauRu1n5NTvzDHMxk+sLkJm0FIaFJ5ihCk/krfrBALD38APf1kKCY=\n=z/Z+\n-----END PGP SIGNATURE-----\n", "payload": "tree ee6ff4aed191d3baab16454560fe605299af423c\nparent 9634559599537e334cbfa854446d048e6ebe5ee9\nparent 170593313a6ac2206107ec52a0d3bb9cc873a97c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1644445796 +0100\ncommitter GitHub <noreply@github.com> 1644445796 +0100\n\nRollup merge of #91504 - cynecx:used_retain, r=nikic\n\n`#[used(linker)]` attribute\n\nSee https://github.com/dtolnay/linkme/issues/41#issuecomment-927255631.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f4aaf4f2e9fd49736e660475f446619e8734e09", "html_url": "https://github.com/rust-lang/rust/commit/3f4aaf4f2e9fd49736e660475f446619e8734e09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f4aaf4f2e9fd49736e660475f446619e8734e09/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9634559599537e334cbfa854446d048e6ebe5ee9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9634559599537e334cbfa854446d048e6ebe5ee9", "html_url": "https://github.com/rust-lang/rust/commit/9634559599537e334cbfa854446d048e6ebe5ee9"}, {"sha": "170593313a6ac2206107ec52a0d3bb9cc873a97c", "url": "https://api.github.com/repos/rust-lang/rust/commits/170593313a6ac2206107ec52a0d3bb9cc873a97c", "html_url": "https://github.com/rust-lang/rust/commit/170593313a6ac2206107ec52a0d3bb9cc873a97c"}], "stats": {"total": 186, "additions": 182, "deletions": 4}, "files": [{"sha": "ddc2b88191bd0e8e032d05e1220579ec09071fe7", "filename": "compiler/rustc_codegen_gcc/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_codegen_gcc%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_codegen_gcc%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fconsts.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -144,7 +144,7 @@ impl<'gcc, 'tcx> StaticMethods for CodegenCx<'gcc, 'tcx> {\n             // TODO(antoyo): set link section.\n         }\n \n-        if attrs.flags.contains(CodegenFnAttrFlags::USED) {\n+        if attrs.flags.contains(CodegenFnAttrFlags::USED) || attrs.flags.contains(CodegenFnAttrFlags::USED_LINKER) {\n             self.add_used_global(global.to_rvalue());\n         }\n     }"}, {"sha": "6707de933522b4a569d77659125965981bb9cb9a", "filename": "compiler/rustc_codegen_llvm/src/consts.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -522,6 +522,9 @@ impl<'ll> StaticMethods for CodegenCx<'ll, '_> {\n             }\n \n             if attrs.flags.contains(CodegenFnAttrFlags::USED) {\n+                // `USED` and `USED_LINKER` can't be used together.\n+                assert!(!attrs.flags.contains(CodegenFnAttrFlags::USED_LINKER));\n+\n                 // The semantics of #[used] in Rust only require the symbol to make it into the\n                 // object file. It is explicitly allowed for the linker to strip the symbol if it\n                 // is dead. As such, use llvm.compiler.used instead of llvm.used.\n@@ -530,6 +533,12 @@ impl<'ll> StaticMethods for CodegenCx<'ll, '_> {\n                 // in some versions of the gold linker.\n                 self.add_compiler_used_global(g);\n             }\n+            if attrs.flags.contains(CodegenFnAttrFlags::USED_LINKER) {\n+                // `USED` and `USED_LINKER` can't be used together.\n+                assert!(!attrs.flags.contains(CodegenFnAttrFlags::USED));\n+\n+                self.add_used_global(g);\n+            }\n         }\n     }\n "}, {"sha": "0248d3235dfe35e474efd9e99a289b1c93d96e73", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -531,6 +531,8 @@ declare_features! (\n     ///\n     /// NOTE: A limited form of `union U { ... }` was accepted in 1.19.0.\n     (active, untagged_unions, \"1.13.0\", Some(55149), None),\n+    /// Allows using the `#[used(linker)]` (or `#[used(compiler)]`) attribute.\n+    (active, used_with_arg, \"1.60.0\", Some(93798), None),\n     /// Allows `extern \"wasm\" fn`\n     (active, wasm_abi, \"1.53.0\", Some(83788), None),\n     // !!!!    !!!!    !!!!    !!!!   !!!!    !!!!    !!!!    !!!!    !!!!    !!!!    !!!!"}, {"sha": "e1f645a62da57a39afc45fe834a843ff3b8b40d7", "filename": "compiler/rustc_feature/src/builtin_attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -324,7 +324,7 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     ungated!(export_name, Normal, template!(NameValueStr: \"name\"), FutureWarnPreceding),\n     ungated!(link_section, Normal, template!(NameValueStr: \"name\"), FutureWarnPreceding),\n     ungated!(no_mangle, Normal, template!(Word), WarnFollowing),\n-    ungated!(used, Normal, template!(Word), WarnFollowing),\n+    ungated!(used, Normal, template!(Word, List: \"compiler|linker\"), WarnFollowing),\n \n     // Limits:\n     ungated!(recursion_limit, CrateLevel, template!(NameValueStr: \"N\"), FutureWarnFollowing),"}, {"sha": "54eb2dc9e2890647b5f4652627c27e32e05a55b9", "filename": "compiler/rustc_middle/src/middle/codegen_fn_attrs.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcodegen_fn_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcodegen_fn_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcodegen_fn_attrs.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -89,6 +89,8 @@ bitflags! {\n         /// the MIR `InstrumentCoverage` pass and not added to the coverage map\n         /// during codegen.\n         const NO_COVERAGE               = 1 << 15;\n+        /// `#[used(linker)]`: indicates that LLVM nor the linker can eliminate this function.\n+        const USED_LINKER               = 1 << 16;\n     }\n }\n "}, {"sha": "479a08e43c01a78b64110a0785280942195bc311", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -1741,12 +1741,46 @@ impl CheckAttrVisitor<'_> {\n     }\n \n     fn check_used(&self, attrs: &[Attribute], target: Target) {\n+        let mut used_linker_span = None;\n+        let mut used_compiler_span = None;\n         for attr in attrs {\n             if attr.has_name(sym::used) && target != Target::Static {\n                 self.tcx\n                     .sess\n                     .span_err(attr.span, \"attribute must be applied to a `static` variable\");\n             }\n+            let inner = attr.meta_item_list();\n+            match inner.as_deref() {\n+                Some([item]) if item.has_name(sym::linker) => {\n+                    if used_linker_span.is_none() {\n+                        used_linker_span = Some(attr.span);\n+                    }\n+                }\n+                Some([item]) if item.has_name(sym::compiler) => {\n+                    if used_compiler_span.is_none() {\n+                        used_compiler_span = Some(attr.span);\n+                    }\n+                }\n+                Some(_) => {\n+                    // This error case is handled in rustc_typeck::collect.\n+                }\n+                None => {\n+                    // Default case (compiler) when arg isn't defined.\n+                    if used_compiler_span.is_none() {\n+                        used_compiler_span = Some(attr.span);\n+                    }\n+                }\n+            }\n+        }\n+        if let (Some(linker_span), Some(compiler_span)) = (used_linker_span, used_compiler_span) {\n+            let spans = vec![linker_span, compiler_span];\n+            self.tcx\n+                .sess\n+                .struct_span_err(\n+                    spans,\n+                    \"`used(compiler)` and `used(linker)` can't be used together\",\n+                )\n+                .emit();\n         }\n     }\n "}, {"sha": "dc3ce1afa3361beff88760c9edba3c01b66deece", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -466,7 +466,10 @@ fn has_allow_dead_code_or_lang_attr(tcx: TyCtxt<'_>, id: hir::HirId) -> bool {\n \n     // #[used], #[no_mangle], #[export_name], etc also keeps the item alive\n     // forcefully, e.g., for placing it in a specific section.\n-    if cg_attrs.contains_extern_indicator() || cg_attrs.flags.contains(CodegenFnAttrFlags::USED) {\n+    if cg_attrs.contains_extern_indicator()\n+        || cg_attrs.flags.contains(CodegenFnAttrFlags::USED)\n+        || cg_attrs.flags.contains(CodegenFnAttrFlags::USED_LINKER)\n+    {\n         return true;\n     }\n "}, {"sha": "6a9c260f1c0ae799d810242b91dee8f5eea57761", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -449,6 +449,7 @@ symbols! {\n         compare_exchange_weak,\n         compile_error,\n         compile_error_macro,\n+        compiler,\n         compiler_builtins,\n         compiler_fence,\n         concat,\n@@ -818,6 +819,7 @@ symbols! {\n         link_ordinal,\n         link_section,\n         linkage,\n+        linker,\n         lint_reasons,\n         literal,\n         load,\n@@ -1466,6 +1468,7 @@ symbols! {\n         use_extern_macros,\n         use_nested_groups,\n         used,\n+        used_with_arg,\n         usize,\n         v1,\n         va_arg,"}, {"sha": "7b9f1afe271c26546d25df0dd64f6897410b698b", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -1,3 +1,4 @@\n+// ignore-tidy-filelength\n //! \"Collection\" is the process of determining the type and other external\n //! details of each item in Rust. Collection is specifically concerned\n //! with *inter-procedural* things -- for example, for a function\n@@ -2856,7 +2857,42 @@ fn codegen_fn_attrs(tcx: TyCtxt<'_>, id: DefId) -> CodegenFnAttrs {\n         } else if attr.has_name(sym::rustc_std_internal_symbol) {\n             codegen_fn_attrs.flags |= CodegenFnAttrFlags::RUSTC_STD_INTERNAL_SYMBOL;\n         } else if attr.has_name(sym::used) {\n-            codegen_fn_attrs.flags |= CodegenFnAttrFlags::USED;\n+            let inner = attr.meta_item_list();\n+            match inner.as_deref() {\n+                Some([item]) if item.has_name(sym::linker) => {\n+                    if !tcx.features().used_with_arg {\n+                        feature_err(\n+                            &tcx.sess.parse_sess,\n+                            sym::used_with_arg,\n+                            attr.span,\n+                            \"`#[used(linker)]` is currently unstable\",\n+                        )\n+                        .emit();\n+                    }\n+                    codegen_fn_attrs.flags |= CodegenFnAttrFlags::USED_LINKER;\n+                }\n+                Some([item]) if item.has_name(sym::compiler) => {\n+                    if !tcx.features().used_with_arg {\n+                        feature_err(\n+                            &tcx.sess.parse_sess,\n+                            sym::used_with_arg,\n+                            attr.span,\n+                            \"`#[used(compiler)]` is currently unstable\",\n+                        )\n+                        .emit();\n+                    }\n+                    codegen_fn_attrs.flags |= CodegenFnAttrFlags::USED;\n+                }\n+                Some(_) => {\n+                    tcx.sess\n+                        .struct_span_err(\n+                            attr.span,\n+                            \"expected `used`, `used(compiler)` or `used(linker)`\",\n+                        )\n+                        .emit();\n+                }\n+                None => codegen_fn_attrs.flags |= CodegenFnAttrFlags::USED,\n+            }\n         } else if attr.has_name(sym::cmse_nonsecure_entry) {\n             if !matches!(tcx.fn_sig(id).abi(), abi::Abi::C { .. }) {\n                 struct_span_err!("}, {"sha": "5bff50a40d4e8e813f2edf40ae4fd713a4da8aa1", "filename": "src/test/codegen/used_with_arg.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fcodegen%2Fused_with_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fcodegen%2Fused_with_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fused_with_arg.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -0,0 +1,10 @@\n+#![crate_type = \"lib\"]\n+#![feature(used_with_arg)]\n+\n+// CHECK: @llvm.used = appending global [1 x i8*]{{.*}}USED_LINKER\n+#[used(linker)]\n+static mut USED_LINKER: [usize; 1] = [0];\n+\n+// CHECK-NEXT: @llvm.compiler.used = appending global [1 x i8*]{{.*}}USED_COMPILER\n+#[used(compiler)]\n+static mut USED_COMPILER: [usize; 1] = [0];"}, {"sha": "ad80ff53f0ef0766dea85ebf3cd7ac6c4ee44232", "filename": "src/test/ui/attributes/used_with_arg.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fui%2Fattributes%2Fused_with_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fui%2Fattributes%2Fused_with_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fused_with_arg.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -0,0 +1,19 @@\n+#![feature(used_with_arg)]\n+\n+#[used(linker)]\n+static mut USED_LINKER: [usize; 1] = [0];\n+\n+#[used(compiler)]\n+static mut USED_COMPILER: [usize; 1] = [0];\n+\n+#[used(compiler)] //~ ERROR `used(compiler)` and `used(linker)` can't be used together\n+#[used(linker)]\n+static mut USED_COMPILER_LINKER2: [usize; 1] = [0];\n+\n+#[used(compiler)] //~ ERROR `used(compiler)` and `used(linker)` can't be used together\n+#[used(linker)]\n+#[used(compiler)]\n+#[used(linker)]\n+static mut USED_COMPILER_LINKER3: [usize; 1] = [0];\n+\n+fn main() {}"}, {"sha": "440e5c4a5a020ed97b722cf40d572e0dedc5109e", "filename": "src/test/ui/attributes/used_with_arg.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fui%2Fattributes%2Fused_with_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fui%2Fattributes%2Fused_with_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fused_with_arg.stderr?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -0,0 +1,18 @@\n+error: `used(compiler)` and `used(linker)` can't be used together\n+  --> $DIR/used_with_arg.rs:9:1\n+   |\n+LL | #[used(compiler)]\n+   | ^^^^^^^^^^^^^^^^^\n+LL | #[used(linker)]\n+   | ^^^^^^^^^^^^^^^\n+\n+error: `used(compiler)` and `used(linker)` can't be used together\n+  --> $DIR/used_with_arg.rs:13:1\n+   |\n+LL | #[used(compiler)]\n+   | ^^^^^^^^^^^^^^^^^\n+LL | #[used(linker)]\n+   | ^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "2e17fcfd7a4933cbcb31cfaf6dcea30f19f425b8", "filename": "src/test/ui/attributes/used_with_multi_args.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fui%2Fattributes%2Fused_with_multi_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fui%2Fattributes%2Fused_with_multi_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fused_with_multi_args.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -0,0 +1,6 @@\n+#![feature(used_with_arg)]\n+\n+#[used(compiler, linker)] //~ expected `used`, `used(compiler)` or `used(linker)`\n+static mut USED_COMPILER_LINKER: [usize; 1] = [0];\n+\n+fn main() {}"}, {"sha": "c93aafcfc7cce0f7323dfea20b37559ef921314b", "filename": "src/test/ui/attributes/used_with_multi_args.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fui%2Fattributes%2Fused_with_multi_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fui%2Fattributes%2Fused_with_multi_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fused_with_multi_args.stderr?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -0,0 +1,8 @@\n+error: expected `used`, `used(compiler)` or `used(linker)`\n+  --> $DIR/used_with_multi_args.rs:3:1\n+   |\n+LL | #[used(compiler, linker)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "1c8f01bdef116b62b37e21d02f7b864aba5ff206", "filename": "src/test/ui/feature-gates/feature-gate-used_with_arg.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-used_with_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-used_with_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-used_with_arg.rs?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -0,0 +1,7 @@\n+#[used(linker)] //~ ERROR `#[used(linker)]` is currently unstable\n+static mut USED_LINKER: [usize; 1] = [0];\n+\n+#[used(compiler)] //~ ERROR `#[used(compiler)]` is currently unstable\n+static mut USED_COMPILER: [usize; 1] = [0];\n+\n+fn main() {}"}, {"sha": "d115bf4e365a7a172fb5cf170bce99dc297806e2", "filename": "src/test/ui/feature-gates/feature-gate-used_with_arg.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-used_with_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f4aaf4f2e9fd49736e660475f446619e8734e09/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-used_with_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-used_with_arg.stderr?ref=3f4aaf4f2e9fd49736e660475f446619e8734e09", "patch": "@@ -0,0 +1,21 @@\n+error[E0658]: `#[used(linker)]` is currently unstable\n+  --> $DIR/feature-gate-used_with_arg.rs:1:1\n+   |\n+LL | #[used(linker)]\n+   | ^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #93798 <https://github.com/rust-lang/rust/issues/93798> for more information\n+   = help: add `#![feature(used_with_arg)]` to the crate attributes to enable\n+\n+error[E0658]: `#[used(compiler)]` is currently unstable\n+  --> $DIR/feature-gate-used_with_arg.rs:4:1\n+   |\n+LL | #[used(compiler)]\n+   | ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #93798 <https://github.com/rust-lang/rust/issues/93798> for more information\n+   = help: add `#![feature(used_with_arg)]` to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}]}