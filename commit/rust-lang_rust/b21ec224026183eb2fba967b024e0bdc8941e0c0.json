{"sha": "b21ec224026183eb2fba967b024e0bdc8941e0c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMWVjMjI0MDI2MTgzZWIyZmJhOTY3YjAyNGUwYmRjODk0MWUwYzA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-21T19:24:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-21T19:24:16Z"}, "message": "Rollup merge of #64619 - sam09:fix-63962, r=Centril\n\nFixes #63962. Hint about missing tuple parentheses in patterns", "tree": {"sha": "0d43bf8e98541c8073ccffce5767ba9c6711f2f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d43bf8e98541c8073ccffce5767ba9c6711f2f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b21ec224026183eb2fba967b024e0bdc8941e0c0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdhnjgCRBK7hj4Ov3rIwAAdHIIAHI1r3i/s5RCNf3D3V64X8JC\nZ7fOqwwNaRuQRxxbnhopGRzglLPxbxDKG+joad91QHzMx1TAqGd7APrSAY1BcK+r\ngAzjnPSNuNJgeFT0jI/HdsaaZVeyDQtIpY8GmBKlTYhQLbqJPBmgJvcRA+q39EaZ\ng8jZ2Ye289J23YtuKOvuePc2pxKlDBvJATFRetqxEHQKX+8VLgRG1rVDGcaAZxoZ\n627c8lKdSXT9AlthFLGzIPpqL0EHyZedeKV8CnEzq+ADnK/meO41eGBYl+muMBI7\nZGpmJ3lio9NG8rPCBRbI3Z9qEWWLh1KCQOewtA39plqct1+ydw27rSOoXgF53Yc=\n=ap8b\n-----END PGP SIGNATURE-----\n", "payload": "tree 0d43bf8e98541c8073ccffce5767ba9c6711f2f3\nparent ef8630381a51b367a9016c1dcaf160785a94f94b\nparent a2a57bc6cf383fc113335148296c7965bb29e9a2\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569093856 +0200\ncommitter GitHub <noreply@github.com> 1569093856 +0200\n\nRollup merge of #64619 - sam09:fix-63962, r=Centril\n\nFixes #63962. Hint about missing tuple parentheses in patterns\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b21ec224026183eb2fba967b024e0bdc8941e0c0", "html_url": "https://github.com/rust-lang/rust/commit/b21ec224026183eb2fba967b024e0bdc8941e0c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b21ec224026183eb2fba967b024e0bdc8941e0c0/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef8630381a51b367a9016c1dcaf160785a94f94b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef8630381a51b367a9016c1dcaf160785a94f94b", "html_url": "https://github.com/rust-lang/rust/commit/ef8630381a51b367a9016c1dcaf160785a94f94b"}, {"sha": "a2a57bc6cf383fc113335148296c7965bb29e9a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2a57bc6cf383fc113335148296c7965bb29e9a2", "html_url": "https://github.com/rust-lang/rust/commit/a2a57bc6cf383fc113335148296c7965bb29e9a2"}], "stats": {"total": 64, "additions": 53, "deletions": 11}, "files": [{"sha": "d687a5084e23103351ccab218f10ce190f9c1f2b", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 34, "deletions": 7, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/b21ec224026183eb2fba967b024e0bdc8941e0c0/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b21ec224026183eb2fba967b024e0bdc8941e0c0/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=b21ec224026183eb2fba967b024e0bdc8941e0c0", "patch": "@@ -676,18 +676,35 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n         } else {\n             // Pattern has wrong number of fields.\n-            self.e0023(pat.span, res, &subpats, &variant.fields);\n+            self.e0023(pat.span, res, &subpats, &variant.fields, expected);\n             on_error();\n             return tcx.types.err;\n         }\n         pat_ty\n     }\n \n-    fn e0023(&self, pat_span: Span, res: Res, subpats: &'tcx [P<Pat>], fields: &[ty::FieldDef]) {\n+    fn e0023(\n+        &self,\n+        pat_span: Span,\n+        res: Res,\n+        subpats: &'tcx [P<Pat>],\n+        fields: &[ty::FieldDef],\n+        expected: Ty<'tcx>\n+    ) {\n         let subpats_ending = pluralise!(subpats.len());\n         let fields_ending = pluralise!(fields.len());\n+        let missing_parenthesis = match expected.sty {\n+            ty::Adt(_, substs) if fields.len() == 1 => {\n+                let field_ty = fields[0].ty(self.tcx, substs);\n+                match field_ty.sty {\n+                    ty::Tuple(_) => field_ty.tuple_fields().count() == subpats.len(),\n+                    _ => false,\n+                }\n+            }\n+            _ => false,\n+        };\n         let res_span = self.tcx.def_span(res.def_id());\n-        struct_span_err!(\n+        let mut err = struct_span_err!(\n             self.tcx.sess,\n             pat_span,\n             E0023,\n@@ -697,15 +714,25 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             res.descr(),\n             fields.len(),\n             fields_ending,\n-        )\n-            .span_label(pat_span, format!(\n+        );\n+        err.span_label(pat_span, format!(\n                 \"expected {} field{}, found {}\",\n                 fields.len(),\n                 fields_ending,\n                 subpats.len(),\n             ))\n-            .span_label(res_span, format!(\"{} defined here\", res.descr()))\n-            .emit();\n+            .span_label(res_span, format!(\"{} defined here\", res.descr()));\n+\n+        if missing_parenthesis {\n+            err.multipart_suggestion(\n+                \"missing parenthesis\",\n+                vec![(subpats[0].span.shrink_to_lo(), \"(\".to_string()),\n+                    (subpats[subpats.len()-1].span.shrink_to_hi(), \")\".to_string())],\n+                Applicability::MachineApplicable,\n+            );\n+        }\n+\n+        err.emit();\n     }\n \n     fn check_pat_tuple("}, {"sha": "dc421e060e86f9ac5f53cf850edcf03942a54897", "filename": "src/test/ui/error-codes/E0023.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b21ec224026183eb2fba967b024e0bdc8941e0c0/src%2Ftest%2Fui%2Ferror-codes%2FE0023.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b21ec224026183eb2fba967b024e0bdc8941e0c0/src%2Ftest%2Fui%2Ferror-codes%2FE0023.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0023.rs?ref=b21ec224026183eb2fba967b024e0bdc8941e0c0", "patch": "@@ -1,6 +1,7 @@\n enum Fruit {\n     Apple(String, String),\n     Pear(u32),\n+    Orange((String, String)),\n }\n \n \n@@ -10,5 +11,6 @@ fn main() {\n         Fruit::Apple(a) => {}, //~ ERROR E0023\n         Fruit::Apple(a, b, c) => {}, //~ ERROR E0023\n         Fruit::Pear(1, 2) => {}, //~ ERROR E0023\n+        Fruit::Orange(a, b) => {}, //~ ERROR E0023\n     }\n }"}, {"sha": "8ae7d01ed5f7e91d29c6c103a2f46cb31f765c71", "filename": "src/test/ui/error-codes/E0023.stderr", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b21ec224026183eb2fba967b024e0bdc8941e0c0/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b21ec224026183eb2fba967b024e0bdc8941e0c0/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr?ref=b21ec224026183eb2fba967b024e0bdc8941e0c0", "patch": "@@ -1,5 +1,5 @@\n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/E0023.rs:10:9\n+  --> $DIR/E0023.rs:11:9\n    |\n LL |     Apple(String, String),\n    |     --------------------- tuple variant defined here\n@@ -8,7 +8,7 @@ LL |         Fruit::Apple(a) => {},\n    |         ^^^^^^^^^^^^^^^ expected 2 fields, found 1\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/E0023.rs:11:9\n+  --> $DIR/E0023.rs:12:9\n    |\n LL |     Apple(String, String),\n    |     --------------------- tuple variant defined here\n@@ -17,14 +17,27 @@ LL |         Fruit::Apple(a, b, c) => {},\n    |         ^^^^^^^^^^^^^^^^^^^^^ expected 2 fields, found 3\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field\n-  --> $DIR/E0023.rs:12:9\n+  --> $DIR/E0023.rs:13:9\n    |\n LL |     Pear(u32),\n    |     --------- tuple variant defined here\n ...\n LL |         Fruit::Pear(1, 2) => {},\n    |         ^^^^^^^^^^^^^^^^^ expected 1 field, found 2\n \n-error: aborting due to 3 previous errors\n+error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field\n+  --> $DIR/E0023.rs:14:9\n+   |\n+LL |     Orange((String, String)),\n+   |     ------------------------ tuple variant defined here\n+...\n+LL |         Fruit::Orange(a, b) => {},\n+   |         ^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2\n+help: missing parenthesis\n+   |\n+LL |         Fruit::Orange((a, b)) => {},\n+   |                       ^    ^\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0023`."}]}