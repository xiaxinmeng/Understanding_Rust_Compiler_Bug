{"sha": "332567103670935eefa347a87fb87c9153f814b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMjU2NzEwMzY3MDkzNWVlZmEzNDdhODdmYjg3YzkxNTNmODE0Yjk=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-12-11T05:11:53Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-12-13T18:39:14Z"}, "message": "Bless modified tests", "tree": {"sha": "61a84168ab1f6a2353454a622d41100de13172cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61a84168ab1f6a2353454a622d41100de13172cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/332567103670935eefa347a87fb87c9153f814b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/332567103670935eefa347a87fb87c9153f814b9", "html_url": "https://github.com/rust-lang/rust/commit/332567103670935eefa347a87fb87c9153f814b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/332567103670935eefa347a87fb87c9153f814b9/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caa7c99172a858d3f00d893328446420c7b6856b", "url": "https://api.github.com/repos/rust-lang/rust/commits/caa7c99172a858d3f00d893328446420c7b6856b", "html_url": "https://github.com/rust-lang/rust/commit/caa7c99172a858d3f00d893328446420c7b6856b"}], "stats": {"total": 378, "additions": 298, "deletions": 80}, "files": [{"sha": "3eec3a929a07ff6ccc685436ee2b3e56d5aaef86", "filename": "src/test/ui/consts/control-flow/drop-failure.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fdrop-failure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fdrop-failure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fdrop-failure.stderr?ref=332567103670935eefa347a87fb87c9153f814b9", "patch": "@@ -1,21 +1,27 @@\n error[E0493]: destructors cannot be evaluated at compile-time\n-  --> $DIR/drop-failure.rs:6:9\n+  --> $DIR/drop-failure.rs:7:9\n    |\n LL |     let x = Some(Vec::new());\n    |         ^ constants cannot evaluate destructors\n \n error[E0493]: destructors cannot be evaluated at compile-time\n-  --> $DIR/drop-failure.rs:19:9\n+  --> $DIR/drop-failure.rs:20:9\n    |\n LL |     let vec_tuple = (Vec::new(),);\n    |         ^^^^^^^^^ constants cannot evaluate destructors\n \n error[E0493]: destructors cannot be evaluated at compile-time\n-  --> $DIR/drop-failure.rs:27:9\n+  --> $DIR/drop-failure.rs:28:9\n    |\n LL |     let x: Result<_, Vec<i32>> = Ok(Vec::new());\n    |         ^ constants cannot evaluate destructors\n \n-error: aborting due to 3 previous errors\n+error[E0493]: destructors cannot be evaluated at compile-time\n+  --> $DIR/drop-failure.rs:38:9\n+   |\n+LL |     let mut tmp = None;\n+   |         ^^^^^^^ constants cannot evaluate destructors\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0493`."}, {"sha": "4f9c7d34c35f4fc5db581d76698446d4bdc99a28", "filename": "src/test/ui/consts/control-flow/interior-mutability.stderr", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Finterior-mutability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Finterior-mutability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Finterior-mutability.stderr?ref=332567103670935eefa347a87fb87c9153f814b9", "patch": "@@ -1,24 +1,35 @@\n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/interior-mutability.rs:25:26\n+  --> $DIR/interior-mutability.rs:40:26\n    |\n LL |     let x: &'static _ = &X;\n    |            ----------    ^ creates a temporary which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n-LL |     let y: &'static _ = &Y;\n+...\n LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/interior-mutability.rs:26:26\n+  --> $DIR/interior-mutability.rs:41:26\n    |\n LL |     let y: &'static _ = &Y;\n    |            ----------    ^ creates a temporary which is freed while still in use\n    |            |\n    |            type annotation requires that borrow lasts for `'static`\n+LL |     let z: &'static _ = &Z;\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/interior-mutability.rs:42:26\n+   |\n+LL |     let z: &'static _ = &Z;\n+   |            ----------    ^ creates a temporary which is freed while still in use\n+   |            |\n+   |            type annotation requires that borrow lasts for `'static`\n LL | }\n    | - temporary value is freed at the end of this statement\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0716`."}, {"sha": "71d96b216f974a0419cc6c18518c91e2db142adf", "filename": "src/test/ui/consts/control-flow/loop.both.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.both.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.both.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.both.stderr?ref=332567103670935eefa347a87fb87c9153f814b9", "patch": "@@ -0,0 +1,19 @@\n+error[E0744]: `for` is not allowed in a `const`\n+  --> $DIR/loop.rs:63:5\n+   |\n+LL | /     for i in 0..4 {\n+LL | |         x += i;\n+LL | |     }\n+   | |_____^\n+\n+error[E0744]: `for` is not allowed in a `const`\n+  --> $DIR/loop.rs:67:5\n+   |\n+LL | /     for i in 0..4 {\n+LL | |         x += i;\n+LL | |     }\n+   | |_____^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0744`."}, {"sha": "e01081638ec22fa75bcd75e1529c018273eb7757", "filename": "src/test/ui/consts/control-flow/loop.if_match.stderr", "status": "modified", "additions": 69, "deletions": 29, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.if_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.if_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.if_match.stderr?ref=332567103670935eefa347a87fb87c9153f814b9", "patch": "@@ -1,67 +1,88 @@\n-error[E0744]: `loop` is not allowed in a `const`\n-  --> $DIR/loop.rs:8:15\n+error[E0658]: `loop` is not allowed in a `const`\n+  --> $DIR/loop.rs:10:15\n    |\n LL | const _: () = loop {};\n    |               ^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `loop` is not allowed in a `static`\n-  --> $DIR/loop.rs:10:19\n+error[E0658]: `loop` is not allowed in a `static`\n+  --> $DIR/loop.rs:12:19\n    |\n LL | static FOO: i32 = loop { break 4; };\n    |                   ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `loop` is not allowed in a `const fn`\n-  --> $DIR/loop.rs:13:5\n+error[E0658]: `loop` is not allowed in a `const fn`\n+  --> $DIR/loop.rs:15:5\n    |\n LL |     loop {}\n    |     ^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `loop` is not allowed in a `const fn`\n-  --> $DIR/loop.rs:26:9\n+error[E0658]: `loop` is not allowed in a `const fn`\n+  --> $DIR/loop.rs:28:9\n    |\n LL |         loop {}\n    |         ^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `while` is not allowed in a `const`\n-  --> $DIR/loop.rs:38:9\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:40:9\n    |\n LL |         while false {}\n    |         ^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `while` is not allowed in a `const`\n-  --> $DIR/loop.rs:47:5\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:49:5\n    |\n LL | /     while x < 4 {\n LL | |         x += 1;\n LL | |     }\n    | |_____^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `while` is not allowed in a `const`\n-  --> $DIR/loop.rs:51:5\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:53:5\n    |\n LL | /     while x < 8 {\n LL | |         x += 1;\n LL | |     }\n    | |_____^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n error[E0744]: `for` is not allowed in a `const`\n-  --> $DIR/loop.rs:61:5\n+  --> $DIR/loop.rs:63:5\n    |\n LL | /     for i in 0..4 {\n LL | |         x += i;\n LL | |     }\n    | |_____^\n \n error[E0744]: `for` is not allowed in a `const`\n-  --> $DIR/loop.rs:65:5\n+  --> $DIR/loop.rs:67:5\n    |\n LL | /     for i in 0..4 {\n LL | |         x += i;\n LL | |     }\n    | |_____^\n \n-error[E0744]: `loop` is not allowed in a `const`\n-  --> $DIR/loop.rs:75:5\n+error[E0658]: `loop` is not allowed in a `const`\n+  --> $DIR/loop.rs:77:5\n    |\n LL | /     loop {\n LL | |         x += 1;\n@@ -70,9 +91,12 @@ LL | |             break;\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `loop` is not allowed in a `const`\n-  --> $DIR/loop.rs:82:5\n+error[E0658]: `loop` is not allowed in a `const`\n+  --> $DIR/loop.rs:84:5\n    |\n LL | /     loop {\n LL | |         x += 1;\n@@ -81,31 +105,47 @@ LL | |             break;\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `while` is not allowed in a `const`\n-  --> $DIR/loop.rs:94:5\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:96:5\n    |\n LL |     while let None = Some(x) { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `while` is not allowed in a `const`\n-  --> $DIR/loop.rs:95:5\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:97:5\n    |\n LL |     while let None = Some(x) { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `loop` is not allowed in a `const`\n-  --> $DIR/loop.rs:17:22\n+error[E0658]: `loop` is not allowed in a `const`\n+  --> $DIR/loop.rs:19:22\n    |\n LL |     const BAR: i32 = loop { break 4; };\n    |                      ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `loop` is not allowed in a `const`\n-  --> $DIR/loop.rs:21:22\n+error[E0658]: `loop` is not allowed in a `const`\n+  --> $DIR/loop.rs:23:22\n    |\n LL |     const BAR: i32 = loop { break 4; };\n    |                      ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n error: aborting due to 15 previous errors\n \n-For more information about this error, try `rustc --explain E0744`.\n+Some errors have detailed explanations: E0658, E0744.\n+For more information about an error, try `rustc --explain E0658`."}, {"sha": "cf871c9a78c412640190526e8fbecff593bc89cd", "filename": "src/test/ui/consts/control-flow/loop.loop_.stderr", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.loop_.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.loop_.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.loop_.stderr?ref=332567103670935eefa347a87fb87c9153f814b9", "patch": "@@ -0,0 +1,96 @@\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:40:9\n+   |\n+LL |         while false {}\n+   |         ^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+   = note: `#![feature(const_loop)]` alone is not sufficient, since this loop expression contains an implicit conditional\n+\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:49:5\n+   |\n+LL | /     while x < 4 {\n+LL | |         x += 1;\n+LL | |     }\n+   | |_____^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+   = note: `#![feature(const_loop)]` alone is not sufficient, since this loop expression contains an implicit conditional\n+\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:53:5\n+   |\n+LL | /     while x < 8 {\n+LL | |         x += 1;\n+LL | |     }\n+   | |_____^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+   = note: `#![feature(const_loop)]` alone is not sufficient, since this loop expression contains an implicit conditional\n+\n+error[E0744]: `for` is not allowed in a `const`\n+  --> $DIR/loop.rs:63:5\n+   |\n+LL | /     for i in 0..4 {\n+LL | |         x += i;\n+LL | |     }\n+   | |_____^\n+\n+error[E0744]: `for` is not allowed in a `const`\n+  --> $DIR/loop.rs:67:5\n+   |\n+LL | /     for i in 0..4 {\n+LL | |         x += i;\n+LL | |     }\n+   | |_____^\n+\n+error[E0658]: `if` is not allowed in a `const`\n+  --> $DIR/loop.rs:79:9\n+   |\n+LL | /         if x == 4 {\n+LL | |             break;\n+LL | |         }\n+   | |_________^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+\n+error[E0658]: `if` is not allowed in a `const`\n+  --> $DIR/loop.rs:86:9\n+   |\n+LL | /         if x == 8 {\n+LL | |             break;\n+LL | |         }\n+   | |_________^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:96:5\n+   |\n+LL |     while let None = Some(x) { }\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+   = note: `#![feature(const_loop)]` alone is not sufficient, since this loop expression contains an implicit conditional\n+\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:97:5\n+   |\n+LL |     while let None = Some(x) { }\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n+   = note: `#![feature(const_loop)]` alone is not sufficient, since this loop expression contains an implicit conditional\n+\n+error: aborting due to 9 previous errors\n+\n+Some errors have detailed explanations: E0658, E0744.\n+For more information about an error, try `rustc --explain E0658`."}, {"sha": "981cd01711b5685291eb7752f279aca4d2f067bb", "filename": "src/test/ui/consts/control-flow/loop.rs", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.rs?ref=332567103670935eefa347a87fb87c9153f814b9", "patch": "@@ -1,9 +1,11 @@\n-// Ensure that all loops are forbidden in a const context, even if `#![feature(const_if_match)]` is\n-// enabled.\n+// Ensure that loops are forbidden in a const context unless `#![feature(const_loop)]` are enabled.\n+// `while` loops require `#![feature(const_if_match)]` to be enabled as well.\n \n-// revisions: stock if_match\n+// gate-test-const_loop\n+// revisions: stock if_match loop_ both\n \n-#![cfg_attr(if_match, feature(const_if_match))]\n+#![cfg_attr(any(both, if_match), feature(const_if_match))]\n+#![cfg_attr(any(both, loop_), feature(const_loop))]\n \n const _: () = loop {}; //[stock,if_match]~ ERROR `loop` is not allowed in a `const`\n \n@@ -36,19 +38,19 @@ const fn const_outside() {\n fn main() {\n     let x = [0; {\n         while false {}\n-        //[stock,if_match]~^ ERROR `while` is not allowed in a `const`\n+        //[stock,if_match,loop_]~^ ERROR `while` is not allowed in a `const`\n         4\n     }];\n }\n \n const _: i32 = {\n     let mut x = 0;\n \n-    while x < 4 { //[stock,if_match]~ ERROR `while` is not allowed in a `const`\n+    while x < 4 { //[stock,if_match,loop_]~ ERROR `while` is not allowed in a `const`\n         x += 1;\n     }\n \n-    while x < 8 { //[stock,if_match]~ ERROR `while` is not allowed in a `const`\n+    while x < 8 { //[stock,if_match,loop_]~ ERROR `while` is not allowed in a `const`\n         x += 1;\n     }\n \n@@ -58,11 +60,11 @@ const _: i32 = {\n const _: i32 = {\n     let mut x = 0;\n \n-    for i in 0..4 { //[stock,if_match]~ ERROR `for` is not allowed in a `const`\n+    for i in 0..4 { //[stock,if_match,loop_,both]~ ERROR `for` is not allowed in a `const`\n         x += i;\n     }\n \n-    for i in 0..4 { //[stock,if_match]~ ERROR `for` is not allowed in a `const`\n+    for i in 0..4 { //[stock,if_match,loop_,both]~ ERROR `for` is not allowed in a `const`\n         x += i;\n     }\n \n@@ -74,14 +76,14 @@ const _: i32 = {\n \n     loop { //[stock,if_match]~ ERROR `loop` is not allowed in a `const`\n         x += 1;\n-        if x == 4 { //[stock]~ ERROR `if` is not allowed in a `const`\n+        if x == 4 { //[stock,loop_]~ ERROR `if` is not allowed in a `const`\n             break;\n         }\n     }\n \n     loop { //[stock,if_match]~ ERROR `loop` is not allowed in a `const`\n         x += 1;\n-        if x == 8 { //[stock]~ ERROR `if` is not allowed in a `const`\n+        if x == 8 { //[stock,loop_]~ ERROR `if` is not allowed in a `const`\n             break;\n         }\n     }\n@@ -91,7 +93,7 @@ const _: i32 = {\n \n const _: i32 = {\n     let mut x = 0;\n-    while let None = Some(x) { } //[stock,if_match]~ ERROR `while` is not allowed in a `const`\n-    while let None = Some(x) { } //[stock,if_match]~ ERROR `while` is not allowed in a `const`\n+    while let None = Some(x) { } //[stock,if_match,loop_]~ ERROR `while` is not allowed in a `const`\n+    while let None = Some(x) { } //[stock,if_match,loop_]~ ERROR `while` is not allowed in a `const`\n     x\n };"}, {"sha": "e3687cf12acc7fe9c8ae499d57e170ef960bbab4", "filename": "src/test/ui/consts/control-flow/loop.stock.stderr", "status": "modified", "additions": 74, "deletions": 30, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/332567103670935eefa347a87fb87c9153f814b9/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.stock.stderr?ref=332567103670935eefa347a87fb87c9153f814b9", "patch": "@@ -1,67 +1,91 @@\n-error[E0744]: `loop` is not allowed in a `const`\n-  --> $DIR/loop.rs:8:15\n+error[E0658]: `loop` is not allowed in a `const`\n+  --> $DIR/loop.rs:10:15\n    |\n LL | const _: () = loop {};\n    |               ^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `loop` is not allowed in a `static`\n-  --> $DIR/loop.rs:10:19\n+error[E0658]: `loop` is not allowed in a `static`\n+  --> $DIR/loop.rs:12:19\n    |\n LL | static FOO: i32 = loop { break 4; };\n    |                   ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `loop` is not allowed in a `const fn`\n-  --> $DIR/loop.rs:13:5\n+error[E0658]: `loop` is not allowed in a `const fn`\n+  --> $DIR/loop.rs:15:5\n    |\n LL |     loop {}\n    |     ^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `loop` is not allowed in a `const fn`\n-  --> $DIR/loop.rs:26:9\n+error[E0658]: `loop` is not allowed in a `const fn`\n+  --> $DIR/loop.rs:28:9\n    |\n LL |         loop {}\n    |         ^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `while` is not allowed in a `const`\n-  --> $DIR/loop.rs:38:9\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:40:9\n    |\n LL |         while false {}\n    |         ^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n-error[E0744]: `while` is not allowed in a `const`\n-  --> $DIR/loop.rs:47:5\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:49:5\n    |\n LL | /     while x < 4 {\n LL | |         x += 1;\n LL | |     }\n    | |_____^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n-error[E0744]: `while` is not allowed in a `const`\n-  --> $DIR/loop.rs:51:5\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:53:5\n    |\n LL | /     while x < 8 {\n LL | |         x += 1;\n LL | |     }\n    | |_____^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0744]: `for` is not allowed in a `const`\n-  --> $DIR/loop.rs:61:5\n+  --> $DIR/loop.rs:63:5\n    |\n LL | /     for i in 0..4 {\n LL | |         x += i;\n LL | |     }\n    | |_____^\n \n error[E0744]: `for` is not allowed in a `const`\n-  --> $DIR/loop.rs:65:5\n+  --> $DIR/loop.rs:67:5\n    |\n LL | /     for i in 0..4 {\n LL | |         x += i;\n LL | |     }\n    | |_____^\n \n-error[E0744]: `loop` is not allowed in a `const`\n-  --> $DIR/loop.rs:75:5\n+error[E0658]: `loop` is not allowed in a `const`\n+  --> $DIR/loop.rs:77:5\n    |\n LL | /     loop {\n LL | |         x += 1;\n@@ -70,9 +94,12 @@ LL | |             break;\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const`\n-  --> $DIR/loop.rs:77:9\n+  --> $DIR/loop.rs:79:9\n    |\n LL | /         if x == 4 {\n LL | |             break;\n@@ -82,8 +109,8 @@ LL | |         }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n-error[E0744]: `loop` is not allowed in a `const`\n-  --> $DIR/loop.rs:82:5\n+error[E0658]: `loop` is not allowed in a `const`\n+  --> $DIR/loop.rs:84:5\n    |\n LL | /     loop {\n LL | |         x += 1;\n@@ -92,9 +119,12 @@ LL | |             break;\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const`\n-  --> $DIR/loop.rs:84:9\n+  --> $DIR/loop.rs:86:9\n    |\n LL | /         if x == 8 {\n LL | |             break;\n@@ -104,29 +134,43 @@ LL | |         }\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49146\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n-error[E0744]: `while` is not allowed in a `const`\n-  --> $DIR/loop.rs:94:5\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:96:5\n    |\n LL |     while let None = Some(x) { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n-error[E0744]: `while` is not allowed in a `const`\n-  --> $DIR/loop.rs:95:5\n+error[E0658]: `while` is not allowed in a `const`\n+  --> $DIR/loop.rs:97:5\n    |\n LL |     while let None = Some(x) { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n+   = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n-error[E0744]: `loop` is not allowed in a `const`\n-  --> $DIR/loop.rs:17:22\n+error[E0658]: `loop` is not allowed in a `const`\n+  --> $DIR/loop.rs:19:22\n    |\n LL |     const BAR: i32 = loop { break 4; };\n    |                      ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n-error[E0744]: `loop` is not allowed in a `const`\n-  --> $DIR/loop.rs:21:22\n+error[E0658]: `loop` is not allowed in a `const`\n+  --> $DIR/loop.rs:23:22\n    |\n LL |     const BAR: i32 = loop { break 4; };\n    |                      ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/52000\n+   = help: add `#![feature(const_loop)]` to the crate attributes to enable\n \n error: aborting due to 17 previous errors\n "}]}