{"sha": "d300e4f39b13b36b696fcff993b5b59969e4cec7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMDBlNGYzOWIxM2IzNmI2OTZmY2ZmOTkzYjViNTk5NjllNGNlYzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-27T18:12:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-27T18:12:23Z"}, "message": "Auto merge of #31915 - nagisa:mir-unpretty-fix, r=arielb1\n\nFixes https://github.com/rust-lang/rust/issues/31913", "tree": {"sha": "19d309c2deb54da61656d568d33acffb911b1a41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19d309c2deb54da61656d568d33acffb911b1a41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d300e4f39b13b36b696fcff993b5b59969e4cec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d300e4f39b13b36b696fcff993b5b59969e4cec7", "html_url": "https://github.com/rust-lang/rust/commit/d300e4f39b13b36b696fcff993b5b59969e4cec7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d300e4f39b13b36b696fcff993b5b59969e4cec7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5237b02b96b199abdcf1ddb472b0080fdff4ccd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5237b02b96b199abdcf1ddb472b0080fdff4ccd", "html_url": "https://github.com/rust-lang/rust/commit/c5237b02b96b199abdcf1ddb472b0080fdff4ccd"}, {"sha": "eb69076a0b6973570efb4744b7849720077b514e", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb69076a0b6973570efb4744b7849720077b514e", "html_url": "https://github.com/rust-lang/rust/commit/eb69076a0b6973570efb4744b7849720077b514e"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "e9db30f3cb24fd37363c2423663fbe7afc7558c6", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d300e4f39b13b36b696fcff993b5b59969e4cec7/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d300e4f39b13b36b696fcff993b5b59969e4cec7/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=d300e4f39b13b36b696fcff993b5b59969e4cec7", "patch": "@@ -817,13 +817,12 @@ pub fn pretty_print_input(sess: Session,\n                                                              &id,\n                                                              resolve::MakeGlobMap::No,\n                                                              |tcx, mir_map, _, _| {\n-                let mir_map = mir_map.unwrap();\n-\n-                for (nodeid, mir) in &mir_map.map {\n-                    try!(writeln!(out, \"MIR for {}\", tcx.map.node_to_string(*nodeid)));\n-                    try!(write_mir_pretty(mir, &mut out));\n+                if let Some(mir_map) = mir_map {\n+                    for (nodeid, mir) in &mir_map.map {\n+                        try!(writeln!(out, \"MIR for {}\", tcx.map.node_to_string(*nodeid)));\n+                        try!(write_mir_pretty(mir, &mut out));\n+                    }\n                 }\n-\n                 Ok(())\n             }), &sess)\n         }\n@@ -840,12 +839,14 @@ pub fn pretty_print_input(sess: Session,\n                                                              &id,\n                                                              resolve::MakeGlobMap::No,\n                                                              |tcx, mir_map, _, _| {\n-                let mir_map = mir_map.unwrap();\n-                try!(writeln!(out, \"MIR for {}\", tcx.map.node_to_string(nodeid)));\n-                let mir = mir_map.map.get(&nodeid).unwrap_or_else(|| {\n-                    sess.fatal(&format!(\"no MIR map entry for node {}\", nodeid))\n-                });\n-                write_mir_pretty(mir, &mut out)\n+                if let Some(mir_map) = mir_map {\n+                    try!(writeln!(out, \"MIR for {}\", tcx.map.node_to_string(nodeid)));\n+                    let mir = mir_map.map.get(&nodeid).unwrap_or_else(|| {\n+                        sess.fatal(&format!(\"no MIR map entry for node {}\", nodeid))\n+                    });\n+                    try!(write_mir_pretty(mir, &mut out));\n+                }\n+                Ok(())\n             }), &sess)\n         }\n "}, {"sha": "8950bef6a4610ab1feef2316f6c646a5ac6b9f2e", "filename": "src/test/compile-fail/mir-unpretty.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d300e4f39b13b36b696fcff993b5b59969e4cec7/src%2Ftest%2Fcompile-fail%2Fmir-unpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d300e4f39b13b36b696fcff993b5b59969e4cec7/src%2Ftest%2Fcompile-fail%2Fmir-unpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-unpretty.rs?ref=d300e4f39b13b36b696fcff993b5b59969e4cec7", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z unstable-options --unpretty=mir\n+\n+fn main() {\n+    let x: () = 0; //~ ERROR: mismatched types\n+}"}]}