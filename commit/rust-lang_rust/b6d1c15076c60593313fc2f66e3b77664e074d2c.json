{"sha": "b6d1c15076c60593313fc2f66e3b77664e074d2c", "node_id": "C_kwDOAAsO6NoAKGI2ZDFjMTUwNzZjNjA1OTMzMTNmYzJmNjZlM2I3NzY2NGUwNzRkMmM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-09-29T12:43:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-29T12:43:20Z"}, "message": "Rollup merge of #102435 - GuillaumeGomez:improve-iterator-reduce-example, r=thomcc,vacuus\n\nImprove example of Iterator::reduce\n\nFixes #81819.\n\nI took your example `@bstrie` from https://github.com/rust-lang/rust/issues/81819 and applied it here.\n\nr? `@thomcc`", "tree": {"sha": "04bc0aee4aedee6cff429037ff29628a0f7056a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04bc0aee4aedee6cff429037ff29628a0f7056a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6d1c15076c60593313fc2f66e3b77664e074d2c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjNZLoCRBK7hj4Ov3rIwAAuPYIAC5ON6DRop3HXBaWUcbjrSdj\n0grO9R0tbvLiwNNY3+q/0M26A8PNdQzhNCmmr2sOPKgq53zwH4Z7OusUsLIK9mab\nFzNvBxIYOhpizkDgGxGexKMszO+qU+AppIKtxKOzCN/AZlJQmnwN+BwwfLnlrNBT\nrpAIaLEGpnhH7ldNE+0madyyMIx3R+MUW8xLAtRJVvWdwjyUdC0G0aYvh01RkpKv\nWE/V9SL6WjKWAZPcylvMuJnr85g6FVTCE8ivrvdJMouxeAqo7cjBvooN+Yy0xl3z\nEjF3RPzvYtKMM1yogzIV9EzcjkAT2g8a217cGVKOcZ6yoYzI22iX+gRsVSgsmlo=\n=peVu\n-----END PGP SIGNATURE-----\n", "payload": "tree 04bc0aee4aedee6cff429037ff29628a0f7056a0\nparent 33553e1a289c6e44307d8c0de43f92172da30c89\nparent 49b25d341286499dd1e30f5825398a8c9cd3a54a\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1664455400 +0530\ncommitter GitHub <noreply@github.com> 1664455400 +0530\n\nRollup merge of #102435 - GuillaumeGomez:improve-iterator-reduce-example, r=thomcc,vacuus\n\nImprove example of Iterator::reduce\n\nFixes #81819.\n\nI took your example `@bstrie` from https://github.com/rust-lang/rust/issues/81819 and applied it here.\n\nr? `@thomcc`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6d1c15076c60593313fc2f66e3b77664e074d2c", "html_url": "https://github.com/rust-lang/rust/commit/b6d1c15076c60593313fc2f66e3b77664e074d2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6d1c15076c60593313fc2f66e3b77664e074d2c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33553e1a289c6e44307d8c0de43f92172da30c89", "url": "https://api.github.com/repos/rust-lang/rust/commits/33553e1a289c6e44307d8c0de43f92172da30c89", "html_url": "https://github.com/rust-lang/rust/commit/33553e1a289c6e44307d8c0de43f92172da30c89"}, {"sha": "49b25d341286499dd1e30f5825398a8c9cd3a54a", "url": "https://api.github.com/repos/rust-lang/rust/commits/49b25d341286499dd1e30f5825398a8c9cd3a54a", "html_url": "https://github.com/rust-lang/rust/commit/49b25d341286499dd1e30f5825398a8c9cd3a54a"}], "stats": {"total": 19, "additions": 5, "deletions": 14}, "files": [{"sha": "f6e6732b0e3910c3d65f6fd535b44da2f87813df", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b6d1c15076c60593313fc2f66e3b77664e074d2c/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6d1c15076c60593313fc2f66e3b77664e074d2c/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=b6d1c15076c60593313fc2f66e3b77664e074d2c", "patch": "@@ -2431,22 +2431,13 @@ pub trait Iterator {\n     ///\n     /// # Example\n     ///\n-    /// Find the maximum value:\n-    ///\n     /// ```\n-    /// fn find_max<I>(iter: I) -> Option<I::Item>\n-    ///     where I: Iterator,\n-    ///           I::Item: Ord,\n-    /// {\n-    ///     iter.reduce(|accum, item| {\n-    ///         if accum >= item { accum } else { item }\n-    ///     })\n-    /// }\n-    /// let a = [10, 20, 5, -23, 0];\n-    /// let b: [u32; 0] = [];\n+    /// let reduced: i32 = (1..10).reduce(|acc, e| acc + e).unwrap();\n+    /// assert_eq!(reduced, 45);\n     ///\n-    /// assert_eq!(find_max(a.iter()), Some(&20));\n-    /// assert_eq!(find_max(b.iter()), None);\n+    /// // Which is equivalent to doing it with `fold`:\n+    /// let folded: i32 = (1..10).fold(0, |acc, e| acc + e);\n+    /// assert_eq!(reduced, folded);\n     /// ```\n     #[inline]\n     #[stable(feature = \"iterator_fold_self\", since = \"1.51.0\")]"}]}