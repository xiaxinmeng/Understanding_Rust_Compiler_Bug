{"sha": "ca743ecb77c35d7a0a26e625769aa1ec627811bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNzQzZWNiNzdjMzVkN2EwYTI2ZTYyNTc2OWFhMWVjNjI3ODExYmY=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2016-05-04T06:54:59Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2016-05-04T06:54:59Z"}, "message": "rustup: fix breakage in diagnostics API\n\nAlso adds a function to add the clippy wiki note, which is used a few times.", "tree": {"sha": "6e776bb86c05c4a98911fd9317e2f6ec79f91bc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e776bb86c05c4a98911fd9317e2f6ec79f91bc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca743ecb77c35d7a0a26e625769aa1ec627811bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca743ecb77c35d7a0a26e625769aa1ec627811bf", "html_url": "https://github.com/rust-lang/rust/commit/ca743ecb77c35d7a0a26e625769aa1ec627811bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca743ecb77c35d7a0a26e625769aa1ec627811bf/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "397b940225d71a90b77438e56d6b1ccc6a29e890", "url": "https://api.github.com/repos/rust-lang/rust/commits/397b940225d71a90b77438e56d6b1ccc6a29e890", "html_url": "https://github.com/rust-lang/rust/commit/397b940225d71a90b77438e56d6b1ccc6a29e890"}], "stats": {"total": 46, "additions": 22, "deletions": 24}, "files": [{"sha": "44fdab454a32187e8118c9787bd277768e180a2e", "filename": "src/methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca743ecb77c35d7a0a26e625769aa1ec627811bf/src%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca743ecb77c35d7a0a26e625769aa1ec627811bf/src%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmethods.rs?ref=ca743ecb77c35d7a0a26e625769aa1ec627811bf", "patch": "@@ -602,7 +602,7 @@ fn lint_cstring_as_ptr(cx: &LateContext, expr: &Expr, new: &Expr, unwrap: &Expr)\n         span_lint_and_then(cx, TEMPORARY_CSTRING_AS_PTR, expr.span,\n                            \"you are getting the inner pointer of a temporary `CString`\",\n                            |db| {\n-                               db.fileline_note(expr.span, \"that pointer will be invalid outside this expression\");\n+                               db.note(\"that pointer will be invalid outside this expression\");\n                                db.span_help(unwrap.span, \"assign the `CString` to a variable to extend its lifetime\");\n                            });\n     }}"}, {"sha": "724915b9dd5cc4d820b08e6d580390bea2abe608", "filename": "src/swap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca743ecb77c35d7a0a26e625769aa1ec627811bf/src%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca743ecb77c35d7a0a26e625769aa1ec627811bf/src%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fswap.rs?ref=ca743ecb77c35d7a0a26e625769aa1ec627811bf", "patch": "@@ -95,7 +95,7 @@ fn check_manual_swap(cx: &LateContext, block: &Block) {\n                                    if !what.is_empty() {\n                                        db.span_suggestion(span, \"try\",\n                                                           format!(\"std::mem::swap(&mut {}, &mut {})\", lhs, rhs));\n-                                       db.fileline_note(span, \"or maybe you should use `std::mem::replace`?\");\n+                                       db.note(\"or maybe you should use `std::mem::replace`?\");\n                                    }\n                                });\n         }}\n@@ -130,7 +130,7 @@ fn check_suspicious_swap(cx: &LateContext, block: &Block) {\n                                    if !what.is_empty() {\n                                        db.span_suggestion(span, \"try\",\n                                                           format!(\"std::mem::swap(&mut {}, &mut {})\", lhs, rhs));\n-                                       db.fileline_note(span, \"or maybe you should use `std::mem::replace`?\");\n+                                       db.note(\"or maybe you should use `std::mem::replace`?\");\n                                    }\n                                });\n         }}"}, {"sha": "3e77ffb2c24c8cf0be23887dc51afc74e1bc055c", "filename": "src/utils/mod.rs", "status": "modified", "additions": 19, "deletions": 21, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ca743ecb77c35d7a0a26e625769aa1ec627811bf/src%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca743ecb77c35d7a0a26e625769aa1ec627811bf/src%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fmod.rs?ref=ca743ecb77c35d7a0a26e625769aa1ec627811bf", "patch": "@@ -471,44 +471,44 @@ impl<'a> Deref for DiagnosticWrapper<'a> {\n     }\n }\n \n+impl<'a> DiagnosticWrapper<'a> {\n+    fn wiki_link(&mut self, lint: &'static Lint) {\n+        self.help(&format!(\"for further information visit https://github.com/Manishearth/rust-clippy/wiki#{}\",\n+                           lint.name_lower()));\n+    }\n+}\n+\n pub fn span_lint<'a, T: LintContext>(cx: &'a T, lint: &'static Lint, sp: Span, msg: &str) -> DiagnosticWrapper<'a> {\n-    let mut db = cx.struct_span_lint(lint, sp, msg);\n+    let mut db = DiagnosticWrapper(cx.struct_span_lint(lint, sp, msg));\n     if cx.current_level(lint) != Level::Allow {\n-        db.fileline_help(sp,\n-                         &format!(\"for further information visit https://github.com/Manishearth/rust-clippy/wiki#{}\",\n-                                  lint.name_lower()));\n+        db.wiki_link(lint);\n     }\n-    DiagnosticWrapper(db)\n+    db\n }\n \n pub fn span_help_and_lint<'a, T: LintContext>(cx: &'a T, lint: &'static Lint, span: Span, msg: &str, help: &str)\n                                               -> DiagnosticWrapper<'a> {\n-    let mut db = cx.struct_span_lint(lint, span, msg);\n+    let mut db = DiagnosticWrapper(cx.struct_span_lint(lint, span, msg));\n     if cx.current_level(lint) != Level::Allow {\n-        db.fileline_help(span,\n-                         &format!(\"{}\\nfor further information visit \\\n-                                   https://github.com/Manishearth/rust-clippy/wiki#{}\",\n-                                  help,\n-                                  lint.name_lower()));\n+        db.help(help);\n+        db.wiki_link(lint);\n     }\n-    DiagnosticWrapper(db)\n+    db\n }\n \n pub fn span_note_and_lint<'a, T: LintContext>(cx: &'a T, lint: &'static Lint, span: Span, msg: &str, note_span: Span,\n                                               note: &str)\n                                               -> DiagnosticWrapper<'a> {\n-    let mut db = cx.struct_span_lint(lint, span, msg);\n+    let mut db = DiagnosticWrapper(cx.struct_span_lint(lint, span, msg));\n     if cx.current_level(lint) != Level::Allow {\n         if note_span == span {\n-            db.fileline_note(note_span, note);\n+            db.note(note);\n         } else {\n             db.span_note(note_span, note);\n         }\n-        db.fileline_help(span,\n-                         &format!(\"for further information visit https://github.com/Manishearth/rust-clippy/wiki#{}\",\n-                                  lint.name_lower()));\n+        db.wiki_link(lint);\n     }\n-    DiagnosticWrapper(db)\n+    db\n }\n \n pub fn span_lint_and_then<'a, T: LintContext, F>(cx: &'a T, lint: &'static Lint, sp: Span, msg: &str, f: F)\n@@ -518,9 +518,7 @@ pub fn span_lint_and_then<'a, T: LintContext, F>(cx: &'a T, lint: &'static Lint,\n     let mut db = DiagnosticWrapper(cx.struct_span_lint(lint, sp, msg));\n     if cx.current_level(lint) != Level::Allow {\n         f(&mut db);\n-        db.fileline_help(sp,\n-                         &format!(\"for further information visit https://github.com/Manishearth/rust-clippy/wiki#{}\",\n-                                  lint.name_lower()));\n+        db.wiki_link(lint);\n     }\n     db\n }"}]}