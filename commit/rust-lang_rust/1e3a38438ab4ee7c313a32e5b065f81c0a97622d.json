{"sha": "1e3a38438ab4ee7c313a32e5b065f81c0a97622d", "node_id": "C_kwDOAAsO6NoAKDFlM2EzODQzOGFiNGVlN2MzMTNhMzJlNWIwNjVmODFjMGE5NzYyMmQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-18T04:44:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-18T04:44:46Z"}, "message": "Rollup merge of #110442 - ferrocene:pa-build-metrics-dry-run, r=ozkanonur\n\nAvoid including dry run steps in the build metrics\n\nIncluding steps executed during the dry run will result in a duplication of all the steps in the build metrics, which just adds noise.", "tree": {"sha": "235ba018825d096d99aa0c28b876b7bda067e1ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/235ba018825d096d99aa0c28b876b7bda067e1ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e3a38438ab4ee7c313a32e5b065f81c0a97622d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkPiA+CRBK7hj4Ov3rIwAAIvIIAHMCfrlJXpIqRfepJ7qosHAb\nIb+gzjjjU95W8aOLIoF75CPhnsKtPb0DAtTU9YOnR/8nRFN8T99KFxAtt5373DRH\nkRKjjDBnf/FSLipc6sK0oFj+niTK+Rbiv0FvDjOTyCCk1gP3Rfd/JL0YH3mt/vDn\n+qAdcr+yk+0T3fFNh8YyT3dcj4e3HVZYCn63L3Xas29XcFtb4Ro6XbIdm01I6VQ4\nu4YgyKuqfln9FQZR59zHuii8LV8noB6DVZFMzMpXJLpERcvXHBqfoVOA7RRYzkfA\nxBze7rHU2060wFi9k2hWA+rJ5EP1l1Y2iCaNhapiVqodDuw1l4UozaYp4w46MEY=\n=L8q+\n-----END PGP SIGNATURE-----\n", "payload": "tree 235ba018825d096d99aa0c28b876b7bda067e1ed\nparent 41ae7fcf9be195d062ba2f9fdf744fdf58ac79db\nparent 4cd0e00655ccb88605c3bc4124edd1d6a5b3f011\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1681793086 +0200\ncommitter GitHub <noreply@github.com> 1681793086 +0200\n\nRollup merge of #110442 - ferrocene:pa-build-metrics-dry-run, r=ozkanonur\n\nAvoid including dry run steps in the build metrics\n\nIncluding steps executed during the dry run will result in a duplication of all the steps in the build metrics, which just adds noise.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e3a38438ab4ee7c313a32e5b065f81c0a97622d", "html_url": "https://github.com/rust-lang/rust/commit/1e3a38438ab4ee7c313a32e5b065f81c0a97622d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e3a38438ab4ee7c313a32e5b065f81c0a97622d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41ae7fcf9be195d062ba2f9fdf744fdf58ac79db", "url": "https://api.github.com/repos/rust-lang/rust/commits/41ae7fcf9be195d062ba2f9fdf744fdf58ac79db", "html_url": "https://github.com/rust-lang/rust/commit/41ae7fcf9be195d062ba2f9fdf744fdf58ac79db"}, {"sha": "4cd0e00655ccb88605c3bc4124edd1d6a5b3f011", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cd0e00655ccb88605c3bc4124edd1d6a5b3f011", "html_url": "https://github.com/rust-lang/rust/commit/4cd0e00655ccb88605c3bc4124edd1d6a5b3f011"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "4977ce22724f12044a1bb7f02900dc38e29028b0", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e3a38438ab4ee7c313a32e5b065f81c0a97622d/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e3a38438ab4ee7c313a32e5b065f81c0a97622d/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=1e3a38438ab4ee7c313a32e5b065f81c0a97622d", "patch": "@@ -2030,7 +2030,7 @@ impl<'a> Builder<'a> {\n         }\n \n         #[cfg(feature = \"build-metrics\")]\n-        self.metrics.enter_step(&step);\n+        self.metrics.enter_step(&step, self);\n \n         let (out, dur) = {\n             let start = Instant::now();\n@@ -2056,7 +2056,7 @@ impl<'a> Builder<'a> {\n         }\n \n         #[cfg(feature = \"build-metrics\")]\n-        self.metrics.exit_step();\n+        self.metrics.exit_step(self);\n \n         {\n             let mut stack = self.stack.borrow_mut();"}, {"sha": "e19d56ccd6adca44558add0c5ac2962118bc5848", "filename": "src/bootstrap/metrics.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1e3a38438ab4ee7c313a32e5b065f81c0a97622d/src%2Fbootstrap%2Fmetrics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e3a38438ab4ee7c313a32e5b065f81c0a97622d/src%2Fbootstrap%2Fmetrics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmetrics.rs?ref=1e3a38438ab4ee7c313a32e5b065f81c0a97622d", "patch": "@@ -4,7 +4,7 @@\n //! As this module requires additional dependencies not present during local builds, it's cfg'd\n //! away whenever the `build.metrics` config option is not set to `true`.\n \n-use crate::builder::Step;\n+use crate::builder::{Builder, Step};\n use crate::util::t;\n use crate::Build;\n use serde_derive::{Deserialize, Serialize};\n@@ -33,7 +33,12 @@ impl BuildMetrics {\n         BuildMetrics { state }\n     }\n \n-    pub(crate) fn enter_step<S: Step>(&self, step: &S) {\n+    pub(crate) fn enter_step<S: Step>(&self, step: &S, builder: &Builder<'_>) {\n+        // Do not record dry runs, as they'd be duplicates of the actual steps.\n+        if builder.config.dry_run() {\n+            return;\n+        }\n+\n         let mut state = self.state.borrow_mut();\n \n         // Consider all the stats gathered so far as the parent's.\n@@ -56,7 +61,12 @@ impl BuildMetrics {\n         });\n     }\n \n-    pub(crate) fn exit_step(&self) {\n+    pub(crate) fn exit_step(&self, builder: &Builder<'_>) {\n+        // Do not record dry runs, as they'd be duplicates of the actual steps.\n+        if builder.config.dry_run() {\n+            return;\n+        }\n+\n         let mut state = self.state.borrow_mut();\n \n         self.collect_stats(&mut *state);\n@@ -74,7 +84,12 @@ impl BuildMetrics {\n         }\n     }\n \n-    pub(crate) fn record_test(&self, name: &str, outcome: TestOutcome) {\n+    pub(crate) fn record_test(&self, name: &str, outcome: TestOutcome, builder: &Builder<'_>) {\n+        // Do not record dry runs, as they'd be duplicates of the actual steps.\n+        if builder.config.dry_run() {\n+            return;\n+        }\n+\n         let mut state = self.state.borrow_mut();\n         state\n             .running_steps"}, {"sha": "a56db9cccfe5ba254d0d2595b0154a0feccb37fb", "filename": "src/bootstrap/render_tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e3a38438ab4ee7c313a32e5b065f81c0a97622d/src%2Fbootstrap%2Frender_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e3a38438ab4ee7c313a32e5b065f81c0a97622d/src%2Fbootstrap%2Frender_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frender_tests.rs?ref=1e3a38438ab4ee7c313a32e5b065f81c0a97622d", "patch": "@@ -124,6 +124,7 @@ impl<'a> Renderer<'a> {\n                     ignore_reason: reason.map(|s| s.to_string()),\n                 },\n             },\n+            self.builder,\n         );\n \n         if self.builder.config.verbose_tests {"}]}