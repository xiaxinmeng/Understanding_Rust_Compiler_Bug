{"sha": "ec343e1524bc2eb7e3c022e53177e40c96d2e18f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMzQzZTE1MjRiYzJlYjdlM2MwMjJlNTMxNzdlNDBjOTZkMmUxOGY=", "commit": {"author": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T14:32:42Z"}, "committer": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T15:22:32Z"}, "message": "clean tests/ui/precedence.rs\n\nCleaning the empty lines for clarity.", "tree": {"sha": "d76cfc84d7052291d032bdcb7032c5a9841376d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d76cfc84d7052291d032bdcb7032c5a9841376d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec343e1524bc2eb7e3c022e53177e40c96d2e18f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec343e1524bc2eb7e3c022e53177e40c96d2e18f", "html_url": "https://github.com/rust-lang/rust/commit/ec343e1524bc2eb7e3c022e53177e40c96d2e18f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec343e1524bc2eb7e3c022e53177e40c96d2e18f/comments", "author": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69139facb2137f4c5daf0e9a149bc342ac8b7288", "url": "https://api.github.com/repos/rust-lang/rust/commits/69139facb2137f4c5daf0e9a149bc342ac8b7288", "html_url": "https://github.com/rust-lang/rust/commit/69139facb2137f4c5daf0e9a149bc342ac8b7288"}], "stats": {"total": 56, "additions": 18, "deletions": 38}, "files": [{"sha": "aadbd8d693a26b3ecfeabf674d62d5581e06126a", "filename": "tests/ui/partialeq_ne_impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec343e1524bc2eb7e3c022e53177e40c96d2e18f/tests%2Fui%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec343e1524bc2eb7e3c022e53177e40c96d2e18f/tests%2Fui%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpartialeq_ne_impl.rs?ref=ec343e1524bc2eb7e3c022e53177e40c96d2e18f", "patch": "@@ -9,7 +9,6 @@ struct Foo;\n impl PartialEq for Foo {\n     fn eq(&self, _: &Foo) -> bool { true }\n     fn ne(&self, _: &Foo) -> bool { false }\n-\n }\n \n fn main() {}"}, {"sha": "c37769d816e546941226d1f08921dcafdcef8c7a", "filename": "tests/ui/precedence.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ec343e1524bc2eb7e3c022e53177e40c96d2e18f/tests%2Fui%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec343e1524bc2eb7e3c022e53177e40c96d2e18f/tests%2Fui%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.rs?ref=ec343e1524bc2eb7e3c022e53177e40c96d2e18f", "patch": "@@ -6,34 +6,15 @@\n #[allow(eq_op)]\n fn main() {\n     1 << 2 + 3;\n-\n-\n     1 + 2 << 3;\n-\n-\n     4 >> 1 + 1;\n-\n-\n     1 + 3 >> 2;\n-\n-\n     1 ^ 1 - 1;\n-\n-\n     3 | 2 - 1;\n-\n-\n     3 & 5 - 2;\n-\n-\n-\n     -1i32.abs();\n-\n-\n     -1f32.abs();\n \n-\n-\n     // These should not trigger an error\n     let _ = (-1i32).abs();\n     let _ = (-1f32).abs();"}, {"sha": "6090be0ab0f341cf439a2a82410dc16fb9c6cae9", "filename": "tests/ui/precedence.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ec343e1524bc2eb7e3c022e53177e40c96d2e18f/tests%2Fui%2Fprecedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec343e1524bc2eb7e3c022e53177e40c96d2e18f/tests%2Fui%2Fprecedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.stderr?ref=ec343e1524bc2eb7e3c022e53177e40c96d2e18f", "patch": "@@ -11,51 +11,51 @@ note: lint level defined here\n   |        ^^^^^^^^^^\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:11:5\n-   |\n-11 |     1 + 2 << 3;\n-   |     ^^^^^^^^^^ help: consider parenthesizing your expression `(1 + 2) << 3`\n+ --> $DIR/precedence.rs:9:5\n+  |\n+9 |     1 + 2 << 3;\n+  |     ^^^^^^^^^^ help: consider parenthesizing your expression `(1 + 2) << 3`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:14:5\n+  --> $DIR/precedence.rs:10:5\n    |\n-14 |     4 >> 1 + 1;\n+10 |     4 >> 1 + 1;\n    |     ^^^^^^^^^^ help: consider parenthesizing your expression `4 >> (1 + 1)`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:17:5\n+  --> $DIR/precedence.rs:11:5\n    |\n-17 |     1 + 3 >> 2;\n+11 |     1 + 3 >> 2;\n    |     ^^^^^^^^^^ help: consider parenthesizing your expression `(1 + 3) >> 2`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:20:5\n+  --> $DIR/precedence.rs:12:5\n    |\n-20 |     1 ^ 1 - 1;\n+12 |     1 ^ 1 - 1;\n    |     ^^^^^^^^^ help: consider parenthesizing your expression `1 ^ (1 - 1)`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:23:5\n+  --> $DIR/precedence.rs:13:5\n    |\n-23 |     3 | 2 - 1;\n+13 |     3 | 2 - 1;\n    |     ^^^^^^^^^ help: consider parenthesizing your expression `3 | (2 - 1)`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:26:5\n+  --> $DIR/precedence.rs:14:5\n    |\n-26 |     3 & 5 - 2;\n+14 |     3 & 5 - 2;\n    |     ^^^^^^^^^ help: consider parenthesizing your expression `3 & (5 - 2)`\n \n error: unary minus has lower precedence than method call\n-  --> $DIR/precedence.rs:30:5\n+  --> $DIR/precedence.rs:15:5\n    |\n-30 |     -1i32.abs();\n+15 |     -1i32.abs();\n    |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent `-(1i32.abs())`\n \n error: unary minus has lower precedence than method call\n-  --> $DIR/precedence.rs:33:5\n+  --> $DIR/precedence.rs:16:5\n    |\n-33 |     -1f32.abs();\n+16 |     -1f32.abs();\n    |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent `-(1f32.abs())`\n \n error: aborting due to 9 previous errors"}]}