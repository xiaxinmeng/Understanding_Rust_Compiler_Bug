{"sha": "48f61ecbf93740359b62ad5326e70759e738d9e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZjYxZWNiZjkzNzQwMzU5YjYyYWQ1MzI2ZTcwNzU5ZTczOGQ5ZTY=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-09-15T04:54:32Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-09-15T04:54:32Z"}, "message": "iter: add the edge case tests for `range` too", "tree": {"sha": "2622bffdc4d72ce00e2af54ebdd9a561840f411e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2622bffdc4d72ce00e2af54ebdd9a561840f411e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48f61ecbf93740359b62ad5326e70759e738d9e6", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48f61ecbf93740359b62ad5326e70759e738d9e6", "html_url": "https://github.com/rust-lang/rust/commit/48f61ecbf93740359b62ad5326e70759e738d9e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48f61ecbf93740359b62ad5326e70759e738d9e6/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8149e5c99f4fddae5d442fdedfda4c085249a12e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8149e5c99f4fddae5d442fdedfda4c085249a12e", "html_url": "https://github.com/rust-lang/rust/commit/8149e5c99f4fddae5d442fdedfda4c085249a12e"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "07d2aeac627b87be769bbaf7e2d143993f362b28", "filename": "src/libstd/iter.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/48f61ecbf93740359b62ad5326e70759e738d9e6/src%2Flibstd%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48f61ecbf93740359b62ad5326e70759e738d9e6/src%2Flibstd%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiter.rs?ref=48f61ecbf93740359b62ad5326e70759e738d9e6", "patch": "@@ -2708,6 +2708,16 @@ mod tests {\n         }\n     }\n \n+    #[test]\n+    fn test_range() {\n+        assert_eq!(range(0i, 5).collect::<~[int]>(), ~[0i, 1, 2, 3, 4]);\n+        assert_eq!(range(0i, 5).invert().collect::<~[int]>(), ~[4, 3, 2, 1, 0]);\n+        assert_eq!(range(200, -5).collect::<~[int]>(), ~[]);\n+        assert_eq!(range(200, -5).invert().collect::<~[int]>(), ~[]);\n+        assert_eq!(range(200, 200).collect::<~[int]>(), ~[]);\n+        assert_eq!(range(200, 200).invert().collect::<~[int]>(), ~[]);\n+    }\n+\n     #[test]\n     fn test_range_inclusive() {\n         assert_eq!(range_inclusive(0i, 5).collect::<~[int]>(), ~[0i, 1, 2, 3, 4, 5]);"}]}