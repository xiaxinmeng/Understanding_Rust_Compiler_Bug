{"sha": "acdeedc19253130798916a8bb20651657d9f01e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZGVlZGMxOTI1MzEzMDc5ODkxNmE4YmIyMDY1MTY1N2Q5ZjAxZTU=", "commit": {"author": {"name": "Robin Kruppe", "email": "robin.kruppe@gmail.com", "date": "2017-05-14T18:33:37Z"}, "committer": {"name": "Robin Kruppe", "email": "robin.kruppe@gmail.com", "date": "2017-05-15T09:13:33Z"}, "message": "Use AtomicBool instead of a 'static mut' for LLVM init posioning", "tree": {"sha": "33ea9f258b14ac1e0e19ec8a7e8985ce025af722", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33ea9f258b14ac1e0e19ec8a7e8985ce025af722"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acdeedc19253130798916a8bb20651657d9f01e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acdeedc19253130798916a8bb20651657d9f01e5", "html_url": "https://github.com/rust-lang/rust/commit/acdeedc19253130798916a8bb20651657d9f01e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acdeedc19253130798916a8bb20651657d9f01e5/comments", "author": null, "committer": null, "parents": [{"sha": "e3f6e68d633040be0b88a0e11e6645bc506f8655", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3f6e68d633040be0b88a0e11e6645bc506f8655", "html_url": "https://github.com/rust-lang/rust/commit/e3f6e68d633040be0b88a0e11e6645bc506f8655"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "15f56036b0c1b933aebe49308108f51080d3f441", "filename": "src/librustc_trans/llvm_util.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/acdeedc19253130798916a8bb20651657d9f01e5/src%2Flibrustc_trans%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acdeedc19253130798916a8bb20651657d9f01e5/src%2Flibrustc_trans%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fllvm_util.rs?ref=acdeedc19253130798916a8bb20651657d9f01e5", "patch": "@@ -16,23 +16,25 @@ use rustc::session::config::PrintRequest;\n use libc::{c_int, c_char};\n use std::ffi::CString;\n \n+use std::sync::atomic::{AtomicBool, Ordering};\n+use std::sync::Once;\n+\n pub fn init(sess: &Session) {\n     unsafe {\n         // Before we touch LLVM, make sure that multithreading is enabled.\n-        use std::sync::Once;\n+        static POISONED: AtomicBool = AtomicBool::new(false);\n         static INIT: Once = Once::new();\n-        static mut POISONED: bool = false;\n         INIT.call_once(|| {\n             if llvm::LLVMStartMultithreaded() != 1 {\n                 // use an extra bool to make sure that all future usage of LLVM\n                 // cannot proceed despite the Once not running more than once.\n-                POISONED = true;\n+                POISONED.store(true, Ordering::SeqCst);\n             }\n \n             configure_llvm(sess);\n         });\n \n-        if POISONED {\n+        if POISONED.load(Ordering::SeqCst) {\n             bug!(\"couldn't enable multi-threaded LLVM\");\n         }\n     }"}]}