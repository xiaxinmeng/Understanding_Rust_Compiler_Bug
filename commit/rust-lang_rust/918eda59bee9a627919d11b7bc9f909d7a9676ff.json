{"sha": "918eda59bee9a627919d11b7bc9f909d7a9676ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxOGVkYTU5YmVlOWE2Mjc5MTlkMTFiN2JjOWY5MDlkN2E5Njc2ZmY=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-30T07:06:52Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-19T00:01:22Z"}, "message": "Write documentation for the Rust vim plugin", "tree": {"sha": "7e0a228f7964949fc7eef0ba060cec6f7894a526", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e0a228f7964949fc7eef0ba060cec6f7894a526"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/918eda59bee9a627919d11b7bc9f909d7a9676ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/918eda59bee9a627919d11b7bc9f909d7a9676ff", "html_url": "https://github.com/rust-lang/rust/commit/918eda59bee9a627919d11b7bc9f909d7a9676ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/918eda59bee9a627919d11b7bc9f909d7a9676ff/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd3bebcf60793477da390471d6d00a5523d716b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd3bebcf60793477da390471d6d00a5523d716b4", "html_url": "https://github.com/rust-lang/rust/commit/bd3bebcf60793477da390471d6d00a5523d716b4"}], "stats": {"total": 156, "additions": 131, "deletions": 25}, "files": [{"sha": "e0a647225a9e5af6ceabfd12a47219c091d5edfa", "filename": "src/etc/vim/doc/rust.txt", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/rust-lang/rust/blob/918eda59bee9a627919d11b7bc9f909d7a9676ff/src%2Fetc%2Fvim%2Fdoc%2Frust.txt", "raw_url": "https://github.com/rust-lang/rust/raw/918eda59bee9a627919d11b7bc9f909d7a9676ff/src%2Fetc%2Fvim%2Fdoc%2Frust.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fdoc%2Frust.txt?ref=918eda59bee9a627919d11b7bc9f909d7a9676ff", "patch": "@@ -0,0 +1,129 @@\n+*rust.txt*      Filetype plugin for Rust\n+\n+==============================================================================\n+CONTENTS                                                                *rust*\n+\n+1. Introduction                                                   |rust-intro|\n+2. Settings                                                    |rust-settings|\n+3. Commands                                                    |rust-commands|\n+4. Mappings                                                    |rust-mappings|\n+\n+==============================================================================\n+INTRODUCTION                                                      *rust-intro*\n+\n+This plugin provides syntax and supporting functionality for the Rust\n+filetype.\n+\n+==============================================================================\n+SETTINGS                                                       *rust-settings*\n+\n+This plugin has a few variables you can define in your vimrc that change the\n+behavior of the plugin.\n+\n+                                                                *g:rustc_path*\n+g:rustc_path~\n+\tSet this option to the path to rustc for use in the |:RustRun| and\n+\t|:RustExpand| commands. If unset, \"rustc\" will be located in $PATH: >\n+\t    let g:rustc_path = $HOME.\"/bin/rustc\"\n+<\n+\n+                                                  *g:rustc_makeprg_no_percent*\n+g:rustc_makeprg_no_percent~\n+\tSet this option to 1 to have 'makeprg' default to \"rustc\" instead of\n+\t\"rustc %\": >\n+\t    let g:rustc_makeprg_no_percent = 1\n+<\n+\n+                                                              *g:rust_conceal*\n+g:rust_conceal~\n+\tSet this option to turn on the basic |conceal| support: >\n+\t    let g:rust_conceal = 1\n+<\n+\n+                                                     *g:rust_conceal_mod_path*\n+g:rust_conceal_mod_path~\n+\tSet this option to turn on |conceal| for the path connecting token\n+\t\"::\": >\n+\t    let g:rust_conceal_mod_path = 1\n+<\n+\n+                                                          *g:rust_conceal_pub*\n+g:rust_conceal_pub~\n+\tSet this option to turn on |conceal| for the \"pub\" token: >\n+\t    let g:rust_conceal_pub = 1\n+<\n+\n+                                                  *g:rust_bang_comment_leader*\n+g:rust_bang_comment_leader~\n+\tSet this option to 1 to preserve the leader on multi-line doc comments\n+\tusing the /*! syntax: >\n+\t    let g:rust_bang_comment_leader = 1\n+<\n+\n+                                                 *g:ftplugin_rust_source_path*\n+g:ftplugin_rust_source_path~\n+\tSet this option to a path that should be prepended to 'path' for Rust\n+\tsource files: >\n+\t    let g:ftplugin_rust_source_path = $HOME.'/dev/rust'\n+<\n+\n+==============================================================================\n+COMMANDS                                                       *rust-commands*\n+\n+:RustRun  [args]                                                    *:RustRun*\n+:RustRun! [rustc-args] [--] [args]\n+\t\tCompiles and runs the current file. If it has unsaved changes,\n+\t\tit will be saved first using |:update|. If the current file is\n+\t\tan unnamed buffer, it will be written to a temporary file\n+\t\tfirst. The compiled binary is always placed in a temporary\n+\t\tdirectory, but is run from the current directory.\n+\n+\t\tThe arguments given to |:RustRun| will be passed to the\n+\t\tcompiled binary.\n+\n+\t\tIf ! is specified, the arguments are passed to rustc instead.\n+\t\tA \"--\" argument will separate the rustc arguments from the\n+\t\targuments passed to the binary.\n+\n+\t\tIf |g:rustc_path| is defined, it is used as the path to rustc.\n+\t\tOtherwise it is assumed rustc can be found in $PATH.\n+\n+:RustExpand  [args]                                              *:RustExpand*\n+:RustExpand! [TYPE] [args]\n+\t\tExpands the current file using --pretty and displays the\n+\t\tresults in a new split. If the current file has unsaved\n+\t\tchanges, it will be saved first using |:update|. If the\n+\t\tcurrent file is an unnamed buffer, it will be written to a\n+\t\ttemporary file first.\n+\n+\t\tThe arguments given to |:RustExpand| will be passed to rustc.\n+\t\tThis is largely intended for specifying various --cfg\n+\t\tconfigurations.\n+\n+\t\tIf ! is specified, the first argument is the expansion type to\n+\t\tpass to rustc --pretty. Otherwise it will default to\n+\t\t\"expanded\".\n+\n+\t\tIf |g:rustc_path| is defined, it is used as the path to rustc.\n+\t\tOtherwise it is assumed rustc can be found in $PATH.\n+\n+\n+==============================================================================\n+MAPPINGS                                                       *rust-mappings*\n+\n+This plugin defines mappings for |[[| and |]]| to support hanging indents.\n+\n+It also has a few other mappings:\n+\n+\t\t\t\t\t\t\t*rust_<D-r>*\n+<D-r>\t\t\tExecutes |:RustRun| with no arguments.\n+\t\t\tNote: This binding is only available in MacVim.\n+\n+\t\t\t\t\t\t\t*rust_<D-R>*\n+<D-R>\t\t\tPopulates the command line with |:RustRun|! using the\n+\t\t\targuments given to the last invocation, but does not\n+\t\t\texecute it.\n+\t\t\tNote: This binding is only available in MacVim.\n+\n+==============================================================================\n+ vim:tw=78:sw=4:noet:ts=8:ft=help:norl:"}, {"sha": "ed5d721de0859da6b1a7ee5b4df636ba1630c550", "filename": "src/etc/vim/ftplugin/rust.vim", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/918eda59bee9a627919d11b7bc9f909d7a9676ff/src%2Fetc%2Fvim%2Fftplugin%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/918eda59bee9a627919d11b7bc9f909d7a9676ff/src%2Fetc%2Fvim%2Fftplugin%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fftplugin%2Frust.vim?ref=918eda59bee9a627919d11b7bc9f909d7a9676ff", "patch": "@@ -60,33 +60,10 @@ onoremap <silent> <buffer> ]] :call rust#Jump('o', 'Forward')<CR>\n \n \" Commands {{{1\n \n-\" :RustRun will compile and run the current file. If it has unsaved changes,\n-\" they will be saved first. If it has no path, it will be written to a\n-\" temporary file first. The generated binary is always placed in a temporary\n-\" directory, but run from the current directory.\n-\"\n-\" The arguments passed to :RustRun will be passed to the generated binary.\n-\"\n-\" If ! is specified, the arguments are given to rustc as well. A -- argument\n-\" separates rustc args from the args passed to the binary.\n-\"\n-\" If g:rustc_path is defined, it is used as the path to rustc. Otherwise it is\n-\" assumed that rustc is in $PATH.\n+\" See |:RustRun| for docs\n command! -nargs=* -complete=file -bang -bar -buffer RustRun call rust#Run(<bang>0, [<f-args>])\n \n-\" :RustExpand will expand the current file using --pretty.\n-\"\n-\" Any arguments given to :RustExpand will be passed to rustc. This is largely\n-\" so you can pass various --cfg configurations.\n-\"\n-\" If ! is specified, the first argument will be interpreted as the --pretty\n-\" type. Otherwise it will default to 'expanded'.\n-\"\n-\" If the current file has unsaved changes, it will be saved first. If it's an\n-\" unnamed buffer, it will be written to a temporary file.\n-\"\n-\" If g:rustc_path is defined, it is used as the path to rustc. Otherwise it is\n-\" assumed that rustc is in $PATH.\n+\" See |:RustExpand| for docs\n command! -nargs=* -complete=customlist,rust#CompleteExpand -bang -bar -buffer RustExpand call rust#Expand(<bang>0, [<f-args>])\n \n \" Mappings {{{1"}]}