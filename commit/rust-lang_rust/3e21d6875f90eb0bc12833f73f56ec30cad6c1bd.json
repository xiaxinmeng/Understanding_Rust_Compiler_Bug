{"sha": "3e21d6875f90eb0bc12833f73f56ec30cad6c1bd", "node_id": "C_kwDOAAsO6NoAKDNlMjFkNjg3NWY5MGViMGJjMTI4MzNmNzNmNTZlYzMwY2FkNmMxYmQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-06T16:42:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-06T16:42:57Z"}, "message": "Rollup merge of #109395 - chenyukang:yukang/fix-109291, r=cjgillot\n\nFix issue when there are multiple candidates for edit_distance_with_substrings\n\nFixes #109291", "tree": {"sha": "2a4ebb5c47989796e433cfc682e3f740a556226f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a4ebb5c47989796e433cfc682e3f740a556226f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e21d6875f90eb0bc12833f73f56ec30cad6c1bd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkLvaRCRBK7hj4Ov3rIwAA1EgIACwrPiXJtG6sICioDi0rt6eh\nMAKhbox5Pmih+IVA/uQo5uRjCrC+oY7LTg0fl/Bosvx83x0Ii1QoSpF2Dp+X80Xs\n9uISnYtiBDR26DV6oplU2tVD7I213YtRv9BB5k++MrXFqwNDSK8LdZi+5Sw8CE+3\nY5UMiEm0nXj7TIP02KPust+FEEi1FsS55IscAi90tpHOAPwj7/pBWIdtJ6wYl8mT\n5VA2DyqepGjEUP9ZUUn1+zuwTdl/SROP0NSALOx6yJSLcz/EP0DgPu6J0gPSiUgC\nkV/FcDTL/gIRcAWPQQJ2UlbtXSNUIovpV2Hwk9r7pz/qwO9iECFoZoKSJscFqHc=\n=ykYd\n-----END PGP SIGNATURE-----\n", "payload": "tree 2a4ebb5c47989796e433cfc682e3f740a556226f\nparent 0534655d9b5f61dbd75cf142ec8d2d3f68b550ee\nparent 4fc3c6b07a5aff0bb3da87496daf825b128d6e08\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1680799377 +0200\ncommitter GitHub <noreply@github.com> 1680799377 +0200\n\nRollup merge of #109395 - chenyukang:yukang/fix-109291, r=cjgillot\n\nFix issue when there are multiple candidates for edit_distance_with_substrings\n\nFixes #109291\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e21d6875f90eb0bc12833f73f56ec30cad6c1bd", "html_url": "https://github.com/rust-lang/rust/commit/3e21d6875f90eb0bc12833f73f56ec30cad6c1bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e21d6875f90eb0bc12833f73f56ec30cad6c1bd/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0534655d9b5f61dbd75cf142ec8d2d3f68b550ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/0534655d9b5f61dbd75cf142ec8d2d3f68b550ee", "html_url": "https://github.com/rust-lang/rust/commit/0534655d9b5f61dbd75cf142ec8d2d3f68b550ee"}, {"sha": "4fc3c6b07a5aff0bb3da87496daf825b128d6e08", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fc3c6b07a5aff0bb3da87496daf825b128d6e08", "html_url": "https://github.com/rust-lang/rust/commit/4fc3c6b07a5aff0bb3da87496daf825b128d6e08"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "9fe9e3a7a5fd22cd2feafc6800e48e47304f4168", "filename": "compiler/rustc_span/src/edit_distance.rs", "status": "modified", "additions": 29, "deletions": 3, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3e21d6875f90eb0bc12833f73f56ec30cad6c1bd/compiler%2Frustc_span%2Fsrc%2Fedit_distance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e21d6875f90eb0bc12833f73f56ec30cad6c1bd/compiler%2Frustc_span%2Fsrc%2Fedit_distance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fedit_distance.rs?ref=3e21d6875f90eb0bc12833f73f56ec30cad6c1bd", "patch": "@@ -174,10 +174,10 @@ pub fn find_best_match_for_name(\n fn find_best_match_for_name_impl(\n     use_substring_score: bool,\n     candidates: &[Symbol],\n-    lookup: Symbol,\n+    lookup_symbol: Symbol,\n     dist: Option<usize>,\n ) -> Option<Symbol> {\n-    let lookup = lookup.as_str();\n+    let lookup = lookup_symbol.as_str();\n     let lookup_uppercase = lookup.to_uppercase();\n \n     // Priority of matches:\n@@ -190,6 +190,8 @@ fn find_best_match_for_name_impl(\n \n     let mut dist = dist.unwrap_or_else(|| cmp::max(lookup.len(), 3) / 3);\n     let mut best = None;\n+    // store the candidates with the same distance, only for `use_substring_score` current.\n+    let mut next_candidates = vec![];\n     for c in candidates {\n         match if use_substring_score {\n             edit_distance_with_substrings(lookup, c.as_str(), dist)\n@@ -198,12 +200,36 @@ fn find_best_match_for_name_impl(\n         } {\n             Some(0) => return Some(*c),\n             Some(d) => {\n-                dist = d - 1;\n+                if use_substring_score {\n+                    if d < dist {\n+                        dist = d;\n+                        next_candidates.clear();\n+                    } else {\n+                        // `d == dist` here, we need to store the candidates with the same distance\n+                        // so we won't decrease the distance in the next loop.\n+                    }\n+                    next_candidates.push(*c);\n+                } else {\n+                    dist = d - 1;\n+                }\n                 best = Some(*c);\n             }\n             None => {}\n         }\n     }\n+\n+    // We have a tie among several candidates, try to select the best among them ignoring substrings.\n+    // For example, the candidates list `force_capture`, `capture`, and user inputed `forced_capture`,\n+    // we select `force_capture` with a extra round of edit distance calculation.\n+    if next_candidates.len() > 1 {\n+        debug_assert!(use_substring_score);\n+        best = find_best_match_for_name_impl(\n+            false,\n+            &next_candidates,\n+            lookup_symbol,\n+            Some(lookup.len()),\n+        );\n+    }\n     if best.is_some() {\n         return best;\n     }"}, {"sha": "1947b16a32e6e70e0d6290361dd63e7d68ad9e38", "filename": "tests/ui/suggestions/issue-109291.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e21d6875f90eb0bc12833f73f56ec30cad6c1bd/tests%2Fui%2Fsuggestions%2Fissue-109291.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e21d6875f90eb0bc12833f73f56ec30cad6c1bd/tests%2Fui%2Fsuggestions%2Fissue-109291.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-109291.rs?ref=3e21d6875f90eb0bc12833f73f56ec30cad6c1bd", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    println!(\"Custom backtrace: {}\", std::backtrace::Backtrace::forced_capture());\n+    //~^ ERROR no function or associated item name\n+}"}, {"sha": "4ef5948d9bf2b37aefe61636a4cd977b12290b4f", "filename": "tests/ui/suggestions/issue-109291.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3e21d6875f90eb0bc12833f73f56ec30cad6c1bd/tests%2Fui%2Fsuggestions%2Fissue-109291.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e21d6875f90eb0bc12833f73f56ec30cad6c1bd/tests%2Fui%2Fsuggestions%2Fissue-109291.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-109291.stderr?ref=3e21d6875f90eb0bc12833f73f56ec30cad6c1bd", "patch": "@@ -0,0 +1,12 @@\n+error[E0599]: no function or associated item named `forced_capture` found for struct `Backtrace` in the current scope\n+  --> $DIR/issue-109291.rs:2:65\n+   |\n+LL |     println!(\"Custom backtrace: {}\", std::backtrace::Backtrace::forced_capture());\n+   |                                                                 ^^^^^^^^^^^^^^\n+   |                                                                 |\n+   |                                                                 function or associated item not found in `Backtrace`\n+   |                                                                 help: there is an associated function with a similar name: `force_capture`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}]}