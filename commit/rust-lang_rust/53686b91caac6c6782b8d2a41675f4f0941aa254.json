{"sha": "53686b91caac6c6782b8d2a41675f4f0941aa254", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzNjg2YjkxY2FhYzZjNjc4MmI4ZDJhNDE2NzVmNGYwOTQxYWEyNTQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-06-20T12:14:30Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-06-20T12:15:36Z"}, "message": "Satisfy tidy", "tree": {"sha": "cd6a5db266b04a281d39db4af3fedaed2168daad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd6a5db266b04a281d39db4af3fedaed2168daad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53686b91caac6c6782b8d2a41675f4f0941aa254", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53686b91caac6c6782b8d2a41675f4f0941aa254", "html_url": "https://github.com/rust-lang/rust/commit/53686b91caac6c6782b8d2a41675f4f0941aa254", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53686b91caac6c6782b8d2a41675f4f0941aa254/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e88b48133c703c04780a9474c029b4398ca3260", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e88b48133c703c04780a9474c029b4398ca3260", "html_url": "https://github.com/rust-lang/rust/commit/9e88b48133c703c04780a9474c029b4398ca3260"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "87e73a1b91e692010cfd0dc63652085b01f7fc10", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53686b91caac6c6782b8d2a41675f4f0941aa254/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53686b91caac6c6782b8d2a41675f4f0941aa254/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=53686b91caac6c6782b8d2a41675f4f0941aa254", "patch": "@@ -60,7 +60,7 @@ impl<T> RawVec<T, Global> {\n     /// `#[rustc_force_min_const_fn]` attribute which requires conformance\n     /// with `min_const_fn` but does not necessarily allow calling it in\n     /// `stable(...) const fn` / user code not enabling `foo` when\n-    /// `#[rustc_const_unstable(feature = \"foo\", ..)]` is present.\n+    /// `#[rustc_const_unstable(feature = \"foo\", issue = \"01234\")]` is present.\n     pub const NEW: Self = Self::new();\n \n     /// Creates the biggest possible `RawVec` (on the system heap)"}, {"sha": "50e321f9c7158f2fb2ec0b216d2012550d332b3f", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53686b91caac6c6782b8d2a41675f4f0941aa254/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53686b91caac6c6782b8d2a41675f4f0941aa254/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=53686b91caac6c6782b8d2a41675f4f0941aa254", "patch": "@@ -11,7 +11,7 @@\n //! In order to make an intrinsic usable at compile-time, one needs to copy the implementation\n //! from https://github.com/rust-lang/miri/blob/master/src/shims/intrinsics.rs to\n //! `librustc_mir/interpret/intrinsics.rs` and add a\n-//! `#[rustc_const_unstable(feature = \"foo2\", issue = \"01234\")]` to the intrinsic.\n+//! `#[rustc_const_unstable(feature = \"foo\", issue = \"01234\")]` to the intrinsic.\n //!\n //! If an intrinsic is supposed to be used from a `const fn` with a `rustc_const_stable` attribute,\n //! the intrinsic's attribute must be `rustc_const_stable`, too. Such a change should not be done"}, {"sha": "ff22b6b184e54e542dcca5a498a3e06248e40445", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/53686b91caac6c6782b8d2a41675f4f0941aa254/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53686b91caac6c6782b8d2a41675f4f0941aa254/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=53686b91caac6c6782b8d2a41675f4f0941aa254", "patch": "@@ -285,10 +285,10 @@ impl NonConstOp for Panic {\n pub struct RawPtrComparison;\n impl NonConstOp for RawPtrComparison {\n     fn emit_error(&self, ccx: &ConstCx<'_, '_>, span: Span) {\n-        let mut err = ccx.tcx.sess.struct_span_err(\n-            span,\n-            \"pointers cannot be reliably compared during const eval.\",\n-        );\n+        let mut err = ccx\n+            .tcx\n+            .sess\n+            .struct_span_err(span, \"pointers cannot be reliably compared during const eval.\");\n         err.note(\n             \"see issue #53020 <https://github.com/rust-lang/rust/issues/53020> \\\n             for more information\","}, {"sha": "e238e13b8e2da46fff8542ce21a634f011144655", "filename": "src/test/ui/consts/const-eval/const_raw_ptr_ops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53686b91caac6c6782b8d2a41675f4f0941aa254/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_raw_ptr_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53686b91caac6c6782b8d2a41675f4f0941aa254/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_raw_ptr_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_raw_ptr_ops.rs?ref=53686b91caac6c6782b8d2a41675f4f0941aa254", "patch": "@@ -1,6 +1,6 @@\n fn main() {}\n \n // unconst and bad, will thus error in miri\n-const X: bool = unsafe { &1 as *const i32 == &2 as *const i32 }; //~ ERROR cannot be reliably compared\n+const X: bool = unsafe { &1 as *const i32 == &2 as *const i32 }; //~ ERROR cannot be reliably\n // unconst and bad, will thus error in miri\n-const X2: bool = unsafe { 42 as *const i32 == 43 as *const i32 }; //~ ERROR cannot be reliably compared\n+const X2: bool = unsafe { 42 as *const i32 == 43 as *const i32 }; //~ ERROR cannot be reliably"}]}