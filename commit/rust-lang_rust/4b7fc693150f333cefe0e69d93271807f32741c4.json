{"sha": "4b7fc693150f333cefe0e69d93271807f32741c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiN2ZjNjkzMTUwZjMzM2NlZmUwZTY5ZDkzMjcxODA3ZjMyNzQxYzQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-01T12:54:17Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-01T12:54:17Z"}, "message": "Assert index relationship between type_variable_table and var_unification_table", "tree": {"sha": "8232ad3db121f32350aa78a1151aca46df373ace", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8232ad3db121f32350aa78a1151aca46df373ace"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b7fc693150f333cefe0e69d93271807f32741c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b7fc693150f333cefe0e69d93271807f32741c4", "html_url": "https://github.com/rust-lang/rust/commit/4b7fc693150f333cefe0e69d93271807f32741c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b7fc693150f333cefe0e69d93271807f32741c4/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11a1f13cd1cf6da484fd4b8bfb5f72a625c2186a", "url": "https://api.github.com/repos/rust-lang/rust/commits/11a1f13cd1cf6da484fd4b8bfb5f72a625c2186a", "html_url": "https://github.com/rust-lang/rust/commit/11a1f13cd1cf6da484fd4b8bfb5f72a625c2186a"}], "stats": {"total": 35, "additions": 13, "deletions": 22}, "files": [{"sha": "b481aa1b33d79ed032f4067aef99ca80e8b38b8d", "filename": "crates/hir_ty/src/infer/unify.rs", "status": "modified", "additions": 11, "deletions": 20, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4b7fc693150f333cefe0e69d93271807f32741c4/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b7fc693150f333cefe0e69d93271807f32741c4/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs?ref=4b7fc693150f333cefe0e69d93271807f32741c4", "patch": "@@ -225,36 +225,27 @@ impl InferenceTable {\n         }\n     }\n \n+    fn new_var(&mut self, kind: TyVariableKind, diverging: bool) -> Ty {\n+        self.type_variable_table.push(TypeVariableData { diverging });\n+        let key = self.var_unification_table.new_key(TypeVarValue::Unknown);\n+        assert_eq!(key.0 as usize, self.type_variable_table.inner.len() - 1);\n+        Ty::InferenceVar(InferenceVar::from_inner(key), kind)\n+    }\n+\n     pub(crate) fn new_type_var(&mut self) -> Ty {\n-        self.type_variable_table.push(TypeVariableData { diverging: false });\n-        Ty::InferenceVar(\n-            InferenceVar::from_inner(self.var_unification_table.new_key(TypeVarValue::Unknown)),\n-            TyVariableKind::General,\n-        )\n+        self.new_var(TyVariableKind::General, false)\n     }\n \n     pub(crate) fn new_integer_var(&mut self) -> Ty {\n-        self.type_variable_table.push(TypeVariableData { diverging: false });\n-        Ty::InferenceVar(\n-            InferenceVar::from_inner(self.var_unification_table.new_key(TypeVarValue::Unknown)),\n-            TyVariableKind::Integer,\n-        )\n+        self.new_var(TyVariableKind::Integer, false)\n     }\n \n     pub(crate) fn new_float_var(&mut self) -> Ty {\n-        self.type_variable_table.push(TypeVariableData { diverging: false });\n-        Ty::InferenceVar(\n-            InferenceVar::from_inner(self.var_unification_table.new_key(TypeVarValue::Unknown)),\n-            TyVariableKind::Float,\n-        )\n+        self.new_var(TyVariableKind::Float, false)\n     }\n \n     pub(crate) fn new_maybe_never_var(&mut self) -> Ty {\n-        self.type_variable_table.push(TypeVariableData { diverging: true });\n-        Ty::InferenceVar(\n-            InferenceVar::from_inner(self.var_unification_table.new_key(TypeVarValue::Unknown)),\n-            TyVariableKind::General,\n-        )\n+        self.new_var(TyVariableKind::General, true)\n     }\n \n     pub(crate) fn resolve_ty_completely(&mut self, ty: Ty) -> Ty {"}, {"sha": "1131eaf9236d52d3c05b14f30542b9790c0892d4", "filename": "crates/hir_ty/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b7fc693150f333cefe0e69d93271807f32741c4/crates%2Fhir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b7fc693150f333cefe0e69d93271807f32741c4/crates%2Fhir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flib.rs?ref=4b7fc693150f333cefe0e69d93271807f32741c4", "patch": "@@ -527,11 +527,11 @@ impl TypeWalk for GenericPredicate {\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct Canonical<T> {\n     pub value: T,\n-    pub kinds: Arc<[chalk_ir::TyVariableKind]>,\n+    pub kinds: Arc<[TyVariableKind]>,\n }\n \n impl<T> Canonical<T> {\n-    pub fn new(value: T, kinds: impl IntoIterator<Item = chalk_ir::TyVariableKind>) -> Self {\n+    pub fn new(value: T, kinds: impl IntoIterator<Item = TyVariableKind>) -> Self {\n         Self { value, kinds: kinds.into_iter().collect() }\n     }\n }"}]}