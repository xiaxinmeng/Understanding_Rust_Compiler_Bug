{"sha": "f74e2001b94fa67ecef00bdb7de1e120f9cf0ec8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3NGUyMDAxYjk0ZmE2N2VjZWYwMGJkYjdkZTFlMTIwZjljZjBlYzg=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2020-11-23T19:20:53Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-01-02T17:25:40Z"}, "message": "Remove redundant shadow check\n\nThere is already an assertion that consecutive lines assign to a struct\nfield.", "tree": {"sha": "eb0226e5c725ecd55e5be67ebcbe17be98cac9c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb0226e5c725ecd55e5be67ebcbe17be98cac9c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f74e2001b94fa67ecef00bdb7de1e120f9cf0ec8", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAl/wrJQACgkQHKDfKvWd\naKUGXg/+Ovoi/vWkTIhUI1FIyIIb/ht9NTuiVe42szbwieeLqVfkPv0uvLRz0pUE\nFDVYXpR/fMROTJ3QqSvXBfEbu3vqbdg0krTZ/SoV4ZSbwSB9Rt9PAjpWBt7ajq+G\nFFKpKc+Jn0TyJdV4YCQNXukHY8uSfccYNpUgA7ueYHgzF0Nd39AMXFzO3wxx2XCQ\nIFbcPrwSzyVz02U3Ln02uNrHXFKBcQDN972LM2ZhIfDxlVdUWrzjNAfEfd4WMMaK\ncTYSwxNIR7jFOxhl/RrQUoSkV9+AqkGEB7I62kqAE5zY0W7hh/GtKKfvYsYilgKC\nZ4BE2kJTON6bS2RYo4MLzWLibclq9boMtQIsP09bJO3zwOmnkJ83lY/ilx6fVzU9\n6hiwXr8Pos2nvlXX8fBAi3kWCcrPi/3mzzso98dpjfsXHSUTcgdFC654cjqwu8zm\nPT+X3B1kpFSgfbDaLY+v/toP6tt3CvAYvKyXt2ZILf3PIrD/CUmu4MlE56Koavqa\n1u85n9fFrLVjtnFbjqK0s/U5MNgjhE/+SMw3ksVyTVM2w7KLnlb0ng+tBB9PbKVD\nDWkgdQsq0SKtzeVIGQ3h99VV5i0IwXalMZ8ol/xpqV6kSOEkc1eI205DM8eTv6aZ\nJpCEoiRK75WaQfBAlKSU8Vwico2pp5KZtv3kf6uqJgKWlM9YF6I=\n=lUH4\n-----END PGP SIGNATURE-----", "payload": "tree eb0226e5c725ecd55e5be67ebcbe17be98cac9c2\nparent 173e1ba966d92570cbf64d65e2f7353bcab1c661\nauthor Cameron Steffen <cam.steffen94@gmail.com> 1606159253 -0600\ncommitter flip1995 <philipp.krones@embecosm.com> 1609608340 +0100\n\nRemove redundant shadow check\n\nThere is already an assertion that consecutive lines assign to a struct\nfield.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f74e2001b94fa67ecef00bdb7de1e120f9cf0ec8", "html_url": "https://github.com/rust-lang/rust/commit/f74e2001b94fa67ecef00bdb7de1e120f9cf0ec8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f74e2001b94fa67ecef00bdb7de1e120f9cf0ec8/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "173e1ba966d92570cbf64d65e2f7353bcab1c661", "url": "https://api.github.com/repos/rust-lang/rust/commits/173e1ba966d92570cbf64d65e2f7353bcab1c661", "html_url": "https://github.com/rust-lang/rust/commit/173e1ba966d92570cbf64d65e2f7353bcab1c661"}], "stats": {"total": 20, "additions": 2, "deletions": 18}, "files": [{"sha": "c3fe77f6250170537bd2d12815a69c438043a60a", "filename": "clippy_lints/src/default.rs", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f74e2001b94fa67ecef00bdb7de1e120f9cf0ec8/clippy_lints%2Fsrc%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f74e2001b94fa67ecef00bdb7de1e120f9cf0ec8/clippy_lints%2Fsrc%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault.rs?ref=f74e2001b94fa67ecef00bdb7de1e120f9cf0ec8", "patch": "@@ -122,15 +122,8 @@ impl LateLintPass<'_> for Default {\n             let mut assigned_fields = Vec::new();\n             let mut cancel_lint = false;\n             for consecutive_statement in &block.stmts[stmt_idx + 1..] {\n-                // interrupt if the statement is a let binding (`Local`) that shadows the original\n-                // binding\n-                if stmt_shadows_binding(consecutive_statement, binding_name) {\n-                    break;\n-                }\n                 // find out if and which field was set by this `consecutive_statement`\n-                else if let Some((field_ident, assign_rhs)) =\n-                    field_reassigned_by_stmt(consecutive_statement, binding_name)\n-                {\n+                if let Some((field_ident, assign_rhs)) = field_reassigned_by_stmt(consecutive_statement, binding_name) {\n                     // interrupt and cancel lint if assign_rhs references the original binding\n                     if contains_name(binding_name, assign_rhs) {\n                         cancel_lint = true;\n@@ -152,7 +145,7 @@ impl LateLintPass<'_> for Default {\n                         first_assign = Some(consecutive_statement);\n                     }\n                 }\n-                // interrupt also if no field was assigned, since we only want to look at consecutive statements\n+                // interrupt if no field was assigned, since we only want to look at consecutive statements\n                 else {\n                     break;\n                 }\n@@ -256,15 +249,6 @@ fn enumerate_bindings_using_default<'tcx>(\n         .collect()\n }\n \n-fn stmt_shadows_binding(this: &Stmt<'_>, shadowed: Symbol) -> bool {\n-    if let StmtKind::Local(local) = &this.kind {\n-        if let PatKind::Binding(_, _, ident, _) = local.pat.kind {\n-            return ident.name == shadowed;\n-        }\n-    }\n-    false\n-}\n-\n /// Returns the reassigned field and the assigning expression (right-hand side of assign).\n fn field_reassigned_by_stmt<'tcx>(this: &Stmt<'tcx>, binding_name: Symbol) -> Option<(Ident, &'tcx Expr<'tcx>)> {\n     if_chain! {"}]}