{"sha": "ddbe69a5b2f268042d7d68b0bb5d2cac0055519b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkYmU2OWE1YjJmMjY4MDQyZDdkNjhiMGJiNWQyY2FjMDA1NTUxOWI=", "commit": {"author": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2020-07-30T10:33:34Z"}, "committer": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2020-07-30T14:17:56Z"}, "message": "Special treatment for dereferencing a borrow to a static definition", "tree": {"sha": "29fed5f5d07136bfab3831a9f5e6d87190a2e06a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29fed5f5d07136bfab3831a9f5e6d87190a2e06a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddbe69a5b2f268042d7d68b0bb5d2cac0055519b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE0u8S3YU336XkLsQOPNdIZH7vY1kFAl8i1pQACgkQPNdIZH7v\nY1n09A/+O8rmHloUhNgipHVsLGldRfobZXz8HmebeHSy3m9IjrMIULO+WRurAG4R\nMMyMEwFEitKSmHPaZuFQ9x7S/Dpyb2iMZ+/aDf71Qeq4to3QeIX5XiF10UBabaFk\nYW3w+ru0BGotIA4AYfFEMpQ7HY7287vV9SAox/YzPSUmLGqbbqPt1myKy0rUBZt0\nv73MEW/EyLhWR0hTvNIXrXsaiR58ZItEDslox1xqUynOC8N2B2+cQE4hmUsl5GxN\nZ2UGuORMVAl0jIp3r2wTIvvUHe6svcbHBVh8ykEsesEuaK/SkQJCE3sUi5WDRmNi\nCQpVALaNS5GMq8p6LMRsGi9XQdNiTGDf/gTNLj1PYR6ZhVREsV8lKJm5xEPfMBYo\nfC3kQGsECdBjQPqOAzzO/GuDZa8lO815Av4mQ3s1q+psBntzKFDvYbvi6zcUISMI\n6M15Owo2+NYwNDnyWSTaBwrtPZDhGSEetJsf9FrjjTUzvPPefzARV6YgMj5hBKPN\nUT7QGmu2VgS/qaaqLwbtt0M5X6mZUQqR0s3uxbMOZItQYIw/M/nGKDyC9e5K6a+x\nJE8Nn3sSNIxsWSFxuDT4spANW57PZQmwP7xodIo3SkNke14JdjllyODfvnuLDiax\n/zpdgG9gKMZeSEssV/vICfkbQYbsDHnLwxsiHD3c99Io9UtlxF8=\n=Tp5u\n-----END PGP SIGNATURE-----", "payload": "tree 29fed5f5d07136bfab3831a9f5e6d87190a2e06a\nparent 1799d31847294d6e3816c17679247a5c206e809a\nauthor Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1596105214 +0800\ncommitter Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1596118676 +0800\n\nSpecial treatment for dereferencing a borrow to a static definition\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddbe69a5b2f268042d7d68b0bb5d2cac0055519b", "html_url": "https://github.com/rust-lang/rust/commit/ddbe69a5b2f268042d7d68b0bb5d2cac0055519b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddbe69a5b2f268042d7d68b0bb5d2cac0055519b/comments", "author": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1799d31847294d6e3816c17679247a5c206e809a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1799d31847294d6e3816c17679247a5c206e809a", "html_url": "https://github.com/rust-lang/rust/commit/1799d31847294d6e3816c17679247a5c206e809a"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "5f62e19938b8360c8127c8573fcc8f507630f435", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ddbe69a5b2f268042d7d68b0bb5d2cac0055519b/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddbe69a5b2f268042d7d68b0bb5d2cac0055519b/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=ddbe69a5b2f268042d7d68b0bb5d2cac0055519b", "patch": "@@ -502,9 +502,33 @@ impl<'tcx> Validator<'_, 'tcx> {\n     fn validate_place(&self, place: PlaceRef<'tcx>) -> Result<(), Unpromotable> {\n         match place {\n             PlaceRef { local, projection: [] } => self.validate_local(local),\n-            PlaceRef { local: _, projection: [proj_base @ .., elem] } => {\n+            PlaceRef { local, projection: [proj_base @ .., elem] } => {\n                 match *elem {\n-                    ProjectionElem::Deref | ProjectionElem::Downcast(..) => {\n+                    ProjectionElem::Deref => {\n+                        let mut not_promotable = true;\n+                        if let TempState::Defined { location, .. } = self.temps[local] {\n+                            let def_stmt =\n+                                self.body[location.block].statements.get(location.statement_index);\n+                            if let Some(Statement {\n+                                kind:\n+                                    StatementKind::Assign(box (_, Rvalue::Use(Operand::Constant(c)))),\n+                                ..\n+                            }) = def_stmt\n+                            {\n+                                if let Some(did) = c.check_static_ptr(self.tcx) {\n+                                    if let Some(hir::ConstContext::Static(..)) = self.const_kind {\n+                                        if !self.tcx.is_thread_local_static(did) {\n+                                            not_promotable = false;\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                        }\n+                        if not_promotable {\n+                            return Err(Unpromotable);\n+                        }\n+                    }\n+                    ProjectionElem::Downcast(..) => {\n                         return Err(Unpromotable);\n                     }\n "}, {"sha": "2d9237d11c929b11402e6f94d4096b2ac975c97f", "filename": "src/test/ui/statics/static-promotion.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ddbe69a5b2f268042d7d68b0bb5d2cac0055519b/src%2Ftest%2Fui%2Fstatics%2Fstatic-promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddbe69a5b2f268042d7d68b0bb5d2cac0055519b/src%2Ftest%2Fui%2Fstatics%2Fstatic-promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatics%2Fstatic-promotion.rs?ref=ddbe69a5b2f268042d7d68b0bb5d2cac0055519b", "patch": "@@ -0,0 +1,15 @@\n+// run-pass\n+\n+struct A<T: 'static>(&'static T);\n+struct B<T: 'static + ?Sized> {\n+    x: &'static T,\n+}\n+static C: A<B<B<[u8]>>> = {\n+    A(&B {\n+        x: &B { x: b\"hi\" as &[u8] },\n+    })\n+};\n+\n+fn main() {\n+    assert_eq!(b\"hi\", C.0.x.x);\n+}"}]}