{"sha": "9f8d30a128aa8a75a3304e0e91178dcfb5535554", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmOGQzMGExMjhhYThhNzVhMzMwNGUwZTkxMTc4ZGNmYjU1MzU1NTQ=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-03-28T23:31:12Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-28T16:49:21Z"}, "message": "reindent in parser", "tree": {"sha": "5604d48cbda10f69fd3ee991f76d0e1a98757be7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5604d48cbda10f69fd3ee991f76d0e1a98757be7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f8d30a128aa8a75a3304e0e91178dcfb5535554", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f8d30a128aa8a75a3304e0e91178dcfb5535554", "html_url": "https://github.com/rust-lang/rust/commit/9f8d30a128aa8a75a3304e0e91178dcfb5535554", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f8d30a128aa8a75a3304e0e91178dcfb5535554/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a818648aa91baaafe996a57797c7670836a61202", "url": "https://api.github.com/repos/rust-lang/rust/commits/a818648aa91baaafe996a57797c7670836a61202", "html_url": "https://github.com/rust-lang/rust/commit/a818648aa91baaafe996a57797c7670836a61202"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "7fe81120a23d59fa4706786653efb0f1efe27efa", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9f8d30a128aa8a75a3304e0e91178dcfb5535554/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f8d30a128aa8a75a3304e0e91178dcfb5535554/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=9f8d30a128aa8a75a3304e0e91178dcfb5535554", "patch": "@@ -1792,10 +1792,10 @@ pub impl Parser {\n         let lo = self.span.lo;\n         let lhs = self.parse_binops();\n         match *self.token {\n-            token::EQ => {\n-                self.bump();\n-                let rhs = self.parse_expr();\n-                self.mk_expr(lo, rhs.span.hi, expr_assign(lhs, rhs))\n+          token::EQ => {\n+              self.bump();\n+              let rhs = self.parse_expr();\n+              self.mk_expr(lo, rhs.span.hi, expr_assign(lhs, rhs))\n           }\n           token::BINOPEQ(op) => {\n               self.bump();"}]}