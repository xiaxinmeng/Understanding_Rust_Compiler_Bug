{"sha": "090f2892143ef872e561334907115c5e26eeef76", "node_id": "C_kwDOAAsO6NoAKDA5MGYyODkyMTQzZWY4NzJlNTYxMzM0OTA3MTE1YzVlMjZlZWVmNzY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-18T01:57:56Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-18T01:57:56Z"}, "message": "make an expect into proper error reporting", "tree": {"sha": "60c8a73755777e778d24c9c78cdd281a91e3d0b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60c8a73755777e778d24c9c78cdd281a91e3d0b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/090f2892143ef872e561334907115c5e26eeef76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/090f2892143ef872e561334907115c5e26eeef76", "html_url": "https://github.com/rust-lang/rust/commit/090f2892143ef872e561334907115c5e26eeef76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/090f2892143ef872e561334907115c5e26eeef76/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c85975768d42e21ec5ead95b5b301f3137c80cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c85975768d42e21ec5ead95b5b301f3137c80cf", "html_url": "https://github.com/rust-lang/rust/commit/1c85975768d42e21ec5ead95b5b301f3137c80cf"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d583e625facee2b119829a40229ff91b8ba91f79", "filename": "ui_test/src/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/090f2892143ef872e561334907115c5e26eeef76/ui_test%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090f2892143ef872e561334907115c5e26eeef76/ui_test%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Fparser.rs?ref=090f2892143ef872e561334907115c5e26eeef76", "patch": "@@ -69,9 +69,9 @@ impl Condition {\n         if c == \"on-host\" {\n             Ok(Condition::OnHost)\n         } else if let Some(bits) = c.strip_suffix(\"bit\") {\n-            let bits: u8 = bits.parse().expect(\n-                \"ignore/only filter ending in 'bit' must be of the form 'Nbit' for some integer N\",\n-            );\n+            let bits: u8 = bits.parse().map_err(|_err| {\n+                eyre!(\"invalid ignore/only filter ending in 'bit': {c:?} is not a valid bitwdith\")\n+            })?;\n             Ok(Condition::Bitwidth(bits))\n         } else if let Some(target) = c.strip_prefix(\"target-\") {\n             Ok(Condition::Target(target.to_owned()))"}]}