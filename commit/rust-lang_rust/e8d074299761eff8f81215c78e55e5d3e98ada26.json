{"sha": "e8d074299761eff8f81215c78e55e5d3e98ada26", "node_id": "C_kwDOAAsO6NoAKGU4ZDA3NDI5OTc2MWVmZjhmODEyMTVjNzhlNTVlNWQzZTk4YWRhMjY", "commit": {"author": {"name": "Wang Ruochen", "email": "wrc@ruo-chen.wang", "date": "2021-12-15T22:44:47Z"}, "committer": {"name": "Wang Ruochen", "email": "wrc@ruo-chen.wang", "date": "2021-12-15T22:44:47Z"}, "message": "Add coverage marks", "tree": {"sha": "8815ba3dd60eaeca8c6f25792a707b71d454a837", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8815ba3dd60eaeca8c6f25792a707b71d454a837"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8d074299761eff8f81215c78e55e5d3e98ada26", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEaiSth+M9lPoQjHQDxt6lcKOwJvwFAmG6b+gACgkQxt6lcKOw\nJvywLQf+J5rgzFzlcwXIqn2dWXw6LYtu8Pt6780IN6mQo/zZhB1p+z+tgk1W8yDv\nPZnLaOqkfwFmJyWFCV7/wmL4J35J9Uhrir2rGG9F3zrceAgl69z683pRn0dApvqf\noDnPJzengokv22RUrXRPdDM0GWk2pFEHQWYDT5ExExcAA19PPBhMTDLRCzgb6Fba\n9rQE0r6MDW+5wN6CnHA88uhK6KMUO5wAdccGPqR82wd9GUwIXbDzualUtFqusTpx\nddB6DMHn4OhNjtRBEunMjR4rEFXIFWUGwKoAxKtu8wuwC9TGlET04q9MckS8cHtb\nDna6VPBJ6A7MZhnQeEqyzZV4FejTpA==\n=V8xG\n-----END PGP SIGNATURE-----", "payload": "tree 8815ba3dd60eaeca8c6f25792a707b71d454a837\nparent 95a0de85d5d659e876e731725475f1c022719f31\nauthor Wang Ruochen <wrc@ruo-chen.wang> 1639608287 -0800\ncommitter Wang Ruochen <wrc@ruo-chen.wang> 1639608287 -0800\n\nAdd coverage marks\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8d074299761eff8f81215c78e55e5d3e98ada26", "html_url": "https://github.com/rust-lang/rust/commit/e8d074299761eff8f81215c78e55e5d3e98ada26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8d074299761eff8f81215c78e55e5d3e98ada26/comments", "author": {"login": "weirane", "id": 37568244, "node_id": "MDQ6VXNlcjM3NTY4MjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/37568244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weirane", "html_url": "https://github.com/weirane", "followers_url": "https://api.github.com/users/weirane/followers", "following_url": "https://api.github.com/users/weirane/following{/other_user}", "gists_url": "https://api.github.com/users/weirane/gists{/gist_id}", "starred_url": "https://api.github.com/users/weirane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weirane/subscriptions", "organizations_url": "https://api.github.com/users/weirane/orgs", "repos_url": "https://api.github.com/users/weirane/repos", "events_url": "https://api.github.com/users/weirane/events{/privacy}", "received_events_url": "https://api.github.com/users/weirane/received_events", "type": "User", "site_admin": false}, "committer": {"login": "weirane", "id": 37568244, "node_id": "MDQ6VXNlcjM3NTY4MjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/37568244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weirane", "html_url": "https://github.com/weirane", "followers_url": "https://api.github.com/users/weirane/followers", "following_url": "https://api.github.com/users/weirane/following{/other_user}", "gists_url": "https://api.github.com/users/weirane/gists{/gist_id}", "starred_url": "https://api.github.com/users/weirane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weirane/subscriptions", "organizations_url": "https://api.github.com/users/weirane/orgs", "repos_url": "https://api.github.com/users/weirane/repos", "events_url": "https://api.github.com/users/weirane/events{/privacy}", "received_events_url": "https://api.github.com/users/weirane/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95a0de85d5d659e876e731725475f1c022719f31", "url": "https://api.github.com/repos/rust-lang/rust/commits/95a0de85d5d659e876e731725475f1c022719f31", "html_url": "https://github.com/rust-lang/rust/commit/95a0de85d5d659e876e731725475f1c022719f31"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "2f44ca40ab3ebd7470219c8507457d0bb1987f25", "filename": "crates/ide_assists/src/handlers/move_guard.rs", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e8d074299761eff8f81215c78e55e5d3e98ada26/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8d074299761eff8f81215c78e55e5d3e98ada26/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs?ref=e8d074299761eff8f81215c78e55e5d3e98ada26", "patch": "@@ -163,13 +163,18 @@ pub(crate) fn move_arm_cond_to_match_guard(acc: &mut Assists, ctx: &AssistContex\n                 edit.insert(then_arm_end, format!(\"\\n{}{} => \", spaces, match_pat));\n                 match &else_block.tail_expr() {\n                     Some(else_expr) if else_only_expr => {\n+                        cov_mark::hit!(move_guard_ifelse_expr_only);\n                         edit.insert(then_arm_end, else_expr.syntax().text());\n                         edit.insert(then_arm_end, \",\");\n                     }\n                     _ if replace_node != *if_expr.syntax() => {\n+                        cov_mark::hit!(move_guard_ifelse_in_block);\n                         edit.insert(then_arm_end, else_block.dedent(1.into()).syntax().text());\n                     }\n-                    _ => edit.insert(then_arm_end, else_block.syntax().text()),\n+                    _ => {\n+                        cov_mark::hit!(move_guard_ifelse_else_block);\n+                        edit.insert(then_arm_end, else_block.syntax().text());\n+                    }\n                 }\n             }\n         },\n@@ -441,6 +446,7 @@ fn main() {\n \n     #[test]\n     fn move_arm_cond_to_match_guard_with_else_block_works() {\n+        cov_mark::check!(move_guard_ifelse_expr_only);\n         check_assist(\n             move_arm_cond_to_match_guard,\n             r#\"\n@@ -527,6 +533,40 @@ fn main() {\n \n     #[test]\n     fn move_arm_cond_to_match_guard_with_else_multiline_else_works() {\n+        cov_mark::check!(move_guard_ifelse_else_block);\n+        check_assist(\n+            move_arm_cond_to_match_guard,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x => if x > 10 {$0\n+            false\n+        } else {\n+            42;\n+            true\n+        }\n+        _ => true\n+    }\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x if x > 10 => false,\n+        x => {\n+            42;\n+            true\n+        }\n+        _ => true\n+    }\n+}\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn move_arm_cond_to_match_guard_with_else_multiline_else_block_works() {\n+        cov_mark::check!(move_guard_ifelse_in_block);\n         check_assist(\n             move_arm_cond_to_match_guard,\n             r#\""}]}