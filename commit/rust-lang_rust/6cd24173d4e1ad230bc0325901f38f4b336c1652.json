{"sha": "6cd24173d4e1ad230bc0325901f38f4b336c1652", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZDI0MTczZDRlMWFkMjMwYmMwMzI1OTAxZjM4ZjRiMzM2YzE2NTI=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-14T11:48:51Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-14T11:48:51Z"}, "message": "Add a ret_style field to fn_ctxt in trans", "tree": {"sha": "c956a8962db72323b91c1a36438d233196f4984e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c956a8962db72323b91c1a36438d233196f4984e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cd24173d4e1ad230bc0325901f38f4b336c1652", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cd24173d4e1ad230bc0325901f38f4b336c1652", "html_url": "https://github.com/rust-lang/rust/commit/6cd24173d4e1ad230bc0325901f38f4b336c1652", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cd24173d4e1ad230bc0325901f38f4b336c1652/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2aac43d809f913cc1f3c993ea27f5603c73d6627", "url": "https://api.github.com/repos/rust-lang/rust/commits/2aac43d809f913cc1f3c993ea27f5603c73d6627", "html_url": "https://github.com/rust-lang/rust/commit/2aac43d809f913cc1f3c993ea27f5603c73d6627"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "b8a2aafb154394c8187bfa56071c4ab256e811dd", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6cd24173d4e1ad230bc0325901f38f4b336c1652/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd24173d4e1ad230bc0325901f38f4b336c1652/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=6cd24173d4e1ad230bc0325901f38f4b336c1652", "patch": "@@ -2706,7 +2706,8 @@ fn trans_for_each(cx: @block_ctxt, local: @ast::local, seq: @ast::expr,\n                            ty::mk_iter_body_fn(lcx.ccx.tcx, decl_ty), 0u);\n     let lliterbody: ValueRef =\n         decl_internal_fastcall_fn(lcx.ccx.llmod, s, iter_body_llty);\n-    let fcx = new_fn_ctxt_w_id(lcx, cx.sp, lliterbody, body.node.id);\n+    let fcx = new_fn_ctxt_w_id(lcx, cx.sp, lliterbody, body.node.id,\n+                               ast::return_val);\n     fcx.iterbodyty = cx.fcx.iterbodyty;\n \n     // Generate code to load the environment out of the\n@@ -4383,8 +4384,11 @@ fn trans_ret(cx: @block_ctxt, e: option::t<@ast::expr>) -> result {\n         let t = ty::expr_ty(bcx_tcx(cx), x);\n         let lv = trans_lval(cx, x);\n         bcx = lv.res.bcx;\n-        let is_local =\n-            alt x.node {\n+        if cx.fcx.ret_style == ast::return_ref {\n+            assert lv.is_mem;\n+            Store(bcx, cx.fcx.llretptr, lv.res.val);\n+        } else {\n+            let is_local = alt x.node {\n               ast::expr_path(p) {\n                 alt bcx_tcx(bcx).def_map.get(x.id) {\n                   ast::def_local(_) { true }\n@@ -4393,9 +4397,12 @@ fn trans_ret(cx: @block_ctxt, e: option::t<@ast::expr>) -> result {\n               }\n               _ { false }\n             };\n-        if is_local {\n-            bcx = move_val(bcx, INIT, cx.fcx.llretptr, lv, t);\n-        } else { bcx = move_val_if_temp(bcx, INIT, cx.fcx.llretptr, lv, t); }\n+            if is_local {\n+                bcx = move_val(bcx, INIT, cx.fcx.llretptr, lv, t);\n+            } else {\n+                bcx = move_val_if_temp(bcx, INIT, cx.fcx.llretptr, lv, t);\n+            }\n+        }\n       }\n       _ {\n         let t = llvm::LLVMGetElementType(val_ty(cx.fcx.llretptr));\n@@ -4822,7 +4829,8 @@ fn mk_standard_basic_blocks(llfn: ValueRef) ->\n //  - new_fn_ctxt\n //  - trans_args\n fn new_fn_ctxt_w_id(cx: @local_ctxt, sp: span, llfndecl: ValueRef,\n-                    id: ast::node_id) -> @fn_ctxt {\n+                    id: ast::node_id, rstyle: ast::ret_style)\n+    -> @fn_ctxt {\n     let llbbs = mk_standard_basic_blocks(llfndecl);\n     ret @{llfn: llfndecl,\n           lltaskptr: llvm::LLVMGetParam(llfndecl, 1u),\n@@ -4845,12 +4853,13 @@ fn new_fn_ctxt_w_id(cx: @local_ctxt, sp: span, llfndecl: ValueRef,\n           mutable lltydescs: [],\n           derived_tydescs: map::mk_hashmap(ty::hash_ty, ty::eq_ty),\n           id: id,\n+          ret_style: rstyle,\n           sp: sp,\n           lcx: cx};\n }\n \n fn new_fn_ctxt(cx: @local_ctxt, sp: span, llfndecl: ValueRef) -> @fn_ctxt {\n-    be new_fn_ctxt_w_id(cx, sp, llfndecl, -1);\n+    ret new_fn_ctxt_w_id(cx, sp, llfndecl, -1, ast::return_val);\n }\n \n // NB: must keep 4 fns in sync:\n@@ -5024,7 +5033,7 @@ fn trans_closure(bcx_maybe: option::t<@block_ctxt>,\n     set_uwtable(llfndecl);\n \n     // Set up arguments to the function.\n-    let fcx = new_fn_ctxt_w_id(cx, sp, llfndecl, id);\n+    let fcx = new_fn_ctxt_w_id(cx, sp, llfndecl, id, f.decl.cf);\n     create_llargs_for_fn_args(fcx, f.proto, ty_self,\n                               ty::ret_ty_of_fn(cx.ccx.tcx, id), f.decl.inputs,\n                               ty_params);"}, {"sha": "c6e30309687ff53d8e68a34e7aab3397e33f61d3", "filename": "src/comp/middle/trans_common.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6cd24173d4e1ad230bc0325901f38f4b336c1652/src%2Fcomp%2Fmiddle%2Ftrans_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd24173d4e1ad230bc0325901f38f4b336c1652/src%2Fcomp%2Fmiddle%2Ftrans_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_common.rs?ref=6cd24173d4e1ad230bc0325901f38f4b336c1652", "patch": "@@ -261,6 +261,7 @@ type fn_ctxt =\n      mutable lltydescs: [ValueRef],\n      derived_tydescs: hashmap<ty::t, derived_tydesc_info>,\n      id: ast::node_id,\n+     ret_style: ast::ret_style,\n      sp: span,\n      lcx: @local_ctxt};\n "}]}