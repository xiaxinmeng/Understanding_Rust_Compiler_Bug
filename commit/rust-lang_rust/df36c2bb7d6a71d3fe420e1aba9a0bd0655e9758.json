{"sha": "df36c2bb7d6a71d3fe420e1aba9a0bd0655e9758", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMzZjMmJiN2Q2YTcxZDNmZTQyMGUxYWJhOWEwYmQwNjU1ZTk3NTg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-20T07:32:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-20T07:32:01Z"}, "message": "expand explanation of how we treat validity invariants", "tree": {"sha": "03a0a14a4c696e0766c29bc3bfbfbaa7af4e17e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03a0a14a4c696e0766c29bc3bfbfbaa7af4e17e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df36c2bb7d6a71d3fe420e1aba9a0bd0655e9758", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df36c2bb7d6a71d3fe420e1aba9a0bd0655e9758", "html_url": "https://github.com/rust-lang/rust/commit/df36c2bb7d6a71d3fe420e1aba9a0bd0655e9758", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df36c2bb7d6a71d3fe420e1aba9a0bd0655e9758/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f761450aba2fec6622d13159c10888c844b31ae1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f761450aba2fec6622d13159c10888c844b31ae1", "html_url": "https://github.com/rust-lang/rust/commit/f761450aba2fec6622d13159c10888c844b31ae1"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "ae2f5f506f16ff3a1c328dccbc04d9e7b28772c1", "filename": "README.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/df36c2bb7d6a71d3fe420e1aba9a0bd0655e9758/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/df36c2bb7d6a71d3fe420e1aba9a0bd0655e9758/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=df36c2bb7d6a71d3fe420e1aba9a0bd0655e9758", "patch": "@@ -23,9 +23,11 @@ Be aware that Miri will not catch all possible errors in your program, and\n cannot run all programs:\n \n * There are still plenty of open questions around the basic invariants for some\n-  types and when these invariants even have to hold, so if you program runs fine\n-  in Miri right now that is by no means a guarantee that it is UB-free when\n-  these questions get answered.\n+  types and when these invariants even have to hold. Miri tries to avoid false\n+  positives here, so if you program runs fine in Miri right now that is by no\n+  means a guarantee that it is UB-free when these questions get answered. In\n+  particular, Miri does currently not check that integers are initialized or\n+  that references point to valid data.\n * If the program relies on unspecified details of how data is laid out, it will\n   still run fine in Miri -- but might break (including causing UB) on different\n   compiler versions or different platforms."}]}