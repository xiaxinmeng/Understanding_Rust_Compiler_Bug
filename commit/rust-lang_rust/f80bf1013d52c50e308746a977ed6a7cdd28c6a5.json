{"sha": "f80bf1013d52c50e308746a977ed6a7cdd28c6a5", "node_id": "C_kwDOAAsO6NoAKGY4MGJmMTAxM2Q1MmM1MGUzMDg3NDZhOTc3ZWQ2YTdjZGQyOGM2YTU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-24T13:21:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-24T13:21:05Z"}, "message": "don't ICE on invalid dyn calls", "tree": {"sha": "4eca02dc3fbcf2542297f804a6bdb97c4b43434c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4eca02dc3fbcf2542297f804a6bdb97c4b43434c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f80bf1013d52c50e308746a977ed6a7cdd28c6a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f80bf1013d52c50e308746a977ed6a7cdd28c6a5", "html_url": "https://github.com/rust-lang/rust/commit/f80bf1013d52c50e308746a977ed6a7cdd28c6a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f80bf1013d52c50e308746a977ed6a7cdd28c6a5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4151a41a0b275dee59ffbbc115e7bfc5be8a8c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4151a41a0b275dee59ffbbc115e7bfc5be8a8c3", "html_url": "https://github.com/rust-lang/rust/commit/b4151a41a0b275dee59ffbbc115e7bfc5be8a8c3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8af8369f6f921542be41ab559111811973c59164", "filename": "compiler/rustc_const_eval/src/interpret/terminator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f80bf1013d52c50e308746a977ed6a7cdd28c6a5/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f80bf1013d52c50e308746a977ed6a7cdd28c6a5/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs?ref=f80bf1013d52c50e308746a977ed6a7cdd28c6a5", "patch": "@@ -571,8 +571,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n                 // Now determine the actual method to call. We can do that in two different ways and\n                 // compare them to ensure everything fits.\n-                let ty::VtblEntry::Method(fn_inst) = self.get_vtable_entries(vptr)?[idx] else {\n-                    span_bug!(self.cur_span(), \"dyn call index points at something that is not a method\")\n+                let Some(ty::VtblEntry::Method(fn_inst)) = self.get_vtable_entries(vptr)?.get(idx).copied() else {\n+                    throw_ub_format!(\"`dyn` call trying to call something that is not a method\")\n                 };\n                 if cfg!(debug_assertions) {\n                     let tcx = *self.tcx;"}]}