{"sha": "3a19df20daefa3ab62a356d9a2c603d0e396fdd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMTlkZjIwZGFlZmEzYWI2MmEzNTZkOWEyYzYwM2QwZTM5NmZkZDQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-04-22T19:11:46Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-04-22T19:11:46Z"}, "message": "review comments: deduplicate tests", "tree": {"sha": "472f9b6f2a456c74eef1cdb454fe53482dee2ca1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/472f9b6f2a456c74eef1cdb454fe53482dee2ca1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a19df20daefa3ab62a356d9a2c603d0e396fdd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a19df20daefa3ab62a356d9a2c603d0e396fdd4", "html_url": "https://github.com/rust-lang/rust/commit/3a19df20daefa3ab62a356d9a2c603d0e396fdd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a19df20daefa3ab62a356d9a2c603d0e396fdd4/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45bbd14db4f12172cfb4f00e46b1f65ced0dd224", "url": "https://api.github.com/repos/rust-lang/rust/commits/45bbd14db4f12172cfb4f00e46b1f65ced0dd224", "html_url": "https://github.com/rust-lang/rust/commit/45bbd14db4f12172cfb4f00e46b1f65ced0dd224"}], "stats": {"total": 163, "additions": 4, "deletions": 159}, "files": [{"sha": "c02d1f54e56492a3ca3c20dd4457f21e78dd73b3", "filename": "src/test/ui/c-variadic/variadic-ffi-3.rs", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/45bbd14db4f12172cfb4f00e46b1f65ced0dd224/src%2Ftest%2Fui%2Fc-variadic%2Fvariadic-ffi-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45bbd14db4f12172cfb4f00e46b1f65ced0dd224/src%2Ftest%2Fui%2Fc-variadic%2Fvariadic-ffi-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fc-variadic%2Fvariadic-ffi-3.rs?ref=45bbd14db4f12172cfb4f00e46b1f65ced0dd224", "patch": "@@ -1,29 +0,0 @@\n-extern {\n-    fn foo(f: isize, x: u8, ...);\n-    //~^ defined here\n-    //~| defined here\n-}\n-\n-extern \"C\" fn bar(f: isize, x: u8) {}\n-\n-fn main() {\n-    unsafe {\n-        foo(); //~ ERROR: this function takes at least 2 parameters but 0 parameters were supplied\n-        foo(1); //~ ERROR: this function takes at least 2 parameters but 1 parameter was supplied\n-\n-        let x: unsafe extern \"C\" fn(f: isize, x: u8) = foo;\n-        //~^ ERROR: mismatched types\n-        //~| expected type `unsafe extern \"C\" fn(isize, u8)`\n-\n-        let y: extern \"C\" fn(f: isize, x: u8, ...) = bar;\n-        //~^ ERROR: mismatched types\n-        //~| expected type `for<'r> extern \"C\" fn(isize, u8, std::ffi::VaList<'r>, ...)`\n-\n-        foo(1, 2, 3f32); //~ ERROR can't pass `f32` to variadic function\n-        foo(1, 2, true); //~ ERROR can't pass `bool` to variadic function\n-        foo(1, 2, 1i8); //~ ERROR can't pass `i8` to variadic function\n-        foo(1, 2, 1u8); //~ ERROR can't pass `u8` to variadic function\n-        foo(1, 2, 1i16); //~ ERROR can't pass `i16` to variadic function\n-        foo(1, 2, 1u16); //~ ERROR can't pass `u16` to variadic function\n-    }\n-}"}, {"sha": "287622525722f0de0f387daedafd21b5eddd20ee", "filename": "src/test/ui/c-variadic/variadic-ffi-3.stderr", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/45bbd14db4f12172cfb4f00e46b1f65ced0dd224/src%2Ftest%2Fui%2Fc-variadic%2Fvariadic-ffi-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45bbd14db4f12172cfb4f00e46b1f65ced0dd224/src%2Ftest%2Fui%2Fc-variadic%2Fvariadic-ffi-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fc-variadic%2Fvariadic-ffi-3.stderr?ref=45bbd14db4f12172cfb4f00e46b1f65ced0dd224", "patch": "@@ -1,76 +0,0 @@\n-error[E0060]: this function takes at least 2 parameters but 0 parameters were supplied\n-  --> $DIR/variadic-ffi-3.rs:11:9\n-   |\n-LL |     fn foo(f: isize, x: u8, ...);\n-   |     ----------------------------- defined here\n-...\n-LL |         foo();\n-   |         ^^^^^ expected at least 2 parameters\n-\n-error[E0060]: this function takes at least 2 parameters but 1 parameter was supplied\n-  --> $DIR/variadic-ffi-3.rs:12:9\n-   |\n-LL |     fn foo(f: isize, x: u8, ...);\n-   |     ----------------------------- defined here\n-...\n-LL |         foo(1);\n-   |         ^^^^^^ expected at least 2 parameters\n-\n-error[E0308]: mismatched types\n-  --> $DIR/variadic-ffi-3.rs:14:56\n-   |\n-LL |         let x: unsafe extern \"C\" fn(f: isize, x: u8) = foo;\n-   |                                                        ^^^ expected non-variadic fn, found variadic function\n-   |\n-   = note: expected type `unsafe extern \"C\" fn(isize, u8)`\n-              found type `for<'r> unsafe extern \"C\" fn(isize, u8, std::ffi::VaList<'r>, ...) {foo}`\n-\n-error[E0308]: mismatched types\n-  --> $DIR/variadic-ffi-3.rs:18:54\n-   |\n-LL |         let y: extern \"C\" fn(f: isize, x: u8, ...) = bar;\n-   |                                                      ^^^ expected variadic fn, found non-variadic function\n-   |\n-   = note: expected type `for<'r> extern \"C\" fn(isize, u8, std::ffi::VaList<'r>, ...)`\n-              found type `extern \"C\" fn(isize, u8) {bar}`\n-\n-error[E0617]: can't pass `f32` to variadic function\n-  --> $DIR/variadic-ffi-3.rs:22:19\n-   |\n-LL |         foo(1, 2, 3f32);\n-   |                   ^^^^ help: cast the value to `c_double`: `3f32 as c_double`\n-\n-error[E0617]: can't pass `bool` to variadic function\n-  --> $DIR/variadic-ffi-3.rs:23:19\n-   |\n-LL |         foo(1, 2, true);\n-   |                   ^^^^ help: cast the value to `c_int`: `true as c_int`\n-\n-error[E0617]: can't pass `i8` to variadic function\n-  --> $DIR/variadic-ffi-3.rs:24:19\n-   |\n-LL |         foo(1, 2, 1i8);\n-   |                   ^^^ help: cast the value to `c_int`: `1i8 as c_int`\n-\n-error[E0617]: can't pass `u8` to variadic function\n-  --> $DIR/variadic-ffi-3.rs:25:19\n-   |\n-LL |         foo(1, 2, 1u8);\n-   |                   ^^^ help: cast the value to `c_uint`: `1u8 as c_uint`\n-\n-error[E0617]: can't pass `i16` to variadic function\n-  --> $DIR/variadic-ffi-3.rs:26:19\n-   |\n-LL |         foo(1, 2, 1i16);\n-   |                   ^^^^ help: cast the value to `c_int`: `1i16 as c_int`\n-\n-error[E0617]: can't pass `u16` to variadic function\n-  --> $DIR/variadic-ffi-3.rs:27:19\n-   |\n-LL |         foo(1, 2, 1u16);\n-   |                   ^^^^ help: cast the value to `c_uint`: `1u16 as c_uint`\n-\n-error: aborting due to 10 previous errors\n-\n-Some errors have detailed explanations: E0060, E0308, E0617.\n-For more information about an error, try `rustc --explain E0060`."}, {"sha": "562f75b8e85bda53e18794bb550db0ff18679a74", "filename": "src/test/ui/structs/struct-base-wrong-type-2.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/45bbd14db4f12172cfb4f00e46b1f65ced0dd224/src%2Ftest%2Fui%2Fstructs%2Fstruct-base-wrong-type-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45bbd14db4f12172cfb4f00e46b1f65ced0dd224/src%2Ftest%2Fui%2Fstructs%2Fstruct-base-wrong-type-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-base-wrong-type-2.rs?ref=45bbd14db4f12172cfb4f00e46b1f65ced0dd224", "patch": "@@ -1,19 +0,0 @@\n-// Check that `base` in `Fru { field: expr, ..base }` must have right type.\n-//\n-// See also struct-base-wrong-type.rs, which tests same condition\n-// within a const expression.\n-\n-struct Foo { a: isize, b: isize }\n-struct Bar { x: isize }\n-\n-fn main() {\n-    let b = Bar { x: 5 };\n-    let f = Foo { a: 2, ..b }; //~  ERROR mismatched types\n-                               //~| expected type `Foo`\n-                               //~| found type `Bar`\n-                               //~| expected struct `Foo`, found struct `Bar`\n-    let f__isize = Foo { a: 2, ..4 }; //~  ERROR mismatched types\n-                                 //~| expected type `Foo`\n-                                 //~| found type `{integer}`\n-                                 //~| expected struct `Foo`, found integer\n-}"}, {"sha": "d02ed205e92703a190a38f6eaf0d9e2d4b1d19c4", "filename": "src/test/ui/structs/struct-base-wrong-type-2.stderr", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/45bbd14db4f12172cfb4f00e46b1f65ced0dd224/src%2Ftest%2Fui%2Fstructs%2Fstruct-base-wrong-type-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45bbd14db4f12172cfb4f00e46b1f65ced0dd224/src%2Ftest%2Fui%2Fstructs%2Fstruct-base-wrong-type-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-base-wrong-type-2.stderr?ref=45bbd14db4f12172cfb4f00e46b1f65ced0dd224", "patch": "@@ -1,21 +0,0 @@\n-error[E0308]: mismatched types\n-  --> $DIR/struct-base-wrong-type-2.rs:11:27\n-   |\n-LL |     let f = Foo { a: 2, ..b };\n-   |                           ^ expected struct `Foo`, found struct `Bar`\n-   |\n-   = note: expected type `Foo`\n-              found type `Bar`\n-\n-error[E0308]: mismatched types\n-  --> $DIR/struct-base-wrong-type-2.rs:15:34\n-   |\n-LL |     let f__isize = Foo { a: 2, ..4 };\n-   |                                  ^ expected struct `Foo`, found integer\n-   |\n-   = note: expected type `Foo`\n-              found type `{integer}`\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0308`."}, {"sha": "b64c6b499369f1e08e183087f7dbc63c069d3b93", "filename": "src/test/ui/structs/struct-base-wrong-type.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3a19df20daefa3ab62a356d9a2c603d0e396fdd4/src%2Ftest%2Fui%2Fstructs%2Fstruct-base-wrong-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a19df20daefa3ab62a356d9a2c603d0e396fdd4/src%2Ftest%2Fui%2Fstructs%2Fstruct-base-wrong-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-base-wrong-type.rs?ref=3a19df20daefa3ab62a356d9a2c603d0e396fdd4", "patch": "@@ -1,24 +1,14 @@\n // Check that `base` in `Fru { field: expr, ..base }` must have right type.\n-//\n-// See also struct-base-wrong-type-2.rs, which tests same condition\n-// within a function body.\n \n struct Foo { a: isize, b: isize }\n struct Bar { x: isize }\n \n static bar: Bar = Bar { x: 5 };\n static foo: Foo = Foo { a: 2, ..bar }; //~  ERROR mismatched types\n-                                       //~| expected type `Foo`\n-                                       //~| found type `Bar`\n-                                       //~| expected struct `Foo`, found struct `Bar`\n static foo_i: Foo = Foo { a: 2, ..4 }; //~  ERROR mismatched types\n-                                       //~| expected type `Foo`\n-                                       //~| found type `{integer}`\n-                                       //~| expected struct `Foo`, found integer\n \n fn main() {\n     let b = Bar { x: 5 };\n-    // See also struct-base-wrong-type-2.rs, which checks these errors on isolation.\n     let f = Foo { a: 2, ..b };        //~ ERROR mismatched types\n     let f__isize = Foo { a: 2, ..4 }; //~ ERROR mismatched types\n }"}, {"sha": "a0216305f3115a7c3d709a42b3b15ecd8994b2d6", "filename": "src/test/ui/structs/struct-base-wrong-type.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3a19df20daefa3ab62a356d9a2c603d0e396fdd4/src%2Ftest%2Fui%2Fstructs%2Fstruct-base-wrong-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a19df20daefa3ab62a356d9a2c603d0e396fdd4/src%2Ftest%2Fui%2Fstructs%2Fstruct-base-wrong-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-base-wrong-type.stderr?ref=3a19df20daefa3ab62a356d9a2c603d0e396fdd4", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/struct-base-wrong-type.rs:10:33\n+  --> $DIR/struct-base-wrong-type.rs:7:33\n    |\n LL | static foo: Foo = Foo { a: 2, ..bar };\n    |                                 ^^^ expected struct `Foo`, found struct `Bar`\n@@ -8,7 +8,7 @@ LL | static foo: Foo = Foo { a: 2, ..bar };\n               found type `Bar`\n \n error[E0308]: mismatched types\n-  --> $DIR/struct-base-wrong-type.rs:14:35\n+  --> $DIR/struct-base-wrong-type.rs:8:35\n    |\n LL | static foo_i: Foo = Foo { a: 2, ..4 };\n    |                                   ^ expected struct `Foo`, found integer\n@@ -17,7 +17,7 @@ LL | static foo_i: Foo = Foo { a: 2, ..4 };\n               found type `{integer}`\n \n error[E0308]: mismatched types\n-  --> $DIR/struct-base-wrong-type.rs:22:27\n+  --> $DIR/struct-base-wrong-type.rs:12:27\n    |\n LL |     let f = Foo { a: 2, ..b };\n    |                           ^ expected struct `Foo`, found struct `Bar`\n@@ -26,7 +26,7 @@ LL |     let f = Foo { a: 2, ..b };\n               found type `Bar`\n \n error[E0308]: mismatched types\n-  --> $DIR/struct-base-wrong-type.rs:23:34\n+  --> $DIR/struct-base-wrong-type.rs:13:34\n    |\n LL |     let f__isize = Foo { a: 2, ..4 };\n    |                                  ^ expected struct `Foo`, found integer"}]}