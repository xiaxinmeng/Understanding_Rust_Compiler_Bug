{"sha": "ab3e4a27894295ec0fca28b492450f2b22fbad4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiM2U0YTI3ODk0Mjk1ZWMwZmNhMjhiNDkyNDUwZjJiMjJmYmFkNGU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-06T11:53:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-06T11:53:38Z"}, "message": "argue why at_exit_imp is fine", "tree": {"sha": "c9832356425aeac026b258f49aedc6a13667671d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9832356425aeac026b258f49aedc6a13667671d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab3e4a27894295ec0fca28b492450f2b22fbad4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab3e4a27894295ec0fca28b492450f2b22fbad4e", "html_url": "https://github.com/rust-lang/rust/commit/ab3e4a27894295ec0fca28b492450f2b22fbad4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab3e4a27894295ec0fca28b492450f2b22fbad4e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22457deef7e4205b46127fbbe4d0c720aa60b999", "url": "https://api.github.com/repos/rust-lang/rust/commits/22457deef7e4205b46127fbbe4d0c720aa60b999", "html_url": "https://github.com/rust-lang/rust/commit/22457deef7e4205b46127fbbe4d0c720aa60b999"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "30019088eb689dc586ff01d63152373fed8a7eea", "filename": "src/libstd/sys_common/at_exit_imp.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab3e4a27894295ec0fca28b492450f2b22fbad4e/src%2Flibstd%2Fsys_common%2Fat_exit_imp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3e4a27894295ec0fca28b492450f2b22fbad4e/src%2Flibstd%2Fsys_common%2Fat_exit_imp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fat_exit_imp.rs?ref=ab3e4a27894295ec0fca28b492450f2b22fbad4e", "patch": "@@ -64,6 +64,7 @@ pub fn cleanup() {\n             if !queue.is_null() {\n                 let queue: Box<Queue> = Box::from_raw(queue);\n                 for to_run in *queue {\n+                    // We are not holding any lock, so reentrancy is fine.\n                     to_run();\n                 }\n             }\n@@ -75,9 +76,8 @@ pub fn push(f: Box<dyn FnBox()>) -> bool {\n     unsafe {\n         let _guard = LOCK.lock();\n         if init() {\n-            // This could reentrantly call `push` again, which is a problem because\n-            // `LOCK` allows reentrancy!\n-            // FIXME: Add argument why this is okay.\n+            // We are just moving `f` around, not calling it.\n+            // There is no possibility of reentrancy here.\n             (*QUEUE).push(f);\n             true\n         } else {"}]}