{"sha": "ba770ae0945346bfd6edc1c07734028c32e48d4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNzcwYWUwOTQ1MzQ2YmZkNmVkYzFjMDc3MzQwMjhjMzJlNDhkNGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-24T01:07:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-24T01:07:36Z"}, "message": "Auto merge of #26521 - oli-obk:android-x86-libclibc, r=alexcrichton\n\nAll types are same as Android/arm.  So I add condition for Android/x86\r\n\r\ncloses #25475\r\n\r\nr? @alexcrichton", "tree": {"sha": "face8b9753236f71891c8a4ab1fd44f24966c0a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/face8b9753236f71891c8a4ab1fd44f24966c0a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba770ae0945346bfd6edc1c07734028c32e48d4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba770ae0945346bfd6edc1c07734028c32e48d4e", "html_url": "https://github.com/rust-lang/rust/commit/ba770ae0945346bfd6edc1c07734028c32e48d4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba770ae0945346bfd6edc1c07734028c32e48d4e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b4a672a8ff711f9f04aca55a1149fe8f9a31b82", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b4a672a8ff711f9f04aca55a1149fe8f9a31b82", "html_url": "https://github.com/rust-lang/rust/commit/4b4a672a8ff711f9f04aca55a1149fe8f9a31b82"}, {"sha": "11ec95b949e7d7f0262321ce13c6b5243a5bdf3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/11ec95b949e7d7f0262321ce13c6b5243a5bdf3d", "html_url": "https://github.com/rust-lang/rust/commit/11ec95b949e7d7f0262321ce13c6b5243a5bdf3d"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "47268fbc4c1122d04b07ea10da5888b652378d3c", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ba770ae0945346bfd6edc1c07734028c32e48d4e/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba770ae0945346bfd6edc1c07734028c32e48d4e/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=ba770ae0945346bfd6edc1c07734028c32e48d4e", "patch": "@@ -441,12 +441,12 @@ pub mod types {\n                 pub type intmax_t = i64;\n                 pub type uintmax_t = u64;\n             }\n-            #[cfg(any(target_arch = \"x86\",\n-                      target_arch = \"mips\",\n+            #[cfg(any(target_arch = \"mips\",\n                       target_arch = \"mipsel\",\n                       target_arch = \"powerpc\",\n                       target_arch = \"le32\",\n-                      all(target_arch = \"arm\", not(target_os = \"android\"))))]\n+                      all(any(target_arch = \"arm\", target_arch = \"x86\"),\n+                          not(target_os = \"android\"))))]\n             pub mod posix88 {\n                 pub type off_t = i32;\n                 pub type dev_t = u64;\n@@ -458,7 +458,8 @@ pub mod types {\n                 pub type mode_t = u32;\n                 pub type ssize_t = i32;\n             }\n-            #[cfg(all(target_arch = \"arm\", target_os = \"android\"))]\n+            #[cfg(all(any(target_arch = \"arm\", target_arch = \"x86\"),\n+                      target_os = \"android\"))]\n             pub mod posix88 {\n                 pub type off_t = i32;\n                 pub type dev_t = u32;\n@@ -473,7 +474,8 @@ pub mod types {\n             #[cfg(any(target_arch = \"x86\",\n                       target_arch = \"le32\",\n                       target_arch = \"powerpc\",\n-                      all(target_arch = \"arm\", not(target_os = \"android\"))))]\n+                      all(any(target_arch = \"arm\", target_arch = \"x86\"),\n+                          not(target_os = \"android\"))))]\n             pub mod posix01 {\n                 use types::os::arch::c95::{c_short, c_long, time_t};\n                 use types::os::arch::posix88::{dev_t, gid_t, ino_t};\n@@ -519,7 +521,8 @@ pub mod types {\n                     pub __size: [u32; 9]\n                 }\n             }\n-            #[cfg(all(target_arch = \"arm\", target_os = \"android\"))]\n+            #[cfg(all(any(target_arch = \"arm\", target_arch = \"x86\"),\n+                          target_os = \"android\"))]\n             pub mod posix01 {\n                 use types::os::arch::c95::{c_uchar, c_uint, c_ulong, time_t};\n                 use types::os::arch::c99::{c_longlong, c_ulonglong};\n@@ -5916,13 +5919,15 @@ pub mod funcs {\n             use types::os::arch::c95::c_int;\n             use types::os::common::posix01::sighandler_t;\n \n-            #[cfg(not(all(target_os = \"android\", target_arch = \"arm\")))]\n+            #[cfg(not(all(target_os = \"android\", any(target_arch = \"arm\",\n+                                                     target_arch = \"x86\"))))]\n             extern {\n                 pub fn signal(signum: c_int,\n                               handler: sighandler_t) -> sighandler_t;\n             }\n \n-            #[cfg(all(target_os = \"android\", target_arch = \"arm\"))]\n+            #[cfg(all(target_os = \"android\", any(target_arch = \"arm\",\n+                                                 target_arch = \"x86\")))]\n             extern {\n                 #[link_name = \"bsd_signal\"]\n                 pub fn signal(signum: c_int,"}]}