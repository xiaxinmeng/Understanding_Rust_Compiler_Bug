{"sha": "6f0fd15da9b65a738f20f1fdad6dcc728bcf6c11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMGZkMTVkYTliNjVhNzM4ZjIwZjFmZGFkNmRjYzcyOGJjZjZjMTE=", "commit": {"author": {"name": "Enrico Schmitz", "email": "enrico@schmitz.link", "date": "2017-03-01T15:17:30Z"}, "committer": {"name": "Enrico Schmitz", "email": "es@mdtm.de", "date": "2017-03-01T15:17:30Z"}, "message": "Handle all types in to_const_range", "tree": {"sha": "0891ee1a60a2d74a14f00482ea1539e666e50ef6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0891ee1a60a2d74a14f00482ea1539e666e50ef6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f0fd15da9b65a738f20f1fdad6dcc728bcf6c11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0fd15da9b65a738f20f1fdad6dcc728bcf6c11", "html_url": "https://github.com/rust-lang/rust/commit/6f0fd15da9b65a738f20f1fdad6dcc728bcf6c11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f0fd15da9b65a738f20f1fdad6dcc728bcf6c11/comments", "author": {"login": "ensch", "id": 180274, "node_id": "MDQ6VXNlcjE4MDI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/180274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ensch", "html_url": "https://github.com/ensch", "followers_url": "https://api.github.com/users/ensch/followers", "following_url": "https://api.github.com/users/ensch/following{/other_user}", "gists_url": "https://api.github.com/users/ensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/ensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ensch/subscriptions", "organizations_url": "https://api.github.com/users/ensch/orgs", "repos_url": "https://api.github.com/users/ensch/repos", "events_url": "https://api.github.com/users/ensch/events{/privacy}", "received_events_url": "https://api.github.com/users/ensch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ensch", "id": 180274, "node_id": "MDQ6VXNlcjE4MDI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/180274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ensch", "html_url": "https://github.com/ensch", "followers_url": "https://api.github.com/users/ensch/followers", "following_url": "https://api.github.com/users/ensch/following{/other_user}", "gists_url": "https://api.github.com/users/ensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/ensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ensch/subscriptions", "organizations_url": "https://api.github.com/users/ensch/orgs", "repos_url": "https://api.github.com/users/ensch/repos", "events_url": "https://api.github.com/users/ensch/events{/privacy}", "received_events_url": "https://api.github.com/users/ensch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "353945a01b8803a663b452a56a5826508c587530", "url": "https://api.github.com/repos/rust-lang/rust/commits/353945a01b8803a663b452a56a5826508c587530", "html_url": "https://github.com/rust-lang/rust/commit/353945a01b8803a663b452a56a5826508c587530"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "1cd57e632ca71d2487b23a68b40882b8f8b195ac", "filename": "clippy_lints/src/array_indexing.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6f0fd15da9b65a738f20f1fdad6dcc728bcf6c11/clippy_lints%2Fsrc%2Farray_indexing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0fd15da9b65a738f20f1fdad6dcc728bcf6c11/clippy_lints%2Fsrc%2Farray_indexing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farray_indexing.rs?ref=6f0fd15da9b65a738f20f1fdad6dcc728bcf6c11", "patch": "@@ -2,7 +2,7 @@ use rustc::lint::*;\n use rustc::middle::const_val::ConstVal;\n use rustc::ty;\n use rustc_const_eval::ConstContext;\n-use rustc_const_math::{ConstUsize,ConstInt};\n+use rustc_const_math::{ConstUsize,ConstIsize,ConstInt};\n use rustc::hir;\n use syntax::ast::RangeLimits;\n use utils::{self, higher};\n@@ -122,7 +122,24 @@ fn to_const_range(\n     let end = match *end {\n         Some(Some(ConstVal::Integral(x))) => {\n             if limits == RangeLimits::Closed {\n-                (x + ConstInt::U8(1)).expect(\"such a big array is not realistic\")\n+                match x {\n+                    ConstInt::U8(_) => (x + ConstInt::U8(1)),\n+                    ConstInt::U16(_) => (x + ConstInt::U16(1)),\n+                    ConstInt::U32(_) => (x + ConstInt::U32(1)),\n+                    ConstInt::U64(_) => (x + ConstInt::U64(1)),\n+                    ConstInt::U128(_) => (x + ConstInt::U128(1)),\n+                    ConstInt::Usize(ConstUsize::Us16(_)) => (x + ConstInt::Usize(ConstUsize::Us16(1))),\n+                    ConstInt::Usize(ConstUsize::Us32(_)) => (x + ConstInt::Usize(ConstUsize::Us32(1))),\n+                    ConstInt::Usize(ConstUsize::Us64(_)) => (x + ConstInt::Usize(ConstUsize::Us64(1))),\n+                    ConstInt::I8(_) => (x + ConstInt::I8(1)),\n+                    ConstInt::I16(_) => (x + ConstInt::I16(1)),\n+                    ConstInt::I32(_) => (x + ConstInt::I32(1)),\n+                    ConstInt::I64(_) => (x + ConstInt::I64(1)),\n+                    ConstInt::I128(_) => (x + ConstInt::I128(1)),\n+                    ConstInt::Isize(ConstIsize::Is16(_)) => (x + ConstInt::Isize(ConstIsize::Is16(1))),\n+                    ConstInt::Isize(ConstIsize::Is32(_)) => (x + ConstInt::Isize(ConstIsize::Is32(1))),\n+                    ConstInt::Isize(ConstIsize::Is64(_)) => (x + ConstInt::Isize(ConstIsize::Is64(1))),\n+                }.expect(\"such a big array is not realistic\")\n             } else {\n                 x\n             }"}]}