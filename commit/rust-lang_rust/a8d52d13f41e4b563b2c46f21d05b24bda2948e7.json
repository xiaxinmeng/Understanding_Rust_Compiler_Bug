{"sha": "a8d52d13f41e4b563b2c46f21d05b24bda2948e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZDUyZDEzZjQxZTRiNTYzYjJjNDZmMjFkMDViMjRiZGEyOTQ4ZTc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-12-01T10:49:44Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-12-01T10:49:44Z"}, "message": "Some small changes", "tree": {"sha": "a6638ec4a87c183e2863af231f8bb956e330acb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6638ec4a87c183e2863af231f8bb956e330acb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8d52d13f41e4b563b2c46f21d05b24bda2948e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8d52d13f41e4b563b2c46f21d05b24bda2948e7", "html_url": "https://github.com/rust-lang/rust/commit/a8d52d13f41e4b563b2c46f21d05b24bda2948e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8d52d13f41e4b563b2c46f21d05b24bda2948e7/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f423c0933c056386fb547c33048600942d17c65", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f423c0933c056386fb547c33048600942d17c65", "html_url": "https://github.com/rust-lang/rust/commit/3f423c0933c056386fb547c33048600942d17c65"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "66bd3e995234fd1bcd2f9a386574e309fa43c3b8", "filename": "src/base.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a8d52d13f41e4b563b2c46f21d05b24bda2948e7/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8d52d13f41e4b563b2c46f21d05b24bda2948e7/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=a8d52d13f41e4b563b2c46f21d05b24bda2948e7", "patch": "@@ -20,6 +20,7 @@ pub fn trans_mono_item<'a, 'tcx: 'a>(\n         MonoItem::Fn(inst) => {\n             let _inst_guard =\n                 PrintOnPanic(|| format!(\"{:?} {}\", inst, tcx.symbol_name(inst).as_str()));\n+            debug_assert!(!inst.substs.needs_infer());\n             let _mir_guard = PrintOnPanic(|| {\n                 match inst.def {\n                     InstanceDef::Item(_)\n@@ -88,15 +89,14 @@ fn trans_fn<'a, 'tcx: 'a>(\n         tcx,\n         module,\n         pointer_type,\n+\n         instance,\n         mir,\n+\n         bcx,\n-        param_substs: {\n-            assert!(!instance.substs.needs_infer());\n-            instance.substs\n-        },\n         ebb_map,\n         local_map: HashMap::new(),\n+\n         comments: HashMap::new(),\n         constants,\n         caches,"}, {"sha": "1eef977fa24b375320951af9b4f4bf926884a17b", "filename": "src/common.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a8d52d13f41e4b563b2c46f21d05b24bda2948e7/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8d52d13f41e4b563b2c46f21d05b24bda2948e7/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=a8d52d13f41e4b563b2c46f21d05b24bda2948e7", "patch": "@@ -615,12 +615,14 @@ pub struct FunctionCx<'a, 'tcx: 'a, B: Backend> {\n     pub tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     pub module: &'a mut Module<B>,\n     pub pointer_type: Type, // Cached from module\n+\n     pub instance: Instance<'tcx>,\n     pub mir: &'tcx Mir<'tcx>,\n-    pub param_substs: &'tcx Substs<'tcx>,\n+\n     pub bcx: FunctionBuilder<'a>,\n     pub ebb_map: HashMap<BasicBlock, Ebb>,\n     pub local_map: HashMap<Local, CPlace<'tcx>>,\n+\n     pub comments: HashMap<Inst, String>,\n     pub constants: &'a mut crate::constant::ConstantCx,\n     pub caches: &'a mut Caches<'tcx>,\n@@ -631,7 +633,7 @@ pub struct FunctionCx<'a, 'tcx: 'a, B: Backend> {\n \n impl<'a, 'tcx: 'a, B: Backend + 'a> fmt::Debug for FunctionCx<'a, 'tcx, B> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        writeln!(f, \"{:?}\", self.param_substs)?;\n+        writeln!(f, \"{:?}\", self.instance.substs)?;\n         writeln!(f, \"{:?}\", self.local_map)?;\n \n         let mut clif = String::new();\n@@ -690,7 +692,7 @@ impl<'a, 'tcx: 'a, B: Backend + 'a> FunctionCx<'a, 'tcx, B> {\n         T: TypeFoldable<'tcx>,\n     {\n         self.tcx.subst_and_normalize_erasing_regions(\n-            self.param_substs,\n+            self.instance.substs,\n             ty::ParamEnv::reveal_all(),\n             value,\n         )"}]}