{"sha": "86487329bb385f74bed67718f2358436ddca1aa4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NDg3MzI5YmIzODVmNzRiZWQ2NzcxOGYyMzU4NDM2ZGRjYTFhYTQ=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-08-29T20:22:16Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-08-29T20:40:28Z"}, "message": "Add `Place::is_indirect`\n\nThis returns whether a `Place` references the same region of memory\nas its base, or equivalently whether it contains a `Deref` projection.\n\nThis is helpful for analyses that must track state for locals, since an\nassignment to `x` or `x.field` is fundamentally different than one to\n`*x`, which may mutate any memory region.", "tree": {"sha": "7c12cc5ecf7a9865e35fa65a7bf7a89be2264edf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c12cc5ecf7a9865e35fa65a7bf7a89be2264edf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86487329bb385f74bed67718f2358436ddca1aa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86487329bb385f74bed67718f2358436ddca1aa4", "html_url": "https://github.com/rust-lang/rust/commit/86487329bb385f74bed67718f2358436ddca1aa4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86487329bb385f74bed67718f2358436ddca1aa4/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "555d7a2fd6165b614cfc01136d8e3f5c465a1582", "url": "https://api.github.com/repos/rust-lang/rust/commits/555d7a2fd6165b614cfc01136d8e3f5c465a1582", "html_url": "https://github.com/rust-lang/rust/commit/555d7a2fd6165b614cfc01136d8e3f5c465a1582"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "a07f12cd9c5f2d839efd8c0713438c6b601a13ea", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/86487329bb385f74bed67718f2358436ddca1aa4/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86487329bb385f74bed67718f2358436ddca1aa4/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=86487329bb385f74bed67718f2358436ddca1aa4", "patch": "@@ -1801,6 +1801,23 @@ pub enum ProjectionElem<V, T> {\n     Downcast(Option<Symbol>, VariantIdx),\n }\n \n+impl<V, T> ProjectionElem<V, T> {\n+    /// Returns `true` if the target of this projection may refer to a different region of memory\n+    /// than the base.\n+    fn is_indirect(&self) -> bool {\n+        match self {\n+            Self::Deref => true,\n+\n+            | Self::Field(_, _)\n+            | Self::Index(_)\n+            | Self::ConstantIndex { .. }\n+            | Self::Subslice { .. }\n+            | Self::Downcast(_, _)\n+            => false\n+        }\n+    }\n+}\n+\n /// Alias for projections as they appear in places, where the base is a place\n /// and the index is a local.\n pub type PlaceElem<'tcx> = ProjectionElem<Local, Ty<'tcx>>;\n@@ -1862,6 +1879,14 @@ impl<'tcx> Place<'tcx> {\n         }\n     }\n \n+    /// Returns `true` if this `Place` contains a `Deref` projection.\n+    ///\n+    /// If `Place::is_indirect` returns false, the caller knows that the `Place` refers to the\n+    /// same region of memory as its base.\n+    pub fn is_indirect(&self) -> bool {\n+        self.iterate(|_, mut projections| projections.any(|proj| proj.elem.is_indirect()))\n+    }\n+\n     /// Finds the innermost `Local` from this `Place`, *if* it is either a local itself or\n     /// a single deref of a local.\n     //"}]}