{"sha": "23ba4ceb9edbd3ab962c91f5852367b4529ad8a7", "node_id": "C_kwDOAAsO6NoAKDIzYmE0Y2ViOWVkYmQzYWI5NjJjOTFmNTg1MjM2N2I0NTI5YWQ4YTc", "commit": {"author": {"name": "Mu42", "email": "mu001999@outlook.com", "date": "2023-03-06T13:05:35Z"}, "committer": {"name": "Mu42", "email": "mu001999@outlook.com", "date": "2023-03-06T13:05:35Z"}, "message": "Bless the remaining ui tests", "tree": {"sha": "14526ae52234f9feac683d70f334e3ec8651ea4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14526ae52234f9feac683d70f334e3ec8651ea4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7", "html_url": "https://github.com/rust-lang/rust/commit/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/comments", "author": {"login": "MU001999", "id": 21022101, "node_id": "MDQ6VXNlcjIxMDIyMTAx", "avatar_url": "https://avatars.githubusercontent.com/u/21022101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MU001999", "html_url": "https://github.com/MU001999", "followers_url": "https://api.github.com/users/MU001999/followers", "following_url": "https://api.github.com/users/MU001999/following{/other_user}", "gists_url": "https://api.github.com/users/MU001999/gists{/gist_id}", "starred_url": "https://api.github.com/users/MU001999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MU001999/subscriptions", "organizations_url": "https://api.github.com/users/MU001999/orgs", "repos_url": "https://api.github.com/users/MU001999/repos", "events_url": "https://api.github.com/users/MU001999/events{/privacy}", "received_events_url": "https://api.github.com/users/MU001999/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MU001999", "id": 21022101, "node_id": "MDQ6VXNlcjIxMDIyMTAx", "avatar_url": "https://avatars.githubusercontent.com/u/21022101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MU001999", "html_url": "https://github.com/MU001999", "followers_url": "https://api.github.com/users/MU001999/followers", "following_url": "https://api.github.com/users/MU001999/following{/other_user}", "gists_url": "https://api.github.com/users/MU001999/gists{/gist_id}", "starred_url": "https://api.github.com/users/MU001999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MU001999/subscriptions", "organizations_url": "https://api.github.com/users/MU001999/orgs", "repos_url": "https://api.github.com/users/MU001999/repos", "events_url": "https://api.github.com/users/MU001999/events{/privacy}", "received_events_url": "https://api.github.com/users/MU001999/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c0f55d508b49dbea5b5d69a41d998a00e7d95d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c0f55d508b49dbea5b5d69a41d998a00e7d95d2", "html_url": "https://github.com/rust-lang/rust/commit/5c0f55d508b49dbea5b5d69a41d998a00e7d95d2"}], "stats": {"total": 60, "additions": 55, "deletions": 5}, "files": [{"sha": "76a57936e6985b1e3d20a0d1f985eb915cce038f", "filename": "tests/ui/coherence/coherence-conflicting-negative-trait-impl.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/tests%2Fui%2Fcoherence%2Fcoherence-conflicting-negative-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/tests%2Fui%2Fcoherence%2Fcoherence-conflicting-negative-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcoherence%2Fcoherence-conflicting-negative-trait-impl.rs?ref=23ba4ceb9edbd3ab962c91f5852367b4529ad8a7", "patch": "@@ -13,5 +13,7 @@ impl<T: MyTrait> !Send for TestType<T> {} //~ ERROR found both positive and nega\n unsafe impl<T: 'static> Send for TestType<T> {} //~ ERROR conflicting implementations\n \n impl !Send for TestType<i32> {}\n+//~^ WARNING\n+//~| WARNING this will change its meaning\n \n fn main() {}"}, {"sha": "020199da99141327256d4ec26af91e30cb2892d6", "filename": "tests/ui/coherence/coherence-conflicting-negative-trait-impl.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/tests%2Fui%2Fcoherence%2Fcoherence-conflicting-negative-trait-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/tests%2Fui%2Fcoherence%2Fcoherence-conflicting-negative-trait-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcoherence%2Fcoherence-conflicting-negative-trait-impl.stderr?ref=23ba4ceb9edbd3ab962c91f5852367b4529ad8a7", "patch": "@@ -16,7 +16,23 @@ LL | unsafe impl<T: MyTrait + 'static> Send for TestType<T> {}\n LL | unsafe impl<T: 'static> Send for TestType<T> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `TestType<_>`\n \n-error: aborting due to 2 previous errors\n+warning: cross-crate traits with a default impl, like `Send`, should not be specialized\n+  --> $DIR/coherence-conflicting-negative-trait-impl.rs:15:1\n+   |\n+LL | impl !Send for TestType<i32> {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this will change its meaning in a future release!\n+   = note: for more information, see issue #93367 <https://github.com/rust-lang/rust/issues/93367>\n+   = note: `i32` is not a generic parameter\n+note: try using the same sequence of generic parameters as the struct definition\n+  --> $DIR/coherence-conflicting-negative-trait-impl.rs:7:1\n+   |\n+LL | struct TestType<T>(::std::marker::PhantomData<T>);\n+   | ^^^^^^^^^^^^^^^^^^\n+   = note: `#[warn(suspicious_auto_trait_impls)]` on by default\n+\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n Some errors have detailed explanations: E0119, E0751.\n For more information about an error, try `rustc --explain E0119`."}, {"sha": "bed782203af508727210c3ca00435ada7eb6c590", "filename": "tests/ui/coherence/coherence-orphan.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/tests%2Fui%2Fcoherence%2Fcoherence-orphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/tests%2Fui%2Fcoherence%2Fcoherence-orphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcoherence%2Fcoherence-orphan.rs?ref=23ba4ceb9edbd3ab962c91f5852367b4529ad8a7", "patch": "@@ -14,7 +14,8 @@ impl TheTrait<TheType> for isize { }\n \n impl TheTrait<isize> for TheType { }\n \n-impl !Send for Vec<isize> { }\n-//~^ ERROR E0117\n+impl !Send for Vec<isize> { } //~ ERROR E0117\n+//~^ WARNING\n+//~| WARNING this will change its meaning\n \n fn main() { }"}, {"sha": "9ec1d0dc32aa4d5f209a3efbb486ae178400046d", "filename": "tests/ui/coherence/coherence-orphan.stderr", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/tests%2Fui%2Fcoherence%2Fcoherence-orphan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/tests%2Fui%2Fcoherence%2Fcoherence-orphan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcoherence%2Fcoherence-orphan.stderr?ref=23ba4ceb9edbd3ab962c91f5852367b4529ad8a7", "patch": "@@ -21,6 +21,19 @@ LL | impl !Send for Vec<isize> { }\n    |\n    = note: define and implement a trait or new type instead\n \n-error: aborting due to 2 previous errors\n+warning: cross-crate traits with a default impl, like `Send`, should not be specialized\n+  --> $DIR/coherence-orphan.rs:17:1\n+   |\n+LL | impl !Send for Vec<isize> { }\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this will change its meaning in a future release!\n+   = note: for more information, see issue #93367 <https://github.com/rust-lang/rust/issues/93367>\n+   = note: `isize` is not a generic parameter\n+note: try using the same sequence of generic parameters as the struct definition\n+  --> $SRC_DIR/alloc/src/vec/mod.rs:LL:COL\n+   = note: `#[warn(suspicious_auto_trait_impls)]` on by default\n+\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0117`."}, {"sha": "5eabc3bfb13848f954d40ef97603f64d2d98f76f", "filename": "tests/ui/issues/issue-106755.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/tests%2Fui%2Fissues%2Fissue-106755.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/tests%2Fui%2Fissues%2Fissue-106755.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-106755.rs?ref=23ba4ceb9edbd3ab962c91f5852367b4529ad8a7", "patch": "@@ -15,5 +15,7 @@ impl<T: MyTrait> !Send for TestType<T> {} //~ ERROR found both positive and nega\n unsafe impl<T: 'static> Send for TestType<T> {} //~ ERROR conflicting implementations\n \n impl !Send for TestType<i32> {}\n+//~^ WARNING\n+//~| WARNING this will change its meaning\n \n fn main() {}"}, {"sha": "6b3a8427e7738033059d37ab01d73ffcd739b672", "filename": "tests/ui/issues/issue-106755.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/tests%2Fui%2Fissues%2Fissue-106755.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/23ba4ceb9edbd3ab962c91f5852367b4529ad8a7/tests%2Fui%2Fissues%2Fissue-106755.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-106755.stderr?ref=23ba4ceb9edbd3ab962c91f5852367b4529ad8a7", "patch": "@@ -16,7 +16,23 @@ LL | unsafe impl<T: MyTrait + 'static> Send for TestType<T> {}\n LL | unsafe impl<T: 'static> Send for TestType<T> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `TestType<_>`\n \n-error: aborting due to 2 previous errors\n+warning: cross-crate traits with a default impl, like `Send`, should not be specialized\n+  --> $DIR/issue-106755.rs:17:1\n+   |\n+LL | impl !Send for TestType<i32> {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this will change its meaning in a future release!\n+   = note: for more information, see issue #93367 <https://github.com/rust-lang/rust/issues/93367>\n+   = note: `i32` is not a generic parameter\n+note: try using the same sequence of generic parameters as the struct definition\n+  --> $DIR/issue-106755.rs:9:1\n+   |\n+LL | struct TestType<T>(::std::marker::PhantomData<T>);\n+   | ^^^^^^^^^^^^^^^^^^\n+   = note: `#[warn(suspicious_auto_trait_impls)]` on by default\n+\n+error: aborting due to 2 previous errors; 1 warning emitted\n \n Some errors have detailed explanations: E0119, E0751.\n For more information about an error, try `rustc --explain E0119`."}]}