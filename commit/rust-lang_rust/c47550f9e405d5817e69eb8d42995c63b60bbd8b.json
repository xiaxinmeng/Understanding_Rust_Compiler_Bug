{"sha": "c47550f9e405d5817e69eb8d42995c63b60bbd8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NzU1MGY5ZTQwNWQ1ODE3ZTY5ZWI4ZDQyOTk1YzYzYjYwYmJkOGI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-06-20T21:44:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-20T21:44:53Z"}, "message": "Rollup merge of #72790 - jonhoo:duration-is-zero, r=LukasKalbertodt\n\ncore/time: Add Duration methods for zero\n\nThis patch adds two methods to `Duration`. The first, `Duration::zero`,\nprovides a `const` constructor for getting an zero-length duration. This\nis also what `Default` provides (this was clarified in the docs), though\n`default` is not `const`.\n\nThe second, `Duration::is_zero`, returns true if a `Duration` spans no\ntime (i.e., because its components are all zero). Previously, the way to\ndo this was either to compare both `as_secs` and `subsec_nanos` to 0, to\ncompare against `Duration::new(0, 0)`, or to use the `u128` method\n`as_nanos`, none of which were particularly elegant.", "tree": {"sha": "d6ca1b1f99caa07e096b651ef2e464106b97cccb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6ca1b1f99caa07e096b651ef2e464106b97cccb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c47550f9e405d5817e69eb8d42995c63b60bbd8b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe7oNWCRBK7hj4Ov3rIwAAdHIIAAvokSnwyDiSg+R+gsu7/jUN\nkZI6tQZhSJM5fgfJIkM/hcOoWuaJOeUz/5+E4dzfvMF1QINxfsOkpkR5Zo0oo0Qe\nCnBR6rVHT3Ohxr9fRYh2G5/Dqn/eyCOdK6eX2dixBWJOFrkRUVtvvENQg2XrRBxu\n8b2x0BV/KiEU1zChJt6Z4jd8bGvXy0UTu1PuB189Zaifv5yhc7fsR2FhRWgFdd3z\nSoIEjIQtgG2pPSuvyDdXuYeFWZsnEKCIjcUBgp8NF+fqQ2NSNvx1RRYqbUzjb6mr\nRxGuOYrfyFNVxPQYv6c1YgoIwQns6I/CR37CbyRQTiyVDvwWnLo0GgbSSe7FXWM=\n=e+ed\n-----END PGP SIGNATURE-----\n", "payload": "tree d6ca1b1f99caa07e096b651ef2e464106b97cccb\nparent 1a171d0d5b4b76170da94858869e42ebb6e2ced2\nparent 386114bfd3c8240154a00b00296da9f105bd97ce\nauthor Manish Goregaokar <manishsmail@gmail.com> 1592689493 -0700\ncommitter GitHub <noreply@github.com> 1592689493 -0700\n\nRollup merge of #72790 - jonhoo:duration-is-zero, r=LukasKalbertodt\n\ncore/time: Add Duration methods for zero\n\nThis patch adds two methods to `Duration`. The first, `Duration::zero`,\nprovides a `const` constructor for getting an zero-length duration. This\nis also what `Default` provides (this was clarified in the docs), though\n`default` is not `const`.\n\nThe second, `Duration::is_zero`, returns true if a `Duration` spans no\ntime (i.e., because its components are all zero). Previously, the way to\ndo this was either to compare both `as_secs` and `subsec_nanos` to 0, to\ncompare against `Duration::new(0, 0)`, or to use the `u128` method\n`as_nanos`, none of which were particularly elegant.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c47550f9e405d5817e69eb8d42995c63b60bbd8b", "html_url": "https://github.com/rust-lang/rust/commit/c47550f9e405d5817e69eb8d42995c63b60bbd8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c47550f9e405d5817e69eb8d42995c63b60bbd8b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a171d0d5b4b76170da94858869e42ebb6e2ced2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a171d0d5b4b76170da94858869e42ebb6e2ced2", "html_url": "https://github.com/rust-lang/rust/commit/1a171d0d5b4b76170da94858869e42ebb6e2ced2"}, {"sha": "386114bfd3c8240154a00b00296da9f105bd97ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/386114bfd3c8240154a00b00296da9f105bd97ce", "html_url": "https://github.com/rust-lang/rust/commit/386114bfd3c8240154a00b00296da9f105bd97ce"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "3b6dafeee25404b151a80d898cc5866545e0114a", "filename": "src/libcore/time.rs", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/c47550f9e405d5817e69eb8d42995c63b60bbd8b/src%2Flibcore%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c47550f9e405d5817e69eb8d42995c63b60bbd8b/src%2Flibcore%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftime.rs?ref=c47550f9e405d5817e69eb8d42995c63b60bbd8b", "patch": "@@ -31,7 +31,7 @@ const MICROS_PER_SEC: u64 = 1_000_000;\n /// the number of nanoseconds.\n ///\n /// `Duration`s implement many common traits, including [`Add`], [`Sub`], and other\n-/// [`ops`] traits.\n+/// [`ops`] traits. It implements `Default` by returning a zero-length `Duration`.\n ///\n /// [`Add`]: ../../std/ops/trait.Add.html\n /// [`Sub`]: ../../std/ops/trait.Sub.html\n@@ -138,6 +138,24 @@ impl Duration {\n         Duration { secs, nanos }\n     }\n \n+    /// Creates a new `Duration` that spans no time.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(duration_zero)]\n+    /// use std::time::Duration;\n+    ///\n+    /// let duration = Duration::zero();\n+    /// assert!(duration.is_zero());\n+    /// assert_eq!(duration.as_nanos(), 0);\n+    /// ```\n+    #[unstable(feature = \"duration_zero\", issue = \"73544\")]\n+    #[inline]\n+    pub const fn zero() -> Duration {\n+        Duration { secs: 0, nanos: 0 }\n+    }\n+\n     /// Creates a new `Duration` from the specified number of whole seconds.\n     ///\n     /// # Examples\n@@ -223,6 +241,29 @@ impl Duration {\n         }\n     }\n \n+    /// Returns true if this `Duration` spans no time.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(duration_zero)]\n+    /// use std::time::Duration;\n+    ///\n+    /// assert!(Duration::zero().is_zero());\n+    /// assert!(Duration::new(0, 0).is_zero());\n+    /// assert!(Duration::from_nanos(0).is_zero());\n+    /// assert!(Duration::from_secs(0).is_zero());\n+    ///\n+    /// assert!(!Duration::new(1, 1).is_zero());\n+    /// assert!(!Duration::from_nanos(1).is_zero());\n+    /// assert!(!Duration::from_secs(1).is_zero());\n+    /// ```\n+    #[unstable(feature = \"duration_zero\", issue = \"73544\")]\n+    #[inline]\n+    pub const fn is_zero(&self) -> bool {\n+        self.secs == 0 && self.nanos == 0\n+    }\n+\n     /// Returns the number of _whole_ seconds contained by this `Duration`.\n     ///\n     /// The returned value does not include the fractional (nanosecond) part of the"}]}