{"sha": "0e8310221925680b5e13c080511ce1d733b7dc18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlODMxMDIyMTkyNTY4MGI1ZTEzYzA4MDUxMWNlMWQ3MzNiN2RjMTg=", "commit": {"author": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2013-02-16T11:58:21Z"}, "committer": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2013-02-16T12:42:00Z"}, "message": "Add target_endian crate cfg. Closes #4367", "tree": {"sha": "b2eb70fae899d1448f3bb06bf3d59bc8d41b0b84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2eb70fae899d1448f3bb06bf3d59bc8d41b0b84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e8310221925680b5e13c080511ce1d733b7dc18", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e8310221925680b5e13c080511ce1d733b7dc18", "html_url": "https://github.com/rust-lang/rust/commit/0e8310221925680b5e13c080511ce1d733b7dc18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e8310221925680b5e13c080511ce1d733b7dc18/comments", "author": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ad8a1f46566ddcd705cc918863cee2946d8b946", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ad8a1f46566ddcd705cc918863cee2946d8b946", "html_url": "https://github.com/rust-lang/rust/commit/9ad8a1f46566ddcd705cc918863cee2946d8b946"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "e091e93f3726ca36d07ce935f090665b084ed9a0", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0e8310221925680b5e13c080511ce1d733b7dc18/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e8310221925680b5e13c080511ce1d733b7dc18/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=0e8310221925680b5e13c080511ce1d733b7dc18", "patch": "@@ -88,17 +88,20 @@ pub fn default_configuration(sess: Session, +argv0: ~str, input: input) ->\n \n     let mk = attr::mk_name_value_item_str;\n \n-    let (arch,wordsz) = match sess.targ_cfg.arch {\n-      session::arch_x86 => (~\"x86\",~\"32\"),\n-      session::arch_x86_64 => (~\"x86_64\",~\"64\"),\n-      session::arch_arm => (~\"arm\",~\"32\")\n+    // ARM is bi-endian, however using NDK seems to default\n+    // to little-endian unless a flag is provided.\n+    let (end,arch,wordsz) = match sess.targ_cfg.arch {\n+      session::arch_x86 => (~\"little\",~\"x86\",~\"32\"),\n+      session::arch_x86_64 => (~\"little\",~\"x86_64\",~\"64\"),\n+      session::arch_arm => (~\"little\",~\"arm\",~\"32\")\n     };\n \n     return ~[ // Target bindings.\n          attr::mk_word_item(str::from_slice(os::FAMILY)),\n          mk(~\"target_os\", tos),\n          mk(~\"target_family\", str::from_slice(os::FAMILY)),\n          mk(~\"target_arch\", arch),\n+         mk(~\"target_endian\", end),\n          mk(~\"target_word_size\", wordsz),\n          mk(~\"target_libc\", libc),\n          // Build bindings."}]}