{"sha": "4b224af72a76770694dc0998b356d9ce4d77529b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiMjI0YWY3MmE3Njc3MDY5NGRjMDk5OGIzNTZkOWNlNGQ3NzUyOWI=", "commit": {"author": {"name": "noam", "email": "noam@clusterfoo.com", "date": "2014-03-24T01:24:17Z"}, "committer": {"name": "noam", "email": "noam@clusterfoo.com", "date": "2014-03-24T04:43:43Z"}, "message": "Added suggested notes\n\n* Note on while loop not supporting named breaks.\n* Note on hygienic macros (and example of such within loops)", "tree": {"sha": "ef9a2f55632ec72100b11d06798901f456109790", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef9a2f55632ec72100b11d06798901f456109790"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b224af72a76770694dc0998b356d9ce4d77529b", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b224af72a76770694dc0998b356d9ce4d77529b", "html_url": "https://github.com/rust-lang/rust/commit/4b224af72a76770694dc0998b356d9ce4d77529b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b224af72a76770694dc0998b356d9ce4d77529b/comments", "author": null, "committer": null, "parents": [{"sha": "7dfa4b298262fde037b5fbbb8fe20468d7306cbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dfa4b298262fde037b5fbbb8fe20468d7306cbb", "html_url": "https://github.com/rust-lang/rust/commit/7dfa4b298262fde037b5fbbb8fe20468d7306cbb"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "eb16f73c3a956f37039670150d3f3d11ed3d8d7f", "filename": "src/doc/guide-lifetimes.md", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4b224af72a76770694dc0998b356d9ce4d77529b/src%2Fdoc%2Fguide-lifetimes.md", "raw_url": "https://github.com/rust-lang/rust/raw/4b224af72a76770694dc0998b356d9ce4d77529b/src%2Fdoc%2Fguide-lifetimes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-lifetimes.md?ref=4b224af72a76770694dc0998b356d9ce4d77529b", "patch": "@@ -559,13 +559,13 @@ points at a static constant).\n \n # Named lifetimes\n \n-Lifetimes can be named and referenced. For example, the special lifetime \n+Lifetimes can be named and referenced. For example, the special lifetime\n `'static`, which does not go out of scope, can be used to create global\n variables and communicate between tasks (see the manual for usecases).\n \n ## Parameter Lifetimes\n \n-Named lifetimes allow for grouping of parameters by lifetime. \n+Named lifetimes allow for grouping of parameters by lifetime.\n For example, consider this function:\n \n ~~~\n@@ -674,6 +674,11 @@ Named lifetime notation can also be used to control the flow of execution:\n }\n ~~~\n \n+> ***Note:*** Labelled breaks are not currently supported within `while` loops.\n+\n+Named labels are hygienic and can be used safely within macros.\n+See the macros guide section on hygiene for more details.\n+\n # Conclusion\n \n So there you have it: a (relatively) brief tour of the lifetime"}, {"sha": "23510997f247fe08fd132746ef0aa13247480a19", "filename": "src/doc/guide-macros.md", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4b224af72a76770694dc0998b356d9ce4d77529b/src%2Fdoc%2Fguide-macros.md", "raw_url": "https://github.com/rust-lang/rust/raw/4b224af72a76770694dc0998b356d9ce4d77529b/src%2Fdoc%2Fguide-macros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-macros.md?ref=4b224af72a76770694dc0998b356d9ce4d77529b", "patch": "@@ -398,6 +398,38 @@ position (in particular, not as an argument to yet another macro invocation),\n the expander will then proceed to evaluate `m2!()` (along with any other macro\n invocations `m1!(m2!())` produced).\n \n+# Hygiene\n+\n+To prevent clashes, rust implements\n+[hygienic macros](http://en.wikipedia.org/wiki/Hygienic_macro).\n+\n+As an example, `loop` and `for-loop` labels (discussed in the lifetimes guide)\n+will not clash. The following code will print \"Hello!\" only once:\n+\n+~~~\n+#[feature(macro_rules)];\n+\n+macro_rules! loop_x (\n+    ($e: expr) => (\n+        // $e will not interact with this 'x\n+        'x: loop {\n+            println!(\"Hello!\");\n+            $e\n+        }\n+    );\n+)\n+\n+fn main() {\n+    'x: loop {\n+        loop_x!(break 'x);\n+        println!(\"I am never printed.\");\n+    }\n+}\n+~~~\n+\n+The two `'x` names did not clash, which would have caused the loop\n+to print \"I am never printed\" and to run forever.\n+\n # A final note\n \n Macros, as currently implemented, are not for the faint of heart. Even"}]}