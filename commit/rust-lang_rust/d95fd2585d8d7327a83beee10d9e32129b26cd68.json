{"sha": "d95fd2585d8d7327a83beee10d9e32129b26cd68", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5NWZkMjU4NWQ4ZDczMjdhODNiZWVlMTBkOWUzMjEyOWIyNmNkNjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-29T07:23:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-29T07:23:00Z"}, "message": "Auto merge of #54576 - froydnj:non-x86-abi-adjustment, r=alexcrichton\n\nignore {std,fast,vector,this}call on non-x86 windows\n\nMSVC ignores these keywords for C/C++ and uses the standard system\ncalling convention.  Rust should do so as well.\n\nFixes #54569.", "tree": {"sha": "a2ca39a5f9001a5a4d964fcb8e2b8d9816c3fa33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2ca39a5f9001a5a4d964fcb8e2b8d9816c3fa33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d95fd2585d8d7327a83beee10d9e32129b26cd68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d95fd2585d8d7327a83beee10d9e32129b26cd68", "html_url": "https://github.com/rust-lang/rust/commit/d95fd2585d8d7327a83beee10d9e32129b26cd68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d95fd2585d8d7327a83beee10d9e32129b26cd68/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6622172734a6c456ea85e17b765ad1dbc0e42907", "url": "https://api.github.com/repos/rust-lang/rust/commits/6622172734a6c456ea85e17b765ad1dbc0e42907", "html_url": "https://github.com/rust-lang/rust/commit/6622172734a6c456ea85e17b765ad1dbc0e42907"}, {"sha": "2819deffe3988b438bb7fab7463299fa6c917502", "url": "https://api.github.com/repos/rust-lang/rust/commits/2819deffe3988b438bb7fab7463299fa6c917502", "html_url": "https://github.com/rust-lang/rust/commit/2819deffe3988b438bb7fab7463299fa6c917502"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "3f1e8ee55286b6bfd682894aa3bbbc5e29c9cb13", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d95fd2585d8d7327a83beee10d9e32129b26cd68/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95fd2585d8d7327a83beee10d9e32129b26cd68/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=d95fd2585d8d7327a83beee10d9e32129b26cd68", "patch": "@@ -761,7 +761,7 @@ impl Default for TargetOptions {\n }\n \n impl Target {\n-    /// Given a function ABI, turn \"System\" into the correct ABI for this target.\n+    /// Given a function ABI, turn it into the correct ABI for this target.\n     pub fn adjust_abi(&self, abi: Abi) -> Abi {\n         match abi {\n             Abi::System => {\n@@ -771,6 +771,16 @@ impl Target {\n                     Abi::C\n                 }\n             },\n+            // These ABI kinds are ignored on non-x86 Windows targets.\n+            // See https://docs.microsoft.com/en-us/cpp/cpp/argument-passing-and-naming-conventions\n+            // and the individual pages for __stdcall et al.\n+            Abi::Stdcall | Abi::Fastcall | Abi::Vectorcall | Abi::Thiscall => {\n+                if self.options.is_like_windows && self.arch != \"x86\" {\n+                    Abi::C\n+                } else {\n+                    abi\n+                }\n+            },\n             abi => abi\n         }\n     }"}, {"sha": "8feb10b57577ca1b1595685b88ba321653985621", "filename": "src/test/codegen/issue-32364.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d95fd2585d8d7327a83beee10d9e32129b26cd68/src%2Ftest%2Fcodegen%2Fissue-32364.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d95fd2585d8d7327a83beee10d9e32129b26cd68/src%2Ftest%2Fcodegen%2Fissue-32364.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-32364.rs?ref=d95fd2585d8d7327a83beee10d9e32129b26cd68", "patch": "@@ -8,8 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-arm\n-// ignore-aarch64\n+// Test that `extern \"stdcall\"` is properly translated.\n+\n+// only-x86\n \n // compile-flags: -C no-prepopulate-passes\n "}]}