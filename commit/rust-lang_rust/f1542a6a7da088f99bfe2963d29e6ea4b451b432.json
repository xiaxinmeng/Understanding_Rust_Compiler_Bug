{"sha": "f1542a6a7da088f99bfe2963d29e6ea4b451b432", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNTQyYTZhN2RhMDg4Zjk5YmZlMjk2M2QyOWU2ZWE0YjQ1MWI0MzI=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-06T18:59:33Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-06T18:59:33Z"}, "message": "Add a test for borrowck errors with multiple closure captures.\n\nWhen converting check_loans to use ExprUseVisitor I encountered a few\nissues where the wrong number of errors were being emitted for multiple\nclosure captures, but there is no existing test for this.", "tree": {"sha": "14d13a9e51dc5979c16f473ff9b718a551af90ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14d13a9e51dc5979c16f473ff9b718a551af90ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1542a6a7da088f99bfe2963d29e6ea4b451b432", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1542a6a7da088f99bfe2963d29e6ea4b451b432", "html_url": "https://github.com/rust-lang/rust/commit/f1542a6a7da088f99bfe2963d29e6ea4b451b432", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1542a6a7da088f99bfe2963d29e6ea4b451b432/comments", "author": null, "committer": null, "parents": [{"sha": "74eb4b4b5713be0d80b666f0032d7d7c111db368", "url": "https://api.github.com/repos/rust-lang/rust/commits/74eb4b4b5713be0d80b666f0032d7d7c111db368", "html_url": "https://github.com/rust-lang/rust/commit/74eb4b4b5713be0d80b666f0032d7d7c111db368"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "e12d2b9147978cebd33936d4257a659d245962e0", "filename": "src/test/compile-fail/borrowck-multiple-captures.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/f1542a6a7da088f99bfe2963d29e6ea4b451b432/src%2Ftest%2Fcompile-fail%2Fborrowck-multiple-captures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1542a6a7da088f99bfe2963d29e6ea4b451b432/src%2Ftest%2Fcompile-fail%2Fborrowck-multiple-captures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-multiple-captures.rs?ref=f1542a6a7da088f99bfe2963d29e6ea4b451b432", "patch": "@@ -0,0 +1,64 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::task;\n+\n+fn borrow<T>(_: &T) { }\n+\n+fn different_vars_after_borrows() {\n+    let x1 = box 1;\n+    let p1 = &x1;\n+    let x2 = box 2;\n+    let p2 = &x2;\n+    task::spawn(proc() {\n+        drop(x1); //~ ERROR cannot move `x1` into closure because it is borrowed\n+        drop(x2); //~ ERROR cannot move `x2` into closure because it is borrowed\n+    });\n+    borrow(&*p1);\n+    borrow(&*p2);\n+}\n+\n+fn different_vars_after_moves() {\n+    let x1 = box 1;\n+    drop(x1);\n+    let x2 = box 2;\n+    drop(x2);\n+    task::spawn(proc() {\n+        drop(x1); //~ ERROR capture of moved value: `x1`\n+        drop(x2); //~ ERROR capture of moved value: `x2`\n+    });\n+}\n+\n+fn same_var_after_borrow() {\n+    let x = box 1;\n+    let p = &x;\n+    task::spawn(proc() {\n+        drop(x); //~ ERROR cannot move `x` into closure because it is borrowed\n+        drop(x); //~ ERROR use of moved value: `x`\n+    });\n+    borrow(&*p);\n+}\n+\n+fn same_var_after_move() {\n+    let x = box 1;\n+    drop(x);\n+    task::spawn(proc() {\n+        drop(x); //~ ERROR capture of moved value: `x`\n+        drop(x); //~ ERROR use of moved value: `x`\n+    });\n+}\n+\n+fn main() {\n+    different_vars_after_borrows();\n+    different_vars_after_moves();\n+    same_var_after_borrow();\n+    same_var_after_move();\n+}\n+"}]}