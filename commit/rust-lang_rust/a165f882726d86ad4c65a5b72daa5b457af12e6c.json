{"sha": "a165f882726d86ad4c65a5b72daa5b457af12e6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNjVmODgyNzI2ZDg2YWQ0YzY1YTViNzJkYWE1YjQ1N2FmMTJlNmM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-02-13T00:16:23Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-02-13T00:16:23Z"}, "message": "librustc: Speed up moves a lot. r=nmatsakis", "tree": {"sha": "4560c3f78bc68af67247712f9ce6260ea9176e68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4560c3f78bc68af67247712f9ce6260ea9176e68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a165f882726d86ad4c65a5b72daa5b457af12e6c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a165f882726d86ad4c65a5b72daa5b457af12e6c", "html_url": "https://github.com/rust-lang/rust/commit/a165f882726d86ad4c65a5b72daa5b457af12e6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a165f882726d86ad4c65a5b72daa5b457af12e6c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc2d147847f2c8190250ddb25e3bc71b38cfaf0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc2d147847f2c8190250ddb25e3bc71b38cfaf0a", "html_url": "https://github.com/rust-lang/rust/commit/bc2d147847f2c8190250ddb25e3bc71b38cfaf0a"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "6ba3aa505e0de2821e34340fa27f1659570b865f", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a165f882726d86ad4c65a5b72daa5b457af12e6c/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a165f882726d86ad4c65a5b72daa5b457af12e6c/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=a165f882726d86ad4c65a5b72daa5b457af12e6c", "patch": "@@ -1932,6 +1932,10 @@ pub fn type_contents(cx: ctxt, ty: t) -> TypeContents {\n             Some(tc) => { return *tc; }\n             None => {}\n         }\n+        match cx.tc_cache.find(&ty_id) {    // Must check both caches!\n+            Some(tc) => { return *tc; }\n+            None => {}\n+        }\n         cache.insert(ty_id, TC_NONE);\n \n         debug!(\"computing contents of %s\", ty_to_str(cx, ty));"}]}