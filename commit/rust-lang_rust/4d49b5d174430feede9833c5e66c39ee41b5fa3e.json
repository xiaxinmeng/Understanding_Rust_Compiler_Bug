{"sha": "4d49b5d174430feede9833c5e66c39ee41b5fa3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNDliNWQxNzQ0MzBmZWVkZTk4MzNjNWU2NmMzOWVlNDFiNWZhM2U=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-22T16:37:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-22T16:37:10Z"}, "message": "Merge #2355\n\n2355: Expand column!() r=kjeremy a=kjeremy\n\n\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>", "tree": {"sha": "3042ee2fb92cac71a841b920dfd3ac708db10924", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3042ee2fb92cac71a841b920dfd3ac708db10924"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d49b5d174430feede9833c5e66c39ee41b5fa3e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd2A62CRBK7hj4Ov3rIwAAdHIIAJoYlAfwa5B5TzIPezgsd2q0\nxdEv5jIyIJ+4v42vWRiIFR6Mg/vzxh4fqxeGqLUxUCKV4b7vZxHC3AWmLG6sRv4h\nx5/AMptx1+D4fdiyox5hGPemFIxNPTuHz6a0vRr0GOSi8gM5j4A0R4YQ3r92ypNL\na03F2FSaEw1TBLWYTOADwIKsxt6C/HS0PyJjA87TCIuEeb8qSbJpUhJD3mq1g9wv\nqw6BAtqsFgsFgZ0HZSXY8JDC6ZamMpee6IzJ23HctyGaorrThJRyaqfYd5tMR1JD\n19BOYM3Oe8hkU+OS52eum8abphaIeZjR4lqIWaUrgevkcce3gdc9m5W3r4p6jpI=\n=x8wG\n-----END PGP SIGNATURE-----\n", "payload": "tree 3042ee2fb92cac71a841b920dfd3ac708db10924\nparent 506131e3e01a81546ab218e1764073061875ea2e\nparent 1ee5592be28a980d75cc6e3e2fd9796a07772480\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1574440630 +0000\ncommitter GitHub <noreply@github.com> 1574440630 +0000\n\nMerge #2355\n\n2355: Expand column!() r=kjeremy a=kjeremy\n\n\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d49b5d174430feede9833c5e66c39ee41b5fa3e", "html_url": "https://github.com/rust-lang/rust/commit/4d49b5d174430feede9833c5e66c39ee41b5fa3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d49b5d174430feede9833c5e66c39ee41b5fa3e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "506131e3e01a81546ab218e1764073061875ea2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/506131e3e01a81546ab218e1764073061875ea2e", "html_url": "https://github.com/rust-lang/rust/commit/506131e3e01a81546ab218e1764073061875ea2e"}, {"sha": "1ee5592be28a980d75cc6e3e2fd9796a07772480", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ee5592be28a980d75cc6e3e2fd9796a07772480", "html_url": "https://github.com/rust-lang/rust/commit/1ee5592be28a980d75cc6e3e2fd9796a07772480"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "17a50cf741d2de33a257c4200fb36f6c24275e7b", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4d49b5d174430feede9833c5e66c39ee41b5fa3e/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d49b5d174430feede9833c5e66c39ee41b5fa3e/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=4d49b5d174430feede9833c5e66c39ee41b5fa3e", "patch": "@@ -4876,3 +4876,22 @@ fn main() {\n     \"###\n     );\n }\n+\n+#[test]\n+fn infer_builtin_macros_column() {\n+    assert_snapshot!(\n+        infer(r#\"\n+#[rustc_builtin_macro]\n+macro_rules! column {() => {}}\n+\n+fn main() {\n+    let x = column!();\n+}\n+\"#),\n+        @r###\"\n+    ![0; 2) '13': i32\n+    [66; 92) '{     ...!(); }': ()\n+    [76; 77) 'x': i32\n+    \"###\n+    );\n+}"}, {"sha": "4da56529de34ad22a5532b5e139f23c322f600a5", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/4d49b5d174430feede9833c5e66c39ee41b5fa3e/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d49b5d174430feede9833c5e66c39ee41b5fa3e/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=4d49b5d174430feede9833c5e66c39ee41b5fa3e", "patch": "@@ -10,6 +10,7 @@ use crate::quote;\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub enum BuiltinExpander {\n+    Column,\n     File,\n     Line,\n     Stringify,\n@@ -23,6 +24,7 @@ impl BuiltinExpander {\n         tt: &tt::Subtree,\n     ) -> Result<tt::Subtree, mbe::ExpandError> {\n         match self {\n+            BuiltinExpander::Column => column_expand(db, id, tt),\n             BuiltinExpander::File => file_expand(db, id, tt),\n             BuiltinExpander::Line => line_expand(db, id, tt),\n             BuiltinExpander::Stringify => stringify_expand(db, id, tt),\n@@ -36,7 +38,9 @@ pub fn find_builtin_macro(\n     ast_id: AstId<ast::MacroCall>,\n ) -> Option<MacroDefId> {\n     // FIXME: Better registering method\n-    if ident == &name::FILE_MACRO {\n+    if ident == &name::COLUMN_MACRO {\n+        Some(MacroDefId { krate, ast_id, kind: MacroDefKind::BuiltIn(BuiltinExpander::Column) })\n+    } else if ident == &name::FILE_MACRO {\n         Some(MacroDefId { krate, ast_id, kind: MacroDefKind::BuiltIn(BuiltinExpander::File) })\n     } else if ident == &name::LINE_MACRO {\n         Some(MacroDefId { krate, ast_id, kind: MacroDefKind::BuiltIn(BuiltinExpander::Line) })\n@@ -110,13 +114,51 @@ fn stringify_expand(\n     Ok(expanded)\n }\n \n+fn to_col_number(db: &dyn AstDatabase, file: HirFileId, pos: TextUnit) -> usize {\n+    // FIXME: Use expansion info\n+    let file_id = file.original_file(db);\n+    let text = db.file_text(file_id);\n+    let mut col_num = 1;\n+\n+    for c in text[..pos.to_usize()].chars().rev() {\n+        if c == '\\n' {\n+            break;\n+        }\n+        col_num = col_num + 1;\n+    }\n+\n+    col_num\n+}\n+\n+fn column_expand(\n+    db: &dyn AstDatabase,\n+    id: MacroCallId,\n+    _tt: &tt::Subtree,\n+) -> Result<tt::Subtree, mbe::ExpandError> {\n+    let loc = db.lookup_intern_macro(id);\n+    let macro_call = loc.ast_id.to_node(db);\n+\n+    let _arg = macro_call.token_tree().ok_or_else(|| mbe::ExpandError::UnexpectedToken)?;\n+    let col_start = macro_call.syntax().text_range().start();\n+\n+    let file = id.as_file(MacroFileKind::Expr);\n+    let col_num = to_col_number(db, file, col_start);\n+\n+    let expanded = quote! {\n+        #col_num\n+    };\n+\n+    Ok(expanded)\n+}\n+\n fn file_expand(\n     db: &dyn AstDatabase,\n     id: MacroCallId,\n     _tt: &tt::Subtree,\n ) -> Result<tt::Subtree, mbe::ExpandError> {\n     let loc = db.lookup_intern_macro(id);\n     let macro_call = loc.ast_id.to_node(db);\n+\n     let _ = macro_call.token_tree().ok_or_else(|| mbe::ExpandError::UnexpectedToken)?;\n \n     // FIXME: RA purposefully lacks knowledge of absolute file names"}, {"sha": "eaea7a6a86de295f8440349538cc9bb2a259a255", "filename": "crates/ra_hir_expand/src/name.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4d49b5d174430feede9833c5e66c39ee41b5fa3e/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d49b5d174430feede9833c5e66c39ee41b5fa3e/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fname.rs?ref=4d49b5d174430feede9833c5e66c39ee41b5fa3e", "patch": "@@ -143,5 +143,6 @@ pub const BOX_TYPE: Name = Name::new_inline_ascii(3, b\"Box\");\n \n // Builtin Macros\n pub const FILE_MACRO: Name = Name::new_inline_ascii(4, b\"file\");\n+pub const COLUMN_MACRO: Name = Name::new_inline_ascii(6, b\"column\");\n pub const LINE_MACRO: Name = Name::new_inline_ascii(4, b\"line\");\n pub const STRINGIFY_MACRO: Name = Name::new_inline_ascii(9, b\"stringify\");"}]}