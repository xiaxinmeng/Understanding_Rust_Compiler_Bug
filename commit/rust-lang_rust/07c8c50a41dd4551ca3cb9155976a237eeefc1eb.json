{"sha": "07c8c50a41dd4551ca3cb9155976a237eeefc1eb", "node_id": "C_kwDOAAsO6NoAKDA3YzhjNTBhNDFkZDQ1NTFjYTNjYjkxNTU5NzZhMjM3ZWVlZmMxZWI", "commit": {"author": {"name": "koka", "email": "koka.code@gmail.com", "date": "2023-02-01T11:45:26Z"}, "committer": {"name": "koka", "email": "koka.code@gmail.com", "date": "2023-02-01T13:10:19Z"}, "message": "Avoid renaming for TupleStruct with multiple arguments\n\nupdate spec\n\nfix: move specs in fire", "tree": {"sha": "33fe989be1f3f2acd1016d4dff160057d50915b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33fe989be1f3f2acd1016d4dff160057d50915b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07c8c50a41dd4551ca3cb9155976a237eeefc1eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEhMJg5A6fhFMEoE5LbBJqIM8JYewFAmPaZLwACgkQbBJqIM8J\nYeyAvQv/cXKUo7wvoRX0dwdSmVV5qFTgO7yVanqnwW+EdHpi+mSA+Xjho04J0uM0\nAHw6ZvaJpklGRaH/ia99+UAlV2m4UEs8TO9RxLOLLygrXQfyn8ume0o1k3H55zWK\nG4zm/mT4L2oMBp6Yggba16px0VPq1uG02SdyXXmXxcApcu184G38SydCDKwazYaJ\nIIzBSLH/Sb9i/6V6jgbGta3MxuQZOhyzj7vA7e4xmBGpDt6/kewsS3P6LFi6mkk5\n5yFTARmGkEsVr+30JcEkE7CQrZKOZ8CBJ39imB/2u8jPUKd8rOJ6ZeRGjrjzTPjN\nla973Pjz7QJbOYXem7seM4dozecJaKPIqMKOCovGbiCzZAqoI0gy0gLgrDsQI9gn\nEvxWdHMtkgcwYf7EMuwng67QhI1/nyH3QMiPf9mU+vNtUrcONf6EoEJrLfhOFqOy\nqh0fXWF3ldLedWNdkrlFWMDtOD1VZOdE2VmhfltrMFdYW/Pmnb4pJZyjvhfIIPap\nd3OHMGv+\n=XoIP\n-----END PGP SIGNATURE-----", "payload": "tree 33fe989be1f3f2acd1016d4dff160057d50915b7\nparent 20338fd378fb6ee937ee1171c2752c57ba385ab4\nauthor koka <koka.code@gmail.com> 1675251926 +0900\ncommitter koka <koka.code@gmail.com> 1675257019 +0900\n\nAvoid renaming for TupleStruct with multiple arguments\n\nupdate spec\n\nfix: move specs in fire\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07c8c50a41dd4551ca3cb9155976a237eeefc1eb", "html_url": "https://github.com/rust-lang/rust/commit/07c8c50a41dd4551ca3cb9155976a237eeefc1eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07c8c50a41dd4551ca3cb9155976a237eeefc1eb/comments", "author": {"login": "koka831", "id": 14945055, "node_id": "MDQ6VXNlcjE0OTQ1MDU1", "avatar_url": "https://avatars.githubusercontent.com/u/14945055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koka831", "html_url": "https://github.com/koka831", "followers_url": "https://api.github.com/users/koka831/followers", "following_url": "https://api.github.com/users/koka831/following{/other_user}", "gists_url": "https://api.github.com/users/koka831/gists{/gist_id}", "starred_url": "https://api.github.com/users/koka831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koka831/subscriptions", "organizations_url": "https://api.github.com/users/koka831/orgs", "repos_url": "https://api.github.com/users/koka831/repos", "events_url": "https://api.github.com/users/koka831/events{/privacy}", "received_events_url": "https://api.github.com/users/koka831/received_events", "type": "User", "site_admin": false}, "committer": {"login": "koka831", "id": 14945055, "node_id": "MDQ6VXNlcjE0OTQ1MDU1", "avatar_url": "https://avatars.githubusercontent.com/u/14945055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koka831", "html_url": "https://github.com/koka831", "followers_url": "https://api.github.com/users/koka831/followers", "following_url": "https://api.github.com/users/koka831/following{/other_user}", "gists_url": "https://api.github.com/users/koka831/gists{/gist_id}", "starred_url": "https://api.github.com/users/koka831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koka831/subscriptions", "organizations_url": "https://api.github.com/users/koka831/orgs", "repos_url": "https://api.github.com/users/koka831/repos", "events_url": "https://api.github.com/users/koka831/events{/privacy}", "received_events_url": "https://api.github.com/users/koka831/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20338fd378fb6ee937ee1171c2752c57ba385ab4", "url": "https://api.github.com/repos/rust-lang/rust/commits/20338fd378fb6ee937ee1171c2752c57ba385ab4", "html_url": "https://github.com/rust-lang/rust/commit/20338fd378fb6ee937ee1171c2752c57ba385ab4"}], "stats": {"total": 68, "additions": 48, "deletions": 20}, "files": [{"sha": "9554f5d5a776ae70d53b7f1e6a3e5c6bf079606b", "filename": "clippy_lints/src/manual_let_else.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/07c8c50a41dd4551ca3cb9155976a237eeefc1eb/clippy_lints%2Fsrc%2Fmanual_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c8c50a41dd4551ca3cb9155976a237eeefc1eb/clippy_lints%2Fsrc%2Fmanual_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_let_else.rs?ref=07c8c50a41dd4551ca3cb9155976a237eeefc1eb", "patch": "@@ -156,7 +156,8 @@ fn emit_manual_let_else(\n                     let (sn_pat, _) = snippet_with_context(cx, pat.span, span.ctxt(), \"\", &mut app);\n                     format!(\"({sn_pat})\")\n                 },\n-                PatKind::TupleStruct(ref w, ..) => {\n+                // Replace the variable name iff `TupleStruct` has one argument like `Variant(v)`.\n+                PatKind::TupleStruct(ref w, args, ..) if args.len() == 1 => {\n                     let sn_wrapper = cx.sess().source_map().span_to_snippet(w.span()).unwrap_or_default();\n                     let (sn_inner, _) = snippet_with_context(cx, local.span, span.ctxt(), \"\", &mut app);\n                     format!(\"{sn_wrapper}({sn_inner})\")"}, {"sha": "23f530f41cd2e912c9344a285331200a568c73b4", "filename": "tests/ui/manual_let_else.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/07c8c50a41dd4551ca3cb9155976a237eeefc1eb/tests%2Fui%2Fmanual_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07c8c50a41dd4551ca3cb9155976a237eeefc1eb/tests%2Fui%2Fmanual_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_let_else.rs?ref=07c8c50a41dd4551ca3cb9155976a237eeefc1eb", "patch": "@@ -8,6 +8,12 @@\n )]\n #![warn(clippy::manual_let_else)]\n \n+enum Variant {\n+    A(usize, usize),\n+    B(usize),\n+    C,\n+}\n+\n fn g() -> Option<()> {\n     None\n }\n@@ -135,6 +141,15 @@ fn fire() {\n         };\n     }\n     create_binding_if_some!(w, g());\n+\n+    fn e() -> Variant {\n+        Variant::A(0, 0)\n+    }\n+\n+    // Should not be renamed\n+    let v = if let Variant::A(a, 0) = e() { a } else { return };\n+    // Should be renamed\n+    let v = if let Variant::B(b) = e() { b } else { return };\n }\n \n fn not_fire() {"}, {"sha": "f6f56f7b00e5127facad2405fdd0ae479d21228a", "filename": "tests/ui/manual_let_else.stderr", "status": "modified", "additions": 31, "deletions": 19, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/07c8c50a41dd4551ca3cb9155976a237eeefc1eb/tests%2Fui%2Fmanual_let_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/07c8c50a41dd4551ca3cb9155976a237eeefc1eb/tests%2Fui%2Fmanual_let_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_let_else.stderr?ref=07c8c50a41dd4551ca3cb9155976a237eeefc1eb", "patch": "@@ -1,13 +1,13 @@\n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:18:5\n+  --> $DIR/manual_let_else.rs:24:5\n    |\n LL |     let v = if let Some(v_some) = g() { v_some } else { return };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider writing: `let Some(v) = g() else { return };`\n    |\n    = note: `-D clippy::manual-let-else` implied by `-D warnings`\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:19:5\n+  --> $DIR/manual_let_else.rs:25:5\n    |\n LL | /     let v = if let Some(v_some) = g() {\n LL | |         v_some\n@@ -24,7 +24,7 @@ LL +     };\n    |\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:25:5\n+  --> $DIR/manual_let_else.rs:31:5\n    |\n LL | /     let v = if let Some(v) = g() {\n LL | |         // Blocks around the identity should have no impact\n@@ -45,25 +45,25 @@ LL +     };\n    |\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:38:9\n+  --> $DIR/manual_let_else.rs:44:9\n    |\n LL |         let v = if let Some(v_some) = g() { v_some } else { continue };\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider writing: `let Some(v) = g() else { continue };`\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:39:9\n+  --> $DIR/manual_let_else.rs:45:9\n    |\n LL |         let v = if let Some(v_some) = g() { v_some } else { break };\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider writing: `let Some(v) = g() else { break };`\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:43:5\n+  --> $DIR/manual_let_else.rs:49:5\n    |\n LL |     let v = if let Some(v_some) = g() { v_some } else { panic!() };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider writing: `let Some(v) = g() else { panic!() };`\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:46:5\n+  --> $DIR/manual_let_else.rs:52:5\n    |\n LL | /     let v = if let Some(v_some) = g() {\n LL | |         v_some\n@@ -80,7 +80,7 @@ LL +     };\n    |\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:53:5\n+  --> $DIR/manual_let_else.rs:59:5\n    |\n LL | /     let v = if let Some(v_some) = g() {\n LL | |         v_some\n@@ -97,7 +97,7 @@ LL +     };\n    |\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:60:5\n+  --> $DIR/manual_let_else.rs:66:5\n    |\n LL | /     let v = if let Some(v_some) = g() {\n LL | |         v_some\n@@ -116,7 +116,7 @@ LL +     };\n    |\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:70:5\n+  --> $DIR/manual_let_else.rs:76:5\n    |\n LL | /     let v = if let Some(v_some) = g() {\n LL | |         v_some\n@@ -138,13 +138,13 @@ LL +     };\n    |\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:80:5\n+  --> $DIR/manual_let_else.rs:86:5\n    |\n LL |     let v = if let Some(v_some) = g() { v_some } else { if panic!() {} };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider writing: `let Some(v) = g() else { if panic!() {} };`\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:83:5\n+  --> $DIR/manual_let_else.rs:89:5\n    |\n LL | /     let v = if let Some(v_some) = g() {\n LL | |         v_some\n@@ -165,7 +165,7 @@ LL +     };\n    |\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:92:5\n+  --> $DIR/manual_let_else.rs:98:5\n    |\n LL | /     let v = if let Some(v_some) = g() {\n LL | |         v_some\n@@ -186,7 +186,7 @@ LL +     } };\n    |\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:101:5\n+  --> $DIR/manual_let_else.rs:107:5\n    |\n LL | /     let v = if let Some(v_some) = g() {\n LL | |         v_some\n@@ -215,7 +215,7 @@ LL +     };\n    |\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:118:5\n+  --> $DIR/manual_let_else.rs:124:5\n    |\n LL | /     let (v, w) = if let Some(v_some) = g().map(|v| (v, 42)) {\n LL | |         v_some\n@@ -232,7 +232,7 @@ LL +     };\n    |\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:125:5\n+  --> $DIR/manual_let_else.rs:131:5\n    |\n LL | /     let v = if let (Some(v_some), w_some) = (g(), 0) {\n LL | |         (w_some, v_some)\n@@ -249,7 +249,7 @@ LL +     };\n    |\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:134:13\n+  --> $DIR/manual_let_else.rs:140:13\n    |\n LL |             let $n = if let Some(v) = $e { v } else { return };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider writing: `let Some($n) = g() else { return };`\n@@ -260,13 +260,25 @@ LL |     create_binding_if_some!(w, g());\n    = note: this error originates in the macro `create_binding_if_some` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: this could be rewritten as `let...else`\n-  --> $DIR/manual_let_else.rs:247:5\n+  --> $DIR/manual_let_else.rs:150:5\n+   |\n+LL |     let v = if let Variant::A(a, 0) = e() { a } else { return };\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider writing: `let Variant::A(a, 0) = e() else { return };`\n+\n+error: this could be rewritten as `let...else`\n+  --> $DIR/manual_let_else.rs:152:5\n+   |\n+LL |     let v = if let Variant::B(b) = e() { b } else { return };\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider writing: `let Variant::B(v) = e() else { return };`\n+\n+error: this could be rewritten as `let...else`\n+  --> $DIR/manual_let_else.rs:262:5\n    |\n LL | /     let _ = match ff {\n LL | |         Some(value) => value,\n LL | |         _ => macro_call!(),\n LL | |     };\n    | |______^ help: consider writing: `let Some(_) = ff else { macro_call!() };`\n \n-error: aborting due to 18 previous errors\n+error: aborting due to 20 previous errors\n "}]}