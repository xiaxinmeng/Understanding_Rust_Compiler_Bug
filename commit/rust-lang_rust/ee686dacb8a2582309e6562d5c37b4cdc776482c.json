{"sha": "ee686dacb8a2582309e6562d5c37b4cdc776482c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlNjg2ZGFjYjhhMjU4MjMwOWU2NTYyZDVjMzdiNGNkYzc3NjQ4MmM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-26T00:59:45Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-26T00:59:56Z"}, "message": "Add get_extern_const, factor get_extern into get_extern_fn and get_simple_extern_fn.", "tree": {"sha": "b11ff3859419ee9f3c0cdf938ad8142bbd971d45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b11ff3859419ee9f3c0cdf938ad8142bbd971d45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee686dacb8a2582309e6562d5c37b4cdc776482c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee686dacb8a2582309e6562d5c37b4cdc776482c", "html_url": "https://github.com/rust-lang/rust/commit/ee686dacb8a2582309e6562d5c37b4cdc776482c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee686dacb8a2582309e6562d5c37b4cdc776482c/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94c19a18ae8ddf70d0c6a21b296e0858dc154d2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/94c19a18ae8ddf70d0c6a21b296e0858dc154d2a", "html_url": "https://github.com/rust-lang/rust/commit/94c19a18ae8ddf70d0c6a21b296e0858dc154d2a"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "a9dbf13a7e604c661d9f0f1721771c111fd1d08f", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ee686dacb8a2582309e6562d5c37b4cdc776482c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee686dacb8a2582309e6562d5c37b4cdc776482c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=ee686dacb8a2582309e6562d5c37b4cdc776482c", "patch": "@@ -888,18 +888,35 @@ fn decl_native_glue(ModuleRef llmod, type_names tn,\n     ret decl_fastcall_fn(llmod, s, T_fn(args, T_int()));\n }\n \n-fn get_extern(&hashmap[str, ValueRef] externs,\n-              ModuleRef llmod, str name, int n_args) -> ValueRef {\n+fn get_extern_fn(&hashmap[str, ValueRef] externs,\n+                 ModuleRef llmod, str name,\n+                 uint cc, TypeRef ty) -> ValueRef {\n     if (externs.contains_key(name)) {\n         ret externs.get(name);\n     }\n-    auto inputs = _vec.init_elt[TypeRef](T_int(), n_args as uint);\n-    auto output = T_int();\n-    auto f = decl_cdecl_fn(llmod, name, T_fn(inputs, output));\n+    auto f = decl_fn(llmod, name, cc, ty);\n     externs.insert(name, f);\n     ret f;\n }\n \n+fn get_extern_const(&hashmap[str, ValueRef] externs,\n+                    ModuleRef llmod, str name, TypeRef ty) -> ValueRef {\n+    if (externs.contains_key(name)) {\n+        ret externs.get(name);\n+    }\n+    auto c = llvm.LLVMAddGlobal(llmod, ty, _str.buf(name));\n+    externs.insert(name, c);\n+    ret c;\n+}\n+\n+fn get_simple_extern_fn(&hashmap[str, ValueRef] externs,\n+                     ModuleRef llmod, str name, int n_args) -> ValueRef {\n+    auto inputs = _vec.init_elt[TypeRef](T_int(), n_args as uint);\n+    auto output = T_int();\n+    auto t = T_fn(inputs, output);\n+    ret get_extern_fn(externs, llmod, name, lib.llvm.LLVMCCallConv, t);\n+}\n+\n fn trans_upcall(@block_ctxt cx, str name, vec[ValueRef] args) -> result {\n     auto cxx = cx.fcx.ccx;\n     auto lltaskptr = cx.build.PtrToInt(cx.fcx.lltaskptr, T_int());\n@@ -914,7 +931,7 @@ fn trans_native(builder b, @glue_fns glues, ValueRef lltaskptr,\n                 type_names tn, ModuleRef llmod, str name,\n                 bool pass_task, vec[ValueRef] args) -> ValueRef {\n     let int n = (_vec.len[ValueRef](args) as int);\n-    let ValueRef llnative = get_extern(externs, llmod, name, n);\n+    let ValueRef llnative = get_simple_extern_fn(externs, llmod, name, n);\n     llnative = llvm.LLVMConstPointerCast(llnative, T_int());\n \n     let ValueRef llglue;"}]}