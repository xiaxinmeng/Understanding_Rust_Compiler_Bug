{"sha": "d3fe534fcf64f35be4285fcd0b04504b3713b628", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzZmU1MzRmY2Y2NGYzNWJlNDI4NWZjZDBiMDQ1MDRiMzcxM2I2Mjg=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-30T09:40:25Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-09T15:43:48Z"}, "message": "Convert sort_unstable_by_key to sort_by_cached_key", "tree": {"sha": "4b8dde0b044b68eaf74f91c33796289c0ae5cc6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b8dde0b044b68eaf74f91c33796289c0ae5cc6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3fe534fcf64f35be4285fcd0b04504b3713b628", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3fe534fcf64f35be4285fcd0b04504b3713b628", "html_url": "https://github.com/rust-lang/rust/commit/d3fe534fcf64f35be4285fcd0b04504b3713b628", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3fe534fcf64f35be4285fcd0b04504b3713b628/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "url": "https://api.github.com/repos/rust-lang/rust/commits/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "html_url": "https://github.com/rust-lang/rust/commit/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "e40a3057a95cf903d218b941a3edbd2a0d50d5a7", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3fe534fcf64f35be4285fcd0b04504b3713b628/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3fe534fcf64f35be4285fcd0b04504b3713b628/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=d3fe534fcf64f35be4285fcd0b04504b3713b628", "patch": "@@ -1414,15 +1414,15 @@ impl<'a, 'b: 'a, 'tcx: 'b> IsolatedEncoder<'a, 'b, 'tcx> {\n         let mut all_impls: Vec<_> = visitor.impls.into_iter().collect();\n \n         // Bring everything into deterministic order for hashing\n-        all_impls.sort_unstable_by_key(|&(trait_def_id, _)| {\n+        all_impls.sort_by_cached_key(|&(trait_def_id, _)| {\n             tcx.def_path_hash(trait_def_id)\n         });\n \n         let all_impls: Vec<_> = all_impls\n             .into_iter()\n             .map(|(trait_def_id, mut impls)| {\n                 // Bring everything into deterministic order for hashing\n-                impls.sort_unstable_by_key(|&def_index| {\n+                impls.sort_by_cached_key(|&def_index| {\n                     tcx.hir.definitions().def_path_hash(def_index)\n                 });\n "}, {"sha": "76a14cf44f2c277ec016e88875e38984fd103413", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d3fe534fcf64f35be4285fcd0b04504b3713b628/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3fe534fcf64f35be4285fcd0b04504b3713b628/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=d3fe534fcf64f35be4285fcd0b04504b3713b628", "patch": "@@ -21,6 +21,7 @@\n #![feature(macro_lifetime_matcher)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n+#![feature(slice_sort_by_cached_key)]\n #![feature(specialization)]\n #![feature(rustc_private)]\n "}, {"sha": "9ca7d1a372b11974b82f8119a1e9af1436e0fa4a", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d3fe534fcf64f35be4285fcd0b04504b3713b628/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3fe534fcf64f35be4285fcd0b04504b3713b628/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=d3fe534fcf64f35be4285fcd0b04504b3713b628", "patch": "@@ -1151,13 +1151,9 @@ impl<'a> ModuleData<'a> {\n \n     fn for_each_child_stable<F: FnMut(Ident, Namespace, &'a NameBinding<'a>)>(&self, mut f: F) {\n         let resolutions = self.resolutions.borrow();\n-        let mut resolutions = resolutions.iter().map(|(&(ident, ns), &resolution)| {\n-                                                    // Pre-compute keys for sorting\n-                                                    (ident.name.as_str(), ns, ident, resolution)\n-                                                })\n-                                                .collect::<Vec<_>>();\n-        resolutions.sort_unstable_by_key(|&(str, ns, ..)| (str, ns));\n-        for &(_, ns, ident, resolution) in resolutions.iter() {\n+        let mut resolutions = resolutions.iter().collect::<Vec<_>>();\n+        resolutions.sort_by_cached_key(|&(&(ident, ns), _)| (ident.name.as_str(), ns));\n+        for &(&(ident, ns), &resolution) in resolutions.iter() {\n             resolution.borrow().binding.map(|binding| f(ident, ns, binding));\n         }\n     }"}]}