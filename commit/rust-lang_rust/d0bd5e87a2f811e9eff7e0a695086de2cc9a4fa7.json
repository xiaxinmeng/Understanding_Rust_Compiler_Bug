{"sha": "d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwYmQ1ZTg3YTJmODExZTllZmY3ZTBhNjk1MDg2ZGUyY2M5YTRmYTc=", "commit": {"author": {"name": "Marcello Seri", "email": "marcello.seri@gmail.com", "date": "2015-10-16T21:54:14Z"}, "committer": {"name": "Marcello Seri", "email": "marcello.seri@gmail.com", "date": "2015-10-17T09:20:50Z"}, "message": "attitional tests fixups", "tree": {"sha": "ae135065f529681392952437951135f2f57851fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae135065f529681392952437951135f2f57851fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7", "html_url": "https://github.com/rust-lang/rust/commit/d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7/comments", "author": {"login": "mseri", "id": 4040623, "node_id": "MDQ6VXNlcjQwNDA2MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/4040623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mseri", "html_url": "https://github.com/mseri", "followers_url": "https://api.github.com/users/mseri/followers", "following_url": "https://api.github.com/users/mseri/following{/other_user}", "gists_url": "https://api.github.com/users/mseri/gists{/gist_id}", "starred_url": "https://api.github.com/users/mseri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mseri/subscriptions", "organizations_url": "https://api.github.com/users/mseri/orgs", "repos_url": "https://api.github.com/users/mseri/repos", "events_url": "https://api.github.com/users/mseri/events{/privacy}", "received_events_url": "https://api.github.com/users/mseri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mseri", "id": 4040623, "node_id": "MDQ6VXNlcjQwNDA2MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/4040623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mseri", "html_url": "https://github.com/mseri", "followers_url": "https://api.github.com/users/mseri/followers", "following_url": "https://api.github.com/users/mseri/following{/other_user}", "gists_url": "https://api.github.com/users/mseri/gists{/gist_id}", "starred_url": "https://api.github.com/users/mseri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mseri/subscriptions", "organizations_url": "https://api.github.com/users/mseri/orgs", "repos_url": "https://api.github.com/users/mseri/repos", "events_url": "https://api.github.com/users/mseri/events{/privacy}", "received_events_url": "https://api.github.com/users/mseri/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65547ff5a2cc3c8c040302ab04cbc3bef50beec4", "url": "https://api.github.com/repos/rust-lang/rust/commits/65547ff5a2cc3c8c040302ab04cbc3bef50beec4", "html_url": "https://github.com/rust-lang/rust/commit/65547ff5a2cc3c8c040302ab04cbc3bef50beec4"}], "stats": {"total": 112, "additions": 26, "deletions": 86}, "files": [{"sha": "411ca8360805440c215a76c437a461558d6e0fdf", "filename": "src/librand/chacha.rs", "status": "modified", "additions": 13, "deletions": 48, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7/src%2Flibrand%2Fchacha.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7/src%2Flibrand%2Fchacha.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fchacha.rs?ref=d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7", "patch": "@@ -245,6 +245,7 @@ mod tests {\n     }\n \n     #[test]\n+    #[rustfmt_skip]\n     fn test_rng_true_values() {\n         // Test vectors 1 and 2 from\n         // http://tools.ietf.org/html/draft-nir-cfrg-chacha20-poly1305-04\n@@ -253,41 +254,17 @@ mod tests {\n \n         let v = (0..16).map(|_| ra.next_u32()).collect::<Vec<_>>();\n         assert_eq!(v,\n-                   vec!(0xade0b876,\n-                        0x903df1a0,\n-                        0xe56a5d40,\n-                        0x28bd8653,\n-                        0xb819d2bd,\n-                        0x1aed8da0,\n-                        0xccef36a8,\n-                        0xc70d778b,\n-                        0x7c5941da,\n-                        0x8d485751,\n-                        0x3fe02477,\n-                        0x374ad8b8,\n-                        0xf4b8436a,\n-                        0x1ca11815,\n-                        0x69b687c3,\n-                        0x8665eeb2));\n+                   vec!(0xade0b876, 0x903df1a0, 0xe56a5d40, 0x28bd8653,\n+                        0xb819d2bd, 0x1aed8da0, 0xccef36a8, 0xc70d778b,\n+                        0x7c5941da, 0x8d485751, 0x3fe02477, 0x374ad8b8,\n+                        0xf4b8436a, 0x1ca11815, 0x69b687c3, 0x8665eeb2));\n \n         let v = (0..16).map(|_| ra.next_u32()).collect::<Vec<_>>();\n         assert_eq!(v,\n-                   vec!(0xbee7079f,\n-                        0x7a385155,\n-                        0x7c97ba98,\n-                        0x0d082d73,\n-                        0xa0290fcb,\n-                        0x6965e348,\n-                        0x3e53c612,\n-                        0xed7aee32,\n-                        0x7621b729,\n-                        0x434ee69c,\n-                        0xb03371d5,\n-                        0xd539d874,\n-                        0x281fed31,\n-                        0x45fb0a51,\n-                        0x1f0ae1ac,\n-                        0x6f4d794b));\n+                   vec!(0xbee7079f, 0x7a385155, 0x7c97ba98, 0x0d082d73,\n+                        0xa0290fcb, 0x6965e348, 0x3e53c612, 0xed7aee32,\n+                        0x7621b729, 0x434ee69c, 0xb03371d5, 0xd539d874,\n+                        0x281fed31, 0x45fb0a51, 0x1f0ae1ac, 0x6f4d794b));\n \n \n         let seed: &[_] = &[0, 1, 2, 3, 4, 5, 6, 7];\n@@ -304,22 +281,10 @@ mod tests {\n         }\n \n         assert_eq!(v,\n-                   vec!(0xf225c81a,\n-                        0x6ab1be57,\n-                        0x04d42951,\n-                        0x70858036,\n-                        0x49884684,\n-                        0x64efec72,\n-                        0x4be2d186,\n-                        0x3615b384,\n-                        0x11cfa18e,\n-                        0xd3c50049,\n-                        0x75c775f6,\n-                        0x434c6530,\n-                        0x2c5bad8f,\n-                        0x898881dc,\n-                        0x5f1c86d9,\n-                        0xc1f8e7f4));\n+                   vec!(0xf225c81a, 0x6ab1be57, 0x04d42951, 0x70858036,\n+                        0x49884684, 0x64efec72, 0x4be2d186, 0x3615b384,\n+                        0x11cfa18e, 0xd3c50049, 0x75c775f6, 0x434c6530,\n+                        0x2c5bad8f, 0x898881dc, 0x5f1c86d9, 0xc1f8e7f4));\n     }\n \n     #[test]"}, {"sha": "47351a6bf2815254ae1fb78bc7e4f7efd9121a93", "filename": "src/librand/isaac.rs", "status": "modified", "additions": 13, "deletions": 38, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7/src%2Flibrand%2Fisaac.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7/src%2Flibrand%2Fisaac.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fisaac.rs?ref=d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7", "patch": "@@ -591,22 +591,15 @@ mod tests {\n     }\n \n     #[test]\n+    #[rustfmt_skip]\n     fn test_rng_32_true_values() {\n         let seed: &[_] = &[1, 23, 456, 7890, 12345];\n         let mut ra: IsaacRng = SeedableRng::from_seed(seed);\n         // Regression test that isaac is actually using the above vector\n         let v = (0..10).map(|_| ra.next_u32()).collect::<Vec<_>>();\n         assert_eq!(v,\n-                   vec!(2558573138,\n-                        873787463,\n-                        263499565,\n-                        2103644246,\n-                        3595684709,\n-                        4203127393,\n-                        264982119,\n-                        2765226902,\n-                        2737944514,\n-                        3900253796));\n+                   vec!(2558573138, 873787463, 263499565, 2103644246, 3595684709,\n+                        4203127393, 264982119, 2765226902, 2737944514, 3900253796));\n \n         let seed: &[_] = &[12345, 67890, 54321, 9876];\n         let mut rb: IsaacRng = SeedableRng::from_seed(seed);\n@@ -617,33 +610,20 @@ mod tests {\n \n         let v = (0..10).map(|_| rb.next_u32()).collect::<Vec<_>>();\n         assert_eq!(v,\n-                   vec!(3676831399,\n-                        3183332890,\n-                        2834741178,\n-                        3854698763,\n-                        2717568474,\n-                        1576568959,\n-                        3507990155,\n-                        179069555,\n-                        141456972,\n-                        2478885421));\n+                   vec!(3676831399, 3183332890, 2834741178, 3854698763, 2717568474,\n+                        1576568959, 3507990155, 179069555, 141456972, 2478885421));\n     }\n     #[test]\n+    #[rustfmt_skip]\n     fn test_rng_64_true_values() {\n         let seed: &[_] = &[1, 23, 456, 7890, 12345];\n         let mut ra: Isaac64Rng = SeedableRng::from_seed(seed);\n         // Regression test that isaac is actually using the above vector\n         let v = (0..10).map(|_| ra.next_u64()).collect::<Vec<_>>();\n         assert_eq!(v,\n-                   vec!(547121783600835980,\n-                        14377643087320773276,\n-                        17351601304698403469,\n-                        1238879483818134882,\n-                        11952566807690396487,\n-                        13970131091560099343,\n-                        4469761996653280935,\n-                        15552757044682284409,\n-                        6860251611068737823,\n+                   vec!(547121783600835980, 14377643087320773276, 17351601304698403469,\n+                        1238879483818134882, 11952566807690396487, 13970131091560099343,\n+                        4469761996653280935, 15552757044682284409, 6860251611068737823,\n                         13722198873481261842));\n \n         let seed: &[_] = &[12345, 67890, 54321, 9876];\n@@ -655,16 +635,11 @@ mod tests {\n \n         let v = (0..10).map(|_| rb.next_u64()).collect::<Vec<_>>();\n         assert_eq!(v,\n-                   vec!(18143823860592706164,\n-                        8491801882678285927,\n-                        2699425367717515619,\n-                        17196852593171130876,\n-                        2606123525235546165,\n-                        15790932315217671084,\n-                        596345674630742204,\n-                        9947027391921273664,\n-                        11788097613744130851,\n+                   vec!(18143823860592706164, 8491801882678285927, 2699425367717515619,\n+                        17196852593171130876, 2606123525235546165, 15790932315217671084,\n+                        596345674630742204, 9947027391921273664, 11788097613744130851,\n                         10391409374914919106));\n+\n     }\n \n     #[test]"}]}