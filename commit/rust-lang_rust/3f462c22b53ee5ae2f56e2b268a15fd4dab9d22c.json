{"sha": "3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNDYyYzIyYjUzZWU1YWUyZjU2ZTJiMjY4YTE1ZmQ0ZGFiOWQyMmM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-23T09:26:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-23T09:26:39Z"}, "message": "Rollup merge of #78235 - Aaron1011:closure-ret-infer, r=varkor\n\nExplain where the closure return type was inferred\n\nFixes #78193", "tree": {"sha": "bc2635c79610813b70b4f699825421aa439a6e99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc2635c79610813b70b4f699825421aa439a6e99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfkqHPCRBK7hj4Ov3rIwAAdHIIACuIvWAEubMp+1pyk+keKKUP\nwNmbgI2rhZK7b6ejgTr6IdaXilBcsJwD+6p/FJOhYFT12UIiiXWkyv/Eiu9aIC7A\n78wTbSAizXR96Fz3wmYTRQQ3+GxOJScadlVxn+Fuxa/zqiYCgclaZVqkz5GKwY/y\npXevL4LaqbCXxW+zNc+/Qs/fC5rsU4rlsFfC/A6AJw0qiMe4/rvoQYn8jVS7YWQ+\nT91sq53keiqTrlLyMW+GQmuic0J9rIgqMWoqUf0UcqWrOBlr/H3KAaVo97l1oqLb\nmHUvLysACRp0QNZfWLLGfWUtXT7VBkj6tl4NiogrCrQFHaMm7Be9P8LaKZBUetc=\n=RfaO\n-----END PGP SIGNATURE-----\n", "payload": "tree bc2635c79610813b70b4f699825421aa439a6e99\nparent 00c4dcdbb456964cfda35a1d447a0ee630b79c39\nparent 36a5244da311b9cd9a4ee04a75f15e23cf9fe891\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1603445199 +0900\ncommitter GitHub <noreply@github.com> 1603445199 +0900\n\nRollup merge of #78235 - Aaron1011:closure-ret-infer, r=varkor\n\nExplain where the closure return type was inferred\n\nFixes #78193\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c", "html_url": "https://github.com/rust-lang/rust/commit/3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00c4dcdbb456964cfda35a1d447a0ee630b79c39", "url": "https://api.github.com/repos/rust-lang/rust/commits/00c4dcdbb456964cfda35a1d447a0ee630b79c39", "html_url": "https://github.com/rust-lang/rust/commit/00c4dcdbb456964cfda35a1d447a0ee630b79c39"}, {"sha": "36a5244da311b9cd9a4ee04a75f15e23cf9fe891", "url": "https://api.github.com/repos/rust-lang/rust/commits/36a5244da311b9cd9a4ee04a75f15e23cf9fe891", "html_url": "https://github.com/rust-lang/rust/commit/36a5244da311b9cd9a4ee04a75f15e23cf9fe891"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "6da3ecde329cfc0f72a7e9e62ba1e3ee0b2ae5eb", "filename": "compiler/rustc_typeck/src/check/coercion.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs?ref=3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c", "patch": "@@ -1475,6 +1475,28 @@ impl<'tcx, 'exprs, E: AsCoercionSite> CoerceMany<'tcx, 'exprs, E> {\n         if let (Some(sp), Some(fn_output)) = (fcx.ret_coercion_span.borrow().as_ref(), fn_output) {\n             self.add_impl_trait_explanation(&mut err, cause, fcx, expected, *sp, fn_output);\n         }\n+\n+        if let Some(sp) = fcx.ret_coercion_span.borrow().as_ref() {\n+            // If the closure has an explicit return type annotation,\n+            // then a type error may occur at the first return expression we\n+            // see in the closure (if it conflicts with the declared\n+            // return type). Skip adding a note in this case, since it\n+            // would be incorrect.\n+            if !err.span.primary_spans().iter().any(|span| span == sp) {\n+                let hir = fcx.tcx.hir();\n+                let body_owner = hir.body_owned_by(hir.enclosing_body_owner(fcx.body_id));\n+                if fcx.tcx.is_closure(hir.body_owner_def_id(body_owner).to_def_id()) {\n+                    err.span_note(\n+                        *sp,\n+                        &format!(\n+                            \"return type inferred to be `{}` here\",\n+                            fcx.resolve_vars_if_possible(&expected)\n+                        ),\n+                    );\n+                }\n+            }\n+        }\n+\n         err\n     }\n "}, {"sha": "1631bb303e54e0c702f88acdb8947d618c16d267", "filename": "src/test/ui/closures/closure-return-type-mismatch.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c/src%2Ftest%2Fui%2Fclosures%2Fclosure-return-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c/src%2Ftest%2Fui%2Fclosures%2Fclosure-return-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-return-type-mismatch.rs?ref=3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c", "patch": "@@ -0,0 +1,17 @@\n+fn main() {\n+    || {\n+        if false {\n+            return \"test\";\n+        }\n+        let a = true;\n+        a //~ ERROR mismatched types\n+    };\n+\n+    || -> bool {\n+        if false {\n+            return \"hello\" //~ ERROR mismatched types\n+        };\n+        let b = true;\n+        b\n+    };\n+}"}, {"sha": "3a89d30a05d2042b7106730d21aabcf5b20b2306", "filename": "src/test/ui/closures/closure-return-type-mismatch.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c/src%2Ftest%2Fui%2Fclosures%2Fclosure-return-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c/src%2Ftest%2Fui%2Fclosures%2Fclosure-return-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-return-type-mismatch.stderr?ref=3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c", "patch": "@@ -0,0 +1,21 @@\n+error[E0308]: mismatched types\n+  --> $DIR/closure-return-type-mismatch.rs:7:9\n+   |\n+LL |         a\n+   |         ^ expected `&str`, found `bool`\n+   |\n+note: return type inferred to be `&str` here\n+  --> $DIR/closure-return-type-mismatch.rs:4:20\n+   |\n+LL |             return \"test\";\n+   |                    ^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/closure-return-type-mismatch.rs:12:20\n+   |\n+LL |             return \"hello\"\n+   |                    ^^^^^^^ expected `bool`, found `&str`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "4abc0542c51425e36bc547249daa71e316ce90e2", "filename": "src/test/ui/generator/type-mismatch-signature-deduction.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c/src%2Ftest%2Fui%2Fgenerator%2Ftype-mismatch-signature-deduction.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c/src%2Ftest%2Fui%2Fgenerator%2Ftype-mismatch-signature-deduction.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Ftype-mismatch-signature-deduction.stderr?ref=3f462c22b53ee5ae2f56e2b268a15fd4dab9d22c", "patch": "@@ -6,6 +6,11 @@ LL |         5\n    |\n    = note: expected type `std::result::Result<{integer}, _>`\n               found type `{integer}`\n+note: return type inferred to be `std::result::Result<{integer}, _>` here\n+  --> $DIR/type-mismatch-signature-deduction.rs:8:20\n+   |\n+LL |             return Ok(6);\n+   |                    ^^^^^\n \n error[E0271]: type mismatch resolving `<[generator@$DIR/type-mismatch-signature-deduction.rs:6:5: 14:6] as Generator>::Return == i32`\n   --> $DIR/type-mismatch-signature-deduction.rs:5:13"}]}