{"sha": "f2dd233ddc60b647fe9c32ea2d712224005ae99e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZGQyMzNkZGM2MGI2NDdmZTljMzJlYTJkNzEyMjI0MDA1YWU5OWU=", "commit": {"author": {"name": "robojumper", "email": "robojumper@gmail.com", "date": "2020-05-05T12:53:52Z"}, "committer": {"name": "robojumper", "email": "robojumper@gmail.com", "date": "2020-05-05T12:53:52Z"}, "message": "Assume cargo_metadata uses String for cfgs soon", "tree": {"sha": "689d38fd5ca4c7965996c1d1ad686498e352b1f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/689d38fd5ca4c7965996c1d1ad686498e352b1f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2dd233ddc60b647fe9c32ea2d712224005ae99e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2dd233ddc60b647fe9c32ea2d712224005ae99e", "html_url": "https://github.com/rust-lang/rust/commit/f2dd233ddc60b647fe9c32ea2d712224005ae99e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2dd233ddc60b647fe9c32ea2d712224005ae99e/comments", "author": {"login": "robojumper", "id": 14299449, "node_id": "MDQ6VXNlcjE0Mjk5NDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14299449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robojumper", "html_url": "https://github.com/robojumper", "followers_url": "https://api.github.com/users/robojumper/followers", "following_url": "https://api.github.com/users/robojumper/following{/other_user}", "gists_url": "https://api.github.com/users/robojumper/gists{/gist_id}", "starred_url": "https://api.github.com/users/robojumper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robojumper/subscriptions", "organizations_url": "https://api.github.com/users/robojumper/orgs", "repos_url": "https://api.github.com/users/robojumper/repos", "events_url": "https://api.github.com/users/robojumper/events{/privacy}", "received_events_url": "https://api.github.com/users/robojumper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "robojumper", "id": 14299449, "node_id": "MDQ6VXNlcjE0Mjk5NDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14299449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robojumper", "html_url": "https://github.com/robojumper", "followers_url": "https://api.github.com/users/robojumper/followers", "following_url": "https://api.github.com/users/robojumper/following{/other_user}", "gists_url": "https://api.github.com/users/robojumper/gists{/gist_id}", "starred_url": "https://api.github.com/users/robojumper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robojumper/subscriptions", "organizations_url": "https://api.github.com/users/robojumper/orgs", "repos_url": "https://api.github.com/users/robojumper/repos", "events_url": "https://api.github.com/users/robojumper/events{/privacy}", "received_events_url": "https://api.github.com/users/robojumper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "059fc8696331c2413565e8c682067c76aa6acaf8", "url": "https://api.github.com/repos/rust-lang/rust/commits/059fc8696331c2413565e8c682067c76aa6acaf8", "html_url": "https://github.com/rust-lang/rust/commit/059fc8696331c2413565e8c682067c76aa6acaf8"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "bf83adc42a30d5df4f674180676c79d00d831991", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f2dd233ddc60b647fe9c32ea2d712224005ae99e/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2dd233ddc60b647fe9c32ea2d712224005ae99e/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=f2dd233ddc60b647fe9c32ea2d712224005ae99e", "patch": "@@ -83,7 +83,7 @@ pub struct PackageData {\n     pub dependencies: Vec<PackageDependency>,\n     pub edition: Edition,\n     pub features: Vec<String>,\n-    pub cfgs: Vec<PathBuf>,\n+    pub cfgs: Vec<String>,\n     pub out_dir: Option<PathBuf>,\n     pub proc_macro_dylib_path: Option<PathBuf>,\n }\n@@ -279,7 +279,7 @@ impl CargoWorkspace {\n pub struct ExternResources {\n     out_dirs: FxHashMap<PackageId, PathBuf>,\n     proc_dylib_paths: FxHashMap<PackageId, PathBuf>,\n-    cfgs: FxHashMap<PackageId, Vec<PathBuf>>,\n+    cfgs: FxHashMap<PackageId, Vec<String>>,\n }\n \n pub fn load_extern_resources(\n@@ -307,7 +307,12 @@ pub fn load_extern_resources(\n             match message {\n                 Message::BuildScriptExecuted(BuildScript { package_id, out_dir, cfgs, .. }) => {\n                     res.out_dirs.insert(package_id.clone(), out_dir);\n-                    res.cfgs.insert(package_id, cfgs);\n+                    res.cfgs.insert(\n+                        package_id,\n+                        // FIXME: Current `cargo_metadata` uses `PathBuf` instead of `String`,\n+                        // change when https://github.com/oli-obk/cargo_metadata/pulls/112 reaches crates.io\n+                        cfgs.iter().filter_map(|c| c.to_str().map(|s| s.to_owned())).collect(),\n+                    );\n                 }\n \n                 Message::CompilerArtifact(message) => {"}, {"sha": "7231da221a4b254b667a7b00921ffd091ef38743", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f2dd233ddc60b647fe9c32ea2d712224005ae99e/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2dd233ddc60b647fe9c32ea2d712224005ae99e/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=f2dd233ddc60b647fe9c32ea2d712224005ae99e", "patch": "@@ -399,13 +399,7 @@ impl ProjectWorkspace {\n                             let cfg_options = {\n                                 let mut opts = default_cfg_options.clone();\n                                 opts.insert_features(cargo[pkg].features.iter().map(Into::into));\n-                                opts.insert_cfgs(\n-                                    cargo[pkg]\n-                                        .cfgs\n-                                        .iter()\n-                                        .filter_map(|c| c.to_str())\n-                                        .map(Into::into),\n-                                );\n+                                opts.insert_cfgs(cargo[pkg].cfgs.iter().map(Into::into));\n                                 opts\n                             };\n                             let mut env = Env::default();"}]}