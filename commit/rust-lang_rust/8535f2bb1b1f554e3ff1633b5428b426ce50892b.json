{"sha": "8535f2bb1b1f554e3ff1633b5428b426ce50892b", "node_id": "C_kwDOAAsO6NoAKDg1MzVmMmJiMWIxZjU1NGUzZmYxNjMzYjU0MjhiNDI2Y2U1MDg5MmI", "commit": {"author": {"name": "Duong Quoc Khanh", "email": "dqkqdlot@gmail.com", "date": "2023-02-07T18:37:20Z"}, "committer": {"name": "Duong Quoc Khanh", "email": "dqkqdlot@gmail.com", "date": "2023-02-07T18:37:20Z"}, "message": "Handle edge cases.\n\nHandle case when BlockExpr is child of IfExpr, WhileExpr, LoopExpr,\nForExpr.\nAn additional { } will be added when:\n- It is not a BlockExpr\n- It is a BlockExpr and a child of IfExpr, WhileExpr, LoopExpr, ForExpr.", "tree": {"sha": "11aaec686faf92b0ca0112e2e4abbaa32206a387", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11aaec686faf92b0ca0112e2e4abbaa32206a387"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8535f2bb1b1f554e3ff1633b5428b426ce50892b", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEwZYQ1XvHmidXWoT/2lKnToBKAOcFAmPim7gACgkQ2lKnToBK\nAOe8EA/7BDTgYkJapBxntNI3Ar2w+dCxzf+XijE67G/J0PGsgd7NFbqKzKIjz1du\nE2G7mUrhGb26oHLSbUC6mgGSdnFlUbZXnurEX2PHlywA2fKCIJB1Yl3P1SFQgvNO\nK4WaVSoEpAVdYTTD0YLgIvBQQy9n7UvkOQ4BeKZBmcxwpZ7cELl0zLl0exg5Ykvb\nySJ24F/Td+xzhjJSmk2m/n23YEU18uN+AI/IdpNwqG/7qH/7ZWlpQH4urkMNLTCw\nG9Uh/X0+4BjgPdijBzei0LgcxSoQm11Gsh4H+9db+rcJE7YjIWvkHjKi6I/oAKZ5\nfuvFdaWtKbVAIozVimrud4yW59nfGKpRkLMCv9OhTyDZUABk1uQy17uATqIwwon5\nS7XmFENwaOjr0T3g7yS5iyy0aSxwnNXUtDpTybA3vrAAIq8ysJWnwqwOE2OokJTg\n7bmJsrg0QQ1ZCRqwAW9SHOmEffBnvKd3Gpo5db9EVhB/oJt+l9BWJaAYoNrqKhtR\nMQ/LEqIbxRqYMOHn57Piq7LJZJEUcevTVu9LGzeHYxl7AZJUQ4VMwX/V5rZMlbHP\nH4w0hkWS2dfy2oW+9BNmUX3drkR07jn0bEiGOzYpOwUXLAXfo9kHD7UCx9u1ZF8m\nNQfVeyqqsnneNhSBvuFWRFbNjhHF7BfV3nXDz10BwMkzWUMTFeQ=\n=JVpx\n-----END PGP SIGNATURE-----", "payload": "tree 11aaec686faf92b0ca0112e2e4abbaa32206a387\nparent 370ba94ca2c610fb91288c8198ccd02db0eb54f5\nauthor Duong Quoc Khanh <dqkqdlot@gmail.com> 1675795040 +0900\ncommitter Duong Quoc Khanh <dqkqdlot@gmail.com> 1675795040 +0900\n\nHandle edge cases.\n\nHandle case when BlockExpr is child of IfExpr, WhileExpr, LoopExpr,\nForExpr.\nAn additional { } will be added when:\n- It is not a BlockExpr\n- It is a BlockExpr and a child of IfExpr, WhileExpr, LoopExpr, ForExpr.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8535f2bb1b1f554e3ff1633b5428b426ce50892b", "html_url": "https://github.com/rust-lang/rust/commit/8535f2bb1b1f554e3ff1633b5428b426ce50892b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8535f2bb1b1f554e3ff1633b5428b426ce50892b/comments", "author": {"login": "dqkqd", "id": 24296517, "node_id": "MDQ6VXNlcjI0Mjk2NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/24296517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dqkqd", "html_url": "https://github.com/dqkqd", "followers_url": "https://api.github.com/users/dqkqd/followers", "following_url": "https://api.github.com/users/dqkqd/following{/other_user}", "gists_url": "https://api.github.com/users/dqkqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dqkqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dqkqd/subscriptions", "organizations_url": "https://api.github.com/users/dqkqd/orgs", "repos_url": "https://api.github.com/users/dqkqd/repos", "events_url": "https://api.github.com/users/dqkqd/events{/privacy}", "received_events_url": "https://api.github.com/users/dqkqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dqkqd", "id": 24296517, "node_id": "MDQ6VXNlcjI0Mjk2NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/24296517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dqkqd", "html_url": "https://github.com/dqkqd", "followers_url": "https://api.github.com/users/dqkqd/followers", "following_url": "https://api.github.com/users/dqkqd/following{/other_user}", "gists_url": "https://api.github.com/users/dqkqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dqkqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dqkqd/subscriptions", "organizations_url": "https://api.github.com/users/dqkqd/orgs", "repos_url": "https://api.github.com/users/dqkqd/repos", "events_url": "https://api.github.com/users/dqkqd/events{/privacy}", "received_events_url": "https://api.github.com/users/dqkqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "370ba94ca2c610fb91288c8198ccd02db0eb54f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/370ba94ca2c610fb91288c8198ccd02db0eb54f5", "html_url": "https://github.com/rust-lang/rust/commit/370ba94ca2c610fb91288c8198ccd02db0eb54f5"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "83d457c215964a65a46737c4af5411a117f3434e", "filename": "crates/ide-completion/src/completions/postfix.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8535f2bb1b1f554e3ff1633b5428b426ce50892b/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8535f2bb1b1f554e3ff1633b5428b426ce50892b/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs?ref=8535f2bb1b1f554e3ff1633b5428b426ce50892b", "patch": "@@ -6,7 +6,7 @@ use hir::{Documentation, HasAttrs};\n use ide_db::{imports::insert_use::ImportScope, ty_filter::TryEnum, SnippetCap};\n use syntax::{\n     ast::{self, make, AstNode, AstToken},\n-    SyntaxKind::{EXPR_STMT, STMT_LIST},\n+    SyntaxKind::{BLOCK_EXPR, EXPR_STMT, FOR_EXPR, IF_EXPR, LOOP_EXPR, STMT_LIST, WHILE_EXPR},\n     TextRange, TextSize,\n };\n use text_edit::TextEdit;\n@@ -123,9 +123,19 @@ pub(crate) fn complete_postfix(\n     postfix_snippet(\"ref\", \"&expr\", &format!(\"&{receiver_text}\")).add_to(acc);\n     postfix_snippet(\"refm\", \"&mut expr\", &format!(\"&mut {receiver_text}\")).add_to(acc);\n \n-    let unsafe_completion_string = match dot_receiver {\n-        ast::Expr::BlockExpr(_) => format!(\"unsafe {receiver_text}\"),\n-        _ => format!(\"unsafe {{ {receiver_text} }}\"),\n+    let mut unsafe_should_be_wrapped = true;\n+    if dot_receiver.syntax().kind() == BLOCK_EXPR {\n+        unsafe_should_be_wrapped = false;\n+        if let Some(parent) = dot_receiver.syntax().parent() {\n+            if matches!(parent.kind(), IF_EXPR | WHILE_EXPR | LOOP_EXPR | FOR_EXPR) {\n+                unsafe_should_be_wrapped = true;\n+            }\n+        }\n+    };\n+    let unsafe_completion_string = if unsafe_should_be_wrapped {\n+        format!(\"unsafe {{ {receiver_text} }}\")\n+    } else {\n+        format!(\"unsafe {receiver_text}\")\n     };\n     postfix_snippet(\"unsafe\", \"unsafe {}\", &unsafe_completion_string).add_to(acc);\n "}]}