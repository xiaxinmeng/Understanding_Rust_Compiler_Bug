{"sha": "f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZDQwN2VkMGZlNjYwNGQ0NGNjM2ZiY2ZiYThiZDFmYTY1ZjhmOWM=", "commit": {"author": {"name": "Antoine Martin", "email": "antoine97.martin@gmail.com", "date": "2020-10-01T08:07:04Z"}, "committer": {"name": "Antoine Martin", "email": "antoine97.martin@gmail.com", "date": "2020-10-01T08:07:04Z"}, "message": "Bless mir-opt tests with new opt", "tree": {"sha": "3a31411041adc2ed4b178f6d14e076ab5d8b9cb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a31411041adc2ed4b178f6d14e076ab5d8b9cb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c", "html_url": "https://github.com/rust-lang/rust/commit/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/comments", "author": {"login": "alarsyo", "id": 15170378, "node_id": "MDQ6VXNlcjE1MTcwMzc4", "avatar_url": "https://avatars.githubusercontent.com/u/15170378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alarsyo", "html_url": "https://github.com/alarsyo", "followers_url": "https://api.github.com/users/alarsyo/followers", "following_url": "https://api.github.com/users/alarsyo/following{/other_user}", "gists_url": "https://api.github.com/users/alarsyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alarsyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alarsyo/subscriptions", "organizations_url": "https://api.github.com/users/alarsyo/orgs", "repos_url": "https://api.github.com/users/alarsyo/repos", "events_url": "https://api.github.com/users/alarsyo/events{/privacy}", "received_events_url": "https://api.github.com/users/alarsyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alarsyo", "id": 15170378, "node_id": "MDQ6VXNlcjE1MTcwMzc4", "avatar_url": "https://avatars.githubusercontent.com/u/15170378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alarsyo", "html_url": "https://github.com/alarsyo", "followers_url": "https://api.github.com/users/alarsyo/followers", "following_url": "https://api.github.com/users/alarsyo/following{/other_user}", "gists_url": "https://api.github.com/users/alarsyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alarsyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alarsyo/subscriptions", "organizations_url": "https://api.github.com/users/alarsyo/orgs", "repos_url": "https://api.github.com/users/alarsyo/repos", "events_url": "https://api.github.com/users/alarsyo/events{/privacy}", "received_events_url": "https://api.github.com/users/alarsyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f54bfac074657271b03f78b8847e2fbcdd1d76ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/f54bfac074657271b03f78b8847e2fbcdd1d76ad", "html_url": "https://github.com/rust-lang/rust/commit/f54bfac074657271b03f78b8847e2fbcdd1d76ad"}], "stats": {"total": 158, "additions": 52, "deletions": 106}, "files": [{"sha": "2cf5dd49d6a91c88f810b18100e014cddb9f7ec5", "filename": "src/test/mir-opt/early_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyBranches-after-copy-prop.after.diff", "status": "modified", "additions": 18, "deletions": 24, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyBranches-after-copy-prop.after.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyBranches-after-copy-prop.after.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyBranches-after-copy-prop.after.diff?ref=f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c", "patch": "@@ -91,7 +91,7 @@\n +         StorageLive(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n +         _35 = Ne(_34, _11);              // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n +         StorageDead(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         switchInt(move _35) -> [false: bb8, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n++         switchInt(move _35) -> [false: bb7, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n       }\n   \n       bb1: {\n@@ -107,10 +107,9 @@\n           StorageDead(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:27: 27:28\n -         StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n -         StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:14: 27:28\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:14: 27:28\n+          return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:14: 27:28\n       }\n   \n +     bb2: {\n@@ -131,7 +130,7 @@\n +         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n-+         goto -> bb7;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n +     }\n + \n       bb3: {\n@@ -154,7 +153,7 @@\n +         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n-+         goto -> bb7;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n       }\n   \n       bb4: {\n@@ -177,7 +176,7 @@\n +         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n-+         goto -> bb7;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n       }\n   \n       bb5: {\n@@ -200,7 +199,7 @@\n +         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n-+         goto -> bb7;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n       }\n   \n       bb6: {\n@@ -221,7 +220,11 @@\n -         StorageDead(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n -         StorageDead(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n -         StorageDead(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n--         goto -> bb11;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n++         discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n +         return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n       }\n   \n@@ -243,15 +246,10 @@\n -         StorageDead(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n -         StorageDead(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n -         StorageDead(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n--         goto -> bb11;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n-+         discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n-      }\n-  \n-      bb8: {\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+-     }\n+- \n+-     bb8: {\n -         StorageLive(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n -         _22 = (((*(_4.0: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n -         StorageLive(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n@@ -269,7 +267,7 @@\n -         StorageDead(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n -         StorageDead(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n -         StorageDead(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n--         goto -> bb11;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n -     }\n - \n -     bb9: {\n@@ -290,19 +288,15 @@\n -         StorageDead(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n -         StorageDead(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n -         StorageDead(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n--         goto -> bb11;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n -     }\n - \n -     bb10: {\n--         return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n--     }\n-- \n--     bb11: {\n -         ((_0 as Ok).0: ViewportPercentageLength) = move _3; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n -         discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n -         StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n -         StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n+-         return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n +         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n +         switchInt(_11) -> [0_isize: bb2, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n       }"}, {"sha": "a80bf2ac0179c40c89a9931b6d76dc501292bfaf", "filename": "src/test/mir-opt/early_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff?ref=f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c", "patch": "@@ -73,7 +73,7 @@\n +         StorageLive(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n +         _35 = Ne(_34, _11);              // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n +         StorageDead(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         switchInt(move _35) -> [false: bb8, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n++         switchInt(move _35) -> [false: bb7, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n       }\n   \n       bb1: {\n@@ -89,8 +89,7 @@\n           StorageDead(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:27: 27:28\n           StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n           StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:14: 27:28\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:14: 27:28\n+          return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:14: 27:28\n       }\n   \n -     bb3: {\n@@ -127,8 +126,8 @@\n           StorageDead(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n           StorageDead(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n           StorageDead(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n--         goto -> bb11;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-+         goto -> bb7;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n       }\n   \n -     bb7: {\n@@ -150,8 +149,8 @@\n           StorageDead(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n           StorageDead(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n           StorageDead(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n--         goto -> bb11;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-+         goto -> bb7;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n       }\n   \n -     bb8: {\n@@ -173,8 +172,8 @@\n           StorageDead(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n           StorageDead(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n           StorageDead(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n--         goto -> bb11;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-+         goto -> bb7;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n       }\n   \n -     bb9: {\n@@ -196,26 +195,20 @@\n           StorageDead(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n           StorageDead(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n           StorageDead(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n--         goto -> bb11;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-+         goto -> bb7;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n       }\n   \n -     bb10: {\n +     bb6: {\n-          return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n-      }\n-  \n--     bb11: {\n-+     bb7: {\n           ((_0 as Ok).0: ViewportPercentageLength) = move _3; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n           discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n           StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n           StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n+          return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n +     }\n + \n-+     bb8: {\n++     bb7: {\n +         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n +         switchInt(_11) -> [0_isize: bb2, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n       }"}, {"sha": "1a6ee724cbb31d2dba8edcbc6947af36fd22815c", "filename": "src/test/mir-opt/issue_73223.main.SimplifyArmIdentity.64bit.diff", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.64bit.diff?ref=f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c", "patch": "@@ -106,7 +106,7 @@\n           _0 = const ();                   // scope 0 at $DIR/issue-73223.rs:4:17: 4:23\n           StorageDead(_2);                 // scope 0 at $DIR/issue-73223.rs:5:6: 5:7\n           StorageDead(_1);                 // scope 0 at $DIR/issue-73223.rs:9:1: 9:2\n-          goto -> bb3;                     // scope 0 at $DIR/issue-73223.rs:4:17: 4:23\n+          return;                          // scope 0 at $DIR/issue-73223.rs:4:17: 4:23\n       }\n   \n       bb2: {\n@@ -153,14 +153,10 @@\n           StorageDead(_17);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _15 = Not(move _16);             // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_16);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          switchInt(_15) -> [false: bb4, otherwise: bb5]; // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          switchInt(_15) -> [false: bb3, otherwise: bb4]; // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       }\n   \n       bb3: {\n-          return;                          // scope 0 at $DIR/issue-73223.rs:9:2: 9:2\n-      }\n-  \n-      bb4: {\n           _8 = const ();                   // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_15);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_14);                // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n@@ -170,10 +166,10 @@\n           _0 = const ();                   // scope 0 at $DIR/issue-73223.rs:1:11: 9:2\n           StorageDead(_6);                 // scope 1 at $DIR/issue-73223.rs:9:1: 9:2\n           StorageDead(_1);                 // scope 0 at $DIR/issue-73223.rs:9:1: 9:2\n-          goto -> bb3;                     // scope 0 at $DIR/issue-73223.rs:9:2: 9:2\n+          return;                          // scope 0 at $DIR/issue-73223.rs:9:2: 9:2\n       }\n   \n-      bb5: {\n+      bb4: {\n           StorageLive(_19);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n           StorageLive(_20);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n           StorageLive(_21);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n@@ -224,24 +220,24 @@\n           StorageLive(_46);                // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           StorageLive(_47);                // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           _47 = _40;                       // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n-          _46 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _47) -> bb6; // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n+          _46 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _47) -> bb5; // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {std::intrinsics::transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n-      bb6: {\n+      bb5: {\n           StorageDead(_47);                // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           StorageLive(_48);                // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           StorageLive(_49);                // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           _49 = _39;                       // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n-          _48 = transmute::<&&i32, &core::fmt::Opaque>(move _49) -> bb7; // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n+          _48 = transmute::<&&i32, &core::fmt::Opaque>(move _49) -> bb6; // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(&&i32) -> &core::fmt::Opaque {std::intrinsics::transmute::<&&i32, &core::fmt::Opaque>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n-      bb7: {\n+      bb6: {\n           StorageDead(_49);                // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           (_38.0: &core::fmt::Opaque) = move _48; // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           (_38.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _46; // scope 7 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n@@ -260,24 +256,24 @@\n           StorageLive(_50);                // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           StorageLive(_51);                // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           _51 = _43;                       // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n-          _50 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _51) -> bb8; // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n+          _50 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _51) -> bb7; // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {std::intrinsics::transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n-      bb8: {\n+      bb7: {\n           StorageDead(_51);                // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           StorageLive(_52);                // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           StorageLive(_53);                // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           _53 = _42;                       // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n-          _52 = transmute::<&&i32, &core::fmt::Opaque>(move _53) -> bb9; // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n+          _52 = transmute::<&&i32, &core::fmt::Opaque>(move _53) -> bb8; // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(&&i32) -> &core::fmt::Opaque {std::intrinsics::transmute::<&&i32, &core::fmt::Opaque>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n-      bb9: {\n+      bb8: {\n           StorageDead(_53);                // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           (_41.0: &core::fmt::Opaque) = move _52; // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL\n           (_41.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _50; // scope 9 at $SRC_DIR/core/src/fmt/mod.rs:LL:COL"}, {"sha": "7a625966619e9bbc749923e1dd4a43d89c90d969", "filename": "src/test/mir-opt/not_equal_false.opt.InstCombine.diff", "status": "modified", "additions": 8, "deletions": 33, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fnot_equal_false.opt.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fnot_equal_false.opt.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnot_equal_false.opt.InstCombine.diff?ref=f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c", "patch": "@@ -13,60 +13,35 @@\n           StorageLive(_2);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _3 = discriminant(_1);           // scope 0 at $DIR/not_equal_false.rs:4:17: 4:21\n           _2 = Eq(_3, const 0_isize);      // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          goto -> bb7;                     // scope 0 at $DIR/not_equal_false.rs:4:17: 4:21\n+          goto -> bb4;                     // scope 0 at $DIR/not_equal_false.rs:4:17: 4:21\n       }\n   \n       bb1: {\n           _0 = const true;                 // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-          goto -> bb4;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n+          goto -> bb3;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n       }\n   \n       bb2: {\n-          _0 = const false;                // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-          goto -> bb4;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-      }\n-  \n-      bb3: {\n           StorageLive(_4);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _5 = discriminant(_1);           // scope 0 at $DIR/not_equal_false.rs:4:38: 4:45\n           _4 = Eq(_5, const 1_isize);      // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          goto -> bb10;                    // scope 0 at $DIR/not_equal_false.rs:4:38: 4:45\n+          goto -> bb5;                     // scope 0 at $DIR/not_equal_false.rs:4:38: 4:45\n       }\n   \n-      bb4: {\n+      bb3: {\n           StorageDead(_4);                 // scope 0 at $DIR/not_equal_false.rs:4:45: 4:46\n           StorageDead(_2);                 // scope 0 at $DIR/not_equal_false.rs:4:45: 4:46\n           return;                          // scope 0 at $DIR/not_equal_false.rs:5:2: 5:2\n       }\n   \n-      bb5: {\n-          _2 = const false;                // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          goto -> bb7;                     // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      }\n-  \n-      bb6: {\n-          _2 = const true;                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          goto -> bb7;                     // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      }\n-  \n-      bb7: {\n-          switchInt(move _2) -> [false: bb3, otherwise: bb1]; // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-      }\n-  \n-      bb8: {\n-          _4 = const false;                // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          goto -> bb10;                    // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      }\n-  \n-      bb9: {\n-          _4 = const true;                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          goto -> bb10;                    // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      bb4: {\n+          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n       }\n   \n-      bb10: {\n+      bb5: {\n -         _0 = Ne(_4, const false);        // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n +         _0 = _4;                         // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-          goto -> bb4;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n+          goto -> bb3;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n       }\n   }\n   "}, {"sha": "52e9679453e5f226645dab618740e0e11e540548", "filename": "src/test/mir-opt/simplify_try.try_identity.DestinationPropagation.diff", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.DestinationPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.DestinationPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.DestinationPropagation.diff?ref=f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c", "patch": "@@ -62,10 +62,6 @@\n +         nop;                             // scope 1 at $DIR/simplify_try.rs:8:5: 8:10\n +         nop;                             // scope 0 at $DIR/simplify_try.rs:7:15: 7:16\n           StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:9:1: 9:2\n-          goto -> bb2;                     // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n-      }\n-  \n-      bb2: {\n           return;                          // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n       }\n   }"}, {"sha": "55cdc7f0d2531d2415d61eea377cecfb1ef313e1", "filename": "src/test/mir-opt/simplify_try.try_identity.SimplifyArmIdentity.diff", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyArmIdentity.diff?ref=f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c", "patch": "@@ -67,7 +67,7 @@\n -         discriminant(_0) = 0;            // scope 1 at $DIR/simplify_try.rs:8:5: 8:10\n -         StorageDead(_11);                // scope 1 at $DIR/simplify_try.rs:8:9: 8:10\n           StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:9:1: 9:2\n-          goto -> bb3;                     // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n+          return;                          // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n       }\n   \n       bb2: {\n@@ -88,11 +88,7 @@\n +         _0 = move _3;                    // scope 8 at $SRC_DIR/core/src/result.rs:LL:COL\n           StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:7:15: 7:16\n           StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:9:1: 9:2\n-          goto -> bb3;                     // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n-      }\n-  \n-      bb3: {\n-          return;                          // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n+          return;                          // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n       }\n   }\n   "}, {"sha": "c4dd23e5b8a82b56559963ed2370529a16cf7389", "filename": "src/test/mir-opt/simplify_try.try_identity.SimplifyBranchSame.after.mir", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyBranchSame.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyBranchSame.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyBranchSame.after.mir?ref=f0d407ed0fe6604d44cc3fbcfba8bd1fa65f8f9c", "patch": "@@ -52,10 +52,6 @@ fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i\n         _0 = move _3;                    // scope 1 at $DIR/simplify_try.rs:8:5: 8:10\n         StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:7:15: 7:16\n         StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:9:1: 9:2\n-        goto -> bb2;                     // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n-    }\n-\n-    bb2: {\n         return;                          // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n     }\n }"}]}