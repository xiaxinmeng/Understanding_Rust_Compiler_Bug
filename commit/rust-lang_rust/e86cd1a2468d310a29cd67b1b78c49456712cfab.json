{"sha": "e86cd1a2468d310a29cd67b1b78c49456712cfab", "node_id": "C_kwDOAAsO6NoAKGU4NmNkMWEyNDY4ZDMxMGEyOWNkNjdiMWI3OGM0OTQ1NjcxMmNmYWI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-03T12:36:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-03T12:36:04Z"}, "message": "Auto merge of #2317 - RalfJung:this-is-not-a-std-test-suite, r=RalfJung\n\nmove arc_drop test to miri-test-libstd\n\nThat's where we have a bunch of slow and unlikely-to-regress tests already. Miri's test suite should primarily test Miri; we sometimes add libstd tests when they are cheap and/or exercise interesting code paths in Miri. https://github.com/rust-lang/miri/pull/2248 already ensures that we allow code like `Arc` with more direct tests.", "tree": {"sha": "f1adf0fdb6350a7fc2ea98108576b1d510d37138", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1adf0fdb6350a7fc2ea98108576b1d510d37138"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e86cd1a2468d310a29cd67b1b78c49456712cfab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e86cd1a2468d310a29cd67b1b78c49456712cfab", "html_url": "https://github.com/rust-lang/rust/commit/e86cd1a2468d310a29cd67b1b78c49456712cfab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e86cd1a2468d310a29cd67b1b78c49456712cfab/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c674f2604bebae514d3b07c58f146f017083dfbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c674f2604bebae514d3b07c58f146f017083dfbb", "html_url": "https://github.com/rust-lang/rust/commit/c674f2604bebae514d3b07c58f146f017083dfbb"}, {"sha": "e71f8b06304b639133b119829d4cb20b99536d89", "url": "https://api.github.com/repos/rust-lang/rust/commits/e71f8b06304b639133b119829d4cb20b99536d89", "html_url": "https://github.com/rust-lang/rust/commit/e71f8b06304b639133b119829d4cb20b99536d89"}], "stats": {"total": 52, "additions": 19, "deletions": 33}, "files": [{"sha": "d831b4979b2564f9df480246df91b30cc212f18d", "filename": "README.md", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e86cd1a2468d310a29cd67b1b78c49456712cfab/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/e86cd1a2468d310a29cd67b1b78c49456712cfab/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=e86cd1a2468d310a29cd67b1b78c49456712cfab", "patch": "@@ -418,9 +418,9 @@ Moreover, Miri recognizes some environment variables:\n   sysroot to use. Only set this if you do not want to use the automatically\n   created sysroot. (The `miri` driver sysroot is controlled via the `--sysroot`\n   flag instead.)\n-* `MIRI_TEST_TARGET` (recognized by the test suite) indicates which target\n-  architecture to test against.  `miri` and `cargo miri` accept the `--target`\n-  flag for the same purpose.\n+* `MIRI_TEST_TARGET` (recognized by the test suite and the `./miri` script) indicates which target\n+  architecture to test against.  `miri` and `cargo miri` accept the `--target` flag for the same\n+  purpose.\n * `MIRI_NO_STD` (recognized by `cargo miri` and the test suite) makes sure that the target's\n   sysroot is built without libstd. This allows testing and running no_std programs.\n * `MIRI_BLESS` (recognized by the test suite) overwrite all `stderr` and `stdout` files\n@@ -581,6 +581,7 @@ Definite bugs found:\n * [`integer-encoding` dereferencing a misaligned pointer](https://github.com/dermesser/integer-encoding-rs/pull/23)\n * [`rkyv` constructing a `Box<[u8]>` from an overaligned allocation](https://github.com/rkyv/rkyv/commit/a9417193a34757e12e24263178be8b2eebb72456)\n * [Data race in `thread::scope`](https://github.com/rust-lang/rust/issues/98498)\n+* [`regex` incorrectly handling unaligned `Vec<u8>` buffers](https://www.reddit.com/r/rust/comments/vq3mmu/comment/ienc7t0?context=3)\n \n Violations of [Stacked Borrows] found that are likely bugs (but Stacked Borrows is currently just an experiment):\n "}, {"sha": "da5634d6a95c1b6e1a607c64276e17d07b8bfe56", "filename": "miri", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e86cd1a2468d310a29cd67b1b78c49456712cfab/miri", "raw_url": "https://github.com/rust-lang/rust/raw/e86cd1a2468d310a29cd67b1b78c49456712cfab/miri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri?ref=e86cd1a2468d310a29cd67b1b78c49456712cfab", "patch": "@@ -167,17 +167,21 @@ test|test-debug|bless|bless-debug)\n     $CARGO test $CARGO_BUILD_FLAGS --manifest-path \"$MIRIDIR\"/ui_test/Cargo.toml \"$@\"\n     ;;\n run|run-debug)\n-    # Scan for \"--target\" to set the \"MIRI_TEST_TARGET\" env var so\n+    # Scan for \"--target\" to overwrite the \"MIRI_TEST_TARGET\" env var so\n     # that we set the MIRI_SYSROOT up the right way.\n-    if [ -z \"$MIRI_TEST_TARGET\" ]; then\n-        for ARG in \"$@\"; do\n-            if [ \"$LAST_ARG\" = \"--target\" ]; then\n-                # Found it!\n-                export MIRI_TEST_TARGET=\"$ARG\"\n-                break\n-            fi\n-            LAST_ARG=\"$ARG\"\n-        done\n+    FOUND_TARGET_OPT=0\n+    for ARG in \"$@\"; do\n+        if [ \"$LAST_ARG\" = \"--target\" ]; then\n+            # Found it!\n+            export MIRI_TEST_TARGET=\"$ARG\"\n+            FOUND_TARGET_OPT=1\n+            break\n+        fi\n+        LAST_ARG=\"$ARG\"\n+    done\n+    if [ \"$FOUND_TARGET_OPT\" = \"0\" ] && [ -n \"$MIRI_TEST_TARGET\" ]; then\n+        # Make sure Miri actually uses this target.\n+        MIRIFLAGS=\"$MIRIFLAGS --target $MIRI_TEST_TARGET\"\n     fi\n     # First build and get a sysroot.\n     $CARGO build $CARGO_BUILD_FLAGS --manifest-path \"$MIRIDIR\"/Cargo.toml"}, {"sha": "b5192cd4214098ff3685c2e300a503181d5851ce", "filename": "tests/pass/0concurrency_arc_drop.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c674f2604bebae514d3b07c58f146f017083dfbb/tests%2Fpass%2F0concurrency_arc_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c674f2604bebae514d3b07c58f146f017083dfbb/tests%2Fpass%2F0concurrency_arc_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2F0concurrency_arc_drop.rs?ref=c674f2604bebae514d3b07c58f146f017083dfbb", "patch": "@@ -1,19 +0,0 @@\n-// ignore-windows: Concurrency on Windows is not supported yet.\n-use std::sync::Arc;\n-use std::thread;\n-\n-/// Test for Arc::drop bug (https://github.com/rust-lang/rust/issues/55005)\n-fn main() {\n-    // The bug seems to take up to 700 iterations to reproduce with most seeds (tested 0-9).\n-    for _ in 0..700 {\n-        let arc_1 = Arc::new(());\n-        let arc_2 = arc_1.clone();\n-        let thread = thread::spawn(|| drop(arc_2));\n-        let mut i = 0;\n-        while i < 256 {\n-            i += 1;\n-        }\n-        drop(arc_1);\n-        thread.join().unwrap();\n-    }\n-}"}, {"sha": "0f798d2b575e08039d6243bfcaa21c69202998ca", "filename": "tests/pass/0weak_memory_consistency.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e86cd1a2468d310a29cd67b1b78c49456712cfab/tests%2Fpass%2F0weak_memory_consistency.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e86cd1a2468d310a29cd67b1b78c49456712cfab/tests%2Fpass%2F0weak_memory_consistency.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2F0weak_memory_consistency.rs?ref=e86cd1a2468d310a29cd67b1b78c49456712cfab", "patch": "@@ -217,7 +217,7 @@ fn test_single_thread() {\n }\n \n pub fn main() {\n-    for _ in 0..75 {\n+    for _ in 0..50 {\n         test_single_thread();\n         test_mixed_access();\n         test_load_buffering_acq_rel();"}]}