{"sha": "c4e11dc3277ee44d4fbfb58da5273bd00940e6d4", "node_id": "C_kwDOAAsO6NoAKGM0ZTExZGMzMjc3ZWU0NGQ0ZmJmYjU4ZGE1MjczYmQwMDk0MGU2ZDQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-06T10:00:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-06T10:00:32Z"}, "message": "Rollup merge of #111369 - Nassiel:master, r=oli-obk\n\nAdded custom risc32-imac for esp-espidf target\n\nESP32-C6 and the upcoming ESP32-P4 are the first Espressif chips that support the \"A\" (atomic) extension of the RISCV specification.\nAs such, they do not work with the existing `riscv32imc-esp-espidf` target and instead need a new one (in this PR) called `riscv32imac-esp-espidf`.", "tree": {"sha": "f8620f228820300ce1b51ba4401f170dc6442dba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8620f228820300ce1b51ba4401f170dc6442dba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4e11dc3277ee44d4fbfb58da5273bd00940e6d4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkfwPACRBK7hj4Ov3rIwAASqkIAKpC+Ob5S0UVX+WzndpQHWdT\ng6Nfs+mNO4H3aY16cAKWAEp7PDH+Jx0Idw0aleCajk4Lopbsyr/oU04RGO+RfNRT\nA1vantlKTZ0UoZAmOy15YqJMS2GFUxSDQqShT4nlbrbXEmatvmyUE4ASUIG5uiHZ\n2/JIi5ANhb/SP+v4RtGL+sOqvcWYnBhjGq505w4mIJsrZqruogjO3wDFVltO7Itq\nx9SNa46QunaRo3Pk34MAmBK4+d4tgRh1nUsF9DpHKhOxhewRuoTqrPgawUfxgxjr\nDviIDhn0iq7fYBAJOoi3DgkRVEnPqeHgZRxaw1mh0jqGBzeu5HnrQVrnIipkjwQ=\n=VkFV\n-----END PGP SIGNATURE-----\n", "payload": "tree f8620f228820300ce1b51ba4401f170dc6442dba\nparent 92327c05f1c54b403f3537a275baf469cdbe6632\nparent 1f5361b40c4ccfa2f806cc9f293d8399a5651b9a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1686045632 +0200\ncommitter GitHub <noreply@github.com> 1686045632 +0200\n\nRollup merge of #111369 - Nassiel:master, r=oli-obk\n\nAdded custom risc32-imac for esp-espidf target\n\nESP32-C6 and the upcoming ESP32-P4 are the first Espressif chips that support the \"A\" (atomic) extension of the RISCV specification.\nAs such, they do not work with the existing `riscv32imc-esp-espidf` target and instead need a new one (in this PR) called `riscv32imac-esp-espidf`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4e11dc3277ee44d4fbfb58da5273bd00940e6d4", "html_url": "https://github.com/rust-lang/rust/commit/c4e11dc3277ee44d4fbfb58da5273bd00940e6d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4e11dc3277ee44d4fbfb58da5273bd00940e6d4/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92327c05f1c54b403f3537a275baf469cdbe6632", "url": "https://api.github.com/repos/rust-lang/rust/commits/92327c05f1c54b403f3537a275baf469cdbe6632", "html_url": "https://github.com/rust-lang/rust/commit/92327c05f1c54b403f3537a275baf469cdbe6632"}, {"sha": "1f5361b40c4ccfa2f806cc9f293d8399a5651b9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f5361b40c4ccfa2f806cc9f293d8399a5651b9a", "html_url": "https://github.com/rust-lang/rust/commit/1f5361b40c4ccfa2f806cc9f293d8399a5651b9a"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "99e4ba24afb1c166c75bacf113fc40fb46f3fcc3", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c4e11dc3277ee44d4fbfb58da5273bd00940e6d4/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4e11dc3277ee44d4fbfb58da5273bd00940e6d4/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=c4e11dc3277ee44d4fbfb58da5273bd00940e6d4", "patch": "@@ -1284,6 +1284,7 @@ supported_targets! {\n     (\"riscv32im-unknown-none-elf\", riscv32im_unknown_none_elf),\n     (\"riscv32imc-unknown-none-elf\", riscv32imc_unknown_none_elf),\n     (\"riscv32imc-esp-espidf\", riscv32imc_esp_espidf),\n+    (\"riscv32imac-esp-espidf\", riscv32imac_esp_espidf),\n     (\"riscv32imac-unknown-none-elf\", riscv32imac_unknown_none_elf),\n     (\"riscv32imac-unknown-xous-elf\", riscv32imac_unknown_xous_elf),\n     (\"riscv32gc-unknown-linux-gnu\", riscv32gc_unknown_linux_gnu),"}, {"sha": "0795065409ad9d135d4b4a22d8a3bc0c5bf43eb5", "filename": "compiler/rustc_target/src/spec/riscv32imac_esp_espidf.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/c4e11dc3277ee44d4fbfb58da5273bd00940e6d4/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv32imac_esp_espidf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4e11dc3277ee44d4fbfb58da5273bd00940e6d4/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv32imac_esp_espidf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv32imac_esp_espidf.rs?ref=c4e11dc3277ee44d4fbfb58da5273bd00940e6d4", "patch": "@@ -0,0 +1,31 @@\n+use crate::spec::{cvs, PanicStrategy, RelocModel, Target, TargetOptions};\n+\n+pub fn target() -> Target {\n+    Target {\n+        data_layout: \"e-m:e-p:32:32-i64:64-n32-S128\".into(),\n+        llvm_target: \"riscv32\".into(),\n+        pointer_width: 32,\n+        arch: \"riscv32\".into(),\n+\n+        options: TargetOptions {\n+            families: cvs![\"unix\"],\n+            os: \"espidf\".into(),\n+            env: \"newlib\".into(),\n+            vendor: \"espressif\".into(),\n+            linker: Some(\"riscv32-esp-elf-gcc\".into()),\n+            cpu: \"generic-rv32\".into(),\n+\n+            // As RiscV32IMAC architecture does natively support atomics,\n+            // automatically enable the support for the Rust STD library.\n+            max_atomic_width: Some(64),\n+            atomic_cas: true,\n+\n+            features: \"+m,+a,+c\".into(),\n+            panic_strategy: PanicStrategy::Abort,\n+            relocation_model: RelocModel::Static,\n+            emit_debug_gdb_scripts: false,\n+            eh_frame_header: false,\n+            ..Default::default()\n+        },\n+    }\n+}"}, {"sha": "d0d300010cbdcf98c81b67ed8689ed77b21b3e3c", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c4e11dc3277ee44d4fbfb58da5273bd00940e6d4/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/c4e11dc3277ee44d4fbfb58da5273bd00940e6d4/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=c4e11dc3277ee44d4fbfb58da5273bd00940e6d4", "patch": "@@ -298,6 +298,7 @@ target | std | host | notes\n `riscv32im-unknown-none-elf` | * |  | Bare RISC-V (RV32IM ISA)\n [`riscv32imac-unknown-xous-elf`](platform-support/riscv32imac-unknown-xous-elf.md) | ? |  | RISC-V Xous (RV32IMAC ISA)\n [`riscv32imc-esp-espidf`](platform-support/esp-idf.md) | \u2713 |  | RISC-V ESP-IDF\n+[`riscv32imac-esp-espidf`](platform-support/esp-idf.md) | \u2713 |  | RISC-V ESP-IDF\n `riscv64gc-unknown-freebsd` |   |   | RISC-V FreeBSD\n `riscv64gc-unknown-fuchsia` |   |   | RISC-V Fuchsia\n `riscv64gc-unknown-linux-musl` |   |   | RISC-V Linux (kernel 4.20, musl 1.2.0)"}, {"sha": "4bbe35709b087ef3dea342d6b97f0083b0f1670c", "filename": "src/doc/rustc/src/platform-support/esp-idf.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c4e11dc3277ee44d4fbfb58da5273bd00940e6d4/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Fesp-idf.md", "raw_url": "https://github.com/rust-lang/rust/raw/c4e11dc3277ee44d4fbfb58da5273bd00940e6d4/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Fesp-idf.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Fesp-idf.md?ref=c4e11dc3277ee44d4fbfb58da5273bd00940e6d4", "patch": "@@ -13,11 +13,12 @@ Targets for the [ESP-IDF](https://github.com/espressif/esp-idf) development fram\n \n The target names follow this format: `$ARCH-esp-espidf`, where `$ARCH` specifies the target processor architecture. The following targets are currently defined:\n \n-|          Target name           | Target CPU(s)         |\n-|--------------------------------|-----------------------|\n-| `riscv32imc-esp-espidf`        |  [ESP32-C3](https://www.espressif.com/en/products/socs/esp32-c3)             |\n+|          Target name           | Target CPU(s)         | Minimum ESP-IDF version |\n+|--------------------------------|-----------------------|-------------------------|\n+| `riscv32imc-esp-espidf`        |  [ESP32-C3](https://www.espressif.com/en/products/socs/esp32-c3)             | `v4.3`                |\n+| `riscv32imac-esp-espidf`       |  [ESP32-C6](https://www.espressif.com/en/products/socs/esp32-c6)             | `v5.1`                |\n \n-The minimum supported ESP-IDF version is `v4.3`, though it is recommended to use the latest stable release if possible.\n+It is recommended to use the latest ESP-IDF stable release if possible.\n \n ## Building the target\n "}]}