{"sha": "f3c2dca3539e6edc745f9c91898cb97d281865c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYzJkY2EzNTM5ZTZlZGM3NDVmOWM5MTg5OGNiOTdkMjgxODY1YzE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-06T01:45:23Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-13T09:40:28Z"}, "message": "Remove scope placeholders from the crate root.", "tree": {"sha": "7ee94d4356e71e453f17141fcfb3663c94571443", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ee94d4356e71e453f17141fcfb3663c94571443"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3c2dca3539e6edc745f9c91898cb97d281865c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3c2dca3539e6edc745f9c91898cb97d281865c1", "html_url": "https://github.com/rust-lang/rust/commit/f3c2dca3539e6edc745f9c91898cb97d281865c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3c2dca3539e6edc745f9c91898cb97d281865c1/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c86c8d41a26b2037e80c9fd028a59313a78b3a66", "url": "https://api.github.com/repos/rust-lang/rust/commits/c86c8d41a26b2037e80c9fd028a59313a78b3a66", "html_url": "https://github.com/rust-lang/rust/commit/c86c8d41a26b2037e80c9fd028a59313a78b3a66"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "0eb9d4bc0c2f77ed105ee2df92b388cf16cac23d", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f3c2dca3539e6edc745f9c91898cb97d281865c1/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c2dca3539e6edc745f9c91898cb97d281865c1/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=f3c2dca3539e6edc745f9c91898cb97d281865c1", "patch": "@@ -191,8 +191,15 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n     fn expand_crate(&mut self, mut krate: ast::Crate) -> ast::Crate {\n         let err_count = self.cx.parse_sess.span_diagnostic.err_count();\n \n-        let items = Expansion::Items(SmallVector::many(krate.module.items));\n-        krate.module.items = self.expand(items).make_items().into();\n+        let mut krate_item = placeholder(ExpansionKind::Items, ast::DUMMY_NODE_ID)\n+            .make_items().pop().unwrap().unwrap();\n+        krate_item.node = ast::ItemKind::Mod(krate.module);\n+        let krate_item = Expansion::Items(SmallVector::one(P(krate_item)));\n+\n+        krate.module = match self.expand(krate_item).make_items().pop().unwrap().unwrap().node {\n+            ast::ItemKind::Mod(module) => module,\n+            _ => unreachable!(),\n+        };\n         krate.exported_macros = mem::replace(&mut self.cx.exported_macros, Vec::new());\n \n         for def in &mut krate.exported_macros {\n@@ -596,6 +603,10 @@ impl<'a, 'b> Folder for InvocationCollector<'a, 'b> {\n                 })\n             }\n             ast::ItemKind::Mod(ast::Mod { inner, .. }) => {\n+                if item.ident == keywords::Invalid.ident() {\n+                    return noop_fold_item(item, self);\n+                }\n+\n                 let mut module = (*self.cx.current_expansion.module).clone();\n                 module.mod_path.push(item.ident);\n "}]}