{"sha": "eeb45c7591ae7c7e843a132fe937b97a7d670581", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlYjQ1Yzc1OTFhZTdjN2U4NDNhMTMyZmU5MzdiOTdhN2Q2NzA1ODE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-11-08T16:16:39Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-11-16T18:57:45Z"}, "message": "make distinct Hir() nodes in the graph for impl items", "tree": {"sha": "c1fc601365f1f09b6616eb5b15842d952e313e07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1fc601365f1f09b6616eb5b15842d952e313e07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eeb45c7591ae7c7e843a132fe937b97a7d670581", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eeb45c7591ae7c7e843a132fe937b97a7d670581", "html_url": "https://github.com/rust-lang/rust/commit/eeb45c7591ae7c7e843a132fe937b97a7d670581", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eeb45c7591ae7c7e843a132fe937b97a7d670581/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fd67eba87fc4bd634af34d170d7683397aeca3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fd67eba87fc4bd634af34d170d7683397aeca3a", "html_url": "https://github.com/rust-lang/rust/commit/3fd67eba87fc4bd634af34d170d7683397aeca3a"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "600732fc6f70b3e602d570ef5c9fb80d374a089a", "filename": "src/librustc/dep_graph/visit.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/eeb45c7591ae7c7e843a132fe937b97a7d670581/src%2Flibrustc%2Fdep_graph%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeb45c7591ae7c7e843a132fe937b97a7d670581/src%2Flibrustc%2Fdep_graph%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fvisit.rs?ref=eeb45c7591ae7c7e843a132fe937b97a7d670581", "patch": "@@ -47,13 +47,12 @@ pub fn visit_all_item_likes_in_krate<'a, 'tcx, V, F>(tcx: TyCtxt<'a, 'tcx, 'tcx>\n         }\n \n         fn visit_impl_item(&mut self, i: &'tcx hir::ImplItem) {\n-            // TODO -- use the def-id of the impl for now\n-            let impl_def_id = self.tcx.map.get_parent_did(i.id);\n-            let task_id = (self.dep_node_fn)(impl_def_id);\n+            let impl_item_def_id = self.tcx.map.local_def_id(i.id);\n+            let task_id = (self.dep_node_fn)(impl_item_def_id);\n             let _task = self.tcx.dep_graph.in_task(task_id.clone());\n             debug!(\"Started task {:?}\", task_id);\n-            assert!(!self.tcx.map.is_inlined_def_id(impl_def_id));\n-            self.tcx.dep_graph.read(DepNode::Hir(impl_def_id));\n+            assert!(!self.tcx.map.is_inlined_def_id(impl_item_def_id));\n+            self.tcx.dep_graph.read(DepNode::Hir(impl_item_def_id));\n             self.visitor.visit_impl_item(i);\n             debug!(\"Ended task {:?}\", task_id);\n         }"}, {"sha": "e684040a17355edb0ef80e25aa10f2ce5fa58b56", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eeb45c7591ae7c7e843a132fe937b97a7d670581/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeb45c7591ae7c7e843a132fe937b97a7d670581/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=eeb45c7591ae7c7e843a132fe937b97a7d670581", "patch": "@@ -254,9 +254,14 @@ impl<'ast> Map<'ast> {\n                         return DepNode::Hir(def_id);\n                     }\n \n+                    EntryImplItem(..) => {\n+                        let def_id = self.local_def_id(id);\n+                        assert!(!self.is_inlined_def_id(def_id));\n+                        return DepNode::Hir(def_id);\n+                    }\n+\n                     EntryForeignItem(p, _) |\n                     EntryTraitItem(p, _) |\n-                    EntryImplItem(p, _) |\n                     EntryVariant(p, _) |\n                     EntryExpr(p, _) |\n                     EntryStmt(p, _) |\n@@ -379,7 +384,6 @@ impl<'ast> Map<'ast> {\n     }\n \n     pub fn impl_item(&self, id: ImplItemId) -> &'ast ImplItem {\n-        // TODO right now this triggers a read of the whole impl\n         self.read(id.id);\n \n         // NB: intentionally bypass `self.forest.krate()` so that we"}, {"sha": "c08519090d2735fe78988e30f2a1b6de8ccd7750", "filename": "src/librustc_incremental/calculate_svh/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eeb45c7591ae7c7e843a132fe937b97a7d670581/src%2Flibrustc_incremental%2Fcalculate_svh%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeb45c7591ae7c7e843a132fe937b97a7d670581/src%2Flibrustc_incremental%2Fcalculate_svh%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fcalculate_svh%2Fmod.rs?ref=eeb45c7591ae7c7e843a132fe937b97a7d670581", "patch": "@@ -207,6 +207,11 @@ impl<'a, 'tcx> Visitor<'tcx> for HashItemsVisitor<'a, 'tcx> {\n         visit::walk_item(self, item);\n     }\n \n+    fn visit_impl_item(&mut self, impl_item: &'tcx hir::ImplItem) {\n+        self.calculate_node_id(impl_item.id, |v| v.visit_impl_item(impl_item));\n+        visit::walk_impl_item(self, impl_item);\n+    }\n+\n     fn visit_foreign_item(&mut self, item: &'tcx hir::ForeignItem) {\n         self.calculate_node_id(item.id, |v| v.visit_foreign_item(item));\n         visit::walk_foreign_item(self, item);"}, {"sha": "3af6ee35f9e5e7d28ee63ce462f59875ab581243", "filename": "src/librustc_incremental/calculate_svh/svh_visitor.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eeb45c7591ae7c7e843a132fe937b97a7d670581/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeb45c7591ae7c7e843a132fe937b97a7d670581/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fcalculate_svh%2Fsvh_visitor.rs?ref=eeb45c7591ae7c7e843a132fe937b97a7d670581", "patch": "@@ -503,10 +503,8 @@ impl<'a, 'hash, 'tcx> visit::Visitor<'tcx> for StrictVersionHashVisitor<'a, 'has\n         // Each item is hashed independently; ignore nested items.\n     }\n \n-    fn visit_nested_impl_item(&mut self, impl_item_id: ImplItemId) {\n-        // For now, we hash impl items as part of the containing impl.\n-        let impl_item = self.tcx.map.impl_item(impl_item_id);\n-        self.visit_impl_item(impl_item);\n+    fn visit_nested_impl_item(&mut self, _: ImplItemId) {\n+        // Impl items are hashed independently; ignore nested impl items.\n     }\n \n     fn visit_variant_data(&mut self,"}]}