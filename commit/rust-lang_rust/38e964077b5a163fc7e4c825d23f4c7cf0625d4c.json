{"sha": "38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZTk2NDA3N2I1YTE2M2ZjN2U0YzgyNWQyM2Y0YzdjZjA2MjVkNGM=", "commit": {"author": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2017-12-08T19:18:21Z"}, "committer": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-04-26T13:39:44Z"}, "message": "Rename rustc_back::target to rustc_target::spec.", "tree": {"sha": "2e949808d9742e89b9270f2738577f871167738a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e949808d9742e89b9270f2738577f871167738a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "html_url": "https://github.com/rust-lang/rust/commit/38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/comments", "author": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f03b80020907a2ac3d3559fcab5516ef870f46b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f03b80020907a2ac3d3559fcab5516ef870f46b", "html_url": "https://github.com/rust-lang/rust/commit/6f03b80020907a2ac3d3559fcab5516ef870f46b"}], "stats": {"total": 350, "additions": 171, "deletions": 179}, "files": [{"sha": "cc21e394e1d67e350990989bb0b16552438491f5", "filename": "src/Cargo.lock", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -1728,10 +1728,10 @@ dependencies = [\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proc_macro 0.0.0\",\n  \"rustc_apfloat 0.0.0\",\n- \"rustc_back 0.0.0\",\n  \"rustc_const_math 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_errors 0.0.0\",\n+ \"rustc_target 0.0.0\",\n  \"serialize 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_pos 0.0.0\",\n@@ -1818,8 +1818,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n name = \"rustc-main\"\n version = \"0.0.0\"\n dependencies = [\n- \"rustc_back 0.0.0\",\n  \"rustc_driver 0.0.0\",\n+ \"rustc_target 0.0.0\",\n ]\n \n [[package]]\n@@ -1857,16 +1857,6 @@ dependencies = [\n  \"core 0.0.0\",\n ]\n \n-[[package]]\n-name = \"rustc_back\"\n-version = \"0.0.0\"\n-dependencies = [\n- \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serialize 0.0.0\",\n- \"syntax 0.0.0\",\n-]\n-\n [[package]]\n name = \"rustc_borrowck\"\n version = \"0.0.0\"\n@@ -1921,7 +1911,6 @@ dependencies = [\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc 0.0.0\",\n  \"rustc_allocator 0.0.0\",\n- \"rustc_back 0.0.0\",\n  \"rustc_borrowck 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_errors 0.0.0\",\n@@ -1934,6 +1923,7 @@ dependencies = [\n  \"rustc_privacy 0.0.0\",\n  \"rustc_resolve 0.0.0\",\n  \"rustc_save_analysis 0.0.0\",\n+ \"rustc_target 0.0.0\",\n  \"rustc_traits 0.0.0\",\n  \"rustc_trans_utils 0.0.0\",\n  \"rustc_typeck 0.0.0\",\n@@ -2011,9 +2001,9 @@ dependencies = [\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proc_macro 0.0.0\",\n  \"rustc 0.0.0\",\n- \"rustc_back 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_errors 0.0.0\",\n+ \"rustc_target 0.0.0\",\n  \"serialize 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_ext 0.0.0\",\n@@ -2032,10 +2022,10 @@ dependencies = [\n  \"log_settings 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc 0.0.0\",\n  \"rustc_apfloat 0.0.0\",\n- \"rustc_back 0.0.0\",\n  \"rustc_const_math 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_errors 0.0.0\",\n+ \"rustc_target 0.0.0\",\n  \"serialize 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_pos 0.0.0\",\n@@ -2121,6 +2111,16 @@ dependencies = [\n  \"syntax_pos 0.0.0\",\n ]\n \n+[[package]]\n+name = \"rustc_target\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serialize 0.0.0\",\n+ \"syntax 0.0.0\",\n+]\n+\n [[package]]\n name = \"rustc_traits\"\n version = \"0.0.0\"\n@@ -2150,14 +2150,14 @@ dependencies = [\n  \"rustc-demangle 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_allocator 0.0.0\",\n  \"rustc_apfloat 0.0.0\",\n- \"rustc_back 0.0.0\",\n  \"rustc_const_math 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_errors 0.0.0\",\n  \"rustc_incremental 0.0.0\",\n  \"rustc_llvm 0.0.0\",\n  \"rustc_mir 0.0.0\",\n  \"rustc_platform_intrinsics 0.0.0\",\n+ \"rustc_target 0.0.0\",\n  \"rustc_trans_utils 0.0.0\",\n  \"serialize 0.0.0\",\n  \"syntax 0.0.0\",\n@@ -2173,10 +2173,10 @@ dependencies = [\n  \"flate2 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc 0.0.0\",\n- \"rustc_back 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_incremental 0.0.0\",\n  \"rustc_mir 0.0.0\",\n+ \"rustc_target 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_pos 0.0.0\",\n ]"}, {"sha": "357ebb89fb65242bfdd31cb96e95a4be1be9bdc2", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -18,7 +18,7 @@ lazy_static = \"1.0.0\"\n log = { version = \"0.4\", features = [\"release_max_level_info\", \"std\"] }\n proc_macro = { path = \"../libproc_macro\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n-rustc_back = { path = \"../librustc_back\" }\n+rustc_target = { path = \"../librustc_target\" }\n rustc_const_math = { path = \"../librustc_const_math\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "db40417917547aa10249a7b0444c81e4dfea6c22", "filename": "src/librustc/ich/impls_misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fich%2Fimpls_misc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fich%2Fimpls_misc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_misc.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -20,7 +20,7 @@ impl_stable_hash_for!(enum ::session::search_paths::PathKind {\n     All\n });\n \n-impl_stable_hash_for!(enum ::rustc_back::target::PanicStrategy {\n+impl_stable_hash_for!(enum ::rustc_target::spec::PanicStrategy {\n     Abort,\n     Unwind\n });"}, {"sha": "f85d0a9bf0c2eccfb68b45993c4a3fe539ce29b5", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -81,7 +81,7 @@ extern crate graphviz;\n #[macro_use] extern crate lazy_static;\n #[cfg(windows)]\n extern crate libc;\n-extern crate rustc_back;\n+extern crate rustc_target;\n #[macro_use] extern crate rustc_data_structures;\n extern crate serialize;\n extern crate rustc_const_math;"}, {"sha": "4400ebc294fd89f4afd114926bb98e17198c6dbf", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -37,7 +37,7 @@ use syntax::ast;\n use syntax::ext::base::SyntaxExtension;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;\n-use rustc_back::target::Target;\n+use rustc_target::spec::Target;\n use rustc_data_structures::sync::{MetadataRef, Lrc};\n \n pub use self::NativeLibraryKind::*;"}, {"sha": "4996a6acff85c574b3d3c6949cf5fae07f6fd24b", "filename": "src/librustc/middle/dependency_format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -69,7 +69,7 @@ use ty::TyCtxt;\n use middle::cstore::{self, DepKind};\n use middle::cstore::LinkagePreference::{self, RequireStatic, RequireDynamic};\n use util::nodemap::FxHashMap;\n-use rustc_back::target::PanicStrategy;\n+use rustc_target::spec::PanicStrategy;\n \n /// A list of dependencies for a certain crate type.\n ///"}, {"sha": "42e4d3861bae37d9380da54781f6ca60de40fafb", "filename": "src/librustc/middle/weak_lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -13,7 +13,7 @@\n use session::config;\n use middle::lang_items;\n \n-use rustc_back::target::PanicStrategy;\n+use rustc_target::spec::PanicStrategy;\n use syntax::ast;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;"}, {"sha": "ab703d423c61d27be59a5538721b0dda944b7c90", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -22,8 +22,8 @@ use session::{early_error, early_warn, Session};\n use session::search_paths::SearchPaths;\n \n use ich::StableHashingContext;\n-use rustc_back::target::{LinkerFlavor, PanicStrategy, RelroLevel};\n-use rustc_back::target::{Target, TargetTriple};\n+use rustc_target::spec::{LinkerFlavor, PanicStrategy, RelroLevel};\n+use rustc_target::spec::{Target, TargetTriple};\n use rustc_data_structures::stable_hasher::ToStableHashKey;\n use lint;\n use middle::cstore;\n@@ -770,7 +770,7 @@ macro_rules! options {\n         pub const parse_sanitizer: Option<&'static str> =\n             Some(\"one of: `address`, `leak`, `memory` or `thread`\");\n         pub const parse_linker_flavor: Option<&'static str> =\n-            Some(::rustc_back::target::LinkerFlavor::one_of());\n+            Some(::rustc_target::spec::LinkerFlavor::one_of());\n         pub const parse_optimization_fuel: Option<&'static str> =\n             Some(\"crate=integer\");\n         pub const parse_unpretty: Option<&'static str> =\n@@ -782,7 +782,7 @@ macro_rules! options {\n     #[allow(dead_code)]\n     mod $mod_set {\n         use super::{$struct_name, Passes, SomePasses, AllPasses, Sanitizer, Lto};\n-        use rustc_back::target::{LinkerFlavor, PanicStrategy, RelroLevel};\n+        use rustc_target::spec::{LinkerFlavor, PanicStrategy, RelroLevel};\n         use std::path::PathBuf;\n \n         $(\n@@ -2323,8 +2323,7 @@ mod dep_tracking {\n     use super::{CrateType, DebugInfoLevel, ErrorOutputType, Lto, OptLevel, OutputTypes,\n                 Passes, Sanitizer};\n     use syntax::feature_gate::UnstableFeatures;\n-    use rustc_back::target::{PanicStrategy, RelroLevel};\n-    use rustc_back::target::TargetTriple;\n+    use rustc_target::spec::{PanicStrategy, RelroLevel, TargetTriple};\n     use syntax::edition::Edition;\n \n     pub trait DepTrackingHash {\n@@ -2456,7 +2455,7 @@ mod tests {\n     use std::iter::FromIterator;\n     use std::path::PathBuf;\n     use super::{Externs, OutputType, OutputTypes};\n-    use rustc_back::target::{PanicStrategy, RelroLevel};\n+    use rustc_target::spec::{PanicStrategy, RelroLevel};\n     use syntax::symbol::Symbol;\n     use syntax::edition::{Edition, DEFAULT_EDITION};\n     use syntax;"}, {"sha": "a0f11443425322ab4e50bd26d84ac659b45e3e36", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -41,8 +41,8 @@ use syntax::{ast, codemap};\n use syntax::feature_gate::AttributeType;\n use syntax_pos::{MultiSpan, Span};\n \n-use rustc_back::target::{LinkerFlavor, PanicStrategy};\n-use rustc_back::target::{Target, TargetTriple};\n+use rustc_target::spec::{LinkerFlavor, PanicStrategy};\n+use rustc_target::spec::{Target, TargetTriple};\n use rustc_data_structures::flock;\n use jobserver::Client;\n "}, {"sha": "f5cb3643de8323a801a4b688f96beea75d532dc5", "filename": "src/librustc/ty/maps/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -45,7 +45,7 @@ use util::nodemap::{DefIdSet, DefIdMap, ItemLocalSet};\n use util::common::{profq_msg, ErrorReported, ProfileQueriesMsg};\n \n use rustc_data_structures::indexed_set::IdxSetBuf;\n-use rustc_back::target::PanicStrategy;\n+use rustc_target::spec::PanicStrategy;\n use rustc_data_structures::indexed_vec::IndexVec;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::stable_hasher::StableVec;"}, {"sha": "3c01692c12b3c846957c15f44d2746158808e1f8", "filename": "src/librustc_back/README.md", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2FREADME.md?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -1,6 +0,0 @@\n-`librustc_back` contains some very low-level details that are\n-specific to different LLVM targets and so forth.\n-\n-For more information about how trans works, see the [rustc guide].\n-\n-[rustc guide]: https://rust-lang-nursery.github.io/rustc-guide/trans.html"}, {"sha": "5aae1bcad896f18fdee8a2d9ac60f8e7d27ab865", "filename": "src/librustc_driver/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2FCargo.toml?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -15,7 +15,7 @@ log = \"0.4\"\n env_logger = { version = \"0.5\", default-features = false }\n rustc = { path = \"../librustc\" }\n rustc_allocator = { path = \"../librustc_allocator\" }\n-rustc_back = { path = \"../librustc_back\" }\n+rustc_target = { path = \"../librustc_target\" }\n rustc_borrowck = { path = \"../librustc_borrowck\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "b203f387e4662d2f3c5f94664d672c2948875b65", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -35,7 +35,7 @@ extern crate env_logger;\n extern crate libc;\n extern crate rustc;\n extern crate rustc_allocator;\n-extern crate rustc_back;\n+extern crate rustc_target;\n extern crate rustc_borrowck;\n extern crate rustc_data_structures;\n extern crate rustc_errors as errors;\n@@ -1021,7 +1021,7 @@ impl RustcDefaultCalls {\n         for req in &sess.opts.prints {\n             match *req {\n                 TargetList => {\n-                    let mut targets = rustc_back::target::get_targets().collect::<Vec<String>>();\n+                    let mut targets = rustc_target::spec::get_targets().collect::<Vec<String>>();\n                     targets.sort();\n                     println!(\"{}\", targets.join(\"\\n\"));\n                 },"}, {"sha": "338824d5efe4caa862256121941b11a7e38bdbce", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -13,7 +13,7 @@ flate2 = \"1.0\"\n log = \"0.4\"\n proc_macro = { path = \"../libproc_macro\" }\n rustc = { path = \"../librustc\" }\n-rustc_back = { path = \"../librustc_back\" }\n+rustc_target = { path = \"../librustc_target\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n serialize = { path = \"../libserialize\" }"}, {"sha": "d0237071a6058d14cb3731e12771bd4c9b93b294", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -21,8 +21,7 @@ use rustc::middle::allocator::AllocatorKind;\n use rustc::middle::cstore::DepKind;\n use rustc::session::{Session, CrateDisambiguator};\n use rustc::session::config::{Sanitizer, self};\n-use rustc_back::target::PanicStrategy;\n-use rustc_back::target::TargetTriple;\n+use rustc_target::spec::{PanicStrategy, TargetTriple};\n use rustc::session::search_paths::PathKind;\n use rustc::middle;\n use rustc::middle::cstore::{validate_crate_name, ExternCrate, ExternCrateSource};"}, {"sha": "64bbcf436cb9ea46113f97a8302668d458cad767", "filename": "src/librustc_metadata/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_metadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_metadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -18,7 +18,7 @@ use rustc::hir::map::definitions::DefPathTable;\n use rustc::hir::svh::Svh;\n use rustc::middle::cstore::{DepKind, ExternCrate, MetadataLoader};\n use rustc::session::{Session, CrateDisambiguator};\n-use rustc_back::target::PanicStrategy;\n+use rustc_target::spec::PanicStrategy;\n use rustc_data_structures::indexed_vec::IndexVec;\n use rustc::util::nodemap::{FxHashMap, NodeMap};\n "}, {"sha": "a99e0a32e6645bbf017f404815efcc21c36e619c", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -38,7 +38,7 @@ extern crate proc_macro;\n \n #[macro_use]\n extern crate rustc;\n-extern crate rustc_back;\n+extern crate rustc_target;\n #[macro_use]\n extern crate rustc_data_structures;\n "}, {"sha": "9b1b48efca58562d5388f74a3008ffe09c226b2e", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -236,7 +236,7 @@ use rustc::util::nodemap::FxHashMap;\n use errors::DiagnosticBuilder;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;\n-use rustc_back::target::{Target, TargetTriple};\n+use rustc_target::spec::{Target, TargetTriple};\n \n use std::cmp;\n use std::collections::HashSet;"}, {"sha": "c9949389aceea5d3910d9bc0f5ab96f717f89dc3", "filename": "src/librustc_metadata/schema.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_metadata%2Fschema.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_metadata%2Fschema.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fschema.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -19,8 +19,7 @@ use rustc::middle::lang_items;\n use rustc::mir;\n use rustc::session::CrateDisambiguator;\n use rustc::ty::{self, Ty, ReprOptions};\n-use rustc_back::target::PanicStrategy;\n-use rustc_back::target::TargetTriple;\n+use rustc_target::spec::{PanicStrategy, TargetTriple};\n \n use rustc_serialize as serialize;\n use syntax::{ast, attr};"}, {"sha": "a1b348774b163bb8f750d3a0ac79d20305ea4ed0", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -15,7 +15,7 @@ graphviz = { path = \"../libgraphviz\" }\n log = \"0.4\"\n log_settings = \"0.1.1\"\n rustc = { path = \"../librustc\" }\n-rustc_back = { path = \"../librustc_back\" }\n+rustc_target = { path = \"../librustc_target\" }\n rustc_const_math = { path = \"../librustc_const_math\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "1dcf1e80041d407b84dafe692c6444abe746edb9", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -20,7 +20,7 @@ use rustc::mir::visit::{MutVisitor, TyContext};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::subst::Substs;\n use rustc::util::nodemap::NodeMap;\n-use rustc_back::target::PanicStrategy;\n+use rustc_target::spec::PanicStrategy;\n use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n use shim;\n use std::mem;"}, {"sha": "399892522a3531ebe9c61ce9bce31eeb937e3692", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -49,7 +49,7 @@ extern crate rustc_errors;\n #[macro_use]\n extern crate syntax;\n extern crate syntax_pos;\n-extern crate rustc_back;\n+extern crate rustc_target;\n extern crate rustc_const_math;\n extern crate core; // for NonZero\n extern crate log_settings;"}, {"sha": "54c13258ef275b05d97e5f800cfb963ccb5bc6fd", "filename": "src/librustc_target/Cargo.toml", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2FCargo.toml?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -1,10 +1,10 @@\n [package]\n authors = [\"The Rust Project Developers\"]\n-name = \"rustc_back\"\n+name = \"rustc_target\"\n version = \"0.0.0\"\n \n [lib]\n-name = \"rustc_back\"\n+name = \"rustc_target\"\n path = \"lib.rs\"\n crate-type = [\"dylib\"]\n ", "previous_filename": "src/librustc_back/Cargo.toml"}, {"sha": "f5b1acb192133cbda62e9fdebfa2bf793e7a6103", "filename": "src/librustc_target/README.md", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2FREADME.md?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -0,0 +1,6 @@\n+`librustc_target` contains some very low-level details that are\n+specific to different compilation targets and so forth.\n+\n+For more information about how rustc works, see the [rustc guide].\n+\n+[rustc guide]: https://rust-lang-nursery.github.io/rustc-guide/"}, {"sha": "6f6fde1e9e7786155aad5f994a3b14b220f4b469", "filename": "src/librustc_target/build.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fbuild.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "previous_filename": "src/librustc_back/build.rs"}, {"sha": "05d9061da895a12faad3b6cf0d16ee6a4065f971", "filename": "src/librustc_target/lib.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Flib.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -11,7 +11,7 @@\n //! Some stuff used by rustc that doesn't have many dependencies\n //!\n //! Originally extracted from rustc::back, which was nominally the\n-//! compiler 'backend', though LLVM is rustc's backend, so rustc_back\n+//! compiler 'backend', though LLVM is rustc's backend, so rustc_target\n //! is really just odds-and-ends relating to code gen and linking.\n //! This crate mostly exists to make rustc smaller, so we might put\n //! more 'stuff' here in the future.  It does not have a dependency on\n@@ -36,4 +36,4 @@ extern crate serialize;\n \n extern crate serialize as rustc_serialize; // used by deriving\n \n-pub mod target;\n+pub mod spec;", "previous_filename": "src/librustc_back/lib.rs"}, {"sha": "90f8cd90c66ec576ead4159b2899c0e3984d5bc0", "filename": "src/librustc_target/spec/aarch64_apple_ios.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_apple_ios.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {", "previous_filename": "src/librustc_back/target/aarch64_apple_ios.rs"}, {"sha": "afd67112f0d6acbf39eacd285bc255cbf12ad395", "filename": "src/librustc_target/spec/aarch64_linux_android.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_linux_android.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n // See https://developer.android.com/ndk/guides/abis.html#arm64-v8a\n // for target ABI requirements.", "previous_filename": "src/librustc_back/target/aarch64_linux_android.rs"}, {"sha": "ffdb7decd0b472f787ffa6f7b462959da6617448", "filename": "src/librustc_target/spec/aarch64_unknown_cloudabi.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_cloudabi.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();", "previous_filename": "src/librustc_back/target/aarch64_unknown_cloudabi.rs"}, {"sha": "48177b8c79aedbfaf14f271d5729f5cdc6c33edf", "filename": "src/librustc_target/spec/aarch64_unknown_freebsd.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_freebsd.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::freebsd_base::opts();", "previous_filename": "src/librustc_back/target/aarch64_unknown_freebsd.rs"}, {"sha": "4da6724ef628698a9a1103190cecf9b3c1f79bfe", "filename": "src/librustc_target/spec/aarch64_unknown_fuchsia.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_fuchsia.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::fuchsia_base::opts();", "previous_filename": "src/librustc_back/target/aarch64_unknown_fuchsia.rs"}, {"sha": "2351d01469215499afd996d4ecfdd1ea9cd536b0", "filename": "src/librustc_target/spec/aarch64_unknown_linux_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/aarch64_unknown_linux_gnu.rs"}, {"sha": "5ab55a076f45b255f0009ab8412032744b2b54cf", "filename": "src/librustc_target/spec/aarch64_unknown_linux_musl.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_musl.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();", "previous_filename": "src/librustc_back/target/aarch64_unknown_linux_musl.rs"}, {"sha": "7e27e8aa9a76b8bceda337f7dd9c4b4f5b7ee92e", "filename": "src/librustc_target/spec/android_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fandroid_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fandroid_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fandroid_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, TargetOptions};\n+use spec::{LinkerFlavor, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/android_base.rs"}, {"sha": "4b66891e36f8c9975c11d406fe0f0fbd9b1dfb13", "filename": "src/librustc_target/spec/apple_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fapple_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -10,7 +10,7 @@\n \n use std::env;\n \n-use target::{LinkArgs, TargetOptions};\n+use spec::{LinkArgs, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     // ELF TLS is only available in macOS 10.7+. If you try to compile for 10.6", "previous_filename": "src/librustc_back/target/apple_base.rs"}, {"sha": "acbbab313fe593da6b77d0b164ad07cad2944348", "filename": "src/librustc_target/spec/apple_ios_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fapple_ios_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fapple_ios_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fapple_ios_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -10,7 +10,7 @@\n \n use std::io;\n use std::process::Command;\n-use target::{LinkArgs, LinkerFlavor, TargetOptions};\n+use spec::{LinkArgs, LinkerFlavor, TargetOptions};\n \n use self::Arch::*;\n ", "previous_filename": "src/librustc_back/target/apple_ios_base.rs"}, {"sha": "416e5a0e13a887d49384fa8b20dc3774cbb5d7fc", "filename": "src/librustc_target/spec/arm_base.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farm_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farm_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "previous_filename": "src/librustc_back/target/arm_base.rs"}, {"sha": "ffd242b2bc20ea99055bdbf705bd2f6b8e3b0b3d", "filename": "src/librustc_target/spec/arm_linux_androideabi.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farm_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farm_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_linux_androideabi.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::android_base::opts();", "previous_filename": "src/librustc_back/target/arm_linux_androideabi.rs"}, {"sha": "c67a25e8bc27540c190f10bb7993891c312fd640", "filename": "src/librustc_target/spec/arm_unknown_linux_gnueabi.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabi.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/arm_unknown_linux_gnueabi.rs"}, {"sha": "ed0049a932e92ddfccac21f8170e8f9c94af5731", "filename": "src/librustc_target/spec/arm_unknown_linux_gnueabihf.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabihf.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/arm_unknown_linux_gnueabihf.rs"}, {"sha": "c34093fbab91266526e1eb2b48fcc1bd5fdb222b", "filename": "src/librustc_target/spec/arm_unknown_linux_musleabi.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabi.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();", "previous_filename": "src/librustc_back/target/arm_unknown_linux_musleabi.rs"}, {"sha": "967873b3201b509518bf1c896d8933ea81f4c107", "filename": "src/librustc_target/spec/arm_unknown_linux_musleabihf.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabihf.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();", "previous_filename": "src/librustc_back/target/arm_unknown_linux_musleabihf.rs"}, {"sha": "fb99dffeddd691a9ba24cffa9a8c8150684e8cfc", "filename": "src/librustc_target/spec/armv4t_unknown_linux_gnueabi.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/armv4t_unknown_linux_gnueabi.rs"}, {"sha": "810f091247224acc0ddb9c166cb9b989c0ab866a", "filename": "src/librustc_target/spec/armv5te_unknown_linux_gnueabi.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/armv5te_unknown_linux_gnueabi.rs"}, {"sha": "da7cbb918bd717a6535accfd53381ac62591cafc", "filename": "src/librustc_target/spec/armv7_apple_ios.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv7_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv7_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_apple_ios.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {", "previous_filename": "src/librustc_back/target/armv7_apple_ios.rs"}, {"sha": "cfdc5cddcfb308361f4c1bf50d77b7a95cbf7ad9", "filename": "src/librustc_target/spec/armv7_linux_androideabi.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv7_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv7_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_linux_androideabi.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n // See https://developer.android.com/ndk/guides/abis.html#v7a\n // for target ABI requirements.", "previous_filename": "src/librustc_back/target/armv7_linux_androideabi.rs"}, {"sha": "393c45e434e616f44d7c1bb9558f54a975d94aaf", "filename": "src/librustc_target/spec/armv7_unknown_cloudabi_eabihf.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_cloudabi_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_cloudabi_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_cloudabi_eabihf.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();", "previous_filename": "src/librustc_back/target/armv7_unknown_cloudabi_eabihf.rs"}, {"sha": "14e8fa9dc02a475c410310ffde80d9963e96261e", "filename": "src/librustc_target/spec/armv7_unknown_linux_gnueabihf.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/armv7_unknown_linux_gnueabihf.rs"}, {"sha": "6e71cb307b99743b69945f413a759da37f2c5012", "filename": "src/librustc_target/spec/armv7_unknown_linux_musleabihf.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabihf.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let base = super::linux_musl_base::opts();", "previous_filename": "src/librustc_back/target/armv7_unknown_linux_musleabihf.rs"}, {"sha": "c0c577c3b8c6c1a204b768045bb2b7be1055957e", "filename": "src/librustc_target/spec/armv7s_apple_ios.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv7s_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Farmv7s_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7s_apple_ios.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {", "previous_filename": "src/librustc_back/target/armv7s_apple_ios.rs"}, {"sha": "e2cf714f0ead307175ee91bdee7762c53c119b64", "filename": "src/librustc_target/spec/asmjs_unknown_emscripten.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fasmjs_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fasmjs_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fasmjs_unknown_emscripten.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "previous_filename": "src/librustc_back/target/asmjs_unknown_emscripten.rs"}, {"sha": "e0cbfcdcef07c8b86c6f5598f099d80f3a60f60a", "filename": "src/librustc_target/spec/bitrig_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fbitrig_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fbitrig_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fbitrig_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{TargetOptions, RelroLevel};\n+use spec::{TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {", "previous_filename": "src/librustc_back/target/bitrig_base.rs"}, {"sha": "2ffa74e737fd5244e664dfa9c3b98b2bce67c511", "filename": "src/librustc_target/spec/cloudabi_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fcloudabi_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fcloudabi_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fcloudabi_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n+use spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n \n pub fn opts() -> TargetOptions {\n     let mut args = LinkArgs::new();", "previous_filename": "src/librustc_back/target/cloudabi_base.rs"}, {"sha": "32eac8663afac78f84b975b55884a3705368cfca", "filename": "src/librustc_target/spec/dragonfly_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fdragonfly_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n+use spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {", "previous_filename": "src/librustc_back/target/dragonfly_base.rs"}, {"sha": "04b8a6e706064f1a570364528e076e686a74dc46", "filename": "src/librustc_target/spec/freebsd_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Ffreebsd_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n+use spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {", "previous_filename": "src/librustc_back/target/freebsd_base.rs"}, {"sha": "19a66b693f25614101e128818d5be07524a2869d", "filename": "src/librustc_target/spec/fuchsia_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Ffuchsia_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Ffuchsia_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Ffuchsia_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkArgs, LinkerFlavor, TargetOptions};\n+use spec::{LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {", "previous_filename": "src/librustc_back/target/fuchsia_base.rs"}, {"sha": "bf62b49f9141bd0cd068546347d7a94e0cca6426", "filename": "src/librustc_target/spec/haiku_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fhaiku_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fhaiku_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fhaiku_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{TargetOptions, RelroLevel};\n+use spec::{TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {", "previous_filename": "src/librustc_back/target/haiku_base.rs"}, {"sha": "9eb0327f625ccde7aa9b955d12426244113a6938", "filename": "src/librustc_target/spec/i386_apple_ios.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi386_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi386_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi386_apple_ios.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {", "previous_filename": "src/librustc_back/target/i386_apple_ios.rs"}, {"sha": "9a20b854e0f41c099c813968d7267b121d2894bb", "filename": "src/librustc_target/spec/i586_pc_windows_msvc.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi586_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi586_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi586_pc_windows_msvc.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::TargetResult;\n+use spec::TargetResult;\n \n pub fn target() -> TargetResult {\n     let mut base = super::i686_pc_windows_msvc::target()?;", "previous_filename": "src/librustc_back/target/i586_pc_windows_msvc.rs"}, {"sha": "35bca76af47df8506b880a79d47b82e35c0f728d", "filename": "src/librustc_target/spec/i586_unknown_linux_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi586_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi586_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi586_unknown_linux_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::TargetResult;\n+use spec::TargetResult;\n \n pub fn target() -> TargetResult {\n     let mut base = super::i686_unknown_linux_gnu::target()?;", "previous_filename": "src/librustc_back/target/i586_unknown_linux_gnu.rs"}, {"sha": "ba23e1d6860bd01a108e5e2c3cf52a400e53e3eb", "filename": "src/librustc_target/spec/i586_unknown_linux_musl.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi586_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi586_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi586_unknown_linux_musl.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::TargetResult;\n+use spec::TargetResult;\n \n pub fn target() -> TargetResult {\n     let mut base = super::i686_unknown_linux_musl::target()?;", "previous_filename": "src/librustc_back/target/i586_unknown_linux_musl.rs"}, {"sha": "06ea1e4649b4240a5f7ff02cad19c9ac7075a170", "filename": "src/librustc_target/spec/i686_apple_darwin.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_apple_darwin.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::apple_base::opts();", "previous_filename": "src/librustc_back/target/i686_apple_darwin.rs"}, {"sha": "171e08995954535c9a80286f469c03f20c21f845", "filename": "src/librustc_target/spec/i686_linux_android.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_linux_android.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n // See https://developer.android.com/ndk/guides/abis.html#x86\n // for target ABI requirements.", "previous_filename": "src/librustc_back/target/i686_linux_android.rs"}, {"sha": "867d04ec3f28bf4f9cc0993c7aada571add3796f", "filename": "src/librustc_target/spec/i686_pc_windows_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_base::opts();", "previous_filename": "src/librustc_back/target/i686_pc_windows_gnu.rs"}, {"sha": "3570f379c3087541ef896f13a98d97d82dc99168", "filename": "src/librustc_target/spec/i686_pc_windows_msvc.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_msvc.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_msvc_base::opts();", "previous_filename": "src/librustc_back/target/i686_pc_windows_msvc.rs"}, {"sha": "335105bb1a869519f9aac1da780bc39a4a91858e", "filename": "src/librustc_target/spec/i686_unknown_cloudabi.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_cloudabi.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();", "previous_filename": "src/librustc_back/target/i686_unknown_cloudabi.rs"}, {"sha": "cb0c471353b307be6cadde616c2ffa243851a97c", "filename": "src/librustc_target/spec/i686_unknown_dragonfly.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_dragonfly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_dragonfly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_dragonfly.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::dragonfly_base::opts();", "previous_filename": "src/librustc_back/target/i686_unknown_dragonfly.rs"}, {"sha": "3838a157d10b5f0bb6b7e5a74982e9bd38d1923d", "filename": "src/librustc_target/spec/i686_unknown_freebsd.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_freebsd.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::freebsd_base::opts();", "previous_filename": "src/librustc_back/target/i686_unknown_freebsd.rs"}, {"sha": "98f0787bebaf8e8a04358d8d3c373d811efa7260", "filename": "src/librustc_target/spec/i686_unknown_haiku.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_haiku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_haiku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_haiku.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::haiku_base::opts();", "previous_filename": "src/librustc_back/target/i686_unknown_haiku.rs"}, {"sha": "c3ff347882da1a691c8bec7707ca56b8ceeb0c36", "filename": "src/librustc_target/spec/i686_unknown_linux_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_linux_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/i686_unknown_linux_gnu.rs"}, {"sha": "c02076c071a1d73ebbe9ed2f366afbe1402ee159", "filename": "src/librustc_target/spec/i686_unknown_linux_musl.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_linux_musl.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();", "previous_filename": "src/librustc_back/target/i686_unknown_linux_musl.rs"}, {"sha": "d60ed9885991d7f9dfaa663bc2fa2b3c2dbcf8cb", "filename": "src/librustc_target/spec/i686_unknown_netbsd.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_netbsd.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();", "previous_filename": "src/librustc_back/target/i686_unknown_netbsd.rs"}, {"sha": "79c059c8f952d7884767a7c6eceaf8af396ac52c", "filename": "src/librustc_target/spec/i686_unknown_openbsd.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fi686_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_openbsd.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::openbsd_base::opts();", "previous_filename": "src/librustc_back/target/i686_unknown_openbsd.rs"}, {"sha": "4ebc930d48b6fa2178ddb6e6c1ca22cc061fcb8c", "filename": "src/librustc_target/spec/l4re_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fl4re_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fl4re_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fl4re_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkArgs, LinkerFlavor, PanicStrategy, TargetOptions};\n+use spec::{LinkArgs, LinkerFlavor, PanicStrategy, TargetOptions};\n use std::default::Default;\n //use std::process::Command;\n ", "previous_filename": "src/librustc_back/target/l4re_base.rs"}, {"sha": "4a9cd9e2f3233614e91537026f261ec275234c93", "filename": "src/librustc_target/spec/linux_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Flinux_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Flinux_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Flinux_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n+use spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {", "previous_filename": "src/librustc_back/target/linux_base.rs"}, {"sha": "293f23eab388317c4b5a5d0bdbd8f50ca3d2426a", "filename": "src/librustc_target/spec/linux_musl_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Flinux_musl_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Flinux_musl_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Flinux_musl_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, TargetOptions};\n+use spec::{LinkerFlavor, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/linux_musl_base.rs"}, {"sha": "1f60d918908d019a63de628d96dbfaa59a569a47", "filename": "src/librustc_target/spec/mips64_unknown_linux_gnuabi64.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {", "previous_filename": "src/librustc_back/target/mips64_unknown_linux_gnuabi64.rs"}, {"sha": "e42fde8d403fbcd4e37a8e0d8f1e91a92accbc63", "filename": "src/librustc_target/spec/mips64el_unknown_linux_gnuabi64.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {", "previous_filename": "src/librustc_back/target/mips64el_unknown_linux_gnuabi64.rs"}, {"sha": "59e15137cf40d9e932bca7d3053b7d3b2eed5cd2", "filename": "src/librustc_target/spec/mips_unknown_linux_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {", "previous_filename": "src/librustc_back/target/mips_unknown_linux_gnu.rs"}, {"sha": "8ee399ba56c329534235c6968f7ce0a0826f29a7", "filename": "src/librustc_target/spec/mips_unknown_linux_musl.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_musl.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();", "previous_filename": "src/librustc_back/target/mips_unknown_linux_musl.rs"}, {"sha": "384ab1e413123cf164a6730f7252095f314e0847", "filename": "src/librustc_target/spec/mips_unknown_linux_uclibc.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_uclibc.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {", "previous_filename": "src/librustc_back/target/mips_unknown_linux_uclibc.rs"}, {"sha": "edd29164caca897677971d06f4ec8ecb9c4c3c8b", "filename": "src/librustc_target/spec/mipsel_unknown_linux_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {", "previous_filename": "src/librustc_back/target/mipsel_unknown_linux_gnu.rs"}, {"sha": "1d9378ca1b81407baf89bcb4694469a1f5b800c4", "filename": "src/librustc_target/spec/mipsel_unknown_linux_musl.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_musl.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();", "previous_filename": "src/librustc_back/target/mipsel_unknown_linux_musl.rs"}, {"sha": "a1db1791bb7ce6027f35f6bdf59e4b9cd63de7f7", "filename": "src/librustc_target/spec/mipsel_unknown_linux_uclibc.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_uclibc.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {", "previous_filename": "src/librustc_back/target/mipsel_unknown_linux_uclibc.rs"}, {"sha": "bfee274262f3b3958f6d83f237848298d609ab2a", "filename": "src/librustc_target/spec/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "previous_filename": "src/librustc_back/target/mod.rs"}, {"sha": "ce42a908b0e431525d91e199722f06dc1d4c353c", "filename": "src/librustc_target/spec/msp430_none_elf.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmsp430_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fmsp430_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmsp430_none_elf.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {", "previous_filename": "src/librustc_back/target/msp430_none_elf.rs"}, {"sha": "8b6bb5dec9138f9fe469c157f2b6bf5697dd2d7e", "filename": "src/librustc_target/spec/netbsd_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fnetbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fnetbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fnetbsd_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n+use spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {", "previous_filename": "src/librustc_back/target/netbsd_base.rs"}, {"sha": "90ab1135c54b0e57801208176461a968efa56949", "filename": "src/librustc_target/spec/openbsd_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fopenbsd_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n+use spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {", "previous_filename": "src/librustc_back/target/openbsd_base.rs"}, {"sha": "1959871161343aa656d32cfdd816f357f6ff619b", "filename": "src/librustc_target/spec/powerpc64_unknown_linux_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult, RelroLevel};\n+use spec::{LinkerFlavor, Target, TargetResult, RelroLevel};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/powerpc64_unknown_linux_gnu.rs"}, {"sha": "39840692dff188efd4e951f1681d87d1d989d7b6", "filename": "src/librustc_target/spec/powerpc64le_unknown_linux_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/powerpc64le_unknown_linux_gnu.rs"}, {"sha": "c05b110a75d391e888c465d9d9ce74ec2709ab07", "filename": "src/librustc_target/spec/powerpc_unknown_linux_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/powerpc_unknown_linux_gnu.rs"}, {"sha": "c76c3119c87c5deab3f7b39477472c102df01f0b", "filename": "src/librustc_target/spec/powerpc_unknown_linux_gnuspe.rs", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/powerpc_unknown_linux_gnuspe.rs"}, {"sha": "c05e40b9c25d7253ad12b545a1c3912dccffd551", "filename": "src/librustc_target/spec/powerpc_unknown_netbsd.rs", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_netbsd.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();", "previous_filename": "src/librustc_back/target/powerpc_unknown_netbsd.rs"}, {"sha": "c28746a9363594e45e4891a3fe1a35a3c5884057", "filename": "src/librustc_target/spec/redox_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fredox_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fredox_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fredox_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkArgs, LinkerFlavor, TargetOptions};\n+use spec::{LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {", "previous_filename": "src/librustc_back/target/redox_base.rs"}, {"sha": "c9a9625ebab95b59d85e99ca711589f525dc9f17", "filename": "src/librustc_target/spec/s390x_unknown_linux_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fs390x_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fs390x_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fs390x_unknown_linux_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/s390x_unknown_linux_gnu.rs"}, {"sha": "c14cc3f5bc3befd3420d50edcf9d531807271e97", "filename": "src/librustc_target/spec/solaris_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fsolaris_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fsolaris_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsolaris_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::TargetOptions;\n+use spec::TargetOptions;\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {", "previous_filename": "src/librustc_back/target/solaris_base.rs"}, {"sha": "f68b5fd24bf755dd128cc1ce49b374600e97525c", "filename": "src/librustc_target/spec/sparc64_unknown_linux_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_linux_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/sparc64_unknown_linux_gnu.rs"}, {"sha": "1c1bca9b2b87923baa2297e25f97cf11dcbfc472", "filename": "src/librustc_target/spec/sparc64_unknown_netbsd.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_netbsd.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();", "previous_filename": "src/librustc_back/target/sparc64_unknown_netbsd.rs"}, {"sha": "4e352374f90b064a9132f1b1036f16084d2a29ec", "filename": "src/librustc_target/spec/sparc_unknown_linux_gnu.rs", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fsparc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fsparc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsparc_unknown_linux_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/sparc_unknown_linux_gnu.rs"}, {"sha": "7dea1b75a3c582848684c8afeca09f715cba49b0", "filename": "src/librustc_target/spec/sparcv9_sun_solaris.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fsparcv9_sun_solaris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fsparcv9_sun_solaris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsparcv9_sun_solaris.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::solaris_base::opts();", "previous_filename": "src/librustc_back/target/sparcv9_sun_solaris.rs"}, {"sha": "fdaf1dc6110b5b539741ceeb3641c9174f3d4d44", "filename": "src/librustc_target/spec/thumb_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fthumb_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fthumb_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumb_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -36,7 +36,7 @@\n // build scripts / gcc flags.\n \n use std::default::Default;\n-use target::{PanicStrategy, TargetOptions};\n+use spec::{PanicStrategy, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     // See rust-lang/rfcs#1645 for a discussion about these defaults", "previous_filename": "src/librustc_back/target/thumb_base.rs"}, {"sha": "9fea07c36f4ef7be17075a65e03d8a267e405b06", "filename": "src/librustc_target/spec/thumbv6m_none_eabi.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fthumbv6m_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fthumbv6m_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv6m_none_eabi.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -10,7 +10,7 @@\n \n // Targets the Cortex-M0, Cortex-M0+ and Cortex-M1 processors (ARMv6-M architecture)\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {", "previous_filename": "src/librustc_back/target/thumbv6m_none_eabi.rs"}, {"sha": "ab85c97b1b5ba07bae4fb84d6fe4b7e29e168dac", "filename": "src/librustc_target/spec/thumbv7em_none_eabi.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabi.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -19,7 +19,7 @@\n // To opt-in to hardware accelerated floating point operations, you can use, for example,\n // `-C target-feature=+vfp4` or `-C target-cpu=cortex-m4`.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {", "previous_filename": "src/librustc_back/target/thumbv7em_none_eabi.rs"}, {"sha": "4e62f29134edf7e721f1ce546f3dec4e77c51af2", "filename": "src/librustc_target/spec/thumbv7em_none_eabihf.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabihf.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -18,7 +18,7 @@\n //\n // To opt into double precision hardware support, use the `-C target-feature=-fp-only-sp` flag.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {", "previous_filename": "src/librustc_back/target/thumbv7em_none_eabihf.rs"}, {"sha": "10dc503388afe610bd3c77e9a12b5d8f2926dcfd", "filename": "src/librustc_target/spec/thumbv7m_none_eabi.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fthumbv7m_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fthumbv7m_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7m_none_eabi.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -10,7 +10,7 @@\n \n // Targets the Cortex-M3 processor (ARMv7-M)\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {", "previous_filename": "src/librustc_back/target/thumbv7m_none_eabi.rs"}, {"sha": "164df20f84f344841f8e54a8ef58d645bdf625b7", "filename": "src/librustc_target/spec/wasm32_experimental_emscripten.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fwasm32_experimental_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fwasm32_experimental_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwasm32_experimental_emscripten.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "previous_filename": "src/librustc_back/target/wasm32_experimental_emscripten.rs"}, {"sha": "5077abf1e0eb37b3bb95b2308f21cca0b3d5d53c", "filename": "src/librustc_target/spec/wasm32_unknown_emscripten.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_emscripten.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "previous_filename": "src/librustc_back/target/wasm32_unknown_emscripten.rs"}, {"sha": "56170bbb869f31e8d3cec75b7e072ae8976fde6d", "filename": "src/librustc_target/spec/wasm32_unknown_unknown.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_unknown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_unknown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_unknown.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "previous_filename": "src/librustc_back/target/wasm32_unknown_unknown.rs"}, {"sha": "176df9f13253d4a59c0cda4d6d0ac6830848a0b6", "filename": "src/librustc_target/spec/windows_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fwindows_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fwindows_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwindows_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkArgs, LinkerFlavor, TargetOptions};\n+use spec::{LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {", "previous_filename": "src/librustc_back/target/windows_base.rs"}, {"sha": "1f00e690cd3520f71c7feaed28cd5e685ba20a24", "filename": "src/librustc_target/spec/windows_msvc_base.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fwindows_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fwindows_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwindows_msvc_base.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkArgs, LinkerFlavor, TargetOptions};\n+use spec::{LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {", "previous_filename": "src/librustc_back/target/windows_msvc_base.rs"}, {"sha": "a4efd7e0066ff6de14fdc80615ccd97b18277280", "filename": "src/librustc_target/spec/x86_64_apple_darwin.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_darwin.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::apple_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_apple_darwin.rs"}, {"sha": "eeb53d72fe8a3f78b6f8eb086595ba35404d1c73", "filename": "src/librustc_target/spec/x86_64_apple_ios.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_ios.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {", "previous_filename": "src/librustc_back/target/x86_64_apple_ios.rs"}, {"sha": "06abe916784dc5625bea03d6d891b37b9e2905f4", "filename": "src/librustc_target/spec/x86_64_linux_android.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_linux_android.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::android_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_linux_android.rs"}, {"sha": "8d2f702bc4a0f7c9fc6a3c046de9147e0d35ce29", "filename": "src/librustc_target/spec/x86_64_pc_windows_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_pc_windows_gnu.rs"}, {"sha": "ab610ea94ae897ca769e1e770befb37292aa89d4", "filename": "src/librustc_target/spec/x86_64_pc_windows_msvc.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_msvc.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_msvc_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_pc_windows_msvc.rs"}, {"sha": "ed15cfd9036f5c7b9362c4f4d77b7fa3bb519cc6", "filename": "src/librustc_target/spec/x86_64_rumprun_netbsd.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_rumprun_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_rumprun_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_rumprun_netbsd.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_rumprun_netbsd.rs"}, {"sha": "e84f21c500664da2b9b1d661f2211733152b703e", "filename": "src/librustc_target/spec/x86_64_sun_solaris.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_sun_solaris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_sun_solaris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_sun_solaris.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::solaris_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_sun_solaris.rs"}, {"sha": "21ec6dffcbbce6248d767b3202743b78b57ca154", "filename": "src/librustc_target/spec/x86_64_unknown_bitrig.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_bitrig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_bitrig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_bitrig.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::bitrig_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_bitrig.rs"}, {"sha": "8dc8bd7a7fad914dbe1949eabc66222ca1325486", "filename": "src/librustc_target/spec/x86_64_unknown_cloudabi.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_cloudabi.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_cloudabi.rs"}, {"sha": "50b2871c2ee9c986f383d391fd5404fc8379b206", "filename": "src/librustc_target/spec/x86_64_unknown_dragonfly.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_dragonfly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_dragonfly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_dragonfly.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::dragonfly_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_dragonfly.rs"}, {"sha": "f0aa81ed4598b2b8acd6ac4281e821bf41773326", "filename": "src/librustc_target/spec/x86_64_unknown_freebsd.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_freebsd.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::freebsd_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_freebsd.rs"}, {"sha": "a510ec8eb34264842a0796b83c8caf66985067db", "filename": "src/librustc_target/spec/x86_64_unknown_fuchsia.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_fuchsia.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::fuchsia_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_fuchsia.rs"}, {"sha": "1e78461861a95f3d6bf4514d1fb19c03ba064b22", "filename": "src/librustc_target/spec/x86_64_unknown_haiku.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_haiku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_haiku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_haiku.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::haiku_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_haiku.rs"}, {"sha": "f1179c18294d3449cd4ee2db7d0cb2bcd3ef6bfe", "filename": "src/librustc_target/spec/x86_64_unknown_l4re_uclibc.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_l4re_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_l4re_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_l4re_uclibc.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::l4re_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_l4re_uclibc.rs"}, {"sha": "56559661b03cbddfcdd5517290198b74b4fb61e9", "filename": "src/librustc_target/spec/x86_64_unknown_linux_gnu.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_gnu.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_linux_gnu.rs"}, {"sha": "72b5bd27c7dfe3b35f1069e0fdb87362bd87eb3f", "filename": "src/librustc_target/spec/x86_64_unknown_linux_gnux32.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_gnux32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_gnux32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_gnux32.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_linux_gnux32.rs"}, {"sha": "f1924efcf98b56e104cf764f7f74ac48b11d6b10", "filename": "src/librustc_target/spec/x86_64_unknown_linux_musl.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_musl.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_linux_musl.rs"}, {"sha": "6e8ca6b9e19914be97a9f27341a9198f83adf8e8", "filename": "src/librustc_target/spec/x86_64_unknown_netbsd.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_netbsd.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_netbsd.rs"}, {"sha": "c60b7c86680f810987cbb1ff2e2f0ff62bfa51ee", "filename": "src/librustc_target/spec/x86_64_unknown_openbsd.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_openbsd.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::openbsd_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_openbsd.rs"}, {"sha": "548dfb06109ff41bee2432799fe9ccd9e4225aa7", "filename": "src/librustc_target/spec/x86_64_unknown_redox.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_redox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_redox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_redox.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::{LinkerFlavor, Target, TargetResult};\n+use spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::redox_base::opts();", "previous_filename": "src/librustc_back/target/x86_64_unknown_redox.rs"}, {"sha": "26d1d2e2c86a2532347b29f37d88358f6232567d", "filename": "src/librustc_trans/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2FCargo.toml?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -21,7 +21,7 @@ rustc = { path = \"../librustc\" }\n rustc-demangle = \"0.1.4\"\n rustc_allocator = { path = \"../librustc_allocator\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n-rustc_back = { path = \"../librustc_back\" }\n+rustc_target = { path = \"../librustc_target\" }\n rustc_const_math = { path = \"../librustc_const_math\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n@@ -40,9 +40,9 @@ tempdir = \"0.3\"\n env_logger = { version = \"0.5\", default-features = false }\n \n [features]\n-# Used to communicate the feature to `rustc_back` in the same manner that the\n+# Used to communicate the feature to `rustc_target` in the same manner that the\n # `rustc` driver script communicate this.\n-jemalloc = [\"rustc_back/jemalloc\"]\n+jemalloc = [\"rustc_target/jemalloc\"]\n \n # This is used to convince Cargo to separately cache builds of `rustc_trans`\n # when this option is enabled or not. That way we can build two, cache two"}, {"sha": "9ebbdd7c3c936eefdde8466292c4cb34f5337458", "filename": "src/librustc_trans/back/command.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fback%2Fcommand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fback%2Fcommand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fcommand.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -17,7 +17,7 @@ use std::io;\n use std::mem;\n use std::process::{self, Output};\n \n-use rustc_back::target::LldFlavor;\n+use rustc_target::spec::LldFlavor;\n \n #[derive(Clone)]\n pub struct Command {"}, {"sha": "92f9a9e8ba97464d0a0ef800268bec7fd8ed17f4", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -29,8 +29,7 @@ use rustc::util::common::time;\n use rustc::util::fs::fix_windows_verbatim_for_gcc;\n use rustc::hir::def_id::CrateNum;\n use tempdir::TempDir;\n-use rustc_back::target::{PanicStrategy, RelroLevel, LinkerFlavor};\n-use rustc_back::target::TargetTriple;\n+use rustc_target::spec::{PanicStrategy, RelroLevel, LinkerFlavor, TargetTriple};\n use rustc_data_structures::fx::FxHashSet;\n use context::get_reloc_model;\n use llvm;"}, {"sha": "f9a8473464db7f6f3269bc05ef77fc2d234efd03", "filename": "src/librustc_trans/back/linker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flinker.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -23,7 +23,7 @@ use rustc::middle::dependency_format::Linkage;\n use rustc::session::Session;\n use rustc::session::config::{self, CrateType, OptLevel, DebugInfoLevel};\n use rustc::ty::TyCtxt;\n-use rustc_back::target::{LinkerFlavor, LldFlavor};\n+use rustc_target::spec::{LinkerFlavor, LldFlavor};\n use serialize::{json, Encoder};\n \n /// For all the linkers we support, and information they might"}, {"sha": "2323ec3ef11085d2a81cb7ff71fbad9ece8247d8", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -74,7 +74,7 @@ use type_of::LayoutLlvmExt;\n use rustc::util::nodemap::{FxHashMap, FxHashSet, DefIdSet};\n use CrateInfo;\n use rustc_data_structures::sync::Lrc;\n-use rustc_back::target::TargetTriple;\n+use rustc_target::spec::TargetTriple;\n \n use std::any::Any;\n use std::collections::BTreeMap;"}, {"sha": "5849437758af6268a8a2eaf01b8a1e56393df2e9", "filename": "src/librustc_trans/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcallee.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -26,7 +26,7 @@ use rustc::hir::def_id::DefId;\n use rustc::ty::{self, TypeFoldable};\n use rustc::ty::layout::LayoutOf;\n use rustc::ty::subst::Substs;\n-use rustc_back::target::PanicStrategy;\n+use rustc_target::spec::PanicStrategy;\n \n /// Translates a reference to a fn/method item, monomorphizing and\n /// inlining as it goes."}, {"sha": "200c4c270e775f96d6c334967a5dd5aed6ebaccd", "filename": "src/librustc_trans/declare.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdeclare.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -24,7 +24,7 @@ use llvm::{self, ValueRef};\n use llvm::AttributePlace::Function;\n use rustc::ty::{self, Ty};\n use rustc::session::config::Sanitizer;\n-use rustc_back::target::PanicStrategy;\n+use rustc_target::spec::PanicStrategy;\n use abi::{Abi, FnType};\n use attributes;\n use context::CodegenCx;"}, {"sha": "8fcc849b0609049c6ba91becf369f694d1a7c0d5", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -43,7 +43,7 @@ extern crate num_cpus;\n extern crate rustc_mir;\n extern crate rustc_allocator;\n extern crate rustc_apfloat;\n-extern crate rustc_back;\n+extern crate rustc_target;\n extern crate rustc_const_math;\n #[macro_use] extern crate rustc_data_structures;\n extern crate rustc_demangle;"}, {"sha": "144baa65c1bfa32a6b19b29391799d5811de5f5d", "filename": "src/librustc_trans/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmetadata.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -10,7 +10,7 @@\n \n use rustc::util::common;\n use rustc::middle::cstore::MetadataLoader;\n-use rustc_back::target::Target;\n+use rustc_target::spec::Target;\n use llvm;\n use llvm::{False, ObjectFile, mk_section_iter};\n use llvm::archive_ro::ArchiveRO;"}, {"sha": "7cad0e73db25b9819e2eca65415ab8a4f46770e5", "filename": "src/librustc_trans/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftype_of.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -13,7 +13,7 @@ use common::*;\n use rustc::hir;\n use rustc::ty::{self, Ty, TypeFoldable};\n use rustc::ty::layout::{self, Align, LayoutOf, Size, TyLayout};\n-use rustc_back::target::PanicStrategy;\n+use rustc_target::spec::PanicStrategy;\n use trans_item::DefPathBasedNames;\n use type_::Type;\n "}, {"sha": "323d9d1cedae06d648d9830bfc5c514e705d379e", "filename": "src/librustc_trans_utils/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans_utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans_utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2FCargo.toml?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -17,7 +17,7 @@ log = \"0.4\"\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n rustc = { path = \"../librustc\" }\n-rustc_back = { path = \"../librustc_back\" }\n+rustc_target = { path = \"../librustc_target\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_mir = { path = \"../librustc_mir\" }\n rustc_incremental = { path = \"../librustc_incremental\" }"}, {"sha": "b91f4e4dffb07b197840c943761fb6532c41bdee", "filename": "src/librustc_trans_utils/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2Flib.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -30,7 +30,7 @@ extern crate log;\n \n #[macro_use]\n extern crate rustc;\n-extern crate rustc_back;\n+extern crate rustc_target;\n extern crate rustc_mir;\n extern crate rustc_incremental;\n extern crate syntax;"}, {"sha": "7b585d1060fc205e953e1cb2e3d1fa03e0d19895", "filename": "src/librustc_trans_utils/trans_crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans_utils%2Ftrans_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustc_trans_utils%2Ftrans_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2Ftrans_crate.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -43,7 +43,7 @@ use rustc::ty::maps::Providers;\n use rustc::middle::cstore::EncodedMetadata;\n use rustc::middle::cstore::MetadataLoader;\n use rustc::dep_graph::DepGraph;\n-use rustc_back::target::Target;\n+use rustc_target::spec::Target;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_mir::monomorphize::collector;\n use link::{build_link_meta, out_filename};"}, {"sha": "d423203b99645800b802e7940d3c60ca9fb1e14c", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -23,7 +23,7 @@ use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_resolve as resolve;\n use rustc_metadata::creader::CrateLoader;\n use rustc_metadata::cstore::CStore;\n-use rustc_back::target::TargetTriple;\n+use rustc_target::spec::TargetTriple;\n \n use syntax::ast::NodeId;\n use syntax::codemap;"}, {"sha": "a60db29c2f915d5074b074e473e0b62dda37981a", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -35,7 +35,6 @@ extern crate rustc_trans_utils;\n extern crate rustc_driver;\n extern crate rustc_resolve;\n extern crate rustc_lint;\n-extern crate rustc_back;\n extern crate rustc_metadata;\n extern crate rustc_typeck;\n extern crate serialize;\n@@ -66,7 +65,7 @@ use externalfiles::ExternalHtml;\n use rustc::session::search_paths::SearchPaths;\n use rustc::session::config::{ErrorOutputType, RustcOptGroup, Externs, CodegenOptions};\n use rustc::session::config::{nightly_options, build_codegen_options};\n-use rustc_back::target::TargetTriple;\n+use rustc_target::spec::TargetTriple;\n \n #[macro_use]\n pub mod externalfiles;"}, {"sha": "9986e0b512a347583c00c783ce090bb3b417a2b0", "filename": "src/rustc/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Frustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/38e964077b5a163fc7e4c825d23f4c7cf0625d4c/src%2Frustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2FCargo.toml?ref=38e964077b5a163fc7e4c825d23f4c7cf0625d4c", "patch": "@@ -8,8 +8,8 @@ name = \"rustc\"\n path = \"rustc.rs\"\n \n [dependencies]\n-rustc_back = { path = \"../librustc_back\" }\n+rustc_target = { path = \"../librustc_target\" }\n rustc_driver = { path = \"../librustc_driver\" }\n \n [features]\n-jemalloc = [\"rustc_back/jemalloc\"]\n+jemalloc = [\"rustc_target/jemalloc\"]"}]}