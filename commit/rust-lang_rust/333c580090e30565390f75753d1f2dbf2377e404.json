{"sha": "333c580090e30565390f75753d1f2dbf2377e404", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzM2M1ODAwOTBlMzA1NjUzOTBmNzU3NTNkMWYyZGJmMjM3N2U0MDQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-09-28T02:08:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-28T02:08:51Z"}, "message": "Merge pull request #3052 from scampi/contributing\n\nadded a note about the use of the RUST_LOG environment variable", "tree": {"sha": "68143f4236eed4d675049342c3eb2a6c6878f9ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68143f4236eed4d675049342c3eb2a6c6878f9ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/333c580090e30565390f75753d1f2dbf2377e404", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbrY0zCRBK7hj4Ov3rIwAAdHIIAED5xyFDdSOYcr9b+4Byk+xT\na60Ww7ShpsOZYJiHxITDzwDZDEKQFjohsGklpri+RE4p5FqFvPZlc6RbCokVTLsB\nmuPJM4kiQpzEoxnMVErvDSGsCPkdUShfHhOODpp0m6V5P/cB5QUJuoqZyxan25Wz\nXKv4bB/kZY1UX945+LMR7ocTTypsjK2NKWQsWBDFM4m+Rr4WiS8xKFH408EZSJn0\nR4G8IScqfli0LGZaYQYF+xJ4F0R5UskJFh2aWZpRq00yS8Cn6s45Ff5fgLECaPKE\nKbhcWBNGHDDXEdrHIB8RI2WO5Boj9voRnNMiRSGdZlhbZkC4UX4hHgO3VaLnJJY=\n=qvbE\n-----END PGP SIGNATURE-----\n", "payload": "tree 68143f4236eed4d675049342c3eb2a6c6878f9ac\nparent 2bcc3a93025894345674c8d714b1bf3c5fec7f6c\nparent d681d5f456cd1b960b50eef527bd54a2ef8848e5\nauthor Seiichi Uchida <seuchida@gmail.com> 1538100531 +0900\ncommitter GitHub <noreply@github.com> 1538100531 +0900\n\nMerge pull request #3052 from scampi/contributing\n\nadded a note about the use of the RUST_LOG environment variable"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/333c580090e30565390f75753d1f2dbf2377e404", "html_url": "https://github.com/rust-lang/rust/commit/333c580090e30565390f75753d1f2dbf2377e404", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/333c580090e30565390f75753d1f2dbf2377e404/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bcc3a93025894345674c8d714b1bf3c5fec7f6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bcc3a93025894345674c8d714b1bf3c5fec7f6c", "html_url": "https://github.com/rust-lang/rust/commit/2bcc3a93025894345674c8d714b1bf3c5fec7f6c"}, {"sha": "d681d5f456cd1b960b50eef527bd54a2ef8848e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d681d5f456cd1b960b50eef527bd54a2ef8848e5", "html_url": "https://github.com/rust-lang/rust/commit/d681d5f456cd1b960b50eef527bd54a2ef8848e5"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "bbd736ec98f5aed7a0e672ad5c878473fb6b3386", "filename": "Contributing.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/333c580090e30565390f75753d1f2dbf2377e404/Contributing.md", "raw_url": "https://github.com/rust-lang/rust/raw/333c580090e30565390f75753d1f2dbf2377e404/Contributing.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Contributing.md?ref=333c580090e30565390f75753d1f2dbf2377e404", "patch": "@@ -64,6 +64,9 @@ would need a configuration file named `test-indent.toml` in that directory. As a\n example, the `issue-1111.rs` test file is configured by the file\n `./tests/config/issue-1111.toml`.\n \n+## Debugging\n+\n+Some `rewrite_*` methods use the `debug!` macro for printing useful information. These messages can be printed by using the environment variable `RUST_LOG=rustfmt=DEBUG`. These traces can be helpful in understanding which part of the code was used and get a better grasp on the execution flow.\n \n ## Hack!\n \n@@ -153,6 +156,8 @@ which is how much we are currently indented from the lhs of the page. We also\n take a context which contains information used for parsing, the current block\n indent, and a configuration (see below).\n \n+##### Rewrite and Indent\n+\n To understand the indents, consider\n \n ```\n@@ -195,6 +200,8 @@ checked subtraction: `available_space = budget.checked_sub(overhead)?`.\n `checked_sub` returns an `Option`, and if we would underflow `?` returns\n `None`, otherwise we proceed with the computed space.\n \n+##### Rewrite of list-like expressions\n+\n Much syntax in Rust is lists: lists of arguments, lists of fields, lists of\n array elements, etc. We have some generic code to handle lists, including how to\n space them in horizontal and vertical space, indentation, comments between\n@@ -203,6 +210,8 @@ code is a bit complex. Look in [src/lists.rs](src/lists.rs). `write_list` is the\n and `ListFormatting` the key structure for configuration. You'll need to make a\n `ListItems` for input, this is usually done using `itemize_list`.\n \n+##### Configuration\n+\n Rustfmt strives to be highly configurable. Often the first part of a patch is\n creating a configuration option for the feature you are implementing. All\n handling of configuration options is done in [src/config/mod.rs](src/config/mod.rs). Look for the"}]}