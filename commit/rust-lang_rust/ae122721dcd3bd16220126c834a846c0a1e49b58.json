{"sha": "ae122721dcd3bd16220126c834a846c0a1e49b58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMTIyNzIxZGNkM2JkMTYyMjAxMjZjODM0YTg0NmMwYTFlNDliNTg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-11T09:36:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-11T09:36:24Z"}, "message": "Rollup merge of #69645 - DutchGhost:const-forget-tests, r=Dylan-DPC\n\nconst forget tests\n\nAdds tests for https://github.com/rust-lang/rust/pull/69617", "tree": {"sha": "e443a6c03474e8788979952aa1d73670c3623d38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e443a6c03474e8788979952aa1d73670c3623d38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae122721dcd3bd16220126c834a846c0a1e49b58", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeaLEYCRBK7hj4Ov3rIwAAdHIIAA3y5n63/1/k9O56FENXN5Mr\n+r+J9jsDrEQWLMnVH1RTYvjGGITknzVzlRSyTPKRwG/9LBLTkijBOoVtw84CqD8J\nmpJ48Gm9iX5TXYJjmS9U5zTXzHWDGXr3inQTMk+yNQpoDA5W69Tj/re/5lT5FuWD\neWgspZuutXq2EMxwhR6stEg47yt1HFWVD/H624lHjeaT9ycmlWYVJzj0GdOoOxkD\nEKjmcD8OHnJHXk4OPG8606iogq2TUJTbxmQBDT/klwn9Xo8kxdVdI1bWYYKQ79rg\nUq9Y8X2SeHPe1VuA/Pw4O5sfFSxyqtc3Dwl2ml0ZUluon5uYt2mndsUCUVTLzpw=\n=10NS\n-----END PGP SIGNATURE-----\n", "payload": "tree e443a6c03474e8788979952aa1d73670c3623d38\nparent 25091ed9b7739e12466fb2490baa1e8a2815121c\nparent a674e1c88c632c237d7e56fbb6972b46c39a1fb0\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1583919384 +0100\ncommitter GitHub <noreply@github.com> 1583919384 +0100\n\nRollup merge of #69645 - DutchGhost:const-forget-tests, r=Dylan-DPC\n\nconst forget tests\n\nAdds tests for https://github.com/rust-lang/rust/pull/69617\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae122721dcd3bd16220126c834a846c0a1e49b58", "html_url": "https://github.com/rust-lang/rust/commit/ae122721dcd3bd16220126c834a846c0a1e49b58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae122721dcd3bd16220126c834a846c0a1e49b58/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25091ed9b7739e12466fb2490baa1e8a2815121c", "url": "https://api.github.com/repos/rust-lang/rust/commits/25091ed9b7739e12466fb2490baa1e8a2815121c", "html_url": "https://github.com/rust-lang/rust/commit/25091ed9b7739e12466fb2490baa1e8a2815121c"}, {"sha": "a674e1c88c632c237d7e56fbb6972b46c39a1fb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a674e1c88c632c237d7e56fbb6972b46c39a1fb0", "html_url": "https://github.com/rust-lang/rust/commit/a674e1c88c632c237d7e56fbb6972b46c39a1fb0"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "05f958cbe81fe09e4e2d707ec6395c88ef2ab542", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ae122721dcd3bd16220126c834a846c0a1e49b58/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae122721dcd3bd16220126c834a846c0a1e49b58/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=ae122721dcd3bd16220126c834a846c0a1e49b58", "patch": "@@ -41,6 +41,7 @@\n #![feature(never_type)]\n #![feature(unwrap_infallible)]\n #![feature(leading_trailing_ones)]\n+#![feature(const_forget)]\n \n extern crate test;\n "}, {"sha": "8337ab103419f82d6406359fbd0a542760b45818", "filename": "src/libcore/tests/mem.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ae122721dcd3bd16220126c834a846c0a1e49b58/src%2Flibcore%2Ftests%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae122721dcd3bd16220126c834a846c0a1e49b58/src%2Flibcore%2Ftests%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fmem.rs?ref=ae122721dcd3bd16220126c834a846c0a1e49b58", "patch": "@@ -129,3 +129,21 @@ fn test_discriminant_send_sync() {\n     is_send_sync::<Discriminant<Regular>>();\n     is_send_sync::<Discriminant<NotSendSync>>();\n }\n+\n+#[test]\n+fn test_const_forget() {\n+    const _: () = forget(0i32);\n+    const _: () = forget(Vec::<Vec<Box<i32>>>::new());\n+\n+    // Writing this function signature without const-forget\n+    // triggers compiler errors:\n+    // 1) That we use a non-const fn inside a const fn\n+    // 2) without the forget, it complains about the destructor of Box\n+    const fn const_forget_box<T>(x: Box<T>) {\n+        forget(x);\n+    }\n+\n+    // Call the forget_box at runtime,\n+    // as we can't const-construct a box yet.\n+    const_forget_box(Box::new(0i32));\n+}"}]}