{"sha": "d223c26bced5e3d861daa987820b30091198159e", "node_id": "C_kwDOAAsO6NoAKGQyMjNjMjZiY2VkNWUzZDg2MWRhYTk4NzgyMGIzMDA5MTE5ODE1OWU", "commit": {"author": {"name": "bohan", "email": "bohan-zhang@foxmail.com", "date": "2023-03-09T14:42:06Z"}, "committer": {"name": "bohan", "email": "bohan-zhang@foxmail.com", "date": "2023-03-09T14:44:58Z"}, "message": "fix(lexer): not skipped whitespace warning for '\\x0c'", "tree": {"sha": "7a2c7ca282181271a84c4b93eb283467edba62b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a2c7ca282181271a84c4b93eb283467edba62b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d223c26bced5e3d861daa987820b30091198159e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d223c26bced5e3d861daa987820b30091198159e", "html_url": "https://github.com/rust-lang/rust/commit/d223c26bced5e3d861daa987820b30091198159e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d223c26bced5e3d861daa987820b30091198159e/comments", "author": {"login": "bvanjoi", "id": 30187863, "node_id": "MDQ6VXNlcjMwMTg3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/30187863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvanjoi", "html_url": "https://github.com/bvanjoi", "followers_url": "https://api.github.com/users/bvanjoi/followers", "following_url": "https://api.github.com/users/bvanjoi/following{/other_user}", "gists_url": "https://api.github.com/users/bvanjoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvanjoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvanjoi/subscriptions", "organizations_url": "https://api.github.com/users/bvanjoi/orgs", "repos_url": "https://api.github.com/users/bvanjoi/repos", "events_url": "https://api.github.com/users/bvanjoi/events{/privacy}", "received_events_url": "https://api.github.com/users/bvanjoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bvanjoi", "id": 30187863, "node_id": "MDQ6VXNlcjMwMTg3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/30187863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvanjoi", "html_url": "https://github.com/bvanjoi", "followers_url": "https://api.github.com/users/bvanjoi/followers", "following_url": "https://api.github.com/users/bvanjoi/following{/other_user}", "gists_url": "https://api.github.com/users/bvanjoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvanjoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvanjoi/subscriptions", "organizations_url": "https://api.github.com/users/bvanjoi/orgs", "repos_url": "https://api.github.com/users/bvanjoi/repos", "events_url": "https://api.github.com/users/bvanjoi/events{/privacy}", "received_events_url": "https://api.github.com/users/bvanjoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b60e6c68ff0aabad9a0edd71898466886dbf6bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b60e6c68ff0aabad9a0edd71898466886dbf6bb", "html_url": "https://github.com/rust-lang/rust/commit/9b60e6c68ff0aabad9a0edd71898466886dbf6bb"}], "stats": {"total": 50, "additions": 40, "deletions": 10}, "files": [{"sha": "bb4d91247b81d04eefa2c80523d8fa6d8f1b6857", "filename": "compiler/rustc_lexer/src/unescape.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d223c26bced5e3d861daa987820b30091198159e/compiler%2Frustc_lexer%2Fsrc%2Funescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d223c26bced5e3d861daa987820b30091198159e/compiler%2Frustc_lexer%2Fsrc%2Funescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lexer%2Fsrc%2Funescape.rs?ref=d223c26bced5e3d861daa987820b30091198159e", "patch": "@@ -298,10 +298,10 @@ where\n         }\n         let tail = &tail[first_non_space..];\n         if let Some(c) = tail.chars().nth(0) {\n-            // For error reporting, we would like the span to contain the character that was not\n-            // skipped. The +1 is necessary to account for the leading \\ that started the escape.\n-            let end = start + first_non_space + c.len_utf8() + 1;\n             if c.is_whitespace() {\n+                // For error reporting, we would like the span to contain the character that was not\n+                // skipped. The +1 is necessary to account for the leading \\ that started the escape.\n+                let end = start + first_non_space + c.len_utf8() + 1;\n                 callback(start..end, Err(EscapeError::UnskippedWhitespaceWarning));\n             }\n         }"}, {"sha": "d8e816aa115b74ac556c1635d5a727bd84343d10", "filename": "compiler/rustc_parse/locales/en-US.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d223c26bced5e3d861daa987820b30091198159e/compiler%2Frustc_parse%2Flocales%2Fen-US.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/d223c26bced5e3d861daa987820b30091198159e/compiler%2Frustc_parse%2Flocales%2Fen-US.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Flocales%2Fen-US.ftl?ref=d223c26bced5e3d861daa987820b30091198159e", "patch": "@@ -710,7 +710,7 @@ parse_zero_chars = empty character literal\n parse_lone_slash = invalid trailing slash in literal\n     .label = {parse_lone_slash}\n \n-parse_unskipped_whitespace = non-ASCII whitespace symbol '{$ch}' is not skipped\n+parse_unskipped_whitespace = whitespace symbol '{$ch}' is not skipped\n     .label = {parse_unskipped_whitespace}\n \n parse_multiple_skipped_lines = multiple lines skipped by escaped newline"}, {"sha": "10a72421f24a7da7f9e610b809604666e081866a", "filename": "tests/ui/str/str-escape.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d223c26bced5e3d861daa987820b30091198159e/tests%2Fui%2Fstr%2Fstr-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d223c26bced5e3d861daa987820b30091198159e/tests%2Fui%2Fstr%2Fstr-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstr%2Fstr-escape.rs?ref=d223c26bced5e3d861daa987820b30091198159e", "patch": "@@ -1,11 +1,31 @@\n // check-pass\n+// ignore-tidy-tab\n+\n fn main() {\n     let s = \"\\\n \n              \";\n     //~^^^ WARNING multiple lines skipped by escaped newline\n+    assert_eq!(s, \"\");\n+\n     let s = \"foo\\\n   \u00a0          bar\n              \";\n-    //~^^^ WARNING non-ASCII whitespace symbol '\\u{a0}' is not skipped\n+    //~^^^ WARNING whitespace symbol '\\u{a0}' is not skipped\n+    assert_eq!(s, \"foo\u00a0          bar\\n             \");\n+\n+    let s = \"a\\\n+ b\";\n+    assert_eq!(s, \"ab\");\n+\n+    let s = \"a\\\n+\tb\";\n+    assert_eq!(s, \"ab\");\n+\n+    let s = \"a\\\n+    \fb\";\n+    //~^^ WARNING whitespace symbol '\\u{c}' is not skipped\n+    // '\\x0c' is ASCII whitespace, but it may not need skipped\n+    // discussion: https://github.com/rust-lang/rust/pull/108403\n+    assert_eq!(s, \"a\\x0cb\");\n }"}, {"sha": "43b4f7e36f6abc1b72ca43fc3b76b6505ee93381", "filename": "tests/ui/str/str-escape.stderr", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d223c26bced5e3d861daa987820b30091198159e/tests%2Fui%2Fstr%2Fstr-escape.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d223c26bced5e3d861daa987820b30091198159e/tests%2Fui%2Fstr%2Fstr-escape.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstr%2Fstr-escape.stderr?ref=d223c26bced5e3d861daa987820b30091198159e", "patch": "@@ -1,21 +1,31 @@\n warning: multiple lines skipped by escaped newline\n-  --> $DIR/str-escape.rs:3:14\n+  --> $DIR/str-escape.rs:5:14\n    |\n LL |       let s = \"\\\n    |  ______________^\n LL | |\n LL | |              \";\n    | |_____________^ skipping everything up to and including this point\n \n-warning: non-ASCII whitespace symbol '\\u{a0}' is not skipped\n-  --> $DIR/str-escape.rs:7:17\n+warning: whitespace symbol '\\u{a0}' is not skipped\n+  --> $DIR/str-escape.rs:11:17\n    |\n LL |       let s = \"foo\\\n    |  _________________^\n LL | |   \u00a0          bar\n-   | |   ^ non-ASCII whitespace symbol '\\u{a0}' is not skipped\n+   | |   ^ whitespace symbol '\\u{a0}' is not skipped\n    | |___|\n    | \n \n-warning: 2 warnings emitted\n+warning: whitespace symbol '\\u{c}' is not skipped\n+  --> $DIR/str-escape.rs:25:15\n+   |\n+LL |       let s = \"a\\\n+   |  _______________^\n+LL | |     \fb\";\n+   | |    ^- whitespace symbol '\\u{c}' is not skipped\n+   | |____|\n+   | \n+\n+warning: 3 warnings emitted\n "}]}