{"sha": "8780ebff1f7468f0be64b81f81b72bce1301433a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ODBlYmZmMWY3NDY4ZjBiZTY0YjgxZjgxYjcyYmNlMTMwMTQzM2E=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-01-08T05:13:22Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-01-08T05:13:22Z"}, "message": "Remove `CrateNum::Invalid`.\n\nIt's unused.", "tree": {"sha": "867634953d339dbb873fc52a2080888c805aebc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/867634953d339dbb873fc52a2080888c805aebc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8780ebff1f7468f0be64b81f81b72bce1301433a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8780ebff1f7468f0be64b81f81b72bce1301433a", "html_url": "https://github.com/rust-lang/rust/commit/8780ebff1f7468f0be64b81f81b72bce1301433a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8780ebff1f7468f0be64b81f81b72bce1301433a/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b92552d5578e4544006da0dd5e793a19c2149321", "url": "https://api.github.com/repos/rust-lang/rust/commits/b92552d5578e4544006da0dd5e793a19c2149321", "html_url": "https://github.com/rust-lang/rust/commit/b92552d5578e4544006da0dd5e793a19c2149321"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "0a8c72a0ad8ec9f49059048a58ec565b7230c90f", "filename": "src/librustc/hir/def_id.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8780ebff1f7468f0be64b81f81b72bce1301433a/src%2Flibrustc%2Fhir%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8780ebff1f7468f0be64b81f81b72bce1301433a/src%2Flibrustc%2Fhir%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef_id.rs?ref=8780ebff1f7468f0be64b81f81b72bce1301433a", "patch": "@@ -17,8 +17,6 @@ pub enum CrateNum {\n     // FIXME(jseyfried): this is also used for custom derives until proc-macro crates get\n     // `CrateNum`s.\n     BuiltinMacros,\n-    /// A CrateNum value that indicates that something is wrong.\n-    Invalid,\n     /// A special CrateNum that we use for the tcx.rcache when decoding from\n     /// the incr. comp. cache.\n     ReservedForIncrCompCache,\n@@ -29,7 +27,6 @@ impl ::std::fmt::Debug for CrateNum {\n     fn fmt(&self, fmt: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {\n         match self {\n             CrateNum::Index(id) => write!(fmt, \"crate{}\", id.private),\n-            CrateNum::Invalid => write!(fmt, \"invalid crate\"),\n             CrateNum::BuiltinMacros => write!(fmt, \"builtin macros crate\"),\n             CrateNum::ReservedForIncrCompCache => write!(fmt, \"crate for decoding incr comp cache\"),\n         }\n@@ -90,7 +87,6 @@ impl fmt::Display for CrateNum {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self {\n             CrateNum::Index(id) => fmt::Display::fmt(&id.private, f),\n-            CrateNum::Invalid => write!(f, \"invalid crate\"),\n             CrateNum::BuiltinMacros => write!(f, \"builtin macros crate\"),\n             CrateNum::ReservedForIncrCompCache => write!(f, \"crate for decoding incr comp cache\"),\n         }"}]}