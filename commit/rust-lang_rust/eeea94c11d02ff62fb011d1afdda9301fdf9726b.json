{"sha": "eeea94c11d02ff62fb011d1afdda9301fdf9726b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZWE5NGMxMWQwMmZmNjJmYjAxMWQxYWZkZGE5MzAxZmRmOTcyNmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-06T17:38:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-06T17:38:41Z"}, "message": "Auto merge of #49064 - QuietMisdreavus:piercing-the-veil, r=GuillaumeGomez\n\nrustdoctest: suppress the default allow(unused) under --display-warnings\n\nIf you're passing rustdoc `--display-warnings`, you probably want to see the default ones too. This change modifies `test::make_test` to suppress the default `#![allow(unused)]` if the `--display-warnings` CLI flag was provided to rustdoc.\n\ncc https://github.com/rust-lang/rust/issues/41574", "tree": {"sha": "b5d4db96d45d602e79fea56dc9a35d706e1286eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5d4db96d45d602e79fea56dc9a35d706e1286eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eeea94c11d02ff62fb011d1afdda9301fdf9726b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eeea94c11d02ff62fb011d1afdda9301fdf9726b", "html_url": "https://github.com/rust-lang/rust/commit/eeea94c11d02ff62fb011d1afdda9301fdf9726b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eeea94c11d02ff62fb011d1afdda9301fdf9726b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7678d5021e5c984af52f4d1e9147f7a2d6a7ddc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7678d5021e5c984af52f4d1e9147f7a2d6a7ddc3", "html_url": "https://github.com/rust-lang/rust/commit/7678d5021e5c984af52f4d1e9147f7a2d6a7ddc3"}, {"sha": "8145a77a28bc6189583493aeafeec188a8f47963", "url": "https://api.github.com/repos/rust-lang/rust/commits/8145a77a28bc6189583493aeafeec188a8f47963", "html_url": "https://github.com/rust-lang/rust/commit/8145a77a28bc6189583493aeafeec188a8f47963"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "f14d4c602d070f58226be672c1db489ec4604275", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eeea94c11d02ff62fb011d1afdda9301fdf9726b/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeea94c11d02ff62fb011d1afdda9301fdf9726b/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=eeea94c11d02ff62fb011d1afdda9301fdf9726b", "patch": "@@ -149,6 +149,7 @@ pub fn test(input: &str, cfgs: Vec<String>, libs: SearchPaths, externs: Externs,\n \n     let mut opts = TestOptions::default();\n     opts.no_crate_inject = true;\n+    opts.display_warnings = display_warnings;\n     let mut collector = Collector::new(input.to_owned(), cfgs, libs, externs,\n                                        true, opts, maybe_sysroot, None,\n                                        Some(PathBuf::from(input)),"}, {"sha": "cb532276c668310b861e6df58dea027ee405c7fe", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/eeea94c11d02ff62fb011d1afdda9301fdf9726b/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeea94c11d02ff62fb011d1afdda9301fdf9726b/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=eeea94c11d02ff62fb011d1afdda9301fdf9726b", "patch": "@@ -46,7 +46,12 @@ use html::markdown;\n \n #[derive(Clone, Default)]\n pub struct TestOptions {\n+    /// Whether to disable the default `extern crate my_crate;` when creating doctests.\n     pub no_crate_inject: bool,\n+    /// Whether to emit compilation warnings when compiling doctests. Setting this will suppress\n+    /// the default `#![allow(unused)]`.\n+    pub display_warnings: bool,\n+    /// Additional crate-level attributes to add to doctests.\n     pub attrs: Vec<String>,\n }\n \n@@ -113,7 +118,8 @@ pub fn run(input_path: &Path,\n     let crate_name = crate_name.unwrap_or_else(|| {\n         ::rustc_trans_utils::link::find_crate_name(None, &hir_forest.krate().attrs, &input)\n     });\n-    let opts = scrape_test_config(hir_forest.krate());\n+    let mut opts = scrape_test_config(hir_forest.krate());\n+    opts.display_warnings |= display_warnings;\n     let mut collector = Collector::new(crate_name,\n                                        cfgs,\n                                        libs,\n@@ -153,6 +159,7 @@ fn scrape_test_config(krate: &::rustc::hir::Crate) -> TestOptions {\n \n     let mut opts = TestOptions {\n         no_crate_inject: false,\n+        display_warnings: false,\n         attrs: Vec::new(),\n     };\n \n@@ -357,7 +364,7 @@ pub fn make_test(s: &str,\n     let mut line_offset = 0;\n     let mut prog = String::new();\n \n-    if opts.attrs.is_empty() {\n+    if opts.attrs.is_empty() && !opts.display_warnings {\n         // If there aren't any attributes supplied by #![doc(test(attr(...)))], then allow some\n         // lints that are commonly triggered in doctests. The crate-level test attributes are\n         // commonly used to make tests fail in case they trigger warnings, so having this there in\n@@ -787,6 +794,7 @@ assert_eq!(2+2, 4);\n         //adding it anyway\n         let opts = TestOptions {\n             no_crate_inject: true,\n+            display_warnings: false,\n             attrs: vec![],\n         };\n         let input =\n@@ -957,4 +965,19 @@ assert_eq!(2+2, 4);\".to_string();\n         let output = make_test(input, None, true, &opts);\n         assert_eq!(output, (expected.clone(), 1));\n     }\n+\n+    #[test]\n+    fn make_test_display_warnings() {\n+        //if the user is asking to display doctest warnings, suppress the default allow(unused)\n+        let mut opts = TestOptions::default();\n+        opts.display_warnings = true;\n+        let input =\n+\"assert_eq!(2+2, 4);\";\n+        let expected =\n+\"fn main() {\n+assert_eq!(2+2, 4);\n+}\".to_string();\n+        let output = make_test(input, None, false, &opts);\n+        assert_eq!(output, (expected.clone(), 1));\n+    }\n }"}]}