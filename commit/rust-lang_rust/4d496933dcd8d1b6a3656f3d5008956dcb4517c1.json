{"sha": "4d496933dcd8d1b6a3656f3d5008956dcb4517c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNDk2OTMzZGNkOGQxYjZhMzY1NmYzZDUwMDg5NTZkY2I0NTE3YzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-04-20T17:21:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-04-20T17:21:32Z"}, "message": "auto merge of #13643 : aochagavia/rust/pr-2, r=alexcrichton\n\nFixed a typo in the documentation of std::mem, and refactored a function to use match instead of if.\r\n\r\nAlso added a FIXME to the benchmarks at the end of the file stating that they should be moved to another place, because they have nothing to do with `mem` (see https://github.com/mozilla/rust/issues/13642)", "tree": {"sha": "63dd5475e983d289d92d83f8b430fa99e78317c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63dd5475e983d289d92d83f8b430fa99e78317c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d496933dcd8d1b6a3656f3d5008956dcb4517c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d496933dcd8d1b6a3656f3d5008956dcb4517c1", "html_url": "https://github.com/rust-lang/rust/commit/4d496933dcd8d1b6a3656f3d5008956dcb4517c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d496933dcd8d1b6a3656f3d5008956dcb4517c1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a27dc534e4dd01b9fb5cf7c5c30f2b2694b78d85", "url": "https://api.github.com/repos/rust-lang/rust/commits/a27dc534e4dd01b9fb5cf7c5c30f2b2694b78d85", "html_url": "https://github.com/rust-lang/rust/commit/a27dc534e4dd01b9fb5cf7c5c30f2b2694b78d85"}, {"sha": "e36adee3ae498cbf98e463f68372dca8ac8e20ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/e36adee3ae498cbf98e463f68372dca8ac8e20ac", "html_url": "https://github.com/rust-lang/rust/commit/e36adee3ae498cbf98e463f68372dca8ac8e20ac"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "342e565572ba7854d5473da97573e150bdd06f59", "filename": "src/libstd/mem.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4d496933dcd8d1b6a3656f3d5008956dcb4517c1/src%2Flibstd%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d496933dcd8d1b6a3656f3d5008956dcb4517c1/src%2Flibstd%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmem.rs?ref=4d496933dcd8d1b6a3656f3d5008956dcb4517c1", "patch": "@@ -37,8 +37,10 @@ pub fn size_of_val<T>(_val: &T) -> uint {\n /// Useful for building structures containing variable-length arrays.\n #[inline]\n pub fn nonzero_size_of<T>() -> uint {\n-    let s = size_of::<T>();\n-    if s == 0 { 1 } else { s }\n+    match size_of::<T>() {\n+        0 => 1,\n+        x => x\n+    }\n }\n \n /// Returns the size in bytes of the type of the value that `_val` points to.\n@@ -222,7 +224,6 @@ pub unsafe fn move_val_init<T>(dst: &mut T, src: T) {\n /// On big endian, this is a no-op.  On little endian, the bytes are swapped.\n #[cfg(target_endian = \"big\")]    #[inline] pub fn from_be64(x: u64) -> u64 { x }\n \n-\n /**\n  * Swap the values at two mutable locations of the same type, without\n  * deinitialising or copying either one.\n@@ -238,7 +239,7 @@ pub fn swap<T>(x: &mut T, y: &mut T) {\n         ptr::copy_nonoverlapping_memory(x, &*y, 1);\n         ptr::copy_nonoverlapping_memory(y, &t, 1);\n \n-        // y and t now point to the same thing, but we need to completely forget `tmp`\n+        // y and t now point to the same thing, but we need to completely forget `t`\n         // because it's no longer relevant.\n         cast::forget(t);\n     }\n@@ -360,6 +361,7 @@ mod tests {\n     }\n }\n \n+// FIXME #13642 (these benchmarks should be in another place)\n /// Completely miscellaneous language-construct benchmarks.\n #[cfg(test)]\n mod bench {"}]}