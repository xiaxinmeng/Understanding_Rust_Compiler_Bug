{"sha": "b87b335e6859ead3baa7fde20e3ea2ac69f63d85", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4N2IzMzVlNjg1OWVhZDNiYWE3ZmRlMjBlM2VhMmFjNjlmNjNkODU=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-04-25T13:48:04Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-04-25T13:48:04Z"}, "message": "add support for cfg feature attributes on expression #4063\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "1d27336c626c070e87069911aebc54db8d3ba98b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d27336c626c070e87069911aebc54db8d3ba98b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b87b335e6859ead3baa7fde20e3ea2ac69f63d85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b87b335e6859ead3baa7fde20e3ea2ac69f63d85", "html_url": "https://github.com/rust-lang/rust/commit/b87b335e6859ead3baa7fde20e3ea2ac69f63d85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b87b335e6859ead3baa7fde20e3ea2ac69f63d85/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05981823bac91ba338110902fd435c6e3166f1d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/05981823bac91ba338110902fd435c6e3166f1d6", "html_url": "https://github.com/rust-lang/rust/commit/05981823bac91ba338110902fd435c6e3166f1d6"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "5716038543866df2e070c8bafd786983290e9e22", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b87b335e6859ead3baa7fde20e3ea2ac69f63d85/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b87b335e6859ead3baa7fde20e3ea2ac69f63d85/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=b87b335e6859ead3baa7fde20e3ea2ac69f63d85", "patch": "@@ -141,6 +141,10 @@ impl ExprCollector<'_> {\n \n     fn collect_expr(&mut self, expr: ast::Expr) -> ExprId {\n         let syntax_ptr = AstPtr::new(&expr);\n+        let attrs = self.expander.parse_attrs(&expr);\n+        if !self.expander.is_cfg_enabled(&attrs) {\n+            return self.missing_expr();\n+        }\n         match expr {\n             ast::Expr::IfExpr(e) => {\n                 let then_branch = self.collect_block_opt(e.then_branch());"}, {"sha": "588d812820a8971a8ed19d32fb0d437e390cae50", "filename": "crates/ra_hir_ty/src/tests.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b87b335e6859ead3baa7fde20e3ea2ac69f63d85/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b87b335e6859ead3baa7fde20e3ea2ac69f63d85/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs?ref=b87b335e6859ead3baa7fde20e3ea2ac69f63d85", "patch": "@@ -390,6 +390,38 @@ fn no_such_field_with_feature_flag_diagnostics_on_struct_lit() {\n     assert_snapshot!(diagnostics, @r###\"\"###);\n }\n \n+#[test]\n+fn no_such_field_with_feature_flag_diagnostics_on_block_expr() {\n+    let diagnostics = TestDB::with_files(\n+        r#\"\n+        //- /lib.rs crate:foo cfg:feature=foo\n+        struct S {\n+            #[cfg(feature = \"foo\")]\n+            foo: u32,\n+            #[cfg(not(feature = \"foo\"))]\n+            bar: u32,\n+        }\n+\n+        impl S {\n+            fn new(bar: u32) -> Self {\n+                #[cfg(feature = \"foo\")]\n+                {\n+                Self { foo: bar }\n+                }\n+                #[cfg(not(feature = \"foo\"))]\n+                {\n+                Self { bar }\n+                }\n+            }\n+        }\n+        \"#,\n+    )\n+    .diagnostics()\n+    .0;\n+\n+    assert_snapshot!(diagnostics, @r###\"\"###);\n+}\n+\n #[test]\n fn no_such_field_with_feature_flag_diagnostics_on_struct_fields() {\n     let diagnostics = TestDB::with_files("}]}