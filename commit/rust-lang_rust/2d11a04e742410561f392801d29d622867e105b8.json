{"sha": "2d11a04e742410561f392801d29d622867e105b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMTFhMDRlNzQyNDEwNTYxZjM5MjgwMWQyOWQ2MjI4NjdlMTA1Yjg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-18T18:51:06Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-18T18:51:17Z"}, "message": "libsyntax: Remove 'unchecked_blk' from AST", "tree": {"sha": "937875439d2acdba1c41466c6ad2698be6f15d78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/937875439d2acdba1c41466c6ad2698be6f15d78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d11a04e742410561f392801d29d622867e105b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d11a04e742410561f392801d29d622867e105b8", "html_url": "https://github.com/rust-lang/rust/commit/2d11a04e742410561f392801d29d622867e105b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d11a04e742410561f392801d29d622867e105b8/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c755449fd6c10bf0b7850788b9faf6799ef7e38d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c755449fd6c10bf0b7850788b9faf6799ef7e38d", "html_url": "https://github.com/rust-lang/rust/commit/c755449fd6c10bf0b7850788b9faf6799ef7e38d"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "c6f8a4837b67d4eb26652d48f40d99c7a053307c", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2d11a04e742410561f392801d29d622867e105b8/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d11a04e742410561f392801d29d622867e105b8/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=2d11a04e742410561f392801d29d622867e105b8", "patch": "@@ -642,16 +642,14 @@ type field_ = {mutbl: mutability, ident: ident, expr: @expr};\n type field = spanned<field_>;\n \n #[auto_serialize]\n-enum blk_check_mode { default_blk, unchecked_blk, unsafe_blk, }\n+enum blk_check_mode { default_blk, unsafe_blk, }\n \n impl blk_check_mode : cmp::Eq {\n     pure fn eq(&&other: blk_check_mode) -> bool {\n         match (self, other) {\n             (default_blk, default_blk) => true,\n-            (unchecked_blk, unchecked_blk) => true,\n             (unsafe_blk, unsafe_blk) => true,\n             (default_blk, _) => false,\n-            (unchecked_blk, _) => false,\n             (unsafe_blk, _) => false,\n         }\n     }"}, {"sha": "73b2594c4ae868de57bb36567f5ebe6299a1b8d5", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d11a04e742410561f392801d29d622867e105b8/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d11a04e742410561f392801d29d622867e105b8/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=2d11a04e742410561f392801d29d622867e105b8", "patch": "@@ -61,7 +61,7 @@ use ast::{_mod, add, alt_check, alt_exhaustive, arg, arm, attribute,\n              ty_box, ty_field, ty_fn, ty_infer, ty_mac, ty_method, ty_nil,\n              ty_param, ty_param_bound, ty_path, ty_ptr, ty_rec, ty_rptr,\n              ty_tup, ty_u32, ty_uniq, ty_vec, ty_fixed_length, type_value_ns,\n-             unchecked_blk, uniq, unnamed_field, unsafe_blk, unsafe_fn,\n+             uniq, unnamed_field, unsafe_blk, unsafe_fn,\n              variant, view_item, view_item_, view_item_export,\n              view_item_import, view_item_use, view_path, view_path_glob,\n              view_path_list, view_path_simple, visibility, vstore, vstore_box,"}, {"sha": "cbb692865de1faaffc2572ae25a8ef6fed9ac22c", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2d11a04e742410561f392801d29d622867e105b8/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d11a04e742410561f392801d29d622867e105b8/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=2d11a04e742410561f392801d29d622867e105b8", "patch": "@@ -857,7 +857,6 @@ fn print_possibly_embedded_block_(s: ps, blk: ast::blk, embedded: embed_type,\n                                   indented: uint, attrs: ~[ast::attribute],\n                                   close_box: bool) {\n     match blk.node.rules {\n-      ast::unchecked_blk => word(s.s, ~\"unchecked\"),\n       ast::unsafe_blk => word(s.s, ~\"unsafe\"),\n       ast::default_blk => ()\n     }"}, {"sha": "b7fe652b9c2bfd6e5094f857431692431f75deff", "filename": "src/rustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2d11a04e742410561f392801d29d622867e105b8/src%2Frustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d11a04e742410561f392801d29d622867e105b8/src%2Frustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=2d11a04e742410561f392801d29d622867e105b8", "patch": "@@ -673,9 +673,6 @@ fn check_loans_in_block(blk: ast::blk,\n         match blk.node.rules {\n           ast::default_blk => {\n           }\n-          ast::unchecked_blk => {\n-            self.declared_purity = ast::impure_fn;\n-          }\n           ast::unsafe_blk => {\n             self.declared_purity = ast::unsafe_fn;\n           }"}, {"sha": "6c1a6d8d5b8ca7bd7976627a313e2a95c76e76f2", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2d11a04e742410561f392801d29d622867e105b8/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d11a04e742410561f392801d29d622867e105b8/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=2d11a04e742410561f392801d29d622867e105b8", "patch": "@@ -2168,7 +2168,6 @@ fn check_block_no_value(fcx: @fn_ctxt, blk: ast::blk) -> bool {\n \n fn check_block(fcx0: @fn_ctxt, blk: ast::blk) -> bool {\n     let fcx = match blk.node.rules {\n-      ast::unchecked_blk => @fn_ctxt {purity: ast::impure_fn,.. *fcx0},\n       ast::unsafe_blk => @fn_ctxt {purity: ast::unsafe_fn,.. *fcx0},\n       ast::default_blk => fcx0\n     };"}]}