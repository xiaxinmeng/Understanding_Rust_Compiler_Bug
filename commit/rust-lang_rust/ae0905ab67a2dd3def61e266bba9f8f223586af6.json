{"sha": "ae0905ab67a2dd3def61e266bba9f8f223586af6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMDkwNWFiNjdhMmRkM2RlZjYxZTI2NmJiYTlmOGYyMjM1ODZhZjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-22T18:51:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-22T18:51:23Z"}, "message": "auto merge of #9923 : thestinger/rust/managed_boxes, r=brson\n\nI'll flip this on after doing a snapshot. This syntax may or may not\r\nstay around, and managed boxes are currently not very useful. They have\r\nthe same overall performance characteristics as `std::rc::Rc`, but are\r\nsignificantly slower, allocate larger boxes and hold onto the memory\r\nbeyond when it is needed due to lacking move semantics.\r\n\r\nThere are currently two useful aspects of the type:\r\n\r\n* the dereference sugar, which we should implement for `Rc`\r\n* the annihilator freeing cycles at the end of the task", "tree": {"sha": "2ac88ed15bd6e69ec9c437768e31434501211b0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ac88ed15bd6e69ec9c437768e31434501211b0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae0905ab67a2dd3def61e266bba9f8f223586af6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae0905ab67a2dd3def61e266bba9f8f223586af6", "html_url": "https://github.com/rust-lang/rust/commit/ae0905ab67a2dd3def61e266bba9f8f223586af6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae0905ab67a2dd3def61e266bba9f8f223586af6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd2c0128a7dd3cb19eda253acd01cd7905d1c7dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd2c0128a7dd3cb19eda253acd01cd7905d1c7dc", "html_url": "https://github.com/rust-lang/rust/commit/fd2c0128a7dd3cb19eda253acd01cd7905d1c7dc"}, {"sha": "38c620e75829b2eb09417479aa8c1e2dd69c8d7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/38c620e75829b2eb09417479aa8c1e2dd69c8d7e", "html_url": "https://github.com/rust-lang/rust/commit/38c620e75829b2eb09417479aa8c1e2dd69c8d7e"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "000dea12b0736e5af23221a604e6cd98b1a544a4", "filename": "src/librustc/front/feature_gate.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ae0905ab67a2dd3def61e266bba9f8f223586af6/src%2Flibrustc%2Ffront%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae0905ab67a2dd3def61e266bba9f8f223586af6/src%2Flibrustc%2Ffront%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ffeature_gate.rs?ref=ae0905ab67a2dd3def61e266bba9f8f223586af6", "patch": "@@ -35,6 +35,7 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"struct_variant\", Active),\n     (\"once_fns\", Active),\n     (\"asm\", Active),\n+    (\"managed_boxes\", Active),\n \n     // These are used to test this portion of the compiler, they don't actually\n     // mean anything\n@@ -137,6 +138,15 @@ impl Visitor<()> for Context {\n                                    experimental and likely to be removed\");\n \n             },\n+            // NOTE: enable after snapshot\n+            ast::ty_box(_) if false => {\n+                self.gate_feature(\"managed_boxes\", t.span, \"The managed box syntax may be replaced \\\n+                                                            by a library type, and a garbage \\\n+                                                            collector is not yet implemented. \\\n+                                                            Consider using the `std::rc` module \\\n+                                                            as it performs much better as a \\\n+                                                            reference counting implementation.\");\n+            }\n             _ => {}\n         }\n "}]}