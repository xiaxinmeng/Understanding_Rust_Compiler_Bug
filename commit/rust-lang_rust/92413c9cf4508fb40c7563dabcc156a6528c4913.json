{"sha": "92413c9cf4508fb40c7563dabcc156a6528c4913", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyNDEzYzljZjQ1MDhmYjQwYzc1NjNkYWJjYzE1NmE2NTI4YzQ5MTM=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-20T04:21:25Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-22T20:01:49Z"}, "message": "Move `Library` into `creader.rs`.", "tree": {"sha": "d699ed8c577aa12de3bedb6403b56bbc2ff0bc4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d699ed8c577aa12de3bedb6403b56bbc2ff0bc4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92413c9cf4508fb40c7563dabcc156a6528c4913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92413c9cf4508fb40c7563dabcc156a6528c4913", "html_url": "https://github.com/rust-lang/rust/commit/92413c9cf4508fb40c7563dabcc156a6528c4913", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92413c9cf4508fb40c7563dabcc156a6528c4913/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e99b83f528cf37117f100069c4b64a3cd592d4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e99b83f528cf37117f100069c4b64a3cd592d4d", "html_url": "https://github.com/rust-lang/rust/commit/0e99b83f528cf37117f100069c4b64a3cd592d4d"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "c016f01b505aba2081e12aed65e353360de5d590", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/92413c9cf4508fb40c7563dabcc156a6528c4913/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92413c9cf4508fb40c7563dabcc156a6528c4913/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=92413c9cf4508fb40c7563dabcc156a6528c4913", "patch": "@@ -40,6 +40,12 @@ use syntax::parse::token::InternedString;\n use syntax_pos::{self, Span, mk_sp};\n use log;\n \n+pub struct Library {\n+    pub dylib: Option<(PathBuf, PathKind)>,\n+    pub rlib: Option<(PathBuf, PathKind)>,\n+    pub metadata: MetadataBlob,\n+}\n+\n pub struct CrateLoader<'a> {\n     pub sess: &'a Session,\n     cstore: &'a CStore,\n@@ -123,7 +129,7 @@ struct ExtensionCrate {\n \n enum PMDSource {\n     Registered(Rc<cstore::CrateMetadata>),\n-    Owned(loader::Library),\n+    Owned(Library),\n }\n \n impl Deref for PMDSource {\n@@ -139,7 +145,7 @@ impl Deref for PMDSource {\n \n enum LoadResult {\n     Previous(CrateNum),\n-    Loaded(loader::Library),\n+    Loaded(Library),\n }\n \n pub struct Macros {\n@@ -275,7 +281,7 @@ impl<'a> CrateLoader<'a> {\n                       ident: &str,\n                       name: &str,\n                       span: Span,\n-                      lib: loader::Library,\n+                      lib: Library,\n                       explicitly_linked: bool)\n                       -> (CrateNum, Rc<cstore::CrateMetadata>,\n                           cstore::CrateSource) {\n@@ -300,7 +306,7 @@ impl<'a> CrateLoader<'a> {\n         // Maintain a reference to the top most crate.\n         let root = if root.is_some() { root } else { &crate_paths };\n \n-        let loader::Library { dylib, rlib, metadata } = lib;\n+        let Library { dylib, rlib, metadata } = lib;\n \n         let cnum_map = self.resolve_crate_deps(root, &crate_root, &metadata, cnum, span);\n "}, {"sha": "a5e08c77eaa7a432bca12e8cc6217acbf2c272d3", "filename": "src/librustc_metadata/loader.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/92413c9cf4508fb40c7563dabcc156a6528c4913/src%2Flibrustc_metadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92413c9cf4508fb40c7563dabcc156a6528c4913/src%2Flibrustc_metadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Floader.rs?ref=92413c9cf4508fb40c7563dabcc156a6528c4913", "patch": "@@ -213,6 +213,7 @@\n //! metadata::loader or metadata::creader for all the juicy details!\n \n use cstore::MetadataBlob;\n+use creader::Library;\n use schema::{METADATA_HEADER, rustc_version};\n \n use rustc::hir::svh::Svh;\n@@ -263,12 +264,6 @@ pub struct Context<'a> {\n     pub should_match_name: bool,\n }\n \n-pub struct Library {\n-    pub dylib: Option<(PathBuf, PathKind)>,\n-    pub rlib: Option<(PathBuf, PathKind)>,\n-    pub metadata: MetadataBlob,\n-}\n-\n pub struct ArchiveMetadata {\n     _archive: ArchiveRO,\n     // points into self._archive"}]}