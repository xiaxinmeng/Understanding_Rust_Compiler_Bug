{"sha": "6eafb10b870b4b7fad784402a76d6cef046f5928", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlYWZiMTBiODcwYjRiN2ZhZDc4NDQwMmE3NmQ2Y2VmMDQ2ZjU5Mjg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-22T04:54:42Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-22T04:54:42Z"}, "message": "add test for function pointer offsets", "tree": {"sha": "fc754474e8046352274166c113c9c70139c8395e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc754474e8046352274166c113c9c70139c8395e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6eafb10b870b4b7fad784402a76d6cef046f5928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6eafb10b870b4b7fad784402a76d6cef046f5928", "html_url": "https://github.com/rust-lang/rust/commit/6eafb10b870b4b7fad784402a76d6cef046f5928", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6eafb10b870b4b7fad784402a76d6cef046f5928/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78aa93fa10ae3c0d34e8178c810f89f79d879b9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/78aa93fa10ae3c0d34e8178c810f89f79d879b9a", "html_url": "https://github.com/rust-lang/rust/commit/78aa93fa10ae3c0d34e8178c810f89f79d879b9a"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "2d240b6a55ade8ae223a1fa16cc5e5fa573a874c", "filename": "tests/compile-fail/fn_ptr_offset.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6eafb10b870b4b7fad784402a76d6cef046f5928/tests%2Fcompile-fail%2Ffn_ptr_offset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eafb10b870b4b7fad784402a76d6cef046f5928/tests%2Fcompile-fail%2Ffn_ptr_offset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffn_ptr_offset.rs?ref=6eafb10b870b4b7fad784402a76d6cef046f5928", "patch": "@@ -0,0 +1,11 @@\n+use std::mem;\n+\n+fn f() {}\n+\n+fn main() {\n+    let x : fn() = f;\n+    let y : *mut u8 = unsafe { mem::transmute(x) };\n+    let y = y.wrapping_offset(1);\n+    let x : fn() = unsafe { mem::transmute(y) };\n+    x(); //~ ERROR: tried to use an integer pointer or a dangling pointer as a function pointer\n+}"}, {"sha": "34aeef23b1ad4596587b528a0102efaf53f913b1", "filename": "tests/run-pass/thread-local.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6eafb10b870b4b7fad784402a76d6cef046f5928/tests%2Frun-pass%2Fthread-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eafb10b870b4b7fad784402a76d6cef046f5928/tests%2Frun-pass%2Fthread-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fthread-local.rs?ref=6eafb10b870b4b7fad784402a76d6cef046f5928", "patch": "@@ -42,7 +42,7 @@ unsafe extern fn dtor(mut ptr: *mut u64) {\n     }\n \n     // Check if the records matches what we expect. If yes, clear the cannary.\n-    // If the record is wrong, the cannary will ever get cleared, leading to a leak -> test fails.\n+    // If the record is wrong, the cannary will never get cleared, leading to a leak -> test fails.\n     // If the record is incomplete (i.e., more dtor calls happen), the check at the beginning of this function will fail -> test fails.\n     // The correct sequence is: First key 0, then key 1, then key 0.\n     if RECORD == 0_1_0 {"}]}