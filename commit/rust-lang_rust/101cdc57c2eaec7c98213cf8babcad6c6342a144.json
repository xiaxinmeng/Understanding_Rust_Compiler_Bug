{"sha": "101cdc57c2eaec7c98213cf8babcad6c6342a144", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwMWNkYzU3YzJlYWVjN2M5ODIxM2NmOGJhYmNhZDZjNjM0MmExNDQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-24T22:16:21Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-24T22:16:21Z"}, "message": "Add self-analysis-stats to metrics", "tree": {"sha": "65d924108908be412680cb377de1149d84a4140c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65d924108908be412680cb377de1149d84a4140c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/101cdc57c2eaec7c98213cf8babcad6c6342a144", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/101cdc57c2eaec7c98213cf8babcad6c6342a144", "html_url": "https://github.com/rust-lang/rust/commit/101cdc57c2eaec7c98213cf8babcad6c6342a144", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/101cdc57c2eaec7c98213cf8babcad6c6342a144/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a09a00a56049c705dcddc33773a27d5ce976b02e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a09a00a56049c705dcddc33773a27d5ce976b02e", "html_url": "https://github.com/rust-lang/rust/commit/a09a00a56049c705dcddc33773a27d5ce976b02e"}], "stats": {"total": 71, "additions": 46, "deletions": 25}, "files": [{"sha": "b69b884e546660c5122c90b6495f1f0d66697a01", "filename": "xtask/src/main.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/101cdc57c2eaec7c98213cf8babcad6c6342a144/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/101cdc57c2eaec7c98213cf8babcad6c6342a144/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=101cdc57c2eaec7c98213cf8babcad6c6342a144", "patch": "@@ -15,7 +15,7 @@ use xtask::{\n     codegen::{self, Mode},\n     dist::DistCmd,\n     install::{ClientOpt, InstallCmd, Malloc, ServerOpt},\n-    metrics::run_metrics,\n+    metrics::MetricsCmd,\n     not_bash::pushd,\n     pre_commit, project_root,\n     release::{PromoteCmd, ReleaseCmd},\n@@ -118,7 +118,11 @@ FLAGS:\n             args.finish()?;\n             DistCmd { nightly, client_version }.run()\n         }\n-        \"metrics\" => run_metrics(),\n+        \"metrics\" => {\n+            let dry_run = args.contains(\"--dry-run\");\n+            args.finish()?;\n+            MetricsCmd { dry_run }.run()\n+        }\n         _ => {\n             eprintln!(\n                 \"\\"}, {"sha": "6c042d695134f37b5d428056755d9c3352fc74d9", "filename": "xtask/src/metrics.rs", "status": "modified", "additions": 40, "deletions": 23, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/101cdc57c2eaec7c98213cf8babcad6c6342a144/xtask%2Fsrc%2Fmetrics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/101cdc57c2eaec7c98213cf8babcad6c6342a144/xtask%2Fsrc%2Fmetrics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmetrics.rs?ref=101cdc57c2eaec7c98213cf8babcad6c6342a144", "patch": "@@ -12,36 +12,53 @@ use crate::not_bash::{fs2, pushd, rm_rf, run};\n \n type Unit = &'static str;\n \n-pub fn run_metrics() -> Result<()> {\n-    let mut metrics = Metrics::new()?;\n-    metrics.measure_build()?;\n-\n-    {\n-        let _d = pushd(\"target\");\n-        let metrics_token = env::var(\"METRICS_TOKEN\").unwrap();\n-        let repo = format!(\"https://{}@github.com/rust-analyzer/metrics.git\", metrics_token);\n-        run!(\"git clone --depth 1 {}\", repo)?;\n-        let _d = pushd(\"metrics\");\n-\n-        let mut file = std::fs::OpenOptions::new().append(true).open(\"metrics.json\")?;\n-        writeln!(file, \"{}\", metrics.json())?;\n-        run!(\"git add .\")?;\n-        run!(\"git -c user.name=Bot -c user.email=dummy@example.com commit --message \ud83d\udcc8\")?;\n-        run!(\"git push origin master\")?;\n-    }\n-    eprintln!(\"{:#?}\", metrics);\n-    Ok(())\n+pub struct MetricsCmd {\n+    pub dry_run: bool,\n+}\n+\n+impl MetricsCmd {\n+    pub fn run(self) -> Result<()> {\n+        let mut metrics = Metrics::new()?;\n+        if !self.dry_run {\n+            rm_rf(\"./target/release\")?;\n+        }\n+\n+        metrics.measure_build()?;\n+        metrics.measure_analysis_stats_self()?;\n+\n+        if !self.dry_run {\n+            let _d = pushd(\"target\");\n+            let metrics_token = env::var(\"METRICS_TOKEN\").unwrap();\n+            let repo = format!(\"https://{}@github.com/rust-analyzer/metrics.git\", metrics_token);\n+            run!(\"git clone --depth 1 {}\", repo)?;\n+            let _d = pushd(\"metrics\");\n+\n+            let mut file = std::fs::OpenOptions::new().append(true).open(\"metrics.json\")?;\n+            writeln!(file, \"{}\", metrics.json())?;\n+            run!(\"git add .\")?;\n+            run!(\"git -c user.name=Bot -c user.email=dummy@example.com commit --message \ud83d\udcc8\")?;\n+            run!(\"git push origin master\")?;\n+        }\n+        eprintln!(\"{:#?}\", metrics);\n+        Ok(())\n+    }\n }\n \n impl Metrics {\n     fn measure_build(&mut self) -> Result<()> {\n         run!(\"cargo fetch\")?;\n-        rm_rf(\"./target/release\")?;\n \n-        let build = Instant::now();\n+        let time = Instant::now();\n         run!(\"cargo build --release --package rust-analyzer --bin rust-analyzer\")?;\n-        let build = build.elapsed();\n-        self.report(\"build\", build.as_millis() as u64, \"ms\");\n+        let time = time.elapsed();\n+        self.report(\"build\", time.as_millis() as u64, \"ms\");\n+        Ok(())\n+    }\n+    fn measure_analysis_stats_self(&mut self) -> Result<()> {\n+        let time = Instant::now();\n+        run!(\"./target/release/rust-analyzer analysis-stats .\")?;\n+        let time = time.elapsed();\n+        self.report(\"analysis-stats/self\", time.as_millis() as u64, \"ms\");\n         Ok(())\n     }\n }"}]}