{"sha": "1ae13b3fdd02593581b8ccd374ea4971d473e9dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZTEzYjNmZGQwMjU5MzU4MWI4Y2NkMzc0ZWE0OTcxZDQ3M2U5ZGM=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-07-22T19:45:58Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-07-22T19:45:58Z"}, "message": "Source FIXME annotations for issue #81 and a correction to STMT_bind fmt.", "tree": {"sha": "1764bbae771080c736c58d2d5d89c4fab114ff5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1764bbae771080c736c58d2d5d89c4fab114ff5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ae13b3fdd02593581b8ccd374ea4971d473e9dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ae13b3fdd02593581b8ccd374ea4971d473e9dc", "html_url": "https://github.com/rust-lang/rust/commit/1ae13b3fdd02593581b8ccd374ea4971d473e9dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ae13b3fdd02593581b8ccd374ea4971d473e9dc/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a61be2d74a4f1ca02b8021c93f83742b8ffb3515", "url": "https://api.github.com/repos/rust-lang/rust/commits/a61be2d74a4f1ca02b8021c93f83742b8ffb3515", "html_url": "https://github.com/rust-lang/rust/commit/a61be2d74a4f1ca02b8021c93f83742b8ffb3515"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "390d944d8c23772c35ca654416e1840a0cb623c5", "filename": "src/boot/fe/ast.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ae13b3fdd02593581b8ccd374ea4971d473e9dc/src%2Fboot%2Ffe%2Fast.ml", "raw_url": "https://github.com/rust-lang/rust/raw/1ae13b3fdd02593581b8ccd374ea4971d473e9dc/src%2Fboot%2Ffe%2Fast.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fast.ml?ref=1ae13b3fdd02593581b8ccd374ea4971d473e9dc", "patch": "@@ -1013,7 +1013,7 @@ and fmt_stmt_body (ff:Format.formatter) (s:stmt) : unit =\n \n       | STMT_bind (dst, fn, arg_opts) ->\n           fmt_lval ff dst;\n-          fmt ff \" = \";\n+          fmt ff \" = bind \";\n           fmt_lval ff fn;\n           fmt_atom_opts ff arg_opts;\n           fmt ff \";\";"}, {"sha": "6ec88f997f8a9445b744552c68072561327412f3", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1ae13b3fdd02593581b8ccd374ea4971d473e9dc/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/1ae13b3fdd02593581b8ccd374ea4971d473e9dc/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=1ae13b3fdd02593581b8ccd374ea4971d473e9dc", "patch": "@@ -3818,7 +3818,7 @@ let trans_visitor\n       (* \n        * NB: 'all_*_args', both self and callee, are always 4-tuples: \n        * \n-       *    [out_ptr, task_ptr, [args], [indirect_args]] \n+       *    [out_ptr, task_ptr, indirect_args, ty_params, [args]]\n        * \n        * The first few bindings here just destructure those via GEP.\n        * \n@@ -3833,6 +3833,9 @@ let trans_visitor\n         get_element_ptr all_self_args_cell Abi.calltup_elt_ty_params\n       in\n       let callee_args_cell =\n+        (* FIXME (issue #81):  Once we've actually got proper ty_params,\n+         * we should GEP dynamically here to get the args, since they may\n+         * be aligned dynamically if they have parameterized type. *)\n         get_element_ptr all_callee_args_cell Abi.calltup_elt_args\n       in\n       let self_indirect_args_cell ="}, {"sha": "c0555bf1b036f1280c2761ee8027dd16bd1b1b8b", "filename": "src/lib/_vec.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ae13b3fdd02593581b8ccd374ea4971d473e9dc/src%2Flib%2F_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae13b3fdd02593581b8ccd374ea4971d473e9dc/src%2Flib%2F_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_vec.rs?ref=1ae13b3fdd02593581b8ccd374ea4971d473e9dc", "patch": "@@ -26,11 +26,13 @@ fn init_fn[T](&init_op[T] op, uint n_elts) -> vec[T] {\n }\n \n fn init_elt[T](&T t, uint n_elts) -> vec[T] {\n-  // FIXME: should be:\n-  // fn elt_op[X](X x, uint i) -> X { ret x; }\n-  // auto inner = bind elt_op[T](t, _);\n-  // ret init_fn[T](inner, n_elts);\n-  // but this does not work presently.\n+  /**\n+   * FIXME (issue #81): should be:\n+   *\n+   * fn elt_op[T](T x, uint i) -> T { ret x; }\n+   * let init_op[T] inner = bind elt_op[T](t, _);\n+   * ret init_fn[T](inner, n_elts);\n+   */\n   let vec[T] v = alloc[T](n_elts);\n   let uint i = n_elts;\n   while (i > uint(0)) {"}]}