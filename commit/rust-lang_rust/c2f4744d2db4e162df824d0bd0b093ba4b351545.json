{"sha": "c2f4744d2db4e162df824d0bd0b093ba4b351545", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyZjQ3NDRkMmRiNGUxNjJkZjgyNGQwYmQwYjA5M2JhNGIzNTE1NDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-19T00:02:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-19T00:02:32Z"}, "message": "Auto merge of #49095 - alexcrichton:debug-asmjs, r=kennytm\n\nTry to reduce amount of time on the asmjs builder\n\nThis PR has two commits for two separate strategies:\n\n* First it disables optimizations for all tests, hopefully saving time by not optimizing the test code. This caused a number of run-pass tests to fail which are switched to being ignored here.\n* Next it disables a number of test suites which aren't asm.js specific and already run elsewhere\n\ncc #48826", "tree": {"sha": "d0cf9bfe82d1dcf1c1cd803493918d2f34e7359e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0cf9bfe82d1dcf1c1cd803493918d2f34e7359e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2f4744d2db4e162df824d0bd0b093ba4b351545", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2f4744d2db4e162df824d0bd0b093ba4b351545", "html_url": "https://github.com/rust-lang/rust/commit/c2f4744d2db4e162df824d0bd0b093ba4b351545", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2f4744d2db4e162df824d0bd0b093ba4b351545/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5508b27145cfb82896ae838e6aca0cd48750796f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5508b27145cfb82896ae838e6aca0cd48750796f", "html_url": "https://github.com/rust-lang/rust/commit/5508b27145cfb82896ae838e6aca0cd48750796f"}, {"sha": "60eb308b421a471fa3ecc2848fb93c6527ec409c", "url": "https://api.github.com/repos/rust-lang/rust/commits/60eb308b421a471fa3ecc2848fb93c6527ec409c", "html_url": "https://github.com/rust-lang/rust/commit/60eb308b421a471fa3ecc2848fb93c6527ec409c"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "cb85cf3d9e9f094f87ba6617250e55ef68a7fd42", "filename": "src/ci/docker/asmjs/Dockerfile", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Fci%2Fdocker%2Fasmjs%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Fci%2Fdocker%2Fasmjs%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fasmjs%2FDockerfile?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -29,6 +29,11 @@ ENV EM_CONFIG=/emsdk-portable/.emscripten\n \n ENV TARGETS=asmjs-unknown-emscripten\n \n-ENV RUST_CONFIGURE_ARGS --enable-emscripten\n+ENV RUST_CONFIGURE_ARGS --enable-emscripten --disable-optimize-tests\n \n-ENV SCRIPT python2.7 ../x.py test --target $TARGETS\n+ENV SCRIPT python2.7 ../x.py test --target $TARGETS \\\n+  src/test/run-pass \\\n+  src/test/run-fail \\\n+  src/libstd \\\n+  src/liballoc \\\n+  src/libcore"}, {"sha": "d59fe8d813d249af0e9d4782519299c9d6b745a5", "filename": "src/test/run-pass/deep.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fdeep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fdeep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdeep.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -8,9 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n+// ignore-emscripten apparently blows the stack\n \n fn f(x: isize) -> isize {\n     if x == 1 { return 1; } else { let y: isize = 1 + f(x - 1); return y; }"}, {"sha": "d44f78922c70221b410ae3dcc47d87ccaf0fc082", "filename": "src/test/run-pass/float-int-invalid-const-cast.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Ffloat-int-invalid-const-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Ffloat-int-invalid-const-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffloat-int-invalid-const-cast.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten no i128 support\n+\n #![feature(i128_type)]\n #![deny(const_err)]\n "}, {"sha": "cdfad51e648a3b03f65d0843686bb5e1673ba5d1", "filename": "src/test/run-pass/intrinsics-integer.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten no i128 support\n+\n #![feature(intrinsics, i128_type)]\n \n mod rusti {"}, {"sha": "5132405a9d583a00ed4a0d8850878500817bacb5", "filename": "src/test/run-pass/intrinsics-math.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten fma not implemented in emscripten\n+\n macro_rules! assert_approx_eq {\n     ($a:expr, $b:expr) => ({\n         let (a, b) = (&$a, &$b);"}, {"sha": "d059a46b4df123d3456d2b2e26ec3f1c99ed6e1a", "filename": "src/test/run-pass/issue-32947.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fissue-32947.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fissue-32947.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-32947.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten FIXME(#45351)\n+\n #![feature(repr_simd, test)]\n \n extern crate test;"}, {"sha": "2368ba8a110be28206c27beeb03b7b2a77bab0b4", "filename": "src/test/run-pass/issue-38074.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fissue-38074.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fissue-38074.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-38074.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten FIXME(#45351)\n+\n #![feature(platform_intrinsics, repr_simd)]\n \n extern \"platform-intrinsic\" {"}, {"sha": "9873a8c2bf44f8eba4f6b5a1c534dc7d8e73dbb9", "filename": "src/test/run-pass/issue-39720.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fissue-39720.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fissue-39720.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-39720.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten FIXME(#45351)\n+\n #![feature(repr_simd, platform_intrinsics)]\n \n #[repr(C)]"}, {"sha": "b50852175776cb9d35e64081a219aca9beca5f6b", "filename": "src/test/run-pass/mir_heavy_promoted.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fmir_heavy_promoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fmir_heavy_promoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmir_heavy_promoted.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten apparently only works in optimized mode\n+\n const TEST_DATA: [u8; 32 * 1024 * 1024] = [42; 32 * 1024 * 1024];\n \n // Check that the promoted copy of TEST_DATA doesn't"}, {"sha": "599c6dfd31d906b5de6b98f43c5ccbc25b797c2d", "filename": "src/test/run-pass/next-power-of-two-overflow-debug.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fnext-power-of-two-overflow-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fnext-power-of-two-overflow-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnext-power-of-two-overflow-debug.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -10,6 +10,7 @@\n \n // compile-flags: -C debug_assertions=yes\n // ignore-wasm32-bare compiled with panic=abort by default\n+// ignore-emscripten dies with an LLVM error\n \n #![feature(i128_type)]\n "}, {"sha": "f2312b70be679aa3bcdd9931eccfe6abdc51fabf", "filename": "src/test/run-pass/next-power-of-two-overflow-ndebug.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fnext-power-of-two-overflow-ndebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fnext-power-of-two-overflow-ndebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnext-power-of-two-overflow-ndebug.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -C debug_assertions=no\n+// ignore-emscripten dies with an LLVM error\n \n #![feature(i128_type)]\n "}, {"sha": "e725b25efee520ab92d16a46cd0e55643173a578", "filename": "src/test/run-pass/packed-struct-borrow-element.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fpacked-struct-borrow-element.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fpacked-struct-borrow-element.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-borrow-element.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten weird assertion?\n \n #[repr(packed)]\n struct Foo {"}, {"sha": "ac6d0c697ecc04bb8dc524f3bae9b09dd0a9576b", "filename": "src/test/run-pass/simd-intrinsic-generic-arithmetic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-arithmetic.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten FIXME(#45351) hits an LLVM assert\n+\n #![feature(repr_simd, platform_intrinsics)]\n \n #[repr(simd)]"}, {"sha": "d27378ba893082ed1d5385624e4ece0e23604d10", "filename": "src/test/run-pass/simd-intrinsic-generic-comparison.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-comparison.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten FIXME(#45351) hits an LLVM assert\n+\n #![feature(repr_simd, platform_intrinsics, concat_idents)]\n #![allow(non_camel_case_types)]\n "}, {"sha": "72fcef27a665bc7b00e80fb1bdf727141c6ba086", "filename": "src/test/run-pass/simd-intrinsic-generic-elements.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-elements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f4744d2db4e162df824d0bd0b093ba4b351545/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-elements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-elements.rs?ref=c2f4744d2db4e162df824d0bd0b093ba4b351545", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-emscripten FIXME(#45351) hits an LLVM assert\n+\n #![feature(repr_simd, platform_intrinsics)]\n \n #[repr(simd)]"}]}