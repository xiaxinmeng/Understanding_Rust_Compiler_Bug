{"sha": "a9ae0b085579c92fa8095580681d8b766aa19e27", "node_id": "C_kwDOAAsO6NoAKGE5YWUwYjA4NTU3OWM5MmZhODA5NTU4MDY4MWQ4Yjc2NmFhMTllMjc", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-01T21:42:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-01T21:42:54Z"}, "message": "Merge #11857\n\n11857: Lower postfix suggestions in completions list r=Veykril a=avrong\n\nFixes #11850\r\n\r\nAdds a parameter for postfix suggestions in `CompletionRelevance`, and basing on it, decreases relevance score of such items in completion list\n\nCo-authored-by: Aleksei Trifonov <avrong@avrong.me>", "tree": {"sha": "6c056c9f6c90b400442998307030d4a17f3000f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c056c9f6c90b400442998307030d4a17f3000f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9ae0b085579c92fa8095580681d8b766aa19e27", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiR3HeCRBK7hj4Ov3rIwAAqWoIAEsfmkUpsOuq0BntGyackxyf\nSLvRiex9ft6ExA+oTZaWmj0dRjQRN5dlDHkwwYEpBo7JftdXxmDaJjVd6HZXErzm\nIqiPkOSpb8N0Xt6s3zOA4fVXrlybJuQMQK2rHNSe7BE/p5s+VX8JTsv+/ZIMVird\nn80O9Fttjd+OIZD5kU2zMgFK0pQjEXgku6slIxLPNZEzNo5JOGzJllTrG7x2+aWi\nkG4QS5TNdd6TiAvMkmBcyNWsevWBM91XgeiNN/3iPjbS7QhUlUGWZG587Sg3E681\nywpnFP77qoDV5klpSOO5IBhSyqZnnpzSDVxPo97/qKg7jhEHMORqLDvFpaiTtyc=\n=7MZw\n-----END PGP SIGNATURE-----\n", "payload": "tree 6c056c9f6c90b400442998307030d4a17f3000f8\nparent 0e02522b1b7f1db40b0b03bec9bc4d7241e5b247\nparent eda4046a057d279b9f4acda923b56aa1845f15da\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648849374 +0000\ncommitter GitHub <noreply@github.com> 1648849374 +0000\n\nMerge #11857\n\n11857: Lower postfix suggestions in completions list r=Veykril a=avrong\n\nFixes #11850\r\n\r\nAdds a parameter for postfix suggestions in `CompletionRelevance`, and basing on it, decreases relevance score of such items in completion list\n\nCo-authored-by: Aleksei Trifonov <avrong@avrong.me>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9ae0b085579c92fa8095580681d8b766aa19e27", "html_url": "https://github.com/rust-lang/rust/commit/a9ae0b085579c92fa8095580681d8b766aa19e27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9ae0b085579c92fa8095580681d8b766aa19e27/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e02522b1b7f1db40b0b03bec9bc4d7241e5b247", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e02522b1b7f1db40b0b03bec9bc4d7241e5b247", "html_url": "https://github.com/rust-lang/rust/commit/0e02522b1b7f1db40b0b03bec9bc4d7241e5b247"}, {"sha": "eda4046a057d279b9f4acda923b56aa1845f15da", "url": "https://api.github.com/repos/rust-lang/rust/commits/eda4046a057d279b9f4acda923b56aa1845f15da", "html_url": "https://github.com/rust-lang/rust/commit/eda4046a057d279b9f4acda923b56aa1845f15da"}], "stats": {"total": 87, "additions": 57, "deletions": 30}, "files": [{"sha": "302694ea7cf279c97c2eadbce19929a130134aa3", "filename": "crates/ide_completion/src/completions/postfix.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a9ae0b085579c92fa8095580681d8b766aa19e27/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9ae0b085579c92fa8095580681d8b766aa19e27/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix.rs?ref=a9ae0b085579c92fa8095580681d8b766aa19e27", "patch": "@@ -12,9 +12,11 @@ use syntax::{\n use text_edit::TextEdit;\n \n use crate::{\n-    completions::postfix::format_like::add_format_like_completions, context::CompletionContext,\n-    item::Builder, patterns::ImmediateLocation, CompletionItem, CompletionItemKind,\n-    CompletionRelevance, Completions, SnippetScope,\n+    completions::postfix::format_like::add_format_like_completions,\n+    context::CompletionContext,\n+    item::{Builder, CompletionRelevancePostfixMatch},\n+    patterns::ImmediateLocation,\n+    CompletionItem, CompletionItemKind, CompletionRelevance, Completions, SnippetScope,\n };\n \n pub(crate) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n@@ -240,12 +242,13 @@ fn build_postfix_snippet_builder<'ctx>(\n             let mut item =\n                 CompletionItem::new(CompletionItemKind::Snippet, ctx.source_range(), label);\n             item.detail(detail).snippet_edit(cap, edit);\n-            if ctx.original_token.text() == label {\n-                let relevance =\n-                    CompletionRelevance { exact_postfix_snippet_match: true, ..Default::default() };\n-                item.set_relevance(relevance);\n-            }\n-\n+            let postfix_match = if ctx.original_token.text() == label {\n+                Some(CompletionRelevancePostfixMatch::Exact)\n+            } else {\n+                Some(CompletionRelevancePostfixMatch::NonExact)\n+            };\n+            let relevance = CompletionRelevance { postfix_match, ..Default::default() };\n+            item.set_relevance(relevance);\n             item\n         }\n     }"}, {"sha": "6057c0e0043b6d31b72e72181ebac8b62fe0072f", "filename": "crates/ide_completion/src/completions/record.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a9ae0b085579c92fa8095580681d8b766aa19e27/crates%2Fide_completion%2Fsrc%2Fcompletions%2Frecord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9ae0b085579c92fa8095580681d8b766aa19e27/crates%2Fide_completion%2Fsrc%2Fcompletions%2Frecord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Frecord.rs?ref=a9ae0b085579c92fa8095580681d8b766aa19e27", "patch": "@@ -4,7 +4,7 @@ use syntax::{ast::Expr, T};\n \n use crate::{\n     patterns::ImmediateLocation, CompletionContext, CompletionItem, CompletionItemKind,\n-    CompletionRelevance, Completions,\n+    CompletionRelevance, CompletionRelevancePostfixMatch, Completions,\n };\n \n pub(crate) fn complete_record(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n@@ -45,7 +45,7 @@ pub(crate) fn complete_record(acc: &mut Completions, ctx: &CompletionContext) ->\n                     let completion_text =\n                         completion_text.strip_prefix(ctx.token.text()).unwrap_or(completion_text);\n                     item.insert_text(completion_text).set_relevance(CompletionRelevance {\n-                        exact_postfix_snippet_match: true,\n+                        postfix_match: Some(CompletionRelevancePostfixMatch::Exact),\n                         ..Default::default()\n                     });\n                     item.add_to(acc);"}, {"sha": "89cbddbad36b05bbd5769339411d3fc09db61b67", "filename": "crates/ide_completion/src/item.rs", "status": "modified", "additions": 31, "deletions": 13, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/a9ae0b085579c92fa8095580681d8b766aa19e27/crates%2Fide_completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9ae0b085579c92fa8095580681d8b766aa19e27/crates%2Fide_completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fitem.rs?ref=a9ae0b085579c92fa8095580681d8b766aa19e27", "patch": "@@ -143,15 +143,8 @@ pub struct CompletionRelevance {\n     pub is_op_method: bool,\n     /// Set for item completions that are private but in the workspace.\n     pub is_private_editable: bool,\n-    /// This is set in cases like these:\n-    ///\n-    /// ```\n-    /// (a > b).not$0\n-    /// ```\n-    ///\n-    /// Basically, we want to guarantee that postfix snippets always takes\n-    /// precedence over everything else.\n-    pub exact_postfix_snippet_match: bool,\n+    /// Set for postfix snippet item completions\n+    pub postfix_match: Option<CompletionRelevancePostfixMatch>,\n }\n \n #[derive(Debug, Clone, Copy, Eq, PartialEq)]\n@@ -178,8 +171,23 @@ pub enum CompletionRelevanceTypeMatch {\n     Exact,\n }\n \n+#[derive(Debug, Clone, Copy, Eq, PartialEq)]\n+pub enum CompletionRelevancePostfixMatch {\n+    /// Set in cases when item is postfix, but not exact\n+    NonExact,\n+    /// This is set in cases like these:\n+    ///\n+    /// ```\n+    /// (a > b).not$0\n+    /// ```\n+    ///\n+    /// Basically, we want to guarantee that postfix snippets always takes\n+    /// precedence over everything else.\n+    Exact,\n+}\n+\n impl CompletionRelevance {\n-    const BASE_LINE: u32 = 2;\n+    const BASE_LINE: u32 = 3;\n     /// Provides a relevance score. Higher values are more relevant.\n     ///\n     /// The absolute value of the relevance score is not meaningful, for\n@@ -199,6 +207,9 @@ impl CompletionRelevance {\n         if self.is_private_editable {\n             score -= 1;\n         }\n+        if self.postfix_match.is_some() {\n+            score -= 3;\n+        }\n \n         // score increases\n         if self.exact_name_match {\n@@ -212,9 +223,10 @@ impl CompletionRelevance {\n         if self.is_local {\n             score += 1;\n         }\n-        if self.exact_postfix_snippet_match {\n+        if self.postfix_match == Some(CompletionRelevancePostfixMatch::Exact) {\n             score += 100;\n         }\n+\n         score\n     }\n \n@@ -530,7 +542,9 @@ mod tests {\n     use itertools::Itertools;\n     use test_utils::assert_eq_text;\n \n-    use super::{CompletionRelevance, CompletionRelevanceTypeMatch};\n+    use super::{\n+        CompletionRelevance, CompletionRelevancePostfixMatch, CompletionRelevanceTypeMatch,\n+    };\n \n     /// Check that these are CompletionRelevance are sorted in ascending order\n     /// by their relevance score.\n@@ -573,6 +587,10 @@ mod tests {\n         // This test asserts that the relevance score for these items is ascending, and\n         // that any items in the same vec have the same score.\n         let expected_relevance_order = vec![\n+            vec![CompletionRelevance {\n+                postfix_match: Some(CompletionRelevancePostfixMatch::NonExact),\n+                ..CompletionRelevance::default()\n+            }],\n             vec![CompletionRelevance {\n                 is_op_method: true,\n                 is_private_editable: true,\n@@ -612,7 +630,7 @@ mod tests {\n                 ..CompletionRelevance::default()\n             }],\n             vec![CompletionRelevance {\n-                exact_postfix_snippet_match: true,\n+                postfix_match: Some(CompletionRelevancePostfixMatch::Exact),\n                 ..CompletionRelevance::default()\n             }],\n         ];"}, {"sha": "0cbe82abbaf0a157f0f6427b5e4537e8c5243b7b", "filename": "crates/ide_completion/src/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a9ae0b085579c92fa8095580681d8b766aa19e27/crates%2Fide_completion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9ae0b085579c92fa8095580681d8b766aa19e27/crates%2Fide_completion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Flib.rs?ref=a9ae0b085579c92fa8095580681d8b766aa19e27", "patch": "@@ -28,7 +28,10 @@ use crate::{completions::Completions, context::CompletionContext};\n \n pub use crate::{\n     config::CompletionConfig,\n-    item::{CompletionItem, CompletionItemKind, CompletionRelevance, ImportEdit},\n+    item::{\n+        CompletionItem, CompletionItemKind, CompletionRelevance, CompletionRelevancePostfixMatch,\n+        ImportEdit,\n+    },\n     snippet::{Snippet, SnippetScope},\n };\n "}, {"sha": "a18c064960e84856f3532cddc8e3123185c726c0", "filename": "crates/ide_completion/src/render.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a9ae0b085579c92fa8095580681d8b766aa19e27/crates%2Fide_completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9ae0b085579c92fa8095580681d8b766aa19e27/crates%2Fide_completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender.rs?ref=a9ae0b085579c92fa8095580681d8b766aa19e27", "patch": "@@ -365,7 +365,7 @@ mod tests {\n     use crate::{\n         item::CompletionRelevanceTypeMatch,\n         tests::{check_edit, do_completion, get_all_items, TEST_CONFIG},\n-        CompletionItem, CompletionItemKind, CompletionRelevance,\n+        CompletionItem, CompletionItemKind, CompletionRelevance, CompletionRelevancePostfixMatch,\n     };\n \n     #[track_caller]\n@@ -432,7 +432,10 @@ mod tests {\n                 ),\n                 (relevance.exact_name_match, \"name\"),\n                 (relevance.is_local, \"local\"),\n-                (relevance.exact_postfix_snippet_match, \"snippet\"),\n+                (\n+                    relevance.postfix_match == Some(CompletionRelevancePostfixMatch::Exact),\n+                    \"snippet\",\n+                ),\n                 (relevance.is_op_method, \"op_method\"),\n             ]\n             .into_iter()\n@@ -614,7 +617,7 @@ fn main() { let _: m::Spam = S$0 }\n                             is_local: false,\n                             is_op_method: false,\n                             is_private_editable: false,\n-                            exact_postfix_snippet_match: false,\n+                            postfix_match: None,\n                         },\n                     },\n                     CompletionItem {\n@@ -635,7 +638,7 @@ fn main() { let _: m::Spam = S$0 }\n                             is_local: false,\n                             is_op_method: false,\n                             is_private_editable: false,\n-                            exact_postfix_snippet_match: false,\n+                            postfix_match: None,\n                         },\n                     },\n                 ]\n@@ -722,7 +725,7 @@ fn foo() { A { the$0 } }\n                             is_local: false,\n                             is_op_method: false,\n                             is_private_editable: false,\n-                            exact_postfix_snippet_match: false,\n+                            postfix_match: None,\n                         },\n                     },\n                 ]"}]}