{"sha": "ce76b1a1f396dd27e8c73bd59333aef42308920b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNzZiMWExZjM5NmRkMjdlOGM3M2JkNTkzMzNhZWY0MjMwODkyMGI=", "commit": {"author": {"name": "Matt Peterson", "email": "ricochet1k@gmail.com", "date": "2017-12-20T22:22:37Z"}, "committer": {"name": "Matt Peterson", "email": "ricochet1k@gmail.com", "date": "2017-12-28T16:32:05Z"}, "message": "Fix tests", "tree": {"sha": "7f33f9c1e8a23d09c77b3027f0357eb318a36225", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f33f9c1e8a23d09c77b3027f0357eb318a36225"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce76b1a1f396dd27e8c73bd59333aef42308920b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce76b1a1f396dd27e8c73bd59333aef42308920b", "html_url": "https://github.com/rust-lang/rust/commit/ce76b1a1f396dd27e8c73bd59333aef42308920b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce76b1a1f396dd27e8c73bd59333aef42308920b/comments", "author": {"login": "ricochet1k", "id": 76901, "node_id": "MDQ6VXNlcjc2OTAx", "avatar_url": "https://avatars.githubusercontent.com/u/76901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricochet1k", "html_url": "https://github.com/ricochet1k", "followers_url": "https://api.github.com/users/ricochet1k/followers", "following_url": "https://api.github.com/users/ricochet1k/following{/other_user}", "gists_url": "https://api.github.com/users/ricochet1k/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricochet1k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricochet1k/subscriptions", "organizations_url": "https://api.github.com/users/ricochet1k/orgs", "repos_url": "https://api.github.com/users/ricochet1k/repos", "events_url": "https://api.github.com/users/ricochet1k/events{/privacy}", "received_events_url": "https://api.github.com/users/ricochet1k/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ricochet1k", "id": 76901, "node_id": "MDQ6VXNlcjc2OTAx", "avatar_url": "https://avatars.githubusercontent.com/u/76901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricochet1k", "html_url": "https://github.com/ricochet1k", "followers_url": "https://api.github.com/users/ricochet1k/followers", "following_url": "https://api.github.com/users/ricochet1k/following{/other_user}", "gists_url": "https://api.github.com/users/ricochet1k/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricochet1k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricochet1k/subscriptions", "organizations_url": "https://api.github.com/users/ricochet1k/orgs", "repos_url": "https://api.github.com/users/ricochet1k/repos", "events_url": "https://api.github.com/users/ricochet1k/events{/privacy}", "received_events_url": "https://api.github.com/users/ricochet1k/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e53360af69bf9e71ef39e570655d73fc44339b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e53360af69bf9e71ef39e570655d73fc44339b9", "html_url": "https://github.com/rust-lang/rust/commit/0e53360af69bf9e71ef39e570655d73fc44339b9"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "8aa03e007e45e547ea2d7a9fa3b780c3889ec200", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ce76b1a1f396dd27e8c73bd59333aef42308920b/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce76b1a1f396dd27e8c73bd59333aef42308920b/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ce76b1a1f396dd27e8c73bd59333aef42308920b", "patch": "@@ -1295,6 +1295,10 @@ impl<'a> Parser<'a> {\n     fn get_label(&mut self) -> ast::Ident {\n         match self.token {\n             token::Lifetime(ref ident) => *ident,\n+            token::Interpolated(ref nt) => match nt.0 {\n+                token::NtLifetime(lifetime) => lifetime.ident,\n+                _ => self.bug(\"not a lifetime\"),\n+            },\n             _ => self.bug(\"not a lifetime\"),\n         }\n     }\n@@ -2032,14 +2036,20 @@ impl<'a> Parser<'a> {\n \n     /// Parse single lifetime 'a or panic.\n     pub fn expect_lifetime(&mut self) -> Lifetime {\n-        match self.token {\n-            token::Lifetime(ident) => {\n-                let ident_span = self.span;\n-                self.bump();\n-                Lifetime { ident: ident, span: ident_span, id: ast::DUMMY_NODE_ID }\n+        let lifetime = match self.token {\n+            token::Lifetime(ident) =>\n+                Lifetime { ident: ident, span: self.span, id: ast::DUMMY_NODE_ID },\n+            token::Interpolated(ref nt) => match nt.0 {\n+                token::NtLifetime(lifetime) => \n+                    lifetime,\n+                    //Lifetime { ident: lifetime.ident, span: lifetime.span, id: ast::DUMMY_NODE_ID },\n+                _ => self.span_bug(self.span, &format!(\"not a lifetime: {:?}\", self.token))\n             }\n-            _ => self.span_bug(self.span, \"not a lifetime\")\n-        }\n+            _ => self.span_bug(self.span, &format!(\"not a lifetime: {:?}\", self.token))\n+        };\n+\n+        self.bump();\n+        lifetime\n     }\n \n     /// Parse mutability (`mut` or nothing)."}, {"sha": "2d7ab938f7bb852fd0231b2542e40d026f815271", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ce76b1a1f396dd27e8c73bd59333aef42308920b/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce76b1a1f396dd27e8c73bd59333aef42308920b/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=ce76b1a1f396dd27e8c73bd59333aef42308920b", "patch": "@@ -251,7 +251,7 @@ impl Token {\n             Lt | BinOp(Shl)             | // associated path\n             ModSep                      => true, // global path\n             Interpolated(ref nt) => match nt.0 {\n-                NtIdent(..) | NtTy(..) | NtPath(..) => true,\n+                NtIdent(..) | NtTy(..) | NtPath(..) | NtLifetime(..) => true,\n                 _ => false,\n             },\n             _ => false,\n@@ -318,7 +318,11 @@ impl Token {\n     pub fn is_lifetime(&self) -> bool {\n         match *self {\n             Lifetime(..) => true,\n-            _            => false,\n+            Interpolated(ref nt) => match nt.0 {\n+                NtLifetime(..) => true,\n+                _ => false,\n+            },\n+            _ => false,\n         }\n     }\n \n@@ -486,6 +490,10 @@ impl Token {\n                 let token = Token::Ident(ident.node);\n                 tokens = Some(TokenTree::Token(ident.span, token).into());\n             }\n+            Nonterminal::NtLifetime(lifetime) => {\n+                let token = Token::Lifetime(lifetime.ident);\n+                tokens = Some(TokenTree::Token(lifetime.span, token).into());\n+            }\n             Nonterminal::NtTT(ref tt) => {\n                 tokens = Some(tt.clone().into());\n             }"}]}