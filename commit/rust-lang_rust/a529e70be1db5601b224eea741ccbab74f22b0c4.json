{"sha": "a529e70be1db5601b224eea741ccbab74f22b0c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MjllNzBiZTFkYjU2MDFiMjI0ZWVhNzQxY2NiYWI3NGYyMmIwYzQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-01-16T15:23:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-16T15:23:32Z"}, "message": "Rollup merge of #68274 - matthiaskrgr:dead_code, r=Dylan-DPC\n\nremove dead code\n\nThe condition\n`if obligation.recursion_depth >= 0`\nis always true since `recursion_depth` is `usize`.\n\nThe else branch is dead code and can be removed.\n\nFound by Clippy.\n\nFixes #68251", "tree": {"sha": "2319799a5a8a565bdf5f56cc148bbcee85a50f12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2319799a5a8a565bdf5f56cc148bbcee85a50f12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a529e70be1db5601b224eea741ccbab74f22b0c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeIH/0CRBK7hj4Ov3rIwAAdHIIAKwxtgZBhAUzRTQFS8G28Rqo\nDqIvb76nQrYIVI/76K9HZn2T1oUrGv1Bz9k0oPKLn4BzVMeKvbLOEDWH7IN+Fhbm\nvaaVTojbNaWkGLC0GMTK572LCoM447n53/Qf7ZGHasydzi72fvMx0ilYuew2PWnW\n5AjJpKsMZgOjuLu0nfbCpZrtiu65cBqQQImRsP2z+Yu60FH6CcS8G3a9+lZKntcp\nnXzlqoaeAdvtrYr78Hh44+TBcpvLObfpWFMnJUA2+5usPzJ/FFNNwqKx0NvYWJ3y\nAL1Lz1aC6Pxz8l9YyL8TyAsfH1i9oWYNcd97a5FYO3MCB26yvf3ihvEgKGYzNbg=\n=5zDn\n-----END PGP SIGNATURE-----\n", "payload": "tree 2319799a5a8a565bdf5f56cc148bbcee85a50f12\nparent 6e797ff8d942d3823725b2326b906425433f2624\nparent c4d91aae5a72733479bab8df1aee78bb049b9735\nauthor Dylan DPC <dylan.dpc@gmail.com> 1579188212 +0530\ncommitter GitHub <noreply@github.com> 1579188212 +0530\n\nRollup merge of #68274 - matthiaskrgr:dead_code, r=Dylan-DPC\n\nremove dead code\n\nThe condition\n`if obligation.recursion_depth >= 0`\nis always true since `recursion_depth` is `usize`.\n\nThe else branch is dead code and can be removed.\n\nFound by Clippy.\n\nFixes #68251\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a529e70be1db5601b224eea741ccbab74f22b0c4", "html_url": "https://github.com/rust-lang/rust/commit/a529e70be1db5601b224eea741ccbab74f22b0c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a529e70be1db5601b224eea741ccbab74f22b0c4/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e797ff8d942d3823725b2326b906425433f2624", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e797ff8d942d3823725b2326b906425433f2624", "html_url": "https://github.com/rust-lang/rust/commit/6e797ff8d942d3823725b2326b906425433f2624"}, {"sha": "c4d91aae5a72733479bab8df1aee78bb049b9735", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4d91aae5a72733479bab8df1aee78bb049b9735", "html_url": "https://github.com/rust-lang/rust/commit/c4d91aae5a72733479bab8df1aee78bb049b9735"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "fb1c46834d3a04af79321b0e4b029df0bfe4e274", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a529e70be1db5601b224eea741ccbab74f22b0c4/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a529e70be1db5601b224eea741ccbab74f22b0c4/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=a529e70be1db5601b224eea741ccbab74f22b0c4", "patch": "@@ -3767,16 +3767,12 @@ impl<'tcx> TraitObligation<'tcx> {\n         // NOTE(flaper87): As of now, it keeps track of the whole error\n         // chain. Ideally, we should have a way to configure this either\n         // by using -Z verbose or just a CLI argument.\n-        if obligation.recursion_depth >= 0 {\n-            let derived_cause = DerivedObligationCause {\n-                parent_trait_ref: obligation.predicate.to_poly_trait_ref(),\n-                parent_code: Rc::new(obligation.cause.code.clone()),\n-            };\n-            let derived_code = variant(derived_cause);\n-            ObligationCause::new(obligation.cause.span, obligation.cause.body_id, derived_code)\n-        } else {\n-            obligation.cause.clone()\n-        }\n+        let derived_cause = DerivedObligationCause {\n+            parent_trait_ref: obligation.predicate.to_poly_trait_ref(),\n+            parent_code: Rc::new(obligation.cause.code.clone()),\n+        };\n+        let derived_code = variant(derived_cause);\n+        ObligationCause::new(obligation.cause.span, obligation.cause.body_id, derived_code)\n     }\n }\n "}]}