{"sha": "bad7ecbfc797372261f1067b1e738d943f2f17c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhZDdlY2JmYzc5NzM3MjI2MWYxMDY3YjFlNzM4ZDk0M2YyZjE3YzU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-10-02T22:54:43Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-10-07T18:18:49Z"}, "message": "Update RELEASES.md for 0.12.0", "tree": {"sha": "e3ac7c6aefdead573b3c6cf4497442d8f7a94fd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3ac7c6aefdead573b3c6cf4497442d8f7a94fd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bad7ecbfc797372261f1067b1e738d943f2f17c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bad7ecbfc797372261f1067b1e738d943f2f17c5", "html_url": "https://github.com/rust-lang/rust/commit/bad7ecbfc797372261f1067b1e738d943f2f17c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bad7ecbfc797372261f1067b1e738d943f2f17c5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea4d5d2a2448de8f2299f30dfa4fcc5b39ecd078", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea4d5d2a2448de8f2299f30dfa4fcc5b39ecd078", "html_url": "https://github.com/rust-lang/rust/commit/ea4d5d2a2448de8f2299f30dfa4fcc5b39ecd078"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "799475cb1a629e9656b0d6c43cf9b57eb1bbadac", "filename": "RELEASES.md", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/bad7ecbfc797372261f1067b1e738d943f2f17c5/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/bad7ecbfc797372261f1067b1e738d943f2f17c5/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=bad7ecbfc797372261f1067b1e738d943f2f17c5", "patch": "@@ -1,3 +1,99 @@\n+Version 0.12.0 (October 2014)\n+-----------------------------\n+\n+  * ~1700 changes, numerous bugfixes\n+\n+  * Highlights\n+\n+    * The introductory documentation (now called The Rust Guide) has\n+      been completely rewritten, as have a number of supplementary\n+      guides.\n+    * Rust's package manager, Cargo, is awesome.\n+    * Many API's in `std` have been reviewed and updated for\n+      consistency with the in-development Rust coding\n+      guidelines. The standard library documentation tracks\n+      stabilization progress.\n+    * Minor libraries have been moved out-of-tree to the rust-lang org\n+      on GitHub: uuid, semver, glob, num, hexfloat, fourcc. They can\n+      be installed with Cargo.\n+    * Lifetime elision allows lifetime annotations to be left off of\n+      function declarations in many common scenarios.\n+    * Rust now works on 64-bit Windows.\n+\n+  * Language\n+    * A new slicing syntax (e.g. `[0..4]`) has been introduced behind\n+      the 'slicing_syntax' feature gate, and can be overloaded with\n+      the `Slice` or `SliceMut` traits.\n+    * Indexing can be overloaded with the `Index` and `IndexMut`\n+      traits.\n+    * The `if let` construct takes a branch only if the `let` pattern\n+      matches, currently behind the 'if_let' feature gate.\n+    * `let` and `match` bindings and argument names in macros are now\n+      hygienic.\n+    * The `#[crate_id]` attribute is no longer supported; versioning\n+      is handled by the package manager.\n+    * Mutation and assignment is no longer allowed in pattern guards.\n+    * Generic structs and enums can now have trait bounds.\n+    * `use foo = bar` is now written `use bar as foo`.\n+    * The new, more efficient, closure types ('unboxed closures') have\n+      been added under a feature gate, 'unboxed_closures'. These will\n+      soon replace the existing closure types, once higher-ranked\n+      trait lifetimes are added to the language.\n+    * The `Share` trait is now called `Sync` to free up the term\n+      'shared' to refer to 'shared reference' (the default reference\n+      type.\n+    * Dynamically-sized types have been mostly implemented,\n+      unifying the behavior of fat-pointer types with the rest of the\n+      type system.\n+    * As part of dynamically-sized types, the `Sized` trait has been\n+      introduced, which qualifying types implement by default, and\n+      which type parameters expect by default. To specify that a type\n+      parametr does not need to be sized, write `<Sized? T>`. Most\n+      types are `Sized`, notable exceptions being unsized arrays\n+      (`[T]`) and trait types.\n+    * Closures can return `!`, as in `|| -> !` or `proc() ->`.\n+    * The syntax for matching of sub-slices has been changed to use a\n+      postfix `..` instead of prefix (.e.g. `[a, b, c..]`), for\n+      consistency with other uses of `..` and to future-proof\n+      potential additional uses of the syntax.\n+    * Matching of sub-slices in non-tail positions (e.g.  `[a.., b,\n+      c]`) has been put behind the 'advanced_slice_patterns' feature\n+      gate and may be removed in the future.\n+\n+  * Libraries\n+    * Library documentation has been improved for a number of modules.\n+    * Bit-vectors, collections::bitv has been modernized.\n+    * The url crate is deprecated in favor of\n+      http://github.com/servo/rust-url, which can be installed with\n+      Cargo.\n+    * Most I/O stream types can be cloned and subsequently closed\n+      from a different thread.\n+    * A `std::time::Duration` type has been added for use in I/O\n+      methods that rely on timers, as well as in the 'time' crate's\n+      `Timespec` arithmetic.\n+    * The green-thread scheduler, libgreen, has been removed, as\n+      has the associated runtime I/O abstraction layer.\n+\n+  * Tooling\n+    * rustdoc output now indicates the stability levels of API's.\n+    * The `--crate-name` flag can specify the name of the crate\n+      being compiled, like `#[crate_name]`.\n+    * The `-C metadata` specifies additional metada to hash into\n+      symbol names, and `-C extra-filename` specifies additional\n+      information to put into the output filename, for use by\n+      the package manager for versioning.\n+    * debug info generation has continued to improve and should be\n+      more reliable under both gdb and lldb.\n+    * rustc has experimental support for compiling in parallel\n+      using the `-C codegen-units` flag.\n+    * rustc no longer encodes rpath information into binaries by\n+      default.\n+\n+  * Misc\n+    * Stack usage has been optimized with LLVM lifetime annotations.\n+    * Official Rust binaries on Linux are more compatible with older\n+      kernels and distributions, built on CentOS 5.10.\n+\n Version 0.11.0 (July 2014)\n -------------------------\n "}]}