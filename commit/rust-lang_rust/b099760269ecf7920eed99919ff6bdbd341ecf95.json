{"sha": "b099760269ecf7920eed99919ff6bdbd341ecf95", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwOTk3NjAyNjllY2Y3OTIwZWVkOTk5MTlmZjZiZGJkMzQxZWNmOTU=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-08-26T05:26:45Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-08-26T05:26:45Z"}, "message": "Remove remaining use of 'pred' and make 'pred' a non-reserved word. Huzzah\\!", "tree": {"sha": "30b0a452380ba2b068e382ac28d7dba1e492bf3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30b0a452380ba2b068e382ac28d7dba1e492bf3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b099760269ecf7920eed99919ff6bdbd341ecf95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b099760269ecf7920eed99919ff6bdbd341ecf95", "html_url": "https://github.com/rust-lang/rust/commit/b099760269ecf7920eed99919ff6bdbd341ecf95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b099760269ecf7920eed99919ff6bdbd341ecf95/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63f9b43d36fe9d95d36c3d541c66df04c7c11618", "url": "https://api.github.com/repos/rust-lang/rust/commits/63f9b43d36fe9d95d36c3d541c66df04c7c11618", "html_url": "https://github.com/rust-lang/rust/commit/63f9b43d36fe9d95d36c3d541c66df04c7c11618"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "8ee2645fe5da18c8dc7a1752f0fb9560cb8cfcd3", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b099760269ecf7920eed99919ff6bdbd341ecf95/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b099760269ecf7920eed99919ff6bdbd341ecf95/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=b099760269ecf7920eed99919ff6bdbd341ecf95", "patch": "@@ -173,7 +173,6 @@ fn bad_expr_word_table() -> hashmap<str, ()> {\n     words.insert(\"fn\", ());\n     words.insert(\"block\", ());\n     words.insert(\"lambda\", ());\n-    words.insert(\"pred\", ()); // FIXME: remove\n     words.insert(\"pure\", ());\n     words.insert(\"iter\", ());\n     words.insert(\"block\", ());\n@@ -2135,11 +2134,6 @@ fn parse_item(p: &parser, attrs: &[ast::attribute]) -> option::t<@ast::item> {\n         expect_word(p, \"fn\");\n         ret some(parse_item_fn_or_iter(p, ast::pure_fn, ast::proto_fn, attrs,\n                                        ast::il_normal));\n-    }\n-    // FIXME: remove\n-    else if eat_word(p, \"pred\") {\n-        ret some(parse_item_fn_or_iter(p, ast::pure_fn, ast::proto_fn, attrs,\n-                                       ast::il_normal));\n     } else if eat_word(p, \"iter\") {\n         ret some(parse_item_fn_or_iter(p, ast::impure_fn, ast::proto_iter,\n                                        attrs, ast::il_normal));"}, {"sha": "eff9e9bfd28ef88d82a8eff0406cc7628cb90c6c", "filename": "src/lib/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b099760269ecf7920eed99919ff6bdbd341ecf95/src%2Flib%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b099760269ecf7920eed99919ff6bdbd341ecf95/src%2Flib%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstr.rs?ref=b099760269ecf7920eed99919ff6bdbd341ecf95", "patch": "@@ -156,10 +156,10 @@ fn is_ascii(s: str) -> bool {\n fn alloc(n_bytes: uint) -> str { ret rustrt::str_alloc(n_bytes); }\n \n /// Returns true if the string has length 0\n-pred is_empty(s: str) -> bool { for c: u8 in s { ret false; } ret true; }\n+pure fn is_empty(s: str) -> bool { for c: u8 in s { ret false; } ret true; }\n \n /// Returns true if the string has length greater than 0\n-pred is_not_empty(s: str) -> bool { !is_empty(s) }\n+pure fn is_not_empty(s: str) -> bool { !is_empty(s) }\n \n fn is_whitespace(s: str) -> bool {\n     let i = 0u;"}]}