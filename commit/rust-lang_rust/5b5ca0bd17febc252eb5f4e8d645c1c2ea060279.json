{"sha": "5b5ca0bd17febc252eb5f4e8d645c1c2ea060279", "node_id": "C_kwDOAAsO6NoAKDViNWNhMGJkMTdmZWJjMjUyZWI1ZjRlOGQ2NDVjMWMyZWEwNjAyNzk", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-03T11:49:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-03T11:49:23Z"}, "message": "Merge #11866\n\n11866: fix: Prevent underflow in range conversion  r=Veykril a=skyfmmf\n\nPreviously, when line numbers of Rust spans were converted to LSP ranges, they could underflow resulting in very large line numbers. As an underflow is always wrong, prevent it and use 0 instead.\r\n\r\nThis was noticed when opening an empty file in `src/bin/` of a library crate. In this case rustc produces a span with `\"line_start\": 0, \"line_end\": 0` resulting in the underflow.\n\nCo-authored-by: Felix Maurer <felix@felix-maurer.de>", "tree": {"sha": "7c443e49fe92b2afda322912f23a9e87972359e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c443e49fe92b2afda322912f23a9e87972359e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b5ca0bd17febc252eb5f4e8d645c1c2ea060279", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiSYnDCRBK7hj4Ov3rIwAAerAIAJZiYSpPuxkqt5fdxSUbVKwZ\nycnnSdTAp+B2q2Pxo+qMP+jmfBMm5Yz6hNjflT49Hn4U2oKE+tsswtpsoIgytvxx\nnITttGHH2rAvSCXIU+vibNi6YwIWEusyFVCy80ClZjBGsc/VaBDpKqHjL1AMB/bo\nuNp0JsqGPA612Bsi4cD0vUaV0Gbn4+1XVrWMe3Duspf42LDvUYG293XtuNup0840\nZL6I2P7kkU63sET7i8mrPahnc3APLp3F1kOS3whRXZ+ZshIGscn2GCMqxlKJZ3Ox\nfAi82eJOW+TfYWh63odMSVlkK6TEQdEMDxZoa5Hcq8sAIpqvwX/vDaahIX/VIwE=\n=wjE/\n-----END PGP SIGNATURE-----\n", "payload": "tree 7c443e49fe92b2afda322912f23a9e87972359e0\nparent f6bf7a3e411b90385b796340bd99feff135f9a3a\nparent feb8ccacba1d4e4ca01a5bd4aed80d4846724d08\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648986563 +0000\ncommitter GitHub <noreply@github.com> 1648986563 +0000\n\nMerge #11866\n\n11866: fix: Prevent underflow in range conversion  r=Veykril a=skyfmmf\n\nPreviously, when line numbers of Rust spans were converted to LSP ranges, they could underflow resulting in very large line numbers. As an underflow is always wrong, prevent it and use 0 instead.\r\n\r\nThis was noticed when opening an empty file in `src/bin/` of a library crate. In this case rustc produces a span with `\"line_start\": 0, \"line_end\": 0` resulting in the underflow.\n\nCo-authored-by: Felix Maurer <felix@felix-maurer.de>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b5ca0bd17febc252eb5f4e8d645c1c2ea060279", "html_url": "https://github.com/rust-lang/rust/commit/5b5ca0bd17febc252eb5f4e8d645c1c2ea060279", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b5ca0bd17febc252eb5f4e8d645c1c2ea060279/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6bf7a3e411b90385b796340bd99feff135f9a3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6bf7a3e411b90385b796340bd99feff135f9a3a", "html_url": "https://github.com/rust-lang/rust/commit/f6bf7a3e411b90385b796340bd99feff135f9a3a"}, {"sha": "feb8ccacba1d4e4ca01a5bd4aed80d4846724d08", "url": "https://api.github.com/repos/rust-lang/rust/commits/feb8ccacba1d4e4ca01a5bd4aed80d4846724d08", "html_url": "https://github.com/rust-lang/rust/commit/feb8ccacba1d4e4ca01a5bd4aed80d4846724d08"}], "stats": {"total": 117, "additions": 115, "deletions": 2}, "files": [{"sha": "df00b330b6e99f360433c40658a416884d8191c5", "filename": "crates/rust-analyzer/src/diagnostics/test_data/reasonable_line_numbers_from_empty_file.txt", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/5b5ca0bd17febc252eb5f4e8d645c1c2ea060279/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Freasonable_line_numbers_from_empty_file.txt", "raw_url": "https://github.com/rust-lang/rust/raw/5b5ca0bd17febc252eb5f4e8d645c1c2ea060279/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Freasonable_line_numbers_from_empty_file.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Freasonable_line_numbers_from_empty_file.txt?ref=5b5ca0bd17febc252eb5f4e8d645c1c2ea060279", "patch": "@@ -0,0 +1,64 @@\n+[\n+    MappedRustDiagnostic {\n+        url: Url {\n+            scheme: \"file\",\n+            cannot_be_a_base: false,\n+            username: \"\",\n+            password: None,\n+            host: None,\n+            port: None,\n+            path: \"/test/src/bin/current.rs\",\n+            query: None,\n+            fragment: None,\n+        },\n+        diagnostic: Diagnostic {\n+            range: Range {\n+                start: Position {\n+                    line: 0,\n+                    character: 0,\n+                },\n+                end: Position {\n+                    line: 0,\n+                    character: 0,\n+                },\n+            },\n+            severity: Some(\n+                Error,\n+            ),\n+            code: Some(\n+                String(\n+                    \"E0601\",\n+                ),\n+            ),\n+            code_description: Some(\n+                CodeDescription {\n+                    href: Url {\n+                        scheme: \"https\",\n+                        cannot_be_a_base: false,\n+                        username: \"\",\n+                        password: None,\n+                        host: Some(\n+                            Domain(\n+                                \"doc.rust-lang.org\",\n+                            ),\n+                        ),\n+                        port: None,\n+                        path: \"/error-index.html\",\n+                        query: None,\n+                        fragment: Some(\n+                            \"E0601\",\n+                        ),\n+                    },\n+                },\n+            ),\n+            source: Some(\n+                \"rustc\",\n+            ),\n+            message: \"`main` function not found in crate `current`\\nconsider adding a `main` function to `src/bin/current.rs`\",\n+            related_information: None,\n+            tags: None,\n+            data: None,\n+        },\n+        fix: None,\n+    },\n+]"}, {"sha": "45e46c1a06be1d7546fa4f1d16986f39a5d934fb", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 51, "deletions": 2, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/5b5ca0bd17febc252eb5f4e8d645c1c2ea060279/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b5ca0bd17febc252eb5f4e8d645c1c2ea060279/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=5b5ca0bd17febc252eb5f4e8d645c1c2ea060279", "patch": "@@ -63,8 +63,14 @@ fn location(\n \n     // FIXME: this doesn't handle UTF16 offsets correctly\n     let range = lsp_types::Range::new(\n-        lsp_types::Position::new(span.line_start as u32 - 1, span.column_start as u32 - 1),\n-        lsp_types::Position::new(span.line_end as u32 - 1, span.column_end as u32 - 1),\n+        lsp_types::Position::new(\n+            (span.line_start as u32).saturating_sub(1),\n+            (span.column_start as u32).saturating_sub(1),\n+        ),\n+        lsp_types::Position::new(\n+            (span.line_end as u32).saturating_sub(1),\n+            (span.column_end as u32).saturating_sub(1),\n+        ),\n     );\n \n     lsp_types::Location { uri, range }\n@@ -1674,4 +1680,47 @@ mod tests {\n             expect_file![\"./test_data/snap_multi_line_fix.txt\"],\n         );\n     }\n+\n+    #[test]\n+    fn reasonable_line_numbers_from_empty_file() {\n+        check(\n+            r##\"{\n+                \"message\": \"`main` function not found in crate `current`\",\n+                \"code\": {\n+                    \"code\": \"E0601\",\n+                    \"explanation\": \"No `main` function was found in a binary crate.\\n\\nTo fix this error, add a `main` function:\\n\\n```\\nfn main() {\\n    // Your program will start here.\\n    println!(\\\"Hello world!\\\");\\n}\\n```\\n\\nIf you don't know the basics of Rust, you can look at the\\n[Rust Book][rust-book] to get started.\\n\\n[rust-book]: https://doc.rust-lang.org/book/\\n\"\n+                },\n+                \"level\": \"error\",\n+                \"spans\": [\n+                    {\n+                        \"file_name\": \"src/bin/current.rs\",\n+                        \"byte_start\": 0,\n+                        \"byte_end\": 0,\n+                        \"line_start\": 0,\n+                        \"line_end\": 0,\n+                        \"column_start\": 1,\n+                        \"column_end\": 1,\n+                        \"is_primary\": true,\n+                        \"text\": [],\n+                        \"label\": null,\n+                        \"suggested_replacement\": null,\n+                        \"suggestion_applicability\": null,\n+                        \"expansion\": null\n+                    }\n+                ],\n+                \"children\": [\n+                    {\n+                        \"message\": \"consider adding a `main` function to `src/bin/current.rs`\",\n+                        \"code\": null,\n+                        \"level\": \"note\",\n+                        \"spans\": [],\n+                        \"children\": [],\n+                        \"rendered\": null\n+                    }\n+                ],\n+                \"rendered\": \"error[E0601]: `main` function not found in crate `current`\\n  |\\n  = note: consider adding a `main` function to `src/bin/current.rs`\\n\\n\"\n+            }\"##,\n+            expect_file![\"./test_data/reasonable_line_numbers_from_empty_file.txt\"],\n+        );\n+    }\n }"}]}