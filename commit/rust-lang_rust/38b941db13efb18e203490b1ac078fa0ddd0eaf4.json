{"sha": "38b941db13efb18e203490b1ac078fa0ddd0eaf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4Yjk0MWRiMTNlZmIxOGUyMDM0OTBiMWFjMDc4ZmEwZGRkMGVhZjQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-04T10:29:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-04T10:29:07Z"}, "message": "Cleanup unused marks", "tree": {"sha": "16f9773fd9fc3683b4c534af0531413ee6f411af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16f9773fd9fc3683b4c534af0531413ee6f411af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38b941db13efb18e203490b1ac078fa0ddd0eaf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38b941db13efb18e203490b1ac078fa0ddd0eaf4", "html_url": "https://github.com/rust-lang/rust/commit/38b941db13efb18e203490b1ac078fa0ddd0eaf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38b941db13efb18e203490b1ac078fa0ddd0eaf4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfdb6321acbe30704ef07ba7a2257f860a7a1398", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfdb6321acbe30704ef07ba7a2257f860a7a1398", "html_url": "https://github.com/rust-lang/rust/commit/dfdb6321acbe30704ef07ba7a2257f860a7a1398"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "0d4fa5b67363cdbdeda636b0e7900e3444c7b389", "filename": "crates/ra_hir/src/marks.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/38b941db13efb18e203490b1ac078fa0ddd0eaf4/crates%2Fra_hir%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38b941db13efb18e203490b1ac078fa0ddd0eaf4/crates%2Fra_hir%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmarks.rs?ref=38b941db13efb18e203490b1ac078fa0ddd0eaf4", "patch": "@@ -1,20 +1,10 @@\n //! See test_utils/src/marks.rs\n \n test_utils::marks!(\n-    bogus_paths\n-    // FIXME: restore this mark once hir is split\n-    name_res_works_for_broken_modules\n-    can_import_enum_variant\n     type_var_cycles_resolve_completely\n     type_var_cycles_resolve_as_possible\n     type_var_resolves_to_int_var\n-    glob_enum\n-    glob_across_crates\n-    std_prelude\n     match_ergonomics_ref\n     infer_while_let\n-    macro_rules_from_other_crates_are_visible_with_macro_use\n-    prelude_is_macro_use\n     coerce_merge_fail_fallback\n-    macro_dollar_crate_self\n );"}]}