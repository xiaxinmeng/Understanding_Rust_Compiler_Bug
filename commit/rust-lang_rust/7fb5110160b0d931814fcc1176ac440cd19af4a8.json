{"sha": "7fb5110160b0d931814fcc1176ac440cd19af4a8", "node_id": "C_kwDOAAsO6NoAKDdmYjUxMTAxNjBiMGQ5MzE4MTRmY2MxMTc2YWM0NDBjZDE5YWY0YTg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-30T23:21:22Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-30T23:21:22Z"}, "message": "normalize away some more line numbers", "tree": {"sha": "44749671b935d9acb99ccd8d5be8af4f5fee2e94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44749671b935d9acb99ccd8d5be8af4f5fee2e94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fb5110160b0d931814fcc1176ac440cd19af4a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fb5110160b0d931814fcc1176ac440cd19af4a8", "html_url": "https://github.com/rust-lang/rust/commit/7fb5110160b0d931814fcc1176ac440cd19af4a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fb5110160b0d931814fcc1176ac440cd19af4a8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d455421edcb0c0084207d44b206ee1032913e580", "url": "https://api.github.com/repos/rust-lang/rust/commits/d455421edcb0c0084207d44b206ee1032913e580", "html_url": "https://github.com/rust-lang/rust/commit/d455421edcb0c0084207d44b206ee1032913e580"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "56bfc6092b7eba7e46712704ec8ef1ee6b8c136f", "filename": "tests/compile-fail/generator-pinned-moved.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7fb5110160b0d931814fcc1176ac440cd19af4a8/tests%2Fcompile-fail%2Fgenerator-pinned-moved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7fb5110160b0d931814fcc1176ac440cd19af4a8/tests%2Fcompile-fail%2Fgenerator-pinned-moved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fgenerator-pinned-moved.stderr?ref=7fb5110160b0d931814fcc1176ac440cd19af4a8", "patch": "@@ -8,12 +8,12 @@ LL |         *num += 1;\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n            \n    = note: inside closure at $DIR/generator-pinned-moved.rs:LL:CC\n-note: inside `<GeneratorIteratorAdapter<[static generator@$DIR/generator-pinned-moved.rs:LL:CC: 16:6]> as std::iter::Iterator>::next` at $DIR/generator-pinned-moved.rs:LL:CC\n+note: inside `<GeneratorIteratorAdapter<[static generator@$DIR/generator-pinned-moved.rs:LL:CC]> as std::iter::Iterator>::next` at $DIR/generator-pinned-moved.rs:LL:CC\n   --> $DIR/generator-pinned-moved.rs:LL:CC\n    |\n LL |         match me.resume(()) {\n    |               ^^^^^^^^^^^^^\n-   = note: inside `<std::boxed::Box<GeneratorIteratorAdapter<[static generator@$DIR/generator-pinned-moved.rs:LL:CC: 16:6]>> as std::iter::Iterator>::next` at rustc_src/src/boxed.rs:LL:CC\n+   = note: inside `<std::boxed::Box<GeneratorIteratorAdapter<[static generator@$DIR/generator-pinned-moved.rs:LL:CC]>> as std::iter::Iterator>::next` at rustc_src/src/boxed.rs:LL:CC\n note: inside `main` at $DIR/generator-pinned-moved.rs:LL:CC\n   --> $DIR/generator-pinned-moved.rs:LL:CC\n    |"}, {"sha": "5030391bc6eae0ca49cc78c9e3bbb57179b916cd", "filename": "tests/compile-fail/panic/bad_unwind.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7fb5110160b0d931814fcc1176ac440cd19af4a8/tests%2Fcompile-fail%2Fpanic%2Fbad_unwind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7fb5110160b0d931814fcc1176ac440cd19af4a8/tests%2Fcompile-fail%2Fpanic%2Fbad_unwind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fbad_unwind.stderr?ref=7fb5110160b0d931814fcc1176ac440cd19af4a8", "patch": "@@ -10,9 +10,9 @@ LL |     std::panic::catch_unwind(|| unwind()).unwrap_err();\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n            \n    = note: inside closure at $DIR/bad_unwind.rs:LL:CC\n-   = note: inside `std::panicking::r#try::do_call::<[closure@$DIR/bad_unwind.rs:LL:CC: 13:41], ()>` at rustc_src/src/panicking.rs:LL:CC\n-   = note: inside `std::panicking::r#try::<(), [closure@$DIR/bad_unwind.rs:LL:CC: 13:41]>` at rustc_src/src/panicking.rs:LL:CC\n-   = note: inside `std::panic::catch_unwind::<[closure@$DIR/bad_unwind.rs:LL:CC: 13:41], ()>` at rustc_src/src/panic.rs:LL:CC\n+   = note: inside `std::panicking::r#try::do_call::<[closure@$DIR/bad_unwind.rs:LL:CC], ()>` at rustc_src/src/panicking.rs:LL:CC\n+   = note: inside `std::panicking::r#try::<(), [closure@$DIR/bad_unwind.rs:LL:CC]>` at rustc_src/src/panicking.rs:LL:CC\n+   = note: inside `std::panic::catch_unwind::<[closure@$DIR/bad_unwind.rs:LL:CC], ()>` at rustc_src/src/panic.rs:LL:CC\n note: inside `main` at $DIR/bad_unwind.rs:LL:CC\n   --> $DIR/bad_unwind.rs:LL:CC\n    |"}, {"sha": "804bb0f92af84f56ba5126068e056081708355ec", "filename": "tests/compile-fail/stacked_borrows/deallocate_against_barrier1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7fb5110160b0d931814fcc1176ac440cd19af4a8/tests%2Fcompile-fail%2Fstacked_borrows%2Fdeallocate_against_barrier1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7fb5110160b0d931814fcc1176ac440cd19af4a8/tests%2Fcompile-fail%2Fstacked_borrows%2Fdeallocate_against_barrier1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fdeallocate_against_barrier1.stderr?ref=7fb5110160b0d931814fcc1176ac440cd19af4a8", "patch": "@@ -13,7 +13,7 @@ note: inside closure at $DIR/deallocate_against_barrier1.rs:LL:CC\n    |\n LL |         drop(unsafe { Box::from_raw(raw) });\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: inside `<[closure@$DIR/deallocate_against_barrier1.rs:LL:CC: 12:6] as std::ops::FnOnce<(&mut i32,)>>::call_once - shim` at rustc_src/src/ops/function.rs:LL:CC\n+   = note: inside `<[closure@$DIR/deallocate_against_barrier1.rs:LL:CC] as std::ops::FnOnce<(&mut i32,)>>::call_once - shim` at rustc_src/src/ops/function.rs:LL:CC\n note: inside `inner` at $DIR/deallocate_against_barrier1.rs:LL:CC\n   --> $DIR/deallocate_against_barrier1.rs:LL:CC\n    |"}, {"sha": "41a32a6280a7a6ea15aee104e8c7c5b16638996b", "filename": "tests/compile-fail/stacked_borrows/deallocate_against_barrier2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7fb5110160b0d931814fcc1176ac440cd19af4a8/tests%2Fcompile-fail%2Fstacked_borrows%2Fdeallocate_against_barrier2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7fb5110160b0d931814fcc1176ac440cd19af4a8/tests%2Fcompile-fail%2Fstacked_borrows%2Fdeallocate_against_barrier2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fdeallocate_against_barrier2.stderr?ref=7fb5110160b0d931814fcc1176ac440cd19af4a8", "patch": "@@ -13,7 +13,7 @@ note: inside closure at $DIR/deallocate_against_barrier2.rs:LL:CC\n    |\n LL |         drop(unsafe { Box::from_raw(raw) });\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: inside `<[closure@$DIR/deallocate_against_barrier2.rs:LL:CC: 16:6] as std::ops::FnOnce<(&std::cell::Cell<i32>,)>>::call_once - shim` at rustc_src/src/ops/function.rs:LL:CC\n+   = note: inside `<[closure@$DIR/deallocate_against_barrier2.rs:LL:CC] as std::ops::FnOnce<(&std::cell::Cell<i32>,)>>::call_once - shim` at rustc_src/src/ops/function.rs:LL:CC\n note: inside `inner` at $DIR/deallocate_against_barrier2.rs:LL:CC\n   --> $DIR/deallocate_against_barrier2.rs:LL:CC\n    |"}, {"sha": "cf053fccb478be1549b58796b44b360460bfa7f2", "filename": "tests/compiletest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7fb5110160b0d931814fcc1176ac440cd19af4a8/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fb5110160b0d931814fcc1176ac440cd19af4a8/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=7fb5110160b0d931814fcc1176ac440cd19af4a8", "patch": "@@ -80,7 +80,7 @@ regexes! {\n regexes! {\n     STDERR:\n     // erase line and column info\n-    r\"\\.rs:[0-9]+:[0-9]+\"            => \".rs:LL:CC\",\n+    r\"\\.rs:[0-9]+:[0-9]+(: [0-9]+:[0-9]+)?\" => \".rs:LL:CC\",\n     // erase alloc ids\n     \"alloc[0-9]+\"                    => \"ALLOC\",\n     // erase Stacked Borrows tags"}]}