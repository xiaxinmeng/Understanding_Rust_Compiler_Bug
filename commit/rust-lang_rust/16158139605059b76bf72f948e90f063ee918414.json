{"sha": "16158139605059b76bf72f948e90f063ee918414", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MTU4MTM5NjA1MDU5Yjc2YmY3MmY5NDhlOTBmMDYzZWU5MTg0MTQ=", "commit": {"author": {"name": "Adam Lusch", "email": "alusch@gmail.com", "date": "2018-01-15T03:58:09Z"}, "committer": {"name": "Adam Lusch", "email": "alusch@gmail.com", "date": "2018-01-15T03:58:09Z"}, "message": "Moves `clone_on_ref_ptr` to be a restriction lint\n\nAlso updates the suggestion to include the full type (e.g. `Arc<Foo>::clone(&rc)`)\nand adds a case using trait objects to the UI tests.", "tree": {"sha": "bc0b43dd9b5a718a0ccd9912b6e3441a5d9770c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc0b43dd9b5a718a0ccd9912b6e3441a5d9770c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16158139605059b76bf72f948e90f063ee918414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16158139605059b76bf72f948e90f063ee918414", "html_url": "https://github.com/rust-lang/rust/commit/16158139605059b76bf72f948e90f063ee918414", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16158139605059b76bf72f948e90f063ee918414/comments", "author": {"login": "alusch", "id": 5668977, "node_id": "MDQ6VXNlcjU2Njg5Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5668977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alusch", "html_url": "https://github.com/alusch", "followers_url": "https://api.github.com/users/alusch/followers", "following_url": "https://api.github.com/users/alusch/following{/other_user}", "gists_url": "https://api.github.com/users/alusch/gists{/gist_id}", "starred_url": "https://api.github.com/users/alusch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alusch/subscriptions", "organizations_url": "https://api.github.com/users/alusch/orgs", "repos_url": "https://api.github.com/users/alusch/repos", "events_url": "https://api.github.com/users/alusch/events{/privacy}", "received_events_url": "https://api.github.com/users/alusch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alusch", "id": 5668977, "node_id": "MDQ6VXNlcjU2Njg5Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5668977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alusch", "html_url": "https://github.com/alusch", "followers_url": "https://api.github.com/users/alusch/followers", "following_url": "https://api.github.com/users/alusch/following{/other_user}", "gists_url": "https://api.github.com/users/alusch/gists{/gist_id}", "starred_url": "https://api.github.com/users/alusch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alusch/subscriptions", "organizations_url": "https://api.github.com/users/alusch/orgs", "repos_url": "https://api.github.com/users/alusch/repos", "events_url": "https://api.github.com/users/alusch/events{/privacy}", "received_events_url": "https://api.github.com/users/alusch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41a710e3f4d52f08a487b22debd5940fe705e38b", "url": "https://api.github.com/repos/rust-lang/rust/commits/41a710e3f4d52f08a487b22debd5940fe705e38b", "html_url": "https://github.com/rust-lang/rust/commit/41a710e3f4d52f08a487b22debd5940fe705e38b"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "8803c4e3019b67668c1ca23c98378fe551b41f32", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/16158139605059b76bf72f948e90f063ee918414/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16158139605059b76bf72f948e90f063ee918414/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=16158139605059b76bf72f948e90f063ee918414", "patch": "@@ -361,9 +361,8 @@ declare_lint! {\n /// ```rust\n /// x.clone()\n /// ```\n-declare_lint! {\n+declare_restriction_lint! {\n     pub CLONE_ON_REF_PTR,\n-    Warn,\n     \"using 'clone' on a ref-counted pointer\"\n }\n \n@@ -1013,24 +1012,26 @@ fn lint_clone_on_copy(cx: &LateContext, expr: &hir::Expr, arg: &hir::Expr, arg_t\n fn lint_clone_on_ref_ptr(cx: &LateContext, expr: &hir::Expr, arg: &hir::Expr) {\n     let (obj_ty, _) = walk_ptrs_ty_depth(cx.tables.expr_ty(arg));\n \n-    let caller_type = if match_type(cx, obj_ty, &paths::RC) {\n-        \"Rc\"\n-    } else if match_type(cx, obj_ty, &paths::ARC) {\n-        \"Arc\"\n-    } else if match_type(cx, obj_ty, &paths::WEAK_RC) || match_type(cx, obj_ty, &paths::WEAK_ARC) {\n-        \"Weak\"\n-    } else {\n-        return;\n-    };\n+    if let ty::TyAdt(_, subst) = obj_ty.sty {\n+        let caller_type = if match_type(cx, obj_ty, &paths::RC) {\n+            \"Rc\"\n+        } else if match_type(cx, obj_ty, &paths::ARC) {\n+            \"Arc\"\n+        } else if match_type(cx, obj_ty, &paths::WEAK_RC) || match_type(cx, obj_ty, &paths::WEAK_ARC) {\n+            \"Weak\"\n+        } else {\n+            return;\n+        };\n \n-    span_lint_and_sugg(\n-        cx,\n-        CLONE_ON_REF_PTR,\n-        expr.span,\n-        \"using '.clone()' on a ref-counted pointer\",\n-        \"try this\",\n-        format!(\"{}::clone(&{})\", caller_type, snippet(cx, arg.span, \"_\")),\n-    );\n+        span_lint_and_sugg(\n+            cx,\n+            CLONE_ON_REF_PTR,\n+            expr.span,\n+            \"using '.clone()' on a ref-counted pointer\",\n+            \"try this\",\n+            format!(\"{}<{}>::clone(&{})\", caller_type, subst.type_at(0), snippet(cx, arg.span, \"_\")),\n+        );\n+    }\n }\n \n "}, {"sha": "96166ed4f139aa5c2e518bbbaa13f983d4772cdf", "filename": "tests/ui/unnecessary_clone.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/16158139605059b76bf72f948e90f063ee918414/tests%2Fui%2Funnecessary_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16158139605059b76bf72f948e90f063ee918414/tests%2Fui%2Funnecessary_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_clone.rs?ref=16158139605059b76bf72f948e90f063ee918414", "patch": "@@ -1,10 +1,15 @@\n+#![warn(clone_on_ref_ptr)]\n #![allow(unused)]\n \n use std::collections::HashSet;\n use std::collections::VecDeque;\n use std::rc::{self, Rc};\n use std::sync::{self, Arc};\n \n+trait SomeTrait {}\n+struct SomeImpl;\n+impl SomeTrait for SomeImpl {}\n+\n fn main() {}\n \n fn clone_on_copy() {\n@@ -34,7 +39,8 @@ fn clone_on_ref_ptr() {\n     arc_weak.clone();\n     sync::Weak::clone(&arc_weak);\n \n-\n+    let x = Arc::new(SomeImpl);\n+    let _: Arc<SomeTrait> = x.clone(); \n }\n \n fn clone_on_copy_generic<T: Copy>(t: T) {"}]}