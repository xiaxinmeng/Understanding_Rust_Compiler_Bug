{"sha": "ec6bba319b90533964dec26b7e0832ca9a1acf87", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNmJiYTMxOWI5MDUzMzk2NGRlYzI2YjdlMDgzMmNhOWExYWNmODc=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-07T03:29:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-07T03:29:13Z"}, "message": "Rollup merge of #52067 - csmoe:issue-51167, r=nikomatsakis\n\nVisit the mir basic blocks in reverse-postfix order\n\ncc #51167\nr? @nikomatsakis", "tree": {"sha": "1ef8a26c269472fcdf8f074dd09c78b49355cd52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ef8a26c269472fcdf8f074dd09c78b49355cd52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec6bba319b90533964dec26b7e0832ca9a1acf87", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbQDOJCRBK7hj4Ov3rIwAAdHIIAF6p5nLmX2DwIakbvHc1wOD/\n4ZJ60BK1dQmdf9JeeOFFY0gaKukshtEKAZVMovRRNGWyFMg8xFPsBc4ViGygo/8P\nYm4xIX6fuwHCuMKjoDf4t8JRpk9Q9LiQ4z9MT0D7E25Aya703shCJo2NmREAd3rI\nrklKaqjybxZdzFSE5aoeKkoNj2cZWJkgddudbPb1WhqvAp5H6OpqO9y/EeJJ+LEr\n28HNQpWy3o56YGHd7TVVjiSdciNdigxsR0yVU+M57yyINWjHdP79ol8mA9DAVy/r\neuLGd80Ques5KHBRQgy+HhcvpXYHqA+YKBD2QfnafogcuhljfzMBxn98+JvNb5c=\n=T6i4\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ef8a26c269472fcdf8f074dd09c78b49355cd52\nparent b71b92199c5a04e41b10bcd09333ca8762933bdc\nparent e7e8c72fdd0195358b4fe82f16fce81668ef0c3c\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1530934153 -0600\ncommitter GitHub <noreply@github.com> 1530934153 -0600\n\nRollup merge of #52067 - csmoe:issue-51167, r=nikomatsakis\n\nVisit the mir basic blocks in reverse-postfix order\n\ncc #51167\nr? @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec6bba319b90533964dec26b7e0832ca9a1acf87", "html_url": "https://github.com/rust-lang/rust/commit/ec6bba319b90533964dec26b7e0832ca9a1acf87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec6bba319b90533964dec26b7e0832ca9a1acf87/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b71b92199c5a04e41b10bcd09333ca8762933bdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b71b92199c5a04e41b10bcd09333ca8762933bdc", "html_url": "https://github.com/rust-lang/rust/commit/b71b92199c5a04e41b10bcd09333ca8762933bdc"}, {"sha": "e7e8c72fdd0195358b4fe82f16fce81668ef0c3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c", "html_url": "https://github.com/rust-lang/rust/commit/e7e8c72fdd0195358b4fe82f16fce81668ef0c3c"}], "stats": {"total": 90, "additions": 45, "deletions": 45}, "files": [{"sha": "e3b67b0a003efd2b202deafa16a4953f5466e885", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=ec6bba319b90533964dec26b7e0832ca9a1acf87", "patch": "@@ -17,6 +17,7 @@ use rustc_data_structures::work_queue::WorkQueue;\n \n use rustc::ty::{self, TyCtxt};\n use rustc::mir::{self, Mir, BasicBlock, BasicBlockData, Location, Statement, Terminator};\n+use rustc::mir::traversal;\n use rustc::session::Session;\n \n use std::borrow::Borrow;\n@@ -332,7 +333,7 @@ pub(crate) trait DataflowResultsConsumer<'a, 'tcx: 'a> {\n \n     fn analyze_results(&mut self, flow_uninit: &mut Self::FlowState) {\n         let flow = flow_uninit;\n-        for bb in self.mir().basic_blocks().indices() {\n+        for (bb, _) in traversal::reverse_postorder(self.mir()) {\n             flow.reset_to_entry_of(bb);\n             self.process_basic_block(bb, flow);\n         }"}, {"sha": "32a9783e9c213137c4ec9064c12aaa6586d26ca5", "filename": "src/test/ui/issue-47184.stderr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Ftest%2Fui%2Fissue-47184.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Ftest%2Fui%2Fissue-47184.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47184.stderr?ref=ec6bba319b90533964dec26b7e0832ca9a1acf87", "patch": "@@ -2,10 +2,9 @@ error[E0597]: borrowed value does not live long enough\n   --> $DIR/issue-47184.rs:14:44\n    |\n LL |     let _vec: Vec<&'static String> = vec![&String::new()];\n-   |                                            ^^^^^^^^^^^^^ temporary value does not live long enough\n-LL |     //~^ ERROR borrowed value does not live long enough [E0597]\n-LL | }\n-   | - temporary value only lives until here\n+   |                                            ^^^^^^^^^^^^^ - temporary value only lives until here\n+   |                                            |\n+   |                                            temporary value does not live long enough\n    |\n    = note: borrowed value must be valid for the static lifetime...\n "}, {"sha": "75194bf55bc9f1a3b9864d3648790578ea782852", "filename": "src/test/ui/nll/get_default.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Ftest%2Fui%2Fnll%2Fget_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Ftest%2Fui%2Fnll%2Fget_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fget_default.stderr?ref=ec6bba319b90533964dec26b7e0832ca9a1acf87", "patch": "@@ -55,6 +55,18 @@ LL | |     }\n LL | | }\n    | |_^\n \n+error[E0502]: cannot borrow `*map` as mutable because it is also borrowed as immutable (Mir)\n+  --> $DIR/get_default.rs:45:17\n+   |\n+LL |         match map.get() {\n+   |               --- immutable borrow occurs here\n+LL |             Some(v) => {\n+LL |                 map.set(String::new()); // Both AST and MIR error here\n+   |                 ^^^ mutable borrow occurs here\n+...\n+LL |                 return v;\n+   |                        - borrow later used here\n+\n error[E0502]: cannot borrow `*map` as mutable because it is also borrowed as immutable (Mir)\n   --> $DIR/get_default.rs:51:17\n    |\n@@ -76,18 +88,6 @@ LL | |     }\n LL | | }\n    | |_^\n \n-error[E0502]: cannot borrow `*map` as mutable because it is also borrowed as immutable (Mir)\n-  --> $DIR/get_default.rs:45:17\n-   |\n-LL |         match map.get() {\n-   |               --- immutable borrow occurs here\n-LL |             Some(v) => {\n-LL |                 map.set(String::new()); // Both AST and MIR error here\n-   |                 ^^^ mutable borrow occurs here\n-...\n-LL |                 return v;\n-   |                        - borrow later used here\n-\n error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0502`."}, {"sha": "cbb9d0429c616350bcf11d035b5a382bf0cfa39d", "filename": "src/test/ui/span/dropck_arr_cycle_checked.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.nll.stderr?ref=ec6bba319b90533964dec26b7e0832ca9a1acf87", "patch": "@@ -1,7 +1,7 @@\n-error[E0597]: `b1` does not live long enough\n-  --> $DIR/dropck_arr_cycle_checked.rs:111:24\n+error[E0597]: `b3` does not live long enough\n+  --> $DIR/dropck_arr_cycle_checked.rs:105:24\n    |\n-LL |     b3.a[0].v.set(Some(&b1));\n+LL |     b1.a[1].v.set(Some(&b3));\n    |                        ^^^ borrowed value does not live long enough\n ...\n LL | }\n@@ -22,10 +22,10 @@ LL | }\n    | borrowed value only lives until here\n    | borrow later used here, when `b1` is dropped\n \n-error[E0597]: `b3` does not live long enough\n-  --> $DIR/dropck_arr_cycle_checked.rs:105:24\n+error[E0597]: `b1` does not live long enough\n+  --> $DIR/dropck_arr_cycle_checked.rs:111:24\n    |\n-LL |     b1.a[1].v.set(Some(&b3));\n+LL |     b3.a[0].v.set(Some(&b1));\n    |                        ^^^ borrowed value does not live long enough\n ...\n LL | }"}, {"sha": "37fffe886e30950cc2882aec517ece53f6b9812a", "filename": "src/test/ui/span/dropck_direct_cycle_with_drop.nll.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.nll.stderr?ref=ec6bba319b90533964dec26b7e0832ca9a1acf87", "patch": "@@ -1,9 +1,9 @@\n-error[E0597]: `d1` does not live long enough\n-  --> $DIR/dropck_direct_cycle_with_drop.rs:48:19\n+error[E0597]: `d2` does not live long enough\n+  --> $DIR/dropck_direct_cycle_with_drop.rs:46:19\n    |\n-LL |     d2.p.set(Some(&d1));\n+LL |     d1.p.set(Some(&d2));\n    |                   ^^^ borrowed value does not live long enough\n-LL |     //~^ ERROR `d1` does not live long enough\n+...\n LL | }\n    | -\n    | |\n@@ -12,12 +12,12 @@ LL | }\n    |\n    = note: values in a scope are dropped in the opposite order they are defined\n \n-error[E0597]: `d2` does not live long enough\n-  --> $DIR/dropck_direct_cycle_with_drop.rs:46:19\n+error[E0597]: `d1` does not live long enough\n+  --> $DIR/dropck_direct_cycle_with_drop.rs:48:19\n    |\n-LL |     d1.p.set(Some(&d2));\n+LL |     d2.p.set(Some(&d1));\n    |                   ^^^ borrowed value does not live long enough\n-...\n+LL |     //~^ ERROR `d1` does not live long enough\n LL | }\n    | -\n    | |"}, {"sha": "13bd1f54198212077863744198898998f925bef6", "filename": "src/test/ui/span/dropck_vec_cycle_checked.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.nll.stderr?ref=ec6bba319b90533964dec26b7e0832ca9a1acf87", "patch": "@@ -1,7 +1,7 @@\n-error[E0597]: `c1` does not live long enough\n-  --> $DIR/dropck_vec_cycle_checked.rs:121:24\n+error[E0597]: `c3` does not live long enough\n+  --> $DIR/dropck_vec_cycle_checked.rs:115:24\n    |\n-LL |     c3.v[0].v.set(Some(&c1));\n+LL |     c1.v[1].v.set(Some(&c3));\n    |                        ^^^ borrowed value does not live long enough\n ...\n LL | }\n@@ -22,10 +22,10 @@ LL | }\n    | borrowed value only lives until here\n    | borrow later used here, when `c1` is dropped\n \n-error[E0597]: `c3` does not live long enough\n-  --> $DIR/dropck_vec_cycle_checked.rs:115:24\n+error[E0597]: `c1` does not live long enough\n+  --> $DIR/dropck_vec_cycle_checked.rs:121:24\n    |\n-LL |     c1.v[1].v.set(Some(&c3));\n+LL |     c3.v[0].v.set(Some(&c1));\n    |                        ^^^ borrowed value does not live long enough\n ...\n LL | }"}, {"sha": "100b4c1292f44ad73c36be2c8ea02c36fb600d69", "filename": "src/test/ui/span/vec-must-not-hide-type-from-dropck.nll.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec6bba319b90533964dec26b7e0832ca9a1acf87/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.nll.stderr?ref=ec6bba319b90533964dec26b7e0832ca9a1acf87", "patch": "@@ -1,21 +1,21 @@\n-error[E0597]: `c1` does not live long enough\n-  --> $DIR/vec-must-not-hide-type-from-dropck.rs:129:24\n+error[E0597]: `c2` does not live long enough\n+  --> $DIR/vec-must-not-hide-type-from-dropck.rs:127:24\n    |\n-LL |     c2.v[0].v.set(Some(&c1));\n+LL |     c1.v[0].v.set(Some(&c2));\n    |                        ^^^ borrowed value does not live long enough\n-LL |     //~^ ERROR `c1` does not live long enough\n+...\n LL | }\n    | -\n    | |\n    | borrowed value only lives until here\n    | borrow later used here, when `c1` is dropped\n \n-error[E0597]: `c2` does not live long enough\n-  --> $DIR/vec-must-not-hide-type-from-dropck.rs:127:24\n+error[E0597]: `c1` does not live long enough\n+  --> $DIR/vec-must-not-hide-type-from-dropck.rs:129:24\n    |\n-LL |     c1.v[0].v.set(Some(&c2));\n+LL |     c2.v[0].v.set(Some(&c1));\n    |                        ^^^ borrowed value does not live long enough\n-...\n+LL |     //~^ ERROR `c1` does not live long enough\n LL | }\n    | -\n    | |"}]}