{"sha": "664222a4e2223e5b6505d027b36b4deebb9865ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NDIyMmE0ZTIyMjNlNWI2NTA1ZDAyN2IzNmI0ZGVlYmI5ODY1YWM=", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2020-06-01T13:36:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-01T13:36:45Z"}, "message": "Remove allow missing_debug_implementations for MaybeUninit\n\nIt already has a Debug implementation.", "tree": {"sha": "614a08810575fed9c6b96e878539402bc0c15c93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/614a08810575fed9c6b96e878539402bc0c15c93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/664222a4e2223e5b6505d027b36b4deebb9865ac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe1QRtCRBK7hj4Ov3rIwAAdHIIAIXSnahjLTFhOtvb1TwiYerw\njUnNz3RlXOUP3RPgBVvaNcX77/2PKaPU/h5+jTgp+6JrHeQ7iLixrH4Mr9ElgJ0C\neBLp+nDGRCq6jBmOnAcO9ox4QCFhfIaqVIUXLH+3/9Q+CfhlmP0qFAE/sljmYkHF\nCrvZP0QNSNW+M6C3wMgPNKXrVeMExEgHlyiUq4iqHsaevN1RYXOV5XH5dgR+eCpD\nUM+1gbqXvekoKb/o2moNkS4IipqE2BcpErXiv3G8CZrMrDLK6uxJxTbTHv/7XuHQ\n/6udB1h8W2Ct2eZU/cw5lq7rQG0QGoRzS2Bshd3pvhRp37FtYpbe36h4GvHCo5E=\n=cK6O\n-----END PGP SIGNATURE-----\n", "payload": "tree 614a08810575fed9c6b96e878539402bc0c15c93\nparent b85e3fe010413b8c528d4de593d912a5ba024653\nauthor Konrad Borowski <konrad@borowski.pw> 1591018605 +0200\ncommitter GitHub <noreply@github.com> 1591018605 +0200\n\nRemove allow missing_debug_implementations for MaybeUninit\n\nIt already has a Debug implementation."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/664222a4e2223e5b6505d027b36b4deebb9865ac", "html_url": "https://github.com/rust-lang/rust/commit/664222a4e2223e5b6505d027b36b4deebb9865ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/664222a4e2223e5b6505d027b36b4deebb9865ac/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b85e3fe010413b8c528d4de593d912a5ba024653", "url": "https://api.github.com/repos/rust-lang/rust/commits/b85e3fe010413b8c528d4de593d912a5ba024653", "html_url": "https://github.com/rust-lang/rust/commit/b85e3fe010413b8c528d4de593d912a5ba024653"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "499016545e967c769231a14ced30b1c06f5edd50", "filename": "src/libcore/mem/maybe_uninit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/664222a4e2223e5b6505d027b36b4deebb9865ac/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664222a4e2223e5b6505d027b36b4deebb9865ac/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs?ref=664222a4e2223e5b6505d027b36b4deebb9865ac", "patch": "@@ -214,7 +214,6 @@ use crate::mem::ManuallyDrop;\n /// remain `#[repr(transparent)]`. That said, `MaybeUninit<T>` will *always* guarantee that it has\n /// the same size, alignment, and ABI as `T`; it's just that the way `MaybeUninit` implements that\n /// guarantee may evolve.\n-#[allow(missing_debug_implementations)]\n #[stable(feature = \"maybe_uninit\", since = \"1.36.0\")]\n // Lang item so we can wrap other types in it. This is useful for generators.\n #[lang = \"maybe_uninit\"]"}]}