{"sha": "345a21916cdbdaf075182bf45251c71cf06cb4ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NWEyMTkxNmNkYmRhZjA3NTE4MmJmNDUyNTFjNzFjZjA2Y2I0YWQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T01:35:16Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T23:45:54Z"}, "message": "syntax: Refactor ident parsing", "tree": {"sha": "d4ad7ebe461f883e8d1a024a722042b6cb1f739f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4ad7ebe461f883e8d1a024a722042b6cb1f739f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/345a21916cdbdaf075182bf45251c71cf06cb4ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/345a21916cdbdaf075182bf45251c71cf06cb4ad", "html_url": "https://github.com/rust-lang/rust/commit/345a21916cdbdaf075182bf45251c71cf06cb4ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/345a21916cdbdaf075182bf45251c71cf06cb4ad/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0be41ce02b2313bb75d68d3828680ca88cf44c27", "url": "https://api.github.com/repos/rust-lang/rust/commits/0be41ce02b2313bb75d68d3828680ca88cf44c27", "html_url": "https://github.com/rust-lang/rust/commit/0be41ce02b2313bb75d68d3828680ca88cf44c27"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d0aee6fffabb58ad35ac0df7bf1c78b7f1bacc4e", "filename": "src/librustsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/345a21916cdbdaf075182bf45251c71cf06cb4ad/src%2Flibrustsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/345a21916cdbdaf075182bf45251c71cf06cb4ad/src%2Flibrustsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fparse%2Fparser.rs?ref=345a21916cdbdaf075182bf45251c71cf06cb4ad", "patch": "@@ -510,10 +510,10 @@ fn parse_lit(p: parser) -> ast::lit {\n fn parse_path_without_tps(p: parser) -> @ast::path {\n     let lo = p.span.lo;\n     let global = eat(p, token::MOD_SEP);\n-    let mut ids = [parse_ident(p)];\n-    while p.look_ahead(1u) != token::LT && eat(p, token::MOD_SEP) {\n+    let mut ids = [];\n+    do {\n         ids += [parse_ident(p)];\n-    }\n+    } while p.look_ahead(1u) != token::LT && eat(p, token::MOD_SEP);\n     @{span: mk_sp(lo, p.last_span.hi), global: global,\n       idents: ids, rp: none, types: []}\n }"}]}