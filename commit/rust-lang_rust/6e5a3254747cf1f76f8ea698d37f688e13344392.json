{"sha": "6e5a3254747cf1f76f8ea698d37f688e13344392", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNWEzMjU0NzQ3Y2YxZjc2ZjhlYTY5OGQzN2Y2ODhlMTMzNDQzOTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-19T00:08:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-19T00:08:38Z"}, "message": "Auto merge of #28484 - nrc:fix-save, r=alexcrichton\n\nShould be lowering ast expressions to HIR expressions, not cheating via the hir map. That goes wrong now that there is not a 1:1 mapping between ast and hir (in the case of the crash due to ExprParen).", "tree": {"sha": "026d81d77fe58c84ea2051d42ee728ec58132979", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/026d81d77fe58c84ea2051d42ee728ec58132979"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e5a3254747cf1f76f8ea698d37f688e13344392", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e5a3254747cf1f76f8ea698d37f688e13344392", "html_url": "https://github.com/rust-lang/rust/commit/6e5a3254747cf1f76f8ea698d37f688e13344392", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e5a3254747cf1f76f8ea698d37f688e13344392/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb5de8ce57a36e504af2dd6626365d94b5f4262d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb5de8ce57a36e504af2dd6626365d94b5f4262d", "html_url": "https://github.com/rust-lang/rust/commit/fb5de8ce57a36e504af2dd6626365d94b5f4262d"}, {"sha": "66f662f37de1ab689602d909761ad0f0745b4648", "url": "https://api.github.com/repos/rust-lang/rust/commits/66f662f37de1ab689602d909761ad0f0745b4648", "html_url": "https://github.com/rust-lang/rust/commit/66f662f37de1ab689602d909761ad0f0745b4648"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9f50e7a1e6d9ad040f828f96e1551f0f53a1acd4", "filename": "src/librustc_trans/save/dump_csv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e5a3254747cf1f76f8ea698d37f688e13344392/src%2Flibrustc_trans%2Fsave%2Fdump_csv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5a3254747cf1f76f8ea698d37f688e13344392/src%2Flibrustc_trans%2Fsave%2Fdump_csv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fdump_csv.rs?ref=6e5a3254747cf1f76f8ea698d37f688e13344392", "patch": "@@ -1097,7 +1097,7 @@ impl<'l, 'tcx, 'v> Visitor<'v> for DumpCsvVisitor<'l, 'tcx> {\n \n                 self.visit_expr(&**sub_ex);\n \n-                let hir_node = self.tcx.map.expect_expr(sub_ex.id);\n+                let hir_node = lower_expr(sub_ex);\n                 let ty = &self.tcx.expr_ty_adjusted(&hir_node).sty;\n                 match *ty {\n                     ty::TyStruct(def, _) => {"}, {"sha": "afd16bea6d752f7397b0c17cef5434717a93c0b4", "filename": "src/librustc_trans/save/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6e5a3254747cf1f76f8ea698d37f688e13344392/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5a3254747cf1f76f8ea698d37f688e13344392/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fmod.rs?ref=6e5a3254747cf1f76f8ea698d37f688e13344392", "patch": "@@ -18,7 +18,7 @@ use std::path::{Path, PathBuf};\n \n use rustc_front;\n use rustc::front::map::NodeItem;\n-use rustc_front::hir;\n+use rustc_front::{hir, lowering};\n \n use syntax::attr;\n use syntax::ast::{self, NodeId};\n@@ -442,7 +442,7 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n     pub fn get_expr_data(&self, expr: &ast::Expr) -> Option<Data> {\n         match expr.node {\n             ast::ExprField(ref sub_ex, ident) => {\n-                let hir_node = self.tcx.map.expect_expr(sub_ex.id);\n+                let hir_node = lowering::lower_expr(sub_ex);\n                 let ty = &self.tcx.expr_ty_adjusted(&hir_node).sty;\n                 match *ty {\n                     ty::TyStruct(def, _) => {\n@@ -462,8 +462,8 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                 }\n             }\n             ast::ExprStruct(ref path, _, _) => {\n-                let hir_node = self.tcx.map.expect_expr(expr.id);\n-                let ty = &self.tcx.expr_ty_adjusted(hir_node).sty;\n+                let hir_node = lowering::lower_expr(expr);\n+                let ty = &self.tcx.expr_ty_adjusted(&hir_node).sty;\n                 match *ty {\n                     ty::TyStruct(def, _) => {\n                         let sub_span = self.span_utils.span_for_last_ident(path.span);"}]}