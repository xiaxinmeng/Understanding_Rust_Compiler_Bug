{"sha": "b6dc8a3f764e2fec67268c5611ca15fc2c005380", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZGM4YTNmNzY0ZTJmZWM2NzI2OGM1NjExY2ExNWZjMmMwMDUzODA=", "commit": {"author": {"name": "Kevin Yeh", "email": "kevinyeah@utexas.edu", "date": "2015-11-24T04:54:44Z"}, "committer": {"name": "Kevin Yeh", "email": "kevinyeah@utexas.edu", "date": "2015-11-24T18:55:32Z"}, "message": "Keep comments in empty impl bodies", "tree": {"sha": "d8bcd5e02fe70bfb4b24de3367d946e06088641d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8bcd5e02fe70bfb4b24de3367d946e06088641d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6dc8a3f764e2fec67268c5611ca15fc2c005380", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6dc8a3f764e2fec67268c5611ca15fc2c005380", "html_url": "https://github.com/rust-lang/rust/commit/b6dc8a3f764e2fec67268c5611ca15fc2c005380", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6dc8a3f764e2fec67268c5611ca15fc2c005380/comments", "author": {"login": "kyeah", "id": 2308368, "node_id": "MDQ6VXNlcjIzMDgzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2308368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyeah", "html_url": "https://github.com/kyeah", "followers_url": "https://api.github.com/users/kyeah/followers", "following_url": "https://api.github.com/users/kyeah/following{/other_user}", "gists_url": "https://api.github.com/users/kyeah/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyeah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyeah/subscriptions", "organizations_url": "https://api.github.com/users/kyeah/orgs", "repos_url": "https://api.github.com/users/kyeah/repos", "events_url": "https://api.github.com/users/kyeah/events{/privacy}", "received_events_url": "https://api.github.com/users/kyeah/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kyeah", "id": 2308368, "node_id": "MDQ6VXNlcjIzMDgzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2308368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyeah", "html_url": "https://github.com/kyeah", "followers_url": "https://api.github.com/users/kyeah/followers", "following_url": "https://api.github.com/users/kyeah/following{/other_user}", "gists_url": "https://api.github.com/users/kyeah/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyeah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyeah/subscriptions", "organizations_url": "https://api.github.com/users/kyeah/orgs", "repos_url": "https://api.github.com/users/kyeah/repos", "events_url": "https://api.github.com/users/kyeah/events{/privacy}", "received_events_url": "https://api.github.com/users/kyeah/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7483c2a8f90952bc702fa281d7eca55ced6021e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7483c2a8f90952bc702fa281d7eca55ced6021e4", "html_url": "https://github.com/rust-lang/rust/commit/7483c2a8f90952bc702fa281d7eca55ced6021e4"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "51f064d92a1372423b49e5b381036091a2e94d30", "filename": "src/items.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b6dc8a3f764e2fec67268c5611ca15fc2c005380/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6dc8a3f764e2fec67268c5611ca15fc2c005380/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=b6dc8a3f764e2fec67268c5611ca15fc2c005380", "patch": "@@ -16,7 +16,7 @@ use utils::{format_mutability, format_visibility, contains_skip, span_after, end\n use lists::{write_list, itemize_list, ListItem, ListFormatting, SeparatorTactic,\n             DefinitiveListTactic, definitive_tactic, format_item_list};\n use expr::{is_empty_block, is_simple_block_stmt, rewrite_assign_rhs};\n-use comment::FindUncommented;\n+use comment::{FindUncommented, contains_comment};\n use visitor::FmtVisitor;\n use rewrite::{Rewrite, RewriteContext};\n use config::{Config, BlockIndentStyle, Density, ReturnIndent, BraceStyle, StructLitStyle};\n@@ -505,27 +505,31 @@ pub fn format_impl(context: &RewriteContext, item: &ast::Item, offset: Indent) -\n         }\n         result.push('{');\n \n-        if !items.is_empty() {\n+        let snippet = context.snippet(item.span);\n+        let open_pos = try_opt!(snippet.find_uncommented(\"{\")) + 1;\n+\n+        if !items.is_empty() || contains_comment(&snippet[open_pos..]) {\n             let mut visitor = FmtVisitor::from_codemap(context.parse_session, context.config, None);\n             visitor.block_indent = context.block_indent.block_indent(context.config);\n-\n-            let snippet = context.snippet(item.span);\n-            let open_pos = try_opt!(snippet.find_uncommented(\"{\")) + 1;\n             visitor.last_pos = item.span.lo + BytePos(open_pos as u32);\n \n             for item in items {\n                 visitor.visit_impl_item(&item);\n             }\n \n+            visitor.format_missing(item.span.hi - BytePos(1));\n+\n+            let inner_indent_str = visitor.block_indent.to_string(context.config);\n+            let outer_indent_str = context.block_indent.to_string(context.config);\n+\n             result.push('\\n');\n-            result.push_str(trim_newlines(&visitor.buffer.to_string()));\n+            result.push_str(&inner_indent_str);\n+            result.push_str(&trim_newlines(&visitor.buffer.to_string().trim()));\n             result.push('\\n');\n-\n-            let indent_str = context.block_indent.to_string(context.config);\n-            result.push_str(&indent_str);\n+            result.push_str(&outer_indent_str);\n         }\n-        result.push('}');\n \n+        result.push('}');\n         Some(result)\n     } else {\n         unreachable!();"}, {"sha": "5dde5ee73826d9d6c4c2f4471c41f363ad5980ff", "filename": "tests/target/impl.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b6dc8a3f764e2fec67268c5611ca15fc2c005380/tests%2Ftarget%2Fimpl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6dc8a3f764e2fec67268c5611ca15fc2c005380/tests%2Ftarget%2Fimpl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimpl.rs?ref=b6dc8a3f764e2fec67268c5611ca15fc2c005380", "patch": "@@ -1,3 +1,7 @@\n // Test impls\n \n impl<T> JSTraceable for SmallVec<[T; 1]> {}\n+\n+impl<K, V, NodeRef: Deref<Target = Node<K, V>>> Handle<NodeRef, handle::Edge, handle::Internal> {\n+    // Keep this.\n+}"}, {"sha": "cc60b8227944917f48389241623b157c1394139c", "filename": "tests/target/impls.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b6dc8a3f764e2fec67268c5611ca15fc2c005380/tests%2Ftarget%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6dc8a3f764e2fec67268c5611ca15fc2c005380/tests%2Ftarget%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimpls.rs?ref=b6dc8a3f764e2fec67268c5611ca15fc2c005380", "patch": "@@ -13,6 +13,7 @@ pub impl Foo for Bar {\n     fn foo() {\n         \"hi\"\n     }\n+    // Comment 3\n }\n \n pub unsafe impl<'a, 'b, X, Y: Foo<Bar>> !Foo<'a, X> for Bar<'b, Y> where X: Foo<'a, Z>"}]}