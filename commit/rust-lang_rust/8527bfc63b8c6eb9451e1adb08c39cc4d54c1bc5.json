{"sha": "8527bfc63b8c6eb9451e1adb08c39cc4d54c1bc5", "node_id": "C_kwDOAAsO6NoAKDg1MjdiZmM2M2I4YzZlYjk0NTFlMWFkYjA4YzM5Y2M0ZDU0YzFiYzU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-17T08:07:26Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-17T08:07:26Z"}, "message": "clippy", "tree": {"sha": "60867da02b475273058fac2c914c14361a83f0a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60867da02b475273058fac2c914c14361a83f0a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8527bfc63b8c6eb9451e1adb08c39cc4d54c1bc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8527bfc63b8c6eb9451e1adb08c39cc4d54c1bc5", "html_url": "https://github.com/rust-lang/rust/commit/8527bfc63b8c6eb9451e1adb08c39cc4d54c1bc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8527bfc63b8c6eb9451e1adb08c39cc4d54c1bc5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "444841bba9c31f1fe5b7b419ee82eb27e37a344e", "url": "https://api.github.com/repos/rust-lang/rust/commits/444841bba9c31f1fe5b7b419ee82eb27e37a344e", "html_url": "https://github.com/rust-lang/rust/commit/444841bba9c31f1fe5b7b419ee82eb27e37a344e"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "e7fb484434d79facea2f61c459c9dd0be0483239", "filename": "ui_test/src/parser.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8527bfc63b8c6eb9451e1adb08c39cc4d54c1bc5/ui_test%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8527bfc63b8c6eb9451e1adb08c39cc4d54c1bc5/ui_test%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Fparser.rs?ref=8527bfc63b8c6eb9451e1adb08c39cc4d54c1bc5", "patch": "@@ -66,11 +66,9 @@ pub(crate) struct ErrorMatch {\n \n impl Condition {\n     fn parse(c: &str) -> Self {\n-        match c {\n-            \"on-host\" => return Condition::OnHost,\n-            _ => {}\n-        }\n-        if let Some(bits) = c.strip_suffix(\"bit\") {\n+        if c == \"on-host\" {\n+            Condition::OnHost\n+        } else if let Some(bits) = c.strip_suffix(\"bit\") {\n             let bits: u8 = bits.parse().expect(\n                 \"ignore/only filter ending in 'bit' must be of the form 'Nbit' for some integer N\",\n             );"}]}