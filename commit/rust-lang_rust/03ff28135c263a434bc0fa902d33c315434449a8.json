{"sha": "03ff28135c263a434bc0fa902d33c315434449a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZmYyODEzNWMyNjNhNDM0YmMwZmE5MDJkMzNjMzE1NDM0NDQ5YTg=", "commit": {"author": {"name": "Luke Gallagher", "email": "luke@hypergeometric.net", "date": "2015-04-16T12:48:31Z"}, "committer": {"name": "Luke Gallagher", "email": "luke@hypergeometric.net", "date": "2015-04-24T00:10:48Z"}, "message": "Add feature gate tests\n\nAs part of the audit for #22820 the following feature gate tests have\nbeen added:\n\n* `negate_unsigned`\n* `on_unimplemented`\n* `optin_builtin_traits`\n* `plugin`\n* `rustc_attrs`\n* `slice_patterns`", "tree": {"sha": "4233f9ea9ba46450c14d353b3f009d1bcc7e9f33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4233f9ea9ba46450c14d353b3f009d1bcc7e9f33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03ff28135c263a434bc0fa902d33c315434449a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03ff28135c263a434bc0fa902d33c315434449a8", "html_url": "https://github.com/rust-lang/rust/commit/03ff28135c263a434bc0fa902d33c315434449a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03ff28135c263a434bc0fa902d33c315434449a8/comments", "author": {"login": "lgrz", "id": 158654, "node_id": "MDQ6VXNlcjE1ODY1NA==", "avatar_url": "https://avatars.githubusercontent.com/u/158654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgrz", "html_url": "https://github.com/lgrz", "followers_url": "https://api.github.com/users/lgrz/followers", "following_url": "https://api.github.com/users/lgrz/following{/other_user}", "gists_url": "https://api.github.com/users/lgrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgrz/subscriptions", "organizations_url": "https://api.github.com/users/lgrz/orgs", "repos_url": "https://api.github.com/users/lgrz/repos", "events_url": "https://api.github.com/users/lgrz/events{/privacy}", "received_events_url": "https://api.github.com/users/lgrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lgrz", "id": 158654, "node_id": "MDQ6VXNlcjE1ODY1NA==", "avatar_url": "https://avatars.githubusercontent.com/u/158654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgrz", "html_url": "https://github.com/lgrz", "followers_url": "https://api.github.com/users/lgrz/followers", "following_url": "https://api.github.com/users/lgrz/following{/other_user}", "gists_url": "https://api.github.com/users/lgrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgrz/subscriptions", "organizations_url": "https://api.github.com/users/lgrz/orgs", "repos_url": "https://api.github.com/users/lgrz/repos", "events_url": "https://api.github.com/users/lgrz/events{/privacy}", "received_events_url": "https://api.github.com/users/lgrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12e30f7f063e68b0afc6c591d93b4b701e12aaac", "url": "https://api.github.com/repos/rust-lang/rust/commits/12e30f7f063e68b0afc6c591d93b4b701e12aaac", "html_url": "https://github.com/rust-lang/rust/commit/12e30f7f063e68b0afc6c591d93b4b701e12aaac"}], "stats": {"total": 117, "additions": 117, "deletions": 0}, "files": [{"sha": "7dc654fe1c8d569f0c5ec3916d13da4da449e80d", "filename": "src/test/compile-fail/feature-gate-negate-unsigned.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/03ff28135c263a434bc0fa902d33c315434449a8/src%2Ftest%2Fcompile-fail%2Ffeature-gate-negate-unsigned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03ff28135c263a434bc0fa902d33c315434449a8/src%2Ftest%2Fcompile-fail%2Ffeature-gate-negate-unsigned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-negate-unsigned.rs?ref=03ff28135c263a434bc0fa902d33c315434449a8", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that negating unsigned integers is gated by `negate_unsigned` feature\n+// gate\n+\n+const MAX: usize = -1;\n+//~^ ERROR unary negation of unsigned integers may be removed in the future\n+\n+fn main() {}"}, {"sha": "5d32bba6a766cad91161e33872501c1c0da817f6", "filename": "src/test/compile-fail/feature-gate-on-unimplemented.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/03ff28135c263a434bc0fa902d33c315434449a8/src%2Ftest%2Fcompile-fail%2Ffeature-gate-on-unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03ff28135c263a434bc0fa902d33c315434449a8/src%2Ftest%2Fcompile-fail%2Ffeature-gate-on-unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-on-unimplemented.rs?ref=03ff28135c263a434bc0fa902d33c315434449a8", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that `#[rustc_on_unimplemented]` is gated by `on_unimplemented` feature\n+// gate.\n+\n+#[rustc_on_unimplemented = \"test error `{Self}` with `{Bar}`\"]\n+//~^ ERROR the `#[rustc_on_unimplemented]` attribute is an experimental feature\n+trait Foo<Bar>\n+{}\n+\n+fn main() {}"}, {"sha": "59d7473a741d6297f1d20c2d4633636a4a4cf1d6", "filename": "src/test/compile-fail/feature-gate-optin-builtin-traits.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/03ff28135c263a434bc0fa902d33c315434449a8/src%2Ftest%2Fcompile-fail%2Ffeature-gate-optin-builtin-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03ff28135c263a434bc0fa902d33c315434449a8/src%2Ftest%2Fcompile-fail%2Ffeature-gate-optin-builtin-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-optin-builtin-traits.rs?ref=03ff28135c263a434bc0fa902d33c315434449a8", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that default and negative trait implementations are gated by\n+// `optin_builtin_traits` feature gate\n+\n+struct DummyStruct;\n+\n+trait DummyTrait {\n+    fn dummy(&self) {}\n+}\n+\n+impl DummyTrait for .. {}\n+//~^ ERROR default trait implementations are experimental and possibly buggy\n+\n+impl !DummyTrait for DummyStruct {}\n+//~^ ERROR negative trait bounds are not yet fully implemented; use marker types for now\n+\n+fn main() {}"}, {"sha": "3b5d7626ce309aab0247d5b32ce9c5cc4b8256cf", "filename": "src/test/compile-fail/feature-gate-plugin.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/03ff28135c263a434bc0fa902d33c315434449a8/src%2Ftest%2Fcompile-fail%2Ffeature-gate-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03ff28135c263a434bc0fa902d33c315434449a8/src%2Ftest%2Fcompile-fail%2Ffeature-gate-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-plugin.rs?ref=03ff28135c263a434bc0fa902d33c315434449a8", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that `#![plugin(...)]` attribute is gated by `plugin` feature gate\n+\n+#![plugin(foo)]\n+//~^ ERROR compiler plugins are experimental and possibly buggy\n+\n+fn main() {}"}, {"sha": "dab44b655fce82a5e788a818c202c5f8dae7dc20", "filename": "src/test/compile-fail/feature-gate-rustc-attrs.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/03ff28135c263a434bc0fa902d33c315434449a8/src%2Ftest%2Fcompile-fail%2Ffeature-gate-rustc-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03ff28135c263a434bc0fa902d33c315434449a8/src%2Ftest%2Fcompile-fail%2Ffeature-gate-rustc-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-rustc-attrs.rs?ref=03ff28135c263a434bc0fa902d33c315434449a8", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-tidy-linelength\n+\n+// Test that `#[rustc_*]` attributes are gated by `rustc_attrs` feature gate.\n+\n+#[rustc_variance] //~ ERROR the `#[rustc_variance]` attribute is an experimental feature\n+#[rustc_error] //~ ERROR the `#[rustc_error]` attribute is an experimental feature\n+#[rustc_move_fragments] //~ ERROR the `#[rustc_move_fragments]` attribute is an experimental feature\n+#[rustc_foo]\n+//~^ ERROR unless otherwise specified, attributes with the prefix `rustc_` are reserved for internal compiler diagnostics\n+\n+fn main() {}"}, {"sha": "625cb2d351553709b9c7dac7379c2b4ec7ebdb88", "filename": "src/test/compile-fail/feature-gate-slice-patterns.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/03ff28135c263a434bc0fa902d33c315434449a8/src%2Ftest%2Fcompile-fail%2Ffeature-gate-slice-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03ff28135c263a434bc0fa902d33c315434449a8/src%2Ftest%2Fcompile-fail%2Ffeature-gate-slice-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-slice-patterns.rs?ref=03ff28135c263a434bc0fa902d33c315434449a8", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that slice pattern syntax is gated by `slice_patterns` feature gate\n+\n+fn main() {\n+    let x = [1, 2, 3, 4, 5];\n+    match x {\n+        [1, 2, xs..] => {} //~ ERROR slice pattern syntax is experimental\n+    }\n+}"}]}