{"sha": "351c68367425c4e292394ae5c7137b6e45de0916", "node_id": "C_kwDOAAsO6NoAKDM1MWM2ODM2NzQyNWM0ZTI5MjM5NGFlNWM3MTM3YjZlNDVkZTA5MTY", "commit": {"author": {"name": "yvt", "email": "i@yvt.jp", "date": "2022-05-02T02:00:07Z"}, "committer": {"name": "yvt", "email": "i@yvt.jp", "date": "2022-05-03T04:53:10Z"}, "message": "Use the given pointee type in `<Builder as BuilderMethods>::load`\n\nThis commit updates this method implementation to return an `RValue` of\nthe given pointee type.\n\nWhile this parameter does not seem to have much significance at the\nmoment, it will likely become important as cg_llvm and cg_ssa migrate to\nLLVM opaque pointers and get rid of pointercasts.", "tree": {"sha": "7b18a94a8f77089a5c95c2bd380797a975b5e414", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b18a94a8f77089a5c95c2bd380797a975b5e414"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/351c68367425c4e292394ae5c7137b6e45de0916", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/351c68367425c4e292394ae5c7137b6e45de0916", "html_url": "https://github.com/rust-lang/rust/commit/351c68367425c4e292394ae5c7137b6e45de0916", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/351c68367425c4e292394ae5c7137b6e45de0916/comments", "author": {"login": "yvt", "id": 5253988, "node_id": "MDQ6VXNlcjUyNTM5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/5253988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yvt", "html_url": "https://github.com/yvt", "followers_url": "https://api.github.com/users/yvt/followers", "following_url": "https://api.github.com/users/yvt/following{/other_user}", "gists_url": "https://api.github.com/users/yvt/gists{/gist_id}", "starred_url": "https://api.github.com/users/yvt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yvt/subscriptions", "organizations_url": "https://api.github.com/users/yvt/orgs", "repos_url": "https://api.github.com/users/yvt/repos", "events_url": "https://api.github.com/users/yvt/events{/privacy}", "received_events_url": "https://api.github.com/users/yvt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yvt", "id": 5253988, "node_id": "MDQ6VXNlcjUyNTM5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/5253988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yvt", "html_url": "https://github.com/yvt", "followers_url": "https://api.github.com/users/yvt/followers", "following_url": "https://api.github.com/users/yvt/following{/other_user}", "gists_url": "https://api.github.com/users/yvt/gists{/gist_id}", "starred_url": "https://api.github.com/users/yvt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yvt/subscriptions", "organizations_url": "https://api.github.com/users/yvt/orgs", "repos_url": "https://api.github.com/users/yvt/repos", "events_url": "https://api.github.com/users/yvt/events{/privacy}", "received_events_url": "https://api.github.com/users/yvt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a225f0a66b83b79e62d679568675adea284bfe21", "url": "https://api.github.com/repos/rust-lang/rust/commits/a225f0a66b83b79e62d679568675adea284bfe21", "html_url": "https://github.com/rust-lang/rust/commit/a225f0a66b83b79e62d679568675adea284bfe21"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "9a5cf785a1f5b897b1d4bc912dbb264b596d5ca4", "filename": "src/builder.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/351c68367425c4e292394ae5c7137b6e45de0916/src%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/351c68367425c4e292394ae5c7137b6e45de0916/src%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuilder.rs?ref=351c68367425c4e292394ae5c7137b6e45de0916", "patch": "@@ -652,18 +652,17 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n         unimplemented!();\n     }\n \n-    fn load(&mut self, _pointee_ty: Type<'gcc>, ptr: RValue<'gcc>, _align: Align) -> RValue<'gcc> {\n-        // TODO(antoyo): use ty.\n+    fn load(&mut self, pointee_ty: Type<'gcc>, ptr: RValue<'gcc>, _align: Align) -> RValue<'gcc> {\n         let block = self.llbb();\n         let function = block.get_function();\n         // NOTE: instead of returning the dereference here, we have to assign it to a variable in\n         // the current basic block. Otherwise, it could be used in another basic block, causing a\n         // dereference after a drop, for instance.\n         // TODO(antoyo): handle align of the load instruction.\n+        let ptr = self.context.new_cast(None, ptr, pointee_ty.make_pointer());\n         let deref = ptr.dereference(None).to_rvalue();\n-        let value_type = deref.get_type();\n         unsafe { RETURN_VALUE_COUNT += 1 };\n-        let loaded_value = function.new_local(None, value_type, &format!(\"loadedValue{}\", unsafe { RETURN_VALUE_COUNT }));\n+        let loaded_value = function.new_local(None, pointee_ty, &format!(\"loadedValue{}\", unsafe { RETURN_VALUE_COUNT }));\n         block.add_assignment(None, loaded_value, deref);\n         loaded_value.to_rvalue()\n     }"}]}