{"sha": "2f688ac602d50129388bb2a5519942049096cbff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNjg4YWM2MDJkNTAxMjkzODhiYjJhNTUxOTk0MjA0OTA5NmNiZmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-22T00:50:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-22T00:50:48Z"}, "message": "Auto merge of #68442 - Centril:rollup-ir2vmid, r=Centril\n\nRollup of 3 pull requests\n\nSuccessful merges:\n\n - #68421 (Update cargo, books)\n - #68422 (typeck: simplify the handling of `diverges`)\n - #68439 (Update Clippy)\n\nFailed merges:\n\nr? @ghost", "tree": {"sha": "b8ba4934383e3a64aec79c1ee522c461df08f5a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8ba4934383e3a64aec79c1ee522c461df08f5a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f688ac602d50129388bb2a5519942049096cbff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f688ac602d50129388bb2a5519942049096cbff", "html_url": "https://github.com/rust-lang/rust/commit/2f688ac602d50129388bb2a5519942049096cbff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f688ac602d50129388bb2a5519942049096cbff/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e8897b7b51636f157630e6639b711d698e1d101", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e8897b7b51636f157630e6639b711d698e1d101", "html_url": "https://github.com/rust-lang/rust/commit/5e8897b7b51636f157630e6639b711d698e1d101"}, {"sha": "2a3627d6b4d95ebce5afb1ee7362f2421ccee3e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a3627d6b4d95ebce5afb1ee7362f2421ccee3e5", "html_url": "https://github.com/rust-lang/rust/commit/2a3627d6b4d95ebce5afb1ee7362f2421ccee3e5"}], "stats": {"total": 94, "additions": 38, "deletions": 56}, "files": [{"sha": "0a76aabc3a312f5efbed105995cc4f3bfc81f766", "filename": "Cargo.lock", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2f688ac602d50129388bb2a5519942049096cbff/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/2f688ac602d50129388bb2a5519942049096cbff/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=2f688ac602d50129388bb2a5519942049096cbff", "patch": "@@ -307,7 +307,7 @@ dependencies = [\n  \"glob\",\n  \"hex 0.4.0\",\n  \"home\",\n- \"humantime\",\n+ \"humantime 2.0.0\",\n  \"ignore\",\n  \"im-rc\",\n  \"jobserver\",\n@@ -1013,7 +1013,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"aafcde04e90a5226a6443b7aabdb016ba2f8307c847d524724bd9b346dd1a2d3\"\n dependencies = [\n  \"atty\",\n- \"humantime\",\n+ \"humantime 1.3.0\",\n  \"log\",\n  \"regex\",\n  \"termcolor\",\n@@ -1026,7 +1026,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"44533bbbb3bb3c1fa17d9f2e4e38bbbaf8396ba82193c4cb1b6445d711445d36\"\n dependencies = [\n  \"atty\",\n- \"humantime\",\n+ \"humantime 1.3.0\",\n  \"log\",\n  \"regex\",\n  \"termcolor\",\n@@ -1454,6 +1454,12 @@ dependencies = [\n  \"quick-error\",\n ]\n \n+[[package]]\n+name = \"humantime\"\n+version = \"2.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"b9b6c53306532d3c8e8087b44e6580e10db51a023cf9b433cea2ac38066b92da\"\n+\n [[package]]\n name = \"hyper\"\n version = \"0.12.31\"\n@@ -2647,7 +2653,7 @@ dependencies = [\n  \"clap\",\n  \"derive_more\",\n  \"env_logger 0.6.2\",\n- \"humantime\",\n+ \"humantime 1.3.0\",\n  \"lazy_static 1.3.0\",\n  \"log\",\n  \"rls-span\","}, {"sha": "87dd6843678575f8dda962f239d14ef4be14b352", "filename": "src/doc/book", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook?ref=2f688ac602d50129388bb2a5519942049096cbff", "patch": "@@ -1 +1 @@\n-Subproject commit 5c5cfd2e94cd42632798d9bd3d1116133e128ac9\n+Subproject commit 87dd6843678575f8dda962f239d14ef4be14b352"}, {"sha": "4d78994915af1bde9a95c04a8c27d8dca066232a", "filename": "src/doc/embedded-book", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fembedded-book?ref=2f688ac602d50129388bb2a5519942049096cbff", "patch": "@@ -1 +1 @@\n-Subproject commit 9493b7d4dc97eda439bd8780f05ad7b234cd1cd7\n+Subproject commit 4d78994915af1bde9a95c04a8c27d8dca066232a"}, {"sha": "11e893fc1357bc688418ddf1087c2b7aa25d154d", "filename": "src/doc/reference", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference?ref=2f688ac602d50129388bb2a5519942049096cbff", "patch": "@@ -1 +1 @@\n-Subproject commit e1157538e86d83df0cf95d5e33bd943f80d0248f\n+Subproject commit 11e893fc1357bc688418ddf1087c2b7aa25d154d"}, {"sha": "1c2bd024d13f8011307e13386cf1fea2180352b5", "filename": "src/doc/rust-by-example", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust-by-example?ref=2f688ac602d50129388bb2a5519942049096cbff", "patch": "@@ -1 +1 @@\n-Subproject commit 1d59403cb5269c190cc52a95584ecc280345495a\n+Subproject commit 1c2bd024d13f8011307e13386cf1fea2180352b5"}, {"sha": "686cdfbc089b44cab77e65e382a754ca2666f048", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 18, "deletions": 37, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/2f688ac602d50129388bb2a5519942049096cbff/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f688ac602d50129388bb2a5519942049096cbff/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=2f688ac602d50129388bb2a5519942049096cbff", "patch": "@@ -50,30 +50,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         self.warn_arms_when_scrutinee_diverges(arms, match_src);\n \n-        // Otherwise, we have to union together the types that the\n-        // arms produce and so forth.\n-        let scrut_diverges = self.diverges.get();\n-        self.diverges.set(Diverges::Maybe);\n+        // Otherwise, we have to union together the types that the arms produce and so forth.\n+        let scrut_diverges = self.diverges.replace(Diverges::Maybe);\n \n-        // rust-lang/rust#55810: Typecheck patterns first (via eager\n-        // collection into `Vec`), so we get types for all bindings.\n-        let all_arm_pats_diverge: Vec<_> = arms\n-            .iter()\n-            .map(|arm| {\n-                let mut all_pats_diverge = Diverges::WarnedAlways;\n-                self.diverges.set(Diverges::Maybe);\n-                self.check_pat_top(&arm.pat, scrut_ty, Some(scrut.span), true);\n-                all_pats_diverge &= self.diverges.get();\n-\n-                // As discussed with @eddyb, this is for disabling unreachable_code\n-                // warnings on patterns (they're now subsumed by unreachable_patterns\n-                // warnings).\n-                match all_pats_diverge {\n-                    Diverges::Maybe => Diverges::Maybe,\n-                    Diverges::Always { .. } | Diverges::WarnedAlways => Diverges::WarnedAlways,\n-                }\n-            })\n-            .collect();\n+        // #55810: Type check patterns first so we get types for all bindings.\n+        for arm in arms {\n+            self.check_pat_top(&arm.pat, scrut_ty, Some(scrut.span), true);\n+        }\n \n         // Now typecheck the blocks.\n         //\n@@ -104,19 +87,19 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             CoerceMany::with_coercion_sites(coerce_first, arms)\n         };\n \n-        let mut other_arms = vec![]; // used only for diagnostics\n+        let mut other_arms = vec![]; // Used only for diagnostics.\n         let mut prior_arm_ty = None;\n-        for (i, (arm, pats_diverge)) in arms.iter().zip(all_arm_pats_diverge).enumerate() {\n+        for (i, arm) in arms.iter().enumerate() {\n             if let Some(g) = &arm.guard {\n-                self.diverges.set(pats_diverge);\n+                self.diverges.set(Diverges::Maybe);\n                 match g {\n                     hir::Guard::If(e) => {\n                         self.check_expr_has_type_or_error(e, tcx.types.bool, |_| {})\n                     }\n                 };\n             }\n \n-            self.diverges.set(pats_diverge);\n+            self.diverges.set(Diverges::Maybe);\n             let arm_ty = if source_if\n                 && if_no_else\n                 && i != 0\n@@ -200,16 +183,14 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         arms: &'tcx [hir::Arm<'tcx>],\n         source: hir::MatchSource,\n     ) {\n-        if self.diverges.get().is_always() {\n-            use hir::MatchSource::*;\n-            let msg = match source {\n-                IfDesugar { .. } | IfLetDesugar { .. } => \"block in `if` expression\",\n-                WhileDesugar { .. } | WhileLetDesugar { .. } => \"block in `while` expression\",\n-                _ => \"arm\",\n-            };\n-            for arm in arms {\n-                self.warn_if_unreachable(arm.body.hir_id, arm.body.span, msg);\n-            }\n+        use hir::MatchSource::*;\n+        let msg = match source {\n+            IfDesugar { .. } | IfLetDesugar { .. } => \"block in `if` expression\",\n+            WhileDesugar { .. } | WhileLetDesugar { .. } => \"block in `while` expression\",\n+            _ => \"arm\",\n+        };\n+        for arm in arms {\n+            self.warn_if_unreachable(arm.body.hir_id, arm.body.span, msg);\n         }\n     }\n "}, {"sha": "b4c2b85241f9612250f31779a2e5eb4cb15011e7", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2f688ac602d50129388bb2a5519942049096cbff/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f688ac602d50129388bb2a5519942049096cbff/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=2f688ac602d50129388bb2a5519942049096cbff", "patch": "@@ -165,10 +165,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n \n         // Hide the outer diverging and has_errors flags.\n-        let old_diverges = self.diverges.get();\n-        let old_has_errors = self.has_errors.get();\n-        self.diverges.set(Diverges::Maybe);\n-        self.has_errors.set(false);\n+        let old_diverges = self.diverges.replace(Diverges::Maybe);\n+        let old_has_errors = self.has_errors.replace(false);\n \n         let ty = self.check_expr_kind(expr, expected, needs);\n "}, {"sha": "2dc198b6d9695a96c126c00c0399d7ddcb59d25d", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2f688ac602d50129388bb2a5519942049096cbff/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f688ac602d50129388bb2a5519942049096cbff/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=2f688ac602d50129388bb2a5519942049096cbff", "patch": "@@ -4429,10 +4429,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         self.warn_if_unreachable(stmt.hir_id, stmt.span, \"statement\");\n \n         // Hide the outer diverging and `has_errors` flags.\n-        let old_diverges = self.diverges.get();\n-        let old_has_errors = self.has_errors.get();\n-        self.diverges.set(Diverges::Maybe);\n-        self.has_errors.set(false);\n+        let old_diverges = self.diverges.replace(Diverges::Maybe);\n+        let old_has_errors = self.has_errors.replace(false);\n \n         match stmt.kind {\n             hir::StmtKind::Local(ref l) => {\n@@ -4442,7 +4440,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             hir::StmtKind::Item(_) => {}\n             hir::StmtKind::Expr(ref expr) => {\n                 // Check with expected type of `()`.\n-\n                 self.check_expr_has_type_or_error(&expr, self.tcx.mk_unit(), |err| {\n                     self.suggest_semicolon_at_end(expr.span, err);\n                 });"}, {"sha": "f6449ba236db31995255ac5e4cad4ab88296a7c6", "filename": "src/tools/cargo", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargo?ref=2f688ac602d50129388bb2a5519942049096cbff", "patch": "@@ -1 +1 @@\n-Subproject commit ad3dbe10e1e654fb1f032a5dd9481d7cbaa00d65\n+Subproject commit f6449ba236db31995255ac5e4cad4ab88296a7c6"}, {"sha": "3e74853d1f9893cf2a47f28b658711d8f9f97b6b", "filename": "src/tools/clippy", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy?ref=2f688ac602d50129388bb2a5519942049096cbff", "patch": "@@ -1 +1 @@\n-Subproject commit fd0428f622feee209e6014b802f5717d48d9e978\n+Subproject commit 3e74853d1f9893cf2a47f28b658711d8f9f97b6b"}]}