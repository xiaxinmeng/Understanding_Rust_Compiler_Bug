{"sha": "783ab7766faedb4117059a9be252df22b1fedcb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4M2FiNzc2NmZhZWRiNDExNzA1OWE5YmUyNTJkZjIyYjFmZWRjYjU=", "commit": {"author": {"name": "Niels Sascha Reedijk", "email": "niels.reedijk@gmail.com", "date": "2016-09-25T04:41:29Z"}, "committer": {"name": "Alexander von Gluck IV", "email": "kallisti5@unixzen.com", "date": "2016-09-25T16:13:57Z"}, "message": "Haiku: Work around the lack of the FIOCLEX ioctl\n\n* Hand rebased from Niels original work on 1.9.0", "tree": {"sha": "bde574d4dd5b8a3992524c888aafb07d82d8a6f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bde574d4dd5b8a3992524c888aafb07d82d8a6f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/783ab7766faedb4117059a9be252df22b1fedcb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/783ab7766faedb4117059a9be252df22b1fedcb5", "html_url": "https://github.com/rust-lang/rust/commit/783ab7766faedb4117059a9be252df22b1fedcb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/783ab7766faedb4117059a9be252df22b1fedcb5/comments", "author": {"login": "nielx", "id": 324054, "node_id": "MDQ6VXNlcjMyNDA1NA==", "avatar_url": "https://avatars.githubusercontent.com/u/324054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nielx", "html_url": "https://github.com/nielx", "followers_url": "https://api.github.com/users/nielx/followers", "following_url": "https://api.github.com/users/nielx/following{/other_user}", "gists_url": "https://api.github.com/users/nielx/gists{/gist_id}", "starred_url": "https://api.github.com/users/nielx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nielx/subscriptions", "organizations_url": "https://api.github.com/users/nielx/orgs", "repos_url": "https://api.github.com/users/nielx/repos", "events_url": "https://api.github.com/users/nielx/events{/privacy}", "received_events_url": "https://api.github.com/users/nielx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kallisti5", "id": 100110, "node_id": "MDQ6VXNlcjEwMDExMA==", "avatar_url": "https://avatars.githubusercontent.com/u/100110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kallisti5", "html_url": "https://github.com/kallisti5", "followers_url": "https://api.github.com/users/kallisti5/followers", "following_url": "https://api.github.com/users/kallisti5/following{/other_user}", "gists_url": "https://api.github.com/users/kallisti5/gists{/gist_id}", "starred_url": "https://api.github.com/users/kallisti5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kallisti5/subscriptions", "organizations_url": "https://api.github.com/users/kallisti5/orgs", "repos_url": "https://api.github.com/users/kallisti5/repos", "events_url": "https://api.github.com/users/kallisti5/events{/privacy}", "received_events_url": "https://api.github.com/users/kallisti5/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a6fc8b7b840fb381b1aefa35b9b3d4c736bae50", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6fc8b7b840fb381b1aefa35b9b3d4c736bae50", "html_url": "https://github.com/rust-lang/rust/commit/1a6fc8b7b840fb381b1aefa35b9b3d4c736bae50"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "60c1750b4693c965b9a16c50f2af30e2a0ce561d", "filename": "src/libstd/sys/unix/fd.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/783ab7766faedb4117059a9be252df22b1fedcb5/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/783ab7766faedb4117059a9be252df22b1fedcb5/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffd.rs?ref=783ab7766faedb4117059a9be252df22b1fedcb5", "patch": "@@ -59,14 +59,20 @@ impl FileDesc {\n         Ok(ret as usize)\n     }\n \n-    #[cfg(not(any(target_env = \"newlib\", target_os = \"solaris\", target_os = \"emscripten\")))]\n+    #[cfg(not(any(target_env = \"newlib\",\n+                  target_os = \"solaris\",\n+                  target_os = \"emscripten\",\n+                  target_os = \"haiku\")))]\n     pub fn set_cloexec(&self) -> io::Result<()> {\n         unsafe {\n             cvt(libc::ioctl(self.fd, libc::FIOCLEX))?;\n             Ok(())\n         }\n     }\n-    #[cfg(any(target_env = \"newlib\", target_os = \"solaris\", target_os = \"emscripten\"))]\n+    #[cfg(any(target_env = \"newlib\",\n+              target_os = \"solaris\",\n+              target_os = \"emscripten\",\n+              target_os = \"haiku\"))]\n     pub fn set_cloexec(&self) -> io::Result<()> {\n         unsafe {\n             let previous = cvt(libc::fcntl(self.fd, libc::F_GETFD))?;"}]}