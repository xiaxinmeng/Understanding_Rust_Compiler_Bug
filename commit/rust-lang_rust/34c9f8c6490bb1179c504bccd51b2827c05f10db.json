{"sha": "34c9f8c6490bb1179c504bccd51b2827c05f10db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0YzlmOGM2NDkwYmIxMTc5YzUwNGJjY2Q1MWIyODI3YzA1ZjEwZGI=", "commit": {"author": {"name": "Artyom Pavlov", "email": "newpavlov@gmail.com", "date": "2019-08-19T20:02:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-19T20:02:50Z"}, "message": "remove any from cfgs", "tree": {"sha": "58680ef4d3cf0c58dcf34fba7c512c0d264ba0d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58680ef4d3cf0c58dcf34fba7c512c0d264ba0d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34c9f8c6490bb1179c504bccd51b2827c05f10db", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdWwBqCRBK7hj4Ov3rIwAAdHIIABMPvgfnrA8Jcgn6YLwv4DMB\n9KCM6ZqA1QedzmjjdtbQhMRg+nuSxHDE/s5ktoXZAK3BcRcpvOynA9Uf2R8Ic4BN\n/kyDXQdlY4TLViTyx2u90/vWw5cM2KRYC4jdGDfy4pCkq48joRVzb7XkTev3qsX2\nh9LBgKEm6Ei6JcBoQEOn9s/Y9bvgUO42JKUgUoep2YDQvakYE8vnXkv6Y2Tx+c/u\n+CxDIlzAgZgeBfzB7gPgNqTyzrD1tjukgqUjTyfKfr8Gs2WakY5UJz0sgruB7qtR\nsJYcz2NrE6hw+voozA8Sw2j9XcIAvKCV/af9W/xFQsy4u9XVhc6AYWdPU7UbIKI=\n=ltBp\n-----END PGP SIGNATURE-----\n", "payload": "tree 58680ef4d3cf0c58dcf34fba7c512c0d264ba0d0\nparent 1dd2d3076df1ff8eb3b722769d9025c3a7f59458\nauthor Artyom Pavlov <newpavlov@gmail.com> 1566244970 +0000\ncommitter GitHub <noreply@github.com> 1566244970 +0000\n\nremove any from cfgs"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34c9f8c6490bb1179c504bccd51b2827c05f10db", "html_url": "https://github.com/rust-lang/rust/commit/34c9f8c6490bb1179c504bccd51b2827c05f10db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34c9f8c6490bb1179c504bccd51b2827c05f10db/comments", "author": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dd2d3076df1ff8eb3b722769d9025c3a7f59458", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dd2d3076df1ff8eb3b722769d9025c3a7f59458", "html_url": "https://github.com/rust-lang/rust/commit/1dd2d3076df1ff8eb3b722769d9025c3a7f59458"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7e0986d8eeb6aa481d553355952642b874493d45", "filename": "src/libstd/sys/unix/process/process_unix.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/34c9f8c6490bb1179c504bccd51b2827c05f10db/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34c9f8c6490bb1179c504bccd51b2827c05f10db/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=34c9f8c6490bb1179c504bccd51b2827c05f10db", "patch": "@@ -178,7 +178,7 @@ impl Command {\n             cvt_r(|| libc::dup2(fd, libc::STDERR_FILENO))?;\n         }\n \n-        #[cfg(not(any(target_os = \"l4re\")))]\n+        #[cfg(not(target_os = \"l4re\"))]\n         {\n             if let Some(u) = self.get_gid() {\n                 cvt(libc::setgid(u as gid_t))?;\n@@ -202,7 +202,7 @@ impl Command {\n         }\n \n         // emscripten has no signal support.\n-        #[cfg(not(any(target_os = \"emscripten\")))]\n+        #[cfg(not(target_os = \"emscripten\"))]\n         {\n             use crate::mem::MaybeUninit;\n             // Reset signal handling so the child process starts in a"}]}