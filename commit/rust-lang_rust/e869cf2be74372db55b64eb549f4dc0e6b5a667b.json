{"sha": "e869cf2be74372db55b64eb549f4dc0e6b5a667b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NjljZjJiZTc0MzcyZGI1NWI2NGViNTQ5ZjRkYzBlNmI1YTY2N2I=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-21T21:49:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-30T08:11:59Z"}, "message": "make ValidationOperand generic so that we can reuse it in miri with a different Lvalue type", "tree": {"sha": "0f1cf2eba8a6f9d30e9b207d02bf3f55f1a0f926", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f1cf2eba8a6f9d30e9b207d02bf3f55f1a0f926"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e869cf2be74372db55b64eb549f4dc0e6b5a667b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e869cf2be74372db55b64eb549f4dc0e6b5a667b", "html_url": "https://github.com/rust-lang/rust/commit/e869cf2be74372db55b64eb549f4dc0e6b5a667b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e869cf2be74372db55b64eb549f4dc0e6b5a667b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60096b9e8259ba227a0a85fc1a16dca5d3fd2217", "url": "https://api.github.com/repos/rust-lang/rust/commits/60096b9e8259ba227a0a85fc1a16dca5d3fd2217", "html_url": "https://github.com/rust-lang/rust/commit/60096b9e8259ba227a0a85fc1a16dca5d3fd2217"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "bef35fdc2578cf3b390b54c78be18b701437c990", "filename": "src/librustc/ich/impls_mir.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e869cf2be74372db55b64eb549f4dc0e6b5a667b/src%2Flibrustc%2Fich%2Fimpls_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e869cf2be74372db55b64eb549f4dc0e6b5a667b/src%2Flibrustc%2Fich%2Fimpls_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_mir.rs?ref=e869cf2be74372db55b64eb549f4dc0e6b5a667b", "patch": "@@ -243,7 +243,19 @@ for mir::StatementKind<'tcx> {\n     }\n }\n \n-impl_stable_hash_for!(struct mir::ValidationOperand<'tcx> { lval, ty, re, mutbl });\n+impl<'a, 'gcx, 'tcx, T> HashStable<StableHashingContext<'a, 'gcx, 'tcx>> for mir::ValidationOperand<'tcx, T>\n+    where T: HashStable<StableHashingContext<'a, 'gcx, 'tcx>>\n+{\n+    fn hash_stable<W: StableHasherResult>(&self,\n+                                          hcx: &mut StableHashingContext<'a, 'gcx, 'tcx>,\n+                                          hasher: &mut StableHasher<W>)\n+    {\n+        self.lval.hash_stable(hcx, hasher);\n+        self.ty.hash_stable(hcx, hasher);\n+        self.re.hash_stable(hcx, hasher);\n+        self.mutbl.hash_stable(hcx, hasher);\n+    }\n+}\n \n impl_stable_hash_for!(enum mir::ValidationOp { Acquire, Release, Suspend(extent) });\n "}, {"sha": "f8261f806296e97e3e320de9c5bbe68815b72333", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e869cf2be74372db55b64eb549f4dc0e6b5a667b/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e869cf2be74372db55b64eb549f4dc0e6b5a667b/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=e869cf2be74372db55b64eb549f4dc0e6b5a667b", "patch": "@@ -826,7 +826,7 @@ pub enum StatementKind<'tcx> {\n     },\n \n     /// Assert the given lvalues to be valid inhabitants of their type.\n-    Validate(ValidationOp, Vec<ValidationOperand<'tcx>>),\n+    Validate(ValidationOp, Vec<ValidationOperand<'tcx, Lvalue<'tcx>>>),\n \n     /// Mark one terminating point of an extent (i.e. static region).\n     /// (The starting point(s) arise implicitly from borrows.)\n@@ -855,15 +855,16 @@ impl Debug for ValidationOp {\n     }\n }\n \n+// This is generic so that it can be reused by miri\n #[derive(Clone, RustcEncodable, RustcDecodable)]\n-pub struct ValidationOperand<'tcx> {\n-    pub lval: Lvalue<'tcx>,\n+pub struct ValidationOperand<'tcx, T> {\n+    pub lval: T,\n     pub ty: Ty<'tcx>,\n     pub re: Option<CodeExtent>,\n     pub mutbl: hir::Mutability,\n }\n \n-impl<'tcx> Debug for ValidationOperand<'tcx> {\n+impl<'tcx, T: Debug> Debug for ValidationOperand<'tcx, T> {\n     fn fmt(&self, fmt: &mut Formatter) -> fmt::Result {\n         write!(fmt, \"{:?}@{:?}\", self.lval, self.ty)?;\n         if let Some(ce) = self.re {\n@@ -1527,7 +1528,7 @@ impl<'tcx> TypeFoldable<'tcx> for BasicBlockData<'tcx> {\n     }\n }\n \n-impl<'tcx> TypeFoldable<'tcx> for ValidationOperand<'tcx> {\n+impl<'tcx> TypeFoldable<'tcx> for ValidationOperand<'tcx, Lvalue<'tcx>> {\n     fn super_fold_with<'gcx: 'tcx, F: TypeFolder<'gcx, 'tcx>>(&self, folder: &mut F) -> Self {\n         ValidationOperand {\n             lval: self.lval.fold_with(folder),"}, {"sha": "005d793cd8b537eb5c2c83b72dea2d2eda035626", "filename": "src/librustc_mir/transform/add_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e869cf2be74372db55b64eb549f4dc0e6b5a667b/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e869cf2be74372db55b64eb549f4dc0e6b5a667b/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_validation.rs?ref=e869cf2be74372db55b64eb549f4dc0e6b5a667b", "patch": "@@ -88,7 +88,7 @@ impl MirPass for AddValidation {\n         let local_decls = mir.local_decls.clone(); // TODO: Find a way to get rid of this clone.\n \n         /// Convert an lvalue to a validation operand.\n-        let lval_to_operand = |lval: Lvalue<'tcx>| -> ValidationOperand<'tcx> {\n+        let lval_to_operand = |lval: Lvalue<'tcx>| -> ValidationOperand<'tcx, Lvalue<'tcx>> {\n             let (re, mutbl) = lval_context(&lval, &local_decls, tcx);\n             let ty = lval.ty(&local_decls, tcx).to_ty(tcx);\n             ValidationOperand { lval, ty, re, mutbl }"}]}