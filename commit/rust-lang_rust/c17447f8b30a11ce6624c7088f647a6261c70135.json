{"sha": "c17447f8b30a11ce6624c7088f647a6261c70135", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxNzQ0N2Y4YjMwYTExY2U2NjI0YzcwODhmNjQ3YTYyNjFjNzAxMzU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-23T05:57:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-24T01:38:59Z"}, "message": "rt: Move some test functions to rust_test_helpers", "tree": {"sha": "fca84c32f8b1a3f0898a4be5117d82440ef0e8bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fca84c32f8b1a3f0898a4be5117d82440ef0e8bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c17447f8b30a11ce6624c7088f647a6261c70135", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c17447f8b30a11ce6624c7088f647a6261c70135", "html_url": "https://github.com/rust-lang/rust/commit/c17447f8b30a11ce6624c7088f647a6261c70135", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c17447f8b30a11ce6624c7088f647a6261c70135/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4541c6cfe3ee875020329f888c39ea75183b23d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4541c6cfe3ee875020329f888c39ea75183b23d1", "html_url": "https://github.com/rust-lang/rust/commit/4541c6cfe3ee875020329f888c39ea75183b23d1"}], "stats": {"total": 141, "additions": 70, "deletions": 71}, "files": [{"sha": "ff4975fdcd8f72a921bd9f9412591d0c259655b1", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=c17447f8b30a11ce6624c7088f647a6261c70135", "patch": "@@ -99,53 +99,6 @@ rand_free(rust_rng *rng) {\n     free(rng);\n }\n \n-\n-/* Debug helpers strictly to verify ABI conformance.\n- *\n- * FIXME (#2665): move these into a testcase when the testsuite\n- * understands how to have explicit C files included.\n- */\n-\n-struct quad {\n-    uint64_t a;\n-    uint64_t b;\n-    uint64_t c;\n-    uint64_t d;\n-};\n-\n-struct floats {\n-    double a;\n-    uint8_t b;\n-    double c;\n-};\n-\n-extern \"C\" quad\n-debug_abi_1(quad q) {\n-    quad qq = { q.c + 1,\n-                q.d - 1,\n-                q.a + 1,\n-                q.b - 1 };\n-    return qq;\n-}\n-\n-extern \"C\" floats\n-debug_abi_2(floats f) {\n-    floats ff = { f.c + 1.0,\n-                  0xff,\n-                  f.a - 1.0 };\n-    return ff;\n-}\n-\n-extern \"C\" int\n-debug_static_mut;\n-\n-int debug_static_mut = 3;\n-\n-extern \"C\" void\n-debug_static_mut_check_four() {\n-    assert(debug_static_mut == 4);\n-}\n-\n extern \"C\" CDECL char*\n #if defined(__WIN32__)\n rust_list_dir_val(WIN32_FIND_DATA* entry_ptr) {"}, {"sha": "33fea72cca713bd8964d31126895f704a140d130", "filename": "src/rt/rust_test_helpers.cpp", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Frt%2Frust_test_helpers.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Frt%2Frust_test_helpers.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_test_helpers.cpp?ref=c17447f8b30a11ce6624c7088f647a6261c70135", "patch": "@@ -178,3 +178,49 @@ extern \"C\" CDECL intptr_t\n rust_get_test_int() {\n   return 1;\n }\n+\n+/* Debug helpers strictly to verify ABI conformance.\n+ *\n+ * FIXME (#2665): move these into a testcase when the testsuite\n+ * understands how to have explicit C files included.\n+ */\n+\n+struct quad {\n+    uint64_t a;\n+    uint64_t b;\n+    uint64_t c;\n+    uint64_t d;\n+};\n+\n+struct floats {\n+    double a;\n+    uint8_t b;\n+    double c;\n+};\n+\n+extern \"C\" quad\n+rust_dbg_abi_1(quad q) {\n+    quad qq = { q.c + 1,\n+                q.d - 1,\n+                q.a + 1,\n+                q.b - 1 };\n+    return qq;\n+}\n+\n+extern \"C\" floats\n+rust_dbg_abi_2(floats f) {\n+    floats ff = { f.c + 1.0,\n+                  0xff,\n+                  f.a - 1.0 };\n+    return ff;\n+}\n+\n+extern \"C\" int\n+rust_dbg_static_mut;\n+\n+int rust_dbg_static_mut = 3;\n+\n+extern \"C\" void\n+rust_dbg_static_mut_check_four() {\n+    assert(rust_dbg_static_mut == 4);\n+}"}, {"sha": "f6c1592559811430acd5ecd4756d1b1fc9c416e7", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=c17447f8b30a11ce6624c7088f647a6261c70135", "patch": "@@ -1,7 +1,7 @@\n-debug_abi_1\n-debug_abi_2\n-debug_static_mut\n-debug_static_mut_check_four\n+rust_dbg_abi_1\n+rust_dbg_abi_2\n+rust_dbg_static_mut\n+rust_dbg_static_mut_check_four\n get_time\n rust_tzset\n rust_gmtime"}, {"sha": "3102fb2664f7d53eb36d38584bcd851b0b691cfc", "filename": "src/test/compile-fail/attrs-after-extern-mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Ftest%2Fcompile-fail%2Fattrs-after-extern-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Ftest%2Fcompile-fail%2Fattrs-after-extern-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattrs-after-extern-mod.rs?ref=c17447f8b30a11ce6624c7088f647a6261c70135", "patch": "@@ -16,8 +16,8 @@ use std::libc;\n \n #[nolink]\n extern {\n-    static mut debug_static_mut: libc::c_int;\n-    pub fn debug_static_mut_check_four();\n+    static mut rust_dbg_static_mut: libc::c_int;\n+    pub fn rust_dbg_static_mut_check_four();\n     #[cfg(stage37)] //~ ERROR expected item after attributes\n }\n "}, {"sha": "0d042d002a144211f0b0c1e1a89de87dab6192bd", "filename": "src/test/run-pass/static-mut-foreign.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Ftest%2Frun-pass%2Fstatic-mut-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Ftest%2Frun-pass%2Fstatic-mut-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-mut-foreign.rs?ref=c17447f8b30a11ce6624c7088f647a6261c70135", "patch": "@@ -16,8 +16,8 @@ use std::libc;\n \n #[nolink]\n extern {\n-    static mut debug_static_mut: libc::c_int;\n-    pub fn debug_static_mut_check_four();\n+    static mut rust_dbg_static_mut: libc::c_int;\n+    pub fn rust_dbg_static_mut_check_four();\n }\n \n unsafe fn static_bound(_: &'static libc::c_int) {}\n@@ -28,18 +28,18 @@ fn static_bound_set(a: &'static mut libc::c_int) {\n \n #[fixed_stack_segment] #[inline(never)]\n unsafe fn run() {\n-    assert!(debug_static_mut == 3);\n-    debug_static_mut = 4;\n-    assert!(debug_static_mut == 4);\n-    debug_static_mut_check_four();\n-    debug_static_mut += 1;\n-    assert!(debug_static_mut == 5);\n-    debug_static_mut *= 3;\n-    assert!(debug_static_mut == 15);\n-    debug_static_mut = -3;\n-    assert!(debug_static_mut == -3);\n-    static_bound(&debug_static_mut);\n-    static_bound_set(&mut debug_static_mut);\n+    assert!(rust_dbg_static_mut == 3);\n+    rust_dbg_static_mut = 4;\n+    assert!(rust_dbg_static_mut == 4);\n+    rust_dbg_static_mut_check_four();\n+    rust_dbg_static_mut += 1;\n+    assert!(rust_dbg_static_mut == 5);\n+    rust_dbg_static_mut *= 3;\n+    assert!(rust_dbg_static_mut == 15);\n+    rust_dbg_static_mut = -3;\n+    assert!(rust_dbg_static_mut == -3);\n+    static_bound(&rust_dbg_static_mut);\n+    static_bound_set(&mut rust_dbg_static_mut);\n }\n \n pub fn main() {"}, {"sha": "3f63902eb3193f298888d9510a58567720bc8f68", "filename": "src/test/run-pass/struct-return.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Ftest%2Frun-pass%2Fstruct-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Ftest%2Frun-pass%2Fstruct-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-return.rs?ref=c17447f8b30a11ce6624c7088f647a6261c70135", "patch": "@@ -16,8 +16,8 @@ mod rustrt {\n \n     #[nolink]\n     extern {\n-        pub fn debug_abi_1(q: Quad) -> Quad;\n-        pub fn debug_abi_2(f: Floats) -> Floats;\n+        pub fn rust_dbg_abi_1(q: Quad) -> Quad;\n+        pub fn rust_dbg_abi_2(f: Floats) -> Floats;\n     }\n }\n \n@@ -28,7 +28,7 @@ fn test1() {\n                  b: 0xbbbb_bbbb_bbbb_bbbb_u64,\n                  c: 0xcccc_cccc_cccc_cccc_u64,\n                  d: 0xdddd_dddd_dddd_dddd_u64 };\n-        let qq = rustrt::debug_abi_1(q);\n+        let qq = rustrt::rust_dbg_abi_1(q);\n         error!(\"a: %x\", qq.a as uint);\n         error!(\"b: %x\", qq.b as uint);\n         error!(\"c: %x\", qq.c as uint);\n@@ -48,7 +48,7 @@ fn test2() {\n         let f = Floats { a: 1.234567890e-15_f64,\n                  b: 0b_1010_1010_u8,\n                  c: 1.0987654321e-15_f64 };\n-        let ff = rustrt::debug_abi_2(f);\n+        let ff = rustrt::rust_dbg_abi_2(f);\n         error!(\"a: %f\", ff.a as float);\n         error!(\"b: %u\", ff.b as uint);\n         error!(\"c: %f\", ff.c as float);"}]}