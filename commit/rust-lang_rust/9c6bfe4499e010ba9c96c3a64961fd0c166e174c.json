{"sha": "9c6bfe4499e010ba9c96c3a64961fd0c166e174c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNmJmZTQ0OTllMDEwYmE5Yzk2YzNhNjQ5NjFmZDBjMTY2ZTE3NGM=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-08T12:31:23Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T19:51:54Z"}, "message": "mir: Truncate bool to i1 for SwitchInt.", "tree": {"sha": "2026d06ee3e33979e6ddd61d8d8549277e6701ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2026d06ee3e33979e6ddd61d8d8549277e6701ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c6bfe4499e010ba9c96c3a64961fd0c166e174c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c6bfe4499e010ba9c96c3a64961fd0c166e174c", "html_url": "https://github.com/rust-lang/rust/commit/9c6bfe4499e010ba9c96c3a64961fd0c166e174c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c6bfe4499e010ba9c96c3a64961fd0c166e174c/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38638d37f70667d8ac5ea6e5cc47e0e04f94d247", "url": "https://api.github.com/repos/rust-lang/rust/commits/38638d37f70667d8ac5ea6e5cc47e0e04f94d247", "html_url": "https://github.com/rust-lang/rust/commit/38638d37f70667d8ac5ea6e5cc47e0e04f94d247"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "3550239a44055ddafd5d0c1012b871edae0fe7a7", "filename": "src/librustc_trans/trans/mir/block.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9c6bfe4499e010ba9c96c3a64961fd0c166e174c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c6bfe4499e010ba9c96c3a64961fd0c166e174c/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs?ref=9c6bfe4499e010ba9c96c3a64961fd0c166e174c", "patch": "@@ -104,6 +104,7 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n             mir::Terminator::SwitchInt { ref discr, switch_ty, ref values, ref targets } => {\n                 let (otherwise, targets) = targets.split_last().unwrap();\n                 let discr = bcx.load(self.trans_lvalue(&bcx, discr).llval);\n+                let discr = bcx.with_block(|bcx| base::to_immediate(bcx, discr, switch_ty));\n                 let switch = bcx.switch(discr, self.llblock(*otherwise), values.len());\n                 for (value, target) in values.iter().zip(targets) {\n                     let llval = self.trans_constval(&bcx, value, switch_ty).immediate();"}]}