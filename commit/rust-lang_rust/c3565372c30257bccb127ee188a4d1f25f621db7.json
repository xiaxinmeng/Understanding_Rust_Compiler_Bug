{"sha": "c3565372c30257bccb127ee188a4d1f25f621db7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNTY1MzcyYzMwMjU3YmNjYjEyN2VlMTg4YTRkMWYyNWY2MjFkYjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-11-17T22:16:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-17T22:16:27Z"}, "message": "Auto merge of #37424 - shiver:issue-37131, r=alexcrichton\n\nImproved error reporting when target sysroot is missing.\n\nAttempts to resolve #37131.\nThis is my first pull request on rust, so I would greatly appreciate any feedback you have on this.\n\nThanks!", "tree": {"sha": "39818ecd80d5343850a26f534a99361161892e93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39818ecd80d5343850a26f534a99361161892e93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3565372c30257bccb127ee188a4d1f25f621db7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3565372c30257bccb127ee188a4d1f25f621db7", "html_url": "https://github.com/rust-lang/rust/commit/c3565372c30257bccb127ee188a4d1f25f621db7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3565372c30257bccb127ee188a4d1f25f621db7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89386d62ab2ae38771b48a64a72ff73f954c4564", "url": "https://api.github.com/repos/rust-lang/rust/commits/89386d62ab2ae38771b48a64a72ff73f954c4564", "html_url": "https://github.com/rust-lang/rust/commit/89386d62ab2ae38771b48a64a72ff73f954c4564"}, {"sha": "66de87ffb230c3d0c0293dd15eb8571a7b66cdf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/66de87ffb230c3d0c0293dd15eb8571a7b66cdf5", "html_url": "https://github.com/rust-lang/rust/commit/66de87ffb230c3d0c0293dd15eb8571a7b66cdf5"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "b677a63edc06458c6e50247dd22281535175dfd2", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c3565372c30257bccb127ee188a4d1f25f621db7/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3565372c30257bccb127ee188a4d1f25f621db7/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=c3565372c30257bccb127ee188a4d1f25f621db7", "patch": "@@ -217,7 +217,7 @@ use creader::Library;\n use schema::{METADATA_HEADER, rustc_version};\n \n use rustc::hir::svh::Svh;\n-use rustc::session::Session;\n+use rustc::session::{config, Session};\n use rustc::session::filesearch::{FileSearch, FileMatches, FileDoesntMatch};\n use rustc::session::search_paths::PathKind;\n use rustc::util::common;\n@@ -355,6 +355,11 @@ impl<'a> Context<'a> {\n                                            \"can't find crate for `{}`{}\",\n                                            self.ident,\n                                            add);\n+\n+            if (self.ident == \"std\" || self.ident == \"core\")\n+                && self.triple != config::host_triple() {\n+                err.note(&format!(\"the `{}` target may not be installed\", self.triple));\n+            }\n             err.span_label(self.span, &format!(\"can't find crate\"));\n             err\n         };"}, {"sha": "88c6eb7f515c31366a3ad382d628033198087c29", "filename": "src/test/compile-fail/issue-37131.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c3565372c30257bccb127ee188a4d1f25f621db7/src%2Ftest%2Fcompile-fail%2Fissue-37131.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3565372c30257bccb127ee188a4d1f25f621db7/src%2Ftest%2Fcompile-fail%2Fissue-37131.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-37131.rs?ref=c3565372c30257bccb127ee188a4d1f25f621db7", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests that compiling for a target which is not installed will result in a helpful\n+// error message.\n+\n+// compile-flags: --target=s390x-unknown-linux-gnu\n+// ignore s390x\n+\n+// error-pattern:target may not be installed\n+fn main() { }"}, {"sha": "3cc14541fcdf2ad02b3b99f87d749422e7df9a65", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c3565372c30257bccb127ee188a4d1f25f621db7/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3565372c30257bccb127ee188a4d1f25f621db7/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=c3565372c30257bccb127ee188a4d1f25f621db7", "patch": "@@ -1334,8 +1334,18 @@ actual:\\n\\\n         // FIXME (#9639): This needs to handle non-utf8 paths\n         let mut args = vec![input_file.to_str().unwrap().to_owned(),\n                             \"-L\".to_owned(),\n-                            self.config.build_base.to_str().unwrap().to_owned(),\n-                            format!(\"--target={}\", target)];\n+                            self.config.build_base.to_str().unwrap().to_owned()];\n+\n+        // Optionally prevent default --target if specified in test compile-flags.\n+        let custom_target = self.props.compile_flags\n+            .iter()\n+            .fold(false, |acc, ref x| acc || x.starts_with(\"--target\"));\n+\n+        if !custom_target {\n+            args.extend(vec![\n+                format!(\"--target={}\", target),\n+            ]);\n+        }\n \n         if let Some(revision) = self.revision {\n             args.extend(vec!["}]}