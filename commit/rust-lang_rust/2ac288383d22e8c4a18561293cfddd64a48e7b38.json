{"sha": "2ac288383d22e8c4a18561293cfddd64a48e7b38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYzI4ODM4M2QyMmU4YzRhMTg1NjEyOTNjZmRkZDY0YTQ4ZTdiMzg=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-13T21:57:00Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-13T23:45:48Z"}, "message": "Add pipes::oneshot(), pipes::send_one(), pipes::try_send_one() wrappers.", "tree": {"sha": "d0e9fe8ec2c6b2cb6f741724c3ad6cf65ec0876f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0e9fe8ec2c6b2cb6f741724c3ad6cf65ec0876f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ac288383d22e8c4a18561293cfddd64a48e7b38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ac288383d22e8c4a18561293cfddd64a48e7b38", "html_url": "https://github.com/rust-lang/rust/commit/2ac288383d22e8c4a18561293cfddd64a48e7b38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ac288383d22e8c4a18561293cfddd64a48e7b38/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ec1dd991405404725b5cc448295dc0be9cd17e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ec1dd991405404725b5cc448295dc0be9cd17e5", "html_url": "https://github.com/rust-lang/rust/commit/4ec1dd991405404725b5cc448295dc0be9cd17e5"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "8db1018f1304860dfaa5228f1c352e3c6ffc5a4e", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2ac288383d22e8c4a18561293cfddd64a48e7b38/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ac288383d22e8c4a18561293cfddd64a48e7b38/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=2ac288383d22e8c4a18561293cfddd64a48e7b38", "patch": "@@ -1144,16 +1144,22 @@ proto! oneshot {\n     }\n }\n \n-/// Receive a message from a oneshot pipe.\n+/// Initialiase a (send-endpoint, recv-endpoint) oneshot pipe pair.\n+fn oneshot<T: send>() -> (oneshot::client::oneshot<T>,\n+                          oneshot::server::oneshot<T>) {\n+    oneshot::init()\n+}\n+\n+/**\n+ * Receive a message from a oneshot pipe, failing if the connection was\n+ * closed.\n+ */\n fn recv_one<T: send>(+port: oneshot::server::oneshot<T>) -> T {\n     let oneshot::send(message) = recv(port);\n     message\n }\n \n-/** Receive a message from a oneshot pipe, or fail if the connection\n-is closed.\n-\n-*/\n+/// Receive a message from a oneshot pipe unless the connection was closed.\n fn try_recv_one<T: send> (+port: oneshot::server::oneshot<T>) -> option<T> {\n     let message = try_recv(port);\n \n@@ -1164,6 +1170,20 @@ fn try_recv_one<T: send> (+port: oneshot::server::oneshot<T>) -> option<T> {\n     }\n }\n \n+/// Send a message on a oneshot pipe, failing if the connection was closed.\n+fn send_one<T: send>(+chan: oneshot::client::oneshot<T>, +data: T) {\n+    oneshot::client::send(chan, data);\n+}\n+\n+/**\n+ * Send a message on a oneshot pipe, or return false if the connection was\n+ * closed.\n+ */\n+fn try_send_one<T: send>(+chan: oneshot::client::oneshot<T>, +data: T)\n+        -> bool {\n+    oneshot::client::try_send(chan, data).is_some()\n+}\n+\n #[cfg(test)]\n mod test {\n     #[test]"}]}