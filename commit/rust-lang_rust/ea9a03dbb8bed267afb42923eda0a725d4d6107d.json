{"sha": "ea9a03dbb8bed267afb42923eda0a725d4d6107d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhOWEwM2RiYjhiZWQyNjdhZmI0MjkyM2VkYTBhNzI1ZDRkNjEwN2Q=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-08T23:22:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-08T23:22:13Z"}, "message": "Rollup merge of #67986 - JohnTitor:fix-ice-rust-call, r=varkor\n\nDisplay more informative ICE\n\nFixes #66696", "tree": {"sha": "fcc952eb6a07b0eb05dd98fa875b67631bc66822", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcc952eb6a07b0eb05dd98fa875b67631bc66822"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea9a03dbb8bed267afb42923eda0a725d4d6107d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeFmQlCRBK7hj4Ov3rIwAAdHIIAIpjBrEXoq05YFWil9qlTRwc\niRpNRovceADW/4N+VC79gzyeXF39OqM/wyoj3KXsr3izCjt8CsCf9Y6g7IdFAlwB\niRBX0fGDXzmIkSFSR/Nb1FwxOaACYnVqBrptRDhY6aKTwEISQeLY0UmzBhzE7cct\nHF0GTyVx0WRNnfSNh3k4RdPgpktaqu2+KzTzxjMG7iilkJ7ArAOIKTKM+rbRkZ3u\nijgp9G47OSUMyzVv0jRH2C8grLYTl6Q6yHZSZ1cBOBvnuFmwC0WJxikmWoZ8Uq2E\nIG2YRUB8NINaJLVKdN5AB6uyjlrIKkkXOjQb30szkDY7fuv/z2+CtysH7J1iXTs=\n=oIg0\n-----END PGP SIGNATURE-----\n", "payload": "tree fcc952eb6a07b0eb05dd98fa875b67631bc66822\nparent 0b3ef24e7596a522a13a3d2c385567d3592b4dfa\nparent c524f3ca98708e994c1670e47f789d9f03c1050e\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1578525733 +0100\ncommitter GitHub <noreply@github.com> 1578525733 +0100\n\nRollup merge of #67986 - JohnTitor:fix-ice-rust-call, r=varkor\n\nDisplay more informative ICE\n\nFixes #66696\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea9a03dbb8bed267afb42923eda0a725d4d6107d", "html_url": "https://github.com/rust-lang/rust/commit/ea9a03dbb8bed267afb42923eda0a725d4d6107d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea9a03dbb8bed267afb42923eda0a725d4d6107d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b3ef24e7596a522a13a3d2c385567d3592b4dfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b3ef24e7596a522a13a3d2c385567d3592b4dfa", "html_url": "https://github.com/rust-lang/rust/commit/0b3ef24e7596a522a13a3d2c385567d3592b4dfa"}, {"sha": "c524f3ca98708e994c1670e47f789d9f03c1050e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c524f3ca98708e994c1670e47f789d9f03c1050e", "html_url": "https://github.com/rust-lang/rust/commit/c524f3ca98708e994c1670e47f789d9f03c1050e"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "acaa4eec9410d5e7a00bd6eebcef0eab07d38fbd", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ea9a03dbb8bed267afb42923eda0a725d4d6107d/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea9a03dbb8bed267afb42923eda0a725d4d6107d/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=ea9a03dbb8bed267afb42923eda0a725d4d6107d", "patch": "@@ -2507,17 +2507,21 @@ where\n         let extra_args = if sig.abi == RustCall {\n             assert!(!sig.c_variadic && extra_args.is_empty());\n \n-            match sig.inputs().last().unwrap().kind {\n-                ty::Tuple(tupled_arguments) => {\n+            if let Some(input) = sig.inputs().last() {\n+                if let ty::Tuple(tupled_arguments) = input.kind {\n                     inputs = &sig.inputs()[0..sig.inputs().len() - 1];\n                     tupled_arguments.iter().map(|k| k.expect_ty()).collect()\n-                }\n-                _ => {\n+                } else {\n                     bug!(\n                         \"argument to function with \\\"rust-call\\\" ABI \\\n-                         is not a tuple\"\n+                            is not a tuple\"\n                     );\n                 }\n+            } else {\n+                bug!(\n+                    \"argument to function with \\\"rust-call\\\" ABI \\\n+                        is not a tuple\"\n+                );\n             }\n         } else {\n             assert!(sig.c_variadic || extra_args.is_empty());"}]}