{"sha": "6cc6dee9e96d55dbbd8593523551a9981a691147", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYzZkZWU5ZTk2ZDU1ZGJiZDg1OTM1MjM1NTFhOTk4MWE2OTExNDc=", "commit": {"author": {"name": "Maan2003", "email": "manmeetmann2003@gmail.com", "date": "2021-06-13T03:55:55Z"}, "committer": {"name": "Maan2003", "email": "manmeetmann2003@gmail.com", "date": "2021-06-13T03:55:55Z"}, "message": "clippy::useless_conversion", "tree": {"sha": "c9a790918f586acd877908a5b34e6b073d551b49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9a790918f586acd877908a5b34e6b073d551b49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cc6dee9e96d55dbbd8593523551a9981a691147", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEVt0Hfgx04mDvJfYh6a8CS6Y8cO0FAmDFgdUACgkQ6a8CS6Y8\ncO3ySQ//c0pPtAzonPSGPi3ZVxB28jCfkwO3okfjgwExl23Z/QJjcUdIuPh6f1m3\nGGlXR/fzJjdZQIEj2J0yWpsVYInTEd+paVNU88xB0m34vSk1bowFtx09dUQYfs/z\ncce7/qrxILlJHMHNO3HdM8hF8vYMnvqdhCSljj7Bv+aRtL688b2j0ur7BZT3tSHD\ndvX3U/uXqBJiZnN6YLnPH4x+JKixbYQGuyw9IDMWfI0HwalNUP3dCSo0O/h+rZYB\nQ3nMm7OokZk/lxvAo+FSjjKx1zQeTx40biyhMbhhJ3NgWh+qXyjyW3u54tTRu5/t\n8VosR85pOZkJbHnRXOBNauF+hWakbg+gVwI7ZzxJQTn0aoAhlEzOS29Ojt/yQc32\nW0yLCz936I/8bzSIqooeC6b8WQxe0N9p7P6UngOZaQclWbyCQJ7HGhl3A5TMSsPQ\n6iCR1TWE4D5+Ua+WyGH9lfhPqivbuYozpZh4bPEvAJIBiI0eI7YzvHLElDRAnsmc\n1upSZTd/qAVH9pavn78pv32mtb4aavXew1fjDFzrbikJ/L5athKQnYht+RRVmeOL\nSpxWGW/85ueYA2Q88FgO82JFPQ3Ah3NpQhzG9OpBmhJPpRvvuqzKG6g3+gGZjB6l\n4f6KTrTypNmcsnm3nvzvu9Cz2Q7wwuJpO0YBDUZdA8XFM3JDiA4=\n=iUMH\n-----END PGP SIGNATURE-----", "payload": "tree c9a790918f586acd877908a5b34e6b073d551b49\nparent c9b4ac5be4daaabc062ab1ee663eba8594750003\nauthor Maan2003 <manmeetmann2003@gmail.com> 1623556555 +0530\ncommitter Maan2003 <manmeetmann2003@gmail.com> 1623556555 +0530\n\nclippy::useless_conversion\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cc6dee9e96d55dbbd8593523551a9981a691147", "html_url": "https://github.com/rust-lang/rust/commit/6cc6dee9e96d55dbbd8593523551a9981a691147", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cc6dee9e96d55dbbd8593523551a9981a691147/comments", "author": {"login": "Maan2003", "id": 49202620, "node_id": "MDQ6VXNlcjQ5MjAyNjIw", "avatar_url": "https://avatars.githubusercontent.com/u/49202620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maan2003", "html_url": "https://github.com/Maan2003", "followers_url": "https://api.github.com/users/Maan2003/followers", "following_url": "https://api.github.com/users/Maan2003/following{/other_user}", "gists_url": "https://api.github.com/users/Maan2003/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maan2003/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maan2003/subscriptions", "organizations_url": "https://api.github.com/users/Maan2003/orgs", "repos_url": "https://api.github.com/users/Maan2003/repos", "events_url": "https://api.github.com/users/Maan2003/events{/privacy}", "received_events_url": "https://api.github.com/users/Maan2003/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Maan2003", "id": 49202620, "node_id": "MDQ6VXNlcjQ5MjAyNjIw", "avatar_url": "https://avatars.githubusercontent.com/u/49202620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maan2003", "html_url": "https://github.com/Maan2003", "followers_url": "https://api.github.com/users/Maan2003/followers", "following_url": "https://api.github.com/users/Maan2003/following{/other_user}", "gists_url": "https://api.github.com/users/Maan2003/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maan2003/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maan2003/subscriptions", "organizations_url": "https://api.github.com/users/Maan2003/orgs", "repos_url": "https://api.github.com/users/Maan2003/repos", "events_url": "https://api.github.com/users/Maan2003/events{/privacy}", "received_events_url": "https://api.github.com/users/Maan2003/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9b4ac5be4daaabc062ab1ee663eba8594750003", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9b4ac5be4daaabc062ab1ee663eba8594750003", "html_url": "https://github.com/rust-lang/rust/commit/c9b4ac5be4daaabc062ab1ee663eba8594750003"}], "stats": {"total": 38, "additions": 16, "deletions": 22}, "files": [{"sha": "b1e1b70d080a153bb53aa0abebbd09b7fe4041b0", "filename": "crates/hir_def/src/item_tree/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Fpretty.rs?ref=6cc6dee9e96d55dbbd8593523551a9981a691147", "patch": "@@ -426,7 +426,7 @@ impl<'a> Printer<'a> {\n                         w!(self, \" {{\");\n                         self.indented(|this| {\n                             for item in &**items {\n-                                this.print_mod_item((*item).into());\n+                                this.print_mod_item(*item);\n                             }\n                         });\n                         wln!(self, \"}}\");"}, {"sha": "3e7d496d5123f2c7e42c0070265cc81f3e463366", "filename": "crates/hir_def/src/lib.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flib.rs?ref=6cc6dee9e96d55dbbd8593523551a9981a691147", "patch": "@@ -736,8 +736,7 @@ fn macro_call_as_call_id(\n                 db.upcast(),\n                 krate,\n                 MacroCallKind::FnLike { ast_id: call.ast_id, fragment },\n-            )\n-            .into())\n+            ))\n     };\n     Ok(res)\n }\n@@ -765,8 +764,7 @@ fn derive_macro_as_call_id(\n                 derive_name: last_segment.to_string(),\n                 derive_attr_index: derive_attr.ast_index,\n             },\n-        )\n-        .into();\n+        );\n     Ok(res)\n }\n \n@@ -804,7 +802,6 @@ fn attr_macro_as_call_id(\n                 attr_args: arg,\n                 invoc_attr_index: macro_attr.id.ast_index,\n             },\n-        )\n-        .into();\n+        );\n     Ok(res)\n }"}, {"sha": "a16203fdb45882b6a187f3509ed59f7a7ce6aeeb", "filename": "crates/hir_def/src/test_db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_def%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_def%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ftest_db.rs?ref=6cc6dee9e96d55dbbd8593523551a9981a691147", "patch": "@@ -325,7 +325,7 @@ impl TestDB {\n                         for diag in source_map.diagnostics() {\n                             let (ptr, message): (InFile<SyntaxNodePtr>, &str) = match diag {\n                                 BodyDiagnostic::InactiveCode { node, .. } => {\n-                                    (node.clone().map(|it| it.into()), \"InactiveCode\")\n+                                    (node.clone().map(|it| it), \"InactiveCode\")\n                                 }\n                                 BodyDiagnostic::MacroError { node, message } => {\n                                     (node.clone().map(|it| it.into()), message.as_str())"}, {"sha": "4610f6f919118cbcd157a1ed8a83c87504fc1195", "filename": "crates/hir_expand/src/builtin_derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs?ref=6cc6dee9e96d55dbbd8593523551a9981a691147", "patch": "@@ -325,7 +325,7 @@ $0\n             },\n         };\n \n-        let id: MacroCallId = db.intern_macro(loc).into();\n+        let id: MacroCallId = db.intern_macro(loc);\n         let parsed = db.parse_or_expand(id.as_file()).unwrap();\n \n         // FIXME text() for syntax nodes parsed from token tree looks weird"}, {"sha": "f24d1d919cfd61b53e793f7daa665ac142dc8696", "filename": "crates/hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=6cc6dee9e96d55dbbd8593523551a9981a691147", "patch": "@@ -430,7 +430,7 @@ fn include_expand(\n ) -> ExpandResult<Option<ExpandedEager>> {\n     let res = (|| {\n         let path = parse_string(tt)?;\n-        let file_id = relative_file(db, arg_id.into(), &path, false)?;\n+        let file_id = relative_file(db, arg_id, &path, false)?;\n \n         let subtree = parse_to_token_tree(&db.file_text(file_id))\n             .ok_or_else(|| mbe::ExpandError::ConversionError)?\n@@ -480,7 +480,7 @@ fn include_str_expand(\n     // it's unusual to `include_str!` a Rust file), but we can return an empty string.\n     // Ideally, we'd be able to offer a precise expansion if the user asks for macro\n     // expansion.\n-    let file_id = match relative_file(db, arg_id.into(), &path, true) {\n+    let file_id = match relative_file(db, arg_id, &path, true) {\n         Ok(file_id) => file_id,\n         Err(_) => {\n             return ExpandResult::ok(Some(ExpandedEager::new(quote!(\"\"))));\n@@ -598,7 +598,7 @@ mod tests {\n                     },\n                 };\n \n-                let id: MacroCallId = db.intern_macro(loc).into();\n+                let id: MacroCallId = db.intern_macro(loc);\n                 id.as_file()\n             }\n             Either::Right(expander) => {\n@@ -635,7 +635,7 @@ mod tests {\n                     kind: MacroCallKind::FnLike { ast_id: call_id, fragment },\n                 };\n \n-                let id: MacroCallId = db.intern_macro(loc).into();\n+                let id: MacroCallId = db.intern_macro(loc);\n                 id.as_file()\n             }\n         };"}, {"sha": "4aecf4af5f4ee429b327ac0977593b00a3da1f2e", "filename": "crates/hir_expand/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=6cc6dee9e96d55dbbd8593523551a9981a691147", "patch": "@@ -57,7 +57,7 @@ impl TokenExpander {\n                 // We store the result in salsa db to prevent non-deterministic behavior in\n                 // some proc-macro implementation\n                 // See #4315 for details\n-                db.expand_proc_macro(id.into()).into()\n+                db.expand_proc_macro(id).into()\n             }\n         }\n     }"}, {"sha": "07799ed2f4504fb0d212559229e3647cb925db9d", "filename": "crates/hir_expand/src/eager.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_expand%2Fsrc%2Feager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_expand%2Fsrc%2Feager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Feager.rs?ref=6cc6dee9e96d55dbbd8593523551a9981a691147", "patch": "@@ -128,7 +128,7 @@ pub fn expand_eager_macro(\n         }),\n         kind: MacroCallKind::FnLike { ast_id: call_id, fragment: FragmentKind::Expr },\n     });\n-    let arg_file_id: MacroCallId = arg_id.into();\n+    let arg_file_id: MacroCallId = arg_id;\n \n     let parsed_args =\n         diagnostic_sink.result(mbe::token_tree_to_syntax_node(&parsed_args, FragmentKind::Expr))?.0;\n@@ -182,8 +182,7 @@ fn lazy_expand(\n             db,\n             krate,\n             MacroCallKind::FnLike { ast_id: macro_call.with_value(ast_id), fragment },\n-        )\n-        .into();\n+        );\n \n     let err = db.macro_expand_error(id);\n     let value = db.parse_or_expand(id.as_file()).map(|node| InFile::new(id.as_file(), node));\n@@ -216,8 +215,7 @@ fn eager_macro_recur(\n                     def,\n                     macro_resolver,\n                     diagnostic_sink,\n-                )?\n-                .into();\n+                )?;\n                 db.parse_or_expand(id.as_file())\n                     .expect(\"successful macro expansion should be parseable\")\n                     .clone_for_update()"}, {"sha": "bb9d84246c3ed764aa3df5e331ecc8cb725dd3db", "filename": "crates/hir_ty/src/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_ty%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc6dee9e96d55dbbd8593523551a9981a691147/crates%2Fhir_ty%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fbuilder.rs?ref=6cc6dee9e96d55dbbd8593523551a9981a691147", "patch": "@@ -202,7 +202,7 @@ impl<T: HasInterner<Interner = Interner> + Fold<Interner>> TyBuilder<Binders<T>>\n \n impl TyBuilder<Binders<Ty>> {\n     pub fn def_ty(db: &dyn HirDatabase, def: TyDefId) -> TyBuilder<Binders<Ty>> {\n-        TyBuilder::subst_binders(db.ty(def.into()))\n+        TyBuilder::subst_binders(db.ty(def))\n     }\n \n     pub fn impl_self_ty(db: &dyn HirDatabase, def: hir_def::ImplId) -> TyBuilder<Binders<Ty>> {"}, {"sha": "54fcaa0e64ac4415501dc8a571f99bc1992564df", "filename": "xtask/src/codegen/gen_lint_completions.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6cc6dee9e96d55dbbd8593523551a9981a691147/xtask%2Fsrc%2Fcodegen%2Fgen_lint_completions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc6dee9e96d55dbbd8593523551a9981a691147/xtask%2Fsrc%2Fcodegen%2Fgen_lint_completions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_lint_completions.rs?ref=6cc6dee9e96d55dbbd8593523551a9981a691147", "patch": "@@ -140,8 +140,7 @@ fn generate_descriptor_clippy(buf: &mut String, path: &Path) -> Result<()> {\n                 .expect(\"should be prefixed by what it does\")\n                 .strip_suffix(suffix_to_strip)\n                 .map(unescape)\n-                .expect(\"should be suffixed by comma\")\n-                .into();\n+                .expect(\"should be suffixed by comma\");\n         }\n     }\n     clippy_lints.sort_by(|lint, lint2| lint.id.cmp(&lint2.id));"}]}