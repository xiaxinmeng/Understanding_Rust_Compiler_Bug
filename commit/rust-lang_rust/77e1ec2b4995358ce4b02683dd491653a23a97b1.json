{"sha": "77e1ec2b4995358ce4b02683dd491653a23a97b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZTFlYzJiNDk5NTM1OGNlNGIwMjY4M2RkNDkxNjUzYTIzYTk3YjE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-01T17:01:40Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-01T17:01:40Z"}, "message": "style: spaces between functions", "tree": {"sha": "4bf8365786bbe676a94370404de5a87b6305a894", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bf8365786bbe676a94370404de5a87b6305a894"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77e1ec2b4995358ce4b02683dd491653a23a97b1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXTxT0AAoJEFbW7qD8Z6xGx/MP/jCqLOA6Cbtf0neIrqtT+twS\nd+bgTDVbdtq3DLIc1Tt2qcs3c3n18tPCE7+5l/BAsQnCnpZ55rgoJ4IxXbod+9dn\nm2VQPhjGyO0FWEU1nCJaPFAM3PawPEAdbwIZBHALbRLB08/6camoTR3ndVwFsEP/\nMNP3nRJK/W6D5j6aCQVJMdCEaDvCEKnstXe0eM3SgbH1JY8zLfni5OdgQkmBuvHJ\nhk3xUU0EH5QnOeTKzUaOlkzxrFKe/3T0G3xtq671/AHIfacS8uFKhzy2tx9zDbZY\nfmPa3ADPhP5DbpIrWGVaj2YrEaZ3HLMOqgKy7ENkAndS1apA/5AODXm/t630JOjc\nM+JI6wcNm/gLXvmoUB2fYBSjP42Pkm0ULhBoT2YGBG6n7i+lZf5komJsXstTI96w\nCuP13QUC3Mr22KmXUTlpXu2W33oPW6iyhPHhHd3YFHLjG+wAbQG9BWC3AfFnytDF\nsCdFUx/qJD4ZYrM5/Oh7MuhBDRCgbdBdr2nG0g//Wes/V3ThYg5Uy7uisMPUIXRu\ntbOvJXzcQ8aS/Lwq7yXB2K1TNUx/YJaYvyPIp8W3MtTgNa2dMK8Pwy6q27iW9Mvn\nGZs9DEyRy5VM5jmcBG4G/m14dXyJ0j32hkS1/3W9sXbkJLYx8F8mY/h/Jry09u0y\ndp9XYGh3VXsoaM6PZUCK\n=7gMF\n-----END PGP SIGNATURE-----", "payload": "tree 4bf8365786bbe676a94370404de5a87b6305a894\nparent 2405c81c65586df5c65ae8670151b5237edf4398\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1464800500 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1464800500 +0200\n\nstyle: spaces between functions"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77e1ec2b4995358ce4b02683dd491653a23a97b1", "html_url": "https://github.com/rust-lang/rust/commit/77e1ec2b4995358ce4b02683dd491653a23a97b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77e1ec2b4995358ce4b02683dd491653a23a97b1/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2405c81c65586df5c65ae8670151b5237edf4398", "url": "https://api.github.com/repos/rust-lang/rust/commits/2405c81c65586df5c65ae8670151b5237edf4398", "html_url": "https://github.com/rust-lang/rust/commit/2405c81c65586df5c65ae8670151b5237edf4398"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "4c8d0c7292b4f289f595624a91b2ed782527e86f", "filename": "src/interpreter/iterator.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/77e1ec2b4995358ce4b02683dd491653a23a97b1/src%2Finterpreter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e1ec2b4995358ce4b02683dd491653a23a97b1/src%2Finterpreter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fiterator.rs?ref=77e1ec2b4995358ce4b02683dd491653a23a97b1", "patch": "@@ -30,7 +30,9 @@ impl<'fncx, 'a, 'b: 'a + 'mir, 'mir, 'tcx: 'b> Stepper<'fncx, 'a, 'b, 'mir, 'tcx\n             process: Self::dummy,\n         }\n     }\n+\n     fn dummy(&mut self) -> EvalResult<()> { Ok(()) }\n+\n     fn statement(&mut self) -> EvalResult<()> {\n         let block_data = self.mir.basic_block_data(self.block);\n         let stmt = &block_data.statements[self.stmt];\n@@ -40,6 +42,7 @@ impl<'fncx, 'a, 'b: 'a + 'mir, 'mir, 'tcx: 'b> Stepper<'fncx, 'a, 'b, 'mir, 'tcx\n         self.stmt += 1;\n         Ok(())\n     }\n+\n     fn terminator(&mut self) -> EvalResult<()> {\n         self.stmt = 0;\n         let term = {\n@@ -67,6 +70,7 @@ impl<'fncx, 'a, 'b: 'a + 'mir, 'mir, 'tcx: 'b> Stepper<'fncx, 'a, 'b, 'mir, 'tcx\n         }\n         Ok(())\n     }\n+\n     pub fn step<'step>(&'step mut self) -> EvalResult<Event<'step, 'tcx>> {\n         (self.process)(self)?;\n \n@@ -86,6 +90,7 @@ impl<'fncx, 'a, 'b: 'a + 'mir, 'mir, 'tcx: 'b> Stepper<'fncx, 'a, 'b, 'mir, 'tcx\n         self.process = Self::terminator;\n         Ok(Event::Terminator(basic_block.terminator()))\n     }\n+    \n     pub fn block(&self) -> mir::BasicBlock {\n         self.block\n     }"}]}