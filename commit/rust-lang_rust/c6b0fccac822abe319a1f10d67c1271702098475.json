{"sha": "c6b0fccac822abe319a1f10d67c1271702098475", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2YjBmY2NhYzgyMmFiZTMxOWExZjEwZDY3YzEyNzE3MDIwOTg0NzU=", "commit": {"author": {"name": "Alisdair Owens", "email": "awo101@zepler.net", "date": "2015-09-02T14:35:56Z"}, "committer": {"name": "Alisdair Owens", "email": "awo101@zepler.net", "date": "2015-09-02T14:35:56Z"}, "message": "Add long diagnostics for E0329", "tree": {"sha": "18ea57447f9f824563a88ef7fad1cfe5a2b5e182", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18ea57447f9f824563a88ef7fad1cfe5a2b5e182"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6b0fccac822abe319a1f10d67c1271702098475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6b0fccac822abe319a1f10d67c1271702098475", "html_url": "https://github.com/rust-lang/rust/commit/c6b0fccac822abe319a1f10d67c1271702098475", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6b0fccac822abe319a1f10d67c1271702098475/comments", "author": {"login": "AlisdairO", "id": 6296622, "node_id": "MDQ6VXNlcjYyOTY2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6296622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlisdairO", "html_url": "https://github.com/AlisdairO", "followers_url": "https://api.github.com/users/AlisdairO/followers", "following_url": "https://api.github.com/users/AlisdairO/following{/other_user}", "gists_url": "https://api.github.com/users/AlisdairO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlisdairO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlisdairO/subscriptions", "organizations_url": "https://api.github.com/users/AlisdairO/orgs", "repos_url": "https://api.github.com/users/AlisdairO/repos", "events_url": "https://api.github.com/users/AlisdairO/events{/privacy}", "received_events_url": "https://api.github.com/users/AlisdairO/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AlisdairO", "id": 6296622, "node_id": "MDQ6VXNlcjYyOTY2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6296622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlisdairO", "html_url": "https://github.com/AlisdairO", "followers_url": "https://api.github.com/users/AlisdairO/followers", "following_url": "https://api.github.com/users/AlisdairO/following{/other_user}", "gists_url": "https://api.github.com/users/AlisdairO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlisdairO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlisdairO/subscriptions", "organizations_url": "https://api.github.com/users/AlisdairO/orgs", "repos_url": "https://api.github.com/users/AlisdairO/repos", "events_url": "https://api.github.com/users/AlisdairO/events{/privacy}", "received_events_url": "https://api.github.com/users/AlisdairO/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "370fe2786109360f7c35b8ba552b83b773dd71d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/370fe2786109360f7c35b8ba552b83b773dd71d6", "html_url": "https://github.com/rust-lang/rust/commit/370fe2786109360f7c35b8ba552b83b773dd71d6"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "826524a415f750a3e8cf300cfed0a7322552ecf4", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c6b0fccac822abe319a1f10d67c1271702098475/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6b0fccac822abe319a1f10d67c1271702098475/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=c6b0fccac822abe319a1f10d67c1271702098475", "patch": "@@ -2705,6 +2705,37 @@ fn main() {\n ```\n \"##,\n \n+E0329: r##\"\n+An attempt was made to access an associated constant through either a generic\n+type parameter or `Self`. This is not supported yet. An example causing this\n+error is shown below:\n+\n+```\n+trait Foo {\n+    const BAR: f64;\n+}\n+\n+struct MyStruct;\n+\n+impl Foo for MyStruct {\n+    const BAR: f64 = 0f64;\n+}\n+\n+fn get_bar_bad<F: Foo>(t: F) -> f64 {\n+    F::BAR\n+}\n+```\n+\n+Currently, the value of `BAR` for a particular type can only be accessed through\n+a concrete type, as shown below:\n+\n+```\n+fn get_bar_good() -> f64 {\n+    <MyStruct as Foo>::BAR\n+}\n+```\n+\"##,\n+\n E0366: r##\"\n An attempt was made to implement `Drop` on a concrete specialization of a\n generic type. An example is shown below:\n@@ -3251,7 +3282,6 @@ register_diagnostics! {\n     E0320, // recursive overflow during dropck\n     E0321, // extended coherence rules for defaulted traits violated\n     E0328, // cannot implement Unsize explicitly\n-    E0329, // associated const depends on type parameter or Self.\n     E0374, // the trait `CoerceUnsized` may only be implemented for a coercion\n            // between structures with one field being coerced, none found\n     E0375, // the trait `CoerceUnsized` may only be implemented for a coercion"}]}