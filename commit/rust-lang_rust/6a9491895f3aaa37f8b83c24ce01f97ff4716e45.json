{"sha": "6a9491895f3aaa37f8b83c24ce01f97ff4716e45", "node_id": "C_kwDOAAsO6NoAKDZhOTQ5MTg5NWYzYWFhMzdmOGI4M2MyNGNlMDFmOTdmZjQ3MTZlNDU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-14T19:47:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-14T19:47:30Z"}, "message": "Rollup merge of #91798 - bugadani:issue-91783, r=michaelwoerister\n\nAvoid suggest adding `self` in visibility spec\n\nFixes #91783", "tree": {"sha": "0ed715169f20c458dcb97c6c3d88ffd4f44dca3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ed715169f20c458dcb97c6c3d88ffd4f44dca3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a9491895f3aaa37f8b83c24ce01f97ff4716e45", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhuPTTCRBK7hj4Ov3rIwAAxJIIADyYFtbNDbx+MTgQkvExuRcJ\nkm7RmnTuFgXfkpB4DO1zVquGryw88ijQRQJ683RYicroHB0rYw/E9PiWW/Zxl0XC\nJd40CXNfLevMsWBi/m6P1LgmndtaHw5ypThLsDNwj3OA5Hhwya4XkgacFj6PO9B5\n562Ti3lQ4hnJ8fwUYn8DLJ/mv541IT8N1UJhHF9KqspBiLNbKY8NRZ6+nvjjqRuW\n9mDX9GA0LT0mZo69LKERPvGHM7Xp9ANytNpjVUcGTJik2hsBVK0m9+fJ9vhD/OxS\nARBEDJ2BhdWo8R4zaYJF569vB7I6QGOnAYVhCct8fqkKEKwgEOFoTgR2k1idMps=\n=tYb2\n-----END PGP SIGNATURE-----\n", "payload": "tree 0ed715169f20c458dcb97c6c3d88ffd4f44dca3c\nparent a38d668296476d5b7c44eb9131a468277bb95767\nparent f3a08fd8e78b567342d1f42cc17315eddea9b1e7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639511250 +0100\ncommitter GitHub <noreply@github.com> 1639511250 +0100\n\nRollup merge of #91798 - bugadani:issue-91783, r=michaelwoerister\n\nAvoid suggest adding `self` in visibility spec\n\nFixes #91783\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a9491895f3aaa37f8b83c24ce01f97ff4716e45", "html_url": "https://github.com/rust-lang/rust/commit/6a9491895f3aaa37f8b83c24ce01f97ff4716e45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a9491895f3aaa37f8b83c24ce01f97ff4716e45/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a38d668296476d5b7c44eb9131a468277bb95767", "url": "https://api.github.com/repos/rust-lang/rust/commits/a38d668296476d5b7c44eb9131a468277bb95767", "html_url": "https://github.com/rust-lang/rust/commit/a38d668296476d5b7c44eb9131a468277bb95767"}, {"sha": "f3a08fd8e78b567342d1f42cc17315eddea9b1e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3a08fd8e78b567342d1f42cc17315eddea9b1e7", "html_url": "https://github.com/rust-lang/rust/commit/f3a08fd8e78b567342d1f42cc17315eddea9b1e7"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "3e1afdfa9a5c651785bf7760ba6400a3931ffcda", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6a9491895f3aaa37f8b83c24ce01f97ff4716e45/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a9491895f3aaa37f8b83c24ce01f97ff4716e45/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=6a9491895f3aaa37f8b83c24ce01f97ff4716e45", "patch": "@@ -298,11 +298,16 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                             .get(0)\n                             .map(|p| (p.span.shrink_to_lo(), \"&self, \"))\n                             .unwrap_or_else(|| {\n+                                // Try to look for the \"(\" after the function name, if possible.\n+                                // This avoids placing the suggestion into the visibility specifier.\n+                                let span = fn_kind\n+                                    .ident()\n+                                    .map_or(*span, |ident| span.with_lo(ident.span.hi()));\n                                 (\n                                     self.r\n                                         .session\n                                         .source_map()\n-                                        .span_through_char(*span, '(')\n+                                        .span_through_char(span, '(')\n                                         .shrink_to_hi(),\n                                     \"&self\",\n                                 )"}, {"sha": "40692c8df2053524b9320a81c144d2b040929ecb", "filename": "src/test/ui/suggestions/suggest-add-self.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6a9491895f3aaa37f8b83c24ce01f97ff4716e45/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-add-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a9491895f3aaa37f8b83c24ce01f97ff4716e45/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-add-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-add-self.rs?ref=6a9491895f3aaa37f8b83c24ce01f97ff4716e45", "patch": "@@ -0,0 +1,15 @@\n+struct X(i32);\n+\n+impl X {\n+    pub(crate) fn f() {\n+        self.0\n+        //~^ ERROR expected value, found module `self`\n+    }\n+\n+    pub fn g() {\n+        self.0\n+        //~^ ERROR expected value, found module `self`\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "a5e8f93deb64a7334a42c98d60d0ebd95363d5d3", "filename": "src/test/ui/suggestions/suggest-add-self.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6a9491895f3aaa37f8b83c24ce01f97ff4716e45/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-add-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a9491895f3aaa37f8b83c24ce01f97ff4716e45/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-add-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-add-self.stderr?ref=6a9491895f3aaa37f8b83c24ce01f97ff4716e45", "patch": "@@ -0,0 +1,29 @@\n+error[E0424]: expected value, found module `self`\n+  --> $DIR/suggest-add-self.rs:5:9\n+   |\n+LL |     pub(crate) fn f() {\n+   |                   - this function doesn't have a `self` parameter\n+LL |         self.0\n+   |         ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+   |\n+help: add a `self` receiver parameter to make the associated `fn` a method\n+   |\n+LL |     pub(crate) fn f(&self) {\n+   |                     +++++\n+\n+error[E0424]: expected value, found module `self`\n+  --> $DIR/suggest-add-self.rs:10:9\n+   |\n+LL |     pub fn g() {\n+   |            - this function doesn't have a `self` parameter\n+LL |         self.0\n+   |         ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+   |\n+help: add a `self` receiver parameter to make the associated `fn` a method\n+   |\n+LL |     pub fn g(&self) {\n+   |              +++++\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0424`."}]}