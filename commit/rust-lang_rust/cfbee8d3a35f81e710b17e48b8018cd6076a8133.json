{"sha": "cfbee8d3a35f81e710b17e48b8018cd6076a8133", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmYmVlOGQzYTM1ZjgxZTcxMGIxN2U0OGI4MDE4Y2Q2MDc2YTgxMzM=", "commit": {"author": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-10-04T04:42:06Z"}, "committer": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-10-12T08:05:00Z"}, "message": "Remove previously added parameter names from the function data", "tree": {"sha": "65f2ba69f98599ea5b499be14f1002b293172722", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65f2ba69f98599ea5b499be14f1002b293172722"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfbee8d3a35f81e710b17e48b8018cd6076a8133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfbee8d3a35f81e710b17e48b8018cd6076a8133", "html_url": "https://github.com/rust-lang/rust/commit/cfbee8d3a35f81e710b17e48b8018cd6076a8133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfbee8d3a35f81e710b17e48b8018cd6076a8133/comments", "author": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b42562b5dee4f4ce23094c7bab6406e3b00f90ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/b42562b5dee4f4ce23094c7bab6406e3b00f90ad", "html_url": "https://github.com/rust-lang/rust/commit/b42562b5dee4f4ce23094c7bab6406e3b00f90ad"}], "stats": {"total": 18, "additions": 0, "deletions": 18}, "files": [{"sha": "ff1ef0df64e597e0473d16304d2571c8b231a828", "filename": "crates/hir_def/src/data.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfbee8d3a35f81e710b17e48b8018cd6076a8133/crates%2Fhir_def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfbee8d3a35f81e710b17e48b8018cd6076a8133/crates%2Fhir_def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdata.rs?ref=cfbee8d3a35f81e710b17e48b8018cd6076a8133", "patch": "@@ -19,7 +19,6 @@ use crate::{\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct FunctionData {\n     pub name: Name,\n-    pub param_names: Vec<Option<Name>>,\n     pub params: Vec<TypeRef>,\n     pub ret_type: TypeRef,\n     pub attrs: Attrs,\n@@ -40,7 +39,6 @@ impl FunctionData {\n \n         Arc::new(FunctionData {\n             name: func.name.clone(),\n-            param_names: func.param_names.to_vec(),\n             params: func.params.to_vec(),\n             ret_type: func.ret_type.clone(),\n             attrs: item_tree.attrs(ModItem::from(loc.id.value).into()).clone(),"}, {"sha": "8a1121bbdfbc3a9bd46b9422aeb939dfed53d349", "filename": "crates/hir_def/src/item_tree.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfbee8d3a35f81e710b17e48b8018cd6076a8133/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfbee8d3a35f81e710b17e48b8018cd6076a8133/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs?ref=cfbee8d3a35f81e710b17e48b8018cd6076a8133", "patch": "@@ -507,8 +507,6 @@ pub struct Function {\n     pub has_self_param: bool,\n     pub has_body: bool,\n     pub is_unsafe: bool,\n-    /// List of function parameters names. Does not include `self`.\n-    pub param_names: Box<[Option<Name>]>,\n     pub params: Box<[TypeRef]>,\n     pub is_varargs: bool,\n     pub ret_type: TypeRef,"}, {"sha": "3328639cfe3f1fba288308c32b887fd3e382ecc1", "filename": "crates/hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cfbee8d3a35f81e710b17e48b8018cd6076a8133/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfbee8d3a35f81e710b17e48b8018cd6076a8133/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=cfbee8d3a35f81e710b17e48b8018cd6076a8133", "patch": "@@ -283,7 +283,6 @@ impl Ctx {\n         let name = func.name()?.as_name();\n \n         let mut params = Vec::new();\n-        let mut param_names = Vec::new();\n         let mut has_self_param = false;\n         if let Some(param_list) = func.param_list() {\n             if let Some(self_param) = param_list.self_param() {\n@@ -306,18 +305,6 @@ impl Ctx {\n                 has_self_param = true;\n             }\n             for param in param_list.params() {\n-                let param_name = param\n-                    .pat()\n-                    .map(|name| {\n-                        if let ast::Pat::IdentPat(ident) = name {\n-                            Some(ident.name()?.as_name())\n-                        } else {\n-                            None\n-                        }\n-                    })\n-                    .flatten();\n-                param_names.push(param_name);\n-\n                 let type_ref = TypeRef::from_ast_opt(&self.body_ctx, param.ty());\n                 params.push(type_ref);\n             }\n@@ -354,7 +341,6 @@ impl Ctx {\n             has_body,\n             is_unsafe: func.unsafe_token().is_some(),\n             params: params.into_boxed_slice(),\n-            param_names: param_names.into_boxed_slice(),\n             is_varargs,\n             ret_type,\n             ast_id,"}]}