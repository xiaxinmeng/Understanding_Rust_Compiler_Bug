{"sha": "13fb05107402f410a31c8652d3b754ee8ac64517", "node_id": "C_kwDOAAsO6NoAKDEzZmIwNTEwNzQwMmY0MTBhMzFjODY1MmQzYjc1NGVlOGFjNjQ1MTc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-15T09:57:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-15T09:57:03Z"}, "message": "Rollup merge of #91918 - fee1-dead:constification0-the-great-constification-begins, r=oli-obk\n\nConstify `bool::then{,_some}`\n\nNote on `~const Drop`: it has no effect when called from runtime functions, when called from const contexts, the trait system ensures that the type can be dropped in const contexts.", "tree": {"sha": "9a7d1031fedbe8482402d28ff3099aba7a0d59f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a7d1031fedbe8482402d28ff3099aba7a0d59f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13fb05107402f410a31c8652d3b754ee8ac64517", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhubvvCRBK7hj4Ov3rIwAApH8IAGmo/h+XPpRfY3q5EAlnhJk1\naderaDlXW51o/LqUwG70/5ngiJ9EWyKy+YtlIp73iaHFP6RvyR2Gbk4bXHMbWDXA\nDbssSEfJ8iOdGZ2jHChfiq8cepPenc0OL6a93SDeM+1VS4DF1rAUAq8YitDHcKwY\nkm6j5rEm5QM3HQlqBQoy6vnOE7LbxR5q+JbCCAX2Js18YG1BfqMoqfyrM9c0BKVd\nUdDgf61QpP3BKM0Wm5ItFKkGFs1DBXQVsd6prn8vQMKX/qSoT2ENjzliDVg06r+m\n8X4SbL80tTDi1jfmYVhXhRviyBZBJNwY7Kt7STp9Ra7C0M6kGBIfHKZ3sHJmvYI=\n=/ho6\n-----END PGP SIGNATURE-----\n", "payload": "tree 9a7d1031fedbe8482402d28ff3099aba7a0d59f8\nparent 99f4458a8c1bc6c013268b752074516ddb186051\nparent 4f4b2c7271d3090b6b63bf1ce8373a47b5b30d86\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639562223 +0100\ncommitter GitHub <noreply@github.com> 1639562223 +0100\n\nRollup merge of #91918 - fee1-dead:constification0-the-great-constification-begins, r=oli-obk\n\nConstify `bool::then{,_some}`\n\nNote on `~const Drop`: it has no effect when called from runtime functions, when called from const contexts, the trait system ensures that the type can be dropped in const contexts.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13fb05107402f410a31c8652d3b754ee8ac64517", "html_url": "https://github.com/rust-lang/rust/commit/13fb05107402f410a31c8652d3b754ee8ac64517", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13fb05107402f410a31c8652d3b754ee8ac64517/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99f4458a8c1bc6c013268b752074516ddb186051", "url": "https://api.github.com/repos/rust-lang/rust/commits/99f4458a8c1bc6c013268b752074516ddb186051", "html_url": "https://github.com/rust-lang/rust/commit/99f4458a8c1bc6c013268b752074516ddb186051"}, {"sha": "4f4b2c7271d3090b6b63bf1ce8373a47b5b30d86", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f4b2c7271d3090b6b63bf1ce8373a47b5b30d86", "html_url": "https://github.com/rust-lang/rust/commit/4f4b2c7271d3090b6b63bf1ce8373a47b5b30d86"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "d5119d0b7c3286f70153d9c28a6393fec1f061db", "filename": "library/core/src/bool.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/13fb05107402f410a31c8652d3b754ee8ac64517/library%2Fcore%2Fsrc%2Fbool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13fb05107402f410a31c8652d3b754ee8ac64517/library%2Fcore%2Fsrc%2Fbool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fbool.rs?ref=13fb05107402f410a31c8652d3b754ee8ac64517", "patch": "@@ -14,8 +14,12 @@ impl bool {\n     /// assert_eq!(true.then_some(0), Some(0));\n     /// ```\n     #[unstable(feature = \"bool_to_option\", issue = \"80967\")]\n+    #[rustc_const_unstable(feature = \"const_bool_to_option\", issue = \"91917\")]\n     #[inline]\n-    pub fn then_some<T>(self, t: T) -> Option<T> {\n+    pub const fn then_some<T>(self, t: T) -> Option<T>\n+    where\n+        T: ~const Drop,\n+    {\n         if self { Some(t) } else { None }\n     }\n \n@@ -29,8 +33,13 @@ impl bool {\n     /// assert_eq!(true.then(|| 0), Some(0));\n     /// ```\n     #[stable(feature = \"lazy_bool_to_option\", since = \"1.50.0\")]\n+    #[rustc_const_unstable(feature = \"const_bool_to_option\", issue = \"91917\")]\n     #[inline]\n-    pub fn then<T, F: FnOnce() -> T>(self, f: F) -> Option<T> {\n+    pub const fn then<T, F>(self, f: F) -> Option<T>\n+    where\n+        F: ~const FnOnce() -> T,\n+        F: ~const Drop,\n+    {\n         if self { Some(f()) } else { None }\n     }\n }"}, {"sha": "4819ce911d6186a54a45e42c49aefd68c4ab284d", "filename": "library/core/tests/bool.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/13fb05107402f410a31c8652d3b754ee8ac64517/library%2Fcore%2Ftests%2Fbool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13fb05107402f410a31c8652d3b754ee8ac64517/library%2Fcore%2Ftests%2Fbool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fbool.rs?ref=13fb05107402f410a31c8652d3b754ee8ac64517", "patch": "@@ -88,4 +88,18 @@ fn test_bool_to_option() {\n     assert_eq!(true.then_some(0), Some(0));\n     assert_eq!(false.then(|| 0), None);\n     assert_eq!(true.then(|| 0), Some(0));\n+\n+    const fn zero() -> i32 {\n+        0\n+    }\n+\n+    const A: Option<i32> = false.then_some(0);\n+    const B: Option<i32> = true.then_some(0);\n+    const C: Option<i32> = false.then(zero);\n+    const D: Option<i32> = true.then(zero);\n+\n+    assert_eq!(A, None);\n+    assert_eq!(B, Some(0));\n+    assert_eq!(C, None);\n+    assert_eq!(D, Some(0));\n }"}, {"sha": "dacb33619f8c3d0bd88ac62299df1467ce623abd", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13fb05107402f410a31c8652d3b754ee8ac64517/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13fb05107402f410a31c8652d3b754ee8ac64517/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=13fb05107402f410a31c8652d3b754ee8ac64517", "patch": "@@ -8,6 +8,7 @@\n #![feature(cfg_panic)]\n #![feature(cfg_target_has_atomic)]\n #![feature(const_assume)]\n+#![feature(const_bool_to_option)]\n #![feature(const_cell_into_inner)]\n #![feature(const_convert)]\n #![feature(const_maybe_uninit_as_mut_ptr)]"}]}