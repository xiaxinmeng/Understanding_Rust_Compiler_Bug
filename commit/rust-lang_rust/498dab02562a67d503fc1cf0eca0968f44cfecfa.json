{"sha": "498dab02562a67d503fc1cf0eca0968f44cfecfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5OGRhYjAyNTYyYTY3ZDUwM2ZjMWNmMGVjYTA5NjhmNDRjZmVjZmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-13T00:33:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-13T00:33:04Z"}, "message": "Auto merge of #76306 - tmiasko:nrvo-debuginfo, r=ecstatic-morse\n\nNRVO: Allow occurrences of the return place in var debug info\n\nThe non-use occurrence of the return place in var debug info does not\ncurrently inhibit NRVO optimization, but it will fail assertion in\n`visit_place` when optimization is performed.\n\nRelax assertion check to allow the return place in var debug info.\n\nThis case might be impossible to hit in optimization pipelines as of\nnow, but can be encountered in customized mir-opt-level=2 pipeline with\ncopy propagation disabled. For example in:\n\n```rust\npub fn b(s: String) -> String {\n    a(s)\n}\n\n#[inline]\npub fn a(s: String) -> String {\n    let x = s;\n    let y = x;\n    y\n}\n```", "tree": {"sha": "aa15f594372621dff452e4d0950ce11cc4a0ebeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa15f594372621dff452e4d0950ce11cc4a0ebeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/498dab02562a67d503fc1cf0eca0968f44cfecfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/498dab02562a67d503fc1cf0eca0968f44cfecfa", "html_url": "https://github.com/rust-lang/rust/commit/498dab02562a67d503fc1cf0eca0968f44cfecfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/498dab02562a67d503fc1cf0eca0968f44cfecfa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbb73f8f79ab176a897d5a95e696adb71b957cbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbb73f8f79ab176a897d5a95e696adb71b957cbe", "html_url": "https://github.com/rust-lang/rust/commit/dbb73f8f79ab176a897d5a95e696adb71b957cbe"}, {"sha": "01510612ee20d14a3397427891a4042a34d53956", "url": "https://api.github.com/repos/rust-lang/rust/commits/01510612ee20d14a3397427891a4042a34d53956", "html_url": "https://github.com/rust-lang/rust/commit/01510612ee20d14a3397427891a4042a34d53956"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "3673b6a4aa223c2e5e9c0b9dd139c3133aed904e", "filename": "compiler/rustc_mir/src/transform/nrvo.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/498dab02562a67d503fc1cf0eca0968f44cfecfa/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fnrvo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/498dab02562a67d503fc1cf0eca0968f44cfecfa/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fnrvo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fnrvo.rs?ref=498dab02562a67d503fc1cf0eca0968f44cfecfa", "patch": "@@ -1,6 +1,6 @@\n use rustc_hir::Mutability;\n use rustc_index::bit_set::HybridBitSet;\n-use rustc_middle::mir::visit::{MutVisitor, PlaceContext, Visitor};\n+use rustc_middle::mir::visit::{MutVisitor, NonUseContext, PlaceContext, Visitor};\n use rustc_middle::mir::{self, BasicBlock, Local, Location};\n use rustc_middle::ty::TyCtxt;\n \n@@ -196,9 +196,10 @@ impl MutVisitor<'tcx> for RenameToReturnPlace<'tcx> {\n         self.super_terminator(terminator, loc);\n     }\n \n-    fn visit_local(&mut self, l: &mut Local, _: PlaceContext, _: Location) {\n-        assert_ne!(*l, mir::RETURN_PLACE);\n-        if *l == self.to_rename {\n+    fn visit_local(&mut self, l: &mut Local, ctxt: PlaceContext, _: Location) {\n+        if *l == mir::RETURN_PLACE {\n+            assert_eq!(ctxt, PlaceContext::NonUse(NonUseContext::VarDebugInfo));\n+        } else if *l == self.to_rename {\n             *l = mir::RETURN_PLACE;\n         }\n     }"}]}