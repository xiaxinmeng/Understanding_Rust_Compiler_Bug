{"sha": "52d23c92530e04ba4c8d556f8abe3ac33e56e501", "node_id": "C_kwDOAAsO6NoAKDUyZDIzYzkyNTMwZTA0YmE0YzhkNTU2ZjhhYmUzYWMzM2U1NmU1MDE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-04-15T21:55:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-15T21:55:21Z"}, "message": "Rollup merge of #110272 - Ezrashaw:fix-unconned-lt-in-implbounds, r=aliemjay\n\nfix: skip implied bounds if unconstrained lifetime exists\n\nFixes #110161\n\nr? ````@aliemjay````", "tree": {"sha": "0e6714ca065865df9185429e028fc24cf6063524", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e6714ca065865df9185429e028fc24cf6063524"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52d23c92530e04ba4c8d556f8abe3ac33e56e501", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkOx1JCRBK7hj4Ov3rIwAAaLoIALF8cTwKsdndPd36tYTcseuN\nN7H+80T/LWXahPzaJNuWfumjl98lG3fw76nt0o9oIXiPg9MqI1mwYjU+vbYy1JJ9\nbcVagP4loh5VcLTMp6slG5inTMrg8rMu6UrAObl+DiQnf07a5DtIKAXoNIHfoW8E\nYkqGXF1iMEwJlPumWKafla4YD2udBUvYHJSSr0baql5IviAFjwgIRRBrAGECsSzG\ngFTX50kpLiliTAq4IWe1nRnzkqoIsBmFHUZW9wbFe/+uTIwYl095GhYXrMWXeXUn\nC0XT5jOfGp4LGboS2acfQ2IGNNQPGpehRQFWOksc7T/BuyLo8ZF+TSyiHxaGyyk=\n=KEN/\n-----END PGP SIGNATURE-----\n", "payload": "tree 0e6714ca065865df9185429e028fc24cf6063524\nparent 7e6983e27dc1788c63f297026ee5258791298aae\nparent 4c80f58d4188165cc20f72223ec4d1ff46bfb4a8\nauthor Yuki Okushi <jtitor@2k36.org> 1681595721 +0900\ncommitter GitHub <noreply@github.com> 1681595721 +0900\n\nRollup merge of #110272 - Ezrashaw:fix-unconned-lt-in-implbounds, r=aliemjay\n\nfix: skip implied bounds if unconstrained lifetime exists\n\nFixes #110161\n\nr? ````@aliemjay````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52d23c92530e04ba4c8d556f8abe3ac33e56e501", "html_url": "https://github.com/rust-lang/rust/commit/52d23c92530e04ba4c8d556f8abe3ac33e56e501", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52d23c92530e04ba4c8d556f8abe3ac33e56e501/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e6983e27dc1788c63f297026ee5258791298aae", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e6983e27dc1788c63f297026ee5258791298aae", "html_url": "https://github.com/rust-lang/rust/commit/7e6983e27dc1788c63f297026ee5258791298aae"}, {"sha": "4c80f58d4188165cc20f72223ec4d1ff46bfb4a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c80f58d4188165cc20f72223ec4d1ff46bfb4a8", "html_url": "https://github.com/rust-lang/rust/commit/4c80f58d4188165cc20f72223ec4d1ff46bfb4a8"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "e01a57ea4fee8443ce63cac34d81f1e723837c15", "filename": "compiler/rustc_trait_selection/src/traits/outlives_bounds.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/52d23c92530e04ba4c8d556f8abe3ac33e56e501/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Foutlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52d23c92530e04ba4c8d556f8abe3ac33e56e501/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Foutlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Foutlives_bounds.rs?ref=52d23c92530e04ba4c8d556f8abe3ac33e56e501", "patch": "@@ -55,7 +55,18 @@ impl<'a, 'tcx: 'a> InferCtxtExt<'a, 'tcx> for InferCtxt<'tcx> {\n     ) -> Vec<OutlivesBound<'tcx>> {\n         let ty = self.resolve_vars_if_possible(ty);\n         let ty = OpportunisticRegionResolver::new(self).fold_ty(ty);\n-        assert!(!ty.needs_infer());\n+\n+        // We do not expect existential variables in implied bounds.\n+        // We may however encounter unconstrained lifetime variables in invalid\n+        // code. See #110161 for context.\n+        assert!(!ty.has_non_region_infer());\n+        if ty.needs_infer() {\n+            self.tcx.sess.delay_span_bug(\n+                self.tcx.def_span(body_id),\n+                \"skipped implied_outlives_bounds due to unconstrained lifetimes\",\n+            );\n+            return vec![];\n+        }\n \n         let span = self.tcx.def_span(body_id);\n         let result = param_env"}, {"sha": "e52c8356b52b3171b9f2f8d7400852e96fc1ec69", "filename": "tests/ui/implied-bounds/issue-110161.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/52d23c92530e04ba4c8d556f8abe3ac33e56e501/tests%2Fui%2Fimplied-bounds%2Fissue-110161.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52d23c92530e04ba4c8d556f8abe3ac33e56e501/tests%2Fui%2Fimplied-bounds%2Fissue-110161.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplied-bounds%2Fissue-110161.rs?ref=52d23c92530e04ba4c8d556f8abe3ac33e56e501", "patch": "@@ -0,0 +1,26 @@\n+// ICE regression relating to unconstrained lifetimes in implied\n+// bounds. See #110161.\n+\n+// compile-flags: --crate-type=lib\n+\n+trait LtTrait {\n+    type Ty;\n+}\n+\n+// erroneous `Ty` impl\n+impl LtTrait for () {\n+//~^ ERROR not all trait items implemented, missing: `Ty` [E0046]\n+}\n+\n+// `'lt` is not constrained by the erroneous `Ty`\n+impl<'lt, T> LtTrait for Box<T>\n+where\n+    T: LtTrait<Ty = &'lt ()>,\n+{\n+    type Ty = &'lt ();\n+}\n+\n+// unconstrained lifetime appears in implied bounds\n+fn test(_: <Box<()> as LtTrait>::Ty) {}\n+\n+fn test2<'x>(_: &'x <Box<()> as LtTrait>::Ty) {}"}, {"sha": "9e0188694ed9c2790c8c546cff944404c14f6270", "filename": "tests/ui/implied-bounds/issue-110161.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/52d23c92530e04ba4c8d556f8abe3ac33e56e501/tests%2Fui%2Fimplied-bounds%2Fissue-110161.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52d23c92530e04ba4c8d556f8abe3ac33e56e501/tests%2Fui%2Fimplied-bounds%2Fissue-110161.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplied-bounds%2Fissue-110161.stderr?ref=52d23c92530e04ba4c8d556f8abe3ac33e56e501", "patch": "@@ -0,0 +1,12 @@\n+error[E0046]: not all trait items implemented, missing: `Ty`\n+  --> $DIR/issue-110161.rs:11:1\n+   |\n+LL |     type Ty;\n+   |     ------- `Ty` from trait\n+...\n+LL | impl LtTrait for () {\n+   | ^^^^^^^^^^^^^^^^^^^ missing `Ty` in implementation\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0046`."}]}