{"sha": "f8449c2c78366d9ce016bb0b8be788d76ed9528e", "node_id": "C_kwDOAAsO6NoAKGY4NDQ5YzJjNzgzNjZkOWNlMDE2YmIwYjhiZTc4OGQ3NmVkOTUyOGU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-06T18:31:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-06T18:31:26Z"}, "message": "stop excluding TERM env var on Unix", "tree": {"sha": "e909f9884b2403cf4ee76aa2e479f18e3ff62170", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e909f9884b2403cf4ee76aa2e479f18e3ff62170"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8449c2c78366d9ce016bb0b8be788d76ed9528e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8449c2c78366d9ce016bb0b8be788d76ed9528e", "html_url": "https://github.com/rust-lang/rust/commit/f8449c2c78366d9ce016bb0b8be788d76ed9528e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8449c2c78366d9ce016bb0b8be788d76ed9528e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f633537f3e4d47a2e1f96daee68e1063e0da17d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f633537f3e4d47a2e1f96daee68e1063e0da17d4", "html_url": "https://github.com/rust-lang/rust/commit/f633537f3e4d47a2e1f96daee68e1063e0da17d4"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "c7a3200dbd90439c7fa7534941b415fd79f941df", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f8449c2c78366d9ce016bb0b8be788d76ed9528e/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/f8449c2c78366d9ce016bb0b8be788d76ed9528e/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=f8449c2c78366d9ce016bb0b8be788d76ed9528e", "patch": "@@ -282,9 +282,8 @@ environment variable. We first document the most relevant and most commonly used\n   verbose. `hide` hides the warning entirely.\n * `-Zmiri-env-exclude=<var>` keeps the `var` environment variable isolated from the host so that it\n   cannot be accessed by the program. Can be used multiple times to exclude several variables. The\n-  `TERM` environment variable is excluded by default to [speed up the test\n-  harness](https://github.com/rust-lang/miri/issues/1702). This has no effect unless\n-  `-Zmiri-disable-isolation` is also set.\n+  `TERM` environment variable is excluded by default in Windows to prevent the libtest harness from\n+  accessing the file system. This has no effect unless `-Zmiri-disable-isolation` is also set.\n * `-Zmiri-env-forward=<var>` forwards the `var` environment variable to the interpreted program. Can\n   be used multiple times to forward several variables. This takes precedence over\n   `-Zmiri-env-exclude`: if a variable is both forwarded and exluced, it *will* get forwarded. This"}, {"sha": "3dd0b65d0290d570888c82c66b7d3d51d88d9d38", "filename": "src/shims/env.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f8449c2c78366d9ce016bb0b8be788d76ed9528e/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8449c2c78366d9ce016bb0b8be788d76ed9528e/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=f8449c2c78366d9ce016bb0b8be788d76ed9528e", "patch": "@@ -42,10 +42,11 @@ impl<'tcx> EnvVars<'tcx> {\n         config: &MiriConfig,\n     ) -> InterpResult<'tcx> {\n         let target_os = ecx.tcx.sess.target.os.as_ref();\n-        // HACK: Exclude `TERM` var to avoid terminfo trying to open the termcap file.\n-        // This is (a) very slow and (b) does not work on Windows.\n         let mut excluded_env_vars = config.excluded_env_vars.clone();\n-        excluded_env_vars.push(\"TERM\".to_owned());\n+        if target_os == \"windows\" {\n+            // HACK: Exclude `TERM` var to avoid terminfo trying to open the termcap file.\n+            excluded_env_vars.push(\"TERM\".to_owned());\n+        }\n \n         // Skip the loop entirely if we don't want to forward anything.\n         if ecx.machine.communicate() || !config.forwarded_env_vars.is_empty() {"}]}