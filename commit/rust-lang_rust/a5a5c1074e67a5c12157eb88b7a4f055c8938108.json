{"sha": "a5a5c1074e67a5c12157eb88b7a4f055c8938108", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1YTVjMTA3NGU2N2E1YzEyMTU3ZWI4OGI3YTRmMDU1Yzg5MzgxMDg=", "commit": {"author": {"name": "Panashe M. Fundira", "email": "fundirap@gmail.com", "date": "2016-08-22T03:09:18Z"}, "committer": {"name": "Panashe M. Fundira", "email": "fundirap@gmail.com", "date": "2016-08-22T03:45:26Z"}, "message": "Add reference to `Self` in traits chapter (book)", "tree": {"sha": "82eb9005d8ef44413ae0d7fb9fb25db79909b7e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82eb9005d8ef44413ae0d7fb9fb25db79909b7e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5a5c1074e67a5c12157eb88b7a4f055c8938108", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJXunVgAAoJEKvW6Q9Rv3S1q6kH/38+xkaOSkWbkmc0Icbnl8XR\nhb9ufPN6gAQCG1aYfA9rv5Ew/vrdEInb+ko6Xnrt1ilV1z/ng1YGUGYwyw2cazGl\noa++eYJGNcmrtGmC5IRzUDArc53vfHEiWCA3lG9UaUhNdIMhgWqog9TVMy8N5ISJ\nao/o5bnIL1JsqxHRMTg0b+vgPVBSQZv+zK1DAk7KLU2QpxdDcMz3Af+t3NLhLWzy\nzWLb/1x971mDWSGV2SbzJrKWCGuMgMgax22VkvC0Nw86Zhi3/Eyxnu45+mkbLTXj\nNEweE1K+6Hb6+fJg7AFRAy3SwPxpTzrICRTvHo+y5DOHYMD0MGcNz8jecFXKJjs=\n=l8z4\n-----END PGP SIGNATURE-----", "payload": "tree 82eb9005d8ef44413ae0d7fb9fb25db79909b7e7\nparent 1576de0ce6b75fd177eca289a2826d0190e407a5\nauthor Panashe M. Fundira <fundirap@gmail.com> 1471835358 -0400\ncommitter Panashe M. Fundira <fundirap@gmail.com> 1471837526 -0400\n\nAdd reference to `Self` in traits chapter (book)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5a5c1074e67a5c12157eb88b7a4f055c8938108", "html_url": "https://github.com/rust-lang/rust/commit/a5a5c1074e67a5c12157eb88b7a4f055c8938108", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5a5c1074e67a5c12157eb88b7a4f055c8938108/comments", "author": {"login": "munyari", "id": 5841072, "node_id": "MDQ6VXNlcjU4NDEwNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5841072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munyari", "html_url": "https://github.com/munyari", "followers_url": "https://api.github.com/users/munyari/followers", "following_url": "https://api.github.com/users/munyari/following{/other_user}", "gists_url": "https://api.github.com/users/munyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/munyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munyari/subscriptions", "organizations_url": "https://api.github.com/users/munyari/orgs", "repos_url": "https://api.github.com/users/munyari/repos", "events_url": "https://api.github.com/users/munyari/events{/privacy}", "received_events_url": "https://api.github.com/users/munyari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "munyari", "id": 5841072, "node_id": "MDQ6VXNlcjU4NDEwNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5841072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munyari", "html_url": "https://github.com/munyari", "followers_url": "https://api.github.com/users/munyari/followers", "following_url": "https://api.github.com/users/munyari/following{/other_user}", "gists_url": "https://api.github.com/users/munyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/munyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munyari/subscriptions", "organizations_url": "https://api.github.com/users/munyari/orgs", "repos_url": "https://api.github.com/users/munyari/repos", "events_url": "https://api.github.com/users/munyari/events{/privacy}", "received_events_url": "https://api.github.com/users/munyari/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1576de0ce6b75fd177eca289a2826d0190e407a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1576de0ce6b75fd177eca289a2826d0190e407a5", "html_url": "https://github.com/rust-lang/rust/commit/1576de0ce6b75fd177eca289a2826d0190e407a5"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "164a851edeff4307f4e97b0dbc2d74a451bd6875", "filename": "src/doc/book/traits.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a5a5c1074e67a5c12157eb88b7a4f055c8938108/src%2Fdoc%2Fbook%2Ftraits.md", "raw_url": "https://github.com/rust-lang/rust/raw/a5a5c1074e67a5c12157eb88b7a4f055c8938108/src%2Fdoc%2Fbook%2Ftraits.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ftraits.md?ref=a5a5c1074e67a5c12157eb88b7a4f055c8938108", "patch": "@@ -47,6 +47,28 @@ As you can see, the `trait` block looks very similar to the `impl` block,\n but we don\u2019t define a body, only a type signature. When we `impl` a trait,\n we use `impl Trait for Item`, rather than only `impl Item`.\n \n+`Self` may be used in a type annotation to refer to an instance of the type\n+implementing this trait passed as a parameter. `Self`, `&Self` or `&mut Self`\n+may be used depending on the level of ownership required.\n+\n+```rust\n+trait HasArea {\n+    fn area(&self) -> f64;\n+\n+    fn is_larger(&self, &Self) -> bool;\n+}\n+\n+impl HasArea for Circle {\n+    fn area(&self) -> f64 {\n+        std::f64::consts::PI * (self.radius * self.radius)\n+    }\n+\n+    fn is_larger(&self, other: &Self) -> bool {\n+        self.area() > other.area()\n+    }\n+}\n+```\n+\n ## Trait bounds on generic functions\n \n Traits are useful because they allow a type to make certain promises about its"}]}