{"sha": "16af7bf3d9a3d86f6315bd86200d71de85e18a2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2YWY3YmYzZDlhM2Q4NmY2MzE1YmQ4NjIwMGQ3MWRlODVlMThhMmQ=", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2020-11-30T08:23:59Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-02-04T15:20:57Z"}, "message": "hir pretty printing", "tree": {"sha": "5465e1b6cd28d6be524c9d3590cfab4845d6fa36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5465e1b6cd28d6be524c9d3590cfab4845d6fa36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16af7bf3d9a3d86f6315bd86200d71de85e18a2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16af7bf3d9a3d86f6315bd86200d71de85e18a2d", "html_url": "https://github.com/rust-lang/rust/commit/16af7bf3d9a3d86f6315bd86200d71de85e18a2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16af7bf3d9a3d86f6315bd86200d71de85e18a2d/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdaf603102943392e889ea203adb8fa8f4a8d7a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdaf603102943392e889ea203adb8fa8f4a8d7a7", "html_url": "https://github.com/rust-lang/rust/commit/fdaf603102943392e889ea203adb8fa8f4a8d7a7"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "4595855309fdac66bbf9e6fb8738fa6713e974ed", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/16af7bf3d9a3d86f6315bd86200d71de85e18a2d/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16af7bf3d9a3d86f6315bd86200d71de85e18a2d/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=16af7bf3d9a3d86f6315bd86200d71de85e18a2d", "patch": "@@ -1840,6 +1840,7 @@ impl<'a> State<'a> {\n             for binding in generic_args.bindings.iter() {\n                 start_or_comma(self);\n                 self.print_ident(binding.ident);\n+                self.print_generic_args(binding.gen_args, false, false);\n                 self.s.space();\n                 match generic_args.bindings[0].kind {\n                     hir::TypeBindingKind::Equality { ref ty } => {"}]}