{"sha": "db29f9e0f7fd0c085a94b21eb9ac8dbdb8f6cfcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMjlmOWUwZjdmZDBjMDg1YTk0YjIxZWI5YWM4ZGJkYjhmNmNmY2Q=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-10T08:41:02Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-11T00:20:02Z"}, "message": "Fix indent issue when recovering comments\n\nCloses #1989", "tree": {"sha": "c085831472f01ce194306a1191a892047ae2acc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c085831472f01ce194306a1191a892047ae2acc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db29f9e0f7fd0c085a94b21eb9ac8dbdb8f6cfcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db29f9e0f7fd0c085a94b21eb9ac8dbdb8f6cfcd", "html_url": "https://github.com/rust-lang/rust/commit/db29f9e0f7fd0c085a94b21eb9ac8dbdb8f6cfcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db29f9e0f7fd0c085a94b21eb9ac8dbdb8f6cfcd/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "414a99592623df7f0cb4c80d69d735462f3027c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/414a99592623df7f0cb4c80d69d735462f3027c3", "html_url": "https://github.com/rust-lang/rust/commit/414a99592623df7f0cb4c80d69d735462f3027c3"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "08fd5bd79e34a2a2932db2d91111a044b286385a", "filename": "src/missed_spans.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/db29f9e0f7fd0c085a94b21eb9ac8dbdb8f6cfcd/src%2Fmissed_spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db29f9e0f7fd0c085a94b21eb9ac8dbdb8f6cfcd/src%2Fmissed_spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmissed_spans.rs?ref=db29f9e0f7fd0c085a94b21eb9ac8dbdb8f6cfcd", "patch": "@@ -154,21 +154,21 @@ impl<'a> FmtVisitor<'a> {\n         }\n \n         if status.rewrite_next_comment {\n-            if fix_indent {\n+            let comment_indent = if fix_indent {\n                 if let Some('{') = last_char {\n                     self.push_str(\"\\n\");\n                 }\n                 let indent_str = self.block_indent.to_string(self.config);\n                 self.push_str(&indent_str);\n+                self.block_indent\n             } else {\n                 self.push_str(\" \");\n-            }\n-\n+                Indent::from_width(self.config, last_line_width(&self.buffer))\n+            };\n             let comment_width = ::std::cmp::min(\n                 self.config.comment_width(),\n                 self.config.max_width() - self.block_indent.width(),\n             );\n-            let comment_indent = Indent::from_width(self.config, self.buffer.cur_offset());\n             let comment_shape = Shape::legacy(comment_width, comment_indent);\n             let comment_str = rewrite_comment(subslice, false, comment_shape, self.config)\n                 .unwrap_or_else(|| String::from(subslice));"}]}