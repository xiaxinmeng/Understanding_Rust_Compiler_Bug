{"sha": "6e7bbdacb9bf04c1f5bf2c3aad487122d8377b7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlN2JiZGFjYjliZjA0YzFmNWJmMmMzYWFkNDg3MTIyZDgzNzdiN2Y=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-10-22T12:11:17Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-10-23T00:50:45Z"}, "message": "std::rand: seed ISAAC with no transmutes.\n\nSlice transmutes are now (and, really, always were) dangerous, so we\navoid them and do the (only?) non-(undefined behaviour in C) pointer\ncast: casting to *u8.", "tree": {"sha": "99ea846bbbe2031015ecd3d847761b63df503d14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99ea846bbbe2031015ecd3d847761b63df503d14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e7bbdacb9bf04c1f5bf2c3aad487122d8377b7f", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e7bbdacb9bf04c1f5bf2c3aad487122d8377b7f", "html_url": "https://github.com/rust-lang/rust/commit/6e7bbdacb9bf04c1f5bf2c3aad487122d8377b7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e7bbdacb9bf04c1f5bf2c3aad487122d8377b7f/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8932c6304599bddec6ac6d916db72a5c4034ada", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8932c6304599bddec6ac6d916db72a5c4034ada", "html_url": "https://github.com/rust-lang/rust/commit/b8932c6304599bddec6ac6d916db72a5c4034ada"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "7dc4e5b868b887cfb556907e37a4c2cc82298ce9", "filename": "src/libstd/rand/isaac.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6e7bbdacb9bf04c1f5bf2c3aad487122d8377b7f/src%2Flibstd%2Frand%2Fisaac.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e7bbdacb9bf04c1f5bf2c3aad487122d8377b7f/src%2Flibstd%2Frand%2Fisaac.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fisaac.rs?ref=6e7bbdacb9bf04c1f5bf2c3aad487122d8377b7f", "patch": "@@ -10,10 +10,11 @@\n \n //! The ISAAC random number generator.\n \n-use cast;\n use rand::{Rng, SeedableRng, OSRng};\n use iter::{Iterator, range, range_step, Repeat};\n use option::{None, Some};\n+use vec::raw;\n+use mem;\n \n static RAND_SIZE_LEN: u32 = 8;\n static RAND_SIZE: u32 = 1 << RAND_SIZE_LEN;\n@@ -42,9 +43,12 @@ impl IsaacRng {\n     pub fn new() -> IsaacRng {\n         let mut rng = EMPTY;\n \n-        {\n-            let bytes = unsafe {cast::transmute::<&mut [u32], &mut [u8]>(rng.rsl)};\n-            OSRng::new().fill_bytes(bytes);\n+        unsafe {\n+            let ptr = raw::to_mut_ptr(rng.rsl);\n+\n+            do raw::mut_buf_as_slice(ptr as *mut u8, mem::size_of_val(&rng.rsl)) |slice| {\n+                OSRng::new().fill_bytes(slice);\n+            }\n         }\n \n         rng.init(true);\n@@ -238,10 +242,15 @@ impl Isaac64Rng {\n     /// seed.\n     pub fn new() -> Isaac64Rng {\n         let mut rng = EMPTY_64;\n-        {\n-            let bytes = unsafe {cast::transmute::<&mut [u64], &mut [u8]>(rng.rsl)};\n-            OSRng::new().fill_bytes(bytes);\n+\n+        unsafe {\n+            let ptr = raw::to_mut_ptr(rng.rsl);\n+\n+            do raw::mut_buf_as_slice(ptr as *mut u8, mem::size_of_val(&rng.rsl)) |slice| {\n+                OSRng::new().fill_bytes(slice);\n+            }\n         }\n+\n         rng.init(true);\n         rng\n     }"}]}