{"sha": "beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721", "node_id": "C_kwDOAAsO6NoAKGJlZWJkM2E0YzZhYjM4YTcxZDRmZjdjYWZjZDFiZjM3ZGVmNWI3MjE", "commit": {"author": {"name": "Giacomo Pasini", "email": "giacomo@status.im", "date": "2023-03-05T15:56:57Z"}, "committer": {"name": "Giacomo Pasini", "email": "giacomo@status.im", "date": "2023-03-05T15:56:57Z"}, "message": "Add regression tests for issue 70919\n\nDesugaring DropAndReplace at MIR build (#107844) fixed issue\n70919. Add regressions tests, borrowed from #102078, to ensure we\ncheck for this in the future.\n\nCo-authored-by: Aaron Hill <aa1ronham@gmail.com>", "tree": {"sha": "28f896e26fc5a28597f82cda66fb9363e1aa59cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28f896e26fc5a28597f82cda66fb9363e1aa59cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEElHY+FNnS7QgcFjiQoDhRt4psmkYFAmQEvbAACgkQoDhRt4ps\nmkabOBAAimpQEyDMkIs87PhTY2PCKJYMQhg9kelaSJ8hXhopuO9wCkw9Lwrf/aU9\nBravMwUYd8gjekV/GIc0u6QyPJMt5uz+4/ScJJVfvt12lvxBQ8SzYzrbK0rOPEhA\naE08y8la6zB8for0HZQfGpefU9VTTOtF4Z8QpohtXC7pd7veOWMLvJ5gc1YGsxqV\nCCghGDvb2zIBX1MEg8lpE/SZ9hvU7nEO2k9MqFWbG5qeBXACzSuwdafQv3NxIDY3\n7m17e0hnHyB0WfAGUb4PEulwsiSvI583XtMB4d2ko/NN8YbRpa1F0GAgZo1hn/d/\nOJwDeBAjzTe40UAbAIS+Phj4+bTO7IaUwFY+8gjOUr0CAR2unr6B0G/Aw97LXef2\nxKqjXbYPdd3co70CDz/o/DPJMismJmUE7ggWrDVpSUaKMzpOvW8XSRCsrNRKqRK2\nuCm1l/UFJKL6MzpqsKPwRkanLAzbhZXo0rFi3P0iIX5dA1k2Zw8NKNBz/WeB9mvk\naj68Kw9KlN1+haeg3k1mTK/9B6IQ46TJH7HB86NEWJUkRkMFU4fQq7Us1C25bQ6p\nxIV5uqNoLRBXhsPg6wDdrLDivTaj6udOX+abSzzbssXbsJjxH3ezJ+bMRI5da6+n\nSjSLmaXr8AF/pAR0l2/+dIqhTf/u2EbUiy4WgYTkZiLPBz5yBO0=\n=2bWA\n-----END PGP SIGNATURE-----", "payload": "tree 28f896e26fc5a28597f82cda66fb9363e1aa59cb\nparent 14c54b637b18f74680d0c0441216714b5e9c150d\nauthor Giacomo Pasini <giacomo@status.im> 1678031817 +0100\ncommitter Giacomo Pasini <giacomo@status.im> 1678031817 +0100\n\nAdd regression tests for issue 70919\n\nDesugaring DropAndReplace at MIR build (#107844) fixed issue\n70919. Add regressions tests, borrowed from #102078, to ensure we\ncheck for this in the future.\n\nCo-authored-by: Aaron Hill <aa1ronham@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721", "html_url": "https://github.com/rust-lang/rust/commit/beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721/comments", "author": {"login": "Zeegomo", "id": 21265557, "node_id": "MDQ6VXNlcjIxMjY1NTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21265557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zeegomo", "html_url": "https://github.com/Zeegomo", "followers_url": "https://api.github.com/users/Zeegomo/followers", "following_url": "https://api.github.com/users/Zeegomo/following{/other_user}", "gists_url": "https://api.github.com/users/Zeegomo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zeegomo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zeegomo/subscriptions", "organizations_url": "https://api.github.com/users/Zeegomo/orgs", "repos_url": "https://api.github.com/users/Zeegomo/repos", "events_url": "https://api.github.com/users/Zeegomo/events{/privacy}", "received_events_url": "https://api.github.com/users/Zeegomo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zeegomo", "id": 21265557, "node_id": "MDQ6VXNlcjIxMjY1NTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21265557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zeegomo", "html_url": "https://github.com/Zeegomo", "followers_url": "https://api.github.com/users/Zeegomo/followers", "following_url": "https://api.github.com/users/Zeegomo/following{/other_user}", "gists_url": "https://api.github.com/users/Zeegomo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zeegomo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zeegomo/subscriptions", "organizations_url": "https://api.github.com/users/Zeegomo/orgs", "repos_url": "https://api.github.com/users/Zeegomo/repos", "events_url": "https://api.github.com/users/Zeegomo/events{/privacy}", "received_events_url": "https://api.github.com/users/Zeegomo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14c54b637b18f74680d0c0441216714b5e9c150d", "url": "https://api.github.com/repos/rust-lang/rust/commits/14c54b637b18f74680d0c0441216714b5e9c150d", "html_url": "https://github.com/rust-lang/rust/commit/14c54b637b18f74680d0c0441216714b5e9c150d"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "866c27ef20324221f2bcf7a8bc5393587be5dafa", "filename": "tests/ui/borrowck/drop-in-loop.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721/tests%2Fui%2Fborrowck%2Fdrop-in-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721/tests%2Fui%2Fborrowck%2Fdrop-in-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fdrop-in-loop.rs?ref=beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721", "patch": "@@ -0,0 +1,24 @@\n+// A version of `issue-70919-drop-in-loop`, but without\n+// the necessary `drop` call.\n+//\n+// This should fail to compile, since the `Drop` impl\n+// for `WrapperWithDrop` could observe the changed\n+// `base` value.\n+\n+struct WrapperWithDrop<'a>(&'a mut bool);\n+impl<'a> Drop for WrapperWithDrop<'a> {\n+    fn drop(&mut self) {\n+    }\n+}\n+\n+fn drop_in_loop() {\n+    let mut base = true;\n+    let mut wrapper = WrapperWithDrop(&mut base);\n+    loop {\n+        base = false; //~ ERROR: cannot assign to `base`\n+        wrapper = WrapperWithDrop(&mut base);\n+    }\n+}\n+\n+fn main() {\n+}"}, {"sha": "d5734e7ec97707a7154cd7d409dd1ed84139a4fa", "filename": "tests/ui/borrowck/drop-in-loop.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721/tests%2Fui%2Fborrowck%2Fdrop-in-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721/tests%2Fui%2Fborrowck%2Fdrop-in-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fdrop-in-loop.stderr?ref=beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721", "patch": "@@ -0,0 +1,14 @@\n+error[E0506]: cannot assign to `base` because it is borrowed\n+  --> $DIR/drop-in-loop.rs:18:9\n+   |\n+LL |     let mut wrapper = WrapperWithDrop(&mut base);\n+   |                                       --------- `base` is borrowed here\n+LL |     loop {\n+LL |         base = false;\n+   |         ^^^^^^^^^^^^ `base` is assigned to here but it was already borrowed\n+LL |         wrapper = WrapperWithDrop(&mut base);\n+   |         ------- borrow might be used here, when `wrapper` is dropped and runs the `Drop` code for type `WrapperWithDrop`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0506`."}, {"sha": "a8d5849a31c0b068fb7ef0f03ae7342d24df32de", "filename": "tests/ui/borrowck/issue-70919-drop-in-loop.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721/tests%2Fui%2Fborrowck%2Fissue-70919-drop-in-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721/tests%2Fui%2Fborrowck%2Fissue-70919-drop-in-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fissue-70919-drop-in-loop.rs?ref=beebd3a4c6ab38a71d4ff7cafcd1bf37def5b721", "patch": "@@ -0,0 +1,25 @@\n+// Regression test for issue #70919\n+// Tests that we don't emit a spurious \"borrow might be used\" error\n+// when we have an explicit `drop` in a loop\n+\n+// check-pass\n+\n+struct WrapperWithDrop<'a>(&'a mut bool);\n+impl<'a> Drop for WrapperWithDrop<'a> {\n+    fn drop(&mut self) {\n+    }\n+}\n+\n+fn drop_in_loop() {\n+    let mut base = true;\n+    let mut wrapper = WrapperWithDrop(&mut base);\n+    loop {\n+        drop(wrapper);\n+\n+        base = false;\n+        wrapper = WrapperWithDrop(&mut base);\n+    }\n+}\n+\n+fn main() {\n+}"}]}