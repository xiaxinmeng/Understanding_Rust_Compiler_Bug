{"sha": "1bb555257fd6c400870743b50bc479175926fae6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiYjU1NTI1N2ZkNmM0MDA4NzA3NDNiNTBiYzQ3OTE3NTkyNmZhZTY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-08-05T14:12:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-05T14:12:53Z"}, "message": "Rollup merge of #34319 - zackmdavis:explain_slice_pattern_errors, r=GuillaumeGomez\n\nextended information for slice pattern errors (E0527 through E0529)\n\nr? @GuillaumeGomez", "tree": {"sha": "8aed69c8cda9a9f3c75a3e08793c89e7a1a03130", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8aed69c8cda9a9f3c75a3e08793c89e7a1a03130"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bb555257fd6c400870743b50bc479175926fae6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bb555257fd6c400870743b50bc479175926fae6", "html_url": "https://github.com/rust-lang/rust/commit/1bb555257fd6c400870743b50bc479175926fae6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bb555257fd6c400870743b50bc479175926fae6/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41fe4b719538d2505a75cf9c065ec12411b94ac5", "url": "https://api.github.com/repos/rust-lang/rust/commits/41fe4b719538d2505a75cf9c065ec12411b94ac5", "html_url": "https://github.com/rust-lang/rust/commit/41fe4b719538d2505a75cf9c065ec12411b94ac5"}, {"sha": "e960021d30faff871f98c9c463b43c4359af280d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e960021d30faff871f98c9c463b43c4359af280d", "html_url": "https://github.com/rust-lang/rust/commit/e960021d30faff871f98c9c463b43c4359af280d"}], "stats": {"total": 101, "additions": 98, "deletions": 3}, "files": [{"sha": "64b27857d2c610b50e6cc04850585b46ba4275ca", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 98, "deletions": 3, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/1bb555257fd6c400870743b50bc479175926fae6/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bb555257fd6c400870743b50bc479175926fae6/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=1bb555257fd6c400870743b50bc479175926fae6", "patch": "@@ -3864,6 +3864,104 @@ impl SpaceLlama for i32 {\n ```\n \"##,\n \n+E0527: r##\"\n+The number of elements in an array or slice pattern differed from the number of\n+elements in the array being matched.\n+\n+Example of erroneous code:\n+\n+```compile_fail,E0527\n+#![feature(slice_patterns)]\n+\n+let r = &[1, 2, 3, 4];\n+match r {\n+    &[a, b] => { // error: pattern requires 2 elements but array\n+                 //        has 4\n+        println!(\"a={}, b={}\", a, b);\n+    }\n+}\n+```\n+\n+Ensure that the pattern is consistent with the size of the matched\n+array. Additional elements can be matched with `..`:\n+\n+```\n+#![feature(slice_patterns)]\n+\n+let r = &[1, 2, 3, 4];\n+match r {\n+    &[a, b, ..] => { // ok!\n+        println!(\"a={}, b={}\", a, b);\n+    }\n+}\n+```\n+\"##,\n+\n+E0528: r##\"\n+An array or slice pattern required more elements than were present in the\n+matched array.\n+\n+Example of erroneous code:\n+\n+```compile_fail,E0528\n+#![feature(slice_patterns)]\n+\n+let r = &[1, 2];\n+match r {\n+    &[a, b, c, rest..] => { // error: pattern requires at least 3\n+                            //        elements but array has 2\n+        println!(\"a={}, b={}, c={} rest={:?}\", a, b, c, rest);\n+    }\n+}\n+```\n+\n+Ensure that the matched array has at least as many elements as the pattern\n+requires. You can match an arbitrary number of remaining elements with `..`:\n+\n+```\n+#![feature(slice_patterns)]\n+\n+let r = &[1, 2, 3, 4, 5];\n+match r {\n+    &[a, b, c, rest..] => { // ok!\n+        // prints `a=1, b=2, c=3 rest=[4, 5]`\n+        println!(\"a={}, b={}, c={} rest={:?}\", a, b, c, rest);\n+    }\n+}\n+```\n+\"##,\n+\n+E0529: r##\"\n+An array or slice pattern was matched against some other type.\n+\n+Example of erroneous code:\n+\n+```compile_fail,E0529\n+#![feature(slice_patterns)]\n+\n+let r: f32 = 1.0;\n+match r {\n+    [a, b] => { // error: expected an array or slice, found `f32`\n+        println!(\"a={}, b={}\", a, b);\n+    }\n+}\n+```\n+\n+Ensure that the pattern and the expression being matched on are of consistent\n+types:\n+\n+```\n+#![feature(slice_patterns)]\n+\n+let r = [1.0, 2.0];\n+match r {\n+    [a, b] => { // ok!\n+        println!(\"a={}, b={}\", a, b);\n+    }\n+}\n+```\n+\"##,\n+\n E0559: r##\"\n An unknown field was specified into an enum's structure variant.\n \n@@ -3985,8 +4083,5 @@ register_diagnostics! {\n     E0436, // functional record update requires a struct\n     E0513, // no type for local variable ..\n     E0521, // redundant default implementations of trait\n-    E0527, // expected {} elements, found {}\n-    E0528, // expected at least {} elements, found {}\n-    E0529, // slice pattern expects array or slice, not `{}`\n     E0533, // `{}` does not name a unit variant, unit struct or a constant\n }"}]}