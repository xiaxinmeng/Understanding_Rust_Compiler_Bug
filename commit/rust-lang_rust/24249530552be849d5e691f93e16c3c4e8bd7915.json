{"sha": "24249530552be849d5e691f93e16c3c4e8bd7915", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0MjQ5NTMwNTUyYmU4NDlkNWU2OTFmOTNlMTZjM2M0ZThiZDc5MTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-19T18:35:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-19T18:35:06Z"}, "message": "Don't pretend that casts to bool are a thing", "tree": {"sha": "3ac6c3e9c84eab588b533d4d9a8172981d4a1d47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ac6c3e9c84eab588b533d4d9a8172981d4a1d47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24249530552be849d5e691f93e16c3c4e8bd7915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24249530552be849d5e691f93e16c3c4e8bd7915", "html_url": "https://github.com/rust-lang/rust/commit/24249530552be849d5e691f93e16c3c4e8bd7915", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24249530552be849d5e691f93e16c3c4e8bd7915/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72664e42aa1f66ac57891cc45f80cc925e261c19", "url": "https://api.github.com/repos/rust-lang/rust/commits/72664e42aa1f66ac57891cc45f80cc925e261c19", "html_url": "https://github.com/rust-lang/rust/commit/72664e42aa1f66ac57891cc45f80cc925e261c19"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "0fa38366e1c0a2e98c23b9598737780f16f5d591", "filename": "src/cast.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24249530552be849d5e691f93e16c3c4e8bd7915/src%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24249530552be849d5e691f93e16c3c4e8bd7915/src%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcast.rs?ref=24249530552be849d5e691f93e16c3c4e8bd7915", "patch": "@@ -46,9 +46,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n     fn cast_int(&self, v: u128, ty: ty::Ty<'tcx>, negative: bool) -> EvalResult<'tcx, PrimVal> {\n         use rustc::ty::TypeVariants::*;\n         match ty.sty {\n-            TyBool if v == 0 => Ok(PrimVal::from_bool(false)),\n-            TyBool if v == 1 => Ok(PrimVal::from_bool(true)),\n-            TyBool => Err(EvalError::InvalidBool),\n+            // Casts to bool are not permitted by rustc, no need to handle them here.\n \n             TyInt(IntTy::I8)  => Ok(PrimVal::Bytes(v as i128 as i8  as u128)),\n             TyInt(IntTy::I16) => Ok(PrimVal::Bytes(v as i128 as i16 as u128)),"}]}