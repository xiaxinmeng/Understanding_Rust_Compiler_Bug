{"sha": "d17f62d857c70508efbf60be41135880bcd2e062", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxN2Y2MmQ4NTdjNzA1MDhlZmJmNjBiZTQxMTM1ODgwYmNkMmUwNjI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-23T23:19:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-23T23:19:59Z"}, "message": "Rollup merge of #57836 - oli-obk:existential_crisis, r=estebank\n\nFix some cross crate existential type ICEs\n\nfixes #53443", "tree": {"sha": "a57918df5a7db5681d390cba2098e2d04405470d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a57918df5a7db5681d390cba2098e2d04405470d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d17f62d857c70508efbf60be41135880bcd2e062", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcSPafCRBK7hj4Ov3rIwAAdHIIAHuqOOQ12v32/I2PceHLnJ5d\n4XEurKNd+hzaq/UkKaWXpAcv8fubMxDz85J3jHQupKbheHciA+vwy5x13JjxqYcP\naT34vktuImZ2T73Vt/O4a6GK+8CTCownfNO7o+RJKzDv7bkkSYfManjBVOk9UmN3\nRcO6uTVlX6VODSTcuDhIlfqSLACA3dndpcNAwEpi1Pi1npL+JsKOUyd11WNvSEgc\nT6OR5GuoeAbleZ8Uf0rFp/xeQPqm9YqzXNSVZ/XZ96EcAuvfFARKu0dQ+K9lSoDi\nROf11ZwySZoYOPGpo7CetHhW/+YMdrdkUXl9GrnQ3AsHfcIgj8pKFd0xMvaI97Y=\n=e/HK\n-----END PGP SIGNATURE-----\n", "payload": "tree a57918df5a7db5681d390cba2098e2d04405470d\nparent 5749bac9893911afdc2f1dc749248c356693a7b1\nparent 5d6faf7b4af94d0da681e9873539f9f13279290d\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1548285599 +0100\ncommitter GitHub <noreply@github.com> 1548285599 +0100\n\nRollup merge of #57836 - oli-obk:existential_crisis, r=estebank\n\nFix some cross crate existential type ICEs\n\nfixes #53443\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d17f62d857c70508efbf60be41135880bcd2e062", "html_url": "https://github.com/rust-lang/rust/commit/d17f62d857c70508efbf60be41135880bcd2e062", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d17f62d857c70508efbf60be41135880bcd2e062/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5749bac9893911afdc2f1dc749248c356693a7b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5749bac9893911afdc2f1dc749248c356693a7b1", "html_url": "https://github.com/rust-lang/rust/commit/5749bac9893911afdc2f1dc749248c356693a7b1"}, {"sha": "5d6faf7b4af94d0da681e9873539f9f13279290d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d6faf7b4af94d0da681e9873539f9f13279290d", "html_url": "https://github.com/rust-lang/rust/commit/5d6faf7b4af94d0da681e9873539f9f13279290d"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "ad6296e1a3bd863d96b097e8e1c23f3f93e382f5", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d17f62d857c70508efbf60be41135880bcd2e062/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d17f62d857c70508efbf60be41135880bcd2e062/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=d17f62d857c70508efbf60be41135880bcd2e062", "patch": "@@ -893,6 +893,9 @@ impl<'a, 'tcx> CrateMetadata {\n             EntryKind::AssociatedType(container) => {\n                 (ty::AssociatedKind::Type, container, false)\n             }\n+            EntryKind::AssociatedExistential(container) => {\n+                (ty::AssociatedKind::Existential, container, false)\n+            }\n             _ => bug!(\"cannot get associated-item of `{:?}`\", def_key)\n         };\n "}, {"sha": "3db73800d640a207df802a55ad05adde84a53a88", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d17f62d857c70508efbf60be41135880bcd2e062/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d17f62d857c70508efbf60be41135880bcd2e062/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=d17f62d857c70508efbf60be41135880bcd2e062", "patch": "@@ -680,6 +680,7 @@ impl<'a> Resolver<'a> {\n                 }\n                 module.populated.set(true);\n             }\n+            Def::Existential(..) |\n             Def::TraitAlias(..) => {\n                 self.define(parent, ident, TypeNS, (def, vis, DUMMY_SP, expansion));\n             }"}, {"sha": "6cae8d6fc5b9434c943cc39b48e5ae563355f678", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d17f62d857c70508efbf60be41135880bcd2e062/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d17f62d857c70508efbf60be41135880bcd2e062/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=d17f62d857c70508efbf60be41135880bcd2e062", "patch": "@@ -608,8 +608,8 @@ fn check_existential_types<'a, 'fcx, 'gcx, 'tcx>(\n             if let ty::Opaque(def_id, substs) = ty.sty {\n                 trace!(\"check_existential_types: opaque_ty, {:?}, {:?}\", def_id, substs);\n                 let generics = tcx.generics_of(def_id);\n-                // only check named existential types\n-                if generics.parent.is_none() {\n+                // only check named existential types defined in this crate\n+                if generics.parent.is_none() && def_id.is_local() {\n                     let opaque_node_id = tcx.hir().as_local_node_id(def_id).unwrap();\n                     if may_define_existential_type(tcx, fn_def_id, opaque_node_id) {\n                         trace!(\"check_existential_types may define. Generics: {:#?}\", generics);"}, {"sha": "af2d209826e19a2ff375feddbc4f02f7d68fdeba", "filename": "src/test/ui/existential_types/auxiliary/cross_crate_ice.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d17f62d857c70508efbf60be41135880bcd2e062/src%2Ftest%2Fui%2Fexistential_types%2Fauxiliary%2Fcross_crate_ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d17f62d857c70508efbf60be41135880bcd2e062/src%2Ftest%2Fui%2Fexistential_types%2Fauxiliary%2Fcross_crate_ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fauxiliary%2Fcross_crate_ice.rs?ref=d17f62d857c70508efbf60be41135880bcd2e062", "patch": "@@ -0,0 +1,12 @@\n+// Crate that exports an existential type. Used for testing cross-crate.\n+\n+#![crate_type=\"rlib\"]\n+\n+#![feature(existential_type)]\n+\n+pub existential type Foo: std::fmt::Debug;\n+\n+pub fn foo() -> Foo {\n+    5\n+}\n+"}, {"sha": "39ec5394febe42f8f251370e4c2bc2aebc54bc5d", "filename": "src/test/ui/existential_types/auxiliary/cross_crate_ice2.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d17f62d857c70508efbf60be41135880bcd2e062/src%2Ftest%2Fui%2Fexistential_types%2Fauxiliary%2Fcross_crate_ice2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d17f62d857c70508efbf60be41135880bcd2e062/src%2Ftest%2Fui%2Fexistential_types%2Fauxiliary%2Fcross_crate_ice2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fauxiliary%2Fcross_crate_ice2.rs?ref=d17f62d857c70508efbf60be41135880bcd2e062", "patch": "@@ -0,0 +1,21 @@\n+// Crate that exports an existential type. Used for testing cross-crate.\n+\n+#![crate_type=\"rlib\"]\n+\n+#![feature(existential_type)]\n+\n+pub trait View {\n+    type Tmp: Iterator<Item = u32>;\n+\n+    fn test(&self) -> Self::Tmp;\n+}\n+\n+pub struct X;\n+\n+impl View for X {\n+    existential type Tmp: Iterator<Item = u32>;\n+\n+    fn test(&self) -> Self::Tmp {\n+        vec![1,2,3].into_iter()\n+    }\n+}"}, {"sha": "c5d5ca916a48aa94e1226ed22f8a6936c5440d31", "filename": "src/test/ui/existential_types/cross_crate_ice.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d17f62d857c70508efbf60be41135880bcd2e062/src%2Ftest%2Fui%2Fexistential_types%2Fcross_crate_ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d17f62d857c70508efbf60be41135880bcd2e062/src%2Ftest%2Fui%2Fexistential_types%2Fcross_crate_ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fcross_crate_ice.rs?ref=d17f62d857c70508efbf60be41135880bcd2e062", "patch": "@@ -0,0 +1,16 @@\n+// aux-build:cross_crate_ice.rs\n+// compile-pass\n+\n+extern crate cross_crate_ice;\n+\n+struct Bar(cross_crate_ice::Foo);\n+\n+impl Bar {\n+    fn zero(&self) -> &cross_crate_ice::Foo {\n+        &self.0\n+    }\n+}\n+\n+fn main() {\n+    let _ = cross_crate_ice::foo();\n+}"}, {"sha": "a0f3933ce33b23c5293e6496ca30763f8a2ea714", "filename": "src/test/ui/existential_types/cross_crate_ice2.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d17f62d857c70508efbf60be41135880bcd2e062/src%2Ftest%2Fui%2Fexistential_types%2Fcross_crate_ice2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d17f62d857c70508efbf60be41135880bcd2e062/src%2Ftest%2Fui%2Fexistential_types%2Fcross_crate_ice2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fcross_crate_ice2.rs?ref=d17f62d857c70508efbf60be41135880bcd2e062", "patch": "@@ -0,0 +1,11 @@\n+// aux-build:cross_crate_ice2.rs\n+// compile-pass\n+\n+extern crate cross_crate_ice2;\n+\n+use cross_crate_ice2::View;\n+\n+fn main() {\n+    let v = cross_crate_ice2::X;\n+    v.test();\n+}"}]}