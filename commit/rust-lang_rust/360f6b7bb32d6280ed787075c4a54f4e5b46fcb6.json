{"sha": "360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MGY2YjdiYjMyZDYyODBlZDc4NzA3NWM0YTU0ZjRlNWI0NmZjYjY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-27T18:45:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-27T18:45:05Z"}, "message": "Merge #2430\n\n2430: rename ra_ide_api -> ra_ide r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "4c059427819ef442c785125f48fe83f81f6d667a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c059427819ef442c785125f48fe83f81f6d667a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd3sQyCRBK7hj4Ov3rIwAAdHIIAH5loQImXO/pdvG16xGOLVcN\npQM/IO6cu9KwcYXLwDSRLsVRpkpsUYFWP6nywMbj7/F1zsUc+rqHfyzE1Yo9vcuA\nC0ffucSYoIokIGAjq26Ormkq8Teev0julXyV87zQjNOHm91yHaYJnMGgztJMAc4E\n6BDVYpKDwDe8bLBS215L3GzARuQxQv8Ok8it0kwaJF4ja7p8BfKAH6uK6RyBRKOy\nEfpmbBQoW8xGjcLzoaxXB5/87gh7pEWxO/iUL2mKj6jk9joxv4RHsIefAr6ESP+6\nlpj3drryyVQ3cujt37kymzFMbFoAj5ioUqj6PQhcCcL2tfT0+D8x47Hz0uAMuiE=\n=bF8P\n-----END PGP SIGNATURE-----\n", "payload": "tree 4c059427819ef442c785125f48fe83f81f6d667a\nparent 4946169a96f3d442f463724af481fdb760381ccb\nparent 27b362b05910c81fd5b28f6cd5d2c075311032f9\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1574880305 +0000\ncommitter GitHub <noreply@github.com> 1574880305 +0000\n\nMerge #2430\n\n2430: rename ra_ide_api -> ra_ide r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "html_url": "https://github.com/rust-lang/rust/commit/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4946169a96f3d442f463724af481fdb760381ccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4946169a96f3d442f463724af481fdb760381ccb", "html_url": "https://github.com/rust-lang/rust/commit/4946169a96f3d442f463724af481fdb760381ccb"}, {"sha": "27b362b05910c81fd5b28f6cd5d2c075311032f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/27b362b05910c81fd5b28f6cd5d2c075311032f9", "html_url": "https://github.com/rust-lang/rust/commit/27b362b05910c81fd5b28f6cd5d2c075311032f9"}], "stats": {"total": 197, "additions": 97, "deletions": 100}, "files": [{"sha": "b0a0e841c8384fae455c6022cf4f4609edb312aa", "filename": "Cargo.lock", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -906,7 +906,7 @@ dependencies = [\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_db 0.1.0\",\n  \"ra_hir 0.1.0\",\n- \"ra_ide_api 0.1.0\",\n+ \"ra_ide 0.1.0\",\n  \"ra_project_model 0.1.0\",\n  \"ra_vfs 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_vfs_glob 0.1.0\",\n@@ -932,7 +932,7 @@ dependencies = [\n  \"ra_batch 0.1.0\",\n  \"ra_db 0.1.0\",\n  \"ra_hir 0.1.0\",\n- \"ra_ide_api 0.1.0\",\n+ \"ra_ide 0.1.0\",\n  \"ra_prof 0.1.0\",\n  \"ra_syntax 0.1.0\",\n ]\n@@ -1027,7 +1027,7 @@ dependencies = [\n ]\n \n [[package]]\n-name = \"ra_ide_api\"\n+name = \"ra_ide\"\n version = \"0.1.0\"\n dependencies = [\n  \"format-buf 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1065,7 +1065,7 @@ dependencies = [\n  \"lsp-server 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lsp-types 0.61.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ra_ide_api 0.1.0\",\n+ \"ra_ide 0.1.0\",\n  \"ra_prof 0.1.0\",\n  \"ra_project_model 0.1.0\",\n  \"ra_syntax 0.1.0\","}, {"sha": "74c971c0d3dda74737d778e8a94b4c5700f31e3f", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -56,7 +56,7 @@ https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frls-2.2E0\n \n ## Quick Links\n \n-* API docs: https://rust-analyzer.github.io/rust-analyzer/ra_ide_api/\n+* API docs: https://rust-analyzer.github.io/rust-analyzer/ra_ide/\n \n \n ## License"}, {"sha": "3bf351fe3771ce17670cfb91fced6984b110d967", "filename": "crates/ra_batch/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_batch%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_batch%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_batch%2FCargo.toml?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -15,6 +15,6 @@ crossbeam-channel = \"0.4.0\"\n ra_vfs = \"0.5.0\"\n ra_vfs_glob = { path = \"../ra_vfs_glob\" }\n ra_db = { path = \"../ra_db\" }\n-ra_ide_api = { path = \"../ra_ide_api\" }\n+ra_ide = { path = \"../ra_ide\" }\n ra_hir = { path = \"../ra_hir\" }\n ra_project_model = { path = \"../ra_project_model\" }"}, {"sha": "2c9645c00a3c430b623ed0b3f2ebce72f46d84ee", "filename": "crates/ra_batch/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_batch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_batch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_batch%2Fsrc%2Flib.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -6,7 +6,7 @@ use rustc_hash::FxHashMap;\n \n use crossbeam_channel::{unbounded, Receiver};\n use ra_db::{CrateGraph, FileId, SourceRootId};\n-use ra_ide_api::{AnalysisChange, AnalysisHost, FeatureFlags};\n+use ra_ide::{AnalysisChange, AnalysisHost, FeatureFlags};\n use ra_project_model::{get_rustc_cfg_options, PackageRoot, ProjectWorkspace};\n use ra_vfs::{RootEntry, Vfs, VfsChange, VfsTask, Watch};\n use ra_vfs_glob::RustPackageFilterBuilder;"}, {"sha": "c7e0d0f0f33a9144c012dedde689f3eab7a2771c", "filename": "crates/ra_cli/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_cli%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_cli%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2FCargo.toml?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -10,7 +10,7 @@ pico-args = \"0.3.0\"\n flexi_logger = \"0.14.0\"\n \n ra_syntax = { path = \"../ra_syntax\" }\n-ra_ide_api = { path = \"../ra_ide_api\" }\n+ra_ide = { path = \"../ra_ide\" }\n ra_batch = { path = \"../ra_batch\" }\n ra_hir = { path = \"../ra_hir\" }\n ra_db = { path = \"../ra_db\" }"}, {"sha": "5485a38ff2702ea4b2b661be7886dc151dad1384", "filename": "crates/ra_cli/src/analysis_bench.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_cli%2Fsrc%2Fanalysis_bench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_cli%2Fsrc%2Fanalysis_bench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fanalysis_bench.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -10,7 +10,7 @@ use ra_db::{\n     salsa::{Database, Durability},\n     FileId, SourceDatabaseExt,\n };\n-use ra_ide_api::{Analysis, AnalysisChange, AnalysisHost, FilePosition, LineCol};\n+use ra_ide::{Analysis, AnalysisChange, AnalysisHost, FilePosition, LineCol};\n \n use crate::Result;\n "}, {"sha": "fe847e611290f5f831b3a19b955383e7accfd05a", "filename": "crates/ra_cli/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fmain.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -9,7 +9,7 @@ use std::{error::Error, fmt::Write, io::Read};\n \n use flexi_logger::Logger;\n use pico_args::Arguments;\n-use ra_ide_api::{file_structure, Analysis};\n+use ra_ide::{file_structure, Analysis};\n use ra_prof::profile;\n use ra_syntax::{AstNode, SourceFile};\n "}, {"sha": "21341b7697d6d0e2bb5e8b48449f39b09588cfec", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -1,4 +1,4 @@\n-//! ra_db defines basic database traits. The concrete DB is defined by ra_ide_api.\n+//! ra_db defines basic database traits. The concrete DB is defined by ra_ide.\n mod cancellation;\n mod input;\n pub mod fixture;"}, {"sha": "5a3e24e9e467664214f6d5e2e6f16c191efee746", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -174,15 +174,15 @@ pub use hir_def::attr::Attrs;\n \n impl Module {\n     pub(crate) fn new(krate: Crate, crate_module_id: LocalModuleId) -> Module {\n-        Module { id: ModuleId { krate: krate.crate_id, module_id: crate_module_id } }\n+        Module { id: ModuleId { krate: krate.crate_id, local_id: crate_module_id } }\n     }\n \n     /// Name of this module.\n     pub fn name(self, db: &impl DefDatabase) -> Option<Name> {\n         let def_map = db.crate_def_map(self.id.krate);\n-        let parent = def_map[self.id.module_id].parent?;\n+        let parent = def_map[self.id.local_id].parent?;\n         def_map[parent].children.iter().find_map(|(name, module_id)| {\n-            if *module_id == self.id.module_id {\n+            if *module_id == self.id.local_id {\n                 Some(name.clone())\n             } else {\n                 None\n@@ -206,14 +206,14 @@ impl Module {\n     /// Finds a child module with the specified name.\n     pub fn child(self, db: &impl DefDatabase, name: &Name) -> Option<Module> {\n         let def_map = db.crate_def_map(self.id.krate);\n-        let child_id = def_map[self.id.module_id].children.get(name)?;\n+        let child_id = def_map[self.id.local_id].children.get(name)?;\n         Some(self.with_module_id(*child_id))\n     }\n \n     /// Iterates over all child modules.\n     pub fn children(self, db: &impl DefDatabase) -> impl Iterator<Item = Module> {\n         let def_map = db.crate_def_map(self.id.krate);\n-        let children = def_map[self.id.module_id]\n+        let children = def_map[self.id.local_id]\n             .children\n             .iter()\n             .map(|(_, module_id)| self.with_module_id(*module_id))\n@@ -224,7 +224,7 @@ impl Module {\n     /// Finds a parent module.\n     pub fn parent(self, db: &impl DefDatabase) -> Option<Module> {\n         let def_map = db.crate_def_map(self.id.krate);\n-        let parent_id = def_map[self.id.module_id].parent?;\n+        let parent_id = def_map[self.id.local_id].parent?;\n         Some(self.with_module_id(parent_id))\n     }\n \n@@ -240,7 +240,7 @@ impl Module {\n \n     /// Returns a `ModuleScope`: a set of items, visible in this module.\n     pub fn scope(self, db: &impl HirDatabase) -> Vec<(Name, ScopeDef, Option<Import>)> {\n-        db.crate_def_map(self.id.krate)[self.id.module_id]\n+        db.crate_def_map(self.id.krate)[self.id.local_id]\n             .scope\n             .entries()\n             .map(|(name, res)| {\n@@ -250,7 +250,7 @@ impl Module {\n     }\n \n     pub fn diagnostics(self, db: &impl HirDatabase, sink: &mut DiagnosticSink) {\n-        db.crate_def_map(self.id.krate).add_diagnostics(db, self.id.module_id, sink);\n+        db.crate_def_map(self.id.krate).add_diagnostics(db, self.id.local_id, sink);\n         for decl in self.declarations(db) {\n             match decl {\n                 crate::ModuleDef::Function(f) => f.diagnostics(db, sink),\n@@ -275,12 +275,12 @@ impl Module {\n \n     pub fn declarations(self, db: &impl DefDatabase) -> Vec<ModuleDef> {\n         let def_map = db.crate_def_map(self.id.krate);\n-        def_map[self.id.module_id].scope.declarations().map(ModuleDef::from).collect()\n+        def_map[self.id.local_id].scope.declarations().map(ModuleDef::from).collect()\n     }\n \n     pub fn impl_blocks(self, db: &impl DefDatabase) -> Vec<ImplBlock> {\n         let def_map = db.crate_def_map(self.id.krate);\n-        def_map[self.id.module_id].impls.iter().copied().map(ImplBlock::from).collect()\n+        def_map[self.id.local_id].impls.iter().copied().map(ImplBlock::from).collect()\n     }\n \n     fn with_module_id(self, module_id: LocalModuleId) -> Module {"}, {"sha": "bf3ee08341e64ccef45b7fe8ddbfc6f12b8795c5", "filename": "crates/ra_hir/src/code_model/src.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir%2Fsrc%2Fcode_model%2Fsrc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir%2Fsrc%2Fcode_model%2Fsrc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model%2Fsrc.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -22,7 +22,7 @@ impl Module {\n     /// Returns a node which defines this module. That is, a file or a `mod foo {}` with items.\n     pub fn definition_source(self, db: &impl DefDatabase) -> Source<ModuleSource> {\n         let def_map = db.crate_def_map(self.id.krate);\n-        let src = def_map[self.id.module_id].definition_source(db);\n+        let src = def_map[self.id.local_id].definition_source(db);\n         src.map(|it| match it {\n             Either::A(it) => ModuleSource::SourceFile(it),\n             Either::B(it) => ModuleSource::Module(it),\n@@ -33,7 +33,7 @@ impl Module {\n     /// `None` for the crate root.\n     pub fn declaration_source(self, db: &impl DefDatabase) -> Option<Source<ast::Module>> {\n         let def_map = db.crate_def_map(self.id.krate);\n-        def_map[self.id.module_id].declaration_source(db)\n+        def_map[self.id.local_id].declaration_source(db)\n     }\n }\n "}, {"sha": "9f7c22b21182c892326f205a4ad9603e3fcabe7b", "filename": "crates/ra_hir/src/from_source.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ffrom_source.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -262,13 +262,12 @@ impl Module {\n \n         let original_file = src.file_id.original_file(db);\n \n-        let (krate, module_id) =\n-            db.relevant_crates(original_file).iter().find_map(|&crate_id| {\n-                let crate_def_map = db.crate_def_map(crate_id);\n-                let local_module_id = crate_def_map.modules_for_file(original_file).next()?;\n-                Some((crate_id, local_module_id))\n-            })?;\n-        Some(Module { id: ModuleId { krate, module_id } })\n+        let (krate, local_id) = db.relevant_crates(original_file).iter().find_map(|&crate_id| {\n+            let crate_def_map = db.crate_def_map(crate_id);\n+            let local_id = crate_def_map.modules_for_file(original_file).next()?;\n+            Some((crate_id, local_id))\n+        })?;\n+        Some(Module { id: ModuleId { krate, local_id } })\n     }\n }\n "}, {"sha": "fffb22201d6353b72172cd4ee659b5bdd0681a13", "filename": "crates/ra_hir_def/src/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fattr.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -35,7 +35,7 @@ impl Attrs {\n         match def {\n             AttrDefId::ModuleId(module) => {\n                 let def_map = db.crate_def_map(module.krate);\n-                let src = match def_map[module.module_id].declaration_source(db) {\n+                let src = match def_map[module.local_id].declaration_source(db) {\n                     Some(it) => it,\n                     None => return Attrs::default(),\n                 };"}, {"sha": "a57a0176d4764d1a2e988f2cd94325e477431fb9", "filename": "crates/ra_hir_def/src/body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -82,7 +82,7 @@ impl Expander {\n     }\n \n     fn resolve_path_as_macro(&self, db: &impl DefDatabase, path: &Path) -> Option<MacroDefId> {\n-        self.crate_def_map.resolve_path(db, self.module.module_id, path).0.take_macros()\n+        self.crate_def_map.resolve_path(db, self.module.local_id, path).0.take_macros()\n     }\n }\n "}, {"sha": "34ed9b7a5eeecca7c7114b375d163c7fac35c604", "filename": "crates/ra_hir_def/src/docs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdocs.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -36,7 +36,7 @@ impl Documentation {\n         match def {\n             AttrDefId::ModuleId(module) => {\n                 let def_map = db.crate_def_map(module.krate);\n-                let src = def_map[module.module_id].declaration_source(db)?;\n+                let src = def_map[module.local_id].declaration_source(db)?;\n                 docs_from_ast(&src.value)\n             }\n             AttrDefId::StructFieldId(it) => {"}, {"sha": "f4fdbdcfc7482c6b5de614300b73dad201160d4d", "filename": "crates/ra_hir_def/src/lang_item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Flang_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Flang_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flang_item.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -41,7 +41,7 @@ impl LangItems {\n         crate_def_map\n             .modules\n             .iter()\n-            .filter_map(|(module_id, _)| db.module_lang_items(ModuleId { krate, module_id }))\n+            .filter_map(|(local_id, _)| db.module_lang_items(ModuleId { krate, local_id }))\n             .for_each(|it| lang_items.items.extend(it.items.iter().map(|(k, v)| (k.clone(), *v))));\n \n         Arc::new(lang_items)\n@@ -80,7 +80,7 @@ impl LangItems {\n     fn collect_lang_items(&mut self, db: &impl DefDatabase, module: ModuleId) {\n         // Look for impl targets\n         let def_map = db.crate_def_map(module.krate);\n-        let module_data = &def_map[module.module_id];\n+        let module_data = &def_map[module.local_id];\n         for &impl_block in module_data.impls.iter() {\n             self.collect_lang_item(db, impl_block, LangItemTarget::ImplBlockId)\n         }"}, {"sha": "bc553089694a5f191a8050bcd84ecab0dee5417f", "filename": "crates/ra_hir_def/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flib.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -50,7 +50,7 @@ impl_arena_id!(LocalImportId);\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct ModuleId {\n     pub krate: CrateId,\n-    pub module_id: LocalModuleId,\n+    pub local_id: LocalModuleId,\n }\n \n /// An ID of a module, **local** to a specific crate"}, {"sha": "603b497380a86cf5edcb56c0a933ca4c6af72665", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -37,7 +37,7 @@ pub(super) fn collect_defs(db: &impl DefDatabase, mut def_map: CrateDefMap) -> C\n         log::debug!(\"crate dep {:?} -> {:?}\", dep.name, dep.crate_id);\n         def_map.extern_prelude.insert(\n             dep.as_name(),\n-            ModuleId { krate: dep.crate_id, module_id: dep_def_map.root }.into(),\n+            ModuleId { krate: dep.crate_id, local_id: dep_def_map.root }.into(),\n         );\n \n         // look for the prelude\n@@ -323,7 +323,7 @@ where\n                         tested_by!(glob_across_crates);\n                         // glob import from other crate => we can just import everything once\n                         let item_map = self.db.crate_def_map(m.krate);\n-                        let scope = &item_map[m.module_id].scope;\n+                        let scope = &item_map[m.local_id].scope;\n \n                         // Module scoped macros is included\n                         let items = scope\n@@ -337,7 +337,7 @@ where\n                         // glob import from same crate => we do an initial\n                         // import, and then need to propagate any further\n                         // additions\n-                        let scope = &self.def_map[m.module_id].scope;\n+                        let scope = &self.def_map[m.local_id].scope;\n \n                         // Module scoped macros is included\n                         let items = scope\n@@ -349,7 +349,7 @@ where\n                         self.update(module_id, Some(import_id), &items);\n                         // record the glob import in case we add further items\n                         self.glob_imports\n-                            .entry(m.module_id)\n+                            .entry(m.local_id)\n                             .or_default()\n                             .push((module_id, import_id));\n                     }\n@@ -590,7 +590,7 @@ where\n                     raw::RawItemKind::Impl(imp) => {\n                         let module = ModuleId {\n                             krate: self.def_collector.def_map.krate,\n-                            module_id: self.module_id,\n+                            local_id: self.module_id,\n                         };\n                         let ctx = LocationCtx::new(self.def_collector.db, module, self.file_id);\n                         let imp_id = ImplId::from_ast_id(ctx, self.raw_items[imp].ast_id);\n@@ -673,7 +673,7 @@ where\n         modules[self.module_id].children.insert(name.clone(), res);\n         let resolution = Resolution {\n             def: PerNs::types(\n-                ModuleId { krate: self.def_collector.def_map.krate, module_id: res }.into(),\n+                ModuleId { krate: self.def_collector.def_map.krate, local_id: res }.into(),\n             ),\n             import: None,\n         };\n@@ -682,8 +682,7 @@ where\n     }\n \n     fn define_def(&mut self, def: &raw::DefData) {\n-        let module =\n-            ModuleId { krate: self.def_collector.def_map.krate, module_id: self.module_id };\n+        let module = ModuleId { krate: self.def_collector.def_map.krate, local_id: self.module_id };\n         let ctx = LocationCtx::new(self.def_collector.db, module, self.file_id);\n \n         let name = def.name.clone();"}, {"sha": "b72c55bd10e8aa3f76b93b1d26c2310679998cdc", "filename": "crates/ra_hir_def/src/nameres/path_resolution.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -74,19 +74,19 @@ impl CrateDefMap {\n             PathKind::DollarCrate(krate) => {\n                 if krate == self.krate {\n                     tested_by!(macro_dollar_crate_self);\n-                    PerNs::types(ModuleId { krate: self.krate, module_id: self.root }.into())\n+                    PerNs::types(ModuleId { krate: self.krate, local_id: self.root }.into())\n                 } else {\n                     let def_map = db.crate_def_map(krate);\n-                    let module = ModuleId { krate, module_id: def_map.root };\n+                    let module = ModuleId { krate, local_id: def_map.root };\n                     tested_by!(macro_dollar_crate_other);\n                     PerNs::types(module.into())\n                 }\n             }\n             PathKind::Crate => {\n-                PerNs::types(ModuleId { krate: self.krate, module_id: self.root }.into())\n+                PerNs::types(ModuleId { krate: self.krate, local_id: self.root }.into())\n             }\n             PathKind::Self_ => {\n-                PerNs::types(ModuleId { krate: self.krate, module_id: original_module }.into())\n+                PerNs::types(ModuleId { krate: self.krate, local_id: original_module }.into())\n             }\n             // plain import or absolute path in 2015: crate-relative with\n             // fallback to extern prelude (with the simplification in\n@@ -113,7 +113,7 @@ impl CrateDefMap {\n             }\n             PathKind::Super => {\n                 if let Some(p) = self.modules[original_module].parent {\n-                    PerNs::types(ModuleId { krate: self.krate, module_id: p }.into())\n+                    PerNs::types(ModuleId { krate: self.krate, local_id: p }.into())\n                 } else {\n                     log::debug!(\"super path in root module\");\n                     return ResolvePathResult::empty(ReachedFixedPoint::Yes);\n@@ -160,7 +160,7 @@ impl CrateDefMap {\n                             Path { segments: path.segments[i..].to_vec(), kind: PathKind::Self_ };\n                         log::debug!(\"resolving {:?} in other crate\", path);\n                         let defp_map = db.crate_def_map(module.krate);\n-                        let (def, s) = defp_map.resolve_path(db, module.module_id, &path);\n+                        let (def, s) = defp_map.resolve_path(db, module.local_id, &path);\n                         return ResolvePathResult::with(\n                             def,\n                             ReachedFixedPoint::Yes,\n@@ -169,7 +169,7 @@ impl CrateDefMap {\n                     }\n \n                     // Since it is a qualified path here, it should not contains legacy macros\n-                    match self[module.module_id].scope.get(&segment.name) {\n+                    match self[module.local_id].scope.get(&segment.name) {\n                         Some(res) => res.def,\n                         _ => {\n                             log::debug!(\"path segment {:?} not found\", segment.name);\n@@ -254,7 +254,7 @@ impl CrateDefMap {\n                 keep = db.crate_def_map(prelude.krate);\n                 &keep\n             };\n-            def_map[prelude.module_id].scope.get(name).map_or_else(PerNs::none, |res| res.def)\n+            def_map[prelude.local_id].scope.get(name).map_or_else(PerNs::none, |res| res.def)\n         } else {\n             PerNs::none()\n         }"}, {"sha": "0847f6dcf45d0b81e62415856ec091ae84c19723", "filename": "crates/ra_hir_def/src/resolver.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -325,7 +325,7 @@ impl Resolver {\n             if let Scope::ModuleScope(m) = scope {\n                 if let Some(prelude) = m.crate_def_map.prelude {\n                     let prelude_def_map = db.crate_def_map(prelude.krate);\n-                    traits.extend(prelude_def_map[prelude.module_id].scope.traits());\n+                    traits.extend(prelude_def_map[prelude.local_id].scope.traits());\n                 }\n                 traits.extend(m.crate_def_map[m.module_id].scope.traits());\n             }\n@@ -402,7 +402,7 @@ impl Scope {\n                 });\n                 if let Some(prelude) = m.crate_def_map.prelude {\n                     let prelude_def_map = db.crate_def_map(prelude.krate);\n-                    prelude_def_map[prelude.module_id].scope.entries().for_each(|(name, res)| {\n+                    prelude_def_map[prelude.local_id].scope.entries().for_each(|(name, res)| {\n                         f(name.clone(), ScopeDef::PerNs(res.def));\n                     });\n                 }\n@@ -492,7 +492,7 @@ pub trait HasResolver: Copy {\n impl HasResolver for ModuleId {\n     fn resolver(self, db: &impl DefDatabase) -> Resolver {\n         let def_map = db.crate_def_map(self.krate);\n-        Resolver::default().push_module_scope(def_map, self.module_id)\n+        Resolver::default().push_module_scope(def_map, self.local_id)\n     }\n }\n "}, {"sha": "1dc9793f950a0287256d17742e1c25175568cafd", "filename": "crates/ra_hir_ty/src/test_db.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -73,9 +73,9 @@ impl TestDB {\n     pub fn module_for_file(&self, file_id: FileId) -> ModuleId {\n         for &krate in self.relevant_crates(file_id).iter() {\n             let crate_def_map = self.crate_def_map(krate);\n-            for (module_id, data) in crate_def_map.modules.iter() {\n+            for (local_id, data) in crate_def_map.modules.iter() {\n                 if data.definition == Some(file_id) {\n-                    return ModuleId { krate, module_id };\n+                    return ModuleId { krate, local_id };\n                 }\n             }\n         }"}, {"sha": "c8461b447add1b2073d5e8a9fa6e4de3ce17797e", "filename": "crates/ra_hir_ty/src/tests.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -4677,7 +4677,7 @@ fn type_at_pos(db: &TestDB, pos: FilePosition) -> String {\n \n     let module = db.module_for_file(pos.file_id);\n     let crate_def_map = db.crate_def_map(module.krate);\n-    for decl in crate_def_map[module.module_id].scope.declarations() {\n+    for decl in crate_def_map[module.local_id].scope.declarations() {\n         if let ModuleDefId::FunctionId(func) = decl {\n             let (_body, source_map) = db.body_with_source_map(func.into());\n             if let Some(expr_id) = source_map.node_expr(Source::new(pos.file_id.into(), &expr)) {\n@@ -4753,7 +4753,7 @@ fn infer(content: &str) -> String {\n     let crate_def_map = db.crate_def_map(module.krate);\n \n     let mut defs: Vec<DefWithBodyId> = Vec::new();\n-    visit_module(&db, &crate_def_map, module.module_id, &mut |it| defs.push(it));\n+    visit_module(&db, &crate_def_map, module.local_id, &mut |it| defs.push(it));\n     defs.sort_by_key(|def| match def {\n         DefWithBodyId::FunctionId(it) => {\n             it.lookup(&db).ast_id.to_node(&db).syntax().text_range().start()\n@@ -4796,7 +4796,7 @@ fn visit_module(\n                     }\n                 }\n             }\n-            ModuleDefId::ModuleId(it) => visit_module(db, crate_def_map, it.module_id, cb),\n+            ModuleDefId::ModuleId(it) => visit_module(db, crate_def_map, it.local_id, cb),\n             _ => (),\n         }\n     }\n@@ -4844,7 +4844,7 @@ fn typing_whitespace_inside_a_function_should_not_invalidate_types() {\n         let events = db.log_executed(|| {\n             let module = db.module_for_file(pos.file_id);\n             let crate_def_map = db.crate_def_map(module.krate);\n-            visit_module(&db, &crate_def_map, module.module_id, &mut |def| {\n+            visit_module(&db, &crate_def_map, module.local_id, &mut |def| {\n                 db.infer(def);\n             });\n         });\n@@ -4866,7 +4866,7 @@ fn typing_whitespace_inside_a_function_should_not_invalidate_types() {\n         let events = db.log_executed(|| {\n             let module = db.module_for_file(pos.file_id);\n             let crate_def_map = db.crate_def_map(module.krate);\n-            visit_module(&db, &crate_def_map, module.module_id, &mut |def| {\n+            visit_module(&db, &crate_def_map, module.local_id, &mut |def| {\n                 db.infer(def);\n             });\n         });"}, {"sha": "e6383dd35284d0c1f9bb8e019345f4ded37d163a", "filename": "crates/ra_ide/Cargo.toml", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -1,6 +1,6 @@\n [package]\n edition = \"2018\"\n-name = \"ra_ide_api\"\n+name = \"ra_ide\"\n version = \"0.1.0\"\n authors = [\"rust-analyzer developers\"]\n \n@@ -32,7 +32,7 @@ ra_prof = { path = \"../ra_prof\" }\n test_utils = { path = \"../test_utils\" }\n ra_assists = { path = \"../ra_assists\" }\n \n-# ra_ide_api should depend only on the top-level `hir` package. if you need\n+# ra_ide should depend only on the top-level `hir` package. if you need\n # something from some `hir_xxx` subpackage, reexport the API via `hir`.\n hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n ", "previous_filename": "crates/ra_ide_api/Cargo.toml"}, {"sha": "e00589733b7a6c96173b03cabe26452523ac9442", "filename": "crates/ra_ide/src/assists.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fassists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fassists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fassists.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/assists.rs"}, {"sha": "d559dc4d0e9632dcf9e2af9d8b38d52d1742da0e", "filename": "crates/ra_ide/src/call_info.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_info.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/call_info.rs"}, {"sha": "4a76d1dd83ce996d5e00b50752f4e554d6e44ccb", "filename": "crates/ra_ide/src/change.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fchange.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/change.rs"}, {"sha": "abe1f36cec9b833e2bb80552fd63f1ff261d36eb", "filename": "crates/ra_ide/src/completion.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion.rs"}, {"sha": "b6fe486270169cfcd7c68540158cfb535df44760", "filename": "crates/ra_ide/src/completion/complete_dot.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/complete_dot.rs"}, {"sha": "50245870658563bcda0caf8154d77e21dc7dda67", "filename": "crates/ra_ide/src/completion/complete_fn_param.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/complete_fn_param.rs"}, {"sha": "eb7cd9ac209a1e45c45194356457f618fcf583b4", "filename": "crates/ra_ide/src/completion/complete_keyword.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/complete_keyword.rs"}, {"sha": "faadd1e3f4e4d0e52ea6811e1498cb6a64b2fe64", "filename": "crates/ra_ide/src/completion/complete_macro_in_item_position.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/complete_macro_in_item_position.rs"}, {"sha": "89e0009a17a6ec918b55ec495d293707790c53ab", "filename": "crates/ra_ide/src/completion/complete_path.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/complete_path.rs"}, {"sha": "fd03b1c40586ad07fa4f83d00accddbbdd79b724", "filename": "crates/ra_ide/src/completion/complete_pattern.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/complete_pattern.rs"}, {"sha": "646a30c76efa0004dfe06221c7c32d748db25c4d", "filename": "crates/ra_ide/src/completion/complete_postfix.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/complete_postfix.rs"}, {"sha": "577c394d22e645de841b00904e2ca58864a8e2ea", "filename": "crates/ra_ide/src/completion/complete_record_literal.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/complete_record_literal.rs"}, {"sha": "a56c7e3a1fca7b2c7bc08822bf78d16aafb6c955", "filename": "crates/ra_ide/src/completion/complete_record_pattern.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/complete_record_pattern.rs"}, {"sha": "d5739b58a6d759741360c196397b18821c332fc5", "filename": "crates/ra_ide/src/completion/complete_scope.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/complete_scope.rs"}, {"sha": "1f2988b36bfce62290beedc4e3851941d28040f7", "filename": "crates/ra_ide/src/completion/complete_snippet.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/complete_snippet.rs"}, {"sha": "b8345c91d521b7d45cbbacf96fcd6caae4b37b88", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/completion_context.rs"}, {"sha": "93f336370915a11db85079b13285655faacbbefa", "filename": "crates/ra_ide/src/completion/completion_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/completion_item.rs"}, {"sha": "5f056730ac74345a1be57384cd0466022e629613", "filename": "crates/ra_ide/src/completion/presentation.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/completion/presentation.rs"}, {"sha": "f739ebecd3b6541a0b28a94000b1f89c0ccb3b22", "filename": "crates/ra_ide/src/db.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdb.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/db.rs"}, {"sha": "cc1ccab4b5fa39325f02117ef83130eee3783f63", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/diagnostics.rs"}, {"sha": "30617412a6dfa459ea3af8b85383761ccf37577c", "filename": "crates/ra_ide/src/display.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/display.rs"}, {"sha": "d96de4e4ce06946750121ac6e9f6eb335510724c", "filename": "crates/ra_ide/src/display/function_signature.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdisplay%2Ffunction_signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdisplay%2Ffunction_signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Ffunction_signature.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/display/function_signature.rs"}, {"sha": "6ac60722b9a00a37afa32776b8515e3052091426", "filename": "crates/ra_ide/src/display/navigation_target.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/display/navigation_target.rs"}, {"sha": "9ffc9b980140d586e1bb4f3547bc77165d6e8447", "filename": "crates/ra_ide/src/display/short_label.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/display/short_label.rs"}, {"sha": "a80d65ac714f180b518e86ba1459d7e91d6bca98", "filename": "crates/ra_ide/src/display/structure.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fstructure.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/display/structure.rs"}, {"sha": "2f1abf509a00549b1359cef237341023a30ec8b9", "filename": "crates/ra_ide/src/expand.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fexpand.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/expand.rs"}, {"sha": "abc602244cab961785eafc592590da1ad064e64a", "filename": "crates/ra_ide/src/expand_macro.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/expand_macro.rs"}, {"sha": "4b7bfc0b11e8a3b8838547a4f159f7cc9c9145a4", "filename": "crates/ra_ide/src/extend_selection.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/extend_selection.rs"}, {"sha": "de4ae513d134029153d9735fb01c4baff05a321b", "filename": "crates/ra_ide/src/feature_flags.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Ffeature_flags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Ffeature_flags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ffeature_flags.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/feature_flags.rs"}, {"sha": "4eeb76d1437f4f1f25ce9759d4df105a6a20bd76", "filename": "crates/ra_ide/src/folding_ranges.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Ffolding_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Ffolding_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ffolding_ranges.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/folding_ranges.rs"}, {"sha": "c10a6c8448dd18555a87227ed9a5f158354960bc", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/goto_definition.rs"}, {"sha": "992a088090126c07364348ba6b76a28f8c7e2dc9", "filename": "crates/ra_ide/src/goto_type_definition.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/goto_type_definition.rs"}, {"sha": "260a7b86947888b9df1241413f93418218201b64", "filename": "crates/ra_ide/src/hover.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/hover.rs"}, {"sha": "aa480e399b2fbdec548dc8840c3e7a5bd308aa58", "filename": "crates/ra_ide/src/impls.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fimpls.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/impls.rs"}, {"sha": "45149bf0cc10537cdab6ebe7177b8c938fb1f219", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/inlay_hints.rs"}, {"sha": "7deeb34947aceea7eb5a0fca825560d7f1d368d6", "filename": "crates/ra_ide/src/join_lines.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/join_lines.rs"}, {"sha": "d1bff4a761eb8be29bdc95c526cda036578b14b9", "filename": "crates/ra_ide/src/lib.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -1,4 +1,4 @@\n-//! ra_ide_api crate provides \"ide-centric\" APIs for the rust-analyzer. That is,\n+//! ra_ide crate provides \"ide-centric\" APIs for the rust-analyzer. That is,\n //! it generally operates with files and text ranges, and returns results as\n //! Strings, suitable for displaying to the human.\n //!", "previous_filename": "crates/ra_ide_api/src/lib.rs"}, {"sha": "710890d27dcf585aa8461b342ecf76a2fd6b49e2", "filename": "crates/ra_ide/src/line_index.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fline_index.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/line_index.rs"}, {"sha": "bd1e08feba435f0d0de24336587dc7b8cb9659fb", "filename": "crates/ra_ide/src/line_index_utils.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fline_index_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fline_index_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fline_index_utils.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/line_index_utils.rs"}, {"sha": "848ae4dc743e81a23bfd7b40267a32dee52afbc1", "filename": "crates/ra_ide/src/marks.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmarks.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/marks.rs"}, {"sha": "d1204fac018bc191784b6db880a70596f72d563a", "filename": "crates/ra_ide/src/matching_brace.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fmatching_brace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fmatching_brace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmatching_brace.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/matching_brace.rs"}, {"sha": "bf8a5493242d1605d211925846f1baa4a14cbeff", "filename": "crates/ra_ide/src/mock_analysis.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/mock_analysis.rs"}, {"sha": "6027e7d54d143741d79d525f9a4ef287aeb694b7", "filename": "crates/ra_ide/src/parent_module.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fparent_module.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/parent_module.rs"}, {"sha": "21a1ea69ebbd48796c4e49f3b8bc55e7b68f09b0", "filename": "crates/ra_ide/src/references.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/references.rs"}, {"sha": "5cea805ec92af66180f8b300f72f60cbc8d0c0a5", "filename": "crates/ra_ide/src/references/classify.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Freferences%2Fclassify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Freferences%2Fclassify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Fclassify.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/references/classify.rs"}, {"sha": "10d3a2364c1a2e6ffc52a31844bce36b28b561df", "filename": "crates/ra_ide/src/references/name_definition.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Freferences%2Fname_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Freferences%2Fname_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Fname_definition.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/references/name_definition.rs"}, {"sha": "d58496049e21a9125d479f5ff72e73df9da18f1d", "filename": "crates/ra_ide/src/references/rename.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/references/rename.rs"}, {"sha": "f5c9589f4d17257f17c34caa4c7bc45c51aea20c", "filename": "crates/ra_ide/src/references/search_scope.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Freferences%2Fsearch_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Freferences%2Fsearch_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Fsearch_scope.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/references/search_scope.rs"}, {"sha": "8039a5164ebf9eb5b5af82819cd0234c0edbe8f5", "filename": "crates/ra_ide/src/runnables.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Frunnables.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/runnables.rs"}, {"sha": "b39c4d3717a7ad89efab4c42c15f5199bf8d6c82", "filename": "crates/ra_ide/src/snapshots/highlighting.html", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/snapshots/highlighting.html"}, {"sha": "79f11ea80ccfa4bfaa0589506df43f9653e81f26", "filename": "crates/ra_ide/src/snapshots/rainbow_highlighting.html", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/snapshots/rainbow_highlighting.html"}, {"sha": "f5f7f8807c4425c1661c323f207854e71241bf8d", "filename": "crates/ra_ide/src/source_change.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fsource_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fsource_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsource_change.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/source_change.rs"}, {"sha": "1bb27eb8512345760ce173f3ae44c3fba35833ac", "filename": "crates/ra_ide/src/status.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fstatus.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/status.rs"}, {"sha": "5729eb5b3dc1209049143163251bbbe5cd8f0b9b", "filename": "crates/ra_ide/src/symbol_index.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsymbol_index.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/symbol_index.rs"}, {"sha": "9a3e4c82f65a4438f5e466b6c8899bac327fbda9", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "renamed", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -306,7 +306,7 @@ fn main() {\n \"#\n             .trim(),\n         );\n-        let dst_file = project_dir().join(\"crates/ra_ide_api/src/snapshots/highlighting.html\");\n+        let dst_file = project_dir().join(\"crates/ra_ide/src/snapshots/highlighting.html\");\n         let actual_html = &analysis.highlight_as_html(file_id, false).unwrap();\n         let expected_html = &read_text(&dst_file);\n         std::fs::write(dst_file, &actual_html).unwrap();\n@@ -332,8 +332,7 @@ fn bar() {\n \"#\n             .trim(),\n         );\n-        let dst_file =\n-            project_dir().join(\"crates/ra_ide_api/src/snapshots/rainbow_highlighting.html\");\n+        let dst_file = project_dir().join(\"crates/ra_ide/src/snapshots/rainbow_highlighting.html\");\n         let actual_html = &analysis.highlight_as_html(file_id, true).unwrap();\n         let expected_html = &read_text(&dst_file);\n         std::fs::write(dst_file, &actual_html).unwrap();", "previous_filename": "crates/ra_ide_api/src/syntax_highlighting.rs"}, {"sha": "4d0f0fc47d02846a64e64aed09dbc9241954b701", "filename": "crates/ra_ide/src/syntax_tree.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/syntax_tree.rs"}, {"sha": "8adb214d4cc1c2dbe473f30436d2f2d9657136ec", "filename": "crates/ra_ide/src/test_utils.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftest_utils.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/test_utils.rs"}, {"sha": "21e5be9b3838ede54aff686e9cb4516cc8303881", "filename": "crates/ra_ide/src/typing.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/typing.rs"}, {"sha": "088cc9be40f10639d744a60c43438365aec15d71", "filename": "crates/ra_ide/src/wasm_shims.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fwasm_shims.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_ide%2Fsrc%2Fwasm_shims.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fwasm_shims.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "previous_filename": "crates/ra_ide_api/src/wasm_shims.rs"}, {"sha": "21aef842ce61cc3626a77bf47f1654a7388f42c8", "filename": "crates/ra_lsp_server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2FCargo.toml?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -22,7 +22,7 @@ jod-thread = \"0.1.0\"\n ra_vfs = \"0.5.0\"\n ra_syntax = { path = \"../ra_syntax\" }\n ra_text_edit = { path = \"../ra_text_edit\" }\n-ra_ide_api = { path = \"../ra_ide_api\" }\n+ra_ide = { path = \"../ra_ide\" }\n lsp-server = \"0.3.0\"\n ra_project_model = { path = \"../ra_project_model\" }\n ra_prof = { path = \"../ra_prof\" }"}, {"sha": "c4a9e71018f30eb4842484c657149079cab0d10c", "filename": "crates/ra_lsp_server/src/cargo_target_spec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Fcargo_target_spec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Fcargo_target_spec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fcargo_target_spec.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -1,6 +1,6 @@\n //! FIXME: write short doc here\n \n-use ra_ide_api::{FileId, RunnableKind};\n+use ra_ide::{FileId, RunnableKind};\n use ra_project_model::{self, ProjectWorkspace, TargetKind};\n \n use crate::{world::WorldSnapshot, Result};"}, {"sha": "b13093cfe65d9d664ef5dbc3d4653364ec7077c9", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -6,7 +6,7 @@ use lsp_types::{\n     SymbolKind, TextDocumentEdit, TextDocumentIdentifier, TextDocumentItem,\n     TextDocumentPositionParams, Url, VersionedTextDocumentIdentifier, WorkspaceEdit,\n };\n-use ra_ide_api::{\n+use ra_ide::{\n     translate_offset_with_edit, CompletionItem, CompletionItemKind, FileId, FilePosition,\n     FileRange, FileSystemEdit, Fold, FoldKind, InsertTextFormat, LineCol, LineIndex,\n     NavigationTarget, RangeInfo, Severity, SourceChange, SourceFileEdit,\n@@ -173,7 +173,7 @@ impl ConvWith<&LineIndex> for Range {\n     }\n }\n \n-impl Conv for ra_ide_api::Documentation {\n+impl Conv for ra_ide::Documentation {\n     type Output = lsp_types::Documentation;\n     fn conv(self) -> Documentation {\n         Documentation::MarkupContent(MarkupContent {\n@@ -183,7 +183,7 @@ impl Conv for ra_ide_api::Documentation {\n     }\n }\n \n-impl Conv for ra_ide_api::FunctionSignature {\n+impl Conv for ra_ide::FunctionSignature {\n     type Output = lsp_types::SignatureInformation;\n     fn conv(self) -> Self::Output {\n         use lsp_types::{ParameterInformation, ParameterLabel, SignatureInformation};"}, {"sha": "2ca149fd56b82738216a6eaf665869a97740f785", "filename": "crates/ra_lsp_server/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Flib.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -1,6 +1,6 @@\n //! Implementation of the LSP for rust-analyzer.\n //!\n-//! This crate takes Rust-specific analysis results from ra_ide_api and\n+//! This crate takes Rust-specific analysis results from ra_ide and\n //! translates into LSP types.\n //!\n //! It also is the root of all state. `world` module defines the bulk of the"}, {"sha": "83845f1e006e5dda0b03120b0e866e1a3e8b4fa7", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -9,7 +9,7 @@ use std::{error::Error, fmt, panic, path::PathBuf, sync::Arc, time::Instant};\n use crossbeam_channel::{select, unbounded, RecvError, Sender};\n use lsp_server::{Connection, ErrorCode, Message, Notification, Request, RequestId, Response};\n use lsp_types::{ClientCapabilities, NumberOrString};\n-use ra_ide_api::{Canceled, FeatureFlags, FileId, LibraryData, SourceRootId};\n+use ra_ide::{Canceled, FeatureFlags, FileId, LibraryData, SourceRootId};\n use ra_prof::profile;\n use ra_vfs::{VfsTask, Watch};\n use relative_path::RelativePathBuf;"}, {"sha": "c81fa7f679c1675d7fce4abc1498f38f1d2d71de", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -9,7 +9,7 @@ use lsp_types::{\n     Hover, HoverContents, Location, MarkupContent, MarkupKind, Position, PrepareRenameResponse,\n     Range, RenameParams, SymbolInformation, TextDocumentIdentifier, TextEdit, WorkspaceEdit,\n };\n-use ra_ide_api::{\n+use ra_ide::{\n     AssistId, FileId, FilePosition, FileRange, Query, Runnable, RunnableKind, SearchScope,\n };\n use ra_prof::profile;\n@@ -162,7 +162,7 @@ pub fn handle_on_type_formatting(\n     let line_index = world.analysis().file_line_index(position.file_id)?;\n     let line_endings = world.file_line_endings(position.file_id);\n \n-    // in `ra_ide_api`, the `on_type` invariant is that\n+    // in `ra_ide`, the `on_type` invariant is that\n     // `text.char_at(position) == typed_char`.\n     position.offset = position.offset - TextUnit::of_char('.');\n     let char_typed = params.ch.chars().next().unwrap_or('\\0');\n@@ -894,7 +894,7 @@ pub fn handle_inlay_hints(\n             label: api_type.label.to_string(),\n             range: api_type.range.conv_with(&line_index),\n             kind: match api_type.kind {\n-                ra_ide_api::InlayKind::TypeHint => InlayKind::TypeHint,\n+                ra_ide::InlayKind::TypeHint => InlayKind::TypeHint,\n             },\n         })\n         .collect())"}, {"sha": "609b2adcc9904e29c50a89b19d66f1313870a2d3", "filename": "crates/ra_lsp_server/src/main_loop/subscriptions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fsubscriptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fsubscriptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fsubscriptions.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -1,6 +1,6 @@\n //! FIXME: write short doc here\n \n-use ra_ide_api::FileId;\n+use ra_ide::FileId;\n use rustc_hash::FxHashSet;\n \n #[derive(Default, Debug)]"}, {"sha": "927449b45da7ed543338c3122306aaf5c09af572", "filename": "crates/ra_lsp_server/src/world.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -9,7 +9,7 @@ use crossbeam_channel::{unbounded, Receiver};\n use lsp_server::ErrorCode;\n use lsp_types::Url;\n use parking_lot::RwLock;\n-use ra_ide_api::{\n+use ra_ide::{\n     Analysis, AnalysisChange, AnalysisHost, CrateGraph, FeatureFlags, FileId, LibraryData,\n     SourceRootId,\n };"}, {"sha": "0f64d7e5f8c74576c0525f9a8d74efad3cfe2dac", "filename": "docs/dev/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -14,7 +14,7 @@ To learn more about how rust-analyzer works, see\n \n We also publish rustdoc docs to pages:\n \n-https://rust-analyzer.github.io/rust-analyzer/ra_ide_api/\n+https://rust-analyzer.github.io/rust-analyzer/ra_ide/\n \n Various organizational and process issues are discussed in this document.\n "}, {"sha": "629645757a1f9433feedadef9af229d0cca735fa", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -106,7 +106,7 @@ guessing a HIR for a particular source position.\n \n Underneath, HIR works on top of salsa, using a `HirDatabase` trait.\n \n-### `crates/ra_ide_api`\n+### `crates/ra_ide`\n \n A stateful library for analyzing many Rust files as they change. `AnalysisHost`\n is a mutable entity (clojure's atom) which holds the current state, incorporates\n@@ -124,11 +124,11 @@ offsets and strings as output. This works on top of rich code model powered by\n \n ### `crates/ra_lsp_server`\n \n-An LSP implementation which wraps `ra_ide_api` into a language server protocol.\n+An LSP implementation which wraps `ra_ide` into a language server protocol.\n \n ### `ra_vfs`\n \n-Although `hir` and `ra_ide_api` don't do any IO, we need to be able to read\n+Although `hir` and `ra_ide` don't do any IO, we need to be able to read\n files from disk at the end of the day. This is what `ra_vfs` does. It also\n manages overlays: \"dirty\" files in the editor, whose \"true\" contents is\n different from data on disk. This is more or less the single really\n@@ -162,13 +162,13 @@ disk. For this reason, we try to avoid writing too many tests on this boundary:\n in a statically typed language, it's hard to make an error in the protocol\n itself if messages are themselves typed.\n \n-The middle, and most important, boundary is `ra_ide_api`. Unlike\n-`ra_lsp_server`, which exposes API, `ide_api` uses Rust API and is intended to\n+The middle, and most important, boundary is `ra_ide`. Unlike\n+`ra_lsp_server`, which exposes API, `ide` uses Rust API and is intended to\n use by various tools. Typical test creates an `AnalysisHost`, calls some\n `Analysis` functions and compares the results against expectation.\n \n The innermost and most elaborate boundary is `hir`. It has a much richer\n-vocabulary of types than `ide_api`, but the basic testing setup is the same: we\n+vocabulary of types than `ide`, but the basic testing setup is the same: we\n create a database, run some queries, assert result.\n \n For comparisons, we use [insta](https://github.com/mitsuhiko/insta/) library for"}, {"sha": "c163a74b31d0c32ce5e4283ee9c0aa070457819b", "filename": "docs/dev/guide.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/docs%2Fdev%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/docs%2Fdev%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fguide.md?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -40,8 +40,8 @@ terms of files and offsets, and **not** in terms of Rust concepts like structs,\n traits, etc. The \"typed\" API with Rust specific types is slightly lower in the\n stack, we'll talk about it later.\n \n-[`AnalysisHost`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/lib.rs#L265-L284\n-[`Analysis`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/lib.rs#L291-L478\n+[`AnalysisHost`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide/src/lib.rs#L265-L284\n+[`Analysis`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide/src/lib.rs#L291-L478\n \n The reason for this separation of `Analysis` and `AnalysisHost` is that we want to apply\n changes \"uniquely\", but we might also want to fork an `Analysis` and send it to\n@@ -69,7 +69,7 @@ the `AnalysisHost::apply_change` method, which accepts a single argument, a\n \"transaction\", so it suffices to study its methods to understand all of the\n input data.\n \n-[`AnalysisChange`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/lib.rs#L119-L167\n+[`AnalysisChange`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide/src/lib.rs#L119-L167\n \n The `(add|change|remove)_file` methods control the set of the input files, where\n each file has an integer id (`FileId`, picked by the client), text (`String`)\n@@ -253,7 +253,7 @@ All analyzer information is stored in a salsa database. `Analysis` and\n `AnalysisHost` types are newtype wrappers for [`RootDatabase`] -- a salsa\n database.\n \n-[`RootDatabase`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/db.rs#L88-L134\n+[`RootDatabase`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide/src/db.rs#L88-L134\n \n Salsa input queries are defined in [`FilesDatabase`] (which is a part of\n `RootDatabase`). They closely mirror the familiar `AnalysisChange` structure:\n@@ -565,11 +565,11 @@ the type to completion.\n [schedule it on the threadpool]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_lsp_server/src/main_loop.rs#L428\n [catch]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_lsp_server/src/main_loop.rs#L436-L442\n [the handler]: https://salsa.zulipchat.com/#narrow/stream/181542-rfcs.2Fsalsa-query-group/topic/design.20next.20steps\n-[ask analysis for completion]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/lib.rs#L439-L444\n-[completion implementation]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion.rs#L46-L62\n-[`CompletionContext`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion/completion_context.rs#L14-L37\n-[\"IntelliJ Trick\"]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion/completion_context.rs#L72-L75\n-[find an ancestor `fn` node]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion/completion_context.rs#L116-L120\n-[semantic model]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion/completion_context.rs#L123\n-[series of independent completion routines]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion.rs#L52-L59\n-[`complete_dot`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion/complete_dot.rs#L6-L22\n+[ask analysis for completion]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide/src/lib.rs#L439-L444\n+[completion implementation]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide/src/completion.rs#L46-L62\n+[`CompletionContext`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide/src/completion/completion_context.rs#L14-L37\n+[\"IntelliJ Trick\"]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide/src/completion/completion_context.rs#L72-L75\n+[find an ancestor `fn` node]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide/src/completion/completion_context.rs#L116-L120\n+[semantic model]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide/src/completion/completion_context.rs#L123\n+[series of independent completion routines]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide/src/completion.rs#L52-L59\n+[`complete_dot`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide/src/completion/complete_dot.rs#L6-L22"}, {"sha": null, "filename": "editors/code/src/utils/terminateProcess.sh", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/editors%2Fcode%2Fsrc%2Futils%2FterminateProcess.sh", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/editors%2Fcode%2Fsrc%2Futils%2FterminateProcess.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futils%2FterminateProcess.sh?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6"}, {"sha": "8a005d6c4dc1d52bc323224b5ab38421a2f598cf", "filename": "xtask/tests/tidy-tests/docs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/xtask%2Ftests%2Ftidy-tests%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f6b7bb32d6280ed787075c4a54f4e5b46fcb6/xtask%2Ftests%2Ftidy-tests%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy-tests%2Fdocs.rs?ref=360f6b7bb32d6280ed787075c4a54f4e5b46fcb6", "patch": "@@ -74,7 +74,7 @@ fn no_docs_comments() {\n         \"ra_db\",\n         \"ra_hir\",\n         \"ra_hir_expand\",\n-        \"ra_ide_api\",\n+        \"ra_ide\",\n         \"ra_lsp_server\",\n         \"ra_mbe\",\n         \"ra_parser\","}]}