{"sha": "801dd07a950b047150aa291e461ba53a7d29489e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwMWRkMDdhOTUwYjA0NzE1MGFhMjkxZTQ2MWJhNTNhN2QyOTQ4OWU=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-08-08T10:13:16Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-08-11T10:11:38Z"}, "message": "Use ItemLocalId as key for TypeckTables::fru_field_types.", "tree": {"sha": "459be8aa255046d4ca57c2c3772ce48abe9673b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/459be8aa255046d4ca57c2c3772ce48abe9673b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/801dd07a950b047150aa291e461ba53a7d29489e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/801dd07a950b047150aa291e461ba53a7d29489e", "html_url": "https://github.com/rust-lang/rust/commit/801dd07a950b047150aa291e461ba53a7d29489e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/801dd07a950b047150aa291e461ba53a7d29489e/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "890f93f8d49f48c32f67519b8e523ce6034cb875", "url": "https://api.github.com/repos/rust-lang/rust/commits/890f93f8d49f48c32f67519b8e523ce6034cb875", "html_url": "https://github.com/rust-lang/rust/commit/890f93f8d49f48c32f67519b8e523ce6034cb875"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "84058119b4591f43154f57d3f0fdcac4935aee8f", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/801dd07a950b047150aa291e461ba53a7d29489e/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/801dd07a950b047150aa291e461ba53a7d29489e/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=801dd07a950b047150aa291e461ba53a7d29489e", "patch": "@@ -657,7 +657,7 @@ for ty::TypeckTables<'gcx> {\n             ich::hash_stable_itemlocalmap(hcx, hasher, closure_tys);\n             ich::hash_stable_itemlocalmap(hcx, hasher, closure_kinds);\n             ich::hash_stable_itemlocalmap(hcx, hasher, liberated_fn_sigs);\n-            ich::hash_stable_nodemap(hcx, hasher, fru_field_types);\n+            ich::hash_stable_itemlocalmap(hcx, hasher, fru_field_types);\n             ich::hash_stable_nodemap(hcx, hasher, cast_kinds);\n \n             ich::hash_stable_hashset(hcx, hasher, used_trait_imports, |hcx, def_id| {"}, {"sha": "f09488ebcfa684739e0b2c1966982493addb4c25", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/801dd07a950b047150aa291e461ba53a7d29489e/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/801dd07a950b047150aa291e461ba53a7d29489e/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=801dd07a950b047150aa291e461ba53a7d29489e", "patch": "@@ -253,7 +253,7 @@ pub struct TypeckTables<'tcx> {\n     /// of the struct - this is needed because it is non-trivial to\n     /// normalize while preserving regions. This table is used only in\n     /// MIR construction and hence is not serialized to metadata.\n-    pub fru_field_types: NodeMap<Vec<Ty<'tcx>>>,\n+    pub fru_field_types: ItemLocalMap<Vec<Ty<'tcx>>>,\n \n     /// Maps a cast expression to its kind. This is keyed on the\n     /// *from* expression of the cast, not the cast itself.\n@@ -286,7 +286,7 @@ impl<'tcx> TypeckTables<'tcx> {\n             closure_tys: ItemLocalMap(),\n             closure_kinds: ItemLocalMap(),\n             liberated_fn_sigs: ItemLocalMap(),\n-            fru_field_types: NodeMap(),\n+            fru_field_types: ItemLocalMap(),\n             cast_kinds: NodeMap(),\n             used_trait_imports: DefIdSet(),\n             tainted_by_errors: false,"}, {"sha": "30f7378e83b1ee54cfc0c0b7a79793d63bed27fe", "filename": "src/librustc_mir/hair/cx/expr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/801dd07a950b047150aa291e461ba53a7d29489e/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/801dd07a950b047150aa291e461ba53a7d29489e/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs?ref=801dd07a950b047150aa291e461ba53a7d29489e", "patch": "@@ -387,9 +387,12 @@ fn make_mirror_unadjusted<'a, 'gcx, 'tcx>(cx: &mut Cx<'a, 'gcx, 'tcx>,\n                                 substs: substs,\n                                 fields: field_refs,\n                                 base: base.as_ref().map(|base| {\n+                                    cx.tables().validate_hir_id(expr.hir_id);\n                                     FruInfo {\n                                         base: base.to_ref(),\n-                                        field_types: cx.tables().fru_field_types[&expr.id].clone(),\n+                                        field_types: cx.tables()\n+                                                       .fru_field_types[&expr.hir_id.local_id]\n+                                                       .clone(),\n                                     }\n                                 }),\n                             }"}, {"sha": "60930d8184a3d84c55ea72ba520d29a85968d4c6", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/801dd07a950b047150aa291e461ba53a7d29489e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/801dd07a950b047150aa291e461ba53a7d29489e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=801dd07a950b047150aa291e461ba53a7d29489e", "patch": "@@ -3407,7 +3407,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     let fru_field_types = adt.struct_variant().fields.iter().map(|f| {\n                         self.normalize_associated_types_in(expr.span, &f.ty(self.tcx, substs))\n                     }).collect();\n-                    self.tables.borrow_mut().fru_field_types.insert(expr.id, fru_field_types);\n+\n+                    let mut tables = self.tables.borrow_mut();\n+                    tables.validate_hir_id(expr.hir_id);\n+                    tables.fru_field_types.insert(expr.hir_id.local_id, fru_field_types);\n                 }\n                 _ => {\n                     span_err!(self.tcx.sess, base_expr.span, E0436,"}, {"sha": "45ec788b1b8dc34834fffd628b0d6211cda45a44", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/801dd07a950b047150aa291e461ba53a7d29489e/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/801dd07a950b047150aa291e461ba53a7d29489e/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=801dd07a950b047150aa291e461ba53a7d29489e", "patch": "@@ -362,9 +362,16 @@ impl<'cx, 'gcx, 'tcx> WritebackCx<'cx, 'gcx, 'tcx> {\n     }\n \n     fn visit_fru_field_types(&mut self) {\n-        for (&node_id, ftys) in self.fcx.tables.borrow().fru_field_types.iter() {\n-            let ftys = self.resolve(ftys, &node_id);\n-            self.tables.fru_field_types.insert(node_id, ftys);\n+        let fcx_tables = self.fcx.tables.borrow();\n+        debug_assert_eq!(fcx_tables.local_id_root, self.tables.local_id_root);\n+\n+        for (&local_id, ftys) in fcx_tables.fru_field_types.iter() {\n+            let hir_id = hir::HirId {\n+                owner: fcx_tables.local_id_root.index,\n+                local_id,\n+            };\n+            let ftys = self.resolve(ftys, &hir_id);\n+            self.tables.fru_field_types.insert(local_id, ftys);\n         }\n     }\n "}]}