{"sha": "9d51d6bc30cbea2bec56c1a2ba351a91ced9dcb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNTFkNmJjMzBjYmVhMmJlYzU2YzFhMmJhMzUxYTkxY2VkOWRjYjA=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-05-10T11:58:41Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-05-10T11:58:41Z"}, "message": "Fix tidy issues", "tree": {"sha": "d8dcc39986e7e621499daa5c4fc335c2eae7e24d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8dcc39986e7e621499daa5c4fc335c2eae7e24d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d51d6bc30cbea2bec56c1a2ba351a91ced9dcb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d51d6bc30cbea2bec56c1a2ba351a91ced9dcb0", "html_url": "https://github.com/rust-lang/rust/commit/9d51d6bc30cbea2bec56c1a2ba351a91ced9dcb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d51d6bc30cbea2bec56c1a2ba351a91ced9dcb0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2f781c7ead3a9fe69020189decc6c3eebf6f25c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2f781c7ead3a9fe69020189decc6c3eebf6f25c", "html_url": "https://github.com/rust-lang/rust/commit/e2f781c7ead3a9fe69020189decc6c3eebf6f25c"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "9d774b963258ce9536de03aadd2c83002d5a2270", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9d51d6bc30cbea2bec56c1a2ba351a91ced9dcb0/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d51d6bc30cbea2bec56c1a2ba351a91ced9dcb0/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=9d51d6bc30cbea2bec56c1a2ba351a91ced9dcb0", "patch": "@@ -424,8 +424,10 @@ impl<'a> Resolver<'a> {\n     fn build_reduced_graph_for_block(&mut self, block: &Block) {\n         let parent = self.current_module;\n         if self.block_needs_anonymous_module(block) {\n-            let module =\n-                self.new_module(parent, ModuleKind::Block(block.id), parent.normal_ancestor_id, block.span);\n+            let module = self.new_module(parent,\n+                                         ModuleKind::Block(block.id),\n+                                         parent.normal_ancestor_id,\n+                                         block.span);\n             self.block_map.insert(block.id, module);\n             self.current_module = module; // Descend into the block.\n         }"}, {"sha": "57d04bee92bcc54aad312037e0a860d1125ca48f", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9d51d6bc30cbea2bec56c1a2ba351a91ced9dcb0/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d51d6bc30cbea2bec56c1a2ba351a91ced9dcb0/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=9d51d6bc30cbea2bec56c1a2ba351a91ced9dcb0", "patch": "@@ -873,7 +873,10 @@ pub struct ModuleData<'a> {\n pub type Module<'a> = &'a ModuleData<'a>;\n \n impl<'a> ModuleData<'a> {\n-    fn new(parent: Option<Module<'a>>, kind: ModuleKind, normal_ancestor_id: DefId, span: Span) -> Self {\n+    fn new(parent: Option<Module<'a>>,\n+           kind: ModuleKind,\n+           normal_ancestor_id: DefId,\n+           span: Span) -> Self {\n         ModuleData {\n             parent: parent,\n             kind: kind,\n@@ -1434,8 +1437,13 @@ impl<'a> Resolver<'a> {\n         self.crate_loader.postprocess(krate);\n     }\n \n-    fn new_module(&self, parent: Module<'a>, kind: ModuleKind, normal_ancestor_id: DefId, span: Span)\n-                  -> Module<'a> {\n+    fn new_module(\n+        &self,\n+        parent: Module<'a>,\n+        kind: ModuleKind,\n+        normal_ancestor_id: DefId,\n+        span: Span,\n+    ) -> Module<'a> {\n         self.arenas.alloc_module(ModuleData::new(Some(parent), kind, normal_ancestor_id, span))\n     }\n "}]}