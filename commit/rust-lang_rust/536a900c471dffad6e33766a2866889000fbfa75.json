{"sha": "536a900c471dffad6e33766a2866889000fbfa75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzNmE5MDBjNDcxZGZmYWQ2ZTMzNzY2YTI4NjY4ODkwMDBmYmZhNzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-17T15:20:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-17T15:20:11Z"}, "message": "Auto merge of #39578 - canndrew:nixos-bootstrap-fix, r=alexcrichton\n\nFix for bootstrapping on NixOS\n\nNixOS puts Linux's dynamic loader in wierd place. Detect when we're on NixOS and patch the downloaded bootstrap executables appropriately.", "tree": {"sha": "f2d73a288442538b6672c3181a7c9e581fd81dbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2d73a288442538b6672c3181a7c9e581fd81dbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/536a900c471dffad6e33766a2866889000fbfa75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/536a900c471dffad6e33766a2866889000fbfa75", "html_url": "https://github.com/rust-lang/rust/commit/536a900c471dffad6e33766a2866889000fbfa75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/536a900c471dffad6e33766a2866889000fbfa75/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a", "html_url": "https://github.com/rust-lang/rust/commit/dc0bb3f2839c13ab42feacd423f728fbfd2f2f7a"}, {"sha": "5e324bdc91415ae222becf362f68ffdebf3ec804", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e324bdc91415ae222becf362f68ffdebf3ec804", "html_url": "https://github.com/rust-lang/rust/commit/5e324bdc91415ae222becf362f68ffdebf3ec804"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "7ca7ef4bd720c2f8ab8a119af8bbe3c6d52b2390", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/536a900c471dffad6e33766a2866889000fbfa75/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/536a900c471dffad6e33766a2866889000fbfa75/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=536a900c471dffad6e33766a2866889000fbfa75", "patch": "@@ -173,6 +173,8 @@ def download_stage0(self):\n             if not os.path.exists(tarball):\n                 get(\"{}/{}\".format(url, filename), tarball, verbose=self.verbose)\n             unpack(tarball, self.bin_root(), match=\"rustc\", verbose=self.verbose)\n+            self.fix_executable(self.bin_root() + \"/bin/rustc\")\n+            self.fix_executable(self.bin_root() + \"/bin/rustdoc\")\n             with open(self.rustc_stamp(), 'w') as f:\n                 f.write(self.stage0_rustc_date())\n \n@@ -185,9 +187,63 @@ def download_stage0(self):\n             if not os.path.exists(tarball):\n                 get(\"{}/{}\".format(url, filename), tarball, verbose=self.verbose)\n             unpack(tarball, self.bin_root(), match=\"cargo\", verbose=self.verbose)\n+            self.fix_executable(self.bin_root() + \"/bin/cargo\")\n             with open(self.cargo_stamp(), 'w') as f:\n                 f.write(self.stage0_cargo_rev())\n \n+    def fix_executable(self, fname):\n+        # If we're on NixOS we need to change the path to the dynamic loader\n+\n+        default_encoding = sys.getdefaultencoding()\n+        try:\n+            ostype = subprocess.check_output(['uname', '-s']).strip().decode(default_encoding)\n+        except (subprocess.CalledProcessError, WindowsError):\n+            return\n+\n+        if ostype != \"Linux\":\n+            return\n+\n+        if not os.path.exists(\"/etc/NIXOS\"):\n+            return\n+        if os.path.exists(\"/lib\"):\n+            return\n+\n+        # At this point we're pretty sure the user is running NixOS\n+        print(\"info: you seem to be running NixOS. Attempting to patch \" + fname)\n+\n+        try:\n+            interpreter = subprocess.check_output([\"patchelf\", \"--print-interpreter\", fname])\n+            interpreter = interpreter.strip().decode(default_encoding)\n+        except subprocess.CalledProcessError as e:\n+            print(\"warning: failed to call patchelf: %s\" % e)\n+            return\n+\n+        loader = interpreter.split(\"/\")[-1]\n+\n+        try:\n+            ldd_output = subprocess.check_output(['ldd', '/run/current-system/sw/bin/sh'])\n+            ldd_output = ldd_output.strip().decode(default_encoding)\n+        except subprocess.CalledProcessError as e:\n+            print(\"warning: unable to call ldd: %s\" % e)\n+            return\n+\n+        for line in ldd_output.splitlines():\n+            libname = line.split()[0]\n+            if libname.endswith(loader):\n+                loader_path = libname[:len(libname) - len(loader)]\n+                break\n+        else:\n+            print(\"warning: unable to find the path to the dynamic linker\")\n+            return\n+\n+        correct_interpreter = loader_path + loader\n+\n+        try:\n+            subprocess.check_output([\"patchelf\", \"--set-interpreter\", correct_interpreter, fname])\n+        except subprocess.CalledProcessError as e:\n+            print(\"warning: failed to call patchelf: %s\" % e)\n+            return\n+\n     def stage0_cargo_rev(self):\n         return self._cargo_rev\n "}]}