{"sha": "2c004a228751aed8a271e16d74c96d8037b6e655", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMDA0YTIyODc1MWFlZDhhMjcxZTE2ZDc0Yzk2ZDgwMzdiNmU2NTU=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-08-06T13:20:59Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-08-06T13:20:59Z"}, "message": "encode `generics_of` of fields and ty params", "tree": {"sha": "e874bd6956062d8d553805639885b4ef8b496be0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e874bd6956062d8d553805639885b4ef8b496be0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c004a228751aed8a271e16d74c96d8037b6e655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c004a228751aed8a271e16d74c96d8037b6e655", "html_url": "https://github.com/rust-lang/rust/commit/2c004a228751aed8a271e16d74c96d8037b6e655", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c004a228751aed8a271e16d74c96d8037b6e655/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f94abcda6884893d4723304102089198caa0839", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f94abcda6884893d4723304102089198caa0839", "html_url": "https://github.com/rust-lang/rust/commit/1f94abcda6884893d4723304102089198caa0839"}], "stats": {"total": 84, "additions": 82, "deletions": 2}, "files": [{"sha": "b7921c403bb7bd44a9f27ae6f3c84f32dd4d74d9", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2c004a228751aed8a271e16d74c96d8037b6e655/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c004a228751aed8a271e16d74c96d8037b6e655/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=2c004a228751aed8a271e16d74c96d8037b6e655", "patch": "@@ -918,12 +918,12 @@ fn should_encode_generics(def_kind: DefKind) -> bool {\n         | DefKind::AnonConst\n         | DefKind::OpaqueTy\n         | DefKind::Impl\n+        | DefKind::Field\n+        | DefKind::TyParam\n         | DefKind::Closure\n         | DefKind::Generator => true,\n         DefKind::Mod\n-        | DefKind::Field\n         | DefKind::ForeignMod\n-        | DefKind::TyParam\n         | DefKind::ConstParam\n         | DefKind::Macro(..)\n         | DefKind::Use"}, {"sha": "576276d902d60468f1d9c9a603d01f4ee2f2c117", "filename": "src/test/ui/const-generics/auxiliary/generics_of_parent.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2c004a228751aed8a271e16d74c96d8037b6e655/src%2Ftest%2Fui%2Fconst-generics%2Fauxiliary%2Fgenerics_of_parent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c004a228751aed8a271e16d74c96d8037b6e655/src%2Ftest%2Fui%2Fconst-generics%2Fauxiliary%2Fgenerics_of_parent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fauxiliary%2Fgenerics_of_parent.rs?ref=2c004a228751aed8a271e16d74c96d8037b6e655", "patch": "@@ -0,0 +1,23 @@\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+\n+// library portion of regression test for #87674\n+pub struct Foo<const N: usize>([(); N + 1])\n+where\n+    [(); N + 1]: ;\n+\n+// library portion of regression test for #87603\n+pub struct S<T: Copy + Default, const N: usize>\n+where\n+    [T; N * 2]: Sized,\n+{\n+    pub s: [T; N * 2],\n+}\n+impl<T: Default + Copy, const N: usize> S<T, N>\n+where\n+    [T; N * 2]: Sized,\n+{\n+    pub fn test() -> Self {\n+        S { s: [T::default(); N * 2] }\n+    }\n+}"}, {"sha": "83e0c5566beca2d92763bbf52980a8d5353cc186", "filename": "src/test/ui/const-generics/auxiliary/generics_of_parent_impl_trait.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2c004a228751aed8a271e16d74c96d8037b6e655/src%2Ftest%2Fui%2Fconst-generics%2Fauxiliary%2Fgenerics_of_parent_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c004a228751aed8a271e16d74c96d8037b6e655/src%2Ftest%2Fui%2Fconst-generics%2Fauxiliary%2Fgenerics_of_parent_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fauxiliary%2Fgenerics_of_parent_impl_trait.rs?ref=2c004a228751aed8a271e16d74c96d8037b6e655", "patch": "@@ -0,0 +1,7 @@\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+\n+// library portion of testing that `impl Trait<{ expr }>` doesnt ice because of a `DefKind::TyParam` parent\n+pub fn foo<const N: usize>(foo: impl Into<[(); N + 1]>) {\n+    foo.into();\n+}"}, {"sha": "31be8e7d111c73f55f6bbd96257a28c268f78b4e", "filename": "src/test/ui/const-generics/parent_generics_of_encoding.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2c004a228751aed8a271e16d74c96d8037b6e655/src%2Ftest%2Fui%2Fconst-generics%2Fparent_generics_of_encoding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c004a228751aed8a271e16d74c96d8037b6e655/src%2Ftest%2Fui%2Fconst-generics%2Fparent_generics_of_encoding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fparent_generics_of_encoding.rs?ref=2c004a228751aed8a271e16d74c96d8037b6e655", "patch": "@@ -0,0 +1,25 @@\n+// aux-build:generics_of_parent.rs\n+// check-pass\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+\n+extern crate generics_of_parent;\n+\n+use generics_of_parent::{Foo, S};\n+\n+fn main() {\n+    // regression test for #87603\n+    const N: usize = 2;\n+    let x: S<u8, N> = S::test();\n+}\n+\n+// regression test for #87674\n+fn new<U>(a: U) -> U {\n+    a\n+}\n+fn foo<const N: usize>(bar: &mut Foo<N>)\n+where\n+    [(); N + 1]: ,\n+{\n+    *bar = new(loop {});\n+}"}, {"sha": "988777b1c90c1d31baf6c11882bcc4d3b86acf1b", "filename": "src/test/ui/const-generics/parent_generics_of_encoding_impl_trait.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2c004a228751aed8a271e16d74c96d8037b6e655/src%2Ftest%2Fui%2Fconst-generics%2Fparent_generics_of_encoding_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c004a228751aed8a271e16d74c96d8037b6e655/src%2Ftest%2Fui%2Fconst-generics%2Fparent_generics_of_encoding_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fparent_generics_of_encoding_impl_trait.rs?ref=2c004a228751aed8a271e16d74c96d8037b6e655", "patch": "@@ -0,0 +1,11 @@\n+// aux-build:generics_of_parent_impl_trait.rs\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+\n+extern crate generics_of_parent_impl_trait;\n+\n+fn main() {\n+    // check for `impl Trait<{ const }>` which has a parent of a `DefKind::TyParam`\n+    generics_of_parent_impl_trait::foo([()]);\n+    //~^ error: type annotations needed:\n+}"}, {"sha": "f23c262d34d1c8c7d2674a841325a6be68c12aaf", "filename": "src/test/ui/const-generics/parent_generics_of_encoding_impl_trait.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2c004a228751aed8a271e16d74c96d8037b6e655/src%2Ftest%2Fui%2Fconst-generics%2Fparent_generics_of_encoding_impl_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c004a228751aed8a271e16d74c96d8037b6e655/src%2Ftest%2Fui%2Fconst-generics%2Fparent_generics_of_encoding_impl_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fparent_generics_of_encoding_impl_trait.stderr?ref=2c004a228751aed8a271e16d74c96d8037b6e655", "patch": "@@ -0,0 +1,14 @@\n+error[E0284]: type annotations needed: cannot satisfy `the constant `foo::{opaque#0}::{constant#0}` can be evaluated`\n+  --> $DIR/parent_generics_of_encoding_impl_trait.rs:9:5\n+   |\n+LL |     generics_of_parent_impl_trait::foo([()]);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot satisfy `the constant `foo::{opaque#0}::{constant#0}` can be evaluated`\n+   |\n+  ::: $DIR/auxiliary/generics_of_parent_impl_trait.rs:5:48\n+   |\n+LL | pub fn foo<const N: usize>(foo: impl Into<[(); N + 1]>) {\n+   |                                                ----- required by this bound in `foo`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0284`."}]}