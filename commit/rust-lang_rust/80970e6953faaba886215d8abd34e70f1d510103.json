{"sha": "80970e6953faaba886215d8abd34e70f1d510103", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwOTcwZTY5NTNmYWFiYTg4NjIxNWQ4YWJkMzRlNzBmMWQ1MTAxMDM=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2018-02-19T22:05:21Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2018-02-19T22:17:31Z"}, "message": "rustbuild: Restore Config.libdir_relative\n\nThis re-introduces a `Config.libdir_relative` field, now derived from\n`libdir` and made relative to `prefix` if necessary.\n\nThis fixes a regression from #46592 when `--libdir` is given an absolute\npath.  `Builder::sysroot_libdir` should always use a relative path so\nits callers don't clobber system locations, and `librustc` also asserts\nthat `CFG_LIBDIR_RELATIVE` is really relative.", "tree": {"sha": "de0deb152aa4d56c21ad3a95e4c53aa9424bb533", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de0deb152aa4d56c21ad3a95e4c53aa9424bb533"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80970e6953faaba886215d8abd34e70f1d510103", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80970e6953faaba886215d8abd34e70f1d510103", "html_url": "https://github.com/rust-lang/rust/commit/80970e6953faaba886215d8abd34e70f1d510103", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80970e6953faaba886215d8abd34e70f1d510103/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27a046e9338fb0455c33b13e8fe28da78212dedc", "url": "https://api.github.com/repos/rust-lang/rust/commits/27a046e9338fb0455c33b13e8fe28da78212dedc", "html_url": "https://github.com/rust-lang/rust/commit/27a046e9338fb0455c33b13e8fe28da78212dedc"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "05aa6283ee579630296e97110f8173dcb71b832d", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/80970e6953faaba886215d8abd34e70f1d510103/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80970e6953faaba886215d8abd34e70f1d510103/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=80970e6953faaba886215d8abd34e70f1d510103", "patch": "@@ -444,8 +444,8 @@ impl<'a> Builder<'a> {\n \n             fn run(self, builder: &Builder) -> Interned<PathBuf> {\n                 let compiler = self.compiler;\n-                let lib = if compiler.stage >= 1 && builder.build.config.libdir.is_some() {\n-                    builder.build.config.libdir.clone().unwrap()\n+                let lib = if compiler.stage >= 1 && builder.build.config.libdir_relative.is_some() {\n+                    builder.build.config.libdir_relative.clone().unwrap()\n                 } else {\n                     PathBuf::from(\"lib\")\n                 };"}, {"sha": "e6389f27785b509c2cc0892bb0c1d5a492c2fe9c", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80970e6953faaba886215d8abd34e70f1d510103/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80970e6953faaba886215d8abd34e70f1d510103/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=80970e6953faaba886215d8abd34e70f1d510103", "patch": "@@ -517,7 +517,7 @@ fn rustc_cargo_env(build: &Build, cargo: &mut Command) {\n          .env(\"CFG_PREFIX\", build.config.prefix.clone().unwrap_or_default());\n \n     let libdir_relative =\n-        build.config.libdir.clone().unwrap_or(PathBuf::from(\"lib\"));\n+        build.config.libdir_relative.clone().unwrap_or(PathBuf::from(\"lib\"));\n     cargo.env(\"CFG_LIBDIR_RELATIVE\", libdir_relative);\n \n     // If we're not building a compiler with debugging information then remove"}, {"sha": "6d98153e233ba55051693aeb846bbdbb138e84f5", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/80970e6953faaba886215d8abd34e70f1d510103/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80970e6953faaba886215d8abd34e70f1d510103/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=80970e6953faaba886215d8abd34e70f1d510103", "patch": "@@ -126,6 +126,7 @@ pub struct Config {\n     pub docdir: Option<PathBuf>,\n     pub bindir: Option<PathBuf>,\n     pub libdir: Option<PathBuf>,\n+    pub libdir_relative: Option<PathBuf>,\n     pub mandir: Option<PathBuf>,\n     pub codegen_tests: bool,\n     pub nodejs: Option<PathBuf>,\n@@ -417,6 +418,22 @@ impl Config {\n             config.mandir = install.mandir.clone().map(PathBuf::from);\n         }\n \n+        // Try to infer `libdir_relative` from `libdir`.\n+        if let Some(ref libdir) = config.libdir {\n+            let mut libdir = libdir.as_path();\n+            if !libdir.is_relative() {\n+                // Try to make it relative to the prefix.\n+                if let Some(ref prefix) = config.prefix {\n+                    if let Ok(suffix) = libdir.strip_prefix(prefix) {\n+                        libdir = suffix;\n+                    }\n+                }\n+            }\n+            if libdir.is_relative() {\n+                config.libdir_relative = Some(libdir.to_path_buf());\n+            }\n+        }\n+\n         // Store off these values as options because if they're not provided\n         // we'll infer default values for them later\n         let mut thinlto = None;"}]}