{"sha": "8a6590a75f4a9ac95512a47163cb5396158e9018", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNjU5MGE3NWY0YTlhYzk1NTEyYTQ3MTYzY2I1Mzk2MTU4ZTkwMTg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-18T19:20:40Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-18T19:20:50Z"}, "message": "Remove use of 'use' from type-params-in-for-each.rs, put out darwin fire.", "tree": {"sha": "e9dfd8d6aecc22aee456f31df6990f5c4d6a9210", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9dfd8d6aecc22aee456f31df6990f5c4d6a9210"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a6590a75f4a9ac95512a47163cb5396158e9018", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a6590a75f4a9ac95512a47163cb5396158e9018", "html_url": "https://github.com/rust-lang/rust/commit/8a6590a75f4a9ac95512a47163cb5396158e9018", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a6590a75f4a9ac95512a47163cb5396158e9018/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ab42038bb13d3c8b01faa9c88e660e4e590fb00", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ab42038bb13d3c8b01faa9c88e660e4e590fb00", "html_url": "https://github.com/rust-lang/rust/commit/9ab42038bb13d3c8b01faa9c88e660e4e590fb00"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "49fe099b6257b342821303b4c73ea6248c1a8db7", "filename": "src/test/run-pass/type-params-in-for-each.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8a6590a75f4a9ac95512a47163cb5396158e9018/src%2Ftest%2Frun-pass%2Ftype-params-in-for-each.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a6590a75f4a9ac95512a47163cb5396158e9018/src%2Ftest%2Frun-pass%2Ftype-params-in-for-each.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-params-in-for-each.rs?ref=8a6590a75f4a9ac95512a47163cb5396158e9018", "patch": "@@ -1,8 +1,14 @@\n-use std;\n-import std._uint;\n+\n+iter range(uint lo, uint hi) -> uint {\n+    auto lo_ = lo;\n+    while (lo_ < hi) {\n+        put lo_;\n+        lo_ += 1u;\n+    }\n+}\n \n fn create_index[T](vec[tup(T, uint)] index, fn(&T) -> uint hash_fn) {\n-    for each (uint i in _uint.range(0u, 256u)) {\n+    for each (uint i in range(0u, 256u)) {\n         let vec[T] bucket = vec();\n     }\n }"}]}