{"sha": "ab7c706306c65527b5b8b9620e34a65d852cd279", "node_id": "C_kwDOAAsO6NoAKGFiN2M3MDYzMDZjNjU1MjdiNWI4Yjk2MjBlMzRhNjVkODUyY2QyNzk", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-08-12T18:40:48Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-08-12T18:40:48Z"}, "message": "Move build_isa call into make_module", "tree": {"sha": "cacfd2b7de4535e807a4cc3371f2ef94542607c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cacfd2b7de4535e807a4cc3371f2ef94542607c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab7c706306c65527b5b8b9620e34a65d852cd279", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab7c706306c65527b5b8b9620e34a65d852cd279", "html_url": "https://github.com/rust-lang/rust/commit/ab7c706306c65527b5b8b9620e34a65d852cd279", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab7c706306c65527b5b8b9620e34a65d852cd279/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3512b1d8e04ab8ab78ea5111a177605d13dfff1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3512b1d8e04ab8ab78ea5111a177605d13dfff1", "html_url": "https://github.com/rust-lang/rust/commit/d3512b1d8e04ab8ab78ea5111a177605d13dfff1"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "415631ba3e6e9c2a9d9535f23d7e068faeb42f3b", "filename": "src/driver/aot.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ab7c706306c65527b5b8b9620e34a65d852cd279/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab7c706306c65527b5b8b9620e34a65d852cd279/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=ab7c706306c65527b5b8b9620e34a65d852cd279", "patch": "@@ -14,7 +14,6 @@ use rustc_session::cgu_reuse_tracker::CguReuse;\n use rustc_session::config::{DebugInfo, OutputType};\n use rustc_session::Session;\n \n-use cranelift_codegen::isa::TargetIsa;\n use cranelift_object::{ObjectBuilder, ObjectModule};\n \n use crate::global_asm::GlobalAsmConfig;\n@@ -70,7 +69,9 @@ impl OngoingCodegen {\n     }\n }\n \n-fn make_module(sess: &Session, isa: Box<dyn TargetIsa>, name: String) -> ObjectModule {\n+fn make_module(sess: &Session, backend_config: &BackendConfig, name: String) -> ObjectModule {\n+    let isa = crate::build_isa(sess, backend_config);\n+\n     let mut builder =\n         ObjectBuilder::new(isa, name + \".o\", cranelift_module::default_libcall_names()).unwrap();\n     // Unlike cg_llvm, cg_clif defaults to disabling -Zfunction-sections. For cg_llvm binary size\n@@ -211,8 +212,7 @@ fn module_codegen(\n     let cgu = tcx.codegen_unit(cgu_name);\n     let mono_items = cgu.items_in_deterministic_order(tcx);\n \n-    let isa = crate::build_isa(tcx.sess, &backend_config);\n-    let mut module = make_module(tcx.sess, isa, cgu_name.as_str().to_string());\n+    let mut module = make_module(tcx.sess, &backend_config, cgu_name.as_str().to_string());\n \n     let mut cx = crate::CodegenCx::new(\n         tcx,\n@@ -330,9 +330,7 @@ pub(crate) fn run_aot(\n \n     tcx.sess.abort_if_errors();\n \n-    let isa = crate::build_isa(tcx.sess, &backend_config);\n-    let mut allocator_module = make_module(tcx.sess, isa, \"allocator_shim\".to_string());\n-    assert_eq!(pointer_ty(tcx), allocator_module.target_config().pointer_type());\n+    let mut allocator_module = make_module(tcx.sess, &backend_config, \"allocator_shim\".to_string());\n     let mut allocator_unwind_context = UnwindContext::new(allocator_module.isa(), true);\n     let created_alloc_shim =\n         crate::allocator::codegen(tcx, &mut allocator_module, &mut allocator_unwind_context);"}]}