{"sha": "bf7ce6a1a605d897832783a3d0c830d2466d90be", "node_id": "C_kwDOAAsO6NoAKGJmN2NlNmExYTYwNWQ4OTc4MzI3ODNhM2QwYzgzMGQyNDY2ZDkwYmU", "commit": {"author": {"name": "Adrian Tombu", "email": "adrian@otso.fr", "date": "2022-08-25T16:05:23Z"}, "committer": {"name": "Adrian Tombu", "email": "adrian@otso.fr", "date": "2022-08-25T16:06:12Z"}, "message": "Replace spaghetti with a simple errors enum", "tree": {"sha": "0cfe77db4e3da1baf1ed226dae282880de6837a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cfe77db4e3da1baf1ed226dae282880de6837a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf7ce6a1a605d897832783a3d0c830d2466d90be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFDBAABCAAtFiEEPq029qEtTUDaayZUnNjpedOpQ/4FAmMHnfQPHGFkcmlhbkBv\ndHNvLmZyAAoJEJzY6XnTqUP+6kwIAMkteaQfKEMB4CAW6VZlh/so10WI+5QXeusx\nbzgntGVWApN2OLsLOpEQh6pwSE1vU+ObNZgmfW4Qi3Fh5xq5+C0cdbV84NA2DSMo\nN57uWqR5XW7hlXzI5sx+Y+kDwqoRyMN3KfP5laWWOl0YAJ9tXHu4fMXN1SLmz7K8\nu/s1txBhnu/GZu46qEGNKi8gC226rHizf6+esreo5SJW8XSa1oWBnIDCzCbb/4fL\n7ifkvve3eLktwIfue4LWeMdyWXI34DIE9174buuIoJMu8/lDADOUGE/1/IB/r4NM\nD/P2FfbDb+mNpk1GgX9Ba1xBjQH8Dt5ZRfLYYSOcXDimvnlGcJQ=\n=HTkI\n-----END PGP SIGNATURE-----", "payload": "tree 0cfe77db4e3da1baf1ed226dae282880de6837a6\nparent 3f883b850d81be5ba6a2a4039de33fd7dd7c188d\nauthor Adrian Tombu <adrian@otso.fr> 1661443523 +0200\ncommitter Adrian Tombu <adrian@otso.fr> 1661443572 +0200\n\nReplace spaghetti with a simple errors enum\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf7ce6a1a605d897832783a3d0c830d2466d90be", "html_url": "https://github.com/rust-lang/rust/commit/bf7ce6a1a605d897832783a3d0c830d2466d90be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf7ce6a1a605d897832783a3d0c830d2466d90be/comments", "author": {"login": "adriantombu", "id": 383297, "node_id": "MDQ6VXNlcjM4MzI5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/383297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriantombu", "html_url": "https://github.com/adriantombu", "followers_url": "https://api.github.com/users/adriantombu/followers", "following_url": "https://api.github.com/users/adriantombu/following{/other_user}", "gists_url": "https://api.github.com/users/adriantombu/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriantombu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriantombu/subscriptions", "organizations_url": "https://api.github.com/users/adriantombu/orgs", "repos_url": "https://api.github.com/users/adriantombu/repos", "events_url": "https://api.github.com/users/adriantombu/events{/privacy}", "received_events_url": "https://api.github.com/users/adriantombu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adriantombu", "id": 383297, "node_id": "MDQ6VXNlcjM4MzI5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/383297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriantombu", "html_url": "https://github.com/adriantombu", "followers_url": "https://api.github.com/users/adriantombu/followers", "following_url": "https://api.github.com/users/adriantombu/following{/other_user}", "gists_url": "https://api.github.com/users/adriantombu/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriantombu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriantombu/subscriptions", "organizations_url": "https://api.github.com/users/adriantombu/orgs", "repos_url": "https://api.github.com/users/adriantombu/repos", "events_url": "https://api.github.com/users/adriantombu/events{/privacy}", "received_events_url": "https://api.github.com/users/adriantombu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f883b850d81be5ba6a2a4039de33fd7dd7c188d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f883b850d81be5ba6a2a4039de33fd7dd7c188d", "html_url": "https://github.com/rust-lang/rust/commit/3f883b850d81be5ba6a2a4039de33fd7dd7c188d"}], "stats": {"total": 142, "additions": 65, "deletions": 77}, "files": [{"sha": "d6fa1a15373b5212fb12bd468b18055484a73c82", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/bf7ce6a1a605d897832783a3d0c830d2466d90be/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf7ce6a1a605d897832783a3d0c830d2466d90be/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=bf7ce6a1a605d897832783a3d0c830d2466d90be", "patch": "@@ -21,7 +21,6 @@ extern crate tracing;\n #[macro_use]\n extern crate rustc_middle;\n \n-use crate::session_diagnostic::{DeserializeRlinkError, DeserializeRlinkErrorSub};\n use rustc_ast as ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n@@ -50,7 +49,6 @@ pub mod glue;\n pub mod meth;\n pub mod mir;\n pub mod mono_item;\n-pub mod session_diagnostic;\n pub mod target_features;\n pub mod traits;\n \n@@ -170,6 +168,13 @@ pub struct CodegenResults {\n     pub crate_info: CrateInfo,\n }\n \n+pub enum CodegenErrors {\n+    WrongFileType,\n+    EmptyVersionNumber,\n+    EncodingVersionMismatch { version_array: String, rlink_version: String },\n+    RustcVersionMismatch { rustc_version: String, current_version: String },\n+}\n+\n pub fn provide(providers: &mut Providers) {\n     crate::back::symbol_export::provide(providers);\n     crate::base::provide(providers);\n@@ -214,39 +219,33 @@ impl CodegenResults {\n         encoder.finish()\n     }\n \n-    pub fn deserialize_rlink(data: Vec<u8>) -> Result<Self, DeserializeRlinkError> {\n+    pub fn deserialize_rlink(data: Vec<u8>) -> Result<Self, CodegenErrors> {\n         // The Decodable machinery is not used here because it panics if the input data is invalid\n         // and because its internal representation may change.\n         if !data.starts_with(RLINK_MAGIC) {\n-            return Err(DeserializeRlinkError { sub: DeserializeRlinkErrorSub::WrongFileType });\n+            return Err(CodegenErrors::WrongFileType);\n         }\n         let data = &data[RLINK_MAGIC.len()..];\n         if data.len() < 4 {\n-            return Err(DeserializeRlinkError {\n-                sub: DeserializeRlinkErrorSub::EmptyVersionNumber,\n-            });\n+            return Err(CodegenErrors::EmptyVersionNumber);\n         }\n \n         let mut version_array: [u8; 4] = Default::default();\n         version_array.copy_from_slice(&data[..4]);\n         if u32::from_be_bytes(version_array) != RLINK_VERSION {\n-            return Err(DeserializeRlinkError {\n-                sub: DeserializeRlinkErrorSub::EncodingVersionMismatch {\n-                    version_array: String::from_utf8_lossy(&version_array).to_string(),\n-                    rlink_version: RLINK_VERSION.to_string(),\n-                },\n+            return Err(CodegenErrors::EncodingVersionMismatch {\n+                version_array: String::from_utf8_lossy(&version_array).to_string(),\n+                rlink_version: RLINK_VERSION.to_string(),\n             });\n         }\n \n         let mut decoder = MemDecoder::new(&data[4..], 0);\n         let rustc_version = decoder.read_str();\n         let current_version = RUSTC_VERSION.unwrap();\n         if rustc_version != current_version {\n-            return Err(DeserializeRlinkError {\n-                sub: DeserializeRlinkErrorSub::RustcVersionMismatch {\n-                    rustc_version: rustc_version.to_string(),\n-                    current_version: current_version.to_string(),\n-                },\n+            return Err(CodegenErrors::RustcVersionMismatch {\n+                rustc_version: rustc_version.to_string(),\n+                current_version: current_version.to_string(),\n             });\n         }\n "}, {"sha": "ac7065ae23cd4ae92046aa59e8d76d9deb564b93", "filename": "compiler/rustc_codegen_ssa/src/session_diagnostic.rs", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/3f883b850d81be5ba6a2a4039de33fd7dd7c188d/compiler%2Frustc_codegen_ssa%2Fsrc%2Fsession_diagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f883b850d81be5ba6a2a4039de33fd7dd7c188d/compiler%2Frustc_codegen_ssa%2Fsrc%2Fsession_diagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fsession_diagnostic.rs?ref=3f883b850d81be5ba6a2a4039de33fd7dd7c188d", "patch": "@@ -1,42 +0,0 @@\n-use rustc_errors::{fluent, DiagnosticArgValue, IntoDiagnosticArg};\n-use rustc_macros::{SessionDiagnostic, SessionSubdiagnostic};\n-use std::borrow::Cow;\n-\n-#[derive(SessionDiagnostic)]\n-#[diag(codegen_ssa::error)]\n-pub struct DeserializeRlinkError {\n-    #[subdiagnostic]\n-    pub sub: DeserializeRlinkErrorSub,\n-}\n-\n-#[derive(SessionSubdiagnostic)]\n-pub enum DeserializeRlinkErrorSub {\n-    #[note(codegen_ssa::wrong_file_type)]\n-    WrongFileType,\n-\n-    #[note(codegen_ssa::empty_version_number)]\n-    EmptyVersionNumber,\n-\n-    #[note(codegen_ssa::encoding_version_mismatch)]\n-    EncodingVersionMismatch { version_array: String, rlink_version: String },\n-\n-    #[note(codegen_ssa::rustc_version_mismatch)]\n-    RustcVersionMismatch { rustc_version: String, current_version: String },\n-}\n-\n-impl IntoDiagnosticArg for DeserializeRlinkErrorSub {\n-    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        DiagnosticArgValue::Str(Cow::Borrowed(match self {\n-            DeserializeRlinkErrorSub::WrongFileType => fluent::codegen_ssa::wrong_file_type,\n-            DeserializeRlinkErrorSub::EmptyVersionNumber => {\n-                fluent::codegen_ssa::empty_version_number\n-            }\n-            DeserializeRlinkErrorSub::EncodingVersionMismatch { version_array, rlink_version } => {\n-                fluent::codegen_ssa::encoding_version_mismatch\n-            }\n-            DeserializeRlinkErrorSub::RustcVersionMismatch { rustc_version, current_version } => {\n-                fluent::codegen_ssa::rustc_version_mismatch\n-            }\n-        }))\n-    }\n-}"}, {"sha": "a193d5db6916a08af8eaf61d186d86210a13c998", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/bf7ce6a1a605d897832783a3d0c830d2466d90be/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf7ce6a1a605d897832783a3d0c830d2466d90be/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=bf7ce6a1a605d897832783a3d0c830d2466d90be", "patch": "@@ -18,7 +18,7 @@ extern crate tracing;\n pub extern crate rustc_plugin_impl as plugin;\n \n use rustc_ast as ast;\n-use rustc_codegen_ssa::{traits::CodegenBackend, CodegenResults};\n+use rustc_codegen_ssa::{traits::CodegenBackend, CodegenErrors, CodegenResults};\n use rustc_data_structures::profiling::{get_resident_set_size, print_time_passes_entry};\n use rustc_data_structures::sync::SeqCst;\n use rustc_errors::registry::{InvalidErrorCode, Registry};\n@@ -60,7 +60,10 @@ pub mod args;\n pub mod pretty;\n mod session_diagnostics;\n \n-use crate::session_diagnostics::{RlinkNotAFile, RlinkUnableToDeserialize, RlinkUnableToRead};\n+use crate::session_diagnostics::{\n+    RLinkEmptyVersionNumber, RLinkEncodingVersionMismatch, RLinkRustcVersionMismatch,\n+    RLinkWrongFileType, RlinkNotAFile, RlinkUnableToRead,\n+};\n \n /// Exit status code used for successful compilation and help output.\n pub const EXIT_SUCCESS: i32 = 0;\n@@ -591,7 +594,24 @@ pub fn try_process_rlink(sess: &Session, compiler: &interface::Compiler) -> Comp\n             let codegen_results = match CodegenResults::deserialize_rlink(rlink_data) {\n                 Ok(codegen) => codegen,\n                 Err(err) => {\n-                    sess.emit_fatal(RlinkUnableToDeserialize { err });\n+                    match err {\n+                        CodegenErrors::WrongFileType => sess.emit_fatal(RLinkWrongFileType),\n+                        CodegenErrors::EmptyVersionNumber => {\n+                            sess.emit_fatal(RLinkEmptyVersionNumber)\n+                        }\n+                        CodegenErrors::EncodingVersionMismatch { version_array, rlink_version } => {\n+                            sess.emit_fatal(RLinkEncodingVersionMismatch {\n+                                version_array,\n+                                rlink_version,\n+                            })\n+                        }\n+                        CodegenErrors::RustcVersionMismatch { rustc_version, current_version } => {\n+                            sess.emit_fatal(RLinkRustcVersionMismatch {\n+                                rustc_version,\n+                                current_version,\n+                            })\n+                        }\n+                    };\n                 }\n             };\n             let result = compiler.codegen_backend().link(sess, codegen_results, &outputs);"}, {"sha": "90197ad935e76610c83d143959adfe2c7c64352b", "filename": "compiler/rustc_driver/src/session_diagnostics.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/bf7ce6a1a605d897832783a3d0c830d2466d90be/compiler%2Frustc_driver%2Fsrc%2Fsession_diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf7ce6a1a605d897832783a3d0c830d2466d90be/compiler%2Frustc_driver%2Fsrc%2Fsession_diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Fsession_diagnostics.rs?ref=bf7ce6a1a605d897832783a3d0c830d2466d90be", "patch": "@@ -1,4 +1,3 @@\n-use rustc_codegen_ssa::session_diagnostic::DeserializeRlinkError;\n use rustc_macros::SessionDiagnostic;\n \n #[derive(SessionDiagnostic)]\n@@ -8,9 +7,25 @@ pub(crate) struct RlinkUnableToRead {\n }\n \n #[derive(SessionDiagnostic)]\n-#[diag(driver::rlink_unable_to_deserialize)]\n-pub(crate) struct RlinkUnableToDeserialize {\n-    pub err: DeserializeRlinkError,\n+#[diag(driver::rlink_wrong_file_type)]\n+pub(crate) struct RLinkWrongFileType;\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(driver::rlink_empty_version_number)]\n+pub(crate) struct RLinkEmptyVersionNumber;\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(driver::rlink_encoding_version_mismatch)]\n+pub(crate) struct RLinkEncodingVersionMismatch {\n+    pub version_array: String,\n+    pub rlink_version: String,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(driver::rlink_rustc_version_mismatch)]\n+pub(crate) struct RLinkRustcVersionMismatch {\n+    pub rustc_version: String,\n+    pub current_version: String,\n }\n \n #[derive(SessionDiagnostic)]"}, {"sha": "f93ac354773a31b147e01f3c1f54ee6cc60f7138", "filename": "compiler/rustc_error_messages/locales/en-US/codegen_ssa.ftl", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3f883b850d81be5ba6a2a4039de33fd7dd7c188d/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_ssa.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/3f883b850d81be5ba6a2a4039de33fd7dd7c188d/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_ssa.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fcodegen_ssa.ftl?ref=3f883b850d81be5ba6a2a4039de33fd7dd7c188d", "patch": "@@ -1,9 +0,0 @@\n-codegen_ssa_error = Error while deserializing rlink file\n-\n-codegen_ssa_wrong_file_type = The input does not look like a .rlink file\n-\n-codegen_ssa_empty_version_number = The input does not contain version number\n-\n-codegen_ssa_encoding_version_mismatch = .rlink file was produced with encoding version `{$version_array}`, but the current version is `{$rlink_version}`\n-\n-codegen_ssa_rustc_version_mismatch = .rlink file was produced by rustc version `{$rustc_version}`, but the current version is `{$current_version}`"}, {"sha": "73f084cf3290bf7d1d8e7a0af03b4a35410aafa4", "filename": "compiler/rustc_error_messages/locales/en-US/driver.ftl", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bf7ce6a1a605d897832783a3d0c830d2466d90be/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fdriver.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/bf7ce6a1a605d897832783a3d0c830d2466d90be/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fdriver.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fdriver.ftl?ref=bf7ce6a1a605d897832783a3d0c830d2466d90be", "patch": "@@ -1,5 +1,11 @@\n driver_rlink_unable_to_read = failed to read rlink file: `{$err}`\n \n-driver_rlink_unable_to_deserialize = could not deserialize .rlink file: `{$error_message}`\n+driver_rlink_wrong_file_type = The input does not look like a .rlink file\n+\n+driver_rlink_empty_version_number = The input does not contain version number\n+\n+driver_rlink_encoding_version_mismatch = .rlink file was produced with encoding version `{$version_array}`, but the current version is `{$rlink_version}`\n+\n+driver_rlink_rustc_version_mismatch = .rlink file was produced by rustc version `{$rustc_version}`, but the current version is `{$current_version}`\n \n driver_rlink_no_a_file = rlink must be a file"}, {"sha": "2ea07ca1a487af5d622f395f4bde92e84429c709", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf7ce6a1a605d897832783a3d0c830d2466d90be/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf7ce6a1a605d897832783a3d0c830d2466d90be/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=bf7ce6a1a605d897832783a3d0c830d2466d90be", "patch": "@@ -35,7 +35,6 @@ fluent_messages! {\n     ast_passes => \"../locales/en-US/ast_passes.ftl\",\n     borrowck => \"../locales/en-US/borrowck.ftl\",\n     builtin_macros => \"../locales/en-US/builtin_macros.ftl\",\n-    codegen_ssa => \"../locales/en-US/codegen_ssa.ftl\",\n     const_eval => \"../locales/en-US/const_eval.ftl\",\n     driver => \"../locales/en-US/driver.ftl\",\n     expand => \"../locales/en-US/expand.ftl\","}]}