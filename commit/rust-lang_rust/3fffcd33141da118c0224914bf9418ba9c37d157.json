{"sha": "3fffcd33141da118c0224914bf9418ba9c37d157", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZmZjZDMzMTQxZGExMThjMDIyNDkxNGJmOTQxOGJhOWMzN2QxNTc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-25T01:05:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-25T01:05:25Z"}, "message": "Rollup merge of #60185 - NieDzejkob:int-error-kind-reexport, r=rkruppe\n\nReexport IntErrorKind in std\n\nCurrently `IntErrorKind` can only be found in `core`. @Centril confirmed on Discord that this is unintentional (should I r? him in this situation?).\n\nShould there be a test for this? As far as this *specific* situation goes, I don't think so, I'll risk it and say that there's no way this regresses. However, it might be a good idea to have some tool detect public items in `core` that are not reexported in `std`. Does this belong in tidy, or should that be a separate tool? Is there some rustc-specific *linter*? Unless that's entirely a dumb idea, this should probably get an issue.\n\nNote: My local build hasn't finished yet, but it's well past the point where I would expect problems.", "tree": {"sha": "9b6ddd5820ccba213652b3fb3ae6e48965b8c501", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b6ddd5820ccba213652b3fb3ae6e48965b8c501"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fffcd33141da118c0224914bf9418ba9c37d157", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcwQfVCRBK7hj4Ov3rIwAAdHIIAKT8/Xl0vTkKvS6EG8/NSGjI\nD8Cze12qHgN5nywHhNR/P8NZ/hCrYAZVD8TSrZOv4pwRcJ3/sicJKaw9zRzmqfOE\nghl710as9CQ8LkrY/47NkxQGOnpkEb3tRAtVwGGEbtOvkOYUfjYqJE0Di7+f3Ziv\nrbSuuGAuKIIv45+PP4Ie/grS2FdDpNdLwGQB7eHc/m/0LMvFwAv6+6ZfTjeNhmXe\n1+zT023bVF+szxlvmfBzR/sgQ8HixC2ASzYWaF+wSCYuct2PWe6QsnuPl0DOwTJJ\nwsv+mucjAN8qHHKBbNrQzPksHQopXbWBPpg5E/Yisu9Y55lxOmZdc1liRH+4tWw=\n=dqLn\n-----END PGP SIGNATURE-----\n", "payload": "tree 9b6ddd5820ccba213652b3fb3ae6e48965b8c501\nparent a4ef188ab6008c6f600e06a7e01e81f75370d574\nparent 7af0fccc88127619ec7e0fa695437525678db0b2\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1556154325 +0200\ncommitter GitHub <noreply@github.com> 1556154325 +0200\n\nRollup merge of #60185 - NieDzejkob:int-error-kind-reexport, r=rkruppe\n\nReexport IntErrorKind in std\n\nCurrently `IntErrorKind` can only be found in `core`. @Centril confirmed on Discord that this is unintentional (should I r? him in this situation?).\n\nShould there be a test for this? As far as this *specific* situation goes, I don't think so, I'll risk it and say that there's no way this regresses. However, it might be a good idea to have some tool detect public items in `core` that are not reexported in `std`. Does this belong in tidy, or should that be a separate tool? Is there some rustc-specific *linter*? Unless that's entirely a dumb idea, this should probably get an issue.\n\nNote: My local build hasn't finished yet, but it's well past the point where I would expect problems.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fffcd33141da118c0224914bf9418ba9c37d157", "html_url": "https://github.com/rust-lang/rust/commit/3fffcd33141da118c0224914bf9418ba9c37d157", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fffcd33141da118c0224914bf9418ba9c37d157/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4ef188ab6008c6f600e06a7e01e81f75370d574", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4ef188ab6008c6f600e06a7e01e81f75370d574", "html_url": "https://github.com/rust-lang/rust/commit/a4ef188ab6008c6f600e06a7e01e81f75370d574"}, {"sha": "7af0fccc88127619ec7e0fa695437525678db0b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7af0fccc88127619ec7e0fa695437525678db0b2", "html_url": "https://github.com/rust-lang/rust/commit/7af0fccc88127619ec7e0fa695437525678db0b2"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "7b0e090fb1bf48e1ce577f68a094a6e634e00648", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3fffcd33141da118c0224914bf9418ba9c37d157/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fffcd33141da118c0224914bf9418ba9c37d157/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=3fffcd33141da118c0224914bf9418ba9c37d157", "patch": "@@ -267,6 +267,7 @@\n #![feature(hash_raw_entry)]\n #![feature(hashmap_internals)]\n #![feature(int_error_internals)]\n+#![feature(int_error_matching)]\n #![feature(integer_atomics)]\n #![feature(lang_items)]\n #![feature(libc)]"}, {"sha": "2a2ca0b5237ee420f84f9fe4af8198f795f97c1b", "filename": "src/libstd/num.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3fffcd33141da118c0224914bf9418ba9c37d157/src%2Flibstd%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fffcd33141da118c0224914bf9418ba9c37d157/src%2Flibstd%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum.rs?ref=3fffcd33141da118c0224914bf9418ba9c37d157", "patch": "@@ -16,6 +16,12 @@ pub use core::num::{NonZeroU8, NonZeroU16, NonZeroU32, NonZeroU64, NonZeroU128,\n #[stable(feature = \"signed_nonzero\", since = \"1.34.0\")]\n pub use core::num::{NonZeroI8, NonZeroI16, NonZeroI32, NonZeroI64, NonZeroI128, NonZeroIsize};\n \n+#[unstable(feature = \"int_error_matching\",\n+           reason = \"it can be useful to match errors when making error messages \\\n+                     for integer parsing\",\n+           issue = \"22639\")]\n+pub use core::num::IntErrorKind;\n+\n #[cfg(test)] use crate::fmt;\n #[cfg(test)] use crate::ops::{Add, Sub, Mul, Div, Rem};\n "}]}