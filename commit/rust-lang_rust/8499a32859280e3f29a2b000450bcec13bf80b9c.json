{"sha": "8499a32859280e3f29a2b000450bcec13bf80b9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0OTlhMzI4NTkyODBlM2YyOWEyYjAwMDQ1MGJjZWMxM2JmODBiOWM=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-19T22:20:05Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-19T22:20:05Z"}, "message": "lintcheck: add -j <N> option to configure threads.\n\ndefaults to 1\n-j 0 choses the number of threads automtically (= number of physical cores)", "tree": {"sha": "b880336f4c638178bdbf14d26682798f58fd2698", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b880336f4c638178bdbf14d26682798f58fd2698"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8499a32859280e3f29a2b000450bcec13bf80b9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8499a32859280e3f29a2b000450bcec13bf80b9c", "html_url": "https://github.com/rust-lang/rust/commit/8499a32859280e3f29a2b000450bcec13bf80b9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8499a32859280e3f29a2b000450bcec13bf80b9c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22aeec09e4375268ff9cbd7057d3b57aac47a2c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/22aeec09e4375268ff9cbd7057d3b57aac47a2c5", "html_url": "https://github.com/rust-lang/rust/commit/22aeec09e4375268ff9cbd7057d3b57aac47a2c5"}], "stats": {"total": 44, "additions": 38, "deletions": 6}, "files": [{"sha": "d9933f0963aad5f9802ba4102cc196af906226ac", "filename": "clippy_dev/src/lintcheck.rs", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/8499a32859280e3f29a2b000450bcec13bf80b9c/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8499a32859280e3f29a2b000450bcec13bf80b9c/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=8499a32859280e3f29a2b000450bcec13bf80b9c", "patch": "@@ -229,10 +229,19 @@ impl Crate {\n         // \"loop\" the index within 0..thread_limit\n         let target_dir_index = index % thread_limit;\n         let perc = ((index * 100) as f32 / total_crates_to_lint as f32) as u8;\n-        println!(\n-            \"{}/{} {}% Linting {} {} in target dir {:?}\",\n-            index, total_crates_to_lint, perc, &self.name, &self.version, target_dir_index\n-        );\n+\n+        if thread_limit == 1 {\n+            println!(\n+                \"{}/{} {}% Linting {} {}\",\n+                index, total_crates_to_lint, perc, &self.name, &self.version\n+            );\n+        } else {\n+            println!(\n+                \"{}/{} {}% Linting {} {} in target dir {:?}\",\n+                index, total_crates_to_lint, perc, &self.name, &self.version, target_dir_index\n+            );\n+        }\n+\n         let cargo_clippy_path = std::fs::canonicalize(cargo_clippy_path).unwrap();\n \n         let shared_target_dir = clippy_project_root().join(\"target/lintcheck/shared_target_dir\");\n@@ -492,8 +501,23 @@ pub fn run(clap_config: &ArgMatches) {\n         // This helps when we check many small crates with dep-trees that don't have a lot of branches in\n         // order to achive some kind of parallelism\n \n-        // Rayon seems to return thread count so half that for core count\n-        let num_cpus: usize = rayon::current_num_threads() / 2;\n+        // by default, use a single thread\n+        let num_cpus = match clap_config.value_of(\"threads\") {\n+            Some(threads) => {\n+                let threads: usize = threads\n+                    .parse()\n+                    .expect(&format!(\"Failed to parse '{}' to a digit\", threads));\n+                if threads == 0 {\n+                    // automatic choice\n+                    // Rayon seems to return thread count so half that for core count\n+                    (rayon::current_num_threads() / 2) as usize\n+                } else {\n+                    threads\n+                }\n+            },\n+            // no -j passed, use a single thread\n+            None => 1,\n+        };\n \n         let num_crates = crates.len();\n "}, {"sha": "505d465760c57873b1c840ba769276e86b78f00e", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8499a32859280e3f29a2b000450bcec13bf80b9c/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8499a32859280e3f29a2b000450bcec13bf80b9c/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=8499a32859280e3f29a2b000450bcec13bf80b9c", "patch": "@@ -69,6 +69,14 @@ fn get_clap_config<'a>() -> ArgMatches<'a> {\n                 .value_name(\"CRATES-SOURCES-TOML-PATH\")\n                 .long(\"crates-toml\")\n                 .help(\"set the path for a crates.toml where lintcheck should read the sources from\"),\n+        )\n+        .arg(\n+            Arg::with_name(\"threads\")\n+                .takes_value(true)\n+                .value_name(\"N\")\n+                .short(\"j\")\n+                .long(\"jobs\")\n+                .help(\"number of threads to use, 0 automatic choice\"),\n         );\n \n     let app = App::new(\"Clippy developer tooling\")"}]}