{"sha": "611bd898c036e5b990d07a1ab2b3475544e9f7e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMWJkODk4YzAzNmU1Yjk5MGQwN2ExYWIyYjM0NzU1NDRlOWY3ZTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-04T07:44:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-04T07:44:04Z"}, "message": "Auto merge of #4990 - JohnTitor:remove-try, r=phansch\n\nRemove use of `try!` from documentation\n\nMakes documentation more modern and directer\n\nchangelog: none", "tree": {"sha": "e34fe08e92e7919ab40680ed1769548b3f2dfd84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e34fe08e92e7919ab40680ed1769548b3f2dfd84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/611bd898c036e5b990d07a1ab2b3475544e9f7e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/611bd898c036e5b990d07a1ab2b3475544e9f7e7", "html_url": "https://github.com/rust-lang/rust/commit/611bd898c036e5b990d07a1ab2b3475544e9f7e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/611bd898c036e5b990d07a1ab2b3475544e9f7e7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fddc9801dd3aceedef0bb5694a5f2a5a827efea8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fddc9801dd3aceedef0bb5694a5f2a5a827efea8", "html_url": "https://github.com/rust-lang/rust/commit/fddc9801dd3aceedef0bb5694a5f2a5a827efea8"}, {"sha": "1102b87e3a2872ef7ced9aa0d3a38226f89e201b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1102b87e3a2872ef7ced9aa0d3a38226f89e201b", "html_url": "https://github.com/rust-lang/rust/commit/1102b87e3a2872ef7ced9aa0d3a38226f89e201b"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "71eb2e250c74c9d8d49336878eee1b6df8fd8f59", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/611bd898c036e5b990d07a1ab2b3475544e9f7e7/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/611bd898c036e5b990d07a1ab2b3475544e9f7e7/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=611bd898c036e5b990d07a1ab2b3475544e9f7e7", "patch": "@@ -65,7 +65,7 @@ declare_clippy_lint! {\n     ///\n     /// **Why is this bad?** `result.unwrap()` will let the thread panic on `Err`\n     /// values. Normally, you want to implement more sophisticated error handling,\n-    /// and propagate errors upwards with `try!`.\n+    /// and propagate errors upwards with `?` operator.\n     ///\n     /// Even if you want to panic on errors, not all `Error`s implement good\n     /// messages on display. Therefore, it may be beneficial to look at the places\n@@ -127,7 +127,7 @@ declare_clippy_lint! {\n     ///\n     /// **Why is this bad?** `result.expect()` will let the thread panic on `Err`\n     /// values. Normally, you want to implement more sophisticated error handling,\n-    /// and propagate errors upwards with `try!`.\n+    /// and propagate errors upwards with `?` operator.\n     ///\n     /// **Known problems:** None.\n     ///"}, {"sha": "54fd132131733adadaeec6b6723be2316cb16777", "filename": "clippy_lints/src/ok_if_let.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/611bd898c036e5b990d07a1ab2b3475544e9f7e7/clippy_lints%2Fsrc%2Fok_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/611bd898c036e5b990d07a1ab2b3475544e9f7e7/clippy_lints%2Fsrc%2Fok_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fok_if_let.rs?ref=611bd898c036e5b990d07a1ab2b3475544e9f7e7", "patch": "@@ -15,18 +15,18 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```ignore\n-    /// for result in iter {\n-    ///     if let Some(bench) = try!(result).parse().ok() {\n-    ///         vec.push(bench)\n+    /// for i in iter {\n+    ///     if let Some(value) = i.parse().ok() {\n+    ///         vec.push(value)\n     ///     }\n     /// }\n     /// ```\n     /// Could be written:\n     ///\n     /// ```ignore\n-    /// for result in iter {\n-    ///     if let Ok(bench) = try!(result).parse() {\n-    ///         vec.push(bench)\n+    /// for i in iter {\n+    ///     if let Ok(value) = i.parse() {\n+    ///         vec.push(value)\n     ///     }\n     /// }\n     /// ```"}]}