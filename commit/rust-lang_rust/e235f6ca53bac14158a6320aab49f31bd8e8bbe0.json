{"sha": "e235f6ca53bac14158a6320aab49f31bd8e8bbe0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMzVmNmNhNTNiYWMxNDE1OGE2MzIwYWFiNDlmMzFiZDhlOGJiZTA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-06T09:18:23Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-06T09:18:23Z"}, "message": "remove some unused mut decls and vars", "tree": {"sha": "7cc6fff26a93fb6e1a347ec61599fe3d42e418f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cc6fff26a93fb6e1a347ec61599fe3d42e418f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e235f6ca53bac14158a6320aab49f31bd8e8bbe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e235f6ca53bac14158a6320aab49f31bd8e8bbe0", "html_url": "https://github.com/rust-lang/rust/commit/e235f6ca53bac14158a6320aab49f31bd8e8bbe0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e235f6ca53bac14158a6320aab49f31bd8e8bbe0/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dc62dfcf35bda8c8edf424c6c50f8584f554217", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dc62dfcf35bda8c8edf424c6c50f8584f554217", "html_url": "https://github.com/rust-lang/rust/commit/4dc62dfcf35bda8c8edf424c6c50f8584f554217"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "c34c7fe303ee22fd9b2c16d1f90a940a2719356a", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e235f6ca53bac14158a6320aab49f31bd8e8bbe0/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e235f6ca53bac14158a6320aab49f31bd8e8bbe0/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=e235f6ca53bac14158a6320aab49f31bd8e8bbe0", "patch": "@@ -788,7 +788,7 @@ pub fn link_binary(sess: Session,\n     };\n \n     debug!(\"output: %s\", output.to_str());\n-    let mut cc_args = link_args(sess, obj_filename, out_filename, lm);\n+    let cc_args = link_args(sess, obj_filename, out_filename, lm);\n     debug!(\"%s link args: %s\", cc_prog, str::connect(cc_args, ~\" \"));\n     // We run 'cc' here\n     let prog = run::program_output(cc_prog, cc_args);"}, {"sha": "e0a20f64907150e3ff3e39e4b6dbb0c0e50bed0a", "filename": "src/librustc/middle/trans/closure.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e235f6ca53bac14158a6320aab49f31bd8e8bbe0/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e235f6ca53bac14158a6320aab49f31bd8e8bbe0/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs?ref=e235f6ca53bac14158a6320aab49f31bd8e8bbe0", "patch": "@@ -208,7 +208,6 @@ pub fn store_environment(bcx: block,\n \n     // allocate closure in the heap\n     let Result {bcx: bcx, val: llbox} = allocate_cbox(bcx, sigil, cdata_ty);\n-    let mut temp_cleanups = ~[];\n \n     // cbox_ty has the form of a tuple: (a, b, c) we want a ptr to a\n     // tuple.  This could be a ptr in uniq or a box or on stack,\n@@ -244,9 +243,6 @@ pub fn store_environment(bcx: block,\n         }\n \n     }\n-    for vec::each(temp_cleanups) |cleanup| {\n-        revoke_clean(bcx, *cleanup);\n-    }\n \n     ClosureResult { llbox: llbox, cdata_ty: cdata_ty, bcx: bcx }\n }"}, {"sha": "1dd73f76da7352da588eca8a08b1c709e6c366e7", "filename": "src/librustc/middle/trans/reachable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e235f6ca53bac14158a6320aab49f31bd8e8bbe0/src%2Flibrustc%2Fmiddle%2Ftrans%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e235f6ca53bac14158a6320aab49f31bd8e8bbe0/src%2Flibrustc%2Fmiddle%2Ftrans%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Freachable.rs?ref=e235f6ca53bac14158a6320aab49f31bd8e8bbe0", "patch": "@@ -42,7 +42,7 @@ pub fn find_reachable(crate_mod: &_mod, exp_map2: resolve::ExportMap2,\n                       tcx: ty::ctxt, method_map: typeck::method_map) -> map {\n     let mut rmap = HashSet::new();\n     {\n-        let mut cx = @mut ctx {\n+        let cx = @mut ctx {\n             exp_map2: exp_map2,\n             tcx: tcx,\n             method_map: method_map,"}, {"sha": "d3875bad13a7bf7c9b7a289510f3e42204ed1079", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e235f6ca53bac14158a6320aab49f31bd8e8bbe0/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e235f6ca53bac14158a6320aab49f31bd8e8bbe0/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=e235f6ca53bac14158a6320aab49f31bd8e8bbe0", "patch": "@@ -1950,7 +1950,7 @@ pub fn type_contents(cx: ctxt, ty: t) -> TypeContents {\n \n         let _i = indenter();\n \n-        let mut result = match get(ty).sty {\n+        let result = match get(ty).sty {\n             // Scalar and unique types are sendable, constant, and owned\n             ty_nil | ty_bot | ty_bool | ty_int(_) | ty_uint(_) | ty_float(_) |\n             ty_bare_fn(_) | ty_ptr(_) => {"}]}