{"sha": "21b9822390323420ae3a2998f1c376606325a883", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxYjk4MjIzOTAzMjM0MjBhZTNhMjk5OGYxYzM3NjYwNjMyNWE4ODM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-01-06T01:13:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-06T01:13:34Z"}, "message": "Rollup merge of #47173 - dotdash:cleanup, r=michaelwoerister\n\nRemove some outdated LLVM-related code\n\nTicks two boxes on #46437", "tree": {"sha": "28a4c00ad2a4224f44579de33c07574eee92e32b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28a4c00ad2a4224f44579de33c07574eee92e32b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21b9822390323420ae3a2998f1c376606325a883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21b9822390323420ae3a2998f1c376606325a883", "html_url": "https://github.com/rust-lang/rust/commit/21b9822390323420ae3a2998f1c376606325a883", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21b9822390323420ae3a2998f1c376606325a883/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5624ac7c47f508c9975c4bea321d9af6a4bf2ad2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5624ac7c47f508c9975c4bea321d9af6a4bf2ad2", "html_url": "https://github.com/rust-lang/rust/commit/5624ac7c47f508c9975c4bea321d9af6a4bf2ad2"}, {"sha": "7e522b2f0ebddd60fb3df467cb755c2de0f37f4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e522b2f0ebddd60fb3df467cb755c2de0f37f4d", "html_url": "https://github.com/rust-lang/rust/commit/7e522b2f0ebddd60fb3df467cb755c2de0f37f4d"}], "stats": {"total": 47, "additions": 13, "deletions": 34}, "files": [{"sha": "4e65195626507fb1177f311c5102416d34545648", "filename": "src/librustc_llvm/ffi.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/21b9822390323420ae3a2998f1c376606325a883/src%2Flibrustc_llvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21b9822390323420ae3a2998f1c376606325a883/src%2Flibrustc_llvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fffi.rs?ref=21b9822390323420ae3a2998f1c376606325a883", "patch": "@@ -538,9 +538,6 @@ extern \"C\" {\n     /// See llvm::LLVMTypeKind::getTypeID.\n     pub fn LLVMRustGetTypeKind(Ty: TypeRef) -> TypeKind;\n \n-    /// See llvm::Value::getContext\n-    pub fn LLVMRustGetValueContext(V: ValueRef) -> ContextRef;\n-\n     // Operations on integer types\n     pub fn LLVMInt1TypeInContext(C: ContextRef) -> TypeRef;\n     pub fn LLVMInt8TypeInContext(C: ContextRef) -> TypeRef;\n@@ -812,13 +809,12 @@ extern \"C\" {\n                                Bundle: OperandBundleDefRef,\n                                Name: *const c_char)\n                                -> ValueRef;\n-    pub fn LLVMRustBuildLandingPad(B: BuilderRef,\n-                                   Ty: TypeRef,\n-                                   PersFn: ValueRef,\n-                                   NumClauses: c_uint,\n-                                   Name: *const c_char,\n-                                   F: ValueRef)\n-                                   -> ValueRef;\n+    pub fn LLVMBuildLandingPad(B: BuilderRef,\n+                               Ty: TypeRef,\n+                               PersFn: ValueRef,\n+                               NumClauses: c_uint,\n+                               Name: *const c_char)\n+                               -> ValueRef;\n     pub fn LLVMBuildResume(B: BuilderRef, Exn: ValueRef) -> ValueRef;\n     pub fn LLVMBuildUnreachable(B: BuilderRef) -> ValueRef;\n "}, {"sha": "4a0b1381a40084c3b1d192cfc62b70a663a9ed44", "filename": "src/librustc_trans/builder.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/21b9822390323420ae3a2998f1c376606325a883/src%2Flibrustc_trans%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21b9822390323420ae3a2998f1c376606325a883/src%2Flibrustc_trans%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbuilder.rs?ref=21b9822390323420ae3a2998f1c376606325a883", "patch": "@@ -1012,12 +1012,11 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n     }\n \n     pub fn landing_pad(&self, ty: Type, pers_fn: ValueRef,\n-                       num_clauses: usize,\n-                       llfn: ValueRef) -> ValueRef {\n+                       num_clauses: usize) -> ValueRef {\n         self.count_insn(\"landingpad\");\n         unsafe {\n-            llvm::LLVMRustBuildLandingPad(self.llbuilder, ty.to_ref(), pers_fn,\n-                                          num_clauses as c_uint, noname(), llfn)\n+            llvm::LLVMBuildLandingPad(self.llbuilder, ty.to_ref(), pers_fn,\n+                                      num_clauses as c_uint, noname())\n         }\n     }\n "}, {"sha": "cfddd99d0dd9aab1df1457c3c724d749afdbe728", "filename": "src/librustc_trans/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21b9822390323420ae3a2998f1c376606325a883/src%2Flibrustc_trans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21b9822390323420ae3a2998f1c376606325a883/src%2Flibrustc_trans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fintrinsic.rs?ref=21b9822390323420ae3a2998f1c376606325a883", "patch": "@@ -925,7 +925,7 @@ fn trans_gnu_try<'a, 'tcx>(bcx: &Builder<'a, 'tcx>,\n         // rust_try ignores the selector.\n         let lpad_ty = Type::struct_(ccx, &[Type::i8p(ccx), Type::i32(ccx)],\n                                     false);\n-        let vals = catch.landing_pad(lpad_ty, bcx.ccx.eh_personality(), 1, catch.llfn());\n+        let vals = catch.landing_pad(lpad_ty, bcx.ccx.eh_personality(), 1);\n         catch.add_clause(vals, C_null(Type::i8p(ccx)));\n         let ptr = catch.extract_value(vals, 0);\n         let ptr_align = bcx.tcx().data_layout.pointer_align;"}, {"sha": "8c9fb03954583fca26f1bb24b8613f445f2c0869", "filename": "src/librustc_trans/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21b9822390323420ae3a2998f1c376606325a883/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21b9822390323420ae3a2998f1c376606325a883/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fblock.rs?ref=21b9822390323420ae3a2998f1c376606325a883", "patch": "@@ -753,7 +753,7 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n \n         let llpersonality = self.ccx.eh_personality();\n         let llretty = self.landing_pad_type();\n-        let lp = bcx.landing_pad(llretty, llpersonality, 1, self.llfn);\n+        let lp = bcx.landing_pad(llretty, llpersonality, 1);\n         bcx.set_cleanup(lp);\n \n         let slot = self.get_personality_slot(&bcx);"}, {"sha": "96fb05ee06e378cd3b3fdc1bd1c0257f37a348e2", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/21b9822390323420ae3a2998f1c376606325a883/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/21b9822390323420ae3a2998f1c376606325a883/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=21b9822390323420ae3a2998f1c376606325a883", "patch": "@@ -1144,13 +1144,6 @@ extern \"C\" void LLVMRustWriteSMDiagnosticToString(LLVMSMDiagnosticRef D,\n   unwrap(D)->print(\"\", OS);\n }\n \n-extern \"C\" LLVMValueRef\n-LLVMRustBuildLandingPad(LLVMBuilderRef B, LLVMTypeRef Ty,\n-                        LLVMValueRef PersFn, unsigned NumClauses,\n-                        const char *Name, LLVMValueRef F) {\n-  return LLVMBuildLandingPad(B, Ty, PersFn, NumClauses, Name);\n-}\n-\n extern \"C\" LLVMValueRef LLVMRustBuildCleanupPad(LLVMBuilderRef B,\n                                                 LLVMValueRef ParentPad,\n                                                 unsigned ArgCount,\n@@ -1355,10 +1348,6 @@ extern \"C\" bool LLVMRustConstInt128Get(LLVMValueRef CV, bool sext, uint64_t *hig\n     return true;\n }\n \n-extern \"C\" LLVMContextRef LLVMRustGetValueContext(LLVMValueRef V) {\n-  return wrap(&unwrap(V)->getContext());\n-}\n-\n enum class LLVMRustVisibility {\n   Default = 0,\n   Hidden = 1,\n@@ -1439,11 +1428,6 @@ LLVMRustModuleBufferLen(const LLVMRustModuleBuffer *Buffer) {\n \n extern \"C\" uint64_t\n LLVMRustModuleCost(LLVMModuleRef M) {\n-  Module &Mod = *unwrap(M);\n-  uint64_t cost = 0;\n-  for (auto &F : Mod.functions()) {\n-    (void)F;\n-    cost += 1;\n-  }\n-  return cost;\n+  auto f = unwrap(M)->functions();\n+  return std::distance(std::begin(f), std::end(f));\n }"}]}