{"sha": "b6e8ebf33b0203ab16bbb26eb95a6654ee00ac8e", "node_id": "C_kwDOAAsO6NoAKGI2ZThlYmYzM2IwMjAzYWIxNmJiYjI2ZWI5NWE2NjU0ZWUwMGFjOGU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-03T05:30:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-03T05:30:25Z"}, "message": "Rollup merge of #107608 - P1n3appl3:master, r=tmandry\n\nUse triple rather than arch for fuchsia test-runner\n\nThis allows the user of the test-runner script to specify a full triple rather than just an architecture which helps with the transition from the two component to three component target triples for fuchsia.", "tree": {"sha": "2d5204bd8ab362b57c804e3142fb23a85966ef2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d5204bd8ab362b57c804e3142fb23a85966ef2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6e8ebf33b0203ab16bbb26eb95a6654ee00ac8e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj3JvxCRBK7hj4Ov3rIwAA7BUIAH4hSMbjKVmnmBRgPIHgvdbh\nVuIKCMeCGzSjXDkFCK9MzcObER1EhXS9Unku1x36PbL20aFZEb8uXwvTv8Ib9GGg\nhPBat7xVeGwZhdYaYvbQyTMdRxaXE5HoSErup7qjmhZ5EI9NZWf1FD7DmNxRKckm\nq8TfZCZBzLR8nPv1KFnBlOfNyvQ+sUibsoN/rohRZvcAOGdVy/lPdnXtf/to5WAU\ns6/D6wWbtdqziN/r5JA7qUGiPBCD8jztjuboK//enzbA0phYpBJZXPHfFfdW0mIk\ncx3rCg1KLMzuhyLAHJvaOHFZ3DSurCGmaoxV0Dls5byLfVO/kjPk9bAXnsHvNfE=\n=ua81\n-----END PGP SIGNATURE-----\n", "payload": "tree 2d5204bd8ab362b57c804e3142fb23a85966ef2f\nparent 743ca67edfbfaf0db5295c6c1a334fb9e837467c\nparent eb5e9713b5fc4da7cb9dbdc9d302de10126b3287\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675402225 +0100\ncommitter GitHub <noreply@github.com> 1675402225 +0100\n\nRollup merge of #107608 - P1n3appl3:master, r=tmandry\n\nUse triple rather than arch for fuchsia test-runner\n\nThis allows the user of the test-runner script to specify a full triple rather than just an architecture which helps with the transition from the two component to three component target triples for fuchsia.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6e8ebf33b0203ab16bbb26eb95a6654ee00ac8e", "html_url": "https://github.com/rust-lang/rust/commit/b6e8ebf33b0203ab16bbb26eb95a6654ee00ac8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6e8ebf33b0203ab16bbb26eb95a6654ee00ac8e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "743ca67edfbfaf0db5295c6c1a334fb9e837467c", "url": "https://api.github.com/repos/rust-lang/rust/commits/743ca67edfbfaf0db5295c6c1a334fb9e837467c", "html_url": "https://github.com/rust-lang/rust/commit/743ca67edfbfaf0db5295c6c1a334fb9e837467c"}, {"sha": "eb5e9713b5fc4da7cb9dbdc9d302de10126b3287", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb5e9713b5fc4da7cb9dbdc9d302de10126b3287", "html_url": "https://github.com/rust-lang/rust/commit/eb5e9713b5fc4da7cb9dbdc9d302de10126b3287"}], "stats": {"total": 53, "additions": 24, "deletions": 29}, "files": [{"sha": "a6d84a3c18a5f2802597b6d751cb8e95c95b53ee", "filename": "src/ci/docker/scripts/fuchsia-test-runner.py", "status": "modified", "additions": 23, "deletions": 28, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/b6e8ebf33b0203ab16bbb26eb95a6654ee00ac8e/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py", "raw_url": "https://github.com/rust-lang/rust/raw/b6e8ebf33b0203ab16bbb26eb95a6654ee00ac8e/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py?ref=b6e8ebf33b0203ab16bbb26eb95a6654ee00ac8e", "patch": "@@ -19,18 +19,18 @@\n import signal\n import subprocess\n import sys\n-from typing import ClassVar, List\n+from typing import ClassVar, List, Optional\n \n \n @dataclass\n class TestEnvironment:\n     rust_dir: str\n     sdk_dir: str\n-    target_arch: str\n-    package_server_pid: int = None\n-    emu_addr: str = None\n-    libstd_name: str = None\n-    libtest_name: str = None\n+    target: str\n+    package_server_pid: Optional[int] = None\n+    emu_addr: Optional[str] = None\n+    libstd_name: Optional[str] = None\n+    libtest_name: Optional[str] = None\n     verbose: bool = False\n \n     @staticmethod\n@@ -40,6 +40,15 @@ def tmp_dir():\n             return os.path.abspath(tmp_dir)\n         return os.path.join(os.path.dirname(__file__), \"tmp~\")\n \n+    @staticmethod\n+    def triple_to_arch(triple):\n+        if \"x86_64\" in triple:\n+            return \"x64\"\n+        elif \"aarch64\" in triple:\n+            return \"arm64\"\n+        else:\n+            raise Exception(f\"Unrecognized target triple {triple}\")\n+\n     @classmethod\n     def env_file_path(cls):\n         return os.path.join(cls.tmp_dir(), \"test_env.json\")\n@@ -49,7 +58,7 @@ def from_args(cls, args):\n         return cls(\n             os.path.abspath(args.rust),\n             os.path.abspath(args.sdk),\n-            args.target_arch,\n+            args.target,\n             verbose=args.verbose,\n         )\n \n@@ -60,21 +69,14 @@ def read_from_file(cls):\n             return cls(\n                 test_env[\"rust_dir\"],\n                 test_env[\"sdk_dir\"],\n-                test_env[\"target_arch\"],\n+                test_env[\"target\"],\n                 libstd_name=test_env[\"libstd_name\"],\n                 libtest_name=test_env[\"libtest_name\"],\n                 emu_addr=test_env[\"emu_addr\"],\n                 package_server_pid=test_env[\"package_server_pid\"],\n                 verbose=test_env[\"verbose\"],\n             )\n \n-    def image_name(self):\n-        if self.target_arch == \"x64\":\n-            return \"qemu-x64\"\n-        if self.target_arch == \"arm64\":\n-            return \"qemu-arm64\"\n-        raise Exception(f\"Unrecognized target architecture {self.target_arch}\")\n-\n     def write_to_file(self):\n         with open(self.env_file_path(), \"w\", encoding=\"utf-8\") as f:\n             f.write(json.dumps(self.__dict__))\n@@ -108,13 +110,6 @@ def output_dir(self):\n     def repo_dir(self):\n         return os.path.join(self.tmp_dir(), self.TEST_REPO_NAME)\n \n-    def rustlib_dir(self):\n-        if self.target_arch == \"x64\":\n-            return \"x86_64-unknown-fuchsia\"\n-        if self.target_arch == \"arm64\":\n-            return \"aarch64-unknown-fuchsia\"\n-        raise Exception(f\"Unrecognized target architecture {self.target_arch}\")\n-\n     def libs_dir(self):\n         return os.path.join(\n             self.rust_dir,\n@@ -125,7 +120,7 @@ def rustlibs_dir(self):\n         return os.path.join(\n             self.libs_dir(),\n             \"rustlib\",\n-            self.rustlib_dir(),\n+            self.target,\n             \"lib\",\n         )\n \n@@ -384,7 +379,7 @@ def start(self):\n                 \"--emulator-log\",\n                 self.emulator_log_path(),\n                 \"--image-name\",\n-                self.image_name(),\n+                \"qemu-\" + self.triple_to_arch(self.target),\n             ],\n             stdout=self.subprocess_output(),\n             stderr=self.subprocess_output(),\n@@ -642,11 +637,11 @@ def log(msg):\n                         package_dir=package_dir,\n                         package_name=package_name,\n                         rust_dir=self.rust_dir,\n-                        rustlib_dir=self.rustlib_dir(),\n+                        rustlib_dir=self.target,\n                         sdk_dir=self.sdk_dir,\n                         libstd_name=self.libstd_name,\n                         libtest_name=self.libtest_name,\n-                        target_arch=self.target_arch,\n+                        target_arch=self.triple_to_arch(self.target),\n                     )\n                 )\n                 for shared_lib in shared_libs:\n@@ -969,8 +964,8 @@ def print_help(args):\n         action=\"store_true\",\n     )\n     start_parser.add_argument(\n-        \"--target-arch\",\n-        help=\"the architecture of the image to test\",\n+        \"--target\",\n+        help=\"the target platform to test\",\n         required=True,\n     )\n     start_parser.set_defaults(func=start)"}, {"sha": "0f165b268ba3b9d01091d8d6f9e09870b172ea3a", "filename": "src/doc/rustc/src/platform-support/fuchsia.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b6e8ebf33b0203ab16bbb26eb95a6654ee00ac8e/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Ffuchsia.md", "raw_url": "https://github.com/rust-lang/rust/raw/b6e8ebf33b0203ab16bbb26eb95a6654ee00ac8e/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Ffuchsia.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Ffuchsia.md?ref=b6e8ebf33b0203ab16bbb26eb95a6654ee00ac8e", "patch": "@@ -697,7 +697,7 @@ test environment with:\n src/ci/docker/scripts/fuchsia-test-runner.py start\n     --rust ${RUST_SRC_PATH}/install\n     --sdk ${SDK_PATH}\n-    --target-arch {x64,arm64}\n+    --target-triple {x86_64-unknown-fuchsia|aarch64-unknown-fuchsia}\n ```\n \n Where `${RUST_SRC_PATH}/install` is the `prefix` set in `config.toml` and"}]}