{"sha": "ad57d5f27c9ce7752e3e7de50536065136a14f0c", "node_id": "C_kwDOAAsO6NoAKGFkNTdkNWYyN2M5Y2U3NzUyZTNlN2RlNTA1MzYwNjUxMzZhMTRmMGM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-27T19:42:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-27T19:42:21Z"}, "message": "Rollup merge of #101555 - jhpratt:stabilize-mixed_integer_ops, r=joshtriplett\n\nStabilize `#![feature(mixed_integer_ops)]`\n\nTracked and FCP completed in #87840.\n\n````@rustbot```` label +T-libs-api +S-waiting-on-review +relnotes\n\nr? rust-lang/t-libs-api", "tree": {"sha": "f5681827b28844d33528609ac5b6dab1353c42b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5681827b28844d33528609ac5b6dab1353c42b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad57d5f27c9ce7752e3e7de50536065136a14f0c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjM1IdCRBK7hj4Ov3rIwAAYLIIAGWpc8SotaZu8oYPtFgpIuyL\nyyLxu+rAg0wugPd5PS4lPGrNAR4AmRT+4Nzlm5ZTLXOInd7ilS0H41J1sifVUFsG\nWt4ceJyxS4qJQgnn/HWf0AcuiuWHopMc22+k5UMSwFUmbprD3n2c6/rnxRpfA6P4\nQ+sFjTGK5eArV5QmLHIen5mbszbrgRm2UCV6t3tREu/cBjp6Kw6OxHt+oo/007aW\nCBbDs5iKYSgy9DI4hn191sVmWMXoQDUAoGjbWq5ZJyVkFWHlwHVfAwa0xd17wUm8\ni2t3FmP8gx1AxZpEyIvFonBDzVnaYTTMxp4UIqhq70bDb17ilz9+75KElbgNvq4=\n=ifhZ\n-----END PGP SIGNATURE-----\n", "payload": "tree f5681827b28844d33528609ac5b6dab1353c42b0\nparent 57ee5cf5a93923dae9c98bffb11545fc3a31368d\nparent 5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1664307741 +0200\ncommitter GitHub <noreply@github.com> 1664307741 +0200\n\nRollup merge of #101555 - jhpratt:stabilize-mixed_integer_ops, r=joshtriplett\n\nStabilize `#![feature(mixed_integer_ops)]`\n\nTracked and FCP completed in #87840.\n\n````@rustbot```` label +T-libs-api +S-waiting-on-review +relnotes\n\nr? rust-lang/t-libs-api\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad57d5f27c9ce7752e3e7de50536065136a14f0c", "html_url": "https://github.com/rust-lang/rust/commit/ad57d5f27c9ce7752e3e7de50536065136a14f0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad57d5f27c9ce7752e3e7de50536065136a14f0c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57ee5cf5a93923dae9c98bffb11545fc3a31368d", "url": "https://api.github.com/repos/rust-lang/rust/commits/57ee5cf5a93923dae9c98bffb11545fc3a31368d", "html_url": "https://github.com/rust-lang/rust/commit/57ee5cf5a93923dae9c98bffb11545fc3a31368d"}, {"sha": "5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd", "url": "https://api.github.com/repos/rust-lang/rust/commits/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd", "html_url": "https://github.com/rust-lang/rust/commit/5510a699813bfc8f84cffaa6a4ba0cc0a0d8accd"}], "stats": {"total": 62, "additions": 24, "deletions": 38}, "files": [{"sha": "c3df0d4f9b91a2e85d30090c3319e34f425789c6", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ad57d5f27c9ce7752e3e7de50536065136a14f0c/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad57d5f27c9ce7752e3e7de50536065136a14f0c/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=ad57d5f27c9ce7752e3e7de50536065136a14f0c", "patch": "@@ -195,7 +195,6 @@\n #![feature(link_llvm_intrinsics)]\n #![feature(macro_metavar_expr)]\n #![feature(min_specialization)]\n-#![feature(mixed_integer_ops)]\n #![feature(must_not_suspend)]\n #![feature(negative_impls)]\n #![feature(never_type)]"}, {"sha": "d6aeee299e30d8eac207e13903193816675e8e9c", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ad57d5f27c9ce7752e3e7de50536065136a14f0c/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad57d5f27c9ce7752e3e7de50536065136a14f0c/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=ad57d5f27c9ce7752e3e7de50536065136a14f0c", "patch": "@@ -464,12 +464,11 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".checked_add_unsigned(2), Some(3));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX - 2).checked_add_unsigned(3), None);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -533,12 +532,11 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".checked_sub_unsigned(2), Some(-1));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MIN + 2).checked_sub_unsigned(3), None);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -907,12 +905,11 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".saturating_add_unsigned(2), 3);\")]\n         #[doc = concat!(\"assert_eq!(\", stringify!($SelfT), \"::MAX.saturating_add_unsigned(100), \", stringify!($SelfT), \"::MAX);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -954,12 +951,11 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(100\", stringify!($SelfT), \".saturating_sub_unsigned(127), -27);\")]\n         #[doc = concat!(\"assert_eq!(\", stringify!($SelfT), \"::MIN.saturating_sub_unsigned(100), \", stringify!($SelfT), \"::MIN);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -1135,12 +1131,11 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(100\", stringify!($SelfT), \".wrapping_add_unsigned(27), 127);\")]\n         #[doc = concat!(\"assert_eq!(\", stringify!($SelfT), \"::MAX.wrapping_add_unsigned(2), \", stringify!($SelfT), \"::MIN + 1);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline(always)]\n@@ -1176,12 +1171,11 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(0\", stringify!($SelfT), \".wrapping_sub_unsigned(127), -127);\")]\n         #[doc = concat!(\"assert_eq!((-2\", stringify!($SelfT), \").wrapping_sub_unsigned(\", stringify!($UnsignedT), \"::MAX), -1);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline(always)]\n@@ -1574,13 +1568,12 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".overflowing_add_unsigned(2), (3, false));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MIN).overflowing_add_unsigned(\", stringify!($UnsignedT), \"::MAX), (\", stringify!($SelfT), \"::MAX, false));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX - 2).overflowing_add_unsigned(3), (\", stringify!($SelfT), \"::MIN, true));\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -1658,13 +1651,12 @@ macro_rules! int_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".overflowing_sub_unsigned(2), (-1, false));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX).overflowing_sub_unsigned(\", stringify!($UnsignedT), \"::MAX), (\", stringify!($SelfT), \"::MIN, false));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MIN + 2).overflowing_sub_unsigned(3), (\", stringify!($SelfT), \"::MAX, true));\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]"}, {"sha": "46b0ca2303406df292efa4b2b6beffe5fb7692f3", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ad57d5f27c9ce7752e3e7de50536065136a14f0c/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad57d5f27c9ce7752e3e7de50536065136a14f0c/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=ad57d5f27c9ce7752e3e7de50536065136a14f0c", "patch": "@@ -474,13 +474,12 @@ macro_rules! uint_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".checked_add_signed(2), Some(3));\")]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".checked_add_signed(-2), None);\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX - 2).checked_add_signed(3), None);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -1057,13 +1056,12 @@ macro_rules! uint_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".saturating_add_signed(2), 3);\")]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".saturating_add_signed(-2), 0);\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX - 2).saturating_add_signed(4), \", stringify!($SelfT), \"::MAX);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -1198,13 +1196,12 @@ macro_rules! uint_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".wrapping_add_signed(2), 3);\")]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".wrapping_add_signed(-2), \", stringify!($SelfT), \"::MAX);\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX - 2).wrapping_add_signed(4), 1);\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]\n@@ -1564,13 +1561,12 @@ macro_rules! uint_impl {\n         /// Basic usage:\n         ///\n         /// ```\n-        /// # #![feature(mixed_integer_ops)]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".overflowing_add_signed(2), (3, false));\")]\n         #[doc = concat!(\"assert_eq!(1\", stringify!($SelfT), \".overflowing_add_signed(-2), (\", stringify!($SelfT), \"::MAX, true));\")]\n         #[doc = concat!(\"assert_eq!((\", stringify!($SelfT), \"::MAX - 2).overflowing_add_signed(4), (1, true));\")]\n         /// ```\n-        #[unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n-        #[rustc_const_unstable(feature = \"mixed_integer_ops\", issue = \"87840\")]\n+        #[stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n+        #[rustc_const_stable(feature = \"mixed_integer_ops\", since = \"CURRENT_RUSTC_VERSION\")]\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline]"}, {"sha": "ac5d0384d43dc22669ce41e696570450346b430f", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ad57d5f27c9ce7752e3e7de50536065136a14f0c/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad57d5f27c9ce7752e3e7de50536065136a14f0c/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=ad57d5f27c9ce7752e3e7de50536065136a14f0c", "patch": "@@ -294,7 +294,6 @@\n #![feature(is_some_with)]\n #![feature(maybe_uninit_slice)]\n #![feature(maybe_uninit_write_slice)]\n-#![feature(mixed_integer_ops)]\n #![feature(nonnull_slice_from_raw_parts)]\n #![feature(panic_can_unwind)]\n #![feature(panic_info_message)]"}]}