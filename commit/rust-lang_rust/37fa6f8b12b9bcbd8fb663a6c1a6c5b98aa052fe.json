{"sha": "37fa6f8b12b9bcbd8fb663a6c1a6c5b98aa052fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3ZmE2ZjhiMTJiOWJjYmQ4ZmI2NjNhNmMxYTZjNWI5OGFhMDUyZmU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-03-27T12:18:54Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-03-27T21:56:06Z"}, "message": "rustdoc: Don't use into_iter() when cleaning impl Trait", "tree": {"sha": "17e3de4ba8f766be33d41bb94770ab30c2a8c646", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17e3de4ba8f766be33d41bb94770ab30c2a8c646"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37fa6f8b12b9bcbd8fb663a6c1a6c5b98aa052fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37fa6f8b12b9bcbd8fb663a6c1a6c5b98aa052fe", "html_url": "https://github.com/rust-lang/rust/commit/37fa6f8b12b9bcbd8fb663a6c1a6c5b98aa052fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37fa6f8b12b9bcbd8fb663a6c1a6c5b98aa052fe/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31ae4f9fde9b23100c26e5642030128a7e1444ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/31ae4f9fde9b23100c26e5642030128a7e1444ef", "html_url": "https://github.com/rust-lang/rust/commit/31ae4f9fde9b23100c26e5642030128a7e1444ef"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b4c78df7415289210f4bb09c358acbb01551e97e", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37fa6f8b12b9bcbd8fb663a6c1a6c5b98aa052fe/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37fa6f8b12b9bcbd8fb663a6c1a6c5b98aa052fe/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=37fa6f8b12b9bcbd8fb663a6c1a6c5b98aa052fe", "patch": "@@ -2756,7 +2756,7 @@ impl<'tcx> Clean<Type> for Ty<'tcx> {\n                 let predicates_of = cx.tcx.predicates_of(def_id);\n                 let substs = cx.tcx.lift(&substs).unwrap();\n                 let bounds = predicates_of.instantiate(cx.tcx, substs);\n-                ImplTrait(bounds.predicates.into_iter().filter_map(|predicate| {\n+                ImplTrait(bounds.predicates.iter().filter_map(|predicate| {\n                     predicate.to_opt_poly_trait_ref().clean(cx)\n                 }).collect())\n             }"}]}