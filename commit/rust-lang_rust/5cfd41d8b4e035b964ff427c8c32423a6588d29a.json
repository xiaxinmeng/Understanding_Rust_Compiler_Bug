{"sha": "5cfd41d8b4e035b964ff427c8c32423a6588d29a", "node_id": "C_kwDOAAsO6NoAKDVjZmQ0MWQ4YjRlMDM1Yjk2NGZmNDI3YzhjMzI0MjNhNjU4OGQyOWE", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-17T12:12:27Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-17T12:12:27Z"}, "message": "Sync from rust 511364e7874dba9649a264100407e4bffe7b5425", "tree": {"sha": "3773728935b811a6f1e892d2391f970de057dbed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3773728935b811a6f1e892d2391f970de057dbed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cfd41d8b4e035b964ff427c8c32423a6588d29a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cfd41d8b4e035b964ff427c8c32423a6588d29a", "html_url": "https://github.com/rust-lang/rust/commit/5cfd41d8b4e035b964ff427c8c32423a6588d29a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cfd41d8b4e035b964ff427c8c32423a6588d29a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1cf90c4dc7eeae3055d6e1bafa3be5739dd471a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1cf90c4dc7eeae3055d6e1bafa3be5739dd471a", "html_url": "https://github.com/rust-lang/rust/commit/b1cf90c4dc7eeae3055d6e1bafa3be5739dd471a"}, {"sha": "e42bea9fdef30787709ddd1de9259717954e7bd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e42bea9fdef30787709ddd1de9259717954e7bd6", "html_url": "https://github.com/rust-lang/rust/commit/e42bea9fdef30787709ddd1de9259717954e7bd6"}], "stats": {"total": 23, "additions": 0, "deletions": 23}, "files": [{"sha": "1357b7be1e0959f5348833fe4b11ce18a71ca883", "filename": "src/num.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5cfd41d8b4e035b964ff427c8c32423a6588d29a/src%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cfd41d8b4e035b964ff427c8c32423a6588d29a/src%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnum.rs?ref=5cfd41d8b4e035b964ff427c8c32423a6588d29a", "patch": "@@ -170,14 +170,6 @@ pub(crate) fn codegen_checked_int_binop<'tcx>(\n     in_lhs: CValue<'tcx>,\n     in_rhs: CValue<'tcx>,\n ) -> CValue<'tcx> {\n-    if bin_op != BinOp::Shl && bin_op != BinOp::Shr {\n-        assert_eq!(\n-            in_lhs.layout().ty,\n-            in_rhs.layout().ty,\n-            \"checked int binop requires lhs and rhs of same type\"\n-        );\n-    }\n-\n     let lhs = in_lhs.load_scalar(fx);\n     let rhs = in_rhs.load_scalar(fx);\n \n@@ -271,21 +263,6 @@ pub(crate) fn codegen_checked_int_binop<'tcx>(\n                 _ => unreachable!(\"invalid non-integer type {}\", ty),\n             }\n         }\n-        BinOp::Shl => {\n-            let val = fx.bcx.ins().ishl(lhs, rhs);\n-            let ty = fx.bcx.func.dfg.value_type(val);\n-            let max_shift = i64::from(ty.bits()) - 1;\n-            let has_overflow = fx.bcx.ins().icmp_imm(IntCC::UnsignedGreaterThan, rhs, max_shift);\n-            (val, has_overflow)\n-        }\n-        BinOp::Shr => {\n-            let val =\n-                if !signed { fx.bcx.ins().ushr(lhs, rhs) } else { fx.bcx.ins().sshr(lhs, rhs) };\n-            let ty = fx.bcx.func.dfg.value_type(val);\n-            let max_shift = i64::from(ty.bits()) - 1;\n-            let has_overflow = fx.bcx.ins().icmp_imm(IntCC::UnsignedGreaterThan, rhs, max_shift);\n-            (val, has_overflow)\n-        }\n         _ => bug!(\"binop {:?} on checked int/uint lhs: {:?} rhs: {:?}\", bin_op, in_lhs, in_rhs),\n     };\n "}]}