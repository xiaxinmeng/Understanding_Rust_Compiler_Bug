{"sha": "5289bbece312fb6704febea1a95a601f0dd27b02", "node_id": "C_kwDOAAsO6NoAKDUyODliYmVjZTMxMmZiNjcwNGZlYmVhMWE5NWE2MDFmMGRkMjdiMDI", "commit": {"author": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-05-06T01:15:20Z"}, "committer": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-05-06T19:40:32Z"}, "message": "Expand validator to be more precise on checked binary ops", "tree": {"sha": "f5803a3a8687624535cb82e118e86ce1fff89fb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5803a3a8687624535cb82e118e86ce1fff89fb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5289bbece312fb6704febea1a95a601f0dd27b02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5289bbece312fb6704febea1a95a601f0dd27b02", "html_url": "https://github.com/rust-lang/rust/commit/5289bbece312fb6704febea1a95a601f0dd27b02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5289bbece312fb6704febea1a95a601f0dd27b02/comments", "author": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e209e85e39b4851c3ec122a45ddeabe318b2d522", "url": "https://api.github.com/repos/rust-lang/rust/commits/e209e85e39b4851c3ec122a45ddeabe318b2d522", "html_url": "https://github.com/rust-lang/rust/commit/e209e85e39b4851c3ec122a45ddeabe318b2d522"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "a790a72330597e0312482717e9d829b2b4f21071", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 41, "deletions": 3, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/5289bbece312fb6704febea1a95a601f0dd27b02/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5289bbece312fb6704febea1a95a601f0dd27b02/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=5289bbece312fb6704febea1a95a601f0dd27b02", "patch": "@@ -291,7 +291,7 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n                     ty::Array(..) | ty::Slice(..)\n                 );\n             }\n-            Rvalue::BinaryOp(op, vals) | Rvalue::CheckedBinaryOp(op, vals) => {\n+            Rvalue::BinaryOp(op, vals) => {\n                 use BinOp::*;\n                 let a = vals.0.ty(&self.body.local_decls, self.tcx);\n                 let b = vals.1.ty(&self.body.local_decls, self.tcx);\n@@ -355,17 +355,55 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n                         for x in [a, b] {\n                             check_kinds!(\n                                 x,\n-                                \"Cannot perform op on type {:?}\",\n+                                \"Cannot perform arithmetic on type {:?}\",\n                                 ty::Uint(..) | ty::Int(..) | ty::Float(..)\n                             )\n                         }\n                         if a != b {\n                             self.fail(\n                                 location,\n-                                format!(\"Cannot perform op on unequal types {:?} and {:?}\", a, b),\n+                                format!(\n+                                    \"Cannot perform arithmetic on unequal types {:?} and {:?}\",\n+                                    a, b\n+                                ),\n+                            );\n+                        }\n+                    }\n+                }\n+            }\n+            Rvalue::CheckedBinaryOp(op, vals) => {\n+                use BinOp::*;\n+                let a = vals.0.ty(&self.body.local_decls, self.tcx);\n+                let b = vals.1.ty(&self.body.local_decls, self.tcx);\n+                match op {\n+                    Add | Sub | Mul => {\n+                        for x in [a, b] {\n+                            check_kinds!(\n+                                x,\n+                                \"Cannot perform checked arithmetic on type {:?}\",\n+                                ty::Uint(..) | ty::Int(..)\n+                            )\n+                        }\n+                        if a != b {\n+                            self.fail(\n+                                location,\n+                                format!(\n+                                    \"Cannot perform checked arithmetic on unequal types {:?} and {:?}\",\n+                                    a, b\n+                                ),\n                             );\n                         }\n                     }\n+                    Shl | Shr => {\n+                        for x in [a, b] {\n+                            check_kinds!(\n+                                x,\n+                                \"Cannot perform checked shift on non-integer type {:?}\",\n+                                ty::Uint(..) | ty::Int(..)\n+                            )\n+                        }\n+                    }\n+                    _ => self.fail(location, format!(\"There is no checked version of {:?}\", op)),\n                 }\n             }\n             Rvalue::UnaryOp(op, operand) => {"}]}