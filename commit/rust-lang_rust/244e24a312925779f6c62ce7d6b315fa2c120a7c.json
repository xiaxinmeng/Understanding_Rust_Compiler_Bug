{"sha": "244e24a312925779f6c62ce7d6b315fa2c120a7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NGUyNGEzMTI5MjU3NzlmNmM2MmNlN2Q2YjMxNWZhMmMxMjBhN2M=", "commit": {"author": {"name": "Martin Husemann", "email": "martin@NetBSD.org", "date": "2018-05-02T08:00:33Z"}, "committer": {"name": "Martin Husemann", "email": "martin@NetBSD.org", "date": "2018-05-02T08:00:33Z"}, "message": "Add comments and unify guard page setup.\n\nWhile currently only NetBSD seems to be affected, all systems\nimplementing PAX MPROTECT in strict mode need this treatment,\nand it does not hurt others.", "tree": {"sha": "e676eac0067f91bdd3d808c7fdb22432a48636b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e676eac0067f91bdd3d808c7fdb22432a48636b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/244e24a312925779f6c62ce7d6b315fa2c120a7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/244e24a312925779f6c62ce7d6b315fa2c120a7c", "html_url": "https://github.com/rust-lang/rust/commit/244e24a312925779f6c62ce7d6b315fa2c120a7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/244e24a312925779f6c62ce7d6b315fa2c120a7c/comments", "author": {"login": "MartinHusemann", "id": 13184974, "node_id": "MDQ6VXNlcjEzMTg0OTc0", "avatar_url": "https://avatars.githubusercontent.com/u/13184974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinHusemann", "html_url": "https://github.com/MartinHusemann", "followers_url": "https://api.github.com/users/MartinHusemann/followers", "following_url": "https://api.github.com/users/MartinHusemann/following{/other_user}", "gists_url": "https://api.github.com/users/MartinHusemann/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinHusemann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinHusemann/subscriptions", "organizations_url": "https://api.github.com/users/MartinHusemann/orgs", "repos_url": "https://api.github.com/users/MartinHusemann/repos", "events_url": "https://api.github.com/users/MartinHusemann/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinHusemann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MartinHusemann", "id": 13184974, "node_id": "MDQ6VXNlcjEzMTg0OTc0", "avatar_url": "https://avatars.githubusercontent.com/u/13184974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinHusemann", "html_url": "https://github.com/MartinHusemann", "followers_url": "https://api.github.com/users/MartinHusemann/followers", "following_url": "https://api.github.com/users/MartinHusemann/following{/other_user}", "gists_url": "https://api.github.com/users/MartinHusemann/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinHusemann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinHusemann/subscriptions", "organizations_url": "https://api.github.com/users/MartinHusemann/orgs", "repos_url": "https://api.github.com/users/MartinHusemann/repos", "events_url": "https://api.github.com/users/MartinHusemann/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinHusemann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c2304ddc6d716883415ac883f02256db6318644", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c2304ddc6d716883415ac883f02256db6318644", "html_url": "https://github.com/rust-lang/rust/commit/7c2304ddc6d716883415ac883f02256db6318644"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "7fdecc9c0c026aab31787f19f6b7ed3d512706f5", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/244e24a312925779f6c62ce7d6b315fa2c120a7c/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/244e24a312925779f6c62ce7d6b315fa2c120a7c/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=244e24a312925779f6c62ce7d6b315fa2c120a7c", "patch": "@@ -326,23 +326,20 @@ pub mod guard {\n             // Reallocate the last page of the stack.\n             // This ensures SIGBUS will be raised on\n             // stack overflow.\n-            if cfg!(target_os = \"netbsd\") {\n-                let result = mmap(stackaddr, PAGE_SIZE, PROT_READ | PROT_WRITE,\n-                                   MAP_PRIVATE | MAP_ANON | MAP_FIXED, -1, 0);\n-                if result != stackaddr || result == MAP_FAILED {\n-                    panic!(\"failed to allocate a guard page\");\n-                }\n-                let result = mprotect(stackaddr, PAGE_SIZE, 0);\n+            // Systems which enforce strict PAX MPROTECT do not allow\n+            // to mprotect() a mapping with less restrictive permissions\n+            // than the initial mmap() used, so we mmap() here with\n+            // read/write permissions and only then mprotect() it to\n+            // no permissions at all. See issue #50313.\n+            let result = mmap(stackaddr, PAGE_SIZE, PROT_READ | PROT_WRITE,\n+                              MAP_PRIVATE | MAP_ANON | MAP_FIXED, -1, 0);\n+            if result != stackaddr || result == MAP_FAILED {\n+                panic!(\"failed to allocate a guard page\");\n+            }\n \n-                if result != 0 {\n-                    panic!(\"unable to protect the guard page\");\n-                }\n-            } else {\n-                let result = mmap(stackaddr, PAGE_SIZE, PROT_NONE,\n-                                  MAP_PRIVATE | MAP_ANON | MAP_FIXED, -1, 0);\n-                if result != stackaddr || result == MAP_FAILED {\n-                    panic!(\"failed to allocate a guard page\");\n-                }\n+            let result = mprotect(stackaddr, PAGE_SIZE, PROT_NONE);\n+            if result != 0 {\n+                panic!(\"failed to protect the guard page\");\n             }\n \n             let guardaddr = stackaddr as usize;"}]}