{"sha": "17121f2959ea3735c041c74b5959f9e7c4f84f03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MTIxZjI5NTllYTM3MzVjMDQxYzc0YjU5NTlmOWU3YzRmODRmMDM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-04T11:01:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-04T11:01:10Z"}, "message": "Rollup merge of #82740 - jyn514:proper-history, r=Mark-Simulacrum\n\nFix commit detected when using `download-rustc`\n\nOn reflection on the issue in https://github.com/rust-lang/rust/pull/79540#discussion_r572572280, I think the bug was actually using the `compiler/` filter, not using `--author=bors`. https://github.com/rust-lang/rust/commit/9a1d6174c925f54c923599e29b09d6855e6b3a78 has no CI artifacts because it was merged as part of a rollup:\n```\n$ curl -I https://ci-artifacts.rust-lang.org/rustc-builds/96e843ce6ae42e0aa519ba45e148269de347fd84/rust-std-nightly-x86_64-unknown-linux-gnu.tar.xz\nHTTP/2 404\n```\nSo 9a1d6174c925f54c923599e29b09d6855e6b3a78 is the correct commit to download, and that's what `--author=bors` does:\n\n$ git log --author=bors 4aec8a5da5547d6e1c24e99dad0003b7cac107f5\ncommit 9a1d6174c925f54c923599e29b09d6855e6b3a78\n\nIdeally it would look for \"the most recent bors commit not followed by a change to `compiler/`\", which would exclude things like documentation changes and avoid redownloading more than necessary, but\n- Redownloading isn't the end of the world,\n- That metric is hard to implement, and\n- Documentation-only or library-only changes are very rare anyway since they're usually rolled up with changes to the compiler.\n\nHelps with https://github.com/rust-lang/rust/issues/81930.\n\nr? `@Mark-Simulacrum`", "tree": {"sha": "3801669acbd38b7169af9c8c32d16e6328516769", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3801669acbd38b7169af9c8c32d16e6328516769"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17121f2959ea3735c041c74b5959f9e7c4f84f03", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgQL33CRBK7hj4Ov3rIwAAdHIIACfGQhKeHAUqAmGKjuaYGKXV\n8c+hjIifD/6Zsdbno8J42iwBf3R1Lx2qeOs5ivbOd3k2s311RjoZ9+91rXlUMdsD\nXhVsrQsIRL6xGNqanpHimy5nEzosEj34OGI8sSqY8KNpYgpLMOZdEHD1vsg/g3WE\nX8t0UgYrqgJohsGf5jwCgxqzaJ+2k7YQ9GgewrCJqS6+xv1puWAeRpQzlxBRUrFT\nfprDHwFurQec1SvHTBDjTRVVbkvAQMI3LP8gwfP3Ayuxz1rB1+G09NcGm1GbUQw+\ntdQLNwViPvSthGibnekw5uoxHqh2zkfLCHeJREiSOA22AwPmnSE/KHyj3VrmELU=\n=AksD\n-----END PGP SIGNATURE-----\n", "payload": "tree 3801669acbd38b7169af9c8c32d16e6328516769\nparent c3988713417ecde47e176920924517ae21b3fb3b\nparent a705a58fe953ce95fe482e081a7d843e0b2d9c06\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1614855670 +0900\ncommitter GitHub <noreply@github.com> 1614855670 +0900\n\nRollup merge of #82740 - jyn514:proper-history, r=Mark-Simulacrum\n\nFix commit detected when using `download-rustc`\n\nOn reflection on the issue in https://github.com/rust-lang/rust/pull/79540#discussion_r572572280, I think the bug was actually using the `compiler/` filter, not using `--author=bors`. https://github.com/rust-lang/rust/commit/9a1d6174c925f54c923599e29b09d6855e6b3a78 has no CI artifacts because it was merged as part of a rollup:\n```\n$ curl -I https://ci-artifacts.rust-lang.org/rustc-builds/96e843ce6ae42e0aa519ba45e148269de347fd84/rust-std-nightly-x86_64-unknown-linux-gnu.tar.xz\nHTTP/2 404\n```\nSo 9a1d6174c925f54c923599e29b09d6855e6b3a78 is the correct commit to download, and that's what `--author=bors` does:\n\n$ git log --author=bors 4aec8a5da5547d6e1c24e99dad0003b7cac107f5\ncommit 9a1d6174c925f54c923599e29b09d6855e6b3a78\n\nIdeally it would look for \"the most recent bors commit not followed by a change to `compiler/`\", which would exclude things like documentation changes and avoid redownloading more than necessary, but\n- Redownloading isn't the end of the world,\n- That metric is hard to implement, and\n- Documentation-only or library-only changes are very rare anyway since they're usually rolled up with changes to the compiler.\n\nHelps with https://github.com/rust-lang/rust/issues/81930.\n\nr? `@Mark-Simulacrum`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17121f2959ea3735c041c74b5959f9e7c4f84f03", "html_url": "https://github.com/rust-lang/rust/commit/17121f2959ea3735c041c74b5959f9e7c4f84f03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17121f2959ea3735c041c74b5959f9e7c4f84f03/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3988713417ecde47e176920924517ae21b3fb3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3988713417ecde47e176920924517ae21b3fb3b", "html_url": "https://github.com/rust-lang/rust/commit/c3988713417ecde47e176920924517ae21b3fb3b"}, {"sha": "a705a58fe953ce95fe482e081a7d843e0b2d9c06", "url": "https://api.github.com/repos/rust-lang/rust/commits/a705a58fe953ce95fe482e081a7d843e0b2d9c06", "html_url": "https://github.com/rust-lang/rust/commit/a705a58fe953ce95fe482e081a7d843e0b2d9c06"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "3e7d1d54f128482cfc0778039a3eeaa58f1f37fd", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/17121f2959ea3735c041c74b5959f9e7c4f84f03/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/17121f2959ea3735c041c74b5959f9e7c4f84f03/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=17121f2959ea3735c041c74b5959f9e7c4f84f03", "patch": "@@ -647,9 +647,8 @@ def maybe_download_rustc(self):\n         compiler = \"{}/compiler/\".format(top_level)\n \n         # Look for a version to compare to based on the current commit.\n-        # Ideally this would just use `merge-base`, but on beta and stable branches that wouldn't\n-        # come up with any commits, so hack it and use `author=bors` instead.\n-        merge_base = [\"git\", \"log\", \"--author=bors\", \"--pretty=%H\", \"-n1\", \"--\", compiler]\n+        # Only commits merged by bors will have CI artifacts.\n+        merge_base = [\"git\", \"log\", \"--author=bors\", \"--pretty=%H\", \"-n1\"]\n         commit = subprocess.check_output(merge_base, universal_newlines=True).strip()\n \n         # Warn if there were changes to the compiler since the ancestor commit."}]}