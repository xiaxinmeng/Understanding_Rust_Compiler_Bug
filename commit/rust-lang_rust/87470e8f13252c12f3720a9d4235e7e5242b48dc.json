{"sha": "87470e8f13252c12f3720a9d4235e7e5242b48dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3NDcwZThmMTMyNTJjMTJmMzcyMGE5ZDQyMzVlN2U1MjQyYjQ4ZGM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-14T13:36:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-14T13:36:56Z"}, "message": "Merge #4456\n\n4456: Sort preselect items on top r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "40a5942523ab3e7f86cf3829c40cc752fc3c8ce1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40a5942523ab3e7f86cf3829c40cc752fc3c8ce1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87470e8f13252c12f3720a9d4235e7e5242b48dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJevUl4CRBK7hj4Ov3rIwAAdHIIAHmPFBfajPuH11KAd5awm7dK\nvt6aIQ898JB51XymDw5qbEZbTWut0xPxyrBClnfY/6OfTZnDjFI3XV4aZqsq56pH\nFJys875vTeuF9DwB0uoC+fBIIyRojiDhHvXT3NYzUBT2PkuArZoTAnpPxH4AEfw7\nJvqL7gL2jn3xMP9Qevm6mWjx4CND2/c8D79AIAeTxT9+cSPhBE2VtMUPcrHzgXgx\naRbhsPH0lwfQ8xgCmPD0cK6eeoSkKiLbTF4WBJElAFm4W2FINOVuuuYOyLPHOhIG\nrSVvOoIqJ+9qxw9eAiIJ1v3PzSr/SEwkGeHAqXfhYa2HT/bw1fBt2FyqowLgpAk=\n=aLFC\n-----END PGP SIGNATURE-----\n", "payload": "tree 40a5942523ab3e7f86cf3829c40cc752fc3c8ce1\nparent d7c451ed9523039d96daa3facfd0eb9137afbaed\nparent acedad8134669b3deba48e59d28e62334ae5c4d4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1589463416 +0000\ncommitter GitHub <noreply@github.com> 1589463416 +0000\n\nMerge #4456\n\n4456: Sort preselect items on top r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87470e8f13252c12f3720a9d4235e7e5242b48dc", "html_url": "https://github.com/rust-lang/rust/commit/87470e8f13252c12f3720a9d4235e7e5242b48dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87470e8f13252c12f3720a9d4235e7e5242b48dc/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7c451ed9523039d96daa3facfd0eb9137afbaed", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7c451ed9523039d96daa3facfd0eb9137afbaed", "html_url": "https://github.com/rust-lang/rust/commit/d7c451ed9523039d96daa3facfd0eb9137afbaed"}, {"sha": "acedad8134669b3deba48e59d28e62334ae5c4d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/acedad8134669b3deba48e59d28e62334ae5c4d4", "html_url": "https://github.com/rust-lang/rust/commit/acedad8134669b3deba48e59d28e62334ae5c4d4"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "a8e2e535f9ab17c86d0f71bac4d2ef8b40f3e4ee", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/87470e8f13252c12f3720a9d4235e7e5242b48dc/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87470e8f13252c12f3720a9d4235e7e5242b48dc/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=87470e8f13252c12f3720a9d4235e7e5242b48dc", "patch": "@@ -164,27 +164,27 @@ pub(crate) fn completion_item(\n         additional_text_edits: Some(additional_text_edits),\n         documentation: completion_item.documentation().map(documentation),\n         deprecated: Some(completion_item.deprecated()),\n-        command: if completion_item.trigger_call_info() {\n-            let cmd = lsp_types::Command {\n-                title: \"triggerParameterHints\".into(),\n-                command: \"editor.action.triggerParameterHints\".into(),\n-                arguments: None,\n-            };\n-            Some(cmd)\n-        } else {\n-            None\n-        },\n         ..Default::default()\n     };\n \n     if completion_item.score().is_some() {\n-        res.preselect = Some(true)\n+        res.preselect = Some(true);\n+        // HACK: sort preselect items first\n+        res.sort_text = Some(format!(\" {}\", completion_item.label()));\n     }\n \n     if completion_item.deprecated() {\n         res.tags = Some(vec![lsp_types::CompletionItemTag::Deprecated])\n     }\n \n+    if completion_item.trigger_call_info() {\n+        res.command = Some(lsp_types::Command {\n+            title: \"triggerParameterHints\".into(),\n+            command: \"editor.action.triggerParameterHints\".into(),\n+            arguments: None,\n+        });\n+    }\n+\n     res.insert_text_format = Some(insert_text_format(completion_item.insert_text_format()));\n \n     res"}]}