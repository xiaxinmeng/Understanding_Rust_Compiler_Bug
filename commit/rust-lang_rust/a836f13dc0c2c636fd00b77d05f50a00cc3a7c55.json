{"sha": "a836f13dc0c2c636fd00b77d05f50a00cc3a7c55", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MzZmMTNkYzBjMmM2MzZmZDAwYjc3ZDA1ZjUwYTAwY2MzYTdjNTU=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-10-08T14:54:21Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-10-09T11:22:43Z"}, "message": "Documentation & address minor point.", "tree": {"sha": "08c5e1773750cd0adb91f625cfdfaaced66a288c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08c5e1773750cd0adb91f625cfdfaaced66a288c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a836f13dc0c2c636fd00b77d05f50a00cc3a7c55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a836f13dc0c2c636fd00b77d05f50a00cc3a7c55", "html_url": "https://github.com/rust-lang/rust/commit/a836f13dc0c2c636fd00b77d05f50a00cc3a7c55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a836f13dc0c2c636fd00b77d05f50a00cc3a7c55/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71addded64548ff845d9ef3852a2c1d2592ae39f", "url": "https://api.github.com/repos/rust-lang/rust/commits/71addded64548ff845d9ef3852a2c1d2592ae39f", "html_url": "https://github.com/rust-lang/rust/commit/71addded64548ff845d9ef3852a2c1d2592ae39f"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "1465e594227495451c6e281048e77bf4e01066fa", "filename": "src/libstd/rand/mod.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a836f13dc0c2c636fd00b77d05f50a00cc3a7c55/src%2Flibstd%2Frand%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a836f13dc0c2c636fd00b77d05f50a00cc3a7c55/src%2Flibstd%2Frand%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fmod.rs?ref=a836f13dc0c2c636fd00b77d05f50a00cc3a7c55", "patch": "@@ -535,8 +535,9 @@ pub trait SeedableRng<Seed>: Rng {\n ///\n /// This is a very expensive operation as it has to read randomness\n /// from the operating system and use this in an expensive seeding\n-/// operation. If one does not require high performance, `task_rng`\n-/// and/or `random` may be more appropriate.\n+/// operation. If one does not require high performance generation of\n+/// random numbers, `task_rng` and/or `random` may be more\n+/// appropriate.\n pub fn rng() -> StdRng {\n     StdRng::new()\n }\n@@ -596,6 +597,9 @@ impl<'self> SeedableRng<&'self [uint]> for StdRng {\n /// consideration for cryptography or security. If you require a specifically\n /// seeded `Rng` for consistency over time you should pick one algorithm and\n /// create the `Rng` yourself.\n+///\n+/// This will read randomness from the operating system to seed the\n+/// generator.\n pub fn weak_rng() -> XorShiftRng {\n     XorShiftRng::new()\n }\n@@ -667,8 +671,8 @@ impl XorShiftRng {\n                 break;\n             }\n         }\n-        let s: &[u32, ..4] = unsafe { cast::transmute(&s) };\n-        SeedableRng::from_seed(*s)\n+        let s: [u32, ..4] = unsafe { cast::transmute(s) };\n+        SeedableRng::from_seed(s)\n     }\n }\n "}]}