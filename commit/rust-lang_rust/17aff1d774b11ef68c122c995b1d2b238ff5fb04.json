{"sha": "17aff1d774b11ef68c122c995b1d2b238ff5fb04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3YWZmMWQ3NzRiMTFlZjY4YzEyMmM5OTViMWQyYjIzOGZmNWZiMDQ=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-05-18T20:56:25Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-06-07T05:42:45Z"}, "message": "Fix cargo late bound region mismatch ICE", "tree": {"sha": "2f8ab1d364146e2b9c246223e82ac4c23e24a817", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f8ab1d364146e2b9c246223e82ac4c23e24a817"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17aff1d774b11ef68c122c995b1d2b238ff5fb04", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJbGMXZAAoJELb6Bqbg4mZbdx0P/3DW6zAMnGcLzA/SYtUfMuEC\n7EL8u4vQdNGtAbnheGLsW0yWy/YGddNShEppHQDGU9eceSDVZ3ZmJrCCYUimoIKF\nApSezEoH8nR+LvQtN4KTMI3unLtuyVs/hcbyWarohcOORYHLf4Z4aesAdzM08PLf\ngfirEJhtQfhWhd44eO3SX2bFfhr7VMtG+kYyz5U+sjQHQmilDjRacQT4a+QqxEzk\n0faEe/jrcpc/wL3rbxfZEGWLIc6rHSfvda7onqdMxySynSW7WpPZaT3PunnPYLSJ\nl5GgkhaSsqFnyvydV2V/PLHTsEF4uCGDmPVBVIr6FR3B9OmVPhEXDrsc1Qy/R6Ze\nBWMcs6JWg0olpT4oRHvdF/7SzF4aelqBLrDya1OHWAL5srSfNvW3aUYw/e4mKawt\nfkqVBS65Tw0NZK6Km/iZfzk9Olk+M4jauFcvTesbOuYafJCEzuWsRp5IFWdWlGQj\nDIfJS4F5PpX+mSafm8oazrOKaRbnGnrFhBCBKPYZ8M/NaZ73fiA3Zlr0saSHSvv7\nmsDpUhgMtIyzLgFzxvEM/D1ETScfH3Zi4zXVCCWBC+i/cRYscKRLhsnK7Ol9ctQd\nTPOH2SzAnf1y5tPt3uStuS2WIxt77h2j6yteI/0CQJzrVe/bfoDfZ9A+VgGjweHj\nmXo+zhoODj5quigxo+cY\n=r661\n-----END PGP SIGNATURE-----", "payload": "tree 2f8ab1d364146e2b9c246223e82ac4c23e24a817\nparent 1e1b4e26ea4bf842edbda888eecfc40c02b60d73\nauthor Philipp Hansch <dev@phansch.net> 1526676985 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1528350165 +0200\n\nFix cargo late bound region mismatch ICE\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17aff1d774b11ef68c122c995b1d2b238ff5fb04", "html_url": "https://github.com/rust-lang/rust/commit/17aff1d774b11ef68c122c995b1d2b238ff5fb04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17aff1d774b11ef68c122c995b1d2b238ff5fb04/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e1b4e26ea4bf842edbda888eecfc40c02b60d73", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e1b4e26ea4bf842edbda888eecfc40c02b60d73", "html_url": "https://github.com/rust-lang/rust/commit/1e1b4e26ea4bf842edbda888eecfc40c02b60d73"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "a49464b021a7a5c887572da0a55f1b5bc0030e3b", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/17aff1d774b11ef68c122c995b1d2b238ff5fb04/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17aff1d774b11ef68c122c995b1d2b238ff5fb04/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=17aff1d774b11ef68c122c995b1d2b238ff5fb04", "patch": "@@ -8,7 +8,7 @@ use rustc::hir::map::Node;\n use rustc::lint::{LateContext, Level, Lint, LintContext};\n use rustc::session::Session;\n use rustc::traits;\n-use rustc::ty::{self, Ty, TyCtxt, layout::{self, IntegerExt}, subst::Kind};\n+use rustc::ty::{self, Binder, Ty, TyCtxt, layout::{self, IntegerExt}, subst::Kind};\n use rustc_errors::{Applicability, CodeSuggestion, Substitution, SubstitutionPart};\n use std::borrow::Cow;\n use std::env;\n@@ -869,10 +869,14 @@ pub fn return_ty<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, fn_item: NodeId) -> Ty<'t\n }\n \n /// Check if two types are the same.\n+///\n+/// This discards any lifetime annotations, too.\n // FIXME: this works correctly for lifetimes bounds (`for <'a> Foo<'a>` == `for\n // <'b> Foo<'b>` but\n // not for type parameters.\n pub fn same_tys<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, a: Ty<'tcx>, b: Ty<'tcx>) -> bool {\n+    let a = cx.tcx.erase_late_bound_regions(&Binder::bind(a));\n+    let b = cx.tcx.erase_late_bound_regions(&Binder::bind(b));\n     cx.tcx\n         .infer_ctxt()\n         .enter(|infcx| infcx.can_eq(cx.param_env, a, b).is_ok())"}, {"sha": "c6d9bb4a276e118200ecbce8867945ef4834f05c", "filename": "tests/run-pass/ice-2774.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/17aff1d774b11ef68c122c995b1d2b238ff5fb04/tests%2Frun-pass%2Fice-2774.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17aff1d774b11ef68c122c995b1d2b238ff5fb04/tests%2Frun-pass%2Fice-2774.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2774.rs?ref=17aff1d774b11ef68c122c995b1d2b238ff5fb04", "patch": "@@ -0,0 +1,31 @@\n+use std::collections::HashSet;\n+\n+// See https://github.com/rust-lang-nursery/rust-clippy/issues/2774\n+\n+#[derive(Eq, PartialEq, Debug, Hash)]\n+pub struct Bar {\n+    foo: Foo,\n+}\n+\n+#[derive(Eq, PartialEq, Debug, Hash)]\n+pub struct Foo {}\n+\n+#[allow(implicit_hasher)]\n+// This should not cause a 'cannot relate bound region' ICE\n+pub fn add_barfoos_to_foos<'a>(bars: &HashSet<&'a Bar>) {\n+    let mut foos = HashSet::new();\n+    foos.extend(\n+        bars.iter().map(|b| &b.foo)\n+    );\n+}\n+\n+#[allow(implicit_hasher)]\n+// Also this should not cause a 'cannot relate bound region' ICE\n+pub fn add_barfoos_to_foos2(bars: &HashSet<&Bar>) {\n+    let mut foos = HashSet::new();\n+    foos.extend(\n+        bars.iter().map(|b| &b.foo)\n+    );\n+}\n+\n+fn main() {}"}]}