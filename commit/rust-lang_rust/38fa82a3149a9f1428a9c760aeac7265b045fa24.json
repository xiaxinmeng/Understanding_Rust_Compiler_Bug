{"sha": "38fa82a3149a9f1428a9c760aeac7265b045fa24", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZmE4MmEzMTQ5YTlmMTQyOGE5Yzc2MGFlYWM3MjY1YjA0NWZhMjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-08-20T01:14:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-20T01:14:53Z"}, "message": "Auto merge of #33922 - estebank:doc-comment, r=alexcrichton\n\nSpecific error message for missplaced doc comments\n\nIdentify when documetation comments have been missplaced in the following places:\n\n * After a struct element:\n\n    ```rust\n    // file.rs:\n    struct X {\n        a: u8 /** document a */,\n    }\n    ```\n\n    ```bash\n    $ rustc file.rs\n    file.rs:2:11: 2:28 error: found documentation comment that doesn't\n    document anything\n    file.rs:2     a: u8 /** document a */,\n                        ^~~~~~~~~~~~~~~~~\n    file.rs:2:11: 2:28 help: doc comments must come before what they document,\n    maybe a comment was intended with `//`?\n    ```\n\n * As the last line of a struct:\n\n    ```rust\n    // file.rs:\n    struct X {\n        a: u8,\n        /// incorrect documentation\n    }\n    ```\n\n    ```bash\n    $ rustc file.rs\n    file.rs:3:5: 3:27 error: found a documentation comment that doesn't\n    document anything\n    file.rs:3     /// incorrect documentation\n                  ^~~~~~~~~~~~~~~~~~~~~~\n    file.rs:3:5: 3:27 help: doc comments must come before what they document,\n    maybe a comment was intended with `//`?\n    ```\n\n * As the last line of a `fn`:\n\n    ```rust\n    // file.rs:\n    fn main() {\n        let x = 1;\n        /// incorrect documentation\n    }\n    ```\n\n    ```bash\n    $ rustc file.rs\n    file.rs:3:5: 3:27 error: found a documentation comment that doesn't\n    document anything\n    file.rs:3     /// incorrect documentation\n                  ^~~~~~~~~~~~~~~~~~~~~~\n    file.rs:3:5: 3:27 help: doc comments must come before what they document,\n    maybe a comment was intended with `//`?\n    ```\n\nFix #27429, #30322", "tree": {"sha": "185e904d34c00d91e6b2631dc8ba96efc0073372", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/185e904d34c00d91e6b2631dc8ba96efc0073372"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38fa82a3149a9f1428a9c760aeac7265b045fa24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38fa82a3149a9f1428a9c760aeac7265b045fa24", "html_url": "https://github.com/rust-lang/rust/commit/38fa82a3149a9f1428a9c760aeac7265b045fa24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38fa82a3149a9f1428a9c760aeac7265b045fa24/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f883b0bbab6c433eb7b7042b605b4339022c563a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f883b0bbab6c433eb7b7042b605b4339022c563a", "html_url": "https://github.com/rust-lang/rust/commit/f883b0bbab6c433eb7b7042b605b4339022c563a"}, {"sha": "c8498cc2c27b699436c5f3d3759695926ee0c825", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8498cc2c27b699436c5f3d3759695926ee0c825", "html_url": "https://github.com/rust-lang/rust/commit/c8498cc2c27b699436c5f3d3759695926ee0c825"}], "stats": {"total": 189, "additions": 169, "deletions": 20}, "files": [{"sha": "4b3e53d931f136541dfc37a8472d665bc80bf858", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=38fa82a3149a9f1428a9c760aeac7265b045fa24", "patch": "@@ -564,6 +564,15 @@ impl Handler {\n         self.bump_err_count();\n         self.panic_if_treat_err_as_bug();\n     }\n+    pub fn mut_span_err<'a, S: Into<MultiSpan>>(&'a self,\n+                                                sp: S,\n+                                                msg: &str)\n+                                                -> DiagnosticBuilder<'a> {\n+        let mut result = DiagnosticBuilder::new(self, Level::Error, msg);\n+        result.set_span(sp);\n+        self.bump_err_count();\n+        result\n+    }\n     pub fn span_err_with_code<S: Into<MultiSpan>>(&self, sp: S, msg: &str, code: &str) {\n         self.emit_with_code(&sp.into(), msg, code, Error);\n         self.bump_err_count();"}, {"sha": "9443df6321bd045a943870bb9af7a46db54ef2b4", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 36, "deletions": 16, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=38fa82a3149a9f1428a9c760aeac7265b045fa24", "patch": "@@ -520,12 +520,21 @@ impl<'a> Parser<'a> {\n                 self.bug(\"ident interpolation not converted to real token\");\n             }\n             _ => {\n-                let mut err = self.fatal(&format!(\"expected identifier, found `{}`\",\n-                                                  self.this_token_to_string()));\n-                if self.token == token::Underscore {\n-                    err.note(\"`_` is a wildcard pattern, not an identifier\");\n-                }\n-                Err(err)\n+                let last_token = self.last_token.clone().map(|t| *t);\n+                Err(match last_token {\n+                    Some(token::DocComment(_)) => self.span_fatal_help(self.last_span,\n+                        \"found a documentation comment that doesn't document anything\",\n+                        \"doc comments must come before what they document, maybe a comment was \\\n+                        intended with `//`?\"),\n+                    _ => {\n+                        let mut err = self.fatal(&format!(\"expected identifier, found `{}`\",\n+                                                          self.this_token_to_string()));\n+                        if self.token == token::Underscore {\n+                            err.note(\"`_` is a wildcard pattern, not an identifier\");\n+                        }\n+                        err\n+                    }\n+                })\n             }\n         }\n     }\n@@ -927,6 +936,7 @@ impl<'a> Parser<'a> {\n         // Stash token for error recovery (sometimes; clone is not necessarily cheap).\n         self.last_token = if self.token.is_ident() ||\n                           self.token.is_path() ||\n+                          self.token.is_doc_comment() ||\n                           self.token == token::Comma {\n             Some(Box::new(self.token.clone()))\n         } else {\n@@ -1018,6 +1028,11 @@ impl<'a> Parser<'a> {\n     pub fn span_err(&self, sp: Span, m: &str) {\n         self.sess.span_diagnostic.span_err(sp, m)\n     }\n+    pub fn span_err_help(&self, sp: Span, m: &str, h: &str) {\n+        let mut err = self.sess.span_diagnostic.mut_span_err(sp, m);\n+        err.help(h);\n+        err.emit();\n+    }\n     pub fn span_bug(&self, sp: Span, m: &str) -> ! {\n         self.sess.span_diagnostic.span_bug(sp, m)\n     }\n@@ -4021,8 +4036,14 @@ impl<'a> Parser<'a> {\n                 None => {\n                     let unused_attrs = |attrs: &[_], s: &mut Self| {\n                         if attrs.len() > 0 {\n-                            s.span_err(s.span,\n-                                \"expected statement after outer attribute\");\n+                            let last_token = s.last_token.clone().map(|t| *t);\n+                            match last_token {\n+                                Some(token::DocComment(_)) => s.span_err_help(s.last_span,\n+                                    \"found a documentation comment that doesn't document anything\",\n+                                    \"doc comments must come before what they document, maybe a \\\n+                                    comment was intended with `//`?\"),\n+                                _ => s.span_err(s.span, \"expected statement after outer attribute\"),\n+                            }\n                         }\n                     };\n \n@@ -5127,14 +5148,13 @@ impl<'a> Parser<'a> {\n                 self.bump();\n             }\n             token::CloseDelim(token::Brace) => {}\n-            _ => {\n-                let span = self.span;\n-                let token_str = self.this_token_to_string();\n-                return Err(self.span_fatal_help(span,\n-                                     &format!(\"expected `,`, or `}}`, found `{}`\",\n-                                             token_str),\n-                                     \"struct fields should be separated by commas\"))\n-            }\n+            token::DocComment(_) => return Err(self.span_fatal_help(self.span,\n+                        \"found a documentation comment that doesn't document anything\",\n+                        \"doc comments must come before what they document, maybe a comment was \\\n+                        intended with `//`?\")),\n+            _ => return Err(self.span_fatal_help(self.span,\n+                    &format!(\"expected `,`, or `}}`, found `{}`\", self.this_token_to_string()),\n+                    \"struct fields should be separated by commas\")),\n         }\n         Ok(a_var)\n     }"}, {"sha": "dc0fb02ea45d9dc32dee323fa114dcb620313b0c", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=38fa82a3149a9f1428a9c760aeac7265b045fa24", "patch": "@@ -203,7 +203,7 @@ impl Token {\n     pub fn is_lit(&self) -> bool {\n         match *self {\n             Literal(_, _) => true,\n-            _          => false,\n+            _             => false,\n         }\n     }\n \n@@ -215,6 +215,14 @@ impl Token {\n         }\n     }\n \n+    /// Returns `true` if the token is a documentation comment.\n+    pub fn is_doc_comment(&self) -> bool {\n+        match *self {\n+            DocComment(..)   => true,\n+            _                => false,\n+        }\n+    }\n+\n     /// Returns `true` if the token is interpolated.\n     pub fn is_interpolated(&self) -> bool {\n         match *self {"}, {"sha": "1aa6af5b78f5b8c0ba88d92a15fb346fbe55188c", "filename": "src/test/parse-fail/doc-after-struct-field.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-after-struct-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-after-struct-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fdoc-after-struct-field.rs?ref=38fa82a3149a9f1428a9c760aeac7265b045fa24", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z continue-parse-after-error\n+struct X {\n+    a: u8 /** document a */,\n+    //~^ ERROR found a documentation comment that doesn't document anything\n+    //~| HELP maybe a comment was intended\n+}\n+\n+fn main() {\n+    let y = X {a = 1};\n+}"}, {"sha": "70da47ba9b4f05305020f6e4a1428ed800687986", "filename": "src/test/parse-fail/doc-before-extern-rbrace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-extern-rbrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-extern-rbrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fdoc-before-extern-rbrace.rs?ref=38fa82a3149a9f1428a9c760aeac7265b045fa24", "patch": "@@ -12,5 +12,5 @@\n \n extern {\n     /// hi\n+    //~^ ERROR expected item after doc comment\n }\n-//~^^ ERROR expected item after doc comment"}, {"sha": "bcf32612c8f4c0829420596c36d66e177276cabe", "filename": "src/test/parse-fail/doc-before-fn-rbrace.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-fn-rbrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-fn-rbrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fdoc-before-fn-rbrace.rs?ref=38fa82a3149a9f1428a9c760aeac7265b045fa24", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z continue-parse-after-error\n+fn main() {\n+    /// document\n+    //~^ ERROR found a documentation comment that doesn't document anything\n+    //~| HELP maybe a comment was intended\n+}"}, {"sha": "8f1fad91b1f99e2cfdd8865d252902aeb27c8152", "filename": "src/test/parse-fail/doc-before-identifier.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fdoc-before-identifier.rs?ref=38fa82a3149a9f1428a9c760aeac7265b045fa24", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z continue-parse-after-error\n+fn /// document\n+foo() {}\n+//~^^ ERROR expected identifier, found `/// document`\n+\n+fn main() {\n+    foo();\n+}"}, {"sha": "d38d1876384a88f440f045afd23123c356899216", "filename": "src/test/parse-fail/doc-before-mod-rbrace.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-mod-rbrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-mod-rbrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fdoc-before-mod-rbrace.rs?ref=38fa82a3149a9f1428a9c760aeac7265b045fa24", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z continue-parse-after-error\n+mod Foo {\n+    /// document\n+    //~^ ERROR expected item after doc comment\n+}"}, {"sha": "48ea2b5aea12c92d26d3cd2e4f115b77d1c9bf34", "filename": "src/test/parse-fail/doc-before-rbrace.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-rbrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-rbrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fdoc-before-rbrace.rs?ref=38fa82a3149a9f1428a9c760aeac7265b045fa24", "patch": "@@ -12,5 +12,6 @@\n \n fn main() {\n     println!(\"Hi\"); /// hi\n+    //~^ ERROR found a documentation comment that doesn't document anything\n+    //~| HELP maybe a comment was intended\n }\n-//~^ ERROR expected statement"}, {"sha": "71104b8caae1952f8cebbcdbb8478075efa6d08a", "filename": "src/test/parse-fail/doc-before-semi.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fdoc-before-semi.rs?ref=38fa82a3149a9f1428a9c760aeac7265b045fa24", "patch": "@@ -12,6 +12,7 @@\n \n fn main() {\n     /// hi\n+    //~^ ERROR found a documentation comment that doesn't document anything\n+    //~| HELP maybe a comment was intended\n     ;\n-    //~^ ERROR expected statement\n }"}, {"sha": "5ba83190c8e506df5eb75e7dfabd2227db47cee7", "filename": "src/test/parse-fail/doc-before-struct-rbrace-1.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-struct-rbrace-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-struct-rbrace-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fdoc-before-struct-rbrace-1.rs?ref=38fa82a3149a9f1428a9c760aeac7265b045fa24", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z continue-parse-after-error\n+struct X {\n+    a: u8,\n+    /// document\n+    //~^ ERROR found a documentation comment that doesn't document anything\n+    //~| HELP maybe a comment was intended\n+}\n+\n+fn main() {\n+    let y = X {a = 1};\n+}"}, {"sha": "643e4aa17a1ac571796e605bd4e1b7ea744b57b0", "filename": "src/test/parse-fail/doc-before-struct-rbrace-2.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-struct-rbrace-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fa82a3149a9f1428a9c760aeac7265b045fa24/src%2Ftest%2Fparse-fail%2Fdoc-before-struct-rbrace-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fdoc-before-struct-rbrace-2.rs?ref=38fa82a3149a9f1428a9c760aeac7265b045fa24", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z continue-parse-after-error\n+struct X {\n+    a: u8 /// document\n+    //~^ ERROR found a documentation comment that doesn't document anything\n+    //~| HELP maybe a comment was intended\n+}\n+\n+fn main() {\n+    let y = X {a = 1};\n+}"}]}