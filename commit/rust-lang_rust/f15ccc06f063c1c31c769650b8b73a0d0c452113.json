{"sha": "f15ccc06f063c1c31c769650b8b73a0d0c452113", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNWNjYzA2ZjA2M2MxYzMxYzc2OTY1MGI4YjczYTBkMGM0NTIxMTM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-20T10:37:21Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-21T00:32:42Z"}, "message": "tutorial: Update for moves based on type\n\n/cc: #4217", "tree": {"sha": "b7b6c020b47edb388eeffc3fce517539d3a2be73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7b6c020b47edb388eeffc3fce517539d3a2be73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f15ccc06f063c1c31c769650b8b73a0d0c452113", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f15ccc06f063c1c31c769650b8b73a0d0c452113", "html_url": "https://github.com/rust-lang/rust/commit/f15ccc06f063c1c31c769650b8b73a0d0c452113", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f15ccc06f063c1c31c769650b8b73a0d0c452113/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41870da5ad9d995d915ff24560ce269f8fa79690", "url": "https://api.github.com/repos/rust-lang/rust/commits/41870da5ad9d995d915ff24560ce269f8fa79690", "html_url": "https://github.com/rust-lang/rust/commit/41870da5ad9d995d915ff24560ce269f8fa79690"}], "stats": {"total": 28, "additions": 9, "deletions": 19}, "files": [{"sha": "11fcf360e4609c9361b217557e8851d95d1c6c09", "filename": "doc/tutorial.md", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f15ccc06f063c1c31c769650b8b73a0d0c452113/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/f15ccc06f063c1c31c769650b8b73a0d0c452113/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=f15ccc06f063c1c31c769650b8b73a0d0c452113", "patch": "@@ -1124,13 +1124,16 @@ _exchange heap_, where their uniquely-owned nature allows tasks to\n exchange them efficiently.\n \n Because owned boxes are uniquely owned, copying them requires allocating\n-a new owned box and duplicating the contents. Copying owned boxes\n-is expensive so the compiler will complain if you do so without writing\n-the word `copy`.\n+a new owned box and duplicating the contents.\n+Instead, owned boxes are _moved_ by default, transferring ownership,\n+and deinitializing the previously owning variable.\n+Any attempt to access a variable after the value has been moved out\n+will result in a compile error.\n \n ~~~~\n let x = ~10;\n-let y = x; // error: copying a non-implicitly copyable type\n+// Move x to y, deinitializing x\n+let y = x;\n ~~~~\n \n If you really want to copy an owned box you must say so explicitly.\n@@ -1143,19 +1146,6 @@ let z = *x + *y;\n assert z == 20;\n ~~~~\n \n-This is where the 'move' operator comes in. It is similar to `copy`,\n-but it de-initializes its source. Thus, the owned box can move from\n-`x` to `y`, without violating the constraint that it only has a single\n-owner (using assignment instead of the move operator would, in\n-principle, copy the box).\n-\n-~~~~ {.xfail-test}\n-let x = ~10;\n-let y = move x;\n-\n-let z = *x + *y; // would cause an error: use of moved variable: `x`\n-~~~~\n-\n Owned boxes, when they do not contain any managed boxes, can be sent\n to other tasks. The sending task will give up ownership of the box,\n and won't be able to access it afterwards. The receiving task will\n@@ -1360,7 +1350,7 @@ let your_crayons = ~[BananaMania, Beaver, Bittersweet];\n let our_crayons = my_crayons + your_crayons;\n \n // += will append to a vector, provided it lives in a mutable slot\n-let mut my_crayons = move my_crayons;\n+let mut my_crayons = my_crayons;\n my_crayons += your_crayons;\n ~~~~\n \n@@ -1899,7 +1889,7 @@ fn map<T, U>(vector: &[T], function: fn(v: &T) -> U) -> ~[U] {\n     for vec::each(vector) |element| {\n         accumulator.push(function(element));\n     }\n-    return (move accumulator);\n+    return accumulator;\n }\n ~~~~\n "}]}