{"sha": "c3aec3056e3c88bfc63db5cd4dc24624be7c576a", "node_id": "C_kwDOAAsO6NoAKGMzYWVjMzA1NmUzYzg4YmZjNjNkYjVjZDRkYzI0NjI0YmU3YzU3NmE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-05T09:26:45Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-05T09:26:45Z"}, "message": "Add a helper method with an explicit name instead of hand rolling a match 3x", "tree": {"sha": "3231a5510b9478ab6e49835aceba2e093a1c5221", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3231a5510b9478ab6e49835aceba2e093a1c5221"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3aec3056e3c88bfc63db5cd4dc24624be7c576a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3aec3056e3c88bfc63db5cd4dc24624be7c576a", "html_url": "https://github.com/rust-lang/rust/commit/c3aec3056e3c88bfc63db5cd4dc24624be7c576a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3aec3056e3c88bfc63db5cd4dc24624be7c576a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7839cb963f747edff90b72efc6094e7184f6ef0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7839cb963f747edff90b72efc6094e7184f6ef0e", "html_url": "https://github.com/rust-lang/rust/commit/7839cb963f747edff90b72efc6094e7184f6ef0e"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "953787ab6c5864b966bcaaf7e14c78f32126cdc2", "filename": "compiler/rustc_codegen_ssa/src/mir/rvalue.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c3aec3056e3c88bfc63db5cd4dc24624be7c576a/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3aec3056e3c88bfc63db5cd4dc24624be7c576a/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs?ref=c3aec3056e3c88bfc63db5cd4dc24624be7c576a", "patch": "@@ -286,7 +286,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n \n                         let newval = match (r_t_in, r_t_out) {\n                             (CastTy::Int(i), CastTy::Int(_)) => {\n-                                bx.intcast(llval, ll_t_out, matches!(i, IntTy::I))\n+                                bx.intcast(llval, ll_t_out, i.is_signed())\n                             }\n                             (CastTy::Float, CastTy::Float) => {\n                                 let srcsz = bx.cx().float_width(ll_t_in);\n@@ -300,7 +300,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                                 }\n                             }\n                             (CastTy::Int(i), CastTy::Float) => {\n-                                if matches!(i, IntTy::I) {\n+                                if i.is_signed() {\n                                     bx.sitofp(llval, ll_t_out)\n                                 } else {\n                                     bx.uitofp(llval, ll_t_out)\n@@ -311,7 +311,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                             }\n                             (CastTy::Int(i), CastTy::Ptr(_)) => {\n                                 let usize_llval =\n-                                    bx.intcast(llval, bx.cx().type_isize(), matches!(i, IntTy::I));\n+                                    bx.intcast(llval, bx.cx().type_isize(), i.is_signed());\n                                 bx.inttoptr(usize_llval, ll_t_out)\n                             }\n                             (CastTy::Float, CastTy::Int(IntTy::I)) => {"}, {"sha": "c4b743dd46701e11601ccc8991b8b54dae07401d", "filename": "compiler/rustc_middle/src/ty/cast.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c3aec3056e3c88bfc63db5cd4dc24624be7c576a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3aec3056e3c88bfc63db5cd4dc24624be7c576a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcast.rs?ref=c3aec3056e3c88bfc63db5cd4dc24624be7c576a", "patch": "@@ -15,6 +15,12 @@ pub enum IntTy {\n     Char,\n }\n \n+impl IntTy {\n+    pub fn is_signed(self) -> bool {\n+        matches!(self, Self::I)\n+    }\n+}\n+\n // Valid types for the result of a non-coercion cast\n #[derive(Copy, Clone, Debug, PartialEq, Eq)]\n pub enum CastTy<'tcx> {"}]}