{"sha": "f141acf0678139ac31375d02feebcc2be220715b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNDFhY2YwNjc4MTM5YWMzMTM3NWQwMmZlZWJjYzJiZTIyMDcxNWI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-10T13:20:35Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-10T13:20:35Z"}, "message": "Move finalize_session_directory call out of cg_llvm\n\nThis causes it to be called even when passing `-Zno-link`, when linking\nfails or when neither `--emit link` nor `--emit metadata` is used.", "tree": {"sha": "a3968278deb2a283acf8bb6718f67f940ee31baf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3968278deb2a283acf8bb6718f67f940ee31baf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f141acf0678139ac31375d02feebcc2be220715b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f141acf0678139ac31375d02feebcc2be220715b", "html_url": "https://github.com/rust-lang/rust/commit/f141acf0678139ac31375d02feebcc2be220715b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f141acf0678139ac31375d02feebcc2be220715b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69f45cd96517b4e380044b7d4593899e77afc0ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/69f45cd96517b4e380044b7d4593899e77afc0ae", "html_url": "https://github.com/rust-lang/rust/commit/69f45cd96517b4e380044b7d4593899e77afc0ae"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "4a4830552f84ea146848d1b85e12106bb340717b", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f141acf0678139ac31375d02feebcc2be220715b/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f141acf0678139ac31375d02feebcc2be220715b/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=f141acf0678139ac31375d02feebcc2be220715b", "patch": "@@ -325,10 +325,6 @@ impl CodegenBackend for LlvmCodegenBackend {\n             );\n         });\n \n-        // Now that we won't touch anything in the incremental compilation directory\n-        // any more, we can finalize it (which involves renaming it)\n-        rustc_incremental::finalize_session_directory(sess, codegen_results.crate_hash);\n-\n         sess.time(\"llvm_dump_timing_file\", || {\n             if sess.opts.debugging_opts.llvm_time_trace {\n                 llvm_util::time_trace_profiler_finish(\"llvm_timings.json\");"}, {"sha": "a61eca1dcaf3c8268007fca44bef2bee2ed4cea9", "filename": "compiler/rustc_codegen_ssa/src/back/write.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f141acf0678139ac31375d02feebcc2be220715b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f141acf0678139ac31375d02feebcc2be220715b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs?ref=f141acf0678139ac31375d02feebcc2be220715b", "patch": "@@ -13,7 +13,6 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::profiling::SelfProfilerRef;\n use rustc_data_structures::profiling::TimingGuard;\n use rustc_data_structures::profiling::VerboseTimingGuard;\n-use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::emitter::Emitter;\n use rustc_errors::{DiagnosticId, FatalError, Handler, Level};\n@@ -414,7 +413,6 @@ pub fn start_async_codegen<B: ExtraBackendMethods>(\n     let sess = tcx.sess;\n \n     let crate_name = tcx.crate_name(LOCAL_CRATE);\n-    let crate_hash = tcx.crate_hash(LOCAL_CRATE);\n     let no_builtins = tcx.sess.contains_name(&tcx.hir().krate().item.attrs, sym::no_builtins);\n     let is_compiler_builtins =\n         tcx.sess.contains_name(&tcx.hir().krate().item.attrs, sym::compiler_builtins);\n@@ -463,7 +461,6 @@ pub fn start_async_codegen<B: ExtraBackendMethods>(\n     OngoingCodegen {\n         backend,\n         crate_name,\n-        crate_hash,\n         metadata,\n         windows_subsystem,\n         linker_info,\n@@ -1720,7 +1717,6 @@ impl SharedEmitterMain {\n pub struct OngoingCodegen<B: ExtraBackendMethods> {\n     pub backend: B,\n     pub crate_name: Symbol,\n-    pub crate_hash: Svh,\n     pub metadata: EncodedMetadata,\n     pub windows_subsystem: Option<String>,\n     pub linker_info: LinkerInfo,\n@@ -1766,7 +1762,6 @@ impl<B: ExtraBackendMethods> OngoingCodegen<B> {\n         (\n             CodegenResults {\n                 crate_name: self.crate_name,\n-                crate_hash: self.crate_hash,\n                 metadata: self.metadata,\n                 windows_subsystem: self.windows_subsystem,\n                 linker_info: self.linker_info,"}, {"sha": "70b92b234e94c10803ab30e6514348481197d53d", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f141acf0678139ac31375d02feebcc2be220715b/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f141acf0678139ac31375d02feebcc2be220715b/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=f141acf0678139ac31375d02feebcc2be220715b", "patch": "@@ -21,7 +21,6 @@ extern crate tracing;\n extern crate rustc_middle;\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::Lrc;\n use rustc_hir::def_id::CrateNum;\n use rustc_hir::LangItem;\n@@ -134,7 +133,6 @@ pub struct CodegenResults {\n     pub modules: Vec<CompiledModule>,\n     pub allocator_module: Option<CompiledModule>,\n     pub metadata_module: Option<CompiledModule>,\n-    pub crate_hash: Svh,\n     pub metadata: rustc_middle::middle::cstore::EncodedMetadata,\n     pub windows_subsystem: Option<String>,\n     pub linker_info: back::linker::LinkerInfo,"}, {"sha": "e0134a0d676886cbd3e2a947bd46ad465f182207", "filename": "compiler/rustc_interface/src/queries.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f141acf0678139ac31375d02feebcc2be220715b/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f141acf0678139ac31375d02feebcc2be220715b/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs?ref=f141acf0678139ac31375d02feebcc2be220715b", "patch": "@@ -3,6 +3,7 @@ use crate::passes::{self, BoxedResolver, QueryContext};\n \n use rustc_ast as ast;\n use rustc_codegen_ssa::traits::CodegenBackend;\n+use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::{Lrc, OnceCell, WorkerLocal};\n use rustc_errors::ErrorReported;\n use rustc_hir::def_id::LOCAL_CRATE;\n@@ -331,6 +332,7 @@ impl<'tcx> Queries<'tcx> {\n     pub fn linker(&'tcx self) -> Result<Linker> {\n         let dep_graph = self.dep_graph()?;\n         let prepare_outputs = self.prepare_outputs()?;\n+        let crate_hash = self.global_ctxt()?.peek_mut().enter(|tcx| tcx.crate_hash(LOCAL_CRATE));\n         let ongoing_codegen = self.ongoing_codegen()?;\n \n         let sess = self.session().clone();\n@@ -340,6 +342,7 @@ impl<'tcx> Queries<'tcx> {\n             sess,\n             dep_graph: dep_graph.peek().clone(),\n             prepare_outputs: prepare_outputs.take(),\n+            crate_hash,\n             ongoing_codegen: ongoing_codegen.take(),\n             codegen_backend,\n         })\n@@ -350,6 +353,7 @@ pub struct Linker {\n     sess: Lrc<Session>,\n     dep_graph: DepGraph,\n     prepare_outputs: OutputFilenames,\n+    crate_hash: Svh,\n     ongoing_codegen: Box<dyn Any>,\n     codegen_backend: Lrc<Box<dyn CodegenBackend>>,\n }\n@@ -370,6 +374,10 @@ impl Linker {\n         let prof = self.sess.prof.clone();\n         prof.generic_activity(\"drop_dep_graph\").run(move || drop(dep_graph));\n \n+        // Now that we won't touch anything in the incremental compilation directory\n+        // any more, we can finalize it (which involves renaming it)\n+        rustc_incremental::finalize_session_directory(&self.sess, self.crate_hash);\n+\n         if !self\n             .sess\n             .opts"}]}