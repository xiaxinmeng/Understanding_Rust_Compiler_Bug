{"sha": "bca364c3fe443af370eb579cafe5f63388d17c76", "node_id": "C_kwDOAAsO6NoAKGJjYTM2NGMzZmU0NDNhZjM3MGViNTc5Y2FmZTVmNjMzODhkMTdjNzY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-07T07:57:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-07T07:57:58Z"}, "message": "Auto merge of #14525 - Veykril:hir-pretty, r=Veykril\n\ninternal: Remove parameter names from function item tree", "tree": {"sha": "55497675bed7cd931943f21747d57dcd9110b8c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55497675bed7cd931943f21747d57dcd9110b8c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bca364c3fe443af370eb579cafe5f63388d17c76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bca364c3fe443af370eb579cafe5f63388d17c76", "html_url": "https://github.com/rust-lang/rust/commit/bca364c3fe443af370eb579cafe5f63388d17c76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bca364c3fe443af370eb579cafe5f63388d17c76/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d73161b491ec670413c847639d3c5aa58a6a89b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d73161b491ec670413c847639d3c5aa58a6a89b4", "html_url": "https://github.com/rust-lang/rust/commit/d73161b491ec670413c847639d3c5aa58a6a89b4"}, {"sha": "79c4c4fb48ee7ce32f26597123f4f2a90b786297", "url": "https://api.github.com/repos/rust-lang/rust/commits/79c4c4fb48ee7ce32f26597123f4f2a90b786297", "html_url": "https://github.com/rust-lang/rust/commit/79c4c4fb48ee7ce32f26597123f4f2a90b786297"}], "stats": {"total": 48, "additions": 15, "deletions": 33}, "files": [{"sha": "98cf69c168976685299699e7e0faf2c1d9f69e3e", "filename": "crates/hir-def/src/data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bca364c3fe443af370eb579cafe5f63388d17c76/crates%2Fhir-def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca364c3fe443af370eb579cafe5f63388d17c76/crates%2Fhir-def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fdata.rs?ref=bca364c3fe443af370eb579cafe5f63388d17c76", "patch": "@@ -100,7 +100,7 @@ impl FunctionData {\n             params: enabled_params\n                 .clone()\n                 .filter_map(|id| match &item_tree[id] {\n-                    Param::Normal(_, ty) => Some(ty.clone()),\n+                    Param::Normal(ty) => Some(ty.clone()),\n                     Param::Varargs => None,\n                 })\n                 .collect(),"}, {"sha": "8546d36d7984f9053cd7826280d7842043b8fab6", "filename": "crates/hir-def/src/item_tree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bca364c3fe443af370eb579cafe5f63388d17c76/crates%2Fhir-def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca364c3fe443af370eb579cafe5f63388d17c76/crates%2Fhir-def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fitem_tree.rs?ref=bca364c3fe443af370eb579cafe5f63388d17c76", "patch": "@@ -606,7 +606,7 @@ pub struct Function {\n \n #[derive(Debug, Clone, Eq, PartialEq)]\n pub enum Param {\n-    Normal(Option<Name>, Interned<TypeRef>),\n+    Normal(Interned<TypeRef>),\n     Varargs,\n }\n "}, {"sha": "c67c8bb4401bdc8b5efd68204e2b1ed8ce8ddb1f", "filename": "crates/hir-def/src/item_tree/lower.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bca364c3fe443af370eb579cafe5f63388d17c76/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca364c3fe443af370eb579cafe5f63388d17c76/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Flower.rs?ref=bca364c3fe443af370eb579cafe5f63388d17c76", "patch": "@@ -293,7 +293,7 @@ impl<'a> Ctx<'a> {\n                     }\n                 };\n                 let ty = Interned::new(self_type);\n-                let idx = self.data().params.alloc(Param::Normal(None, ty));\n+                let idx = self.data().params.alloc(Param::Normal(ty));\n                 self.add_attrs(\n                     idx.into(),\n                     RawAttrs::new(self.db.upcast(), &self_param, self.hygiene()),\n@@ -306,19 +306,7 @@ impl<'a> Ctx<'a> {\n                     None => {\n                         let type_ref = TypeRef::from_ast_opt(&self.body_ctx, param.ty());\n                         let ty = Interned::new(type_ref);\n-                        let mut pat = param.pat();\n-                        // FIXME: This really shouldn't be here, in fact FunctionData/ItemTree's function shouldn't know about\n-                        // pattern names at all\n-                        let name = 'name: loop {\n-                            match pat {\n-                                Some(ast::Pat::RefPat(ref_pat)) => pat = ref_pat.pat(),\n-                                Some(ast::Pat::IdentPat(ident)) => {\n-                                    break 'name ident.name().map(|it| it.as_name())\n-                                }\n-                                _ => break 'name None,\n-                            }\n-                        };\n-                        self.data().params.alloc(Param::Normal(name, ty))\n+                        self.data().params.alloc(Param::Normal(ty))\n                     }\n                 };\n                 self.add_attrs(idx.into(), RawAttrs::new(self.db.upcast(), &param, self.hygiene()));"}, {"sha": "94c5157386ef78b2b281bd865b397c920df22552", "filename": "crates/hir-def/src/item_tree/pretty.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bca364c3fe443af370eb579cafe5f63388d17c76/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca364c3fe443af370eb579cafe5f63388d17c76/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Fpretty.rs?ref=bca364c3fe443af370eb579cafe5f63388d17c76", "patch": "@@ -257,21 +257,15 @@ impl<'a> Printer<'a> {\n                 w!(self, \"(\");\n                 if !params.is_empty() {\n                     self.indented(|this| {\n-                        for (i, param) in params.clone().enumerate() {\n+                        for param in params.clone() {\n                             this.print_attrs_of(param);\n                             match &this.tree[param] {\n-                                Param::Normal(name, ty) => {\n-                                    match name {\n-                                        Some(name) => w!(this, \"{}: \", name),\n-                                        None => w!(this, \"_: \"),\n+                                Param::Normal(ty) => {\n+                                    if flags.contains(FnFlags::HAS_SELF_PARAM) {\n+                                        w!(this, \"self: \");\n                                     }\n                                     this.print_type_ref(ty);\n-                                    w!(this, \",\");\n-                                    if flags.contains(FnFlags::HAS_SELF_PARAM) && i == 0 {\n-                                        wln!(this, \"  // self\");\n-                                    } else {\n-                                        wln!(this);\n-                                    }\n+                                    wln!(this, \",\");\n                                 }\n                                 Param::Varargs => {\n                                     wln!(this, \"...\");"}, {"sha": "1b7564f7a9909a9515da78b558b3d00c027c1770", "filename": "crates/hir-def/src/item_tree/tests.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bca364c3fe443af370eb579cafe5f63388d17c76/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca364c3fe443af370eb579cafe5f63388d17c76/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fitem_tree%2Ftests.rs?ref=bca364c3fe443af370eb579cafe5f63388d17c76", "patch": "@@ -165,7 +165,7 @@ trait Tr: SuperTrait + 'lifetime {\n     fn method(&self);\n }\n         \"#,\n-        expect![[r##\"\n+        expect![[r#\"\n             pub static mut ST: () = _;\n \n             pub(self) const _: Anon = _;\n@@ -174,8 +174,8 @@ trait Tr: SuperTrait + 'lifetime {\n             #[inner_attr_in_fn]\n             pub(self) fn f(\n                 #[attr]\n-                arg: u8,\n-                _: (),\n+                u8,\n+                (),\n             ) -> () { ... }\n \n             pub(self) trait Tr<Self>\n@@ -186,10 +186,10 @@ trait Tr: SuperTrait + 'lifetime {\n                 pub(self) type Assoc: AssocBound = Default;\n \n                 pub(self) fn method(\n-                    _: &Self,  // self\n+                    self: &Self,\n                 ) -> ();\n             }\n-        \"##]],\n+        \"#]],\n     );\n }\n \n@@ -336,7 +336,7 @@ trait Tr<'a, T: 'a>: Super where Self: for<'a> Tr<'a, T> {}\n                 T: 'b\n             {\n                 pub(self) fn f<G>(\n-                    arg: impl Copy,\n+                    impl Copy,\n                 ) -> impl Copy\n                 where\n                     G: 'a { ... }"}]}