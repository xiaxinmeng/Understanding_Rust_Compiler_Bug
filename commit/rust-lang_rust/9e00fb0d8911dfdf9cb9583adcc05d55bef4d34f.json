{"sha": "9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f", "node_id": "C_kwDOAAsO6NoAKDllMDBmYjBkODkxMWRmZGY5Y2I5NTgzYWRjYzA1ZDU1YmVmNGQzNGY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-04T15:15:36Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-04T15:15:36Z"}, "message": "tweak some bug!s", "tree": {"sha": "4784c959fe24cd6d3bd2ab7407d17b66e544197d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4784c959fe24cd6d3bd2ab7407d17b66e544197d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f", "html_url": "https://github.com/rust-lang/rust/commit/9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7b0452ece11bf714f7cf2003747231931504d59", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7b0452ece11bf714f7cf2003747231931504d59", "html_url": "https://github.com/rust-lang/rust/commit/c7b0452ece11bf714f7cf2003747231931504d59"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "c5770f505262e891df5007ce3ec794db211de414", "filename": "compiler/rustc_const_eval/src/interpret/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f", "patch": "@@ -169,7 +169,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     sym::needs_drop => self.tcx.types.bool,\n                     sym::type_id => self.tcx.types.u64,\n                     sym::type_name => self.tcx.mk_static_str(),\n-                    _ => bug!(\"already checked for nullary intrinsics\"),\n+                    _ => bug!(),\n                 };\n                 let val =\n                     self.tcx.const_eval_global_id(self.param_env, gid, Some(self.tcx.span))?;\n@@ -215,7 +215,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     sym::add_with_overflow => BinOp::Add,\n                     sym::sub_with_overflow => BinOp::Sub,\n                     sym::mul_with_overflow => BinOp::Mul,\n-                    _ => bug!(\"Already checked for int ops\"),\n+                    _ => bug!(),\n                 };\n                 self.binop_with_overflow(bin_op, &lhs, &rhs, dest)?;\n             }\n@@ -251,7 +251,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     sym::unchecked_mul => BinOp::Mul,\n                     sym::unchecked_div => BinOp::Div,\n                     sym::unchecked_rem => BinOp::Rem,\n-                    _ => bug!(\"Already checked for int ops\"),\n+                    _ => bug!(),\n                 };\n                 let (val, overflowed, _ty) = self.overflowing_binary_op(bin_op, &l, &r)?;\n                 if overflowed {"}, {"sha": "23ae2db6438c65a8a6a0bf4854f6f9d51b45ee08", "filename": "compiler/rustc_const_eval/src/interpret/intrinsics/caller_location.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics%2Fcaller_location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics%2Fcaller_location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics%2Fcaller_location.rs?ref=9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f", "patch": "@@ -70,7 +70,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n         }\n \n-        bug!(\"no non-`#[track_caller]` frame found\")\n+        span_bug!(self.cur_span(), \"no non-`#[track_caller]` frame found\")\n     }\n \n     /// Allocate a `const core::panic::Location` with the provided filename and line/column numbers."}, {"sha": "85ee88e9e474e72b292752bc242611a413950a72", "filename": "compiler/rustc_const_eval/src/interpret/operator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs?ref=9e00fb0d8911dfdf9cb9583adcc05d55bef4d34f", "patch": "@@ -154,14 +154,14 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 let result = match bin_op {\n                     Shl => l.checked_shl(r).unwrap(),\n                     Shr => l.checked_shr(r).unwrap(),\n-                    _ => bug!(\"it has already been checked that this is a shift op\"),\n+                    _ => bug!(),\n                 };\n                 result as u128\n             } else {\n                 match bin_op {\n                     Shl => l.checked_shl(r).unwrap(),\n                     Shr => l.checked_shr(r).unwrap(),\n-                    _ => bug!(\"it has already been checked that this is a shift op\"),\n+                    _ => bug!(),\n                 }\n             };\n             let truncated = self.truncate(result, left_layout);"}]}