{"sha": "1ad68eafd2505e39d76c0082470e37ab8869ed48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZDY4ZWFmZDI1MDVlMzlkNzZjMDA4MjQ3MGUzN2FiODg2OWVkNDg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-02T01:28:17Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-02T01:55:51Z"}, "message": "Add std::str::trim/trim_left/trim_right", "tree": {"sha": "e94050585e4019351106533cce089d65f6516f24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e94050585e4019351106533cce089d65f6516f24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ad68eafd2505e39d76c0082470e37ab8869ed48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ad68eafd2505e39d76c0082470e37ab8869ed48", "html_url": "https://github.com/rust-lang/rust/commit/1ad68eafd2505e39d76c0082470e37ab8869ed48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ad68eafd2505e39d76c0082470e37ab8869ed48/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "598e25e09194f3ff89d413d9bb2a4246ce5cfeee", "url": "https://api.github.com/repos/rust-lang/rust/commits/598e25e09194f3ff89d413d9bb2a4246ce5cfeee", "html_url": "https://github.com/rust-lang/rust/commit/598e25e09194f3ff89d413d9bb2a4246ce5cfeee"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "f32daa67057cfec33ed4b6e35a9ffb849e667f92", "filename": "src/lib/str.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/1ad68eafd2505e39d76c0082470e37ab8869ed48/src%2Flib%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ad68eafd2505e39d76c0082470e37ab8869ed48/src%2Flib%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstr.rs?ref=1ad68eafd2505e39d76c0082470e37ab8869ed48", "patch": "@@ -54,6 +54,9 @@ export is_empty;\n export is_not_empty;\n export replace;\n export char_slice;\n+export trim_left;\n+export trim_right;\n+export trim;\n \n native \"rust\" mod rustrt {\n     type sbuf;\n@@ -524,6 +527,42 @@ fn char_slice(s: &str, begin: uint, end: uint) -> str {\n     from_chars(vec::slice(to_chars(s), begin, end))\n }\n \n+fn trim_left(s: &str) -> str {\n+    fn count_whities(s: &vec[char]) -> uint {\n+        let i = 0u;\n+        while i < vec::len(s) {\n+            if !char::is_whitespace(s.(i)) {\n+                break;\n+            }\n+            i += 1u;\n+        }\n+        ret i;\n+    }\n+    let chars = to_chars(s);\n+    let whities = count_whities(chars);\n+    ret from_chars(vec::slice(chars, whities, vec::len(chars)));\n+}\n+\n+fn trim_right(s: &str) -> str {\n+    fn count_whities(s: &vec[char]) -> uint {\n+        let i = vec::len(s);\n+        while 0u < i {\n+            if !char::is_whitespace(s.(i - 1u)) {\n+                break;\n+            }\n+            i -= 1u;\n+        }\n+        ret i;\n+    }\n+    let chars = to_chars(s);\n+    let whities = count_whities(chars);\n+    ret from_chars(vec::slice(chars, 0u, whities));\n+}\n+\n+fn trim(s: &str) -> str {\n+    trim_left(trim_right(s))\n+}\n+\n // Local Variables:\n // mode: rust;\n // fill-column: 78;"}, {"sha": "08e78a56137ca5939b3040ac354d59d19d8d36d1", "filename": "src/test/stdtest/str.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/1ad68eafd2505e39d76c0082470e37ab8869ed48/src%2Ftest%2Fstdtest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ad68eafd2505e39d76c0082470e37ab8869ed48/src%2Ftest%2Fstdtest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fstr.rs?ref=1ad68eafd2505e39d76c0082470e37ab8869ed48", "patch": "@@ -162,6 +162,36 @@ fn test_char_slice() {\n     assert (str::eq(\"\\u65e5\", str::char_slice(\"\\u65e5\\u672c\", 0u, 1u)));\n }\n \n+#[test]\n+fn trim_left() {\n+    assert str::trim_left(\"\") == \"\";\n+    assert str::trim_left(\"a\") == \"a\";\n+    assert str::trim_left(\"    \") == \"\";\n+    assert str::trim_left(\"     blah\") == \"blah\";\n+    assert str::trim_left(\"   \\u3000  wut\") == \"wut\";\n+    assert str::trim_left(\"hey \") == \"hey \";\n+}\n+\n+#[test]\n+fn trim_right() {\n+    assert str::trim_right(\"\") == \"\";\n+    assert str::trim_right(\"a\") == \"a\";\n+    assert str::trim_right(\"    \") == \"\";\n+    assert str::trim_right(\"blah     \") == \"blah\";\n+    assert str::trim_right(\"wut   \\u3000  \") == \"wut\";\n+    assert str::trim_right(\" hey\") == \" hey\";\n+}\n+\n+#[test]\n+fn trim() {\n+    assert str::trim(\"\") == \"\";\n+    assert str::trim(\"a\") == \"a\";\n+    assert str::trim(\"    \") == \"\";\n+    assert str::trim(\"    blah     \") == \"blah\";\n+    assert str::trim(\"\\nwut   \\u3000  \") == \"wut\";\n+    assert str::trim(\" hey dude \") == \"hey dude\";\n+}\n+\n // Local Variables:\n // mode: rust;\n // fill-column: 78;"}]}