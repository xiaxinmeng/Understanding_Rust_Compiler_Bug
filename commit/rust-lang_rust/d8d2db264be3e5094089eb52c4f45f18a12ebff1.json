{"sha": "d8d2db264be3e5094089eb52c4f45f18a12ebff1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZDJkYjI2NGJlM2U1MDk0MDg5ZWI1MmM0ZjQ1ZjE4YTEyZWJmZjE=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-05-19T20:16:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-19T20:16:13Z"}, "message": "Rollup merge of #41910 - mersinvald:master, r=Mark-Simulacrum\n\nNumber of filtered out tests in tests summary\n\nCloses #31905", "tree": {"sha": "f4bc0f754e0783942ed0f357f646688a393a4a68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4bc0f754e0783942ed0f357f646688a393a4a68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8d2db264be3e5094089eb52c4f45f18a12ebff1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8d2db264be3e5094089eb52c4f45f18a12ebff1", "html_url": "https://github.com/rust-lang/rust/commit/d8d2db264be3e5094089eb52c4f45f18a12ebff1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8d2db264be3e5094089eb52c4f45f18a12ebff1/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7a5390a67b114b4417558d71df798c9602f92a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7a5390a67b114b4417558d71df798c9602f92a7", "html_url": "https://github.com/rust-lang/rust/commit/d7a5390a67b114b4417558d71df798c9602f92a7"}, {"sha": "e6cde9f2a4f5e4d9e20686f29344461eacae3eba", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6cde9f2a4f5e4d9e20686f29344461eacae3eba", "html_url": "https://github.com/rust-lang/rust/commit/e6cde9f2a4f5e4d9e20686f29344461eacae3eba"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "ef048ac8ca355f9ea0e43f3bc5c1cb9774de0fb4", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d8d2db264be3e5094089eb52c4f45f18a12ebff1/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8d2db264be3e5094089eb52c4f45f18a12ebff1/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=d8d2db264be3e5094089eb52c4f45f18a12ebff1", "patch": "@@ -542,6 +542,7 @@ struct ConsoleTestState<T> {\n     passed: usize,\n     failed: usize,\n     ignored: usize,\n+    filtered_out: usize,\n     measured: usize,\n     metrics: MetricMap,\n     failures: Vec<(TestDesc, Vec<u8>)>,\n@@ -570,6 +571,7 @@ impl<T: Write> ConsoleTestState<T> {\n             passed: 0,\n             failed: 0,\n             ignored: 0,\n+            filtered_out: 0,\n             measured: 0,\n             metrics: MetricMap::new(),\n             failures: Vec::new(),\n@@ -775,11 +777,12 @@ impl<T: Write> ConsoleTestState<T> {\n         } else {\n             self.write_pretty(\"FAILED\", term::color::RED)?;\n         }\n-        let s = format!(\". {} passed; {} failed; {} ignored; {} measured\\n\\n\",\n+        let s = format!(\". {} passed; {} failed; {} ignored; {} measured; {} filtered out\\n\\n\",\n                         self.passed,\n                         self.failed,\n                         self.ignored,\n-                        self.measured);\n+                        self.measured,\n+                        self.filtered_out);\n         self.write_plain(&s)?;\n         return Ok(success);\n     }\n@@ -875,6 +878,7 @@ pub fn run_tests_console(opts: &TestOpts, tests: Vec<TestDescAndFn>) -> io::Resu\n     fn callback<T: Write>(event: &TestEvent, st: &mut ConsoleTestState<T>) -> io::Result<()> {\n         match (*event).clone() {\n             TeFiltered(ref filtered_tests) => st.write_run_start(filtered_tests.len()),\n+            TeFilteredOut(filtered_out) => Ok(st.filtered_out = filtered_out),\n             TeWait(ref test, padding) => st.write_test_start(test, padding),\n             TeTimeout(ref test) => st.write_timeout(test),\n             TeResult(test, result, stdout) => {\n@@ -957,6 +961,7 @@ fn should_sort_failures_before_printing_them() {\n         passed: 0,\n         failed: 0,\n         ignored: 0,\n+        filtered_out: 0,\n         measured: 0,\n         max_name_len: 10,\n         metrics: MetricMap::new(),\n@@ -1017,6 +1022,7 @@ pub enum TestEvent {\n     TeWait(TestDesc, NamePadding),\n     TeResult(TestDesc, TestResult, Vec<u8>),\n     TeTimeout(TestDesc),\n+    TeFilteredOut(usize),\n }\n \n pub type MonitorMsg = (TestDesc, TestResult, Vec<u8>);\n@@ -1028,11 +1034,16 @@ pub fn run_tests<F>(opts: &TestOpts, tests: Vec<TestDescAndFn>, mut callback: F)\n     use std::collections::HashMap;\n     use std::sync::mpsc::RecvTimeoutError;\n \n+    let tests_len = tests.len();\n+\n     let mut filtered_tests = filter_tests(opts, tests);\n     if !opts.bench_benchmarks {\n         filtered_tests = convert_benchmarks_to_tests(filtered_tests);\n     }\n \n+    let filtered_out = tests_len - filtered_tests.len();\n+    callback(TeFilteredOut(filtered_out))?;\n+\n     let filtered_descs = filtered_tests.iter()\n                                        .map(|t| t.desc.clone())\n                                        .collect();"}]}