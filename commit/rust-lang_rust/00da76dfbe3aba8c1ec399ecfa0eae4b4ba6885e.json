{"sha": "00da76dfbe3aba8c1ec399ecfa0eae4b4ba6885e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZGE3NmRmYmUzYWJhOGMxZWMzOTllY2ZhMGVhZTRiNGJhNjg4NWU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-10T19:46:03Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-11T06:17:08Z"}, "message": "vec: rm inline(never) hack\n\njust avoid giving an inline hint in the first place", "tree": {"sha": "c89723a9ea824c9d41ffefe8cef5a574a2a655b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c89723a9ea824c9d41ffefe8cef5a574a2a655b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00da76dfbe3aba8c1ec399ecfa0eae4b4ba6885e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00da76dfbe3aba8c1ec399ecfa0eae4b4ba6885e", "html_url": "https://github.com/rust-lang/rust/commit/00da76dfbe3aba8c1ec399ecfa0eae4b4ba6885e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00da76dfbe3aba8c1ec399ecfa0eae4b4ba6885e/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd5f8d90c5cc593e6aa43a978a1498f88558cc39", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd5f8d90c5cc593e6aa43a978a1498f88558cc39", "html_url": "https://github.com/rust-lang/rust/commit/fd5f8d90c5cc593e6aa43a978a1498f88558cc39"}], "stats": {"total": 15, "additions": 2, "deletions": 13}, "files": [{"sha": "38212d0f29f11600baf3621d682e36858a1dae81", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/00da76dfbe3aba8c1ec399ecfa0eae4b4ba6885e/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00da76dfbe3aba8c1ec399ecfa0eae4b4ba6885e/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=00da76dfbe3aba8c1ec399ecfa0eae4b4ba6885e", "patch": "@@ -1136,7 +1136,6 @@ impl<T> OwnedVector<T> for ~[T] {\n      *\n      * * n - The number of elements to reserve space for\n      */\n-    #[inline]\n     #[cfg(stage0)]\n     fn reserve(&mut self, n: uint) {\n         // Only make the (slow) call into the runtime if we have to\n@@ -1170,7 +1169,6 @@ impl<T> OwnedVector<T> for ~[T] {\n      *\n      * * n - The number of elements to reserve space for\n      */\n-    #[inline]\n     #[cfg(not(stage0))]\n     fn reserve(&mut self, n: uint) {\n         // Only make the (slow) call into the runtime if we have to\n@@ -1228,21 +1226,12 @@ impl<T> OwnedVector<T> for ~[T] {\n             let repr: **raw::VecRepr = transmute(&mut *self);\n             let fill = (**repr).unboxed.fill;\n             if (**repr).unboxed.alloc <= fill {\n-                // need more space\n-                reserve_no_inline(self);\n+                let new_len = self.len() + 1;\n+                self.reserve_at_least(new_len);\n             }\n \n             self.push_fast(t);\n         }\n-\n-        // this peculiar function is because reserve_at_least is very\n-        // large (because of reserve), and will be inlined, which\n-        // makes push too large.\n-        #[inline(never)]\n-        fn reserve_no_inline<T>(v: &mut ~[T]) {\n-            let new_len = v.len() + 1;\n-            v.reserve_at_least(new_len);\n-        }\n     }\n \n     // This doesn't bother to make sure we have space."}]}