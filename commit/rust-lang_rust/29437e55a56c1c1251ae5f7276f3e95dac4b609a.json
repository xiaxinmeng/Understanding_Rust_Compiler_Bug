{"sha": "29437e55a56c1c1251ae5f7276f3e95dac4b609a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NDM3ZTU1YTU2YzFjMTI1MWFlNWY3Mjc2ZjNlOTVkYWM0YjYwOWE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-05T04:05:29Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-05T05:55:41Z"}, "message": "or_patterns: rename previous test", "tree": {"sha": "7af37e4330c103390a67a422a9bf4d38e2ac6639", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7af37e4330c103390a67a422a9bf4d38e2ac6639"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29437e55a56c1c1251ae5f7276f3e95dac4b609a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29437e55a56c1c1251ae5f7276f3e95dac4b609a", "html_url": "https://github.com/rust-lang/rust/commit/29437e55a56c1c1251ae5f7276f3e95dac4b609a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29437e55a56c1c1251ae5f7276f3e95dac4b609a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6509db844315882db7ec0b624ca1e7b04d72568d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6509db844315882db7ec0b624ca1e7b04d72568d", "html_url": "https://github.com/rust-lang/rust/commit/6509db844315882db7ec0b624ca1e7b04d72568d"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "5ec7dc6962c18ef3bdf249410856c0802f8a5359", "filename": "src/test/ui/or-patterns/or-patterns-binding-type-mismatch.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/29437e55a56c1c1251ae5f7276f3e95dac4b609a/src%2Ftest%2Fui%2For-patterns%2For-patterns-binding-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29437e55a56c1c1251ae5f7276f3e95dac4b609a/src%2Ftest%2Fui%2For-patterns%2For-patterns-binding-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2For-patterns-binding-type-mismatch.rs?ref=29437e55a56c1c1251ae5f7276f3e95dac4b609a", "previous_filename": "src/test/ui/or-patterns/or-pattern-mismatch.rs"}, {"sha": "5094f04b9204f1d7258a9ad4dde3c6e4b76823b0", "filename": "src/test/ui/or-patterns/or-patterns-binding-type-mismatch.stderr", "status": "renamed", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/29437e55a56c1c1251ae5f7276f3e95dac4b609a/src%2Ftest%2Fui%2For-patterns%2For-patterns-binding-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/29437e55a56c1c1251ae5f7276f3e95dac4b609a/src%2Ftest%2Fui%2For-patterns%2For-patterns-binding-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2For-patterns-binding-type-mismatch.stderr?ref=29437e55a56c1c1251ae5f7276f3e95dac4b609a", "patch": "@@ -1,101 +1,101 @@\n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:13:39\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:13:39\n    |\n LL |     match Blah::A(1, 1, 2) {\n    |           ---------------- this expression has type `main::Blah`\n LL |         Blah::A(_, x, y) | Blah::B(x, y) => {}\n    |                                       ^ expected `usize`, found `isize`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:17:44\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:17:44\n    |\n LL |     match Some(Blah::A(1, 1, 2)) {\n    |           ---------------------- this expression has type `std::option::Option<main::Blah>`\n LL |         Some(Blah::A(_, x, y) | Blah::B(x, y)) => {}\n    |                                            ^ expected `usize`, found `isize`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:21:19\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:21:19\n    |\n LL |     match (0u8, 1u16) {\n    |           ----------- this expression has type `(u8, u16)`\n LL |         (x, y) | (y, x) => {}\n    |                   ^ expected `u16`, found `u8`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:21:22\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:21:22\n    |\n LL |     match (0u8, 1u16) {\n    |           ----------- this expression has type `(u8, u16)`\n LL |         (x, y) | (y, x) => {}\n    |                      ^ expected `u8`, found `u16`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:26:41\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:26:41\n    |\n LL |     match Some((0u8, Some((1u16, 2u32)))) {\n    |           ------------------------------- this expression has type `std::option::Option<(u8, std::option::Option<(u16, u32)>)>`\n LL |         Some((x, Some((y, z)))) | Some((y, Some((x, z) | (z, x)))) => {}\n    |                                         ^ expected `u16`, found `u8`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:26:50\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:26:50\n    |\n LL |     match Some((0u8, Some((1u16, 2u32)))) {\n    |           ------------------------------- this expression has type `std::option::Option<(u8, std::option::Option<(u16, u32)>)>`\n LL |         Some((x, Some((y, z)))) | Some((y, Some((x, z) | (z, x)))) => {}\n    |                                                  ^ expected `u8`, found `u16`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:26:59\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:26:59\n    |\n LL |     match Some((0u8, Some((1u16, 2u32)))) {\n    |           ------------------------------- this expression has type `std::option::Option<(u8, std::option::Option<(u16, u32)>)>`\n LL |         Some((x, Some((y, z)))) | Some((y, Some((x, z) | (z, x)))) => {}\n    |                                                           ^ expected `u32`, found `u16`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:26:62\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:26:62\n    |\n LL |     match Some((0u8, Some((1u16, 2u32)))) {\n    |           ------------------------------- this expression has type `std::option::Option<(u8, std::option::Option<(u16, u32)>)>`\n LL |         Some((x, Some((y, z)))) | Some((y, Some((x, z) | (z, x)))) => {}\n    |                                                              ^ expected `u8`, found `u32`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:34:42\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:34:42\n    |\n LL |     if let Blah::A(_, x, y) | Blah::B(x, y) = Blah::A(1, 1, 2) {\n    |                                          ^    ---------------- this expression has type `main::Blah`\n    |                                          |\n    |                                          expected `usize`, found `isize`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:38:47\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:38:47\n    |\n LL |     if let Some(Blah::A(_, x, y) | Blah::B(x, y)) = Some(Blah::A(1, 1, 2)) {\n    |                                               ^     ---------------------- this expression has type `std::option::Option<main::Blah>`\n    |                                               |\n    |                                               expected `usize`, found `isize`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:42:22\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:42:22\n    |\n LL |     if let (x, y) | (y, x) = (0u8, 1u16) {\n    |                      ^       ----------- this expression has type `(u8, u16)`\n    |                      |\n    |                      expected `u16`, found `u8`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:42:25\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:42:25\n    |\n LL |     if let (x, y) | (y, x) = (0u8, 1u16) {\n    |                         ^    ----------- this expression has type `(u8, u16)`\n    |                         |\n    |                         expected `u8`, found `u16`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:47:44\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:47:44\n    |\n LL |     if let Some((x, Some((y, z)))) | Some((y, Some((x, z) | (z, x))))\n    |                                            ^ expected `u16`, found `u8`\n@@ -104,7 +104,7 @@ LL |     = Some((0u8, Some((1u16, 2u32))))\n    |       ------------------------------- this expression has type `std::option::Option<(u8, std::option::Option<(u16, u32)>)>`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:47:53\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:47:53\n    |\n LL |     if let Some((x, Some((y, z)))) | Some((y, Some((x, z) | (z, x))))\n    |                                                     ^ expected `u8`, found `u16`\n@@ -113,7 +113,7 @@ LL |     = Some((0u8, Some((1u16, 2u32))))\n    |       ------------------------------- this expression has type `std::option::Option<(u8, std::option::Option<(u16, u32)>)>`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:47:62\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:47:62\n    |\n LL |     if let Some((x, Some((y, z)))) | Some((y, Some((x, z) | (z, x))))\n    |                                                              ^ expected `u32`, found `u16`\n@@ -122,7 +122,7 @@ LL |     = Some((0u8, Some((1u16, 2u32))))\n    |       ------------------------------- this expression has type `std::option::Option<(u8, std::option::Option<(u16, u32)>)>`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:47:65\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:47:65\n    |\n LL |     if let Some((x, Some((y, z)))) | Some((y, Some((x, z) | (z, x))))\n    |                                                                 ^ expected `u8`, found `u32`\n@@ -131,47 +131,47 @@ LL |     = Some((0u8, Some((1u16, 2u32))))\n    |       ------------------------------- this expression has type `std::option::Option<(u8, std::option::Option<(u16, u32)>)>`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:55:39\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:55:39\n    |\n LL |     let Blah::A(_, x, y) | Blah::B(x, y) = Blah::A(1, 1, 2);\n    |                                       ^    ---------------- this expression has type `main::Blah`\n    |                                       |\n    |                                       expected `usize`, found `isize`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:58:19\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:58:19\n    |\n LL |     let (x, y) | (y, x) = (0u8, 1u16);\n    |                   ^       ----------- this expression has type `(u8, u16)`\n    |                   |\n    |                   expected `u16`, found `u8`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:58:22\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:58:22\n    |\n LL |     let (x, y) | (y, x) = (0u8, 1u16);\n    |                      ^    ----------- this expression has type `(u8, u16)`\n    |                      |\n    |                      expected `u8`, found `u16`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:62:42\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:62:42\n    |\n LL |     fn f1((Blah::A(_, x, y) | Blah::B(x, y)): Blah) {}\n    |                                          ^    ---- expected due to this\n    |                                          |\n    |                                          expected `usize`, found `isize`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:65:22\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:65:22\n    |\n LL |     fn f2(((x, y) | (y, x)): (u8, u16)) {}\n    |                      ^       --------- expected due to this\n    |                      |\n    |                      expected `u16`, found `u8`\n \n error[E0308]: mismatched types\n-  --> $DIR/or-pattern-mismatch.rs:65:25\n+  --> $DIR/or-patterns-binding-type-mismatch.rs:65:25\n    |\n LL |     fn f2(((x, y) | (y, x)): (u8, u16)) {}\n    |                         ^    --------- expected due to this", "previous_filename": "src/test/ui/or-patterns/or-pattern-mismatch.stderr"}]}