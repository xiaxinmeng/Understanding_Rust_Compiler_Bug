{"sha": "269eeea15d1a754bd26051618dab8e787ab11aa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2OWVlZWExNWQxYTc1NGJkMjYwNTE2MThkYWI4ZTc4N2FiMTFhYTM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-04-05T22:53:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-05T22:53:47Z"}, "message": "Rollup merge of #70782 - faern:use-assoc-float-consts, r=dtolnay\n\nStop importing the float modules in documentation\n\nFollow up to #69860. I realized I had not searched for and fixed this for the float values. So with this PR they also use the associated constants instead of the module level constants.\n\nFor the documentation where it also was using the `consts` submodule I opted to change it to import that directly. This becomes more in line with how other docs that use the `consts` submodule looks. And it also makes it so there are not two `f32` or `f64` things in the current namespace (both the module and the primitive type) and then hopefully confusing documentation readers less.\n\nr? @dtolnay", "tree": {"sha": "0403aabc590f2326a1da575acf39ce3dda662dd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0403aabc590f2326a1da575acf39ce3dda662dd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/269eeea15d1a754bd26051618dab8e787ab11aa3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeimF7CRBK7hj4Ov3rIwAAdHIIAA6iqpGyU+gXtoezLPvueu+K\nVNej2WztF6zt/sKlN/DwC68JH3kiD6QS7Voh7huGg93n5qIQa3DbihdRpkbzZbjv\ngPWiF0SxSgnl5d0py5zPGOvPfhUtARCe1MUkRW+7e295HKdleG8sDPZitEavKmoJ\nwg+6y9zY+A/QbK/JQbB4V68bvY25RalyH3/IqC+cBlBh8yBvaKI9jCb7qUQ8BGJm\nQSDT4F9cK4xPEFV1sAsIAJiunjW7T/6T+JFsNFT69nLxKE4T6I7yAb1/5Cj04+bh\nFwgkpBBIBPkMrURf65lfgmPoPUOalXP1j3y/2jCwWf7W1zRAe39sn7wez5JLnS0=\n=kSBU\n-----END PGP SIGNATURE-----\n", "payload": "tree 0403aabc590f2326a1da575acf39ce3dda662dd6\nparent 618ba73b3150ad19979aad96f20506953544122e\nparent 28c9231a91b9c4708be2c0ff89204d707b53cc06\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1586127227 +0200\ncommitter GitHub <noreply@github.com> 1586127227 +0200\n\nRollup merge of #70782 - faern:use-assoc-float-consts, r=dtolnay\n\nStop importing the float modules in documentation\n\nFollow up to #69860. I realized I had not searched for and fixed this for the float values. So with this PR they also use the associated constants instead of the module level constants.\n\nFor the documentation where it also was using the `consts` submodule I opted to change it to import that directly. This becomes more in line with how other docs that use the `consts` submodule looks. And it also makes it so there are not two `f32` or `f64` things in the current namespace (both the module and the primitive type) and then hopefully confusing documentation readers less.\n\nr? @dtolnay\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/269eeea15d1a754bd26051618dab8e787ab11aa3", "html_url": "https://github.com/rust-lang/rust/commit/269eeea15d1a754bd26051618dab8e787ab11aa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/269eeea15d1a754bd26051618dab8e787ab11aa3/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "618ba73b3150ad19979aad96f20506953544122e", "url": "https://api.github.com/repos/rust-lang/rust/commits/618ba73b3150ad19979aad96f20506953544122e", "html_url": "https://github.com/rust-lang/rust/commit/618ba73b3150ad19979aad96f20506953544122e"}, {"sha": "28c9231a91b9c4708be2c0ff89204d707b53cc06", "url": "https://api.github.com/repos/rust-lang/rust/commits/28c9231a91b9c4708be2c0ff89204d707b53cc06", "html_url": "https://github.com/rust-lang/rust/commit/28c9231a91b9c4708be2c0ff89204d707b53cc06"}], "stats": {"total": 184, "additions": 34, "deletions": 150}, "files": [{"sha": "6be108f280eda8bc4189ec810d3ec65a0c018e56", "filename": "src/libcore/num/f32.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/269eeea15d1a754bd26051618dab8e787ab11aa3/src%2Flibcore%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/269eeea15d1a754bd26051618dab8e787ab11aa3/src%2Flibcore%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ff32.rs?ref=269eeea15d1a754bd26051618dab8e787ab11aa3", "patch": "@@ -394,9 +394,7 @@ impl f32 {\n     /// Converts radians to degrees.\n     ///\n     /// ```\n-    /// use std::f32::consts;\n-    ///\n-    /// let angle = consts::PI;\n+    /// let angle = std::f32::consts::PI;\n     ///\n     /// let abs_difference = (angle.to_degrees() - 180.0).abs();\n     ///\n@@ -413,11 +411,9 @@ impl f32 {\n     /// Converts degrees to radians.\n     ///\n     /// ```\n-    /// use std::f32::consts;\n-    ///\n     /// let angle = 180.0f32;\n     ///\n-    /// let abs_difference = (angle.to_radians() - consts::PI).abs();\n+    /// let abs_difference = (angle.to_radians() - std::f32::consts::PI).abs();\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```"}, {"sha": "da22ba8d3c9d24e53d2c7883efe7dca9d38bbf1d", "filename": "src/libcore/num/f64.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/269eeea15d1a754bd26051618dab8e787ab11aa3/src%2Flibcore%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/269eeea15d1a754bd26051618dab8e787ab11aa3/src%2Flibcore%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ff64.rs?ref=269eeea15d1a754bd26051618dab8e787ab11aa3", "patch": "@@ -407,9 +407,7 @@ impl f64 {\n     /// Converts radians to degrees.\n     ///\n     /// ```\n-    /// use std::f64::consts;\n-    ///\n-    /// let angle = consts::PI;\n+    /// let angle = std::f64::consts::PI;\n     ///\n     /// let abs_difference = (angle.to_degrees() - 180.0).abs();\n     ///\n@@ -427,11 +425,9 @@ impl f64 {\n     /// Converts degrees to radians.\n     ///\n     /// ```\n-    /// use std::f64::consts;\n-    ///\n     /// let angle = 180.0_f64;\n     ///\n-    /// let abs_difference = (angle.to_radians() - consts::PI).abs();\n+    /// let abs_difference = (angle.to_radians() - std::f64::consts::PI).abs();\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```"}, {"sha": "d4e6048579a56fa74eeba5c025c9c27879b7fdce", "filename": "src/libcore/ops/range.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/269eeea15d1a754bd26051618dab8e787ab11aa3/src%2Flibcore%2Fops%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/269eeea15d1a754bd26051618dab8e787ab11aa3/src%2Flibcore%2Fops%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Frange.rs?ref=269eeea15d1a754bd26051618dab8e787ab11aa3", "patch": "@@ -98,8 +98,6 @@ impl<Idx: PartialOrd<Idx>> Range<Idx> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// assert!(!(3..5).contains(&2));\n     /// assert!( (3..5).contains(&3));\n     /// assert!( (3..5).contains(&4));\n@@ -198,8 +196,6 @@ impl<Idx: PartialOrd<Idx>> RangeFrom<Idx> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// assert!(!(3..).contains(&2));\n     /// assert!( (3..).contains(&3));\n     /// assert!( (3..).contains(&1_000_000_000));\n@@ -282,8 +278,6 @@ impl<Idx: PartialOrd<Idx>> RangeTo<Idx> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// assert!( (..5).contains(&-1_000_000_000));\n     /// assert!( (..5).contains(&4));\n     /// assert!(!(..5).contains(&5));\n@@ -453,8 +447,6 @@ impl<Idx: PartialOrd<Idx>> RangeInclusive<Idx> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// assert!(!(3..=5).contains(&2));\n     /// assert!( (3..=5).contains(&3));\n     /// assert!( (3..=5).contains(&4));\n@@ -581,8 +573,6 @@ impl<Idx: PartialOrd<Idx>> RangeToInclusive<Idx> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// assert!( (..=5).contains(&-1_000_000_000));\n     /// assert!( (..=5).contains(&5));\n     /// assert!(!(..=5).contains(&6));\n@@ -721,8 +711,6 @@ pub trait RangeBounds<T: ?Sized> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// assert!( (3..5).contains(&4));\n     /// assert!(!(3..5).contains(&2));\n     ///"}, {"sha": "65273275a4006be50a291c76c8504d0fcd22540a", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 15, "deletions": 81, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/269eeea15d1a754bd26051618dab8e787ab11aa3/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/269eeea15d1a754bd26051618dab8e787ab11aa3/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=269eeea15d1a754bd26051618dab8e787ab11aa3", "patch": "@@ -112,8 +112,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 3.6_f32;\n     /// let y = -3.6_f32;\n     /// let abs_difference_x = (x.fract() - 0.6).abs();\n@@ -135,8 +133,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 3.5_f32;\n     /// let y = -3.5_f32;\n     ///\n@@ -164,8 +160,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let f = 3.5_f32;\n     ///\n     /// assert_eq!(f.signum(), 1.0);\n@@ -190,8 +184,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let f = 3.5_f32;\n     ///\n     /// assert_eq!(f.copysign(0.42), 3.5_f32);\n@@ -217,8 +209,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let m = 10.0_f32;\n     /// let x = 4.0_f32;\n     /// let b = 60.0_f32;\n@@ -301,8 +291,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 2.0_f32;\n     /// let abs_difference = (x.powi(2) - (x * x)).abs();\n     ///\n@@ -320,8 +308,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 2.0_f32;\n     /// let abs_difference = (x.powf(2.0) - (x * x)).abs();\n     ///\n@@ -341,8 +327,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let positive = 4.0_f32;\n     /// let negative = -4.0_f32;\n     ///\n@@ -363,8 +347,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let one = 1.0f32;\n     /// // e^1\n     /// let e = one.exp();\n@@ -386,8 +368,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let f = 2.0f32;\n     ///\n     /// // 2^2 - 4 == 0\n@@ -407,8 +387,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let one = 1.0f32;\n     /// // e^1\n     /// let e = one.exp();\n@@ -434,8 +412,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let five = 5.0f32;\n     ///\n     /// // log5(5) - 1 == 0\n@@ -455,8 +431,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let two = 2.0f32;\n     ///\n     /// // log2(2) - 1 == 0\n@@ -479,8 +453,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let ten = 10.0f32;\n     ///\n     /// // log10(10) - 1 == 0\n@@ -503,8 +475,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 3.0f32;\n     /// let y = -3.0f32;\n     ///\n@@ -536,8 +506,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 8.0f32;\n     ///\n     /// // x^(1/3) - 2 == 0\n@@ -558,8 +526,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 2.0f32;\n     /// let y = 3.0f32;\n     ///\n@@ -580,9 +546,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let x = f32::consts::FRAC_PI_2;\n+    /// let x = std::f32::consts::FRAC_PI_2;\n     ///\n     /// let abs_difference = (x.sin() - 1.0).abs();\n     ///\n@@ -600,9 +564,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let x = 2.0 * f32::consts::PI;\n+    /// let x = 2.0 * std::f32::consts::PI;\n     ///\n     /// let abs_difference = (x.cos() - 1.0).abs();\n     ///\n@@ -620,9 +582,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let x = f32::consts::FRAC_PI_4;\n+    /// let x = std::f32::consts::FRAC_PI_4;\n     /// let abs_difference = (x.tan() - 1.0).abs();\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n@@ -641,12 +601,10 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let f = f32::consts::FRAC_PI_2;\n+    /// let f = std::f32::consts::FRAC_PI_2;\n     ///\n     /// // asin(sin(pi/2))\n-    /// let abs_difference = (f.sin().asin() - f32::consts::FRAC_PI_2).abs();\n+    /// let abs_difference = (f.sin().asin() - std::f32::consts::FRAC_PI_2).abs();\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n@@ -664,12 +622,10 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let f = f32::consts::FRAC_PI_4;\n+    /// let f = std::f32::consts::FRAC_PI_4;\n     ///\n     /// // acos(cos(pi/4))\n-    /// let abs_difference = (f.cos().acos() - f32::consts::FRAC_PI_4).abs();\n+    /// let abs_difference = (f.cos().acos() - std::f32::consts::FRAC_PI_4).abs();\n     ///\n     /// assert!(abs_difference <= f32::EPSILON);\n     /// ```\n@@ -686,8 +642,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let f = 1.0f32;\n     ///\n     /// // atan(tan(1))\n@@ -712,8 +666,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// // Positive angles measured counter-clockwise\n     /// // from positive x axis\n     /// // -pi/4 radians (45 deg clockwise)\n@@ -724,8 +676,8 @@ impl f32 {\n     /// let x2 = -3.0f32;\n     /// let y2 = 3.0f32;\n     ///\n-    /// let abs_difference_1 = (y1.atan2(x1) - (-f32::consts::FRAC_PI_4)).abs();\n-    /// let abs_difference_2 = (y2.atan2(x2) - (3.0 * f32::consts::FRAC_PI_4)).abs();\n+    /// let abs_difference_1 = (y1.atan2(x1) - (-std::f32::consts::FRAC_PI_4)).abs();\n+    /// let abs_difference_2 = (y2.atan2(x2) - (3.0 * std::f32::consts::FRAC_PI_4)).abs();\n     ///\n     /// assert!(abs_difference_1 <= f32::EPSILON);\n     /// assert!(abs_difference_2 <= f32::EPSILON);\n@@ -743,9 +695,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let x = f32::consts::FRAC_PI_4;\n+    /// let x = std::f32::consts::FRAC_PI_4;\n     /// let f = x.sin_cos();\n     ///\n     /// let abs_difference_0 = (f.0 - x.sin()).abs();\n@@ -766,8 +716,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 6.0f32;\n     ///\n     /// // e^(ln(6)) - 1\n@@ -788,9 +736,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let x = f32::consts::E - 1.0;\n+    /// let x = std::f32::consts::E - 1.0;\n     ///\n     /// // ln(1 + (e - 1)) == ln(e) == 1\n     /// let abs_difference = (x.ln_1p() - 1.0).abs();\n@@ -809,9 +755,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let e = f32::consts::E;\n+    /// let e = std::f32::consts::E;\n     /// let x = 1.0f32;\n     ///\n     /// let f = x.sinh();\n@@ -833,9 +777,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let e = f32::consts::E;\n+    /// let e = std::f32::consts::E;\n     /// let x = 1.0f32;\n     /// let f = x.cosh();\n     /// // Solving cosh() at 1 gives this result\n@@ -857,9 +799,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let e = f32::consts::E;\n+    /// let e = std::f32::consts::E;\n     /// let x = 1.0f32;\n     ///\n     /// let f = x.tanh();\n@@ -881,8 +821,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 1.0f32;\n     /// let f = x.sinh().asinh();\n     ///\n@@ -906,8 +844,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 1.0f32;\n     /// let f = x.cosh().acosh();\n     ///\n@@ -927,9 +863,7 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n-    /// let e = f32::consts::E;\n+    /// let e = std::f32::consts::E;\n     /// let f = e.tanh().atanh();\n     ///\n     /// let abs_difference = (f - e).abs();"}, {"sha": "ff222fc8539d0bc27a0cdc06ee205ad3b416e684", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 15, "deletions": 45, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/269eeea15d1a754bd26051618dab8e787ab11aa3/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/269eeea15d1a754bd26051618dab8e787ab11aa3/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=269eeea15d1a754bd26051618dab8e787ab11aa3", "patch": "@@ -133,8 +133,6 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n     /// let x = 3.5_f64;\n     /// let y = -3.5_f64;\n     ///\n@@ -162,8 +160,6 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n     /// let f = 3.5_f64;\n     ///\n     /// assert_eq!(f.signum(), 1.0);\n@@ -188,8 +184,6 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n     /// let f = 3.5_f64;\n     ///\n     /// assert_eq!(f.copysign(0.42), 3.5_f64);\n@@ -554,9 +548,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let x = f64::consts::FRAC_PI_2;\n+    /// let x = std::f64::consts::FRAC_PI_2;\n     ///\n     /// let abs_difference = (x.sin() - 1.0).abs();\n     ///\n@@ -574,9 +566,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let x = 2.0 * f64::consts::PI;\n+    /// let x = 2.0 * std::f64::consts::PI;\n     ///\n     /// let abs_difference = (x.cos() - 1.0).abs();\n     ///\n@@ -594,9 +584,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let x = f64::consts::FRAC_PI_4;\n+    /// let x = std::f64::consts::FRAC_PI_4;\n     /// let abs_difference = (x.tan() - 1.0).abs();\n     ///\n     /// assert!(abs_difference < 1e-14);\n@@ -615,12 +603,10 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let f = f64::consts::FRAC_PI_2;\n+    /// let f = std::f64::consts::FRAC_PI_2;\n     ///\n     /// // asin(sin(pi/2))\n-    /// let abs_difference = (f.sin().asin() - f64::consts::FRAC_PI_2).abs();\n+    /// let abs_difference = (f.sin().asin() - std::f64::consts::FRAC_PI_2).abs();\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n@@ -638,12 +624,10 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let f = f64::consts::FRAC_PI_4;\n+    /// let f = std::f64::consts::FRAC_PI_4;\n     ///\n     /// // acos(cos(pi/4))\n-    /// let abs_difference = (f.cos().acos() - f64::consts::FRAC_PI_4).abs();\n+    /// let abs_difference = (f.cos().acos() - std::f64::consts::FRAC_PI_4).abs();\n     ///\n     /// assert!(abs_difference < 1e-10);\n     /// ```\n@@ -684,8 +668,6 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n     /// // Positive angles measured counter-clockwise\n     /// // from positive x axis\n     /// // -pi/4 radians (45 deg clockwise)\n@@ -696,8 +678,8 @@ impl f64 {\n     /// let x2 = -3.0_f64;\n     /// let y2 = 3.0_f64;\n     ///\n-    /// let abs_difference_1 = (y1.atan2(x1) - (-f64::consts::FRAC_PI_4)).abs();\n-    /// let abs_difference_2 = (y2.atan2(x2) - (3.0 * f64::consts::FRAC_PI_4)).abs();\n+    /// let abs_difference_1 = (y1.atan2(x1) - (-std::f64::consts::FRAC_PI_4)).abs();\n+    /// let abs_difference_2 = (y2.atan2(x2) - (3.0 * std::f64::consts::FRAC_PI_4)).abs();\n     ///\n     /// assert!(abs_difference_1 < 1e-10);\n     /// assert!(abs_difference_2 < 1e-10);\n@@ -715,9 +697,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let x = f64::consts::FRAC_PI_4;\n+    /// let x = std::f64::consts::FRAC_PI_4;\n     /// let f = x.sin_cos();\n     ///\n     /// let abs_difference_0 = (f.0 - x.sin()).abs();\n@@ -758,9 +738,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let x = f64::consts::E - 1.0;\n+    /// let x = std::f64::consts::E - 1.0;\n     ///\n     /// // ln(1 + (e - 1)) == ln(e) == 1\n     /// let abs_difference = (x.ln_1p() - 1.0).abs();\n@@ -779,9 +757,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let e = f64::consts::E;\n+    /// let e = std::f64::consts::E;\n     /// let x = 1.0_f64;\n     ///\n     /// let f = x.sinh();\n@@ -803,9 +779,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let e = f64::consts::E;\n+    /// let e = std::f64::consts::E;\n     /// let x = 1.0_f64;\n     /// let f = x.cosh();\n     /// // Solving cosh() at 1 gives this result\n@@ -827,9 +801,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let e = f64::consts::E;\n+    /// let e = std::f64::consts::E;\n     /// let x = 1.0_f64;\n     ///\n     /// let f = x.tanh();\n@@ -893,9 +865,7 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n-    /// let e = f64::consts::E;\n+    /// let e = std::f64::consts::E;\n     /// let f = e.tanh().atanh();\n     ///\n     /// let abs_difference = (f - e).abs();"}]}