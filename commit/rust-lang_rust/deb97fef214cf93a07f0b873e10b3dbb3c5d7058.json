{"sha": "deb97fef214cf93a07f0b873e10b3dbb3c5d7058", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYjk3ZmVmMjE0Y2Y5M2EwN2YwYjg3M2UxMGIzZGJiM2M1ZDcwNTg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-08T05:08:13Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-08T14:00:11Z"}, "message": "Rollup merge of #33406 - Manishearth:diag-improve-const-let, r=GuillaumeGomez\n\nImprove diagnostics for constants being used in irrefutable patterns\n\nIt's pretty confusing and this error triggers in resolve only when \"shadowing\" a const, so let's make that clearer.\n\nr? @steveklabnik", "tree": {"sha": "32d5db0e0d809a9bd72168a2198a117ab9cb7016", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32d5db0e0d809a9bd72168a2198a117ab9cb7016"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/deb97fef214cf93a07f0b873e10b3dbb3c5d7058", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXL0ZrAAoJEDu/TT4u95+YBV4P/0DgrO7Tx/5csJUz3hVNjUO+\nl+Q0jlJYglW2zVRHNIX+T34KzCAR/j75uXu109ous493Qo30bZJ1QBEUK2roZj1q\nHTvzn/0eaOEv1dWKJhKSO9AqZrpESuhBepUTivPkv1ghAn4Jj2VqPiaI46LUq1yz\nzfYZfRSptvbE4iLP4qBXb2LHr3JvI3Ax9w3yEGq57k4EJBSS0GlsoNR4TGSswQyw\nbDq8lV1ClCK1WfS49Q/STVw3C4PVAlDZbLITQdbmHHiMFV/vhLtySIgXaAKHGcYb\nwtst6lAUlxrBQvoTBua0ENVIubIj7Cd/XiWBRoKb/EziczUyIKI1EhTI6rTvWlMW\nO0/B5XE+Bslsx9asJs6WrYna+85++YN0+dKosaZwcVWuDVIhla75cCsz6yhe82GP\nWQKlZY7agcNrPcmmGEV1na2r7yK8NCRRINOpjIrjGF/MceOHtXcJlGHoMJcieF5g\ndbFDU70emvpTV4uFobvhCYYQWLjBkTj4gZM2tNorl3ScNv6DC/XWSeE1/zFdp+tB\n72TCR9mCYybY3rvgXQRsylPAIe4EFr+JG6JZxMWkpKjrJzSGQT+el38cmRok5hky\nYD3Inq4ayz/f0O9ti5kxh2ypho6h/EUhAPWUWp+hCAGrGsoGkd6g9+OlxpnK98V9\nV6dG2ZbEnlKkLw0IsLtQ\n=Vg7W\n-----END PGP SIGNATURE-----", "payload": "tree 32d5db0e0d809a9bd72168a2198a117ab9cb7016\nparent 0cb966fa3b52ecb2d8b0da5419f8ba1c1a94b520\nparent 9f302b6bcdc7b3d35a074ff565e17350f12038b7\nauthor Manish Goregaokar <manishsmail@gmail.com> 1462684093 -0700\ncommitter Manish Goregaokar <manishsmail@gmail.com> 1462716011 -0700\n\nRollup merge of #33406 - Manishearth:diag-improve-const-let, r=GuillaumeGomez\n\nImprove diagnostics for constants being used in irrefutable patterns\n\nIt's pretty confusing and this error triggers in resolve only when \"shadowing\" a const, so let's make that clearer.\n\nr? @steveklabnik\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/deb97fef214cf93a07f0b873e10b3dbb3c5d7058", "html_url": "https://github.com/rust-lang/rust/commit/deb97fef214cf93a07f0b873e10b3dbb3c5d7058", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/deb97fef214cf93a07f0b873e10b3dbb3c5d7058/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cb966fa3b52ecb2d8b0da5419f8ba1c1a94b520", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cb966fa3b52ecb2d8b0da5419f8ba1c1a94b520", "html_url": "https://github.com/rust-lang/rust/commit/0cb966fa3b52ecb2d8b0da5419f8ba1c1a94b520"}, {"sha": "9f302b6bcdc7b3d35a074ff565e17350f12038b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f302b6bcdc7b3d35a074ff565e17350f12038b7", "html_url": "https://github.com/rust-lang/rust/commit/9f302b6bcdc7b3d35a074ff565e17350f12038b7"}], "stats": {"total": 80, "additions": 71, "deletions": 9}, "files": [{"sha": "fda7c7aeb33069695bc27aea53e73ec9c88115dc", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 63, "deletions": 1, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/deb97fef214cf93a07f0b873e10b3dbb3c5d7058/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb97fef214cf93a07f0b873e10b3dbb3c5d7058/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=deb97fef214cf93a07f0b873e10b3dbb3c5d7058", "patch": "@@ -623,6 +623,69 @@ let Foo = 12i32; // ok!\n The goal here is to avoid a conflict of names.\n \"##,\n \n+E0414: r##\"\n+A variable binding in an irrefutable pattern is shadowing the name of a\n+constant. Example of erroneous code:\n+\n+```compile_fail\n+const FOO: u8 = 7;\n+\n+let FOO = 5; // error: variable bindings cannot shadow constants\n+\n+// or\n+\n+fn bar(FOO: u8) { // error: variable bindings cannot shadow constants\n+\n+}\n+\n+// or\n+\n+for FOO in bar {\n+\n+}\n+```\n+\n+Introducing a new variable in Rust is done through a pattern. Thus you can have\n+`let` bindings like `let (a, b) = ...`. However, patterns also allow constants\n+in them, e.g. if you want to match over a constant:\n+\n+```ignore\n+const FOO: u8 = 1;\n+\n+match (x,y) {\n+ (3, 4) => { .. }, // it is (3,4)\n+ (FOO, 1) => { .. }, // it is (1,1)\n+ (foo, 1) => { .. }, // it is (anything, 1)\n+                     // call the value in the first slot \"foo\"\n+ _ => { .. } // it is anything\n+}\n+```\n+\n+Here, the second arm matches the value of `x` against the constant `FOO`,\n+whereas the third arm will accept any value of `x` and call it `foo`.\n+\n+This works for `match`, however in cases where an irrefutable pattern is\n+required, constants can't be used. An irrefutable pattern is one which always\n+matches, whose purpose is only to bind variable names to values. These are\n+required by let, for, and function argument patterns.\n+\n+Refutable patterns in such a situation do not make sense, for example:\n+\n+```ignore\n+let Some(x) = foo; // what if foo is None, instead?\n+\n+let (1, x) = foo; // what if foo.0 is not 1?\n+\n+let (SOME_CONST, x) = foo; // what if foo.0 is not SOME_CONST?\n+\n+let SOME_CONST = foo; // what if foo is not SOME_CONST?\n+```\n+\n+Thus, an irrefutable variable binding can't contain a constant.\n+\n+To fix this error, just give the marked variable a different name.\n+\"##,\n+\n E0415: r##\"\n More than one function parameter have the same name. Example of erroneous code:\n \n@@ -1086,7 +1149,6 @@ register_diagnostics! {\n     E0409, // variable is bound with different mode in pattern # than in\n            // pattern #1\n     E0410, // variable from pattern is not bound in pattern 1\n-    E0414, // only irrefutable patterns allowed here\n     E0418, // is not an enum variant, struct or const\n     E0420, // is not an associated const\n     E0421, // unresolved associated const"}, {"sha": "7c6c76f130efed0dbba78444bd98ee34fdf67f2b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/deb97fef214cf93a07f0b873e10b3dbb3c5d7058/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb97fef214cf93a07f0b873e10b3dbb3c5d7058/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=deb97fef214cf93a07f0b873e10b3dbb3c5d7058", "patch": "@@ -139,7 +139,7 @@ enum ResolutionError<'a> {\n     /// error E0413: declaration shadows an enum variant or unit-like struct in scope\n     DeclarationShadowsEnumVariantOrUnitLikeStruct(Name),\n     /// error E0414: only irrefutable patterns allowed here\n-    OnlyIrrefutablePatternsAllowedHere(Name),\n+    ConstantForIrrefutableBinding(Name),\n     /// error E0415: identifier is bound more than once in this parameter list\n     IdentifierBoundMoreThanOnceInParameterList(&'a str),\n     /// error E0416: identifier is bound more than once in the same pattern\n@@ -321,11 +321,11 @@ fn resolve_struct_error<'b, 'a: 'b, 'tcx: 'a>(resolver: &'b Resolver<'a, 'tcx>,\n                               or unit-like struct in scope\",\n                              name)\n         }\n-        ResolutionError::OnlyIrrefutablePatternsAllowedHere(name) => {\n+        ResolutionError::ConstantForIrrefutableBinding(name) => {\n             let mut err = struct_span_err!(resolver.session,\n                                            span,\n                                            E0414,\n-                                           \"only irrefutable patterns allowed here\");\n+                                           \"variable bindings cannot shadow constants\");\n             err.span_note(span,\n                           \"there already is a constant in scope sharing the same \\\n                            name as this pattern\");\n@@ -2248,7 +2248,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                             resolve_error(\n                                 self,\n                                 pattern.span,\n-                                ResolutionError::OnlyIrrefutablePatternsAllowedHere(name)\n+                                ResolutionError::ConstantForIrrefutableBinding(name)\n                             );\n                             self.record_def(pattern.id, err_path_resolution());\n                         }"}, {"sha": "0be1e974e7d7d48e7763afac859b999e007067b4", "filename": "src/test/compile-fail/const-pattern-irrefutable.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/deb97fef214cf93a07f0b873e10b3dbb3c5d7058/src%2Ftest%2Fcompile-fail%2Fconst-pattern-irrefutable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb97fef214cf93a07f0b873e10b3dbb3c5d7058/src%2Ftest%2Fcompile-fail%2Fconst-pattern-irrefutable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-pattern-irrefutable.rs?ref=deb97fef214cf93a07f0b873e10b3dbb3c5d7058", "patch": "@@ -19,10 +19,10 @@ use foo::d; //~ NOTE constant imported here\n const a: u8 = 2; //~ NOTE constant defined here\n \n fn main() {\n-    let a = 4; //~ ERROR only irrefutable\n+    let a = 4; //~ ERROR variable bindings cannot\n                //~^ NOTE there already is a constant in scope\n-    let c = 4; //~ ERROR only irrefutable\n+    let c = 4; //~ ERROR variable bindings cannot\n                //~^ NOTE there already is a constant in scope\n-    let d = 4; //~ ERROR only irrefutable\n+    let d = 4; //~ ERROR variable bindings cannot\n                //~^ NOTE there already is a constant in scope\n }"}, {"sha": "a729cf95a7bf3a826f1fd5f120fd5a71d9f070a8", "filename": "src/test/compile-fail/issue-27033.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/deb97fef214cf93a07f0b873e10b3dbb3c5d7058/src%2Ftest%2Fcompile-fail%2Fissue-27033.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb97fef214cf93a07f0b873e10b3dbb3c5d7058/src%2Ftest%2Fcompile-fail%2Fissue-27033.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-27033.rs?ref=deb97fef214cf93a07f0b873e10b3dbb3c5d7058", "patch": "@@ -14,7 +14,7 @@ fn main() {\n     };\n     const C: u8 = 1;\n     match 1 {\n-        C @ 2 => { //~ ERROR only irrefutable patterns allowed here\n+        C @ 2 => { //~ ERROR variable bindings cannot shadow constants\n             println!(\"{}\", C);\n         }\n         _ => {}"}]}