{"sha": "a1b7169b483ff49ea420ec1ed3822d739589df58", "node_id": "C_kwDOAAsO6NoAKGExYjcxNjliNDgzZmY0OWVhNDIwZWMxZWQzODIyZDczOTU4OWRmNTg", "commit": {"author": {"name": "Chayim Refael Friedman", "email": "chayimfr@gmail.com", "date": "2022-01-24T02:50:07Z"}, "committer": {"name": "Chayim Refael Friedman", "email": "chayimfr@gmail.com", "date": "2022-02-21T06:34:35Z"}, "message": "Update tests\n\nUnfortunately, we lost some recovery for expressions.", "tree": {"sha": "eea31a0b62e76efc9e12ab2833640b251b078454", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eea31a0b62e76efc9e12ab2833640b251b078454"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1b7169b483ff49ea420ec1ed3822d739589df58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1b7169b483ff49ea420ec1ed3822d739589df58", "html_url": "https://github.com/rust-lang/rust/commit/a1b7169b483ff49ea420ec1ed3822d739589df58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1b7169b483ff49ea420ec1ed3822d739589df58/comments", "author": {"login": "ChayimFriedman2", "id": 24700207, "node_id": "MDQ6VXNlcjI0NzAwMjA3", "avatar_url": "https://avatars.githubusercontent.com/u/24700207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChayimFriedman2", "html_url": "https://github.com/ChayimFriedman2", "followers_url": "https://api.github.com/users/ChayimFriedman2/followers", "following_url": "https://api.github.com/users/ChayimFriedman2/following{/other_user}", "gists_url": "https://api.github.com/users/ChayimFriedman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChayimFriedman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChayimFriedman2/subscriptions", "organizations_url": "https://api.github.com/users/ChayimFriedman2/orgs", "repos_url": "https://api.github.com/users/ChayimFriedman2/repos", "events_url": "https://api.github.com/users/ChayimFriedman2/events{/privacy}", "received_events_url": "https://api.github.com/users/ChayimFriedman2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChayimFriedman2", "id": 24700207, "node_id": "MDQ6VXNlcjI0NzAwMjA3", "avatar_url": "https://avatars.githubusercontent.com/u/24700207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChayimFriedman2", "html_url": "https://github.com/ChayimFriedman2", "followers_url": "https://api.github.com/users/ChayimFriedman2/followers", "following_url": "https://api.github.com/users/ChayimFriedman2/following{/other_user}", "gists_url": "https://api.github.com/users/ChayimFriedman2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChayimFriedman2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChayimFriedman2/subscriptions", "organizations_url": "https://api.github.com/users/ChayimFriedman2/orgs", "repos_url": "https://api.github.com/users/ChayimFriedman2/repos", "events_url": "https://api.github.com/users/ChayimFriedman2/events{/privacy}", "received_events_url": "https://api.github.com/users/ChayimFriedman2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13ac5c349136bc2d86f8eeed2a8ac0253052510f", "url": "https://api.github.com/repos/rust-lang/rust/commits/13ac5c349136bc2d86f8eeed2a8ac0253052510f", "html_url": "https://github.com/rust-lang/rust/commit/13ac5c349136bc2d86f8eeed2a8ac0253052510f"}], "stats": {"total": 1412, "additions": 616, "deletions": 796}, "files": [{"sha": "fc36f1ae526cf2e1b9788358646ea96150ce4bab", "filename": "crates/hir_def/src/body/scope.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fhir_def%2Fsrc%2Fbody%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fhir_def%2Fsrc%2Fbody%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Fscope.rs?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -542,4 +542,26 @@ fn test() {\n             93,\n         );\n     }\n+\n+    #[test]\n+    fn let_chains_can_reference_previous_lets() {\n+        do_check_local_name(\n+            r#\"\n+fn test() {\n+    let foo: Option<i32> = None;\n+    if let Some(spam) = foo && spa$0m > 1 && let Some(spam) = foo && spam > 1 {}\n+}\n+\"#,\n+            61,\n+        );\n+        do_check_local_name(\n+            r#\"\n+fn test() {\n+    let foo: Option<i32> = None;\n+    if let Some(spam) = foo && spam > 1 && let Some(spam) = foo && sp$0am > 1 {}\n+}\n+\"#,\n+            100,\n+        );\n+    }\n }"}, {"sha": "344e7293c59343fc9faee4ee7b24ebf304da6756", "filename": "crates/hir_ty/src/tests/macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmacros.rs?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -190,14 +190,14 @@ fn expr_macro_def_expanded_in_various_places() {\n             !0..6 '1isize': isize\n             !0..6 '1isize': isize\n             !0..6 '1isize': isize\n-            !0..6 '1isize': isize\n             39..442 '{     ...!(); }': ()\n             73..94 'spam!(...am!())': {unknown}\n             100..119 'for _ ...!() {}': ()\n             104..105 '_': {unknown}\n             117..119 '{}': ()\n             124..134 '|| spam!()': || -> isize\n             140..156 'while ...!() {}': ()\n+            146..153 'spam!()': bool\n             154..156 '{}': ()\n             161..174 'break spam!()': !\n             180..194 'return spam!()': !\n@@ -271,14 +271,14 @@ fn expr_macro_rules_expanded_in_various_places() {\n             !0..6 '1isize': isize\n             !0..6 '1isize': isize\n             !0..6 '1isize': isize\n-            !0..6 '1isize': isize\n             53..456 '{     ...!(); }': ()\n             87..108 'spam!(...am!())': {unknown}\n             114..133 'for _ ...!() {}': ()\n             118..119 '_': {unknown}\n             131..133 '{}': ()\n             138..148 '|| spam!()': || -> isize\n             154..170 'while ...!() {}': ()\n+            160..167 'spam!()': bool\n             168..170 '{}': ()\n             175..188 'break spam!()': !\n             194..208 'return spam!()': !"}, {"sha": "5c05cb921d9dcd66eae026c061f2e18ad686b89b", "filename": "crates/ide_assists/src/handlers/move_guard.rs", "status": "modified", "additions": 52, "deletions": 7, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -266,6 +266,31 @@ fn main() {\n         );\n     }\n \n+    #[test]\n+    fn move_let_guard_to_arm_body_works() {\n+        check_assist(\n+            move_guard_to_arm_body,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x $0if (let 1 = x) => false,\n+        _ => true\n+    }\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x => if (let 1 = x) {\n+            false\n+        },\n+        _ => true\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn move_guard_to_arm_body_works_complex_match() {\n         check_assist(\n@@ -426,13 +451,21 @@ fn main() {\n     }\n \n     #[test]\n-    fn move_arm_cond_to_match_guard_if_let_not_works() {\n-        check_assist_not_applicable(\n+    fn move_arm_cond_to_match_guard_if_let_works() {\n+        check_assist(\n             move_arm_cond_to_match_guard,\n             r#\"\n fn main() {\n     match 92 {\n-        x => if let 62 = x { $0false },\n+        x => if let 62 = x && true { $0false },\n+        _ => true\n+    }\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x if let 62 = x && true => false,\n         _ => true\n     }\n }\n@@ -884,7 +917,7 @@ fn main() {\n \n     #[test]\n     fn move_arm_cond_to_match_guard_elseif_iflet() {\n-        check_assist_not_applicable(\n+        check_assist(\n             move_arm_cond_to_match_guard,\n             r#\"\n fn main() {\n@@ -901,9 +934,21 @@ fn main() {\n             4\n         },\n     }\n-}\n-\"#,\n-        )\n+}\"#,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        3 => 0,\n+        x if x > 10 => 1,\n+        x if x > 5 => 2,\n+        x if let 4 = 4 => {\n+            42;\n+            3\n+        }\n+        x => 4,\n+    }\n+}\"#,\n+        );\n     }\n \n     #[test]"}, {"sha": "2f35f74c5af17b10883b0b16ebfd92da42a57278", "filename": "crates/ide_assists/src/handlers/replace_if_let_with_match.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -381,6 +381,18 @@ impl VariantData {\n         )\n     }\n \n+    #[test]\n+    fn test_if_let_with_match_let_chain() {\n+        check_assist_not_applicable(\n+            replace_if_let_with_match,\n+            r#\"\n+fn main() {\n+    if $0let true = true && let Some(1) = None {}\n+}\n+\"#,\n+        )\n+    }\n+\n     #[test]\n     fn test_if_let_with_match_basic() {\n         check_assist("}, {"sha": "eb640dc7fc74b0e89b015e66c7ba4b0527af6606", "filename": "crates/parser/src/tests/top_entries.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Fsrc%2Ftests%2Ftop_entries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Fsrc%2Ftests%2Ftop_entries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftests%2Ftop_entries.rs?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -289,17 +289,19 @@ fn expr() {\n         TopEntryPoint::Expr,\n         \"let _ = 0;\",\n         expect![[r#\"\n-        ERROR\n-          LET_KW \"let\"\n-          WHITESPACE \" \"\n-          UNDERSCORE \"_\"\n-          WHITESPACE \" \"\n-          EQ \"=\"\n-          WHITESPACE \" \"\n-          INT_NUMBER \"0\"\n-          SEMICOLON \";\"\n-        error 0: expected expression\n-    \"#]],\n+            ERROR\n+              LET_EXPR\n+                LET_KW \"let\"\n+                WHITESPACE \" \"\n+                WILDCARD_PAT\n+                  UNDERSCORE \"_\"\n+                WHITESPACE \" \"\n+                EQ \"=\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  INT_NUMBER \"0\"\n+              SEMICOLON \";\"\n+        \"#]],\n     );\n }\n "}, {"sha": "60b2fe98755e0de4a478ed5c33256fdf9d9ce346", "filename": "crates/parser/test_data/parser/err/0008_item_block_recovery.txt", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -29,9 +29,8 @@ SOURCE_FILE\n     IF_EXPR\n       IF_KW \"if\"\n       WHITESPACE \" \"\n-      CONDITION\n-        LITERAL\n-          TRUE_KW \"true\"\n+      LITERAL\n+        TRUE_KW \"true\"\n       WHITESPACE \" \"\n       BLOCK_EXPR\n         STMT_LIST"}, {"sha": "5108d5a49be3284ce27c6f5ec502d8764fb82a8b", "filename": "crates/parser/test_data/parser/err/0019_let_recover.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rs?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -1,5 +1,5 @@\n fn foo() {\n-    let foo =\n+    let foo = 11\n     let bar = 1;\n     let\n     let baz = 92;"}, {"sha": "7d62e0cc14f5044767aa0f340412c58a0459ae43", "filename": "crates/parser/test_data/parser/err/0019_let_recover.txt", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -20,6 +20,9 @@ SOURCE_FILE\n               IDENT \"foo\"\n           WHITESPACE \" \"\n           EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            INT_NUMBER \"11\"\n         WHITESPACE \"\\n    \"\n         LET_STMT\n           LET_KW \"let\"\n@@ -57,9 +60,8 @@ SOURCE_FILE\n           IF_EXPR\n             IF_KW \"if\"\n             WHITESPACE \" \"\n-            CONDITION\n-              LITERAL\n-                TRUE_KW \"true\"\n+            LITERAL\n+              TRUE_KW \"true\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST\n@@ -73,9 +75,8 @@ SOURCE_FILE\n           WHILE_EXPR\n             WHILE_KW \"while\"\n             WHITESPACE \" \"\n-            CONDITION\n-              LITERAL\n-                TRUE_KW \"true\"\n+            LITERAL\n+              TRUE_KW \"true\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST\n@@ -95,13 +96,12 @@ SOURCE_FILE\n         WHITESPACE \"\\n\"\n         R_CURLY \"}\"\n   WHITESPACE \"\\n\"\n-error 24: expected expression\n-error 24: expected SEMICOLON\n-error 49: expected pattern\n-error 49: expected SEMICOLON\n-error 75: expected pattern\n-error 75: expected SEMICOLON\n-error 98: expected pattern\n-error 98: expected SEMICOLON\n-error 124: expected pattern\n-error 124: expected SEMICOLON\n+error 27: expected SEMICOLON\n+error 52: expected pattern\n+error 52: expected SEMICOLON\n+error 78: expected pattern\n+error 78: expected SEMICOLON\n+error 101: expected pattern\n+error 101: expected SEMICOLON\n+error 127: expected pattern\n+error 127: expected SEMICOLON"}, {"sha": "82e6a11249b23628180af8113767e8b2d578424a", "filename": "crates/parser/test_data/parser/err/0024_many_type_parens.txt", "status": "modified", "additions": 112, "deletions": 102, "changes": 214, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -180,116 +180,118 @@ SOURCE_FILE\n         ERROR\n           PLUS \"+\"\n         WHITESPACE \" \"\n-        EXPR_STMT\n-          TUPLE_EXPR\n-            L_PAREN \"(\"\n-            FOR_EXPR\n-              FOR_KW \"for\"\n-              PATH_PAT\n-                PATH\n-                  PATH_SEGMENT\n-                    L_ANGLE \"<\"\n-                    ERROR\n-                      LIFETIME_IDENT \"'a\"\n-                    R_ANGLE \">\"\n-              WHITESPACE \" \"\n+        TUPLE_EXPR\n+          L_PAREN \"(\"\n+          FOR_EXPR\n+            FOR_KW \"for\"\n+            PATH_PAT\n+              PATH\n+                PATH_SEGMENT\n+                  L_ANGLE \"<\"\n+                  ERROR\n+                    LIFETIME_IDENT \"'a\"\n+                  R_ANGLE \">\"\n+            WHITESPACE \" \"\n+            BIN_EXPR\n               BIN_EXPR\n                 BIN_EXPR\n                   BIN_EXPR\n-                    BIN_EXPR\n-                      PATH_EXPR\n-                        PATH\n-                          PATH_SEGMENT\n-                            NAME_REF\n-                              IDENT \"Trait\"\n-                      L_ANGLE \"<\"\n-                      ERROR\n-                        LIFETIME_IDENT \"'a\"\n-                    R_ANGLE \">\"\n-                    ERROR\n-                      R_PAREN \")\"\n-                  WHITESPACE \" \"\n-                  PLUS \"+\"\n-                  WHITESPACE \" \"\n-                  PAREN_EXPR\n-                    L_PAREN \"(\"\n                     PATH_EXPR\n                       PATH\n                         PATH_SEGMENT\n                           NAME_REF\n-                            IDENT \"Copy\"\n+                            IDENT \"Trait\"\n+                    L_ANGLE \"<\"\n+                    ERROR\n+                      LIFETIME_IDENT \"'a\"\n+                  R_ANGLE \">\"\n+                  ERROR\n                     R_PAREN \")\"\n-                R_ANGLE \">\"\n-                ERROR\n-                  SEMICOLON \";\"\n-        WHITESPACE \"\\n    \"\n-        LET_STMT\n-          LET_KW \"let\"\n-          WHITESPACE \" \"\n-          WILDCARD_PAT\n-            UNDERSCORE \"_\"\n-          COLON \":\"\n+                WHITESPACE \" \"\n+                PLUS \"+\"\n+                WHITESPACE \" \"\n+                PAREN_EXPR\n+                  L_PAREN \"(\"\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"Copy\"\n+                  R_PAREN \")\"\n+              R_ANGLE \">\"\n+              ERROR\n+                SEMICOLON \";\"\n+          WHITESPACE \"\\n    \"\n+          LET_EXPR\n+            LET_KW \"let\"\n+            WHITESPACE \" \"\n+            WILDCARD_PAT\n+              UNDERSCORE \"_\"\n+            ERROR\n+              COLON \":\"\n           WHITESPACE \" \"\n-          DYN_TRAIT_TYPE\n-            TYPE_BOUND_LIST\n-              TYPE_BOUND\n-                PATH_TYPE\n-                  PATH\n-                    PATH_SEGMENT\n-                      NAME_REF\n-                        IDENT \"Box\"\n-                      GENERIC_ARG_LIST\n-                        L_ANGLE \"<\"\n-                        TYPE_ARG\n-                          PAREN_TYPE\n-                            L_PAREN \"(\"\n-                            FOR_TYPE\n-                              FOR_KW \"for\"\n-                              GENERIC_PARAM_LIST\n-                                L_ANGLE \"<\"\n-                                LIFETIME_PARAM\n-                                  LIFETIME\n-                                    LIFETIME_IDENT \"'a\"\n-                                R_ANGLE \">\"\n-                              WHITESPACE \" \"\n-                              PATH_TYPE\n-                                PATH\n-                                  PATH_SEGMENT\n-                                    NAME_REF\n-                                      IDENT \"Trait\"\n-                                    GENERIC_ARG_LIST\n-                                      L_ANGLE \"<\"\n-                                      LIFETIME_ARG\n-                                        LIFETIME\n-                                          LIFETIME_IDENT \"'a\"\n-                                      R_ANGLE \">\"\n-                            R_PAREN \")\"\n-              WHITESPACE \" \"\n-              PLUS \"+\"\n-              WHITESPACE \" \"\n-              TYPE_BOUND\n-                L_PAREN \"(\"\n-                PATH_TYPE\n-                  PATH\n-                    PATH_SEGMENT\n-                      NAME_REF\n-                        IDENT \"Copy\"\n-                R_PAREN \")\"\n-              WHITESPACE \" \"\n-              PLUS \"+\"\n-              WHITESPACE \" \"\n-              TYPE_BOUND\n+          BIN_EXPR\n+            BIN_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"Box\"\n+              L_ANGLE \"<\"\n+              TUPLE_EXPR\n                 L_PAREN \"(\"\n-                QUESTION \"?\"\n-                PATH_TYPE\n+                FOR_EXPR\n+                  FOR_KW \"for\"\n+                  PATH_PAT\n+                    PATH\n+                      PATH_SEGMENT\n+                        L_ANGLE \"<\"\n+                        ERROR\n+                          LIFETIME_IDENT \"'a\"\n+                        R_ANGLE \">\"\n+                  WHITESPACE \" \"\n+                  BIN_EXPR\n+                    BIN_EXPR\n+                      BIN_EXPR\n+                        BIN_EXPR\n+                          PATH_EXPR\n+                            PATH\n+                              PATH_SEGMENT\n+                                NAME_REF\n+                                  IDENT \"Trait\"\n+                          L_ANGLE \"<\"\n+                          ERROR\n+                            LIFETIME_IDENT \"'a\"\n+                        R_ANGLE \">\"\n+                        ERROR\n+                          R_PAREN \")\"\n+                      WHITESPACE \" \"\n+                      PLUS \"+\"\n+                      WHITESPACE \" \"\n+                      PAREN_EXPR\n+                        L_PAREN \"(\"\n+                        PATH_EXPR\n+                          PATH\n+                            PATH_SEGMENT\n+                              NAME_REF\n+                                IDENT \"Copy\"\n+                        R_PAREN \")\"\n+                    WHITESPACE \" \"\n+                    PLUS \"+\"\n+                    WHITESPACE \" \"\n+                    PAREN_EXPR\n+                      L_PAREN \"(\"\n+                      ERROR\n+                        QUESTION \"?\"\n+                PATH_EXPR\n                   PATH\n                     PATH_SEGMENT\n                       NAME_REF\n                         IDENT \"Sized\"\n                 R_PAREN \")\"\n-        ERROR\n-          R_ANGLE \">\"\n-        SEMICOLON \";\"\n+            R_ANGLE \">\"\n+            ERROR\n+              SEMICOLON \";\"\n         WHITESPACE \"\\n\"\n         R_CURLY \"}\"\n   WHITESPACE \"\\n\"\n@@ -312,10 +314,18 @@ error 168: expected expression\n error 179: expected expression\n error 180: expected a block\n error 180: expected COMMA\n-error 180: expected expression\n-error 180: expected R_PAREN\n-error 180: expected SEMICOLON\n-error 215: expected COMMA\n-error 215: expected R_ANGLE\n-error 235: expected SEMICOLON\n-error 235: expected expression\n+error 190: expected EQ\n+error 190: expected expression\n+error 191: expected COMMA\n+error 201: expected type\n+error 204: expected IN_KW\n+error 211: expected expression\n+error 214: expected expression\n+error 228: expected expression\n+error 229: expected R_PAREN\n+error 229: expected a block\n+error 229: expected COMMA\n+error 236: expected expression\n+error 237: expected COMMA\n+error 237: expected expression\n+error 237: expected R_PAREN"}, {"sha": "3aa330f55d151a5d1525baa98bc0ca15c60939b1", "filename": "crates/parser/test_data/parser/inline/ok/0030_cond.rast", "status": "removed", "additions": 0, "deletions": 209, "changes": 209, "blob_url": "https://github.com/rust-lang/rust/blob/13ac5c349136bc2d86f8eeed2a8ac0253052510f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rast", "raw_url": "https://github.com/rust-lang/rust/raw/13ac5c349136bc2d86f8eeed2a8ac0253052510f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rast?ref=13ac5c349136bc2d86f8eeed2a8ac0253052510f", "patch": "@@ -1,209 +0,0 @@\n-SOURCE_FILE@0..197\n-  FN@0..37\n-    FN_KW@0..2 \"fn\"\n-    WHITESPACE@2..3 \" \"\n-    NAME@3..6\n-      IDENT@3..6 \"foo\"\n-    PARAM_LIST@6..8\n-      L_PAREN@6..7 \"(\"\n-      R_PAREN@7..8 \")\"\n-    WHITESPACE@8..9 \" \"\n-    BLOCK_EXPR@9..37\n-      STMT_LIST@9..37\n-        L_CURLY@9..10 \"{\"\n-        WHITESPACE@10..11 \" \"\n-        IF_EXPR@11..35\n-          IF_KW@11..13 \"if\"\n-          WHITESPACE@13..14 \" \"\n-          CONDITION@14..32\n-            LET_KW@14..17 \"let\"\n-            WHITESPACE@17..18 \" \"\n-            TUPLE_STRUCT_PAT@18..25\n-              PATH@18..22\n-                PATH_SEGMENT@18..22\n-                  NAME_REF@18..22\n-                    IDENT@18..22 \"Some\"\n-              L_PAREN@22..23 \"(\"\n-              WILDCARD_PAT@23..24\n-                UNDERSCORE@23..24 \"_\"\n-              R_PAREN@24..25 \")\"\n-            WHITESPACE@25..26 \" \"\n-            EQ@26..27 \"=\"\n-            WHITESPACE@27..28 \" \"\n-            PATH_EXPR@28..32\n-              PATH@28..32\n-                PATH_SEGMENT@28..32\n-                  NAME_REF@28..32\n-                    IDENT@28..32 \"None\"\n-          WHITESPACE@32..33 \" \"\n-          BLOCK_EXPR@33..35\n-            STMT_LIST@33..35\n-              L_CURLY@33..34 \"{\"\n-              R_CURLY@34..35 \"}\"\n-        WHITESPACE@35..36 \" \"\n-        R_CURLY@36..37 \"}\"\n-  WHITESPACE@37..38 \"\\n\"\n-  FN@38..196\n-    FN_KW@38..40 \"fn\"\n-    WHITESPACE@40..41 \" \"\n-    NAME@41..44\n-      IDENT@41..44 \"bar\"\n-    PARAM_LIST@44..46\n-      L_PAREN@44..45 \"(\"\n-      R_PAREN@45..46 \")\"\n-    WHITESPACE@46..47 \" \"\n-    BLOCK_EXPR@47..196\n-      STMT_LIST@47..196\n-        L_CURLY@47..48 \"{\"\n-        WHITESPACE@48..53 \"\\n    \"\n-        EXPR_STMT@53..87\n-          IF_EXPR@53..87\n-            IF_KW@53..55 \"if\"\n-            WHITESPACE@55..56 \" \"\n-            CONDITION@56..84\n-              LET_KW@56..59 \"let\"\n-              WHITESPACE@59..60 \" \"\n-              OR_PAT@60..77\n-                TUPLE_STRUCT_PAT@60..67\n-                  PATH@60..64\n-                    PATH_SEGMENT@60..64\n-                      NAME_REF@60..64\n-                        IDENT@60..64 \"Some\"\n-                  L_PAREN@64..65 \"(\"\n-                  WILDCARD_PAT@65..66\n-                    UNDERSCORE@65..66 \"_\"\n-                  R_PAREN@66..67 \")\"\n-                WHITESPACE@67..68 \" \"\n-                PIPE@68..69 \"|\"\n-                WHITESPACE@69..70 \" \"\n-                TUPLE_STRUCT_PAT@70..77\n-                  PATH@70..74\n-                    PATH_SEGMENT@70..74\n-                      NAME_REF@70..74\n-                        IDENT@70..74 \"Some\"\n-                  L_PAREN@74..75 \"(\"\n-                  WILDCARD_PAT@75..76\n-                    UNDERSCORE@75..76 \"_\"\n-                  R_PAREN@76..77 \")\"\n-              WHITESPACE@77..78 \" \"\n-              EQ@78..79 \"=\"\n-              WHITESPACE@79..80 \" \"\n-              PATH_EXPR@80..84\n-                PATH@80..84\n-                  PATH_SEGMENT@80..84\n-                    NAME_REF@80..84\n-                      IDENT@80..84 \"None\"\n-            WHITESPACE@84..85 \" \"\n-            BLOCK_EXPR@85..87\n-              STMT_LIST@85..87\n-                L_CURLY@85..86 \"{\"\n-                R_CURLY@86..87 \"}\"\n-        WHITESPACE@87..92 \"\\n    \"\n-        EXPR_STMT@92..118\n-          IF_EXPR@92..118\n-            IF_KW@92..94 \"if\"\n-            WHITESPACE@94..95 \" \"\n-            CONDITION@95..115\n-              LET_KW@95..98 \"let\"\n-              WHITESPACE@98..99 \" \"\n-              PIPE@99..100 \"|\"\n-              WHITESPACE@100..101 \" \"\n-              TUPLE_STRUCT_PAT@101..108\n-                PATH@101..105\n-                  PATH_SEGMENT@101..105\n-                    NAME_REF@101..105\n-                      IDENT@101..105 \"Some\"\n-                L_PAREN@105..106 \"(\"\n-                WILDCARD_PAT@106..107\n-                  UNDERSCORE@106..107 \"_\"\n-                R_PAREN@107..108 \")\"\n-              WHITESPACE@108..109 \" \"\n-              EQ@109..110 \"=\"\n-              WHITESPACE@110..111 \" \"\n-              PATH_EXPR@111..115\n-                PATH@111..115\n-                  PATH_SEGMENT@111..115\n-                    NAME_REF@111..115\n-                      IDENT@111..115 \"None\"\n-            WHITESPACE@115..116 \" \"\n-            BLOCK_EXPR@116..118\n-              STMT_LIST@116..118\n-                L_CURLY@116..117 \"{\"\n-                R_CURLY@117..118 \"}\"\n-        WHITESPACE@118..123 \"\\n    \"\n-        EXPR_STMT@123..160\n-          WHILE_EXPR@123..160\n-            WHILE_KW@123..128 \"while\"\n-            WHITESPACE@128..129 \" \"\n-            CONDITION@129..157\n-              LET_KW@129..132 \"let\"\n-              WHITESPACE@132..133 \" \"\n-              OR_PAT@133..150\n-                TUPLE_STRUCT_PAT@133..140\n-                  PATH@133..137\n-                    PATH_SEGMENT@133..137\n-                      NAME_REF@133..137\n-                        IDENT@133..137 \"Some\"\n-                  L_PAREN@137..138 \"(\"\n-                  WILDCARD_PAT@138..139\n-                    UNDERSCORE@138..139 \"_\"\n-                  R_PAREN@139..140 \")\"\n-                WHITESPACE@140..141 \" \"\n-                PIPE@141..142 \"|\"\n-                WHITESPACE@142..143 \" \"\n-                TUPLE_STRUCT_PAT@143..150\n-                  PATH@143..147\n-                    PATH_SEGMENT@143..147\n-                      NAME_REF@143..147\n-                        IDENT@143..147 \"Some\"\n-                  L_PAREN@147..148 \"(\"\n-                  WILDCARD_PAT@148..149\n-                    UNDERSCORE@148..149 \"_\"\n-                  R_PAREN@149..150 \")\"\n-              WHITESPACE@150..151 \" \"\n-              EQ@151..152 \"=\"\n-              WHITESPACE@152..153 \" \"\n-              PATH_EXPR@153..157\n-                PATH@153..157\n-                  PATH_SEGMENT@153..157\n-                    NAME_REF@153..157\n-                      IDENT@153..157 \"None\"\n-            WHITESPACE@157..158 \" \"\n-            BLOCK_EXPR@158..160\n-              STMT_LIST@158..160\n-                L_CURLY@158..159 \"{\"\n-                R_CURLY@159..160 \"}\"\n-        WHITESPACE@160..165 \"\\n    \"\n-        WHILE_EXPR@165..194\n-          WHILE_KW@165..170 \"while\"\n-          WHITESPACE@170..171 \" \"\n-          CONDITION@171..191\n-            LET_KW@171..174 \"let\"\n-            WHITESPACE@174..175 \" \"\n-            PIPE@175..176 \"|\"\n-            WHITESPACE@176..177 \" \"\n-            TUPLE_STRUCT_PAT@177..184\n-              PATH@177..181\n-                PATH_SEGMENT@177..181\n-                  NAME_REF@177..181\n-                    IDENT@177..181 \"Some\"\n-              L_PAREN@181..182 \"(\"\n-              WILDCARD_PAT@182..183\n-                UNDERSCORE@182..183 \"_\"\n-              R_PAREN@183..184 \")\"\n-            WHITESPACE@184..185 \" \"\n-            EQ@185..186 \"=\"\n-            WHITESPACE@186..187 \" \"\n-            PATH_EXPR@187..191\n-              PATH@187..191\n-                PATH_SEGMENT@187..191\n-                  NAME_REF@187..191\n-                    IDENT@187..191 \"None\"\n-          WHITESPACE@191..192 \" \"\n-          BLOCK_EXPR@192..194\n-            STMT_LIST@192..194\n-              L_CURLY@192..193 \"{\"\n-              R_CURLY@193..194 \"}\"\n-        WHITESPACE@194..195 \"\\n\"\n-        R_CURLY@195..196 \"}\"\n-  WHITESPACE@196..197 \"\\n\""}, {"sha": "2552a2621f9e4fb3dd4179f21f533d104a589834", "filename": "crates/parser/test_data/parser/inline/ok/0030_cond.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/13ac5c349136bc2d86f8eeed2a8ac0253052510f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13ac5c349136bc2d86f8eeed2a8ac0253052510f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rs?ref=13ac5c349136bc2d86f8eeed2a8ac0253052510f", "patch": "@@ -1,7 +0,0 @@\n-fn foo() { if let Some(_) = None {} }\n-fn bar() {\n-    if let Some(_) | Some(_) = None {}\n-    if let | Some(_) = None {}\n-    while let Some(_) | Some(_) = None {}\n-    while let | Some(_) = None {}\n-}"}, {"sha": "5b8993701398842eb6f050cdf199f2ed13fb3178", "filename": "crates/parser/test_data/parser/inline/ok/0030_cond.txt", "status": "removed", "additions": 0, "deletions": 209, "changes": 209, "blob_url": "https://github.com/rust-lang/rust/blob/13ac5c349136bc2d86f8eeed2a8ac0253052510f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.txt", "raw_url": "https://github.com/rust-lang/rust/raw/13ac5c349136bc2d86f8eeed2a8ac0253052510f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.txt?ref=13ac5c349136bc2d86f8eeed2a8ac0253052510f", "patch": "@@ -1,209 +0,0 @@\n-SOURCE_FILE\n-  FN\n-    FN_KW \"fn\"\n-    WHITESPACE \" \"\n-    NAME\n-      IDENT \"foo\"\n-    PARAM_LIST\n-      L_PAREN \"(\"\n-      R_PAREN \")\"\n-    WHITESPACE \" \"\n-    BLOCK_EXPR\n-      STMT_LIST\n-        L_CURLY \"{\"\n-        WHITESPACE \" \"\n-        IF_EXPR\n-          IF_KW \"if\"\n-          WHITESPACE \" \"\n-          CONDITION\n-            LET_KW \"let\"\n-            WHITESPACE \" \"\n-            TUPLE_STRUCT_PAT\n-              PATH\n-                PATH_SEGMENT\n-                  NAME_REF\n-                    IDENT \"Some\"\n-              L_PAREN \"(\"\n-              WILDCARD_PAT\n-                UNDERSCORE \"_\"\n-              R_PAREN \")\"\n-            WHITESPACE \" \"\n-            EQ \"=\"\n-            WHITESPACE \" \"\n-            PATH_EXPR\n-              PATH\n-                PATH_SEGMENT\n-                  NAME_REF\n-                    IDENT \"None\"\n-          WHITESPACE \" \"\n-          BLOCK_EXPR\n-            STMT_LIST\n-              L_CURLY \"{\"\n-              R_CURLY \"}\"\n-        WHITESPACE \" \"\n-        R_CURLY \"}\"\n-  WHITESPACE \"\\n\"\n-  FN\n-    FN_KW \"fn\"\n-    WHITESPACE \" \"\n-    NAME\n-      IDENT \"bar\"\n-    PARAM_LIST\n-      L_PAREN \"(\"\n-      R_PAREN \")\"\n-    WHITESPACE \" \"\n-    BLOCK_EXPR\n-      STMT_LIST\n-        L_CURLY \"{\"\n-        WHITESPACE \"\\n    \"\n-        EXPR_STMT\n-          IF_EXPR\n-            IF_KW \"if\"\n-            WHITESPACE \" \"\n-            CONDITION\n-              LET_KW \"let\"\n-              WHITESPACE \" \"\n-              OR_PAT\n-                TUPLE_STRUCT_PAT\n-                  PATH\n-                    PATH_SEGMENT\n-                      NAME_REF\n-                        IDENT \"Some\"\n-                  L_PAREN \"(\"\n-                  WILDCARD_PAT\n-                    UNDERSCORE \"_\"\n-                  R_PAREN \")\"\n-                WHITESPACE \" \"\n-                PIPE \"|\"\n-                WHITESPACE \" \"\n-                TUPLE_STRUCT_PAT\n-                  PATH\n-                    PATH_SEGMENT\n-                      NAME_REF\n-                        IDENT \"Some\"\n-                  L_PAREN \"(\"\n-                  WILDCARD_PAT\n-                    UNDERSCORE \"_\"\n-                  R_PAREN \")\"\n-              WHITESPACE \" \"\n-              EQ \"=\"\n-              WHITESPACE \" \"\n-              PATH_EXPR\n-                PATH\n-                  PATH_SEGMENT\n-                    NAME_REF\n-                      IDENT \"None\"\n-            WHITESPACE \" \"\n-            BLOCK_EXPR\n-              STMT_LIST\n-                L_CURLY \"{\"\n-                R_CURLY \"}\"\n-        WHITESPACE \"\\n    \"\n-        EXPR_STMT\n-          IF_EXPR\n-            IF_KW \"if\"\n-            WHITESPACE \" \"\n-            CONDITION\n-              LET_KW \"let\"\n-              WHITESPACE \" \"\n-              PIPE \"|\"\n-              WHITESPACE \" \"\n-              TUPLE_STRUCT_PAT\n-                PATH\n-                  PATH_SEGMENT\n-                    NAME_REF\n-                      IDENT \"Some\"\n-                L_PAREN \"(\"\n-                WILDCARD_PAT\n-                  UNDERSCORE \"_\"\n-                R_PAREN \")\"\n-              WHITESPACE \" \"\n-              EQ \"=\"\n-              WHITESPACE \" \"\n-              PATH_EXPR\n-                PATH\n-                  PATH_SEGMENT\n-                    NAME_REF\n-                      IDENT \"None\"\n-            WHITESPACE \" \"\n-            BLOCK_EXPR\n-              STMT_LIST\n-                L_CURLY \"{\"\n-                R_CURLY \"}\"\n-        WHITESPACE \"\\n    \"\n-        EXPR_STMT\n-          WHILE_EXPR\n-            WHILE_KW \"while\"\n-            WHITESPACE \" \"\n-            CONDITION\n-              LET_KW \"let\"\n-              WHITESPACE \" \"\n-              OR_PAT\n-                TUPLE_STRUCT_PAT\n-                  PATH\n-                    PATH_SEGMENT\n-                      NAME_REF\n-                        IDENT \"Some\"\n-                  L_PAREN \"(\"\n-                  WILDCARD_PAT\n-                    UNDERSCORE \"_\"\n-                  R_PAREN \")\"\n-                WHITESPACE \" \"\n-                PIPE \"|\"\n-                WHITESPACE \" \"\n-                TUPLE_STRUCT_PAT\n-                  PATH\n-                    PATH_SEGMENT\n-                      NAME_REF\n-                        IDENT \"Some\"\n-                  L_PAREN \"(\"\n-                  WILDCARD_PAT\n-                    UNDERSCORE \"_\"\n-                  R_PAREN \")\"\n-              WHITESPACE \" \"\n-              EQ \"=\"\n-              WHITESPACE \" \"\n-              PATH_EXPR\n-                PATH\n-                  PATH_SEGMENT\n-                    NAME_REF\n-                      IDENT \"None\"\n-            WHITESPACE \" \"\n-            BLOCK_EXPR\n-              STMT_LIST\n-                L_CURLY \"{\"\n-                R_CURLY \"}\"\n-        WHITESPACE \"\\n    \"\n-        WHILE_EXPR\n-          WHILE_KW \"while\"\n-          WHITESPACE \" \"\n-          CONDITION\n-            LET_KW \"let\"\n-            WHITESPACE \" \"\n-            PIPE \"|\"\n-            WHITESPACE \" \"\n-            TUPLE_STRUCT_PAT\n-              PATH\n-                PATH_SEGMENT\n-                  NAME_REF\n-                    IDENT \"Some\"\n-              L_PAREN \"(\"\n-              WILDCARD_PAT\n-                UNDERSCORE \"_\"\n-              R_PAREN \")\"\n-            WHITESPACE \" \"\n-            EQ \"=\"\n-            WHITESPACE \" \"\n-            PATH_EXPR\n-              PATH\n-                PATH_SEGMENT\n-                  NAME_REF\n-                    IDENT \"None\"\n-          WHITESPACE \" \"\n-          BLOCK_EXPR\n-            STMT_LIST\n-              L_CURLY \"{\"\n-              R_CURLY \"}\"\n-        WHITESPACE \"\\n\"\n-        R_CURLY \"}\"\n-  WHITESPACE \"\\n\""}, {"sha": "dcffcb1ce2f6a49d0aa8a249ab07a31ab9d42b78", "filename": "crates/parser/test_data/parser/inline/ok/0030_let_expr.rast", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_let_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_let_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_let_expr.rast?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -0,0 +1,90 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          IF_EXPR\n+            IF_KW \"if\"\n+            WHITESPACE \" \"\n+            BIN_EXPR\n+              LET_EXPR\n+                LET_KW \"let\"\n+                WHITESPACE \" \"\n+                TUPLE_STRUCT_PAT\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Some\"\n+                  L_PAREN \"(\"\n+                  WILDCARD_PAT\n+                    UNDERSCORE \"_\"\n+                  R_PAREN \")\"\n+                WHITESPACE \" \"\n+                EQ \"=\"\n+                WHITESPACE \" \"\n+                PATH_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"None\"\n+              WHITESPACE \" \"\n+              AMP2 \"&&\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                TRUE_KW \"true\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        WHILE_EXPR\n+          WHILE_KW \"while\"\n+          WHITESPACE \" \"\n+          BIN_EXPR\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"1\"\n+              WHITESPACE \" \"\n+              EQ2 \"==\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"5\"\n+            WHITESPACE \" \"\n+            AMP2 \"&&\"\n+            WHITESPACE \" \"\n+            PAREN_EXPR\n+              L_PAREN \"(\"\n+              LET_EXPR\n+                LET_KW \"let\"\n+                WHITESPACE \" \"\n+                IDENT_PAT\n+                  NAME\n+                    IDENT \"None\"\n+                WHITESPACE \" \"\n+                EQ \"=\"\n+                WHITESPACE \" \"\n+                PATH_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"None\"\n+              R_PAREN \")\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "0131d5e3382905f0e1709ee33a89044b0fd1e365", "filename": "crates/parser/test_data/parser/inline/ok/0030_let_expr.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_let_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_let_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_let_expr.rs?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -0,0 +1,4 @@\n+fn foo() {\n+    if let Some(_) = None && true {}\n+    while 1 == 5 && (let None = None) {}\n+}"}, {"sha": "dcffcb1ce2f6a49d0aa8a249ab07a31ab9d42b78", "filename": "crates/parser/test_data/parser/inline/ok/0030_let_expr.txt", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_let_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_let_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_let_expr.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -0,0 +1,90 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          IF_EXPR\n+            IF_KW \"if\"\n+            WHITESPACE \" \"\n+            BIN_EXPR\n+              LET_EXPR\n+                LET_KW \"let\"\n+                WHITESPACE \" \"\n+                TUPLE_STRUCT_PAT\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"Some\"\n+                  L_PAREN \"(\"\n+                  WILDCARD_PAT\n+                    UNDERSCORE \"_\"\n+                  R_PAREN \")\"\n+                WHITESPACE \" \"\n+                EQ \"=\"\n+                WHITESPACE \" \"\n+                PATH_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"None\"\n+              WHITESPACE \" \"\n+              AMP2 \"&&\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                TRUE_KW \"true\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                R_CURLY \"}\"\n+        WHITESPACE \"\\n    \"\n+        WHILE_EXPR\n+          WHILE_KW \"while\"\n+          WHITESPACE \" \"\n+          BIN_EXPR\n+            BIN_EXPR\n+              LITERAL\n+                INT_NUMBER \"1\"\n+              WHITESPACE \" \"\n+              EQ2 \"==\"\n+              WHITESPACE \" \"\n+              LITERAL\n+                INT_NUMBER \"5\"\n+            WHITESPACE \" \"\n+            AMP2 \"&&\"\n+            WHITESPACE \" \"\n+            PAREN_EXPR\n+              L_PAREN \"(\"\n+              LET_EXPR\n+                LET_KW \"let\"\n+                WHITESPACE \" \"\n+                IDENT_PAT\n+                  NAME\n+                    IDENT \"None\"\n+                WHITESPACE \" \"\n+                EQ \"=\"\n+                WHITESPACE \" \"\n+                PATH_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"None\"\n+              R_PAREN \")\"\n+          WHITESPACE \" \"\n+          BLOCK_EXPR\n+            STMT_LIST\n+              L_CURLY \"{\"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "16c522414af49dc1d4a8cc8ce373f85e18fc86c4", "filename": "crates/parser/test_data/parser/inline/ok/0031_while_expr.txt", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0031_while_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0031_while_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0031_while_expr.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -16,9 +16,8 @@ SOURCE_FILE\n           WHILE_EXPR\n             WHILE_KW \"while\"\n             WHITESPACE \" \"\n-            CONDITION\n-              LITERAL\n-                TRUE_KW \"true\"\n+            LITERAL\n+              TRUE_KW \"true\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST\n@@ -30,7 +29,7 @@ SOURCE_FILE\n           WHILE_EXPR\n             WHILE_KW \"while\"\n             WHITESPACE \" \"\n-            CONDITION\n+            LET_EXPR\n               LET_KW \"let\"\n               WHITESPACE \" \"\n               TUPLE_STRUCT_PAT\n@@ -69,15 +68,14 @@ SOURCE_FILE\n           WHILE_EXPR\n             WHILE_KW \"while\"\n             WHITESPACE \" \"\n-            CONDITION\n-              BLOCK_EXPR\n-                STMT_LIST\n-                  L_CURLY \"{\"\n-                  WHITESPACE \" \"\n-                  LITERAL\n-                    TRUE_KW \"true\"\n-                  WHITESPACE \" \"\n-                  R_CURLY \"}\"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  TRUE_KW \"true\"\n+                WHITESPACE \" \"\n+                R_CURLY \"}\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST"}, {"sha": "e2e964e44d125cd8d4339493f4d846c979664e4b", "filename": "crates/parser/test_data/parser/inline/ok/0064_if_expr.txt", "status": "modified", "additions": 21, "deletions": 27, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0064_if_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0064_if_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0064_if_expr.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -16,9 +16,8 @@ SOURCE_FILE\n           IF_EXPR\n             IF_KW \"if\"\n             WHITESPACE \" \"\n-            CONDITION\n-              LITERAL\n-                TRUE_KW \"true\"\n+            LITERAL\n+              TRUE_KW \"true\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST\n@@ -30,9 +29,8 @@ SOURCE_FILE\n           IF_EXPR\n             IF_KW \"if\"\n             WHITESPACE \" \"\n-            CONDITION\n-              LITERAL\n-                TRUE_KW \"true\"\n+            LITERAL\n+              TRUE_KW \"true\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST\n@@ -51,9 +49,8 @@ SOURCE_FILE\n           IF_EXPR\n             IF_KW \"if\"\n             WHITESPACE \" \"\n-            CONDITION\n-              LITERAL\n-                TRUE_KW \"true\"\n+            LITERAL\n+              TRUE_KW \"true\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST\n@@ -65,9 +62,8 @@ SOURCE_FILE\n             IF_EXPR\n               IF_KW \"if\"\n               WHITESPACE \" \"\n-              CONDITION\n-                LITERAL\n-                  FALSE_KW \"false\"\n+              LITERAL\n+                FALSE_KW \"false\"\n               WHITESPACE \" \"\n               BLOCK_EXPR\n                 STMT_LIST\n@@ -86,12 +82,11 @@ SOURCE_FILE\n           IF_EXPR\n             IF_KW \"if\"\n             WHITESPACE \" \"\n-            CONDITION\n-              PATH_EXPR\n-                PATH\n-                  PATH_SEGMENT\n-                    NAME_REF\n-                      IDENT \"S\"\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"S\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST\n@@ -103,15 +98,14 @@ SOURCE_FILE\n           IF_EXPR\n             IF_KW \"if\"\n             WHITESPACE \" \"\n-            CONDITION\n-              BLOCK_EXPR\n-                STMT_LIST\n-                  L_CURLY \"{\"\n-                  WHITESPACE \" \"\n-                  LITERAL\n-                    TRUE_KW \"true\"\n-                  WHITESPACE \" \"\n-                  R_CURLY \"}\"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                WHITESPACE \" \"\n+                LITERAL\n+                  TRUE_KW \"true\"\n+                WHITESPACE \" \"\n+                R_CURLY \"}\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST"}, {"sha": "cbf5e84e8cdc7ab8a9f7656d77896fca1da25a52", "filename": "crates/parser/test_data/parser/inline/ok/0088_break_ambiguity.txt", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0088_break_ambiguity.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0088_break_ambiguity.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0088_break_ambiguity.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -15,9 +15,8 @@ SOURCE_FILE\n           IF_EXPR\n             IF_KW \"if\"\n             WHITESPACE \" \"\n-            CONDITION\n-              BREAK_EXPR\n-                BREAK_KW \"break\"\n+            BREAK_EXPR\n+              BREAK_KW \"break\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST\n@@ -28,9 +27,8 @@ SOURCE_FILE\n           WHILE_EXPR\n             WHILE_KW \"while\"\n             WHITESPACE \" \"\n-            CONDITION\n-              BREAK_EXPR\n-                BREAK_KW \"break\"\n+            BREAK_EXPR\n+              BREAK_KW \"break\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST"}, {"sha": "e4e215593ee93aaaabe91bbb5eb59425af343a2c", "filename": "crates/parser/test_data/parser/inline/ok/0096_no_semi_after_block.txt", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -16,9 +16,8 @@ SOURCE_FILE\n           IF_EXPR\n             IF_KW \"if\"\n             WHITESPACE \" \"\n-            CONDITION\n-              LITERAL\n-                TRUE_KW \"true\"\n+            LITERAL\n+              TRUE_KW \"true\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST\n@@ -50,9 +49,8 @@ SOURCE_FILE\n           WHILE_EXPR\n             WHILE_KW \"while\"\n             WHITESPACE \" \"\n-            CONDITION\n-              LITERAL\n-                TRUE_KW \"true\"\n+            LITERAL\n+              TRUE_KW \"true\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST"}, {"sha": "48d0bde845a597a41cd82b86719376145f6dfcb7", "filename": "crates/parser/test_data/parser/inline/ok/0109_label.txt", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0109_label.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0109_label.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0109_label.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -35,9 +35,8 @@ SOURCE_FILE\n             WHITESPACE \" \"\n             WHILE_KW \"while\"\n             WHITESPACE \" \"\n-            CONDITION\n-              LITERAL\n-                TRUE_KW \"true\"\n+            LITERAL\n+              TRUE_KW \"true\"\n             WHITESPACE \" \"\n             BLOCK_EXPR\n               STMT_LIST"}, {"sha": "96318b52195ec5a9922ac8c3f1687494a3f9d0ab", "filename": "crates/parser/test_data/parser/inline/ok/0118_match_guard.txt", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_match_guard.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_match_guard.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_match_guard.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -49,19 +49,20 @@ SOURCE_FILE\n               MATCH_GUARD\n                 IF_KW \"if\"\n                 WHITESPACE \" \"\n-                LET_KW \"let\"\n-                WHITESPACE \" \"\n-                IDENT_PAT\n-                  NAME\n-                    IDENT \"foo\"\n-                WHITESPACE \" \"\n-                EQ \"=\"\n-                WHITESPACE \" \"\n-                PATH_EXPR\n-                  PATH\n-                    PATH_SEGMENT\n-                      NAME_REF\n-                        IDENT \"bar\"\n+                LET_EXPR\n+                  LET_KW \"let\"\n+                  WHITESPACE \" \"\n+                  IDENT_PAT\n+                    NAME\n+                      IDENT \"foo\"\n+                  WHITESPACE \" \"\n+                  EQ \"=\"\n+                  WHITESPACE \" \"\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        NAME_REF\n+                          IDENT \"bar\"\n               WHITESPACE \" \"\n               FAT_ARROW \"=>\"\n               WHITESPACE \" \""}, {"sha": "df1acd6b83b93d6c0e6162244575dbcffd519c98", "filename": "crates/parser/test_data/parser/ok/0033_label_break.txt", "status": "modified", "additions": 36, "deletions": 40, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0033_label_break.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0033_label_break.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0033_label_break.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -51,16 +51,15 @@ SOURCE_FILE\n                 IF_EXPR\n                   IF_KW \"if\"\n                   WHITESPACE \" \"\n-                  CONDITION\n-                    CALL_EXPR\n-                      PATH_EXPR\n-                        PATH\n-                          PATH_SEGMENT\n-                            NAME_REF\n-                              IDENT \"condition_not_met\"\n-                      ARG_LIST\n-                        L_PAREN \"(\"\n-                        R_PAREN \")\"\n+                  CALL_EXPR\n+                    PATH_EXPR\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"condition_not_met\"\n+                    ARG_LIST\n+                      L_PAREN \"(\"\n+                      R_PAREN \")\"\n                   WHITESPACE \" \"\n                   BLOCK_EXPR\n                     STMT_LIST\n@@ -92,16 +91,15 @@ SOURCE_FILE\n                 IF_EXPR\n                   IF_KW \"if\"\n                   WHITESPACE \" \"\n-                  CONDITION\n-                    CALL_EXPR\n-                      PATH_EXPR\n-                        PATH\n-                          PATH_SEGMENT\n-                            NAME_REF\n-                              IDENT \"condition_not_met\"\n-                      ARG_LIST\n-                        L_PAREN \"(\"\n-                        R_PAREN \")\"\n+                  CALL_EXPR\n+                    PATH_EXPR\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"condition_not_met\"\n+                    ARG_LIST\n+                      L_PAREN \"(\"\n+                      R_PAREN \")\"\n                   WHITESPACE \" \"\n                   BLOCK_EXPR\n                     STMT_LIST\n@@ -153,16 +151,15 @@ SOURCE_FILE\n                 IF_EXPR\n                   IF_KW \"if\"\n                   WHITESPACE \" \"\n-                  CONDITION\n-                    CALL_EXPR\n-                      PATH_EXPR\n-                        PATH\n-                          PATH_SEGMENT\n-                            NAME_REF\n-                              IDENT \"foo\"\n-                      ARG_LIST\n-                        L_PAREN \"(\"\n-                        R_PAREN \")\"\n+                  CALL_EXPR\n+                    PATH_EXPR\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"foo\"\n+                    ARG_LIST\n+                      L_PAREN \"(\"\n+                      R_PAREN \")\"\n                   WHITESPACE \" \"\n                   BLOCK_EXPR\n                     STMT_LIST\n@@ -187,16 +184,15 @@ SOURCE_FILE\n                 IF_EXPR\n                   IF_KW \"if\"\n                   WHITESPACE \" \"\n-                  CONDITION\n-                    CALL_EXPR\n-                      PATH_EXPR\n-                        PATH\n-                          PATH_SEGMENT\n-                            NAME_REF\n-                              IDENT \"bar\"\n-                      ARG_LIST\n-                        L_PAREN \"(\"\n-                        R_PAREN \")\"\n+                  CALL_EXPR\n+                    PATH_EXPR\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"bar\"\n+                    ARG_LIST\n+                      L_PAREN \"(\"\n+                      R_PAREN \")\"\n                   WHITESPACE \" \"\n                   BLOCK_EXPR\n                     STMT_LIST"}, {"sha": "4ec703e517c2f01bacafedb57b37e119879d246d", "filename": "crates/parser/test_data/parser/ok/0035_weird_exprs.txt", "status": "modified", "additions": 63, "deletions": 72, "changes": 135, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -280,21 +280,20 @@ SOURCE_FILE\n                   WHILE_EXPR\n                     WHILE_KW \"while\"\n                     WHITESPACE \" \"\n-                    CONDITION\n-                      PREFIX_EXPR\n-                        BANG \"!\"\n-                        METHOD_CALL_EXPR\n-                          PATH_EXPR\n-                            PATH\n-                              PATH_SEGMENT\n-                                NAME_REF\n-                                  IDENT \"x\"\n-                          DOT \".\"\n-                          NAME_REF\n-                            IDENT \"get\"\n-                          ARG_LIST\n-                            L_PAREN \"(\"\n-                            R_PAREN \")\"\n+                    PREFIX_EXPR\n+                      BANG \"!\"\n+                      METHOD_CALL_EXPR\n+                        PATH_EXPR\n+                          PATH\n+                            PATH_SEGMENT\n+                              NAME_REF\n+                                IDENT \"x\"\n+                        DOT \".\"\n+                        NAME_REF\n+                          IDENT \"get\"\n+                        ARG_LIST\n+                          L_PAREN \"(\"\n+                          R_PAREN \")\"\n                     WHITESPACE \" \"\n                     BLOCK_EXPR\n                       STMT_LIST\n@@ -443,12 +442,11 @@ SOURCE_FILE\n                 WHILE_EXPR\n                   WHILE_KW \"while\"\n                   WHITESPACE \" \"\n-                  CONDITION\n-                    PAREN_EXPR\n-                      L_PAREN \"(\"\n-                      RETURN_EXPR\n-                        RETURN_KW \"return\"\n-                      R_PAREN \")\"\n+                  PAREN_EXPR\n+                    L_PAREN \"(\"\n+                    RETURN_EXPR\n+                      RETURN_KW \"return\"\n+                    R_PAREN \")\"\n                   WHITESPACE \" \"\n                   BLOCK_EXPR\n                     STMT_LIST\n@@ -457,12 +455,11 @@ SOURCE_FILE\n                       IF_EXPR\n                         IF_KW \"if\"\n                         WHITESPACE \" \"\n-                        CONDITION\n-                          PAREN_EXPR\n-                            L_PAREN \"(\"\n-                            RETURN_EXPR\n-                              RETURN_KW \"return\"\n-                            R_PAREN \")\"\n+                        PAREN_EXPR\n+                          L_PAREN \"(\"\n+                          RETURN_EXPR\n+                            RETURN_KW \"return\"\n+                          R_PAREN \")\"\n                         WHITESPACE \" \"\n                         BLOCK_EXPR\n                           STMT_LIST\n@@ -495,12 +492,11 @@ SOURCE_FILE\n                                         IF_EXPR\n                                           IF_KW \"if\"\n                                           WHITESPACE \" \"\n-                                          CONDITION\n-                                            PAREN_EXPR\n-                                              L_PAREN \"(\"\n-                                              RETURN_EXPR\n-                                                RETURN_KW \"return\"\n-                                              R_PAREN \")\"\n+                                          PAREN_EXPR\n+                                            L_PAREN \"(\"\n+                                            RETURN_EXPR\n+                                              RETURN_KW \"return\"\n+                                            R_PAREN \")\"\n                                           WHITESPACE \" \"\n                                           BLOCK_EXPR\n                                             STMT_LIST\n@@ -549,12 +545,11 @@ SOURCE_FILE\n                         IF_EXPR\n                           IF_KW \"if\"\n                           WHITESPACE \" \"\n-                          CONDITION\n-                            PAREN_EXPR\n-                              L_PAREN \"(\"\n-                              RETURN_EXPR\n-                                RETURN_KW \"return\"\n-                              R_PAREN \")\"\n+                          PAREN_EXPR\n+                            L_PAREN \"(\"\n+                            RETURN_EXPR\n+                              RETURN_KW \"return\"\n+                            R_PAREN \")\"\n                           WHITESPACE \" \"\n                           BLOCK_EXPR\n                             STMT_LIST\n@@ -572,12 +567,11 @@ SOURCE_FILE\n               IF_EXPR\n                 IF_KW \"if\"\n                 WHITESPACE \" \"\n-                CONDITION\n-                  PAREN_EXPR\n-                    L_PAREN \"(\"\n-                    RETURN_EXPR\n-                      RETURN_KW \"return\"\n-                    R_PAREN \")\"\n+                PAREN_EXPR\n+                  L_PAREN \"(\"\n+                  RETURN_EXPR\n+                    RETURN_KW \"return\"\n+                  R_PAREN \")\"\n                 WHITESPACE \" \"\n                 BLOCK_EXPR\n                   STMT_LIST\n@@ -1037,9 +1031,8 @@ SOURCE_FILE\n                 IF_EXPR\n                   IF_KW \"if\"\n                   WHITESPACE \" \"\n-                  CONDITION\n-                    BREAK_EXPR\n-                      BREAK_KW \"break\"\n+                  BREAK_EXPR\n+                    BREAK_KW \"break\"\n                   WHITESPACE \" \"\n                   BLOCK_EXPR\n                     STMT_LIST\n@@ -1089,18 +1082,17 @@ SOURCE_FILE\n                 IF_EXPR\n                   IF_KW \"if\"\n                   WHITESPACE \" \"\n-                  CONDITION\n-                    BIN_EXPR\n-                      PATH_EXPR\n-                        PATH\n-                          PATH_SEGMENT\n-                            NAME_REF\n-                              IDENT \"i\"\n-                      WHITESPACE \" \"\n-                      EQ2 \"==\"\n-                      WHITESPACE \" \"\n-                      LITERAL\n-                        INT_NUMBER \"1\"\n+                  BIN_EXPR\n+                    PATH_EXPR\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"i\"\n+                    WHITESPACE \" \"\n+                    EQ2 \"==\"\n+                    WHITESPACE \" \"\n+                    LITERAL\n+                      INT_NUMBER \"1\"\n                   WHITESPACE \" \"\n                   BLOCK_EXPR\n                     STMT_LIST\n@@ -1344,18 +1336,17 @@ SOURCE_FILE\n         IF_EXPR\n           IF_KW \"if\"\n           WHITESPACE \" \"\n-          CONDITION\n-            BIN_EXPR\n-              PATH_EXPR\n-                PATH\n-                  PATH_SEGMENT\n-                    NAME_REF\n-                      IDENT \"u8\"\n-              WHITESPACE \" \"\n-              NEQ \"!=\"\n-              WHITESPACE \" \"\n-              LITERAL\n-                INT_NUMBER \"0u8\"\n+          BIN_EXPR\n+            PATH_EXPR\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"u8\"\n+            WHITESPACE \" \"\n+            NEQ \"!=\"\n+            WHITESPACE \" \"\n+            LITERAL\n+              INT_NUMBER \"0u8\"\n           WHITESPACE \" \"\n           BLOCK_EXPR\n             STMT_LIST"}, {"sha": "aecc71d4829bd8938311e020ff2eca93bc191c0c", "filename": "crates/parser/test_data/parser/ok/0047_minus_in_inner_pattern.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -219,7 +219,7 @@ SOURCE_FILE\n         IF_EXPR\n           IF_KW \"if\"\n           WHITESPACE \" \"\n-          CONDITION\n+          LET_EXPR\n             LET_KW \"let\"\n             WHITESPACE \" \"\n             TUPLE_STRUCT_PAT"}, {"sha": "55ce31275fba65be0aa97f6f4d2f9d5a407cf852", "filename": "crates/parser/test_data/parser/ok/0056_neq_in_type.txt", "status": "modified", "additions": 38, "deletions": 39, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -15,47 +15,46 @@ SOURCE_FILE\n         IF_EXPR\n           IF_KW \"if\"\n           WHITESPACE \" \"\n-          CONDITION\n-            BIN_EXPR\n-              CAST_EXPR\n-                METHOD_CALL_EXPR\n-                  LITERAL\n-                    FLOAT_NUMBER \"1.0f32\"\n-                  DOT \".\"\n-                  NAME_REF\n-                    IDENT \"floor\"\n-                  ARG_LIST\n-                    L_PAREN \"(\"\n-                    R_PAREN \")\"\n-                WHITESPACE \" \"\n-                AS_KW \"as\"\n-                WHITESPACE \" \"\n-                PATH_TYPE\n-                  PATH\n-                    PATH_SEGMENT\n-                      NAME_REF\n-                        IDENT \"i64\"\n+          BIN_EXPR\n+            CAST_EXPR\n+              METHOD_CALL_EXPR\n+                LITERAL\n+                  FLOAT_NUMBER \"1.0f32\"\n+                DOT \".\"\n+                NAME_REF\n+                  IDENT \"floor\"\n+                ARG_LIST\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n               WHITESPACE \" \"\n-              NEQ \"!=\"\n+              AS_KW \"as\"\n               WHITESPACE \" \"\n-              CAST_EXPR\n-                METHOD_CALL_EXPR\n-                  LITERAL\n-                    FLOAT_NUMBER \"1.0f32\"\n-                  DOT \".\"\n-                  NAME_REF\n-                    IDENT \"floor\"\n-                  ARG_LIST\n-                    L_PAREN \"(\"\n-                    R_PAREN \")\"\n-                WHITESPACE \" \"\n-                AS_KW \"as\"\n-                WHITESPACE \" \"\n-                PATH_TYPE\n-                  PATH\n-                    PATH_SEGMENT\n-                      NAME_REF\n-                        IDENT \"i64\"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"i64\"\n+            WHITESPACE \" \"\n+            NEQ \"!=\"\n+            WHITESPACE \" \"\n+            CAST_EXPR\n+              METHOD_CALL_EXPR\n+                LITERAL\n+                  FLOAT_NUMBER \"1.0f32\"\n+                DOT \".\"\n+                NAME_REF\n+                  IDENT \"floor\"\n+                ARG_LIST\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+              WHITESPACE \" \"\n+              AS_KW \"as\"\n+              WHITESPACE \" \"\n+              PATH_TYPE\n+                PATH\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"i64\"\n           WHITESPACE \" \"\n           BLOCK_EXPR\n             STMT_LIST"}, {"sha": "79bc7f971d187187e567f883d2178bc4ec49f1ce", "filename": "crates/parser/test_data/parser/ok/0059_loops_in_parens.txt", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.txt", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.txt?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -86,9 +86,8 @@ SOURCE_FILE\n               WHILE_EXPR\n                 WHILE_KW \"while\"\n                 WHITESPACE \" \"\n-                CONDITION\n-                  LITERAL\n-                    TRUE_KW \"true\"\n+                LITERAL\n+                  TRUE_KW \"true\"\n                 WHITESPACE \" \"\n                 BLOCK_EXPR\n                   STMT_LIST"}, {"sha": "50057a02d8091a66d00e10c9842b5818bf9a6046", "filename": "crates/syntax/test_data/parser/validation/0031_block_inner_attrs.rast", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2F0031_block_inner_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a1b7169b483ff49ea420ec1ed3822d739589df58/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2F0031_block_inner_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2F0031_block_inner_attrs.rast?ref=a1b7169b483ff49ea420ec1ed3822d739589df58", "patch": "@@ -49,9 +49,8 @@ SOURCE_FILE@0..350\n           IF_EXPR@134..257\n             IF_KW@134..136 \"if\"\n             WHITESPACE@136..137 \" \"\n-            CONDITION@137..141\n-              LITERAL@137..141\n-                TRUE_KW@137..141 \"true\"\n+            LITERAL@137..141\n+              TRUE_KW@137..141 \"true\"\n             WHITESPACE@141..142 \" \"\n             BLOCK_EXPR@142..257\n               STMT_LIST@142..257\n@@ -94,9 +93,8 @@ SOURCE_FILE@0..350\n         WHILE_EXPR@262..347\n           WHILE_KW@262..267 \"while\"\n           WHITESPACE@267..268 \" \"\n-          CONDITION@268..272\n-            LITERAL@268..272\n-              TRUE_KW@268..272 \"true\"\n+          LITERAL@268..272\n+            TRUE_KW@268..272 \"true\"\n           WHITESPACE@272..273 \" \"\n           BLOCK_EXPR@273..347\n             STMT_LIST@273..347"}]}