{"sha": "c1436c3aa52c25fdbaa174bfe28df318d3ce879d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxNDM2YzNhYTUyYzI1ZmRiYWExNzRiZmUyOGRmMzE4ZDNjZTg3OWQ=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2017-10-23T22:10:29Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2017-10-26T22:47:46Z"}, "message": "Handle eval_always queries in force()\n\nPart of #45238", "tree": {"sha": "c5a83e2b56f5f53873721b6ad73e623e9e8d39f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5a83e2b56f5f53873721b6ad73e623e9e8d39f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1436c3aa52c25fdbaa174bfe28df318d3ce879d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1436c3aa52c25fdbaa174bfe28df318d3ce879d", "html_url": "https://github.com/rust-lang/rust/commit/c1436c3aa52c25fdbaa174bfe28df318d3ce879d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1436c3aa52c25fdbaa174bfe28df318d3ce879d/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d72fc67a414a023278511d7eadfb1228d334249", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d72fc67a414a023278511d7eadfb1228d334249", "html_url": "https://github.com/rust-lang/rust/commit/9d72fc67a414a023278511d7eadfb1228d334249"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "e8f1ee10d6dbf127f8e0e528555f4c5dc604584a", "filename": "src/librustc/ty/maps/plumbing.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c1436c3aa52c25fdbaa174bfe28df318d3ce879d/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1436c3aa52c25fdbaa174bfe28df318d3ce879d/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs?ref=c1436c3aa52c25fdbaa174bfe28df318d3ce879d", "patch": "@@ -433,10 +433,17 @@ macro_rules! define_maps {\n                 profq_msg!(tcx, ProfileQueriesMsg::ProviderBegin);\n                 let res = tcx.cycle_check(span, Query::$name(key), || {\n                     tcx.sess.diagnostic().track_diagnostics(|| {\n-                        tcx.dep_graph.with_task(dep_node,\n-                                                tcx,\n-                                                key,\n-                                                Self::compute_result)\n+                        if dep_node.kind.is_eval_always() {\n+                            tcx.dep_graph.with_eval_always_task(dep_node,\n+                                                                tcx,\n+                                                                key,\n+                                                                Self::compute_result)\n+                        } else {\n+                            tcx.dep_graph.with_task(dep_node,\n+                                                    tcx,\n+                                                    key,\n+                                                    Self::compute_result)\n+                        }\n                     })\n                 })?;\n                 profq_msg!(tcx, ProfileQueriesMsg::ProviderEnd);"}]}