{"sha": "19c651f4a18597b72113777a9122fc1f2a1ac6bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5YzY1MWY0YTE4NTk3YjcyMTEzNzc3YTkxMjJmYzFmMmExYWM2YmI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-08T19:26:31Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-08T19:26:31Z"}, "message": "rustc: Parse region types", "tree": {"sha": "1257cf0a0e45001df3a266ac12f30307bdcc3bd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1257cf0a0e45001df3a266ac12f30307bdcc3bd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19c651f4a18597b72113777a9122fc1f2a1ac6bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19c651f4a18597b72113777a9122fc1f2a1ac6bb", "html_url": "https://github.com/rust-lang/rust/commit/19c651f4a18597b72113777a9122fc1f2a1ac6bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19c651f4a18597b72113777a9122fc1f2a1ac6bb/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6224fdcd08bf94f0410e804ff8f144fc5494ec6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6224fdcd08bf94f0410e804ff8f144fc5494ec6d", "html_url": "https://github.com/rust-lang/rust/commit/6224fdcd08bf94f0410e804ff8f144fc5494ec6d"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "d3acacefefc5b34e13fba53d20e4d40aab6e7f19", "filename": "src/rustc/syntax/parse/parser.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/19c651f4a18597b72113777a9122fc1f2a1ac6bb/src%2Frustc%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19c651f4a18597b72113777a9122fc1f2a1ac6bb/src%2Frustc%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fsyntax%2Fparse%2Fparser.rs?ref=19c651f4a18597b72113777a9122fc1f2a1ac6bb", "patch": "@@ -416,6 +416,21 @@ fn parse_ret_ty(p: parser) -> (ast::ret_style, @ast::ty) {\n     }\n }\n \n+fn parse_region(p: parser) -> ast::region {\n+    alt p.token {\n+        token::IDENT(sid, _) if p.look_ahead(1u) == token::DOT {\n+            let string = p.get_str(sid);\n+            p.bump(); p.bump();\n+            if string == \"self\" {\n+                ast::re_self\n+            } else {\n+                ast::re_named(string)\n+            }\n+        }\n+        _ { ast::re_inferred }\n+    }\n+}\n+\n fn parse_ty(p: parser, colons_before_params: bool) -> @ast::ty {\n     let lo = p.span.lo;\n \n@@ -467,6 +482,11 @@ fn parse_ty(p: parser, colons_before_params: bool) -> @ast::ty {\n         let t = ast::ty_vec(parse_mt(p));\n         expect(p, token::RBRACKET);\n         t\n+    } else if p.token == token::BINOP(token::AND) {\n+        p.bump();\n+        let region = parse_region(p);\n+        let mt = parse_mt(p);\n+        ast::ty_rptr(region, mt)\n     } else if eat_word(p, \"fn\") {\n         let proto = parse_fn_ty_proto(p);\n         alt proto {"}]}