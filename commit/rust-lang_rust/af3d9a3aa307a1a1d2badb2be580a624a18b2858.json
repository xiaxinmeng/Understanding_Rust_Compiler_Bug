{"sha": "af3d9a3aa307a1a1d2badb2be580a624a18b2858", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmM2Q5YTNhYTMwN2ExYTFkMmJhZGIyYmU1ODBhNjI0YTE4YjI4NTg=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-05-24T13:09:33Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-05-24T13:09:33Z"}, "message": "Make `thir_check_unsafety` itself responsible for checking gate", "tree": {"sha": "31c83a6179a7ff775147d6588d2b48cc26a67ac7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31c83a6179a7ff775147d6588d2b48cc26a67ac7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af3d9a3aa307a1a1d2badb2be580a624a18b2858", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af3d9a3aa307a1a1d2badb2be580a624a18b2858", "html_url": "https://github.com/rust-lang/rust/commit/af3d9a3aa307a1a1d2badb2be580a624a18b2858", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af3d9a3aa307a1a1d2badb2be580a624a18b2858/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13e7b237fdc774c4df131f55233f0f5af737a333", "url": "https://api.github.com/repos/rust-lang/rust/commits/13e7b237fdc774c4df131f55233f0f5af737a333", "html_url": "https://github.com/rust-lang/rust/commit/13e7b237fdc774c4df131f55233f0f5af737a333"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "70ffff1ab99809f522bb4289788706acc71d63ba", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/af3d9a3aa307a1a1d2badb2be580a624a18b2858/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af3d9a3aa307a1a1d2badb2be580a624a18b2858/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=af3d9a3aa307a1a1d2badb2be580a624a18b2858", "patch": "@@ -873,9 +873,8 @@ fn analysis(tcx: TyCtxt<'_>, (): ()) -> Result<()> {\n \n     sess.time(\"MIR_effect_checking\", || {\n         for def_id in tcx.body_owners() {\n-            if tcx.sess.opts.debugging_opts.thir_unsafeck {\n-                tcx.ensure().thir_check_unsafety(def_id);\n-            } else {\n+            tcx.ensure().thir_check_unsafety(def_id);\n+            if !tcx.sess.opts.debugging_opts.thir_unsafeck {\n                 mir::transform::check_unsafety::check_unsafety(tcx, def_id);\n             }\n "}, {"sha": "d8f1f5b97eeaaaeb332d46cce26fde930db701e3", "filename": "compiler/rustc_mir_build/src/build/mod.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/af3d9a3aa307a1a1d2badb2be580a624a18b2858/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af3d9a3aa307a1a1d2badb2be580a624a18b2858/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs?ref=af3d9a3aa307a1a1d2badb2be580a624a18b2858", "patch": "@@ -46,15 +46,13 @@ fn mir_build(tcx: TyCtxt<'_>, def: ty::WithOptConstParam<LocalDefId>) -> Body<'_\n     let body_owner_kind = tcx.hir().body_owner_kind(id);\n     let typeck_results = tcx.typeck_opt_const_arg(def);\n \n-    if tcx.sess.opts.debugging_opts.thir_unsafeck {\n-        // Ensure unsafeck is ran before we steal the THIR.\n-        match def {\n-            ty::WithOptConstParam { did, const_param_did: Some(const_param_did) } => {\n-                tcx.ensure().thir_check_unsafety_for_const_arg((did, const_param_did))\n-            }\n-            ty::WithOptConstParam { did, const_param_did: None } => {\n-                tcx.ensure().thir_check_unsafety(did)\n-            }\n+    // Ensure unsafeck is ran before we steal the THIR.\n+    match def {\n+        ty::WithOptConstParam { did, const_param_did: Some(const_param_did) } => {\n+            tcx.ensure().thir_check_unsafety_for_const_arg((did, const_param_did))\n+        }\n+        ty::WithOptConstParam { did, const_param_did: None } => {\n+            tcx.ensure().thir_check_unsafety(did)\n         }\n     }\n "}, {"sha": "f849c32cbbaa513ed1fbaa8b574489d7266c6a89", "filename": "compiler/rustc_mir_build/src/check_unsafety.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/af3d9a3aa307a1a1d2badb2be580a624a18b2858/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af3d9a3aa307a1a1d2badb2be580a624a18b2858/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs?ref=af3d9a3aa307a1a1d2badb2be580a624a18b2858", "patch": "@@ -329,6 +329,11 @@ impl UnsafeOpKind {\n // FIXME: checking unsafety for closures should be handled by their parent body,\n // as they inherit their \"safety context\" from their declaration site.\n pub fn check_unsafety<'tcx>(tcx: TyCtxt<'tcx>, def: ty::WithOptConstParam<LocalDefId>) {\n+    // THIR unsafeck is gated under `-Z thir-unsafeck`\n+    if !tcx.sess.opts.debugging_opts.thir_unsafeck {\n+        return;\n+    }\n+\n     let (thir, expr) = tcx.thir_body(def);\n     let thir = &thir.borrow();\n     // If `thir` is empty, a type error occured, skip this body."}]}