{"sha": "56f24d7c193da3b972994e24b86e1fd63e1e8c9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ZjI0ZDdjMTkzZGEzYjk3Mjk5NGUyNGI4NmUxZmQ2M2UxZThjOWU=", "commit": {"author": {"name": "Alex Burka", "email": "durka42+github@gmail.com", "date": "2016-04-28T15:47:03Z"}, "committer": {"name": "Alex Burka", "email": "durka42+github@gmail.com", "date": "2016-04-28T15:47:03Z"}, "message": "add link to match section", "tree": {"sha": "c5350464a48d6bc5e152f7e9c108637ee80db33e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5350464a48d6bc5e152f7e9c108637ee80db33e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56f24d7c193da3b972994e24b86e1fd63e1e8c9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56f24d7c193da3b972994e24b86e1fd63e1e8c9e", "html_url": "https://github.com/rust-lang/rust/commit/56f24d7c193da3b972994e24b86e1fd63e1e8c9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56f24d7c193da3b972994e24b86e1fd63e1e8c9e/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1e4fbd2a235e9ce31bd614dff667a81b8f8c360", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1e4fbd2a235e9ce31bd614dff667a81b8f8c360", "html_url": "https://github.com/rust-lang/rust/commit/e1e4fbd2a235e9ce31bd614dff667a81b8f8c360"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "1fb74e33a622f203d15f3df135e7559d5ec1b35e", "filename": "src/doc/book/structs.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/56f24d7c193da3b972994e24b86e1fd63e1e8c9e/src%2Fdoc%2Fbook%2Fstructs.md", "raw_url": "https://github.com/rust-lang/rust/raw/56f24d7c193da3b972994e24b86e1fd63e1e8c9e/src%2Fdoc%2Fbook%2Fstructs.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fstructs.md?ref=56f24d7c193da3b972994e24b86e1fd63e1e8c9e", "patch": "@@ -179,6 +179,9 @@ let black_r = black.0;\n let Point(_, origin_y, origin_z) = origin;\n ```\n \n+Patterns like `Point(_, origin_y, origin_z)` are also used in\n+[match expressions][match].\n+\n One case when a tuple struct is very useful is when it has only one element.\n We call this the \u2018newtype\u2019 pattern, because it allows you to create a new type\n that is distinct from its contained value and also expresses its own semantic\n@@ -224,6 +227,8 @@ Good names are important, and while values in a tuple struct can be\n referenced with dot notation as well, a `struct` gives us actual names,\n rather than positions.\n \n+[match]: match.html\n+\n # Unit-like structs\n \n You can define a `struct` with no members at all:"}]}