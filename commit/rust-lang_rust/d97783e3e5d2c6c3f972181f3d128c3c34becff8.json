{"sha": "d97783e3e5d2c6c3f972181f3d128c3c34becff8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5Nzc4M2UzZTVkMmM2YzNmOTcyMTgxZjNkMTI4YzNjMzRiZWNmZjg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-01-20T00:01:47Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-01-20T00:01:47Z"}, "message": "test: \"tag\" -> \"enum\" in compile-fail", "tree": {"sha": "4bf9bc5c76b52573327c610e8698b178986ccbfd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bf9bc5c76b52573327c610e8698b178986ccbfd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d97783e3e5d2c6c3f972181f3d128c3c34becff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d97783e3e5d2c6c3f972181f3d128c3c34becff8", "html_url": "https://github.com/rust-lang/rust/commit/d97783e3e5d2c6c3f972181f3d128c3c34becff8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d97783e3e5d2c6c3f972181f3d128c3c34becff8/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97ed871fc15acee89a1d8606763b5ed5d885546a", "url": "https://api.github.com/repos/rust-lang/rust/commits/97ed871fc15acee89a1d8606763b5ed5d885546a", "html_url": "https://github.com/rust-lang/rust/commit/97ed871fc15acee89a1d8606763b5ed5d885546a"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "6b6b052e71494c3525c6729965af1087f786ed8e", "filename": "src/test/compile-fail/alt-tag-nullary.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Falt-tag-nullary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Falt-tag-nullary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Falt-tag-nullary.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,7 +1,7 @@\n // error-pattern: mismatched types\n \n-tag a { A; }\n-tag b { B; }\n+enum a { A; }\n+enum b { B; }\n \n fn main() { let x: a = A; alt x { B { } } }\n "}, {"sha": "b17b4ae1d5457b54a00eacd43990e9b8ab1f9460", "filename": "src/test/compile-fail/alt-tag-unary.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Falt-tag-unary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Falt-tag-unary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Falt-tag-unary.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,7 +1,7 @@\n // error-pattern: mismatched types\n \n-tag a { A(int); }\n-tag b { B(int); }\n+enum a { A(int); }\n+enum b { B(int); }\n \n fn main() { let x: a = A(0); alt x { B(y) { } } }\n "}, {"sha": "2c8805f39b3a4bd5a9cca1a6b59a47e04dc021fb", "filename": "src/test/compile-fail/bogus-tag.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Fbogus-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Fbogus-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbogus-tag.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -2,7 +2,7 @@\n \n // error-pattern: unresolved\n \n-tag color { rgb(int, int, int); rgba(int, int, int, int); }\n+enum color { rgb(int, int, int); rgba(int, int, int, int); }\n \n fn main() {\n     let red: color = rgb(255, 0, 0);"}, {"sha": "310a487a0f4c0818f1b220b9b681e3780ac31df5", "filename": "src/test/compile-fail/export-no-tag-variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Fexport-no-tag-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Fexport-no-tag-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fexport-no-tag-variants.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -6,7 +6,7 @@\n mod foo {\n     export t;\n \n-    tag t { t1; }\n+    enum t { t1; }\n }\n \n fn main() { let x = foo::t1; }"}, {"sha": "e280ec481c7df883bf5a1c596e1b6c78d6bdef93", "filename": "src/test/compile-fail/export-tag-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Fexport-tag-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Fexport-tag-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fexport-tag-variant.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -5,7 +5,7 @@ mod foo {\n \n     fn x() { }\n \n-    tag y { y1; }\n+    enum y { y1; }\n }\n \n fn main() { let z = foo::y1; }"}, {"sha": "42d5a0303be1db1725090203f6f8bbf72c6c929c", "filename": "src/test/compile-fail/infinite-tag-type-recursion.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,8 +1,8 @@\n // xfail-test\n // -*- rust -*-\n \n-// error-pattern: tag of infinite size\n+// error-pattern: enum of infinite size\n \n-tag mlist { cons(int, mlist); nil; }\n+enum mlist { cons(int, mlist); nil; }\n \n fn main() { let a = cons(10, cons(11, nil)); }\n\\ No newline at end of file"}, {"sha": "9db73667cebbed5a1ffa75949b98e73663d6b876", "filename": "src/test/compile-fail/let-destruct-refutable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Flet-destruct-refutable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Flet-destruct-refutable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flet-destruct-refutable.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,6 +1,6 @@\n // error-pattern:refutable pattern\n \n-tag xx { xx(int); yy; }\n+enum xx { xx(int); yy; }\n \n fn main() {\n     let @{x: xx(x), y: y} = @{x: xx(10), y: 20};"}, {"sha": "66c0c1bbdaae489ea5b00dc789c0756b92652b35", "filename": "src/test/compile-fail/name-clash-nullary-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary-2.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,5 +1,5 @@\n // error-pattern:Declaration of thpppt shadows\n-tag ack { thpppt; ffff; }\n+enum ack { thpppt; ffff; }\n \n fn main() {\n   let thpppt: int = 42;"}, {"sha": "894d15bdaa3df5bbe9b27d2fb3ecf4edd81ef884", "filename": "src/test/compile-fail/occurs-check-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Foccurs-check-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Foccurs-check-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Foccurs-check-3.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,4 +1,4 @@\n // error-pattern:mismatched types\n // From Issue #778\n-tag clam<T> { a(T); }\n+enum clam<T> { a(T); }\n fn main() { let c; c = a(c); alt c { a::<int>(_) { } } }"}, {"sha": "9eb0dda781780536ecf6b46b93ed78ae452c0c84", "filename": "src/test/compile-fail/or-patter-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2For-patter-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2For-patter-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2For-patter-mismatch.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: mismatched types\n \n-tag blah { a(int, int, uint); b(int, int); }\n+enum blah { a(int, int, uint); b(int, int); }\n \n fn main() { alt a(1, 1, 2u) { a(_, x, y) | b(x, y) { } } }"}, {"sha": "a73a1cd7862f9b5d9a90db7c749f18fd8362955e", "filename": "src/test/compile-fail/pattern-tyvar-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar-2.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -6,7 +6,7 @@ import option::some;\n \n // error-pattern: mismatched types\n \n-tag bar { t1((), option::t<[int]>); t2; }\n+enum bar { t1((), option::t<[int]>); t2; }\n \n fn foo(t: bar) -> int { alt t { t1(_, some(x)) { ret x * 3; } _ { fail; } } }\n "}, {"sha": "4fb36a07c2a34f34fb51fd39055ff6ec4b693776", "filename": "src/test/compile-fail/pattern-tyvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpattern-tyvar.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -5,7 +5,7 @@ import option::some;\n \n // error-pattern: mismatched types\n \n-tag bar { t1((), option::t<[int]>); t2; }\n+enum bar { t1((), option::t<[int]>); t2; }\n \n fn foo(t: bar) {\n     alt t {"}, {"sha": "5c71dc4af07a5aabeff1502f93f37422acc8c664", "filename": "src/test/compile-fail/tag-type-args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Ftag-type-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Ftag-type-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftag-type-args.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: Wrong number of type arguments\n \n-tag quux<T> { bar }\n+enum quux<T> { bar }\n \n fn foo(c: quux) { assert (false); }\n "}, {"sha": "f605407b8828ea49aef0fe3a065078afce76dd34", "filename": "src/test/compile-fail/tag-variant-cast-non-nullary.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Ftag-variant-cast-non-nullary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Ftag-variant-cast-non-nullary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftag-variant-cast-non-nullary.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,7 +1,7 @@\n //error-pattern: non-scalar cast\n // black and white have the same discriminator value ...\n \n-tag non_nullary {\n+enum non_nullary {\n     nullary;\n     other(int);\n }"}, {"sha": "4ca253cebef9b1e909fa59abc5e5d74c57aaa161", "filename": "src/test/compile-fail/tag-variant-disr-dup.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Ftag-variant-disr-dup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Ftag-variant-disr-dup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftag-variant-disr-dup.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -2,7 +2,7 @@\n \n // black and white have the same discriminator value ...\n \n-tag color {\n+enum color {\n     red = 0xff0000;\n     green = 0x00ff00;\n     blue = 0x0000ff;"}, {"sha": "2885b6ac98fa4735a2ac8a4c1047c2a4778b44cf", "filename": "src/test/compile-fail/tag-variant-disr-non-nullary.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Ftag-variant-disr-non-nullary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Ftag-variant-disr-non-nullary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftag-variant-disr-non-nullary.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,7 +1,7 @@\n //error-pattern: discriminator values can only be used with a c-like enum\n // black and white have the same discriminator value ...\n \n-tag color {\n+enum color {\n     red = 0xff0000;\n     green = 0x00ff00;\n     blue = 0x0000ff;"}, {"sha": "74213309773f0195569930d59042e6b51327823e", "filename": "src/test/compile-fail/tag-variant-disr-type-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Ftag-variant-disr-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Ftag-variant-disr-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftag-variant-disr-type-mismatch.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,6 +1,6 @@\n //error-pattern: mismatched types\n \n-tag color {\n+enum color {\n     red = 1u;\n     blue = 2;\n }"}, {"sha": "abc90108d75149f5fd24c86cc97d9494939426e9", "filename": "src/test/compile-fail/unreachable-arm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Funreachable-arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Funreachable-arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funreachable-arm.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,5 +1,5 @@\n // error-pattern:unreachable pattern\n \n-tag foo { a(@foo, int); b(uint); }\n+enum foo { a(@foo, int); b(uint); }\n \n fn main() { alt b(1u) { b(_) | a(@_, 1) { } a(_, 1) { } } }"}, {"sha": "877dc65d9c10084cc9b6f7fc1451033e83195b5c", "filename": "src/test/compile-fail/unsafe-alt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Funsafe-alt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97783e3e5d2c6c3f972181f3d128c3c34becff8/src%2Ftest%2Fcompile-fail%2Funsafe-alt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsafe-alt.rs?ref=d97783e3e5d2c6c3f972181f3d128c3c34becff8", "patch": "@@ -1,6 +1,6 @@\n // error-pattern:invalidate reference i\n \n-tag foo { left({mutable x: int}); right(bool); }\n+enum foo { left({mutable x: int}); right(bool); }\n \n fn main() {\n     let x = left({mutable x: 10});"}]}