{"sha": "fdf1136e7963ecb72db9681ce1ffe53d1e46e739", "node_id": "C_kwDOAAsO6NoAKGZkZjExMzZlNzk2M2VjYjcyZGI5NjgxY2UxZmZlNTNkMWU0NmU3Mzk", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-01-02T10:03:34Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-01-02T10:05:35Z"}, "message": "Replace folds with for loops", "tree": {"sha": "81fa76e99d37f94c78b34c3211b36c939747507e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81fa76e99d37f94c78b34c3211b36c939747507e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdf1136e7963ecb72db9681ce1ffe53d1e46e739", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf1136e7963ecb72db9681ce1ffe53d1e46e739", "html_url": "https://github.com/rust-lang/rust/commit/fdf1136e7963ecb72db9681ce1ffe53d1e46e739", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdf1136e7963ecb72db9681ce1ffe53d1e46e739/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b706ae22dc94231bdbb4bf91632e3ea45dfccce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b706ae22dc94231bdbb4bf91632e3ea45dfccce6", "html_url": "https://github.com/rust-lang/rust/commit/b706ae22dc94231bdbb4bf91632e3ea45dfccce6"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "6cc311fd7585d3adbf9ea34acff318c91ed43692", "filename": "crates/ide_assists/src/handlers/extract_module.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fdf1136e7963ecb72db9681ce1ffe53d1e46e739/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf1136e7963ecb72db9681ce1ffe53d1e46e739/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs?ref=fdf1136e7963ecb72db9681ce1ffe53d1e46e739", "patch": "@@ -311,18 +311,17 @@ impl Module {\n         let (body_items, mut replacements, record_field_parents, impls) =\n             get_replacements_for_visibilty_change(self.body_items.clone(), false);\n \n-        let impl_items = impls.into_iter().fold(Vec::new(), |mut impl_items, x| {\n-            let mut this_impl_items =\n-                x.syntax().descendants().fold(Vec::new(), |mut this_impl_items, x| {\n-                    if let Some(item) = ast::Item::cast(x) {\n-                        this_impl_items.push(item);\n-                    }\n-                    return this_impl_items;\n-                });\n+        let mut impl_items = Vec::new();\n+        for impl_ in impls {\n+            let mut this_impl_items = Vec::new();\n+            for node in impl_.syntax().descendants() {\n+                if let Some(item) = ast::Item::cast(node) {\n+                    this_impl_items.push(item);\n+                }\n+            }\n \n             impl_items.append(&mut this_impl_items);\n-            return impl_items;\n-        });\n+        }\n \n         let (_, mut impl_item_replacements, _, _) =\n             get_replacements_for_visibilty_change(impl_items, true);"}, {"sha": "07f5eab514adefa520b7e546aff217d1066f6372", "filename": "crates/ide_assists/src/handlers/generate_function.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fdf1136e7963ecb72db9681ce1ffe53d1e46e739/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf1136e7963ecb72db9681ce1ffe53d1e46e739/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs?ref=fdf1136e7963ecb72db9681ce1ffe53d1e46e739", "patch": "@@ -456,10 +456,10 @@ fn fn_args(\n /// assert_eq!(names, expected);\n /// ```\n fn deduplicate_arg_names(arg_names: &mut Vec<String>) {\n-    let arg_name_counts = arg_names.iter().fold(FxHashMap::default(), |mut m, name| {\n-        *m.entry(name).or_insert(0) += 1;\n-        m\n-    });\n+    let mut arg_name_counts = FxHashMap::default();\n+    for name in arg_names.iter() {\n+        *arg_name_counts.entry(name).or_insert(0) += 1;\n+    }\n     let duplicate_arg_names: FxHashSet<String> = arg_name_counts\n         .into_iter()\n         .filter(|(_, count)| *count >= 2)"}]}