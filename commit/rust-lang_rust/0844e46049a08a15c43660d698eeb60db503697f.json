{"sha": "0844e46049a08a15c43660d698eeb60db503697f", "node_id": "C_kwDOAAsO6NoAKDA4NDRlNDYwNDlhMDhhMTVjNDM2NjBkNjk4ZWViNjBkYjUwMzY5N2Y", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-20T12:39:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-20T12:39:21Z"}, "message": "Auto merge of #2391 - RalfJung:stderr, r=oli-obk\n\non an error, always print the unnormalized stderr\n\nCurrently we skip this if a stderr diff was printed, but the stderr diff is normalized, so e.g. one cannot learn line numbers from it.\n\nIs there a way to get the diff to only print the parts the differ, like a usual `diff -u`? Currently it always seems to print the full output, so with a long stderr we now get doubly long test results even if the diff is actually rather small.", "tree": {"sha": "a2cdacd92311a286ab9fc3dc3b504a2a141772c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2cdacd92311a286ab9fc3dc3b504a2a141772c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0844e46049a08a15c43660d698eeb60db503697f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0844e46049a08a15c43660d698eeb60db503697f", "html_url": "https://github.com/rust-lang/rust/commit/0844e46049a08a15c43660d698eeb60db503697f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0844e46049a08a15c43660d698eeb60db503697f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90fbdadade50edac6d57eaed9c880ad15f3c42a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/90fbdadade50edac6d57eaed9c880ad15f3c42a9", "html_url": "https://github.com/rust-lang/rust/commit/90fbdadade50edac6d57eaed9c880ad15f3c42a9"}, {"sha": "9f9aa00f5d4900c2ec4071fd80ac184f9f95f718", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f9aa00f5d4900c2ec4071fd80ac184f9f95f718", "html_url": "https://github.com/rust-lang/rust/commit/9f9aa00f5d4900c2ec4071fd80ac184f9f95f718"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "917e382379abe34443d2dba3ed6713eff12020c4", "filename": "ui_test/src/lib.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0844e46049a08a15c43660d698eeb60db503697f/ui_test%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0844e46049a08a15c43660d698eeb60db503697f/ui_test%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Flib.rs?ref=0844e46049a08a15c43660d698eeb60db503697f", "patch": "@@ -164,15 +164,14 @@ pub fn run_tests(config: Config) -> Result<()> {\n     if !failures.is_empty() {\n         for (path, miri, revision, errors, stderr) in &failures {\n             eprintln!();\n-            eprint!(\"{}\", path.display().to_string().underline());\n+            eprint!(\"{}\", path.display().to_string().underline().bold());\n             if !revision.is_empty() {\n                 eprint!(\" (revision `{}`)\", revision);\n             }\n-            eprint!(\" {}\", \"FAILED\".red());\n+            eprint!(\" {}\", \"FAILED:\".red().bold());\n             eprintln!();\n             eprintln!(\"command: {:?}\", miri);\n             eprintln!();\n-            let mut dump_stderr = true;\n             for error in errors {\n                 match error {\n                     Error::ExitStatus(mode, exit_status) => eprintln!(\"{mode:?} got {exit_status}\"),\n@@ -194,9 +193,6 @@ pub fn run_tests(config: Config) -> Result<()> {\n                     Error::PatternFoundInPassTest =>\n                         eprintln!(\"{}\", \"error pattern found in success test\".red()),\n                     Error::OutputDiffers { path, actual, expected } => {\n-                        if path.extension().unwrap() == \"stderr\" {\n-                            dump_stderr = false;\n-                        }\n                         eprintln!(\"actual output differed from expected {}\", path.display());\n                         eprintln!(\"{}\", pretty_assertions::StrComparison::new(expected, actual));\n                         eprintln!()\n@@ -223,14 +219,11 @@ pub fn run_tests(config: Config) -> Result<()> {\n                 }\n                 eprintln!();\n             }\n-            // Unless we already dumped the stderr via an OutputDiffers diff, let's dump it here.\n-            if dump_stderr {\n-                eprintln!(\"actual stderr:\");\n-                eprintln!(\"{}\", stderr);\n-                eprintln!();\n-            }\n+            eprintln!(\"full stderr:\");\n+            eprintln!(\"{}\", stderr);\n+            eprintln!();\n         }\n-        eprintln!(\"{}\", \"failures:\".red().underline());\n+        eprintln!(\"{}\", \"FAILURES:\".red().underline().bold());\n         for (path, _miri, _revision, _errors, _stderr) in &failures {\n             eprintln!(\"    {}\", path.display());\n         }"}]}