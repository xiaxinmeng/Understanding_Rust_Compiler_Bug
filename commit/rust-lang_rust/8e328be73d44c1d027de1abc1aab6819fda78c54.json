{"sha": "8e328be73d44c1d027de1abc1aab6819fda78c54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMzI4YmU3M2Q0NGMxZDAyN2RlMWFiYzFhYWI2ODE5ZmRhNzhjNTQ=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-06-24T22:22:17Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-06-24T22:54:34Z"}, "message": "Fix grammar mistake\n\npresent perfect passive constructions need to use the past participle form,\nwhich for run is \"run\".", "tree": {"sha": "f63bc407e4ea46003da61faa002822f570fc5a35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f63bc407e4ea46003da61faa002822f570fc5a35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e328be73d44c1d027de1abc1aab6819fda78c54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e328be73d44c1d027de1abc1aab6819fda78c54", "html_url": "https://github.com/rust-lang/rust/commit/8e328be73d44c1d027de1abc1aab6819fda78c54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e328be73d44c1d027de1abc1aab6819fda78c54/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5585cce06c19524b5e8f44dcbe8de80af5083cf8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5585cce06c19524b5e8f44dcbe8de80af5083cf8", "html_url": "https://github.com/rust-lang/rust/commit/5585cce06c19524b5e8f44dcbe8de80af5083cf8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "75e07fc531253d3a5f91176e3312c94c8a0a4c03", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e328be73d44c1d027de1abc1aab6819fda78c54/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e328be73d44c1d027de1abc1aab6819fda78c54/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=8e328be73d44c1d027de1abc1aab6819fda78c54", "patch": "@@ -410,7 +410,7 @@ impl<T> MaybeUninit<T> {\n     /// (now safely initialized) contents of `self`.\n     ///\n     /// As the content is stored inside a `MaybeUninit`, the destructor is not\n-    /// ran for the inner data if the MaybeUninit leaves scope without a call to\n+    /// run for the inner data if the MaybeUninit leaves scope without a call to\n     /// [`assume_init`], [`assume_init_drop`], or similar. Code that receives\n     /// the mutable reference returned by this function needs to keep this in\n     /// mind. The safety model of Rust regards leaks as safe, but they are"}]}