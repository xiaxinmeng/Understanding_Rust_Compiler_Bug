{"sha": "8a1706610b2cf458fe6e5ed12e227e3ca9dcaa6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhMTcwNjYxMGIyY2Y0NThmZTZlNWVkMTJlMjI3ZTNjYTlkY2FhNmQ=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-02-23T06:03:59Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-07T04:37:28Z"}, "message": "Avoid unnecessary casts in struct_GEP", "tree": {"sha": "19d93e71b5d9e09814dac95f0318e3217647e0ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19d93e71b5d9e09814dac95f0318e3217647e0ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a1706610b2cf458fe6e5ed12e227e3ca9dcaa6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a1706610b2cf458fe6e5ed12e227e3ca9dcaa6d", "html_url": "https://github.com/rust-lang/rust/commit/8a1706610b2cf458fe6e5ed12e227e3ca9dcaa6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a1706610b2cf458fe6e5ed12e227e3ca9dcaa6d/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e2302a56f7615b73e42daaa242da4bd64b25d93", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e2302a56f7615b73e42daaa242da4bd64b25d93", "html_url": "https://github.com/rust-lang/rust/commit/5e2302a56f7615b73e42daaa242da4bd64b25d93"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "37129dce90c7d35a3f07fd766c30ec834532f51b", "filename": "src/librustc/middle/trans/adt.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8a1706610b2cf458fe6e5ed12e227e3ca9dcaa6d/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a1706610b2cf458fe6e5ed12e227e3ca9dcaa6d/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs?ref=8a1706610b2cf458fe6e5ed12e227e3ca9dcaa6d", "patch": "@@ -205,24 +205,28 @@ pub fn trans_GEP(bcx: block, r: &Repr, val: ValueRef, discr: int, ix: uint)\n                 NoDtor => val,\n                 DtorPresent | DtorAbsent => GEPi(bcx, val, [0, 0])\n             };\n-            struct_GEP(bcx, st, val, ix)\n+            struct_GEP(bcx, st, val, ix, false)\n         }\n         General(ref cases) => {\n             struct_GEP(bcx, &cases[discr as uint],\n-                       GEPi(bcx, val, [0, 1]), ix)\n+                       GEPi(bcx, val, [0, 1]), ix, true)\n         }\n     }\n }\n \n-fn struct_GEP(bcx: block, st: &Struct, val: ValueRef, ix: uint)\n-    -> ValueRef {\n+fn struct_GEP(bcx: block, st: &Struct, val: ValueRef, ix: uint,\n+              needs_cast: bool) -> ValueRef {\n     let ccx = bcx.ccx();\n \n-    let real_llty = T_struct(st.fields.map(\n-        |&ty| type_of::type_of(ccx, ty)));\n-    let cast_val = PointerCast(bcx, val, T_ptr(real_llty));\n+    let val = if needs_cast {\n+        let real_llty = T_struct(st.fields.map(\n+            |&ty| type_of::type_of(ccx, ty)));\n+        PointerCast(bcx, val, T_ptr(real_llty))\n+    } else {\n+        val\n+    };\n \n-    GEPi(bcx, cast_val, [0, ix])\n+    GEPi(bcx, val, [0, ix])\n }\n \n pub fn trans_const(ccx: @CrateContext, r: &Repr, discr: int,"}]}