{"sha": "75b98a9076e89b3cfc0883948e61d06ad881434c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1Yjk4YTkwNzZlODliM2NmYzA4ODM5NDhlNjFkMDZhZDg4MTQzNGM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-08T00:48:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-09T05:11:47Z"}, "message": "Correct the arithmetic on 64-bit builds.", "tree": {"sha": "873d940ed2535c4c2b6c5edd65ec64c2077cb923", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/873d940ed2535c4c2b6c5edd65ec64c2077cb923"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75b98a9076e89b3cfc0883948e61d06ad881434c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75b98a9076e89b3cfc0883948e61d06ad881434c", "html_url": "https://github.com/rust-lang/rust/commit/75b98a9076e89b3cfc0883948e61d06ad881434c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75b98a9076e89b3cfc0883948e61d06ad881434c/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34a507443234c7508c60fc6fa6abf6f362d5bb40", "url": "https://api.github.com/repos/rust-lang/rust/commits/34a507443234c7508c60fc6fa6abf6f362d5bb40", "html_url": "https://github.com/rust-lang/rust/commit/34a507443234c7508c60fc6fa6abf6f362d5bb40"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "169a2d0c4ec99d7126e6cf6a85b6d28745ca203c", "filename": "src/rt/memory_region.cpp", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/75b98a9076e89b3cfc0883948e61d06ad881434c/src%2Frt%2Fmemory_region.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/75b98a9076e89b3cfc0883948e61d06ad881434c/src%2Frt%2Fmemory_region.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmemory_region.cpp?ref=75b98a9076e89b3cfc0883948e61d06ad881434c", "patch": "@@ -6,10 +6,18 @@\n //\n // #define TRACK_ALLOCATIONS\n \n+#define PTR_SIZE (sizeof(void*))\n+#define ALIGN_PTR(x) (((x)+PTR_SIZE-1)/PTR_SIZE*PTR_SIZE)\n+#define HEADER_SIZE ALIGN_PTR(sizeof(alloc_header))\n #define MAGIC 0xbadc0ffe\n \n memory_region::alloc_header *memory_region::get_header(void *mem) {\n-    return (alloc_header *)((char *)mem - sizeof(alloc_header));\n+    return (alloc_header *)((char *)mem - HEADER_SIZE);\n+}\n+\n+void *memory_region::get_data(alloc_header *ptr) {\n+    assert(ptr->magic == MAGIC);\n+    return (void*)((char *)ptr + HEADER_SIZE);\n }\n \n memory_region::memory_region(rust_srv *srv, bool synchronized) :\n@@ -54,7 +62,7 @@ memory_region::realloc(void *mem, size_t size) {\n         add_alloc();\n     }\n     size_t old_size = size;\n-    size += sizeof(alloc_header);\n+    size += HEADER_SIZE;\n     alloc_header *alloc = get_header(mem);\n     assert(alloc->magic == MAGIC);\n     alloc->size = old_size;\n@@ -64,7 +72,7 @@ memory_region::realloc(void *mem, size_t size) {\n         printf(\"at index %d, found %p, expected %p\\n\",\n                alloc->index, _allocation_list[alloc->index], alloc);\n         printf(\"realloc: ptr 0x%\" PRIxPTR \" (%s) is not in allocation_list\\n\",\n-            (uintptr_t) &alloc->data, alloc->tag);\n+               (uintptr_t) get_data(alloc), alloc->tag);\n         _srv->fatal(\"not in allocation_list\", __FILE__, __LINE__, \"\");\n     }\n     else {\n@@ -74,25 +82,27 @@ memory_region::realloc(void *mem, size_t size) {\n     }\n #endif\n     if (_synchronized) { _lock.unlock(); }\n-    return newMem->data;\n+    return get_data(newMem);\n }\n \n void *\n memory_region::malloc(size_t size, const char *tag, bool zero) {\n     size_t old_size = size;\n-    size += sizeof(alloc_header);\n+    size += HEADER_SIZE;\n     alloc_header *mem = (alloc_header *)_srv->malloc(size);\n     mem->magic = MAGIC;\n     mem->tag = tag;\n     mem->index = -1;\n     mem->size = old_size;\n-    claim_alloc(mem->data);\n+\n+    void *data = get_data(mem);\n+    claim_alloc(data);\n \n     if(zero) {\n-        memset(mem->data, 0, old_size);\n+        memset(data, 0, old_size);\n     }\n \n-    return mem->data;\n+    return data;\n }\n \n void *"}, {"sha": "f60267cf3171f9499e4a4ddfb8a352572f06a8db", "filename": "src/rt/memory_region.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75b98a9076e89b3cfc0883948e61d06ad881434c/src%2Frt%2Fmemory_region.h", "raw_url": "https://github.com/rust-lang/rust/raw/75b98a9076e89b3cfc0883948e61d06ad881434c/src%2Frt%2Fmemory_region.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmemory_region.h?ref=75b98a9076e89b3cfc0883948e61d06ad881434c", "patch": "@@ -20,10 +20,10 @@ class memory_region {\n         int index;\n         const char *tag;\n         uint32_t size;\n-        char data[];\n     };\n \n     alloc_header *get_header(void *mem);\n+    void *get_data(alloc_header *);\n \n     rust_srv *_srv;\n     memory_region *_parent;"}]}