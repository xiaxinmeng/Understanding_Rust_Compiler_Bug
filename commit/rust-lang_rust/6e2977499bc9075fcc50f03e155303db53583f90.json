{"sha": "6e2977499bc9075fcc50f03e155303db53583f90", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMjk3NzQ5OWJjOTA3NWZjYzUwZjAzZTE1NTMwM2RiNTM1ODNmOTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-08T14:54:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-08T14:54:03Z"}, "message": "Auto merge of #45866 - JohnColanduoni:issue-45731, r=alexcrichton\n\nDisable `mmap`  in `libbacktrace` on Apple platforms\n\nFixes #45731\n\nlibbacktrace uses mmap if available to map ranges of the files containing debug information. On macOS `mmap` will succeed even if the mapped range does not exist, and a SIGBUS (with an unusual EXC_BAD_ACCESS code 10) will occur when the program attempts to page in the memory. To combat this we force `libbacktrace` to be built with the simple `read` based fallback on Apple platforms.", "tree": {"sha": "2a4bcceee000885f2660113c5f6641a753d75ea6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a4bcceee000885f2660113c5f6641a753d75ea6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e2977499bc9075fcc50f03e155303db53583f90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e2977499bc9075fcc50f03e155303db53583f90", "html_url": "https://github.com/rust-lang/rust/commit/6e2977499bc9075fcc50f03e155303db53583f90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e2977499bc9075fcc50f03e155303db53583f90/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bb96f651964e9c21e6e1647febd10ce71b2554d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb96f651964e9c21e6e1647febd10ce71b2554d", "html_url": "https://github.com/rust-lang/rust/commit/4bb96f651964e9c21e6e1647febd10ce71b2554d"}, {"sha": "8581b59fb39b0072665de59b1a70e708b251d4b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8581b59fb39b0072665de59b1a70e708b251d4b0", "html_url": "https://github.com/rust-lang/rust/commit/8581b59fb39b0072665de59b1a70e708b251d4b0"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "873220794bd0a128f7d3a42b3f5f0cb319122f64", "filename": "src/libbacktrace/configure", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e2977499bc9075fcc50f03e155303db53583f90/src%2Flibbacktrace%2Fconfigure", "raw_url": "https://github.com/rust-lang/rust/raw/6e2977499bc9075fcc50f03e155303db53583f90/src%2Flibbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fconfigure?ref=6e2977499bc9075fcc50f03e155303db53583f90", "patch": "@@ -12323,6 +12323,12 @@ fi\n \n   fi\n fi\n+\n+case \"${host_os}\" in\n+darwin*)\n+  have_mmap=no ;;\n+esac\n+\n if test \"$have_mmap\" = \"no\"; then\n   VIEW_FILE=read.lo\n   ALLOC_FILE=alloc.lo"}, {"sha": "ea1b27d807e13d9741f4fa7821f16e6f2e0006c3", "filename": "src/libbacktrace/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e2977499bc9075fcc50f03e155303db53583f90/src%2Flibbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/rust-lang/rust/raw/6e2977499bc9075fcc50f03e155303db53583f90/src%2Flibbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fconfigure.ac?ref=6e2977499bc9075fcc50f03e155303db53583f90", "patch": "@@ -283,6 +283,12 @@ else\n     AC_CHECK_FUNC(mmap, [have_mmap=yes], [have_mmap=no])\n   fi\n fi\n+\n+case \"${host_os}\" in\n+darwin*)\n+  have_mmap=no ;;\n+esac\n+\n if test \"$have_mmap\" = \"no\"; then\n   VIEW_FILE=read.lo\n   ALLOC_FILE=alloc.lo"}, {"sha": "ec35035dab447acdea677714d8e26f62bb45d6b2", "filename": "src/test/run-pass/issue-45731.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/6e2977499bc9075fcc50f03e155303db53583f90/src%2Ftest%2Frun-pass%2Fissue-45731.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e2977499bc9075fcc50f03e155303db53583f90/src%2Ftest%2Frun-pass%2Fissue-45731.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-45731.rs?ref=6e2977499bc9075fcc50f03e155303db53583f90", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:--test -g\n+\n+use std::{env, panic, fs};\n+\n+#[cfg(target_os = \"macos\")]\n+#[test]\n+fn simple_test() {\n+    // Find our dSYM and replace the DWARF binary with an empty file\n+    let mut dsym_path = env::current_exe().unwrap();\n+    let executable_name = dsym_path.file_name().unwrap().to_str().unwrap().to_string();\n+    assert!(dsym_path.pop()); // Pop executable\n+    dsym_path.push(format!(\"{}.dSYM/Contents/Resources/DWARF/{0}\", executable_name));\n+    {\n+        let file = fs::OpenOptions::new().read(false).write(true).truncate(true).create(false)\n+            .open(&dsym_path).unwrap();\n+    }\n+\n+    env::set_var(\"RUST_BACKTRACE\", \"1\");\n+\n+    // We don't need to die of panic, just trigger a backtrace\n+    let _ = panic::catch_unwind(|| {\n+        assert!(false);\n+    });\n+}"}]}