{"sha": "8ba92d9ce4ec834e925a514d280c2d822334ca00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYTkyZDljZTRlYzgzNGU5MjVhNTE0ZDI4MGMyZDgyMjMzNGNhMDA=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-05T13:29:58Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-05T15:39:20Z"}, "message": "Use more efficient &&str to String conversion (clippy::inefficient_to_string)", "tree": {"sha": "2add9fa40e8dd0b3ecfcb28fdf0de39c50c948b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2add9fa40e8dd0b3ecfcb28fdf0de39c50c948b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ba92d9ce4ec834e925a514d280c2d822334ca00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ba92d9ce4ec834e925a514d280c2d822334ca00", "html_url": "https://github.com/rust-lang/rust/commit/8ba92d9ce4ec834e925a514d280c2d822334ca00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ba92d9ce4ec834e925a514d280c2d822334ca00/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1c3eb60433163e341feddb7c1a1cc7f65421764", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1c3eb60433163e341feddb7c1a1cc7f65421764", "html_url": "https://github.com/rust-lang/rust/commit/a1c3eb60433163e341feddb7c1a1cc7f65421764"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "d6b8b8cafb79cb64d2294563a2f3ef3aff7d731b", "filename": "src/librustc_builtin_macros/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ba92d9ce4ec834e925a514d280c2d822334ca00/src%2Flibrustc_builtin_macros%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ba92d9ce4ec834e925a514d280c2d822334ca00/src%2Flibrustc_builtin_macros%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fformat.rs?ref=8ba92d9ce4ec834e925a514d280c2d822334ca00", "patch": "@@ -284,7 +284,7 @@ impl<'a, 'b> Context<'a, 'b> {\n                                 err.tool_only_span_suggestion(\n                                     sp,\n                                     &format!(\"use the `{}` trait\", name),\n-                                    fmt.to_string(),\n+                                    (*fmt).to_string(),\n                                     Applicability::MaybeIncorrect,\n                                 );\n                             }"}, {"sha": "c8f0fe8c7239558ea75b30eb47a3b6a1f2a0bed3", "filename": "src/librustc_codegen_llvm/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ba92d9ce4ec834e925a514d280c2d822334ca00/src%2Flibrustc_codegen_llvm%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ba92d9ce4ec834e925a514d280c2d822334ca00/src%2Flibrustc_codegen_llvm%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fasm.rs?ref=8ba92d9ce4ec834e925a514d280c2d822334ca00", "patch": "@@ -60,7 +60,7 @@ impl AsmBuilderMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n             .chain(ia.inputs.iter().map(|s| s.to_string()))\n             .chain(ext_constraints)\n             .chain(clobbers)\n-            .chain(arch_clobbers.iter().map(|s| s.to_string()))\n+            .chain(arch_clobbers.iter().map(|s| (*s).to_string()))\n             .collect::<Vec<String>>()\n             .join(\",\");\n "}, {"sha": "e212dc81070ac7dc8c1c9cba7f7bb53a537e32b8", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ba92d9ce4ec834e925a514d280c2d822334ca00/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ba92d9ce4ec834e925a514d280c2d822334ca00/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=8ba92d9ce4ec834e925a514d280c2d822334ca00", "patch": "@@ -343,7 +343,8 @@ impl DirtyCleanVisitor<'tcx> {\n                 &format!(\"clean/dirty auto-assertions not yet defined for {:?}\", node),\n             ),\n         };\n-        let labels = Labels::from_iter(labels.iter().flat_map(|s| s.iter().map(|l| l.to_string())));\n+        let labels =\n+            Labels::from_iter(labels.iter().flat_map(|s| s.iter().map(|l| (*l).to_string())));\n         (name, labels)\n     }\n "}, {"sha": "75d493e0f5e7a57891667a32418cde65fca3603f", "filename": "src/librustc_lint/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ba92d9ce4ec834e925a514d280c2d822334ca00/src%2Flibrustc_lint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ba92d9ce4ec834e925a514d280c2d822334ca00/src%2Flibrustc_lint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fcontext.rs?ref=8ba92d9ce4ec834e925a514d280c2d822334ca00", "patch": "@@ -369,7 +369,7 @@ impl LintStore {\n                         return if *silent {\n                             CheckLintNameResult::Ok(&lint_ids)\n                         } else {\n-                            CheckLintNameResult::Tool(Err((Some(&lint_ids), name.to_string())))\n+                            CheckLintNameResult::Tool(Err((Some(&lint_ids), (*name).to_string())))\n                         };\n                     }\n                     CheckLintNameResult::Ok(&lint_ids)\n@@ -404,7 +404,7 @@ impl LintStore {\n                         return if *silent {\n                             CheckLintNameResult::Tool(Err((Some(&lint_ids), complete_name)))\n                         } else {\n-                            CheckLintNameResult::Tool(Err((Some(&lint_ids), name.to_string())))\n+                            CheckLintNameResult::Tool(Err((Some(&lint_ids), (*name).to_string())))\n                         };\n                     }\n                     CheckLintNameResult::Tool(Err((Some(&lint_ids), complete_name)))"}, {"sha": "26462e61e5d5709c28749f5d7e4756506107f3c0", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ba92d9ce4ec834e925a514d280c2d822334ca00/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ba92d9ce4ec834e925a514d280c2d822334ca00/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=8ba92d9ce4ec834e925a514d280c2d822334ca00", "patch": "@@ -151,7 +151,7 @@ crate fn placeholder_type_error(\n         .unwrap_or(&\"ParamName\");\n \n     let mut sugg: Vec<_> =\n-        placeholder_types.iter().map(|sp| (*sp, type_name.to_string())).collect();\n+        placeholder_types.iter().map(|sp| (*sp, (*type_name).to_string())).collect();\n     if generics.is_empty() {\n         sugg.push((span, format!(\"<{}>\", type_name)));\n     } else if let Some(arg) = generics.iter().find(|arg| match arg.name {\n@@ -160,7 +160,7 @@ crate fn placeholder_type_error(\n     }) {\n         // Account for `_` already present in cases like `struct S<_>(_);` and suggest\n         // `struct S<T>(T);` instead of `struct S<_, T>(T);`.\n-        sugg.push((arg.span, type_name.to_string()));\n+        sugg.push((arg.span, (*type_name).to_string()));\n     } else {\n         sugg.push((\n             generics.iter().last().unwrap().span.shrink_to_hi(),"}]}