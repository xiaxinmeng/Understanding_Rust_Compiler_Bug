{"sha": "8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYjMzZmYwZjc0YzY0YmQ0ZGRmYmNiMGVkYTBjODI3N2ZmOTk4MGE=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-12-15T05:11:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-15T05:11:28Z"}, "message": "Merge pull request #2284 from topecongiro/trait-aliases\n\nFormat trait aliases", "tree": {"sha": "c8cb6a6455c0ece56f61762ff10643268beba747", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8cb6a6455c0ece56f61762ff10643268beba747"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaM1mACRBK7hj4Ov3rIwAAdHIIABY5TnNwYqI8lCqj78piouD9\nTtfwBVvs/Ww39TpnAmIQOk9tlhw5oCGpjwl4G3SH8QW4pk0L6crepN9z7PEaDSVb\nvLWacyQkRuklOZgw2MiuaTBpSI5xF8isAs3o8361GNZodSrnEG1+XAPLfFxTqk4W\n5yEQUWWxuqHVue1pROg2leUClLGTqTTlcO6lsZZojHzYO7HzqFoU5ioeX5SZfK4Z\nF62a6K71I1ex3eN4nztL6RwYlnE6t9eLBwWYKN27t40kZGiAri3wIGJpWvPqzda4\npATFe1s2xvzAl+XBL0uqAvrtLtJ+5cCXzPJT8qc7b4EBuZXHvFUpvy4Rn4rQlOY=\n=F+Qy\n-----END PGP SIGNATURE-----\n", "payload": "tree c8cb6a6455c0ece56f61762ff10643268beba747\nparent c0701f5fa57a1771d8e137decebe99c01674dd2b\nparent 3a98b5a5bee9234cb22e964864b11288a12bd67c\nauthor Nick Cameron <nrc@ncameron.org> 1513314688 +1300\ncommitter GitHub <noreply@github.com> 1513314688 +1300\n\nMerge pull request #2284 from topecongiro/trait-aliases\n\nFormat trait aliases"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a", "html_url": "https://github.com/rust-lang/rust/commit/8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0701f5fa57a1771d8e137decebe99c01674dd2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0701f5fa57a1771d8e137decebe99c01674dd2b", "html_url": "https://github.com/rust-lang/rust/commit/c0701f5fa57a1771d8e137decebe99c01674dd2b"}, {"sha": "3a98b5a5bee9234cb22e964864b11288a12bd67c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a98b5a5bee9234cb22e964864b11288a12bd67c", "html_url": "https://github.com/rust-lang/rust/commit/3a98b5a5bee9234cb22e964864b11288a12bd67c"}], "stats": {"total": 70, "additions": 65, "deletions": 5}, "files": [{"sha": "0c152d98767c05b9ded337312d64804e667d0e75", "filename": "src/items.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a", "patch": "@@ -1087,6 +1087,22 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n     }\n }\n \n+pub fn format_trait_alias(\n+    context: &RewriteContext,\n+    ident: ast::Ident,\n+    generics: &ast::Generics,\n+    ty_param_bounds: &ast::TyParamBounds,\n+    shape: Shape,\n+) -> Option<String> {\n+    let alias = ident.name.as_str();\n+    // 6 = \"trait \", 2 = \" =\"\n+    let g_shape = shape.offset_left(6 + alias.len())?.sub_width(2)?;\n+    let generics_str = rewrite_generics(context, generics, g_shape, generics.span)?;\n+    let lhs = format!(\"trait {}{} =\", alias, generics_str);\n+    // 1 = \";\"\n+    rewrite_assign_rhs(context, lhs, ty_param_bounds, shape.sub_width(1)?).map(|s| s + \";\")\n+}\n+\n fn format_unit_struct(context: &RewriteContext, p: &StructParts, offset: Indent) -> Option<String> {\n     let header_str = format_header(p.prefix, p.ident, p.vis);\n     let generics_str = if let Some(generics) = p.generics {"}, {"sha": "ae9f7a091f926deb094c15294b19b5542bae58c5", "filename": "src/visitor.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a", "patch": "@@ -22,8 +22,8 @@ use comment::{combine_strs_with_missing_comments, contains_comment, remove_trail\n               CodeCharKind, CommentCodeSlices, FindUncommented};\n use comment::rewrite_comment;\n use config::{BraceStyle, Config};\n-use items::{format_impl, format_trait, rewrite_associated_impl_type, rewrite_associated_type,\n-            rewrite_type_alias, FnSig, StaticParts, StructParts};\n+use items::{format_impl, format_trait, format_trait_alias, rewrite_associated_impl_type,\n+            rewrite_associated_type, rewrite_type_alias, FnSig, StaticParts, StructParts};\n use lists::{itemize_list, write_list, DefinitiveListTactic, ListFormatting, SeparatorPlace,\n             SeparatorTactic};\n use macros::{rewrite_macro, MacroPosition};\n@@ -373,9 +373,16 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                 let rw = format_trait(&self.get_context(), item, self.block_indent);\n                 self.push_rewrite(item.span, rw);\n             }\n-            ast::ItemKind::TraitAlias(..) => {\n-                // FIXME: #2283.\n-                self.push_rewrite(item.span, None);\n+            ast::ItemKind::TraitAlias(ref generics, ref ty_param_bounds) => {\n+                let shape = Shape::indented(self.block_indent, self.config);\n+                let rw = format_trait_alias(\n+                    &self.get_context(),\n+                    item.ident,\n+                    generics,\n+                    ty_param_bounds,\n+                    shape,\n+                );\n+                self.push_rewrite(item.span, rw);\n             }\n             ast::ItemKind::ExternCrate(_) => {\n                 let rw = rewrite_extern_crate(&self.get_context(), item);"}, {"sha": "823b1e44a1e05257962c838fc5f971b936738e32", "filename": "tests/source/trait.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a/tests%2Fsource%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a/tests%2Fsource%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ftrait.rs?ref=8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a", "patch": "@@ -71,3 +71,19 @@ trait Foo {\n     type ItRev = <MergingUntypedTimeSeries<SliceSeries<SliceWindow>> as UntypedTimeSeries>::IterRev;\n     type IteRev = <MergingUntypedTimeSeries<SliceSeries<SliceWindow>> as UntypedTimeSeries>::IterRev;\n }\n+\n+// Trait aliases\n+trait FooBar =\n+    Foo \n+    + Bar;\n+trait FooBar <A, B, C>=\n+    Foo \n+    + Bar;\n+trait AAAAAAAAAAAAAAAAAA = BBBBBBBBBBBBBBBBBBB + CCCCCCCCCCCCCCCCCCCCCCCCCCCCC + DDDDDDDDDDDDDDDDDD;\n+trait AAAAAAAAAAAAAAAAAAA = BBBBBBBBBBBBBBBBBBB + CCCCCCCCCCCCCCCCCCCCCCCCCCCCC + DDDDDDDDDDDDDDDDDD;\n+trait AAAAAAAAAAAAAAAAAA = BBBBBBBBBBBBBBBBBBB + CCCCCCCCCCCCCCCCCCCCCCCCCCCCC + DDDDDDDDDDDDDDDDDDD;\n+trait AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<A, B, C, D, E> = FooBar;\n+trait AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<A, B, C, D, E> = FooBar;\n+#[rustfmt_skip]\n+trait FooBar = Foo\n+    + Bar;"}, {"sha": "a570cb4d5408b8fe179bffb12bd33cab9231f50b", "filename": "tests/target/trait.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a/tests%2Ftarget%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a/tests%2Ftarget%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftrait.rs?ref=8db33ff0f74c64bd4ddfbcb0eda0c8277ff9980a", "patch": "@@ -99,3 +99,24 @@ trait Foo {\n     type IteRev =\n         <MergingUntypedTimeSeries<SliceSeries<SliceWindow>> as UntypedTimeSeries>::IterRev;\n }\n+\n+// Trait aliases\n+trait FooBar = Foo + Bar;\n+trait FooBar<A, B, C> = Foo + Bar;\n+trait AAAAAAAAAAAAAAAAAA = BBBBBBBBBBBBBBBBBBB + CCCCCCCCCCCCCCCCCCCCCCCCCCCCC + DDDDDDDDDDDDDDDDDD;\n+trait AAAAAAAAAAAAAAAAAAA =\n+    BBBBBBBBBBBBBBBBBBB + CCCCCCCCCCCCCCCCCCCCCCCCCCCCC + DDDDDDDDDDDDDDDDDD;\n+trait AAAAAAAAAAAAAAAAAA =\n+    BBBBBBBBBBBBBBBBBBB + CCCCCCCCCCCCCCCCCCCCCCCCCCCCC + DDDDDDDDDDDDDDDDDDD;\n+trait AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<A, B, C, D, E> =\n+    FooBar;\n+trait AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<\n+    A,\n+    B,\n+    C,\n+    D,\n+    E,\n+> = FooBar;\n+#[rustfmt_skip]\n+trait FooBar = Foo\n+    + Bar;"}]}