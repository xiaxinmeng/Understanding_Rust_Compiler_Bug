{"sha": "88ec259cee17df6b78ce52b966148f0e03f02270", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZWMyNTljZWUxN2RmNmI3OGNlNTJiOTY2MTQ4ZjBlMDNmMDIyNzA=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-18T20:16:38Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-18T22:54:37Z"}, "message": "Put type descriptors in strings created by the runtime. Progress on #2638.", "tree": {"sha": "2d376e640e83a57071030c89c9fc9d3a478a0855", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d376e640e83a57071030c89c9fc9d3a478a0855"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88ec259cee17df6b78ce52b966148f0e03f02270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88ec259cee17df6b78ce52b966148f0e03f02270", "html_url": "https://github.com/rust-lang/rust/commit/88ec259cee17df6b78ce52b966148f0e03f02270", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88ec259cee17df6b78ce52b966148f0e03f02270/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4484d51c14ec3b70ed8d4b6700bc3536a3ee766", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4484d51c14ec3b70ed8d4b6700bc3536a3ee766", "html_url": "https://github.com/rust-lang/rust/commit/b4484d51c14ec3b70ed8d4b6700bc3536a3ee766"}], "stats": {"total": 54, "additions": 51, "deletions": 3}, "files": [{"sha": "f51c7b1caefdb1b0f134364c1c239a4c2efb54bd", "filename": "mk/rt.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/88ec259cee17df6b78ce52b966148f0e03f02270/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/88ec259cee17df6b78ce52b966148f0e03f02270/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=88ec259cee17df6b78ce52b966148f0e03f02270", "patch": "@@ -62,6 +62,7 @@ RUNTIME_CS_$(1) := \\\n               rt/rust_uv.cpp \\\n               rt/rust_log.cpp \\\n               rt/rust_port_selector.cpp \\\n+              rt/rust_util.cpp \\\n               rt/circular_buffer.cpp \\\n               rt/isaac/randport.cpp \\\n               rt/rust_kernel.cpp \\"}, {"sha": "ea938d386f466ba20e123741cf737ca50b626e32", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88ec259cee17df6b78ce52b966148f0e03f02270/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/88ec259cee17df6b78ce52b966148f0e03f02270/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=88ec259cee17df6b78ce52b966148f0e03f02270", "patch": "@@ -373,9 +373,7 @@ upcall_s_str_new_shared(s_str_new_shared_args *args) {\n     size_t str_fill = args->len + 1;\n     size_t str_alloc = str_fill;\n     args->retval = (rust_opaque_box *)\n-        task->kernel->malloc(sizeof(rust_opaque_box) +\n-                             vec_size<char>(str_fill),\n-                             \"str_new_shared\");\n+        task->boxed.malloc(&str_body_tydesc, str_fill);\n     rust_str *str = (rust_str *)box_body(args->retval);\n     str->body.fill = str_fill;\n     str->body.alloc = str_alloc;\n@@ -425,6 +423,7 @@ upcall_s_str_concat(s_str_concat_args *args) {\n     rust_vec_box* v = (rust_vec_box*)\n         task->kernel->malloc(fill + sizeof(rust_vec_box),\n                              \"str_concat\");\n+    v->header.td = args->lhs->header.td;\n     v->body.fill = v->body.alloc = fill;\n     memmove(&v->body.data[0], &lhs->data[0], lhs->fill - 1);\n     memmove(&v->body.data[lhs->fill - 1], &rhs->data[0], rhs->fill);"}, {"sha": "07f89ece6621daf26fb1471ae46b0ab073bcab64", "filename": "src/rt/rust_util.cpp", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/88ec259cee17df6b78ce52b966148f0e03f02270/src%2Frt%2Frust_util.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/88ec259cee17df6b78ce52b966148f0e03f02270/src%2Frt%2Frust_util.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.cpp?ref=88ec259cee17df6b78ce52b966148f0e03f02270", "patch": "@@ -0,0 +1,43 @@\n+#include \"rust_type.h\"\n+#include \"rust_shape.h\"\n+\n+\n+// A hardcoded type descriptor for strings, since the runtime needs to\n+// be able to create them.\n+\n+struct rust_shape_tables empty_shape_tables;\n+\n+uint8_t str_body_shape[] = {\n+    shape::SHAPE_UNBOXED_VEC,\n+    0x1, // is_pod\n+    0x1, 0x0, // size field: 1\n+    shape::SHAPE_U8\n+};\n+\n+struct type_desc str_body_tydesc = {\n+    0, // unused\n+    1, // size\n+    1, // align\n+    NULL, // take_glue\n+    NULL, // drop_glue\n+    NULL, // free_glue\n+    NULL, // visit_glue\n+    0, // unused\n+    0, // unused\n+    0, // unused\n+    0, // unused\n+    str_body_shape, // shape\n+    &empty_shape_tables, // shape_tables\n+    0, // unused\n+    0, // unused\n+};\n+\n+//\n+// Local Variables:\n+// mode: C++\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// End:\n+//"}, {"sha": "2040a641c474ce53d4505255de85110e10260cb5", "filename": "src/rt/rust_util.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88ec259cee17df6b78ce52b966148f0e03f02270/src%2Frt%2Frust_util.h", "raw_url": "https://github.com/rust-lang/rust/raw/88ec259cee17df6b78ce52b966148f0e03f02270/src%2Frt%2Frust_util.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.h?ref=88ec259cee17df6b78ce52b966148f0e03f02270", "patch": "@@ -5,6 +5,8 @@\n #include \"rust_task.h\"\n #include \"rust_env.h\"\n \n+extern struct type_desc str_body_tydesc;\n+\n // Inline fn used regularly elsewhere.\n \n static inline size_t\n@@ -82,6 +84,7 @@ make_str(rust_kernel* kernel, const char* c, size_t strlen,\n     size_t str_alloc = str_fill;\n     rust_str *str = (rust_str *)\n         kernel->malloc(vec_size<char>(str_fill), name);\n+    str->header.td = &str_body_tydesc;\n     str->body.fill = str_fill;\n     str->body.alloc = str_alloc;\n     memcpy(&str->body.data, c, strlen);\n@@ -94,6 +97,8 @@ make_str_vec(rust_kernel* kernel, size_t nstrs, char **strs) {\n     rust_vec_box *v = (rust_vec_box *)\n         kernel->malloc(vec_size<rust_vec_box*>(nstrs),\n                        \"str vec interior\");\n+    // FIXME: should have a real td (Issue #2639)\n+    v->header.td = NULL;\n     v->body.fill = v->body.alloc = sizeof(rust_vec_box*) * nstrs;\n     for (size_t i = 0; i < nstrs; ++i) {\n         rust_str *str = make_str(kernel, strs[i],"}]}