{"sha": "1a0988b899236f4fb4964c5be4b8d1cba909e549", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhMDk4OGI4OTkyMzZmNGZiNDk2NGM1YmU0YjhkMWNiYTkwOWU1NDk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-06T16:54:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-06T16:54:31Z"}, "message": "Merge #4316 #4351\n\n4316: do not truncate display for hover r=matklad a=bnjjj\n\nclose #4311 \n\n4351: Fix Windows server path r=matklad a=lnicola\n\nCC @Coder-256.\n\nCo-authored-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>\nCo-authored-by: Lauren\u021biu Nicola <lnicola@users.noreply.github.com>", "tree": {"sha": "b32d66171d5fa3e696f7efb068f86bba19c5b8ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b32d66171d5fa3e696f7efb068f86bba19c5b8ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a0988b899236f4fb4964c5be4b8d1cba909e549", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJesuvHCRBK7hj4Ov3rIwAAdHIIAKA1R0qYfZcutJwNf92L+pTo\nKb+3u2tl/RCxIpI8yN/MWO44JMsMx7p16njbC4gmyTzW9IZHRP4hIQWvsSA9Ahk2\n3vkIRt7kIjpZOLQQeOASsCmiYt7zoc5ATCU0ZalVyVs66oqCXb9q/rx9IfCc5yh5\nU8HaUVg65DUy4ERgWSgIycgXvHMKm7+5AH1MrVm7FCgPzGHY6dPB3OalhkuPwhHV\nwWrG6NKN0sW9VkCShOXWna9CqjrkYpIgXiXZnlUc4PyUpF68+QXx0GSPAX/3TcCT\n6JyXbp0cxGz49zVQSWoejR7VAz+DekEPiaazHN9qch4SuLRLKIW2Jb/XhUOJgFU=\n=DhJk\n-----END PGP SIGNATURE-----\n", "payload": "tree b32d66171d5fa3e696f7efb068f86bba19c5b8ec\nparent 5b697d5693091c2e9da0d8c7d50fdbff7e7a3147\nparent 1ec953f11744c708ba74c238737eac8e96a1c7b1\nparent e0b63855b1874ccc71a49c933f73c62c95a92d54\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1588784071 +0000\ncommitter GitHub <noreply@github.com> 1588784071 +0000\n\nMerge #4316 #4351\n\n4316: do not truncate display for hover r=matklad a=bnjjj\n\nclose #4311 \n\n4351: Fix Windows server path r=matklad a=lnicola\n\nCC @Coder-256.\n\nCo-authored-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>\nCo-authored-by: Lauren\u021biu Nicola <lnicola@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a0988b899236f4fb4964c5be4b8d1cba909e549", "html_url": "https://github.com/rust-lang/rust/commit/1a0988b899236f4fb4964c5be4b8d1cba909e549", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a0988b899236f4fb4964c5be4b8d1cba909e549/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b697d5693091c2e9da0d8c7d50fdbff7e7a3147", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b697d5693091c2e9da0d8c7d50fdbff7e7a3147", "html_url": "https://github.com/rust-lang/rust/commit/5b697d5693091c2e9da0d8c7d50fdbff7e7a3147"}, {"sha": "1ec953f11744c708ba74c238737eac8e96a1c7b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ec953f11744c708ba74c238737eac8e96a1c7b1", "html_url": "https://github.com/rust-lang/rust/commit/1ec953f11744c708ba74c238737eac8e96a1c7b1"}, {"sha": "e0b63855b1874ccc71a49c933f73c62c95a92d54", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0b63855b1874ccc71a49c933f73c62c95a92d54", "html_url": "https://github.com/rust-lang/rust/commit/e0b63855b1874ccc71a49c933f73c62c95a92d54"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "06d4f1c6395dde57931a3b8c022f4d45bdcaf317", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 45, "deletions": 4, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/1a0988b899236f4fb4964c5be4b8d1cba909e549/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a0988b899236f4fb4964c5be4b8d1cba909e549/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=1a0988b899236f4fb4964c5be4b8d1cba909e549", "patch": "@@ -143,7 +143,7 @@ fn hover_text_from_name_kind(db: &RootDatabase, def: Definition) -> Option<Strin\n             ModuleDef::TypeAlias(it) => from_def_source(db, it, mod_path),\n             ModuleDef::BuiltinType(it) => Some(it.to_string()),\n         },\n-        Definition::Local(it) => Some(rust_code_markup(&it.ty(db).display_truncated(db, None))),\n+        Definition::Local(it) => Some(rust_code_markup(&it.ty(db).display(db))),\n         Definition::TypeParam(_) | Definition::SelfType(_) => {\n             // FIXME: Hover for generic param\n             None\n@@ -208,7 +208,7 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n         }\n     }?;\n \n-    res.extend(Some(rust_code_markup(&ty.display_truncated(db, None))));\n+    res.extend(Some(rust_code_markup(&ty.display(db))));\n     let range = sema.original_range(&node).range;\n     Some(RangeInfo::new(range, res))\n }\n@@ -279,6 +279,47 @@ mod tests {\n         assert_eq!(trim_markup_opt(hover.info.first()), Some(\"u32\"));\n     }\n \n+    #[test]\n+    fn hover_shows_long_type_of_an_expression() {\n+        check_hover_result(\n+            r#\"\n+            //- /main.rs\n+            struct Scan<A, B, C> {\n+                a: A,\n+                b: B,\n+                c: C,\n+            }\n+\n+            struct FakeIter<I> {\n+                inner: I,\n+            }\n+\n+            struct OtherStruct<T> {\n+                i: T,\n+            }\n+\n+            enum FakeOption<T> {\n+                Some(T),\n+                None,\n+            }\n+\n+            fn scan<A, B, C>(a: A, b: B, c: C) -> FakeIter<Scan<OtherStruct<A>, B, C>> {\n+                FakeIter { inner: Scan { a, b, c } }\n+            }\n+\n+            fn main() {\n+                let num: i32 = 55;\n+                let closure = |memo: &mut u32, value: &u32, _another: &mut u32| -> FakeOption<u32> {\n+                    FakeOption::Some(*memo + value)\n+                };\n+                let number = 5u32;\n+                let mut iter<|> = scan(OtherStruct { i: num }, closure, number);\n+            }\n+            \"#,\n+            &[\"FakeIter<Scan<OtherStruct<OtherStruct<i32>>, |&mut u32, &u32, &mut u32| -> FakeOption<u32>, u32>>\"],\n+        );\n+    }\n+\n     #[test]\n     fn hover_shows_fn_signature() {\n         // Single file with result\n@@ -405,7 +446,7 @@ mod tests {\n     }\n \n     #[test]\n-    fn hover_omits_default_generic_types() {\n+    fn hover_default_generic_types() {\n         check_hover_result(\n             r#\"\n //- /main.rs\n@@ -417,7 +458,7 @@ struct Test<K, T = u8> {\n fn main() {\n     let zz<|> = Test { t: 23, k: 33 };\n }\"#,\n-            &[\"Test<i32>\"],\n+            &[\"Test<i32, u8>\"],\n         );\n     }\n "}, {"sha": "301e9a49cba9efdc28ccb856f6bc65ab197ce6d5", "filename": "docs/user/readme.adoc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a0988b899236f4fb4964c5be4b8d1cba909e549/docs%2Fuser%2Freadme.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/1a0988b899236f4fb4964c5be4b8d1cba909e549/docs%2Fuser%2Freadme.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Freadme.adoc?ref=1a0988b899236f4fb4964c5be4b8d1cba909e549", "patch": "@@ -61,7 +61,7 @@ The server binary is stored in:\n \n * Linux: `~/.config/Code/User/globalStorage/matklad.rust-analyzer`\n * macOS: `~/Library/Application Support/Code/User/globalStorage/matklad.rust-analyzer`\n-* Windows: `%APPDATA%\\Code\\User\\globalStorage`\n+* Windows: `%APPDATA%\\Code\\User\\globalStorage\\matklad.rust-analyzer`\n \n Note that we only support the latest version of VS Code.\n "}]}