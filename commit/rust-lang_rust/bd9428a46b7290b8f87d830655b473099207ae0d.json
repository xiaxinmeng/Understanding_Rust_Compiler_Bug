{"sha": "bd9428a46b7290b8f87d830655b473099207ae0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkOTQyOGE0NmI3MjkwYjhmODdkODMwNjU1YjQ3MzA5OTIwN2FlMGQ=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2017-07-13T02:39:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-13T02:39:02Z"}, "message": "Update mod.rs", "tree": {"sha": "e9f74a7ace0e8c4b0692f2660efa58103fb78d75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9f74a7ace0e8c4b0692f2660efa58103fb78d75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd9428a46b7290b8f87d830655b473099207ae0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd9428a46b7290b8f87d830655b473099207ae0d", "html_url": "https://github.com/rust-lang/rust/commit/bd9428a46b7290b8f87d830655b473099207ae0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd9428a46b7290b8f87d830655b473099207ae0d/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f85579d4a2c342654f9b158fafd565eb159fdb59", "url": "https://api.github.com/repos/rust-lang/rust/commits/f85579d4a2c342654f9b158fafd565eb159fdb59", "html_url": "https://github.com/rust-lang/rust/commit/f85579d4a2c342654f9b158fafd565eb159fdb59"}], "stats": {"total": 18, "additions": 1, "deletions": 17}, "files": [{"sha": "bd5b40de9a07137385ee15ce243aa83c4df5ddd7", "filename": "src/libstd/sys/redox/mod.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bd9428a46b7290b8f87d830655b473099207ae0d/src%2Flibstd%2Fsys%2Fredox%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd9428a46b7290b8f87d830655b473099207ae0d/src%2Flibstd%2Fsys%2Fredox%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fmod.rs?ref=bd9428a46b7290b8f87d830655b473099207ae0d", "patch": "@@ -40,23 +40,7 @@ pub mod time;\n \n #[cfg(not(test))]\n pub fn init() {\n-    use alloc::oom;\n-\n-    oom::set_oom_handler(oom_handler);\n-\n-    // A nicer handler for out-of-memory situations than the default one. This\n-    // one prints a message to stderr before aborting. It is critical that this\n-    // code does not allocate any memory since we are in an OOM situation. Any\n-    // errors are ignored while printing since there's nothing we can do about\n-    // them and we are about to exit anyways.\n-    fn oom_handler() -> ! {\n-        use intrinsics;\n-        let msg = \"fatal runtime error: out of memory\\n\";\n-        unsafe {\n-            let _ = syscall::write(2, msg.as_bytes());\n-            intrinsics::abort();\n-        }\n-    }\n+    \n }\n \n pub fn decode_error_kind(errno: i32) -> ErrorKind {"}]}