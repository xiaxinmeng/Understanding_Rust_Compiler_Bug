{"sha": "cd0d2866fc61e03aeca7bd7d1bc652e0443d2b3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMGQyODY2ZmM2MWUwM2FlY2E3YmQ3ZDFiYzY1MmUwNDQzZDJiM2Q=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-21T09:12:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-21T09:12:04Z"}, "message": "make grammar independent of syntax tree", "tree": {"sha": "e6b1718e4557a33921bf6637e76bf74c0d3cfa96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6b1718e4557a33921bf6637e76bf74c0d3cfa96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd0d2866fc61e03aeca7bd7d1bc652e0443d2b3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd0d2866fc61e03aeca7bd7d1bc652e0443d2b3d", "html_url": "https://github.com/rust-lang/rust/commit/cd0d2866fc61e03aeca7bd7d1bc652e0443d2b3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd0d2866fc61e03aeca7bd7d1bc652e0443d2b3d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b2e70df99c8afad5e4825f18d037f77d3e4eda6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b2e70df99c8afad5e4825f18d037f77d3e4eda6", "html_url": "https://github.com/rust-lang/rust/commit/1b2e70df99c8afad5e4825f18d037f77d3e4eda6"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "800d5a4a29cffeaca33fdbddb0791a41c5b47272", "filename": "crates/ra_syntax/src/parsing/grammar.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/cd0d2866fc61e03aeca7bd7d1bc652e0443d2b3d/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0d2866fc61e03aeca7bd7d1bc652e0443d2b3d/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fgrammar.rs?ref=cd0d2866fc61e03aeca7bd7d1bc652e0443d2b3d", "patch": "@@ -37,7 +37,6 @@ mod type_params;\n mod types;\n \n use crate::{\n-    SyntaxNode,\n     SyntaxKind::{self, *},\n     parsing::{\n         token_set::TokenSet,\n@@ -52,25 +51,26 @@ pub(super) fn root(p: &mut Parser) {\n     m.complete(p, SOURCE_FILE);\n }\n \n-pub(super) fn reparser(node: &SyntaxNode) -> Option<fn(&mut Parser)> {\n-    let res = match node.kind() {\n+pub(super) fn reparser(\n+    node: SyntaxKind,\n+    first_child: Option<SyntaxKind>,\n+    parent: Option<SyntaxKind>,\n+) -> Option<fn(&mut Parser)> {\n+    let res = match node {\n         BLOCK => expressions::block,\n         NAMED_FIELD_DEF_LIST => items::named_field_def_list,\n         NAMED_FIELD_LIST => items::named_field_list,\n         ENUM_VARIANT_LIST => items::enum_variant_list,\n         MATCH_ARM_LIST => items::match_arm_list,\n         USE_TREE_LIST => items::use_tree_list,\n         EXTERN_ITEM_LIST => items::extern_item_list,\n-        TOKEN_TREE if node.first_child().unwrap().kind() == L_CURLY => items::token_tree,\n-        ITEM_LIST => {\n-            let parent = node.parent().unwrap();\n-            match parent.kind() {\n-                IMPL_BLOCK => items::impl_item_list,\n-                TRAIT_DEF => items::trait_item_list,\n-                MODULE => items::mod_item_list,\n-                _ => return None,\n-            }\n-        }\n+        TOKEN_TREE if first_child? == L_CURLY => items::token_tree,\n+        ITEM_LIST => match parent? {\n+            IMPL_BLOCK => items::impl_item_list,\n+            TRAIT_DEF => items::trait_item_list,\n+            MODULE => items::mod_item_list,\n+            _ => return None,\n+        },\n         _ => return None,\n     };\n     Some(res)"}, {"sha": "2c860b3df025aa6e2f4d86ed09640b22d6aea993", "filename": "crates/ra_syntax/src/parsing/reparsing.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd0d2866fc61e03aeca7bd7d1bc652e0443d2b3d/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0d2866fc61e03aeca7bd7d1bc652e0443d2b3d/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs?ref=cd0d2866fc61e03aeca7bd7d1bc652e0443d2b3d", "patch": "@@ -83,7 +83,11 @@ fn find_reparsable_node(\n     range: TextRange,\n ) -> Option<(&SyntaxNode, fn(&mut Parser))> {\n     let node = algo::find_covering_node(node, range);\n-    node.ancestors().find_map(|node| grammar::reparser(node).map(|r| (node, r)))\n+    node.ancestors().find_map(|node| {\n+        let first_child = node.first_child().map(|it| it.kind());\n+        let parent = node.parent().map(|it| it.kind());\n+        grammar::reparser(node.kind(), first_child, parent).map(|r| (node, r))\n+    })\n }\n \n fn is_balanced(tokens: &[Token]) -> bool {"}]}