{"sha": "12465a8a3cc74d0d103aedda08d281a07354521e", "node_id": "C_kwDOAAsO6NoAKDEyNDY1YThhM2NjNzRkMGQxMDNhZWRkYTA4ZDI4MWEwNzM1NDUyMWU", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-10-07T12:46:49Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-10-07T13:00:14Z"}, "message": "Expose HasSource::source through Semantics with caching behaviour", "tree": {"sha": "204cb11ea52bddf807d442afaf5a277d32c85d2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/204cb11ea52bddf807d442afaf5a277d32c85d2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12465a8a3cc74d0d103aedda08d281a07354521e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12465a8a3cc74d0d103aedda08d281a07354521e", "html_url": "https://github.com/rust-lang/rust/commit/12465a8a3cc74d0d103aedda08d281a07354521e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12465a8a3cc74d0d103aedda08d281a07354521e/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb27c58a042e5b9166fd475b4442a598bd40a7aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb27c58a042e5b9166fd475b4442a598bd40a7aa", "html_url": "https://github.com/rust-lang/rust/commit/fb27c58a042e5b9166fd475b4442a598bd40a7aa"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "2e8342e4e01676b53240ca98f6c586063394578b", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/12465a8a3cc74d0d103aedda08d281a07354521e/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12465a8a3cc74d0d103aedda08d281a07354521e/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=12465a8a3cc74d0d103aedda08d281a07354521e", "patch": "@@ -25,9 +25,9 @@ use crate::{\n     db::HirDatabase,\n     semantics::source_to_def::{ChildContainer, SourceToDefCache, SourceToDefCtx},\n     source_analyzer::{resolve_hir_path, SourceAnalyzer},\n-    Access, AssocItem, Callable, ConstParam, Crate, Field, Function, HirFileId, Impl, InFile,\n-    Label, LifetimeParam, Local, MacroDef, Module, ModuleDef, Name, Path, ScopeDef, Trait, Type,\n-    TypeAlias, TypeParam, VariantDef,\n+    Access, AssocItem, Callable, ConstParam, Crate, Field, Function, HasSource, HirFileId, Impl,\n+    InFile, Label, LifetimeParam, Local, MacroDef, Module, ModuleDef, Name, Path, ScopeDef, Trait,\n+    Type, TypeAlias, TypeParam, VariantDef,\n };\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n@@ -190,6 +190,14 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         self.imp.descend_node_into_attributes(node)\n     }\n \n+    /// Search for a definition's source and cache its syntax tree\n+    pub fn source<Def: HasSource>(&self, def: Def) -> Option<InFile<Def::Ast>>\n+    where\n+        Def::Ast: AstNode,\n+    {\n+        self.imp.source(def)\n+    }\n+\n     pub fn hir_file_for(&self, syntax_node: &SyntaxNode) -> HirFileId {\n         self.imp.find_file(syntax_node.clone()).file_id\n     }\n@@ -845,6 +853,15 @@ impl<'db> SemanticsImpl<'db> {\n         SemanticsScope { db: self.db, file_id, resolver }\n     }\n \n+    fn source<Def: HasSource>(&self, def: Def) -> Option<InFile<Def::Ast>>\n+    where\n+        Def::Ast: AstNode,\n+    {\n+        let res = def.source(self.db)?;\n+        self.cache(find_root(res.value.syntax()), res.file_id);\n+        Some(res)\n+    }\n+\n     fn analyze(&self, node: &SyntaxNode) -> SourceAnalyzer {\n         self.analyze_impl(node, None)\n     }"}, {"sha": "d070eefd9c6db9f1e6196b09f8c189140a598f2f", "filename": "crates/ide_assists/src/handlers/inline_call.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12465a8a3cc74d0d103aedda08d281a07354521e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12465a8a3cc74d0d103aedda08d281a07354521e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_call.rs?ref=12465a8a3cc74d0d103aedda08d281a07354521e", "patch": "@@ -1,6 +1,6 @@\n use ast::make;\n use either::Either;\n-use hir::{db::HirDatabase, HasSource, PathResolution, Semantics, TypeInfo};\n+use hir::{db::HirDatabase, PathResolution, Semantics, TypeInfo};\n use ide_db::{\n     base_db::{FileId, FileRange},\n     defs::Definition,\n@@ -194,7 +194,7 @@ pub(crate) fn inline_call(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n         }\n     };\n \n-    let fn_source = function.source(ctx.db())?;\n+    let fn_source = ctx.sema.source(function)?;\n     let fn_body = fn_source.value.body()?;\n     let param_list = fn_source.value.param_list()?;\n "}, {"sha": "1062cc395378582c1ec20847c94beae8ac8443a5", "filename": "crates/ide_assists/src/handlers/replace_let_with_if_let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12465a8a3cc74d0d103aedda08d281a07354521e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_let_with_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12465a8a3cc74d0d103aedda08d281a07354521e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_let_with_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_let_with_if_let.rs?ref=12465a8a3cc74d0d103aedda08d281a07354521e", "patch": "@@ -38,7 +38,7 @@ use crate::{AssistContext, AssistId, AssistKind, Assists};\n // ```\n pub(crate) fn replace_let_with_if_let(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n     let let_kw = ctx.find_token_syntax_at_offset(T![let])?;\n-    let let_stmt = let_kw.ancestors().find_map(ast::LetStmt::cast)?;\n+    let let_stmt = let_kw.parent().and_then(ast::LetStmt::cast)?;\n     let init = let_stmt.initializer()?;\n     let original_pat = let_stmt.pat()?;\n "}, {"sha": "31accd035f7ef391703fb6c448adb492caab4eb5", "filename": "crates/ide_completion/src/completions/trait_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12465a8a3cc74d0d103aedda08d281a07354521e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12465a8a3cc74d0d103aedda08d281a07354521e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs?ref=12465a8a3cc74d0d103aedda08d281a07354521e", "patch": "@@ -185,7 +185,7 @@ fn get_transformed_assoc_item(\n     let assoc_item = assoc_item.clone_for_update();\n     let trait_ = impl_def.trait_(ctx.db)?;\n     let source_scope = &ctx.sema.scope_for_def(trait_);\n-    let target_scope = &ctx.sema.scope(impl_def.source(ctx.db)?.syntax().value);\n+    let target_scope = &ctx.sema.scope(ctx.sema.source(impl_def)?.syntax().value);\n     let transform = PathTransform::trait_impl(\n         target_scope,\n         source_scope,"}]}