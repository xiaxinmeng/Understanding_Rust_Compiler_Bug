{"sha": "91d6c60bed2c5d574ca524ab4812f731118cd22d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxZDZjNjBiZWQyYzVkNTc0Y2E1MjRhYjQ4MTJmNzMxMTE4Y2QyMmQ=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-30T22:06:11Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-30T22:10:55Z"}, "message": "fix various warnings", "tree": {"sha": "29ceb3fb9348033868d41127c770efeeae7579d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29ceb3fb9348033868d41127c770efeeae7579d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91d6c60bed2c5d574ca524ab4812f731118cd22d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91d6c60bed2c5d574ca524ab4812f731118cd22d", "html_url": "https://github.com/rust-lang/rust/commit/91d6c60bed2c5d574ca524ab4812f731118cd22d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91d6c60bed2c5d574ca524ab4812f731118cd22d/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a225951e3c35cb634ab4ab700d043689fbabd70", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a225951e3c35cb634ab4ab700d043689fbabd70", "html_url": "https://github.com/rust-lang/rust/commit/6a225951e3c35cb634ab4ab700d043689fbabd70"}], "stats": {"total": 41, "additions": 11, "deletions": 30}, "files": [{"sha": "4bfa6b5afce3ec1fcdc41b41b930bef06ea2d46e", "filename": "src/libstd/fmt/parse.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Flibstd%2Ffmt%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Flibstd%2Ffmt%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffmt%2Fparse.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -595,7 +595,6 @@ impl<'self> Parser<'self> {\n mod tests {\n     use super::*;\n     use prelude::*;\n-    use realstd::fmt::{String};\n \n     fn same(fmt: &'static str, p: ~[Piece<'static>]) {\n         let mut parser = Parser::new(fmt);"}, {"sha": "38d8a244895e83cc2f8ab32edd4e46c1c7024726", "filename": "src/libstd/ptr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Flibstd%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Flibstd%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fptr.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -12,6 +12,7 @@\n \n use cast;\n use clone::Clone;\n+#[cfg(not(test))]\n use cmp::Equiv;\n use iterator::{range, Iterator};\n use option::{Option, Some, None};"}, {"sha": "61dcc6c194782926f1cc80982c667adf15e69e33", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -340,7 +340,7 @@ mod test {\n     use parse::token::{str_to_ident};\n     use util::parser_testing::{string_to_tts_and_sess, string_to_parser};\n     use util::parser_testing::{string_to_expr, string_to_item};\n-    use util::parser_testing::{string_to_stmt, strs_to_idents};\n+    use util::parser_testing::string_to_stmt;\n \n     // map a string to tts, return the tt without its parsesess\n     fn string_to_tts_only(source_str : @str) -> ~[ast::token_tree] {"}, {"sha": "7029ca2a49296969920d7cb804a0a077e93971a2", "filename": "src/test/bench/shootout-pfib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-pfib.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -28,7 +28,6 @@ use std::io;\n use std::os;\n use std::result::{Ok, Err};\n use std::task;\n-use std::u64;\n use std::uint;\n \n fn fib(n: int) -> int {"}, {"sha": "5ded736ab9b0472f6869e863add80fd53e505e2a", "filename": "src/test/run-pass/const-cross-crate-extern.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fconst-cross-crate-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fconst-cross-crate-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-cross-crate-extern.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -13,11 +13,8 @@\n \n extern mod cci_const;\n use cci_const::bar;\n-use std::cast::transmute;\n static foo: extern \"C\" fn() = bar;\n \n pub fn main() {\n-    unsafe {\n-        assert_eq!(foo, bar);\n-    }\n+    assert_eq!(foo, bar);\n }"}, {"sha": "501a87955da5731b00a7e3df593cbe397f7ca277", "filename": "src/test/run-pass/const-extern-function.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fconst-extern-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fconst-extern-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-extern-function.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -18,8 +18,6 @@ struct S {\n }\n \n pub fn main() {\n-    unsafe {\n-        assert_eq!(foopy, f);\n-        assert_eq!(f, s.f);\n-    }\n+    assert_eq!(foopy, f);\n+    assert_eq!(f, s.f);\n }"}, {"sha": "5406fa283e7e76740a5169999113ba8ab01228b9", "filename": "src/test/run-pass/extern-compare-with-return-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fextern-compare-with-return-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fextern-compare-with-return-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-compare-with-return-type.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -15,7 +15,7 @@ extern fn voidret2() {}\n \n extern fn uintret() -> uint { 22 }\n \n-extern fn uintvoidret(x: uint) {}\n+extern fn uintvoidret(_x: uint) {}\n \n extern fn uintuintuintuintret(x: uint, y: uint, z: uint) -> uint { x+y+z }\n "}, {"sha": "b883fbd6f6a04caa4573c8ed1e9ee7cfcac123bb", "filename": "src/test/run-pass/extern-take-value.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fextern-take-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fextern-take-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-take-value.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -8,21 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::cast::transmute;\n-\n extern fn f() {\n }\n \n extern fn g() {\n }\n \n pub fn main() {\n-    unsafe {\n-        let a: extern \"C\" fn() = f;\n-        let b: extern \"C\" fn() = f;\n-        let c: extern \"C\" fn() = g;\n+    let a: extern \"C\" fn() = f;\n+    let b: extern \"C\" fn() = f;\n+    let c: extern \"C\" fn() = g;\n \n-        assert_eq!(a, b);\n-        assert!(a != c);\n-    }\n+    assert_eq!(a, b);\n+    assert!(a != c);\n }"}, {"sha": "326e92d3b70857ffc13e047fd223f2d69b4a5112", "filename": "src/test/run-pass/issue-5917.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fissue-5917.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fissue-5917.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5917.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::io;\n-\n struct T (&'static [int]);\n static t : T = T (&'static [5, 4, 3]);\n fn main () {"}, {"sha": "8baf15c8493be409930dc1d19c5622cde63a76b2", "filename": "src/test/run-pass/monad.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fmonad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fmonad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmonad.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -10,8 +10,6 @@\n \n // xfail-fast\n \n-use std::int;\n-\n trait vec_monad<A> {\n     fn bind<B>(&self, f: &fn(&A) -> ~[B]) -> ~[B];\n }"}, {"sha": "1c77a6b2fb95796e7ed8d84f28ec148076fcedf3", "filename": "src/test/run-pass/reflect-visit-data.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -10,7 +10,6 @@\n \n // xfail-fast\n \n-use std::int;\n use std::libc::c_void;\n use std::ptr;\n use std::sys;"}, {"sha": "651b3342d5833e3f612c1f62384b9fab8d65c76f", "filename": "src/test/run-pass/static-impl.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fstatic-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Fstatic-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-impl.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -10,8 +10,6 @@\n \n // xfail-fast\n \n-use std::uint;\n-\n pub trait plus {\n     fn plus(&self) -> int;\n }"}, {"sha": "f448bcb4ab5d27fda032df640a84f5ae4f3ff2b3", "filename": "src/test/run-pass/trait-generic.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Ftrait-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91d6c60bed2c5d574ca524ab4812f731118cd22d/src%2Ftest%2Frun-pass%2Ftrait-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-generic.rs?ref=91d6c60bed2c5d574ca524ab4812f731118cd22d", "patch": "@@ -10,8 +10,6 @@\n \n // xfail-fast\n \n-use std::int;\n-\n trait to_str {\n     fn to_string(&self) -> ~str;\n }"}]}