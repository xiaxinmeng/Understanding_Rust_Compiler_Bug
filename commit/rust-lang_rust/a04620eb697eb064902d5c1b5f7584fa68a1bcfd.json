{"sha": "a04620eb697eb064902d5c1b5f7584fa68a1bcfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwNDYyMGViNjk3ZWIwNjQ5MDJkNWMxYjVmNzU4NGZhNjhhMWJjZmQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-27T08:13:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-27T08:13:37Z"}, "message": "only run leak test on clean platforms", "tree": {"sha": "7aeae1a7dbcb93d8fcea24a0b48a0940b6ae6947", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aeae1a7dbcb93d8fcea24a0b48a0940b6ae6947"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a04620eb697eb064902d5c1b5f7584fa68a1bcfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a04620eb697eb064902d5c1b5f7584fa68a1bcfd", "html_url": "https://github.com/rust-lang/rust/commit/a04620eb697eb064902d5c1b5f7584fa68a1bcfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a04620eb697eb064902d5c1b5f7584fa68a1bcfd/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbc1fb20ac606dfcb6f91fb7823272760e583f85", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbc1fb20ac606dfcb6f91fb7823272760e583f85", "html_url": "https://github.com/rust-lang/rust/commit/fbc1fb20ac606dfcb6f91fb7823272760e583f85"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "3524029475a9cd4d6320b3a6c58bb455c25e6e6d", "filename": "src/eval.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a04620eb697eb064902d5c1b5f7584fa68a1bcfd/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a04620eb697eb064902d5c1b5f7584fa68a1bcfd/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=a04620eb697eb064902d5c1b5f7584fa68a1bcfd", "patch": "@@ -201,16 +201,18 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) ->\n     // Process the result.\n     match res {\n         Ok(return_code) => {\n-            let leaks = ecx.memory.leak_report();\n             // Disable the leak test on some platforms where we do not\n             // correctly implement TLS destructors.\n             let target_os = ecx.tcx.tcx.sess.target.target.target_os.to_lowercase();\n             let ignore_leaks = target_os == \"windows\" || target_os == \"macos\";\n-            if !ignore_leaks && leaks != 0 {\n-                tcx.sess.err(\"the evaluated program leaked memory\");\n-                // Ignore the provided return code - let the reported error\n-                // determine the return code.\n-                return None;\n+            if !ignore_leaks {\n+                let leaks = ecx.memory.leak_report();\n+                if leaks != 0 {\n+                    tcx.sess.err(\"the evaluated program leaked memory\");\n+                    // Ignore the provided return code - let the reported error\n+                    // determine the return code.\n+                    return None;\n+                }\n             }\n             return Some(return_code)\n         }"}]}