{"sha": "f5e0b760d0ef062447f4f5b35adef5c75c8c69ff", "node_id": "C_kwDOAAsO6NoAKGY1ZTBiNzYwZDBlZjA2MjQ0N2Y0ZjViMzVhZGVmNWM3NWM4YzY5ZmY", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-09-26T15:04:58Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-11-03T07:12:58Z"}, "message": "Stabilize default_alloc_error_handler\n\nCloses #66741", "tree": {"sha": "53296cc03a93e516be7a393a8715e14e046cfd4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53296cc03a93e516be7a393a8715e14e046cfd4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff", "html_url": "https://github.com/rust-lang/rust/commit/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "html_url": "https://github.com/rust-lang/rust/commit/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd"}], "stats": {"total": 60, "additions": 5, "deletions": 55}, "files": [{"sha": "eb5549d867205a8a592736ef4f3a61694a4f19bf", "filename": "compiler/rustc_error_messages/locales/en-US/metadata.ftl", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmetadata.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmetadata.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmetadata.ftl?ref=f5e0b760d0ef062447f4f5b35adef5c75c8c69ff", "patch": "@@ -166,12 +166,6 @@ metadata_conflicting_alloc_error_handler =\n metadata_global_alloc_required =\n     no global memory allocator found but one is required; link to std or add `#[global_allocator]` to a static item that implements the GlobalAlloc trait\n \n-metadata_alloc_func_required =\n-    `#[alloc_error_handler]` function required, but not found\n-\n-metadata_missing_alloc_error_handler =\n-    use `#![feature(default_alloc_error_handler)]` for a default error handler\n-\n metadata_no_transitive_needs_dep =\n     the crate `{$crate_name}` cannot depend on a crate that needs {$needs_crate_name}, but it depends on `{$deps_crate_name}`\n "}, {"sha": "b81c30fd880adfc1c1d9b8e22884b2a834bcc0c0", "filename": "compiler/rustc_feature/src/accepted.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs?ref=f5e0b760d0ef062447f4f5b35adef5c75c8c69ff", "patch": "@@ -126,6 +126,8 @@ declare_features! (\n     (accepted, copy_closures, \"1.26.0\", Some(44490), None),\n     /// Allows `crate` in paths.\n     (accepted, crate_in_paths, \"1.30.0\", Some(45477), None),\n+    /// Allows rustc to inject a default alloc_error_handler\n+    (accepted, default_alloc_error_handler, \"CURRENT_RUSTC_VERSION\", Some(66741), None),\n     /// Allows using assigning a default type to type parameters in algebraic data type definitions.\n     (accepted, default_type_params, \"1.0.0\", None, None),\n     /// Allows `#[deprecated]` attribute."}, {"sha": "9c6da830ce9acafdbe97ccb88df7d0d787df4fd9", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=f5e0b760d0ef062447f4f5b35adef5c75c8c69ff", "patch": "@@ -366,8 +366,6 @@ declare_features! (\n     (active, debugger_visualizer, \"1.62.0\", Some(95939), None),\n     /// Allows declarative macros 2.0 (`macro`).\n     (active, decl_macro, \"1.17.0\", Some(39412), None),\n-    /// Allows rustc to inject a default alloc_error_handler\n-    (active, default_alloc_error_handler, \"1.48.0\", Some(66741), None),\n     /// Allows default type parameters to influence type inference.\n     (active, default_type_parameter_fallback, \"1.3.0\", Some(27336), None),\n     /// Allows using `#[deprecated_safe]` to deprecate the safeness of a function or trait"}, {"sha": "d5fb98b998fa44a9fa9f7a6e8f3ebe27758c7836", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=f5e0b760d0ef062447f4f5b35adef5c75c8c69ff", "patch": "@@ -1,10 +1,9 @@\n //! Validates all used crates and extern libraries and loads their metadata\n \n use crate::errors::{\n-    AllocFuncRequired, ConflictingAllocErrorHandler, ConflictingGlobalAlloc, CrateNotPanicRuntime,\n-    GlobalAllocRequired, MissingAllocErrorHandler, NoMultipleAllocErrorHandler,\n-    NoMultipleGlobalAlloc, NoPanicStrategy, NoTransitiveNeedsDep, NotProfilerRuntime,\n-    ProfilerBuiltinsNeedsCore,\n+    ConflictingAllocErrorHandler, ConflictingGlobalAlloc, CrateNotPanicRuntime,\n+    GlobalAllocRequired, NoMultipleAllocErrorHandler, NoMultipleGlobalAlloc, NoPanicStrategy,\n+    NoTransitiveNeedsDep, NotProfilerRuntime, ProfilerBuiltinsNeedsCore,\n };\n use crate::locator::{CrateError, CrateLocator, CratePaths};\n use crate::rmeta::{CrateDep, CrateMetadata, CrateNumMap, CrateRoot, MetadataBlob};\n@@ -892,10 +891,6 @@ impl<'a> CrateLoader<'a> {\n         } else {\n             // The alloc crate provides a default allocation error handler if\n             // one isn't specified.\n-            if !self.sess.features_untracked().default_alloc_error_handler {\n-                self.sess.emit_err(AllocFuncRequired);\n-                self.sess.emit_note(MissingAllocErrorHandler);\n-            }\n             self.cstore.alloc_error_handler_kind = Some(AllocatorKind::Default);\n         }\n     }"}, {"sha": "3f0869c19ad4de73f07f90d43c110b1ba3d444ce", "filename": "compiler/rustc_metadata/src/errors.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/compiler%2Frustc_metadata%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/compiler%2Frustc_metadata%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Ferrors.rs?ref=f5e0b760d0ef062447f4f5b35adef5c75c8c69ff", "patch": "@@ -371,14 +371,6 @@ pub struct ConflictingAllocErrorHandler {\n #[diag(metadata_global_alloc_required)]\n pub struct GlobalAllocRequired;\n \n-#[derive(Diagnostic)]\n-#[diag(metadata_alloc_func_required)]\n-pub struct AllocFuncRequired;\n-\n-#[derive(Diagnostic)]\n-#[diag(metadata_missing_alloc_error_handler)]\n-pub struct MissingAllocErrorHandler;\n-\n #[derive(Diagnostic)]\n #[diag(metadata_no_transitive_needs_dep)]\n pub struct NoTransitiveNeedsDep<'a> {"}, {"sha": "601fda87b9100a715a1027cf9702cb01126c9f13", "filename": "src/test/ui/allocator/no_std-alloc-error-handler-default.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/src%2Ftest%2Fui%2Fallocator%2Fno_std-alloc-error-handler-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e0b760d0ef062447f4f5b35adef5c75c8c69ff/src%2Ftest%2Fui%2Fallocator%2Fno_std-alloc-error-handler-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fallocator%2Fno_std-alloc-error-handler-default.rs?ref=f5e0b760d0ef062447f4f5b35adef5c75c8c69ff", "patch": "@@ -6,10 +6,8 @@\n // only-linux\n // compile-flags:-C panic=abort\n // aux-build:helper.rs\n-// gate-test-default_alloc_error_handler\n \n #![feature(start, rustc_private, new_uninit, panic_info_message, lang_items)]\n-#![feature(default_alloc_error_handler)]\n #![no_std]\n \n extern crate alloc;"}, {"sha": "4d378f010ed4d54230d2d5cfc0d21f5142f1c4d5", "filename": "src/test/ui/missing/missing-alloc_error_handler.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/src%2Ftest%2Fui%2Fmissing%2Fmissing-alloc_error_handler.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/src%2Ftest%2Fui%2Fmissing%2Fmissing-alloc_error_handler.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing%2Fmissing-alloc_error_handler.rs?ref=ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "patch": "@@ -1,23 +0,0 @@\n-// compile-flags: -C panic=abort\n-// no-prefer-dynamic\n-\n-#![no_std]\n-#![crate_type = \"staticlib\"]\n-#![feature(alloc_error_handler)]\n-\n-#[panic_handler]\n-fn panic(_: &core::panic::PanicInfo) -> ! {\n-    loop {}\n-}\n-\n-extern crate alloc;\n-\n-#[global_allocator]\n-static A: MyAlloc = MyAlloc;\n-\n-struct MyAlloc;\n-\n-unsafe impl core::alloc::GlobalAlloc for MyAlloc {\n-    unsafe fn alloc(&self, _: core::alloc::Layout) -> *mut u8 { 0 as _ }\n-    unsafe fn dealloc(&self, _: *mut u8, _: core::alloc::Layout) {}\n-}"}, {"sha": "995fa7cf85e965761f4748d51f19f235c6ad92dd", "filename": "src/test/ui/missing/missing-alloc_error_handler.stderr", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/src%2Ftest%2Fui%2Fmissing%2Fmissing-alloc_error_handler.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/src%2Ftest%2Fui%2Fmissing%2Fmissing-alloc_error_handler.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing%2Fmissing-alloc_error_handler.stderr?ref=ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "patch": "@@ -1,6 +0,0 @@\n-error: `#[alloc_error_handler]` function required, but not found\n-\n-note: use `#![feature(default_alloc_error_handler)]` for a default error handler\n-\n-error: aborting due to previous error\n-"}]}