{"sha": "9c1aa12ff11257c8a149b76e21e3cccac1893350", "node_id": "C_kwDOAAsO6NoAKDljMWFhMTJmZjExMjU3YzhhMTQ5Yjc2ZTIxZTNjY2NhYzE4OTMzNTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-09T18:00:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-09T18:00:46Z"}, "message": "Rollup merge of #90723 - asquared31415:box_docs, r=jyn514\n\nBetter document `Box` and `alloc::alloc::box_free` connection\n\nThe internal `alloc::alloc::box_free` function requires that its signature matches the `owned_box` struct's declaration, but previously that connection was only documented on the `box_free` function.\n\nThis PR makes the documentation two-way to help anyone making theoretical changes to `Box` to see the connection, since changes are more likely to originate from `Box`.", "tree": {"sha": "51d3d43f806a176d21562fb0de88232642631cf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51d3d43f806a176d21562fb0de88232642631cf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c1aa12ff11257c8a149b76e21e3cccac1893350", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhirdPCRBK7hj4Ov3rIwAAwpoIALJGmW6B5ylLBK4g17IfP7WZ\n0byeEXfridKaLpyuN6TCQBw/+YIJUmySStuQiXwKF+BHg/cmx7Ig9jrQVLiaGZqi\ncMN25SjKnzVi2WGZdI3GYJfXJVI68W/LZYRN6WW/vLZGEIGN9wWwz6mJ8Ej4WyBx\nngqA0UZUYAFbxqZCpQ7abTiJ9Hdl29htjEKN5fqOyijW2JwnVIqBYN/te+djRlro\n8LN70/6CII9JMIfF4cTSv/PyyLbL2EJAQ4nfroKDA9pc7zewVJFay55QAKR7/3Uy\nubyP4adNu+wyCjpg5pFFR5nX9kO5oOBEJdcPO+KbSwe4iH12Sm+J3tWnObHMnOA=\n=VX+z\n-----END PGP SIGNATURE-----\n", "payload": "tree 51d3d43f806a176d21562fb0de88232642631cf2\nparent fd5a4f42ad425a19c022fcafe482341e2612f29e\nparent db4e60b29f863bbf78351b7f095b221ffe7b93a6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1636480846 +0100\ncommitter GitHub <noreply@github.com> 1636480846 +0100\n\nRollup merge of #90723 - asquared31415:box_docs, r=jyn514\n\nBetter document `Box` and `alloc::alloc::box_free` connection\n\nThe internal `alloc::alloc::box_free` function requires that its signature matches the `owned_box` struct's declaration, but previously that connection was only documented on the `box_free` function.\n\nThis PR makes the documentation two-way to help anyone making theoretical changes to `Box` to see the connection, since changes are more likely to originate from `Box`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c1aa12ff11257c8a149b76e21e3cccac1893350", "html_url": "https://github.com/rust-lang/rust/commit/9c1aa12ff11257c8a149b76e21e3cccac1893350", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c1aa12ff11257c8a149b76e21e3cccac1893350/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd5a4f42ad425a19c022fcafe482341e2612f29e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd5a4f42ad425a19c022fcafe482341e2612f29e", "html_url": "https://github.com/rust-lang/rust/commit/fd5a4f42ad425a19c022fcafe482341e2612f29e"}, {"sha": "db4e60b29f863bbf78351b7f095b221ffe7b93a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/db4e60b29f863bbf78351b7f095b221ffe7b93a6", "html_url": "https://github.com/rust-lang/rust/commit/db4e60b29f863bbf78351b7f095b221ffe7b93a6"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "f6332b072cf30237425386602ce9222d69a9404e", "filename": "library/alloc/src/boxed.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9c1aa12ff11257c8a149b76e21e3cccac1893350/library%2Falloc%2Fsrc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c1aa12ff11257c8a149b76e21e3cccac1893350/library%2Falloc%2Fsrc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed.rs?ref=9c1aa12ff11257c8a149b76e21e3cccac1893350", "patch": "@@ -169,6 +169,9 @@ use crate::vec::Vec;\n #[lang = \"owned_box\"]\n #[fundamental]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+// The declaration of the `Box` struct must be kept in sync with the\n+// `alloc::alloc::box_free` function or ICEs will happen. See the comment\n+// on `box_free` for more details.\n pub struct Box<\n     T: ?Sized,\n     #[unstable(feature = \"allocator_api\", issue = \"32838\")] A: Allocator = Global,"}]}