{"sha": "ace75f95905564a34f46be57ead51828844da745", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZTc1Zjk1OTA1NTY0YTM0ZjQ2YmU1N2VhZDUxODI4ODQ0ZGE3NDU=", "commit": {"author": {"name": "JmPotato", "email": "ghzpotato@gmail.com", "date": "2020-08-11T04:09:11Z"}, "committer": {"name": "JmPotato", "email": "ghzpotato@gmail.com", "date": "2020-08-11T04:09:11Z"}, "message": "Typo fix\n\nSigned-off-by: JmPotato <ghzpotato@gmail.com>", "tree": {"sha": "40da230286390a86b947daa566ae530af94986e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40da230286390a86b947daa566ae530af94986e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ace75f95905564a34f46be57ead51828844da745", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ace75f95905564a34f46be57ead51828844da745", "html_url": "https://github.com/rust-lang/rust/commit/ace75f95905564a34f46be57ead51828844da745", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ace75f95905564a34f46be57ead51828844da745/comments", "author": {"login": "JmPotato", "id": 1446531, "node_id": "MDQ6VXNlcjE0NDY1MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1446531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JmPotato", "html_url": "https://github.com/JmPotato", "followers_url": "https://api.github.com/users/JmPotato/followers", "following_url": "https://api.github.com/users/JmPotato/following{/other_user}", "gists_url": "https://api.github.com/users/JmPotato/gists{/gist_id}", "starred_url": "https://api.github.com/users/JmPotato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JmPotato/subscriptions", "organizations_url": "https://api.github.com/users/JmPotato/orgs", "repos_url": "https://api.github.com/users/JmPotato/repos", "events_url": "https://api.github.com/users/JmPotato/events{/privacy}", "received_events_url": "https://api.github.com/users/JmPotato/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JmPotato", "id": 1446531, "node_id": "MDQ6VXNlcjE0NDY1MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1446531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JmPotato", "html_url": "https://github.com/JmPotato", "followers_url": "https://api.github.com/users/JmPotato/followers", "following_url": "https://api.github.com/users/JmPotato/following{/other_user}", "gists_url": "https://api.github.com/users/JmPotato/gists{/gist_id}", "starred_url": "https://api.github.com/users/JmPotato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JmPotato/subscriptions", "organizations_url": "https://api.github.com/users/JmPotato/orgs", "repos_url": "https://api.github.com/users/JmPotato/repos", "events_url": "https://api.github.com/users/JmPotato/events{/privacy}", "received_events_url": "https://api.github.com/users/JmPotato/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc6e1e0dac318b36ec43ffced3d4059a9b8652e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc6e1e0dac318b36ec43ffced3d4059a9b8652e5", "html_url": "https://github.com/rust-lang/rust/commit/dc6e1e0dac318b36ec43ffced3d4059a9b8652e5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e738364220d6dc8160c669b26fcafd9756105892", "filename": "crates/ra_assists/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ace75f95905564a34f46be57ead51828844da745/crates%2Fra_assists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ace75f95905564a34f46be57ead51828844da745/crates%2Fra_assists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Ftests.rs?ref=ace75f95905564a34f46be57ead51828844da745", "patch": "@@ -20,7 +20,7 @@ pub(crate) fn check_assist(assist: Handler, ra_fixture_before: &str, ra_fixture_\n \n // FIXME: instead of having a separate function here, maybe use\n // `extract_ranges` and mark the target as `<target> </target>` in the\n-// fixuture?\n+// fixture?\n pub(crate) fn check_assist_target(assist: Handler, ra_fixture: &str, target: &str) {\n     check(assist, ra_fixture, ExpectedResult::Target(target));\n }"}]}