{"sha": "d7c0b4f706ca1f093845faab62100cec29769bb0", "node_id": "C_kwDOAAsO6NoAKGQ3YzBiNGY3MDZjYTFmMDkzODQ1ZmFhYjYyMTAwY2VjMjk3NjliYjA", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-02-01T04:12:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-01T04:12:55Z"}, "message": "Rollup merge of #93019 - 5225225:uppercase-suffix, r=wesleywiser\n\nIf an integer is entered with an upper-case base prefix (0Xbeef, 0O755, 0B1010), suggest to make it lowercase\n\nThe current error for this case isn't really great, it just complains about the whole thing past the `0` being an invalid suffix.", "tree": {"sha": "ba2eb169f800e11b03b890fdbc2302ec8b1e423a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba2eb169f800e11b03b890fdbc2302ec8b1e423a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7c0b4f706ca1f093845faab62100cec29769bb0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh+LNICRBK7hj4Ov3rIwAA0dAIAIsBmcJJozvrfEcrbBwrdgcX\nXHE9o1SY/j+/Uc94zwmu5XkehuJPEhkXZ2D8w+9aOzJEW4X+0T4+r+qKVOAutlsD\nnMnyIGphkU51AxtnJjnu5951GOpKnDrUOIeG0z4RVhYbMfcQ2Gk3m1HYoL6hzuYH\ngnZS25JsVan5PAbBklGERytIK7I65/nXYz/esHEe+0gZNTE9o5Slrh98igUXfzjv\nmaVUn1XCe/8TSrqLQMulYA9Cy07K7I82Xz3DOBMx6Kp1lGkYcgn3BDQuvNuv/QLN\n9luVHmvttTcITJKVjYY3lYR+BfjiQtC+vdvYdOK4Ls64uEnZDSXoiPxCCJfuH5Q=\n=Wwiq\n-----END PGP SIGNATURE-----\n", "payload": "tree ba2eb169f800e11b03b890fdbc2302ec8b1e423a\nparent 5159c013b0a9771c3c83fb23f8ce4711c0bd4954\nparent ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9\nauthor Eric Huss <eric@huss.org> 1643688775 -0800\ncommitter GitHub <noreply@github.com> 1643688775 -0800\n\nRollup merge of #93019 - 5225225:uppercase-suffix, r=wesleywiser\n\nIf an integer is entered with an upper-case base prefix (0Xbeef, 0O755, 0B1010), suggest to make it lowercase\n\nThe current error for this case isn't really great, it just complains about the whole thing past the `0` being an invalid suffix.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7c0b4f706ca1f093845faab62100cec29769bb0", "html_url": "https://github.com/rust-lang/rust/commit/d7c0b4f706ca1f093845faab62100cec29769bb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7c0b4f706ca1f093845faab62100cec29769bb0/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5159c013b0a9771c3c83fb23f8ce4711c0bd4954", "url": "https://api.github.com/repos/rust-lang/rust/commits/5159c013b0a9771c3c83fb23f8ce4711c0bd4954", "html_url": "https://github.com/rust-lang/rust/commit/5159c013b0a9771c3c83fb23f8ce4711c0bd4954"}, {"sha": "ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9", "html_url": "https://github.com/rust-lang/rust/commit/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9"}], "stats": {"total": 277, "additions": 277, "deletions": 0}, "files": [{"sha": "0115d498a7fb889b4415d8aa1e4165d917c7bf10", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d7c0b4f706ca1f093845faab62100cec29769bb0/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7c0b4f706ca1f093845faab62100cec29769bb0/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=d7c0b4f706ca1f093845faab62100cec29769bb0", "patch": "@@ -1700,6 +1700,19 @@ impl<'a> Parser<'a> {\n             s.len() > 1 && s.starts_with(first_chars) && s[1..].chars().all(|c| c.is_ascii_digit())\n         }\n \n+        // Try to lowercase the prefix if it's a valid base prefix.\n+        fn fix_base_capitalisation(s: &str) -> Option<String> {\n+            if let Some(stripped) = s.strip_prefix(\"B\") {\n+                Some(format!(\"0b{stripped}\"))\n+            } else if let Some(stripped) = s.strip_prefix(\"O\") {\n+                Some(format!(\"0o{stripped}\"))\n+            } else if let Some(stripped) = s.strip_prefix(\"X\") {\n+                Some(format!(\"0x{stripped}\"))\n+            } else {\n+                None\n+            }\n+        }\n+\n         let token::Lit { kind, suffix, .. } = lit;\n         match err {\n             // `NotLiteral` is not an error by itself, so we don't report\n@@ -1724,6 +1737,18 @@ impl<'a> Parser<'a> {\n                     self.struct_span_err(span, &msg)\n                         .help(\"valid widths are 8, 16, 32, 64 and 128\")\n                         .emit();\n+                } else if let Some(fixed) = fix_base_capitalisation(suf) {\n+                    let msg = \"invalid base prefix for number literal\";\n+\n+                    self.struct_span_err(span, &msg)\n+                        .note(\"base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\")\n+                        .span_suggestion(\n+                            span,\n+                            \"try making the prefix lowercase\",\n+                            fixed,\n+                            Applicability::MaybeIncorrect,\n+                        )\n+                        .emit();\n                 } else {\n                     let msg = format!(\"invalid suffix `{}` for number literal\", suf);\n                     self.struct_span_err(span, &msg)"}, {"sha": "1b1c837ec5040ef1ac3d2ddfe6d644b4a01b8f0c", "filename": "src/test/ui/numeric/uppercase-base-prefix.fixed", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/d7c0b4f706ca1f093845faab62100cec29769bb0/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d7c0b4f706ca1f093845faab62100cec29769bb0/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.fixed?ref=d7c0b4f706ca1f093845faab62100cec29769bb0", "patch": "@@ -0,0 +1,77 @@\n+// run-rustfix\n+// Checks that integers with an uppercase base prefix (0B, 0X, 0O) have a nice error\n+#![allow(unused_variables)]\n+\n+fn main() {\n+    let a = 0xABCDEF;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABCDEF\n+\n+    let b = 0o755;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o755\n+\n+    let c = 0b10101010;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b10101010\n+\n+    let d = 0xABC_DEF;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABC_DEF\n+\n+    let e = 0o7_55;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o7_55\n+\n+    let f = 0b1010_1010;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b1010_1010\n+\n+    let g = 0xABC_DEF_u64;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABC_DEF_u64\n+\n+    let h = 0o7_55_u32;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o7_55_u32\n+\n+    let i = 0b1010_1010_u8;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b1010_1010_u8\n+    //\n+    let j = 0xABCDEFu64;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABCDEFu64\n+\n+    let k = 0o755u32;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o755u32\n+\n+    let l = 0b10101010u8;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b10101010u8\n+}"}, {"sha": "233d553da6585b017c730eb21c359b20fbb8da15", "filename": "src/test/ui/numeric/uppercase-base-prefix.rs", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/d7c0b4f706ca1f093845faab62100cec29769bb0/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7c0b4f706ca1f093845faab62100cec29769bb0/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.rs?ref=d7c0b4f706ca1f093845faab62100cec29769bb0", "patch": "@@ -0,0 +1,77 @@\n+// run-rustfix\n+// Checks that integers with an uppercase base prefix (0B, 0X, 0O) have a nice error\n+#![allow(unused_variables)]\n+\n+fn main() {\n+    let a = 0XABCDEF;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABCDEF\n+\n+    let b = 0O755;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o755\n+\n+    let c = 0B10101010;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b10101010\n+\n+    let d = 0XABC_DEF;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABC_DEF\n+\n+    let e = 0O7_55;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o7_55\n+\n+    let f = 0B1010_1010;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b1010_1010\n+\n+    let g = 0XABC_DEF_u64;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABC_DEF_u64\n+\n+    let h = 0O7_55_u32;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o7_55_u32\n+\n+    let i = 0B1010_1010_u8;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b1010_1010_u8\n+    //\n+    let j = 0XABCDEFu64;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABCDEFu64\n+\n+    let k = 0O755u32;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o755u32\n+\n+    let l = 0B10101010u8;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b10101010u8\n+}"}, {"sha": "4ba8d5224b3e6f107cfc197dcdd88fd817772781", "filename": "src/test/ui/numeric/uppercase-base-prefix.stderr", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/d7c0b4f706ca1f093845faab62100cec29769bb0/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7c0b4f706ca1f093845faab62100cec29769bb0/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.stderr?ref=d7c0b4f706ca1f093845faab62100cec29769bb0", "patch": "@@ -0,0 +1,98 @@\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:6:13\n+   |\n+LL |     let a = 0XABCDEF;\n+   |             ^^^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0xABCDEF`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:12:13\n+   |\n+LL |     let b = 0O755;\n+   |             ^^^^^ help: try making the prefix lowercase (notice the capitalization): `0o755`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:18:13\n+   |\n+LL |     let c = 0B10101010;\n+   |             ^^^^^^^^^^ help: try making the prefix lowercase: `0b10101010`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:24:13\n+   |\n+LL |     let d = 0XABC_DEF;\n+   |             ^^^^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0xABC_DEF`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:30:13\n+   |\n+LL |     let e = 0O7_55;\n+   |             ^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0o7_55`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:36:13\n+   |\n+LL |     let f = 0B1010_1010;\n+   |             ^^^^^^^^^^^ help: try making the prefix lowercase: `0b1010_1010`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:42:13\n+   |\n+LL |     let g = 0XABC_DEF_u64;\n+   |             ^^^^^^^^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0xABC_DEF_u64`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:48:13\n+   |\n+LL |     let h = 0O7_55_u32;\n+   |             ^^^^^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0o7_55_u32`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:54:13\n+   |\n+LL |     let i = 0B1010_1010_u8;\n+   |             ^^^^^^^^^^^^^^ help: try making the prefix lowercase: `0b1010_1010_u8`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:60:13\n+   |\n+LL |     let j = 0XABCDEFu64;\n+   |             ^^^^^^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0xABCDEFu64`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:66:13\n+   |\n+LL |     let k = 0O755u32;\n+   |             ^^^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0o755u32`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:72:13\n+   |\n+LL |     let l = 0B10101010u8;\n+   |             ^^^^^^^^^^^^ help: try making the prefix lowercase: `0b10101010u8`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: aborting due to 12 previous errors\n+"}]}