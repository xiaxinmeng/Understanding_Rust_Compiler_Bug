{"sha": "0d27bd846c61b50a2df3470360e6ed0613a5815f", "node_id": "C_kwDOAAsO6NoAKDBkMjdiZDg0NmM2MWI1MGEyZGYzNDcwMzYwZTZlZDA2MTNhNTgxNWY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-16T13:24:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-16T13:24:08Z"}, "message": "Auto merge of #8295 - Jarcho:useless_format_8290, r=giraffate\n\nHandle implicit named arguments in `useless_format`\n\nfixes #8290\n\nIdeally this would fix the macro parsing code to handle this, but this is a smaller change and easier to back port.\n\nchangelog: Handle implicit named arguments in `useless_format`", "tree": {"sha": "20959931cf0fba1aa9b1f0516df5af857909fcfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20959931cf0fba1aa9b1f0516df5af857909fcfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d27bd846c61b50a2df3470360e6ed0613a5815f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d27bd846c61b50a2df3470360e6ed0613a5815f", "html_url": "https://github.com/rust-lang/rust/commit/0d27bd846c61b50a2df3470360e6ed0613a5815f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d27bd846c61b50a2df3470360e6ed0613a5815f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d61f798aac6cf377acc5f2f47719e6e810d72fd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d61f798aac6cf377acc5f2f47719e6e810d72fd0", "html_url": "https://github.com/rust-lang/rust/commit/d61f798aac6cf377acc5f2f47719e6e810d72fd0"}, {"sha": "cb384ff03b7a10bca10b962d9907c0d56ba3086f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb384ff03b7a10bca10b962d9907c0d56ba3086f", "html_url": "https://github.com/rust-lang/rust/commit/cb384ff03b7a10bca10b962d9907c0d56ba3086f"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "395c920c9974c0a525772f0e5ae88c108458b40e", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0d27bd846c61b50a2df3470360e6ed0613a5815f/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d27bd846c61b50a2df3470360e6ed0613a5815f/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=0d27bd846c61b50a2df3470360e6ed0613a5815f", "patch": "@@ -9,7 +9,7 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::kw;\n-use rustc_span::{sym, Span};\n+use rustc_span::{sym, BytePos, Span};\n \n declare_clippy_lint! {\n     /// ### What it does\n@@ -84,7 +84,22 @@ impl<'tcx> LateLintPass<'tcx> for UselessFormat {\n                         ExprKind::MethodCall(path, ..) => path.ident.name.as_str() == \"to_string\",\n                         _ => false,\n                     };\n-                    let sugg = if is_new_string {\n+                    let sugg = if format_args.format_string_span.contains(value.span) {\n+                        // Implicit argument. e.g. `format!(\"{x}\")` span points to `{x}`\n+                        let spdata = value.span.data();\n+                        let span = Span::new(\n+                            spdata.lo + BytePos(1),\n+                            spdata.hi - BytePos(1),\n+                            spdata.ctxt,\n+                            spdata.parent\n+                        );\n+                        let snip = snippet_with_applicability(cx, span, \"..\", &mut applicability);\n+                        if is_new_string {\n+                            snip.into()\n+                        } else {\n+                            format!(\"{snip}.to_string()\")\n+                        }\n+                    } else if is_new_string {\n                         snippet_with_applicability(cx, value.span, \"..\", &mut applicability).into_owned()\n                     } else {\n                         let sugg = Sugg::hir_with_applicability(cx, value, \"<arg>\", &mut applicability);"}, {"sha": "78d2bfd474e4a18cbd9f687e488a69fd03ef076d", "filename": "tests/ui/format.fixed", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0d27bd846c61b50a2df3470360e6ed0613a5815f/tests%2Fui%2Fformat.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0d27bd846c61b50a2df3470360e6ed0613a5815f/tests%2Fui%2Fformat.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.fixed?ref=0d27bd846c61b50a2df3470360e6ed0613a5815f", "patch": "@@ -73,4 +73,10 @@ fn main() {\n     let _s: String = (&*v.join(\"\\n\")).to_string();\n \n     format!(\"prepend {:+}\", \"s\");\n+\n+    // Issue #8290\n+    let x = \"foo\";\n+    let _ = x.to_string();\n+    let _ = format!(\"{x:?}\"); // Don't lint on debug\n+    let _ = x.to_string();\n }"}, {"sha": "009c1aa216fcd8b6e89f1de0b383c486ce038ec8", "filename": "tests/ui/format.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0d27bd846c61b50a2df3470360e6ed0613a5815f/tests%2Fui%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d27bd846c61b50a2df3470360e6ed0613a5815f/tests%2Fui%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.rs?ref=0d27bd846c61b50a2df3470360e6ed0613a5815f", "patch": "@@ -75,4 +75,10 @@ fn main() {\n     let _s: String = format!(\"{}\", &*v.join(\"\\n\"));\n \n     format!(\"prepend {:+}\", \"s\");\n+\n+    // Issue #8290\n+    let x = \"foo\";\n+    let _ = format!(\"{x}\");\n+    let _ = format!(\"{x:?}\"); // Don't lint on debug\n+    let _ = format!(\"{y}\", y = x);\n }"}, {"sha": "660be57585e3710f3839e5f07ab2cea93091e27b", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0d27bd846c61b50a2df3470360e6ed0613a5815f/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d27bd846c61b50a2df3470360e6ed0613a5815f/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=0d27bd846c61b50a2df3470360e6ed0613a5815f", "patch": "@@ -99,5 +99,17 @@ error: useless use of `format!`\n LL |     let _s: String = format!(\"{}\", &*v.join(\"/n\"));\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `(&*v.join(\"/n\")).to_string()`\n \n-error: aborting due to 15 previous errors\n+error: useless use of `format!`\n+  --> $DIR/format.rs:81:13\n+   |\n+LL |     let _ = format!(\"{x}\");\n+   |             ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `x.to_string()`\n+\n+error: useless use of `format!`\n+  --> $DIR/format.rs:83:13\n+   |\n+LL |     let _ = format!(\"{y}\", y = x);\n+   |             ^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `x.to_string()`\n+\n+error: aborting due to 17 previous errors\n "}]}