{"sha": "e5b813b5665a79db92889267b86664c33fcbad64", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1YjgxM2I1NjY1YTc5ZGI5Mjg4OTI2N2I4NjY2NGMzM2ZjYmFkNjQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-11T15:42:38Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-11T15:42:38Z"}, "message": "minor: improve readability\n\nIt's important that module interface doesn't depend on features. Better\nhide features in bodies.", "tree": {"sha": "6c0b19dbaa64d94fd207543cd31fa0091927fdd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c0b19dbaa64d94fd207543cd31fa0091927fdd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5b813b5665a79db92889267b86664c33fcbad64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5b813b5665a79db92889267b86664c33fcbad64", "html_url": "https://github.com/rust-lang/rust/commit/e5b813b5665a79db92889267b86664c33fcbad64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5b813b5665a79db92889267b86664c33fcbad64/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07fb5db3dcc3814656d02e80b5451a4532f08a56", "url": "https://api.github.com/repos/rust-lang/rust/commits/07fb5db3dcc3814656d02e80b5451a4532f08a56", "html_url": "https://github.com/rust-lang/rust/commit/07fb5db3dcc3814656d02e80b5451a4532f08a56"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "e7d4753de007504530f20461f098d08d95f729fb", "filename": "crates/stdx/src/lib.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e5b813b5665a79db92889267b86664c33fcbad64/crates%2Fstdx%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5b813b5665a79db92889267b86664c33fcbad64/crates%2Fstdx%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Flib.rs?ref=e5b813b5665a79db92889267b86664c33fcbad64", "patch": "@@ -19,13 +19,11 @@ pub fn timeit(label: &'static str) -> impl Drop {\n }\n \n /// Prints backtrace to stderr, useful for debugging.\n-#[cfg(feature = \"backtrace\")]\n-pub fn print_backtrace() {\n-    let bt = backtrace::Backtrace::new();\n-    eprintln!(\"{:?}\", bt);\n-}\n-#[cfg(not(feature = \"backtrace\"))]\n pub fn print_backtrace() {\n+    #[cfg(feature = \"backtrace\")]\n+    eprintln!(\"{:?}\", backtrace::Backtrace::new());\n+\n+    #[cfg(not(feature = \"backtrace\"))]\n     eprintln!(\n         r#\"Enable the backtrace feature.\n Uncomment `default = [ \"backtrace\" ]` in `crates/stdx/Cargo.toml`."}]}