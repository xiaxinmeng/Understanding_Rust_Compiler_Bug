{"sha": "04380482b91b75aeca97c2b7e3b6cc1b468346d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MzgwNDgyYjkxYjc1YWVjYTk3YzJiN2UzYjZjYzFiNDY4MzQ2ZDQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-09-10T15:23:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-10T15:23:20Z"}, "message": "Rollup merge of #88639 - Emilgardis:fix-issue-88600, r=GuillaumeGomez\n\nrustdoc: Fix ICE with `doc(hidden)` on tuple variant fields\n\nFixes #88600.\n\n```rust\npub struct H;\npub struct S;\n\npub enum FooEnum {\n    HiddenTupleItem(#[doc(hidden)] H),\n    MultipleHidden(#[doc(hidden)] H, #[doc(hidden)] H),\n    MixedHiddenFirst(#[doc(hidden)] H, S),\n    MixedHiddenLast(S, #[doc(hidden)] H),\n    HiddenStruct {\n        #[doc(hidden)]\n        h: H,\n        s: S,\n    },\n}\n```\n\nGenerates\n![image](https://user-images.githubusercontent.com/1502855/132259152-382f9517-c2a0-41d8-acd0-64e5993931fc.png)", "tree": {"sha": "9f102d430630e81f15634f9d36182aec64385126", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f102d430630e81f15634f9d36182aec64385126"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04380482b91b75aeca97c2b7e3b6cc1b468346d4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhO3hoCRBK7hj4Ov3rIwAA2BQIAHq07rWxBspb6/+dFwCf1/35\nsEvOZ963msOG4Vz/xmvDdE3wCvwGvWbT6bP7wewfkWFFkPC+U88EN6JQkgDfdY41\njUr0Xpoib7LyvShLwH5hQRJ5SsDEyevf8Nxd3otdSRPLXgUg464vVJoPy2Ge26XS\nhl4lNWECensbVf30FFaGULFidnL9Un2VkpmelUjuPdq18ArGVuGiQwEEC/csygYg\nhqx1bpCM28QXmerikwC5s8beaVR5kunK52PX0ZOz5AlaCjBRYD7m94M67i0i+N97\nfxehtgqUHg21h4u1q0Ysq2lcFgTYHmTne6nrNi2NvlfW6/84mD7UXWN7uo4oOos=\n=UXOL\n-----END PGP SIGNATURE-----\n", "payload": "tree 9f102d430630e81f15634f9d36182aec64385126\nparent 1043549185cb99678de96250f61f433e45ca02ed\nparent 4a915ac8d9f33567b77b23e90557f92860aa6db4\nauthor Manish Goregaokar <manishsmail@gmail.com> 1631287400 -0700\ncommitter GitHub <noreply@github.com> 1631287400 -0700\n\nRollup merge of #88639 - Emilgardis:fix-issue-88600, r=GuillaumeGomez\n\nrustdoc: Fix ICE with `doc(hidden)` on tuple variant fields\n\nFixes #88600.\n\n```rust\npub struct H;\npub struct S;\n\npub enum FooEnum {\n    HiddenTupleItem(#[doc(hidden)] H),\n    MultipleHidden(#[doc(hidden)] H, #[doc(hidden)] H),\n    MixedHiddenFirst(#[doc(hidden)] H, S),\n    MixedHiddenLast(S, #[doc(hidden)] H),\n    HiddenStruct {\n        #[doc(hidden)]\n        h: H,\n        s: S,\n    },\n}\n```\n\nGenerates\n![image](https://user-images.githubusercontent.com/1502855/132259152-382f9517-c2a0-41d8-acd0-64e5993931fc.png)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04380482b91b75aeca97c2b7e3b6cc1b468346d4", "html_url": "https://github.com/rust-lang/rust/commit/04380482b91b75aeca97c2b7e3b6cc1b468346d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04380482b91b75aeca97c2b7e3b6cc1b468346d4/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1043549185cb99678de96250f61f433e45ca02ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/1043549185cb99678de96250f61f433e45ca02ed", "html_url": "https://github.com/rust-lang/rust/commit/1043549185cb99678de96250f61f433e45ca02ed"}, {"sha": "4a915ac8d9f33567b77b23e90557f92860aa6db4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a915ac8d9f33567b77b23e90557f92860aa6db4", "html_url": "https://github.com/rust-lang/rust/commit/4a915ac8d9f33567b77b23e90557f92860aa6db4"}], "stats": {"total": 85, "additions": 61, "deletions": 24}, "files": [{"sha": "c6620a43abd5656d52606f303395fec353863af9", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 27, "deletions": 24, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/04380482b91b75aeca97c2b7e3b6cc1b468346d4/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04380482b91b75aeca97c2b7e3b6cc1b468346d4/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=04380482b91b75aeca97c2b7e3b6cc1b468346d4", "patch": "@@ -944,15 +944,15 @@ fn item_union(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::Uni\n }\n \n fn print_tuple_struct_fields(w: &mut Buffer, cx: &Context<'_>, s: &[clean::Item]) {\n-    for (i, ty) in s\n-        .iter()\n-        .map(|f| if let clean::StructFieldItem(ref ty) = *f.kind { ty } else { unreachable!() })\n-        .enumerate()\n-    {\n+    for (i, ty) in s.iter().enumerate() {\n         if i > 0 {\n             w.write_str(\",&nbsp;\");\n         }\n-        write!(w, \"{}\", ty.print(cx));\n+        match *ty.kind {\n+            clean::StrippedItem(box clean::StructFieldItem(_)) => w.write_str(\"_\"),\n+            clean::StructFieldItem(ref ty) => write!(w, \"{}\", ty.print(cx)),\n+            _ => unreachable!(),\n+        }\n     }\n }\n \n@@ -1068,24 +1068,27 @@ fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum\n                     name = variant.name.as_ref().unwrap(),\n                 );\n                 for field in fields {\n-                    use crate::clean::StructFieldItem;\n-                    if let StructFieldItem(ref ty) = *field.kind {\n-                        let id = cx.derive_id(format!(\n-                            \"variant.{}.field.{}\",\n-                            variant.name.as_ref().unwrap(),\n-                            field.name.as_ref().unwrap()\n-                        ));\n-                        write!(\n-                            w,\n-                            \"<span id=\\\"{id}\\\" class=\\\"variant small-section-header\\\">\\\n-                                 <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n-                                 <code>{f}:&nbsp;{t}</code>\\\n-                             </span>\",\n-                            id = id,\n-                            f = field.name.as_ref().unwrap(),\n-                            t = ty.print(cx)\n-                        );\n-                        document(w, cx, field, Some(variant));\n+                    match *field.kind {\n+                        clean::StrippedItem(box clean::StructFieldItem(_)) => {}\n+                        clean::StructFieldItem(ref ty) => {\n+                            let id = cx.derive_id(format!(\n+                                \"variant.{}.field.{}\",\n+                                variant.name.as_ref().unwrap(),\n+                                field.name.as_ref().unwrap()\n+                            ));\n+                            write!(\n+                                w,\n+                                \"<span id=\\\"{id}\\\" class=\\\"variant small-section-header\\\">\\\n+                                    <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n+                                    <code>{f}:&nbsp;{t}</code>\\\n+                                </span>\",\n+                                id = id,\n+                                f = field.name.as_ref().unwrap(),\n+                                t = ty.print(cx)\n+                            );\n+                            document(w, cx, field, Some(variant));\n+                        }\n+                        _ => unreachable!(),\n                     }\n                 }\n                 w.write_str(\"</div></div>\");"}, {"sha": "3761805b48b71ecc6f5c6f7b7faf1e7be99878d7", "filename": "src/test/rustdoc/issue-88600.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/04380482b91b75aeca97c2b7e3b6cc1b468346d4/src%2Ftest%2Frustdoc%2Fissue-88600.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04380482b91b75aeca97c2b7e3b6cc1b468346d4/src%2Ftest%2Frustdoc%2Fissue-88600.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-88600.rs?ref=04380482b91b75aeca97c2b7e3b6cc1b468346d4", "patch": "@@ -0,0 +1,34 @@\n+// This test ensure that #[doc(hidden)] is applied correctly in enum variant fields.\n+\n+// Denotes a field which should be hidden.\n+pub struct H;\n+\n+// Denotes a field which should not be hidden (shown).\n+pub struct S;\n+\n+// @has issue_88600/enum.FooEnum.html\n+pub enum FooEnum {\n+    // @has - '//*[@id=\"variant.HiddenTupleItem\"]//code' 'HiddenTupleItem(_)'\n+    // @count - '//*[@id=\"variant.HiddenTupleItem.field.0\"]' 0\n+    HiddenTupleItem(#[doc(hidden)] H),\n+    // @has - '//*[@id=\"variant.MultipleHidden\"]//code' 'MultipleHidden(_, _)'\n+    // @count - '//*[@id=\"variant.MultipleHidden.field.0\"]' 0\n+    // @count - '//*[@id=\"variant.MultipleHidden.field.1\"]' 0\n+    MultipleHidden(#[doc(hidden)] H, #[doc(hidden)] H),\n+    // @has - '//*[@id=\"variant.MixedHiddenFirst\"]//code' 'MixedHiddenFirst(_, S)'\n+    // @count - '//*[@id=\"variant.MixedHiddenFirst.field.0\"]' 0\n+    // @has - '//*[@id=\"variant.MixedHiddenFirst.field.1\"]' '1: S'\n+    MixedHiddenFirst(#[doc(hidden)] H, S),\n+    // @has - '//*[@id=\"variant.MixedHiddenLast\"]//code' 'MixedHiddenLast(S, _)'\n+    // @has - '//*[@id=\"variant.MixedHiddenLast.field.0\"]' '0: S'\n+    // @count - '//*[@id=\"variant.MixedHiddenLast.field.1\"]' 0\n+    MixedHiddenLast(S, #[doc(hidden)] H),\n+    // @has - '//*[@id=\"variant.HiddenStruct\"]//code' 'HiddenStruct'\n+    // @count - '//*[@id=\"variant.HiddenStruct.field.h\"]' 0\n+    // @has - '//*[@id=\"variant.HiddenStruct.field.s\"]' 's: S'\n+    HiddenStruct {\n+        #[doc(hidden)]\n+        h: H,\n+        s: S,\n+    },\n+}"}]}