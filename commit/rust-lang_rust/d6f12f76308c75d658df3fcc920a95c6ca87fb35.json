{"sha": "d6f12f76308c75d658df3fcc920a95c6ca87fb35", "node_id": "C_kwDOAAsO6NoAKGQ2ZjEyZjc2MzA4Yzc1ZDY1OGRmM2ZjYzkyMGE5NWM2Y2E4N2ZiMzU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-05T20:12:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-05T20:12:28Z"}, "message": "Rollup merge of #89942 - JohnTitor:reorder-widening_impl, r=dtolnay\n\nReorder `widening_impl`s to make the doc clearer\n\nFixes #88736\nThis moves `{widening,carrying}_mul`s to the bottom to place consts on the top.", "tree": {"sha": "c7e6fa70f54aa17275a5ca477b5b5a8f1965dde2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7e6fa70f54aa17275a5ca477b5b5a8f1965dde2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6f12f76308c75d658df3fcc920a95c6ca87fb35", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhhZAsCRBK7hj4Ov3rIwAAoyIIAC5aR9XPRB1Zkljp2wIuU0zW\nzA0CxbwTN9fKzlBXmgY9FXBewep11nsBeQmjpaz1SCY6XmIzs2nWiBV0xtG0TF59\nhXyGxa3xoOnrgisYLRAQA5fdJibluQr2uXp9ODi8Z2UTqqGRC8ceoAlrM/vTXYpA\nd56iEp46OSTw5enXVphIzeCwCszKo/vvj2gnfyQY1jCTc46DGD6hjWv9uPeXqS1S\nnp6v5/o9IKFBRwX+ijy+9FVvj/J5NOncKUySDZmUxLrKZwlrVCobF7WREnjZbm4T\nxemCJvaxgFDGczNnft5bs4HmKgVM40siJhKC6c+BactAWG/GFELxBLHW+WKYkUw=\n=DkBM\n-----END PGP SIGNATURE-----\n", "payload": "tree c7e6fa70f54aa17275a5ca477b5b5a8f1965dde2\nparent 045612b8b97b344d55c13b9aad3cfb3e98405b77\nparent 0b3a0028057d9b8d621b5dc5a3d8c6a469f1ffce\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1636143148 +0100\ncommitter GitHub <noreply@github.com> 1636143148 +0100\n\nRollup merge of #89942 - JohnTitor:reorder-widening_impl, r=dtolnay\n\nReorder `widening_impl`s to make the doc clearer\n\nFixes #88736\nThis moves `{widening,carrying}_mul`s to the bottom to place consts on the top.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f12f76308c75d658df3fcc920a95c6ca87fb35", "html_url": "https://github.com/rust-lang/rust/commit/d6f12f76308c75d658df3fcc920a95c6ca87fb35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6f12f76308c75d658df3fcc920a95c6ca87fb35/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "045612b8b97b344d55c13b9aad3cfb3e98405b77", "url": "https://api.github.com/repos/rust-lang/rust/commits/045612b8b97b344d55c13b9aad3cfb3e98405b77", "html_url": "https://github.com/rust-lang/rust/commit/045612b8b97b344d55c13b9aad3cfb3e98405b77"}, {"sha": "0b3a0028057d9b8d621b5dc5a3d8c6a469f1ffce", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b3a0028057d9b8d621b5dc5a3d8c6a469f1ffce", "html_url": "https://github.com/rust-lang/rust/commit/0b3a0028057d9b8d621b5dc5a3d8c6a469f1ffce"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "0c00db5fdf37aa38142116eeb970919bb320fda3", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/d6f12f76308c75d658df3fcc920a95c6ca87fb35/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6f12f76308c75d658df3fcc920a95c6ca87fb35/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=d6f12f76308c75d658df3fcc920a95c6ca87fb35", "patch": "@@ -201,33 +201,33 @@ macro_rules! widening_impl {\n \n #[lang = \"i8\"]\n impl i8 {\n-    widening_impl! { i8, i16, 8, signed }\n     int_impl! { i8, i8, u8, 8, 7, -128, 127, 2, \"-0x7e\", \"0xa\", \"0x12\", \"0x12\", \"0x48\",\n     \"[0x12]\", \"[0x12]\", \"\", \"\" }\n+    widening_impl! { i8, i16, 8, signed }\n }\n \n #[lang = \"i16\"]\n impl i16 {\n-    widening_impl! { i16, i32, 16, signed }\n     int_impl! { i16, i16, u16, 16, 15, -32768, 32767, 4, \"-0x5ffd\", \"0x3a\", \"0x1234\", \"0x3412\",\n     \"0x2c48\", \"[0x34, 0x12]\", \"[0x12, 0x34]\", \"\", \"\" }\n+    widening_impl! { i16, i32, 16, signed }\n }\n \n #[lang = \"i32\"]\n impl i32 {\n-    widening_impl! { i32, i64, 32, signed }\n     int_impl! { i32, i32, u32, 32, 31, -2147483648, 2147483647, 8, \"0x10000b3\", \"0xb301\",\n     \"0x12345678\", \"0x78563412\", \"0x1e6a2c48\", \"[0x78, 0x56, 0x34, 0x12]\",\n     \"[0x12, 0x34, 0x56, 0x78]\", \"\", \"\" }\n+    widening_impl! { i32, i64, 32, signed }\n }\n \n #[lang = \"i64\"]\n impl i64 {\n-    widening_impl! { i64, i128, 64, signed }\n     int_impl! { i64, i64, u64, 64, 63, -9223372036854775808, 9223372036854775807, 12,\n     \"0xaa00000000006e1\", \"0x6e10aa\", \"0x1234567890123456\", \"0x5634129078563412\",\n     \"0x6a2c48091e6a2c48\", \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n     \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\", \"\", \"\" }\n+    widening_impl! { i64, i128, 64, signed }\n }\n \n #[lang = \"i128\"]\n@@ -245,41 +245,41 @@ impl i128 {\n #[cfg(target_pointer_width = \"16\")]\n #[lang = \"isize\"]\n impl isize {\n-    widening_impl! { isize, i32, 16, signed }\n     int_impl! { isize, i16, usize, 16, 15, -32768, 32767, 4, \"-0x5ffd\", \"0x3a\", \"0x1234\",\n     \"0x3412\", \"0x2c48\", \"[0x34, 0x12]\", \"[0x12, 0x34]\",\n     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    widening_impl! { isize, i32, 16, signed }\n }\n \n #[cfg(target_pointer_width = \"32\")]\n #[lang = \"isize\"]\n impl isize {\n-    widening_impl! { isize, i64, 32, signed }\n     int_impl! { isize, i32, usize, 32, 31, -2147483648, 2147483647, 8, \"0x10000b3\", \"0xb301\",\n     \"0x12345678\", \"0x78563412\", \"0x1e6a2c48\", \"[0x78, 0x56, 0x34, 0x12]\",\n     \"[0x12, 0x34, 0x56, 0x78]\",\n     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    widening_impl! { isize, i64, 32, signed }\n }\n \n #[cfg(target_pointer_width = \"64\")]\n #[lang = \"isize\"]\n impl isize {\n-    widening_impl! { isize, i128, 64, signed }\n     int_impl! { isize, i64, usize, 64, 63, -9223372036854775808, 9223372036854775807,\n     12, \"0xaa00000000006e1\", \"0x6e10aa\",  \"0x1234567890123456\", \"0x5634129078563412\",\n-     \"0x6a2c48091e6a2c48\", \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n-     \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\",\n-     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    \"0x6a2c48091e6a2c48\", \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n+    \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\",\n+    usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    widening_impl! { isize, i128, 64, signed }\n }\n \n /// If 6th bit set ascii is upper case.\n const ASCII_CASE_MASK: u8 = 0b0010_0000;\n \n #[lang = \"u8\"]\n impl u8 {\n-    widening_impl! { u8, u16, 8, unsigned }\n     uint_impl! { u8, u8, i8, 8, 255, 2, \"0x82\", \"0xa\", \"0x12\", \"0x12\", \"0x48\", \"[0x12]\",\n     \"[0x12]\", \"\", \"\" }\n+    widening_impl! { u8, u16, 8, unsigned }\n \n     /// Checks if the value is within the ASCII range.\n     ///\n@@ -826,26 +826,26 @@ impl u8 {\n \n #[lang = \"u16\"]\n impl u16 {\n-    widening_impl! { u16, u32, 16, unsigned }\n     uint_impl! { u16, u16, i16, 16, 65535, 4, \"0xa003\", \"0x3a\", \"0x1234\", \"0x3412\", \"0x2c48\",\n     \"[0x34, 0x12]\", \"[0x12, 0x34]\", \"\", \"\" }\n+    widening_impl! { u16, u32, 16, unsigned }\n }\n \n #[lang = \"u32\"]\n impl u32 {\n-    widening_impl! { u32, u64, 32, unsigned }\n     uint_impl! { u32, u32, i32, 32, 4294967295, 8, \"0x10000b3\", \"0xb301\", \"0x12345678\",\n     \"0x78563412\", \"0x1e6a2c48\", \"[0x78, 0x56, 0x34, 0x12]\", \"[0x12, 0x34, 0x56, 0x78]\", \"\", \"\" }\n+    widening_impl! { u32, u64, 32, unsigned }\n }\n \n #[lang = \"u64\"]\n impl u64 {\n-    widening_impl! { u64, u128, 64, unsigned }\n     uint_impl! { u64, u64, i64, 64, 18446744073709551615, 12, \"0xaa00000000006e1\", \"0x6e10aa\",\n     \"0x1234567890123456\", \"0x5634129078563412\", \"0x6a2c48091e6a2c48\",\n     \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n     \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\",\n     \"\", \"\"}\n+    widening_impl! { u64, u128, 64, unsigned }\n }\n \n #[lang = \"u128\"]\n@@ -863,29 +863,29 @@ impl u128 {\n #[cfg(target_pointer_width = \"16\")]\n #[lang = \"usize\"]\n impl usize {\n-    widening_impl! { usize, u32, 16, unsigned }\n     uint_impl! { usize, u16, isize, 16, 65535, 4, \"0xa003\", \"0x3a\", \"0x1234\", \"0x3412\", \"0x2c48\",\n     \"[0x34, 0x12]\", \"[0x12, 0x34]\",\n     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    widening_impl! { usize, u32, 16, unsigned }\n }\n #[cfg(target_pointer_width = \"32\")]\n #[lang = \"usize\"]\n impl usize {\n-    widening_impl! { usize, u64, 32, unsigned }\n     uint_impl! { usize, u32, isize, 32, 4294967295, 8, \"0x10000b3\", \"0xb301\", \"0x12345678\",\n     \"0x78563412\", \"0x1e6a2c48\", \"[0x78, 0x56, 0x34, 0x12]\", \"[0x12, 0x34, 0x56, 0x78]\",\n     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    widening_impl! { usize, u64, 32, unsigned }\n }\n \n #[cfg(target_pointer_width = \"64\")]\n #[lang = \"usize\"]\n impl usize {\n-    widening_impl! { usize, u128, 64, unsigned }\n     uint_impl! { usize, u64, isize, 64, 18446744073709551615, 12, \"0xaa00000000006e1\", \"0x6e10aa\",\n     \"0x1234567890123456\", \"0x5634129078563412\", \"0x6a2c48091e6a2c48\",\n     \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n-     \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\",\n+    \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\",\n     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n+    widening_impl! { usize, u128, 64, unsigned }\n }\n \n /// A classification of floating point numbers."}]}