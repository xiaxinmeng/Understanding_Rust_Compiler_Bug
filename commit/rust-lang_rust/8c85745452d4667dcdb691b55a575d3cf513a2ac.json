{"sha": "8c85745452d4667dcdb691b55a575d3cf513a2ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjODU3NDU0NTJkNDY2N2RjZGI2OTFiNTVhNTc1ZDNjZjUxM2EyYWM=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-20T11:25:04Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-20T15:14:50Z"}, "message": "Remove some bogus white-space from llvm.rs", "tree": {"sha": "9ecd9ea984832f42de1c752e59678aaa21c842e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ecd9ea984832f42de1c752e59678aaa21c842e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c85745452d4667dcdb691b55a575d3cf513a2ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c85745452d4667dcdb691b55a575d3cf513a2ac", "html_url": "https://github.com/rust-lang/rust/commit/8c85745452d4667dcdb691b55a575d3cf513a2ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c85745452d4667dcdb691b55a575d3cf513a2ac/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35873a95d4df2eaa3199a5bda6043fd91d1f9165", "url": "https://api.github.com/repos/rust-lang/rust/commits/35873a95d4df2eaa3199a5bda6043fd91d1f9165", "html_url": "https://github.com/rust-lang/rust/commit/35873a95d4df2eaa3199a5bda6043fd91d1f9165"}], "stats": {"total": 52, "additions": 2, "deletions": 50}, "files": [{"sha": "c849db64b874bfe0517c5718f64eda2bc2ab1a24", "filename": "src/comp/lib/llvm.rs", "status": "modified", "additions": 2, "deletions": 50, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/8c85745452d4667dcdb691b55a575d3cf513a2ac/src%2Fcomp%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c85745452d4667dcdb691b55a575d3cf513a2ac/src%2Fcomp%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Flib%2Fllvm.rs?ref=8c85745452d4667dcdb691b55a575d3cf513a2ac", "patch": "@@ -943,41 +943,19 @@ fn type_to_str_inner(names: type_names, outer0: [TypeRef], ty: TypeRef) ->\n         ret s;\n     }\n \n-\n     alt kind {\n-\n-\n-\n-\n-\n-\n       // FIXME: more enum-as-int constants determined from Core::h;\n       // horrible, horrible. Complete as needed.\n-\n-      0 {\n-        ret \"Void\";\n-      }\n+      0 { ret \"Void\"; }\n       1 { ret \"Float\"; }\n       2 { ret \"Double\"; }\n       3 { ret \"X86_FP80\"; }\n       4 { ret \"FP128\"; }\n       5 { ret \"PPC_FP128\"; }\n       6 { ret \"Label\"; }\n-\n-\n-\n-\n-\n-\n       7 {\n         ret \"i\" + std::int::str(llvm::LLVMGetIntTypeWidth(ty) as int);\n       }\n-\n-\n-\n-\n-\n-\n       8 {\n         let s = \"fn(\";\n         let out_ty: TypeRef = llvm::LLVMGetReturnType(ty);\n@@ -989,12 +967,6 @@ fn type_to_str_inner(names: type_names, outer0: [TypeRef], ty: TypeRef) ->\n         s += type_to_str_inner(names, outer, out_ty);\n         ret s;\n       }\n-\n-\n-\n-\n-\n-\n       9 {\n         let s: str = \"{\";\n         let n_elts: uint = llvm::LLVMCountStructElementTypes(ty);\n@@ -1004,22 +976,10 @@ fn type_to_str_inner(names: type_names, outer0: [TypeRef], ty: TypeRef) ->\n         s += \"}\";\n         ret s;\n       }\n-\n-\n-\n-\n-\n-\n       10 {\n         let el_ty = llvm::LLVMGetElementType(ty);\n         ret \"[\" + type_to_str_inner(names, outer, el_ty) + \"]\";\n       }\n-\n-\n-\n-\n-\n-\n       11 {\n         let i: uint = 0u;\n         for tout: TypeRef in outer0 {\n@@ -1032,15 +992,7 @@ fn type_to_str_inner(names: type_names, outer0: [TypeRef], ty: TypeRef) ->\n         ret \"*\" +\n                 type_to_str_inner(names, outer, llvm::LLVMGetElementType(ty));\n       }\n-\n-\n-\n-\n-\n-\n-      12 {\n-        ret \"Opaque\";\n-      }\n+      12 { ret \"Opaque\"; }\n       13 { ret \"Vector\"; }\n       14 { ret \"Metadata\"; }\n       _ { log_err #fmt[\"unknown TypeKind %d\", kind as int]; fail; }"}]}