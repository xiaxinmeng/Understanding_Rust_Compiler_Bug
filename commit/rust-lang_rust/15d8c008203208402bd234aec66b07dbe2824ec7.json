{"sha": "15d8c008203208402bd234aec66b07dbe2824ec7", "node_id": "C_kwDOAAsO6NoAKDE1ZDhjMDA4MjAzMjA4NDAyYmQyMzRhZWM2NmIwN2RiZTI4MjRlYzc", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-05-13T18:25:51Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-05-13T19:08:54Z"}, "message": "Test RefCell aliasing", "tree": {"sha": "332f87670da6f7920d0e015208c39c7769b4adfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/332f87670da6f7920d0e015208c39c7769b4adfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15d8c008203208402bd234aec66b07dbe2824ec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15d8c008203208402bd234aec66b07dbe2824ec7", "html_url": "https://github.com/rust-lang/rust/commit/15d8c008203208402bd234aec66b07dbe2824ec7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15d8c008203208402bd234aec66b07dbe2824ec7/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b8041f5746bdbd7c9f6ccf077544e1c77e927c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b8041f5746bdbd7c9f6ccf077544e1c77e927c0", "html_url": "https://github.com/rust-lang/rust/commit/2b8041f5746bdbd7c9f6ccf077544e1c77e927c0"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "dba73937abf178e09124e649c9ab504501cf2463", "filename": "src/test/codegen/noalias-refcell.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/15d8c008203208402bd234aec66b07dbe2824ec7/src%2Ftest%2Fcodegen%2Fnoalias-refcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d8c008203208402bd234aec66b07dbe2824ec7/src%2Ftest%2Fcodegen%2Fnoalias-refcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fnoalias-refcell.rs?ref=15d8c008203208402bd234aec66b07dbe2824ec7", "patch": "@@ -0,0 +1,14 @@\n+// compile-flags: -O -C no-prepopulate-passes -Z mutable-noalias=yes\n+\n+#![crate_type = \"lib\"]\n+\n+use std::cell::{Ref, RefCell, RefMut};\n+\n+// Make sure that none of the arguments get a `noalias` attribute, because\n+// the `RefCell` might alias writes after either `Ref`/`RefMut` is dropped.\n+\n+// CHECK-LABEL: @maybe_aliased(\n+// CHECK-NOT: noalias\n+// CHECK-SAME: %_refcell\n+#[no_mangle]\n+pub unsafe fn maybe_aliased(_: Ref<'_, i32>, _: RefMut<'_, i32>, _refcell: &RefCell<i32>) {}"}, {"sha": "cba079b2315225d453f813982beb2d1279a26fd1", "filename": "src/test/ui/issues/issue-63787.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/15d8c008203208402bd234aec66b07dbe2824ec7/src%2Ftest%2Fui%2Fissues%2Fissue-63787.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d8c008203208402bd234aec66b07dbe2824ec7/src%2Ftest%2Fui%2Fissues%2Fissue-63787.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-63787.rs?ref=15d8c008203208402bd234aec66b07dbe2824ec7", "patch": "@@ -0,0 +1,36 @@\n+// run-pass\n+// compile-flags: -O\n+\n+// Make sure that `Ref` and `RefMut` do not make false promises about aliasing,\n+// because once they drop, their reference/pointer can alias other writes.\n+\n+// Adapted from comex's proof of concept:\n+// https://github.com/rust-lang/rust/issues/63787#issuecomment-523588164\n+\n+use std::cell::RefCell;\n+use std::ops::Deref;\n+\n+pub fn break_if_r_is_noalias(rc: &RefCell<i32>, r: impl Deref<Target = i32>) -> i32 {\n+    let ptr1 = &*r as *const i32;\n+    let a = *r;\n+    drop(r);\n+    *rc.borrow_mut() = 2;\n+    let r2 = rc.borrow();\n+    let ptr2 = &*r2 as *const i32;\n+    if ptr2 != ptr1 {\n+        panic!();\n+    }\n+    // If LLVM knows the pointers are the same, and if `r` was `noalias`,\n+    // then it may replace this with `a + a`, ignoring the earlier write.\n+    a + *r2\n+}\n+\n+fn main() {\n+    let mut rc = RefCell::new(1);\n+    let res = break_if_r_is_noalias(&rc, rc.borrow());\n+    assert_eq!(res, 3);\n+\n+    *rc.get_mut() = 1;\n+    let res = break_if_r_is_noalias(&rc, rc.borrow_mut());\n+    assert_eq!(res, 3);\n+}"}]}