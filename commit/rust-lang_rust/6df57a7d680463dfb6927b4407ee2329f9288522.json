{"sha": "6df57a7d680463dfb6927b4407ee2329f9288522", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkZjU3YTdkNjgwNDYzZGZiNjkyN2I0NDA3ZWUyMzI5ZjkyODg1MjI=", "commit": {"author": {"name": "Geoffry Song", "email": "goffrie@gmail.com", "date": "2018-10-26T08:21:34Z"}, "committer": {"name": "Geoffry Song", "email": "goffrie@gmail.com", "date": "2018-10-26T19:09:41Z"}, "message": "Slight copy-editing for `std::cell::Cell` docs\n\nHopefully this is a bit more precise and also more correct English.", "tree": {"sha": "5da712c79eb4fc87752943c563996091d24889d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5da712c79eb4fc87752943c563996091d24889d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6df57a7d680463dfb6927b4407ee2329f9288522", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6df57a7d680463dfb6927b4407ee2329f9288522", "html_url": "https://github.com/rust-lang/rust/commit/6df57a7d680463dfb6927b4407ee2329f9288522", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6df57a7d680463dfb6927b4407ee2329f9288522/comments", "author": {"login": "goffrie", "id": 1240398, "node_id": "MDQ6VXNlcjEyNDAzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1240398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goffrie", "html_url": "https://github.com/goffrie", "followers_url": "https://api.github.com/users/goffrie/followers", "following_url": "https://api.github.com/users/goffrie/following{/other_user}", "gists_url": "https://api.github.com/users/goffrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/goffrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goffrie/subscriptions", "organizations_url": "https://api.github.com/users/goffrie/orgs", "repos_url": "https://api.github.com/users/goffrie/repos", "events_url": "https://api.github.com/users/goffrie/events{/privacy}", "received_events_url": "https://api.github.com/users/goffrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "goffrie", "id": 1240398, "node_id": "MDQ6VXNlcjEyNDAzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1240398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goffrie", "html_url": "https://github.com/goffrie", "followers_url": "https://api.github.com/users/goffrie/followers", "following_url": "https://api.github.com/users/goffrie/following{/other_user}", "gists_url": "https://api.github.com/users/goffrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/goffrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goffrie/subscriptions", "organizations_url": "https://api.github.com/users/goffrie/orgs", "repos_url": "https://api.github.com/users/goffrie/repos", "events_url": "https://api.github.com/users/goffrie/events{/privacy}", "received_events_url": "https://api.github.com/users/goffrie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82239b04dc9cea1d54422c2fb223ff5321ccafdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/82239b04dc9cea1d54422c2fb223ff5321ccafdd", "html_url": "https://github.com/rust-lang/rust/commit/82239b04dc9cea1d54422c2fb223ff5321ccafdd"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "689cf319bd750bd1c710e135c4ee0bd2f54d157d", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6df57a7d680463dfb6927b4407ee2329f9288522/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6df57a7d680463dfb6927b4407ee2329f9288522/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=6df57a7d680463dfb6927b4407ee2329f9288522", "patch": "@@ -207,8 +207,8 @@ use ptr;\n ///\n /// # Examples\n ///\n-/// Here you can see how using `Cell<T>` allows to use mutable field inside\n-/// immutable struct (which is also called 'interior mutability').\n+/// In this example, you can see that `Cell<T>` enables mutation inside an\n+/// immutable struct. In other words, it enables \"interior mutability\".\n ///\n /// ```\n /// use std::cell::Cell;\n@@ -225,10 +225,11 @@ use ptr;\n ///\n /// let new_value = 100;\n ///\n-/// // ERROR, because my_struct is immutable\n+/// // ERROR: `my_struct` is immutable\n /// // my_struct.regular_field = new_value;\n ///\n-/// // WORKS, although `my_struct` is immutable, field `special_field` is mutable because it is Cell\n+/// // WORKS: although `my_struct` is immutable, `special_field` is a `Cell`,\n+/// // which can always be mutated\n /// my_struct.special_field.set(new_value);\n /// assert_eq!(my_struct.special_field.get(), new_value);\n /// ```"}]}