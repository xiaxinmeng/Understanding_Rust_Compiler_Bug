{"sha": "311186b9bba220a38290b1c888864d7251c30882", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMTE4NmI5YmJhMjIwYTM4MjkwYjFjODg4ODY0ZDcyNTFjMzA4ODI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-05T09:37:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-05T09:37:19Z"}, "message": "Auto merge of #6513 - nahuakang:fix/empty_enum_lint_never_type, r=flip1995\n\nFix: Empty enum never type suggested only if the feature is enabled\n\nThis PR addresses [Issue 6422](https://github.com/rust-lang/rust-clippy/issues/6422). Instead of always recommending `never type` for empty enums, Clippy would only recommend [the lint](https://rust-lang.github.io/rust-clippy/master/index.html#empty_enum) if [LatePass.TyCtxt](https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/context/struct.TyCtxt.html) has `features().never_type` enabled.\n\n- \\[ ] Followed [lint naming conventions][lint_naming]\n- \\[x] Added passing UI tests (including committed `.stderr` file)\n- \\[x] `cargo test` passes locally\n- \\[x] Executed `cargo dev update_lints`\n- \\[x] Added lint documentation\n- \\[x] Run `cargo dev fmt`\n---\n\n*Please write a short comment explaining your change (or \"none\" for internal only changes)*\nchangelog: Only trigger [`empty_enum`] lint if `never_type` feature is enabled.", "tree": {"sha": "b7960feb46b85746de51cf8d2c67c592785c6d68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7960feb46b85746de51cf8d2c67c592785c6d68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/311186b9bba220a38290b1c888864d7251c30882", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/311186b9bba220a38290b1c888864d7251c30882", "html_url": "https://github.com/rust-lang/rust/commit/311186b9bba220a38290b1c888864d7251c30882", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/311186b9bba220a38290b1c888864d7251c30882/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd52066f74795d7640e2931be31466f5a131b26e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd52066f74795d7640e2931be31466f5a131b26e", "html_url": "https://github.com/rust-lang/rust/commit/dd52066f74795d7640e2931be31466f5a131b26e"}, {"sha": "a8d47b4b78a6e6a23dc3320ad3c9e6308f6d1934", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8d47b4b78a6e6a23dc3320ad3c9e6308f6d1934", "html_url": "https://github.com/rust-lang/rust/commit/a8d47b4b78a6e6a23dc3320ad3c9e6308f6d1934"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "853b3afdc3ae2a0016e5c9da909c08b35cd2c400", "filename": "clippy_lints/src/empty_enum.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/311186b9bba220a38290b1c888864d7251c30882/clippy_lints%2Fsrc%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/311186b9bba220a38290b1c888864d7251c30882/clippy_lints%2Fsrc%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fempty_enum.rs?ref=311186b9bba220a38290b1c888864d7251c30882", "patch": "@@ -8,8 +8,12 @@ use rustc_session::{declare_lint_pass, declare_tool_lint};\n declare_clippy_lint! {\n     /// **What it does:** Checks for `enum`s with no variants.\n     ///\n+    /// As of this writing, the `never_type` is still a\n+    /// nightly-only experimental API. Therefore, this lint is only triggered\n+    /// if the `never_type` is enabled.\n+    ///\n     /// **Why is this bad?** If you want to introduce a type which\n-    /// can't be instantiated, you should use `!` (the never type),\n+    /// can't be instantiated, you should use `!` (the primitive type \"never\"),\n     /// or a wrapper around it, because `!` has more extensive\n     /// compiler support (type inference, etc...) and wrappers\n     /// around it are the conventional way to define an uninhabited type.\n@@ -40,6 +44,11 @@ declare_lint_pass!(EmptyEnum => [EMPTY_ENUM]);\n \n impl<'tcx> LateLintPass<'tcx> for EmptyEnum {\n     fn check_item(&mut self, cx: &LateContext<'_>, item: &Item<'_>) {\n+        // Only suggest the `never_type` if the feature is enabled\n+        if !cx.tcx.features().never_type {\n+            return;\n+        }\n+\n         let did = cx.tcx.hir().local_def_id(item.hir_id);\n         if let ItemKind::Enum(..) = item.kind {\n             let ty = cx.tcx.type_of(did);"}, {"sha": "a2e5c13c45282c50b93ec0e00d6723660af34033", "filename": "tests/ui/empty_enum.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/311186b9bba220a38290b1c888864d7251c30882/tests%2Fui%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/311186b9bba220a38290b1c888864d7251c30882/tests%2Fui%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_enum.rs?ref=311186b9bba220a38290b1c888864d7251c30882", "patch": "@@ -1,6 +1,7 @@\n #![allow(dead_code)]\n #![warn(clippy::empty_enum)]\n-\n+// Enable never type to test empty enum lint\n+#![feature(never_type)]\n enum Empty {}\n \n fn main() {}"}, {"sha": "7125e5f602b75ba962c400f6824b82e19b3d4bba", "filename": "tests/ui/empty_enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/311186b9bba220a38290b1c888864d7251c30882/tests%2Fui%2Fempty_enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/311186b9bba220a38290b1c888864d7251c30882/tests%2Fui%2Fempty_enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_enum.stderr?ref=311186b9bba220a38290b1c888864d7251c30882", "patch": "@@ -1,5 +1,5 @@\n error: enum with no variants\n-  --> $DIR/empty_enum.rs:4:1\n+  --> $DIR/empty_enum.rs:5:1\n    |\n LL | enum Empty {}\n    | ^^^^^^^^^^^^^"}, {"sha": "386677352e29be18d9b0876af6f3c89e10097091", "filename": "tests/ui/empty_enum_without_never_type.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/311186b9bba220a38290b1c888864d7251c30882/tests%2Fui%2Fempty_enum_without_never_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/311186b9bba220a38290b1c888864d7251c30882/tests%2Fui%2Fempty_enum_without_never_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_enum_without_never_type.rs?ref=311186b9bba220a38290b1c888864d7251c30882", "patch": "@@ -0,0 +1,7 @@\n+#![allow(dead_code)]\n+#![warn(clippy::empty_enum)]\n+\n+// `never_type` is not enabled; this test has no stderr file\n+enum Empty {}\n+\n+fn main() {}"}]}