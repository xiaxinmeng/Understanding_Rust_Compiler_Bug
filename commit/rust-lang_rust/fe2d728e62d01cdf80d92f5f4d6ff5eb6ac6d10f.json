{"sha": "fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMmQ3MjhlNjJkMDFjZGY4MGQ5MmY1ZjRkNmZmNWViNmFjNmQxMGY=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-11T11:24:56Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-11T11:24:58Z"}, "message": "Remove useless method.", "tree": {"sha": "fb61e3f83b2f2973d200f094de1dc2c3cfd354f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb61e3f83b2f2973d200f094de1dc2c3cfd354f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f", "html_url": "https://github.com/rust-lang/rust/commit/fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84bf599bace38787f2237d2aadc5adf55fe662db", "url": "https://api.github.com/repos/rust-lang/rust/commits/84bf599bace38787f2237d2aadc5adf55fe662db", "html_url": "https://github.com/rust-lang/rust/commit/84bf599bace38787f2237d2aadc5adf55fe662db"}], "stats": {"total": 17, "additions": 0, "deletions": 17}, "files": [{"sha": "cf29d21927c0d68ac617ef5893d4cdc5a1628568", "filename": "compiler/rustc_middle/src/ich/hcx.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f/compiler%2Frustc_middle%2Fsrc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f/compiler%2Frustc_middle%2Fsrc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fich%2Fhcx.rs?ref=fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f", "patch": "@@ -250,13 +250,6 @@ impl<'a> rustc_span::HashStableContext for StableHashingContext<'a> {\n         &CACHE\n     }\n \n-    fn byte_pos_to_line_and_col(\n-        &mut self,\n-        byte: BytePos,\n-    ) -> Option<(Lrc<SourceFile>, usize, BytePos)> {\n-        self.source_map().byte_pos_to_line_and_col(byte)\n-    }\n-\n     fn span_data_to_lines_and_cols(\n         &mut self,\n         span: &SpanData,"}, {"sha": "e67a4ca8fb26b2326d94474d455953626c5839fa", "filename": "compiler/rustc_span/src/hygiene.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs?ref=fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f", "patch": "@@ -1362,12 +1362,6 @@ fn update_disambiguator(expn_id: ExpnId) {\n         fn hash_spans(&self) -> bool {\n             true\n         }\n-        fn byte_pos_to_line_and_col(\n-            &mut self,\n-            byte: BytePos,\n-        ) -> Option<(Lrc<SourceFile>, usize, BytePos)> {\n-            self.caching_source_map.byte_pos_to_line_and_col(byte)\n-        }\n         fn span_data_to_lines_and_cols(\n             &mut self,\n             span: &crate::SpanData,"}, {"sha": "1a2e87d28aca468beea1092b9b04068068f80239", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=fe2d728e62d01cdf80d92f5f4d6ff5eb6ac6d10f", "patch": "@@ -1874,10 +1874,6 @@ pub trait HashStableContext {\n     fn expn_id_cache() -> &'static LocalKey<ExpnIdCache>;\n     fn hash_crate_num(&mut self, _: CrateNum, hasher: &mut StableHasher);\n     fn hash_spans(&self) -> bool;\n-    fn byte_pos_to_line_and_col(\n-        &mut self,\n-        byte: BytePos,\n-    ) -> Option<(Lrc<SourceFile>, usize, BytePos)>;\n     fn span_data_to_lines_and_cols(\n         &mut self,\n         span: &SpanData,"}]}