{"sha": "c2e109744db3322f44ebfbe707847bbb9b9be933", "node_id": "C_kwDOAAsO6NoAKGMyZTEwOTc0NGRiMzMyMmY0NGViZmJlNzA3ODQ3YmJiOWI5YmU5MzM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-06-16T09:16:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-16T09:16:17Z"}, "message": "Rollup merge of #112642 - compiler-errors:interp-lit-err, r=nnethercote\n\nHandle interpolated literal errors\n\nNot sure why it was doing a whole dance to re-match on the token kind when it seems like `Lit::from_token` does the right thing for both macro-arg and regular literals. Nothing seems to have regressed diagnostics-wise from the change, though.\n\nFixes #112622\n\nr? ``@nnethercote``", "tree": {"sha": "f728efaf54e915d106a8042fb302b33588d94c48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f728efaf54e915d106a8042fb302b33588d94c48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2e109744db3322f44ebfbe707847bbb9b9be933", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkjChhCRBK7hj4Ov3rIwAAD40IAC2FKXQdC1ChcQDpQ5YACFFO\nfAAe/wG7OsWKIF3uv19aHOi+5n5q0pFH8zLODDwuL1t1kyhdpqanML44BWu1Q1QN\ntwf8WJK4vgyDKEizDwpHMs2dCUd6TrEv/tqNfckkqkQP1xXuf6ox/Xpxo3S07bPu\n56HE3vBgcZ4cJkU8dI31KFg2WHDkyMJaHP1IEucAYLsv8oZwlbNQpCZ5Hay0yPnx\nYPVkkp/5zE58XD1coxjijVWwaN9jO+eFhdS2OPrg/s12rd1uGiWUvozsgMrQgNHz\nKpKRZ8E6Xaj7bS45xG/+Br3pXFeX9D1G22UmPKJfdh4Weo39jrVNBnwmv9cH3LQ=\n=knY+\n-----END PGP SIGNATURE-----\n", "payload": "tree f728efaf54e915d106a8042fb302b33588d94c48\nparent 2c850691c11d3400c08ba9680a000d8d1cc2eae6\nparent 9ef580fa6f2b5019b35e6a9cf979f6f13d21de00\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1686906977 +0530\ncommitter GitHub <noreply@github.com> 1686906977 +0530\n\nRollup merge of #112642 - compiler-errors:interp-lit-err, r=nnethercote\n\nHandle interpolated literal errors\n\nNot sure why it was doing a whole dance to re-match on the token kind when it seems like `Lit::from_token` does the right thing for both macro-arg and regular literals. Nothing seems to have regressed diagnostics-wise from the change, though.\n\nFixes #112622\n\nr? ``@nnethercote``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2e109744db3322f44ebfbe707847bbb9b9be933", "html_url": "https://github.com/rust-lang/rust/commit/c2e109744db3322f44ebfbe707847bbb9b9be933", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2e109744db3322f44ebfbe707847bbb9b9be933/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c850691c11d3400c08ba9680a000d8d1cc2eae6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c850691c11d3400c08ba9680a000d8d1cc2eae6", "html_url": "https://github.com/rust-lang/rust/commit/2c850691c11d3400c08ba9680a000d8d1cc2eae6"}, {"sha": "9ef580fa6f2b5019b35e6a9cf979f6f13d21de00", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ef580fa6f2b5019b35e6a9cf979f6f13d21de00", "html_url": "https://github.com/rust-lang/rust/commit/9ef580fa6f2b5019b35e6a9cf979f6f13d21de00"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "f00bc54589a7f639be9b6b9175d1cc9b89c93bf7", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c2e109744db3322f44ebfbe707847bbb9b9be933/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e109744db3322f44ebfbe707847bbb9b9be933/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=c2e109744db3322f44ebfbe707847bbb9b9be933", "patch": "@@ -2023,17 +2023,14 @@ impl<'a> Parser<'a> {\n         let recovered = self.recover_after_dot();\n         let token = recovered.as_ref().unwrap_or(&self.token);\n         match token::Lit::from_token(token) {\n-            Some(token_lit) => {\n-                match MetaItemLit::from_token_lit(token_lit, token.span) {\n+            Some(lit) => {\n+                match MetaItemLit::from_token_lit(lit, token.span) {\n                     Ok(lit) => {\n                         self.bump();\n                         Some(lit)\n                     }\n                     Err(err) => {\n-                        let span = token.span;\n-                        let token::Literal(lit) = token.kind else {\n-                            unreachable!();\n-                        };\n+                        let span = token.uninterpolated_span();\n                         self.bump();\n                         report_lit_error(&self.sess, err, lit, span);\n                         // Pack possible quotes and prefixes from the original literal into"}, {"sha": "cff8ee6b40ca67308f3d58a298ab7ca7af3574aa", "filename": "tests/ui/parser/lit-err-in-macro.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c2e109744db3322f44ebfbe707847bbb9b9be933/tests%2Fui%2Fparser%2Flit-err-in-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e109744db3322f44ebfbe707847bbb9b9be933/tests%2Fui%2Fparser%2Flit-err-in-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Flit-err-in-macro.rs?ref=c2e109744db3322f44ebfbe707847bbb9b9be933", "patch": "@@ -0,0 +1,10 @@\n+macro_rules! f {\n+    ($abi:literal) => {\n+        extern $abi fn f() {}\n+    }\n+}\n+\n+f!(\"Foo\"__);\n+//~^ ERROR suffixes on string literals are invalid\n+\n+fn main() {}"}, {"sha": "a61fb5c85d492f94b5767fbcee4e209d0f7ccbf6", "filename": "tests/ui/parser/lit-err-in-macro.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c2e109744db3322f44ebfbe707847bbb9b9be933/tests%2Fui%2Fparser%2Flit-err-in-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c2e109744db3322f44ebfbe707847bbb9b9be933/tests%2Fui%2Fparser%2Flit-err-in-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Flit-err-in-macro.stderr?ref=c2e109744db3322f44ebfbe707847bbb9b9be933", "patch": "@@ -0,0 +1,8 @@\n+error: suffixes on string literals are invalid\n+  --> $DIR/lit-err-in-macro.rs:7:4\n+   |\n+LL | f!(\"Foo\"__);\n+   |    ^^^^^^^ invalid suffix `__`\n+\n+error: aborting due to previous error\n+"}]}