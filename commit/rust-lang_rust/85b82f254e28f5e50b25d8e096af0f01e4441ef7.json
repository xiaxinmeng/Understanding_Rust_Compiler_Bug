{"sha": "85b82f254e28f5e50b25d8e096af0f01e4441ef7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1YjgyZjI1NGUyOGY1ZTUwYjI1ZDhlMDk2YWYwZjAxZTQ0NDFlZjc=", "commit": {"author": {"name": "Bryan Drewery", "email": "bryan@shatow.net", "date": "2018-02-27T22:12:52Z"}, "committer": {"name": "Bryan Drewery", "email": "bryan@shatow.net", "date": "2018-02-28T23:36:32Z"}, "message": "Support posix_spawn() for FreeBSD.\n\nspawn() is expected to return an error if the specified file could not be\nexecuted.  FreeBSD's posix_spawn() supports returning ENOENT/ENOEXEC if\nthe exec() fails, which not all platforms support.  This brings a very\nsignificant performance improvement for FreeBSD, involving heavy use of\nCommand in threads, due to fork() invoking jemalloc fork handlers and\ncausing lock contention.  FreeBSD's posix_spawn() avoids this problem\ndue to using vfork() internally.", "tree": {"sha": "678c934bdccd363b7d3ed889d9ec4b42cb7e0396", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/678c934bdccd363b7d3ed889d9ec4b42cb7e0396"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85b82f254e28f5e50b25d8e096af0f01e4441ef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85b82f254e28f5e50b25d8e096af0f01e4441ef7", "html_url": "https://github.com/rust-lang/rust/commit/85b82f254e28f5e50b25d8e096af0f01e4441ef7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85b82f254e28f5e50b25d8e096af0f01e4441ef7/comments", "author": {"login": "bdrewery", "id": 33693, "node_id": "MDQ6VXNlcjMzNjkz", "avatar_url": "https://avatars.githubusercontent.com/u/33693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdrewery", "html_url": "https://github.com/bdrewery", "followers_url": "https://api.github.com/users/bdrewery/followers", "following_url": "https://api.github.com/users/bdrewery/following{/other_user}", "gists_url": "https://api.github.com/users/bdrewery/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdrewery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdrewery/subscriptions", "organizations_url": "https://api.github.com/users/bdrewery/orgs", "repos_url": "https://api.github.com/users/bdrewery/repos", "events_url": "https://api.github.com/users/bdrewery/events{/privacy}", "received_events_url": "https://api.github.com/users/bdrewery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bdrewery", "id": 33693, "node_id": "MDQ6VXNlcjMzNjkz", "avatar_url": "https://avatars.githubusercontent.com/u/33693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdrewery", "html_url": "https://github.com/bdrewery", "followers_url": "https://api.github.com/users/bdrewery/followers", "following_url": "https://api.github.com/users/bdrewery/following{/other_user}", "gists_url": "https://api.github.com/users/bdrewery/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdrewery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdrewery/subscriptions", "organizations_url": "https://api.github.com/users/bdrewery/orgs", "repos_url": "https://api.github.com/users/bdrewery/repos", "events_url": "https://api.github.com/users/bdrewery/events{/privacy}", "received_events_url": "https://api.github.com/users/bdrewery/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3ecf5f57ca9d34d10ffd9d064a027ce3f4888ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3ecf5f57ca9d34d10ffd9d064a027ce3f4888ac", "html_url": "https://github.com/rust-lang/rust/commit/b3ecf5f57ca9d34d10ffd9d064a027ce3f4888ac"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c7841a861ceb723a176269b6bf0ae22bcb6ec2dc", "filename": "src/libstd/sys/unix/process/process_unix.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85b82f254e28f5e50b25d8e096af0f01e4441ef7/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85b82f254e28f5e50b25d8e096af0f01e4441ef7/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=85b82f254e28f5e50b25d8e096af0f01e4441ef7", "patch": "@@ -235,14 +235,14 @@ impl Command {\n         io::Error::last_os_error()\n     }\n \n-    #[cfg(not(any(target_os = \"linux\", target_os = \"macos\")))]\n+    #[cfg(not(any(target_os = \"freebsd\")))]\n     fn posix_spawn(&mut self, _stdio: &ChildPipes, _envp: Option<&CStringArray>)\n         -> io::Result<Option<Process>>\n     {\n         Ok(None)\n     }\n \n-    #[cfg(any(target_os = \"linux\", target_os = \"macos\"))]\n+    #[cfg(any(target_os = \"freebsd\"))]\n     fn posix_spawn(&mut self, stdio: &ChildPipes, envp: Option<&CStringArray>)\n         -> io::Result<Option<Process>>\n     {"}]}