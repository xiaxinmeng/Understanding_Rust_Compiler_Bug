{"sha": "8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "node_id": "C_kwDOAAsO6NoAKDhlN2MxMDRiM2FkYTY2Mjc2ZmY3MGZiODFhYTgxZDRmNzVkOWQyY2E", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-04-06T17:23:29Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-04-06T17:23:29Z"}, "message": "Move hir_def::adt to hir_def::data::adt", "tree": {"sha": "c42b640af7acce70fa3ff41d3dd3ab305240bad2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c42b640af7acce70fa3ff41d3dd3ab305240bad2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "html_url": "https://github.com/rust-lang/rust/commit/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3dd17bcfc3d0e4d4e0c711828887d6f31602e415", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dd17bcfc3d0e4d4e0c711828887d6f31602e415", "html_url": "https://github.com/rust-lang/rust/commit/3dd17bcfc3d0e4d4e0c711828887d6f31602e415"}], "stats": {"total": 59, "additions": 33, "deletions": 26}, "files": [{"sha": "08c109381992d6dd1a2af08ec8604ef681f85854", "filename": "crates/hir-def/src/body/lower.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -26,10 +26,12 @@ use syntax::{\n };\n \n use crate::{\n-    adt::StructKind,\n-    body::{Body, BodySourceMap, Expander, ExprPtr, LabelPtr, LabelSource, PatPtr},\n-    body::{BodyDiagnostic, ExprSource, PatSource},\n+    body::{\n+        Body, BodyDiagnostic, BodySourceMap, Expander, ExprPtr, ExprSource, LabelPtr, LabelSource,\n+        PatPtr, PatSource,\n+    },\n     builtin_type::{BuiltinFloat, BuiltinInt, BuiltinUint},\n+    data::adt::StructKind,\n     db::DefDatabase,\n     expr::{\n         dummy_expr_id, Array, Binding, BindingAnnotation, BindingId, ClosureKind, Expr, ExprId,"}, {"sha": "9d368911a4c1a8bb028e262faa36a0758a536276", "filename": "crates/hir-def/src/data.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fdata.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -1,5 +1,7 @@\n //! Contains basic data about various HIR declarations.\n \n+pub mod adt;\n+\n use std::sync::Arc;\n \n use hir_expand::{name::Name, AstId, ExpandResult, HirFileId, InFile, MacroCallId, MacroDefKind};"}, {"sha": "7a5025aa6a524a106056fb03d8370afeed59bf74", "filename": "crates/hir-def/src/data/adt.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-def%2Fsrc%2Fdata%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-def%2Fsrc%2Fdata%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fdata%2Fadt.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "previous_filename": "crates/hir-def/src/adt.rs"}, {"sha": "2dfe4b6264847c38cb1851503a313b9301c6c7e8", "filename": "crates/hir-def/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fdb.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -9,10 +9,10 @@ use la_arena::ArenaMap;\n use syntax::{ast, AstPtr};\n \n use crate::{\n-    adt::{EnumData, StructData},\n     attr::{Attrs, AttrsWithOwner},\n     body::{scope::ExprScopes, Body, BodySourceMap},\n     data::{\n+        adt::{EnumData, StructData},\n         ConstData, FunctionData, ImplData, Macro2Data, MacroRulesData, ProcMacroData, StaticData,\n         TraitAliasData, TraitData, TypeAliasData,\n     },"}, {"sha": "b7db1f033600d48c49d512f934d92e5dd38b18d5", "filename": "crates/hir-def/src/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Flib.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -29,7 +29,6 @@ pub mod keys;\n \n pub mod item_tree;\n \n-pub mod adt;\n pub mod data;\n pub mod generics;\n pub mod lang_item;\n@@ -82,8 +81,8 @@ use syntax::ast;\n use ::tt::token_id as tt;\n \n use crate::{\n-    adt::VariantData,\n     builtin_type::BuiltinType,\n+    data::adt::VariantData,\n     item_tree::{\n         Const, Enum, Function, Impl, ItemTreeId, ItemTreeNode, MacroDef, MacroRules, ModItem,\n         Static, Struct, Trait, TraitAlias, TypeAlias, Union,\n@@ -236,15 +235,15 @@ pub struct EnumVariantId {\n     pub local_id: LocalEnumVariantId,\n }\n \n-pub type LocalEnumVariantId = Idx<adt::EnumVariantData>;\n+pub type LocalEnumVariantId = Idx<data::adt::EnumVariantData>;\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct FieldId {\n     pub parent: VariantId,\n     pub local_id: LocalFieldId,\n }\n \n-pub type LocalFieldId = Idx<adt::FieldData>;\n+pub type LocalFieldId = Idx<data::adt::FieldData>;\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct ConstId(salsa::InternId);"}, {"sha": "8299d9684bbb75b87c0f9bb02d67f551648d17fe", "filename": "crates/hir-def/src/nameres/path_resolution.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres%2Fpath_resolution.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -331,11 +331,11 @@ impl DefMap {\n                         Some(local_id) => {\n                             let variant = EnumVariantId { parent: e, local_id };\n                             match &*enum_data.variants[local_id].variant_data {\n-                                crate::adt::VariantData::Record(_) => {\n+                                crate::data::adt::VariantData::Record(_) => {\n                                     PerNs::types(variant.into(), Visibility::Public)\n                                 }\n-                                crate::adt::VariantData::Tuple(_)\n-                                | crate::adt::VariantData::Unit => {\n+                                crate::data::adt::VariantData::Tuple(_)\n+                                | crate::data::adt::VariantData::Unit => {\n                                     PerNs::both(variant.into(), variant.into(), Visibility::Public)\n                                 }\n                             }"}, {"sha": "8f493a15b4b462535cfd50275b48f20679827664", "filename": "crates/hir-ty/src/diagnostics/decl_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -16,7 +16,7 @@ use std::fmt;\n \n use base_db::CrateId;\n use hir_def::{\n-    adt::VariantData,\n+    data::adt::VariantData,\n     expr::{Pat, PatId},\n     src::HasSource,\n     AdtId, AttrDefId, ConstId, EnumId, FunctionId, ItemContainerId, Lookup, ModuleDefId, StaticId,"}, {"sha": "6db99993625548a04dd86cb87b3f50d02d3b87d2", "filename": "crates/hir-ty/src/diagnostics/match_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -12,7 +12,7 @@ pub(crate) mod usefulness;\n \n use chalk_ir::Mutability;\n use hir_def::{\n-    adt::VariantData, body::Body, expr::PatId, AdtId, EnumVariantId, LocalFieldId, VariantId,\n+    body::Body, data::adt::VariantData, expr::PatId, AdtId, EnumVariantId, LocalFieldId, VariantId,\n };\n use hir_expand::name::Name;\n use stdx::{always, never};"}, {"sha": "f1a649157c354e2be0965b78ceb83d360f2a6f89", "filename": "crates/hir-ty/src/display.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fdisplay.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -7,8 +7,8 @@ use std::fmt::{self, Debug};\n use base_db::CrateId;\n use chalk_ir::{BoundVar, TyKind};\n use hir_def::{\n-    adt::VariantData,\n     body,\n+    data::adt::VariantData,\n     db::DefDatabase,\n     find_path,\n     generics::{TypeOrConstParamData, TypeParamProvenance},"}, {"sha": "25b226bb3b556d1684c4b7b2e7abc6f5f5c1c3ef", "filename": "crates/hir-ty/src/inhabitedness.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Finhabitedness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Finhabitedness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finhabitedness.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -6,8 +6,8 @@ use chalk_ir::{\n     DebruijnIndex,\n };\n use hir_def::{\n-    adt::VariantData, attr::Attrs, visibility::Visibility, AdtId, EnumVariantId, HasModule, Lookup,\n-    ModuleId, VariantId,\n+    attr::Attrs, data::adt::VariantData, visibility::Visibility, AdtId, EnumVariantId, HasModule,\n+    Lookup, ModuleId, VariantId,\n };\n use rustc_hash::FxHashSet;\n "}, {"sha": "adfdb01e72afe3ffcfca0238f4bc705cce486a32", "filename": "crates/hir-ty/src/lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flang_items.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -1,6 +1,6 @@\n //! Functions to detect special lang items\n \n-use hir_def::{adt::StructFlags, lang_item::LangItem, AdtId};\n+use hir_def::{data::adt::StructFlags, lang_item::LangItem, AdtId};\n use hir_expand::name::Name;\n \n use crate::db::HirDatabase;"}, {"sha": "3f3017deee9a34bf89d3c61304fe44dcb6fdc1ac", "filename": "crates/hir-ty/src/layout/adt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Flayout%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Flayout%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flayout%2Fadt.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -3,7 +3,7 @@\n use std::ops::Bound;\n \n use hir_def::{\n-    adt::VariantData,\n+    data::adt::VariantData,\n     layout::{Integer, IntegerExt, Layout, LayoutCalculator, LayoutError, RustcEnumVariantIdx},\n     AdtId, EnumVariantId, HasModule, LocalEnumVariantId, VariantId,\n };"}, {"sha": "c4326f98cd7ac3f02bc806f72a739ade838ca861", "filename": "crates/hir-ty/src/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flower.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -18,9 +18,9 @@ use chalk_ir::{\n \n use either::Either;\n use hir_def::{\n-    adt::StructKind,\n     body::{Expander, LowerCtx},\n     builtin_type::BuiltinType,\n+    data::adt::StructKind,\n     generics::{\n         TypeOrConstParamData, TypeParamProvenance, WherePredicate, WherePredicateTypeTarget,\n     },"}, {"sha": "b04029d54bc9a7c940c07bfd560f56d1fe75fdba", "filename": "crates/hir-ty/src/method_resolution.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -7,9 +7,11 @@ use std::{ops::ControlFlow, sync::Arc};\n use base_db::{CrateId, Edition};\n use chalk_ir::{cast::Cast, Mutability, TyKind, UniverseIndex, WhereClause};\n use hir_def::{\n-    adt::StructFlags, data::ImplData, item_scope::ItemScope, nameres::DefMap, AssocItemId, BlockId,\n-    ConstId, FunctionId, HasModule, ImplId, ItemContainerId, Lookup, ModuleDefId, ModuleId,\n-    TraitId,\n+    data::{adt::StructFlags, ImplData},\n+    item_scope::ItemScope,\n+    nameres::DefMap,\n+    AssocItemId, BlockId, ConstId, FunctionId, HasModule, ImplId, ItemContainerId, Lookup,\n+    ModuleDefId, ModuleId, TraitId,\n };\n use hir_expand::name::Name;\n use rustc_hash::{FxHashMap, FxHashSet};"}, {"sha": "2d54c0ae648ed1db46c03dc9708de29161826ef3", "filename": "crates/hir-ty/src/mir/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Fmir%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir-ty%2Fsrc%2Fmir%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fmir%2Flower.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -4,8 +4,8 @@ use std::{iter, mem, sync::Arc};\n \n use chalk_ir::{BoundVar, ConstData, DebruijnIndex, TyKind};\n use hir_def::{\n-    adt::{StructKind, VariantData},\n     body::Body,\n+    data::adt::{StructKind, VariantData},\n     expr::{\n         Array, BindingAnnotation, BindingId, ExprId, LabelId, Literal, MatchArm, Pat, PatId,\n         RecordFieldPat, RecordLitField,"}, {"sha": "7cb29114d7fb36865ea6a3599684eabad6dea858", "filename": "crates/hir/src/display.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdisplay.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -1,6 +1,6 @@\n //! HirDisplay implementations for various hir types.\n use hir_def::{\n-    adt::VariantData,\n+    data::adt::VariantData,\n     generics::{\n         TypeOrConstParamData, TypeParamProvenance, WherePredicate, WherePredicateTypeTarget,\n     },"}, {"sha": "59626f863a6a9a1bbef3367cd4e94face8c23699", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -39,8 +39,8 @@ use arrayvec::ArrayVec;\n use base_db::{CrateDisplayName, CrateId, CrateOrigin, Edition, FileId, ProcMacroKind};\n use either::Either;\n use hir_def::{\n-    adt::VariantData,\n     body::{BodyDiagnostic, SyntheticSyntax},\n+    data::adt::VariantData,\n     expr::{BindingAnnotation, BindingId, ExprOrPatId, LabelId, Pat},\n     generics::{LifetimeParamData, TypeOrConstParamData, TypeParamProvenance},\n     item_tree::ItemTreeNode,\n@@ -109,9 +109,9 @@ pub use crate::{\n pub use {\n     cfg::{CfgAtom, CfgExpr, CfgOptions},\n     hir_def::{\n-        adt::StructKind,\n         attr::{Attrs, AttrsWithOwner, Documentation},\n         builtin_attr::AttributeTemplate,\n+        data::adt::StructKind,\n         find_path::PrefixKind,\n         import_map,\n         nameres::ModuleSource,"}, {"sha": "63e350e155fc8307392b15048bac6e832366cd1a", "filename": "crates/ide-assists/src/handlers/sort_items.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fsort_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fsort_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fsort_items.rs?ref=8e7c104b3ada66276ff70fb81aa81d4f75d9d2ca", "patch": "@@ -116,9 +116,11 @@ trait AddRewrite {\n         new: Vec<T>,\n         target: TextRange,\n     ) -> Option<()>;\n+    fn yeet() {}\n }\n \n impl AddRewrite for Assists {\n+    fn yeet() {}\n     fn add_rewrite<T: AstNode>(\n         &mut self,\n         label: &str,"}]}