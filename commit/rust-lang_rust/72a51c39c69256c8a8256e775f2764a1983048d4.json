{"sha": "72a51c39c69256c8a8256e775f2764a1983048d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyYTUxYzM5YzY5MjU2YzhhODI1NmU3NzVmMjc2NGExOTgzMDQ4ZDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-04T09:46:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-04T09:46:58Z"}, "message": "Auto merge of #88547 - notriddle:notriddle/is-expr-delims-necessary, r=davidtwco\n\nfix(rustc_lint): better detect when parens are necessary\n\nFixes #88519", "tree": {"sha": "0b8dc69c0f5c53c34c39797bb92d1b3d8fcc4bd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b8dc69c0f5c53c34c39797bb92d1b3d8fcc4bd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72a51c39c69256c8a8256e775f2764a1983048d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72a51c39c69256c8a8256e775f2764a1983048d4", "html_url": "https://github.com/rust-lang/rust/commit/72a51c39c69256c8a8256e775f2764a1983048d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72a51c39c69256c8a8256e775f2764a1983048d4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d295e36c38bcb67783da6e318475cfa61eb1916e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d295e36c38bcb67783da6e318475cfa61eb1916e", "html_url": "https://github.com/rust-lang/rust/commit/d295e36c38bcb67783da6e318475cfa61eb1916e"}, {"sha": "59b245e7545ee0fa2d28d592e444d690bd566df6", "url": "https://api.github.com/repos/rust-lang/rust/commits/59b245e7545ee0fa2d28d592e444d690bd566df6", "html_url": "https://github.com/rust-lang/rust/commit/59b245e7545ee0fa2d28d592e444d690bd566df6"}], "stats": {"total": 111, "additions": 104, "deletions": 7}, "files": [{"sha": "7a42e8c1037ba3dc58105a56a57d9368aa7b2a86", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/72a51c39c69256c8a8256e775f2764a1983048d4/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72a51c39c69256c8a8256e775f2764a1983048d4/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=72a51c39c69256c8a8256e775f2764a1983048d4", "patch": "@@ -461,13 +461,16 @@ trait UnusedDelimLint {\n         let lhs_needs_parens = {\n             let mut innermost = inner;\n             loop {\n-                if let ExprKind::Binary(_, lhs, _rhs) = &innermost.kind {\n-                    innermost = lhs;\n-                    if !classify::expr_requires_semi_to_be_stmt(innermost) {\n-                        break true;\n-                    }\n-                } else {\n-                    break false;\n+                innermost = match &innermost.kind {\n+                    ExprKind::Binary(_, lhs, _rhs) => lhs,\n+                    ExprKind::Call(fn_, _params) => fn_,\n+                    ExprKind::Cast(expr, _ty) => expr,\n+                    ExprKind::Type(expr, _ty) => expr,\n+                    ExprKind::Index(base, _subscript) => base,\n+                    _ => break false,\n+                };\n+                if !classify::expr_requires_semi_to_be_stmt(innermost) {\n+                    break true;\n                 }\n             }\n         };"}, {"sha": "be02fcd3f00c7e5b81eb2835adaa91fe0258a77e", "filename": "src/test/ui/lint/unused/issue-88519-unused-paren.rs", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/72a51c39c69256c8a8256e775f2764a1983048d4/src%2Ftest%2Fui%2Flint%2Funused%2Fissue-88519-unused-paren.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72a51c39c69256c8a8256e775f2764a1983048d4/src%2Ftest%2Fui%2Flint%2Funused%2Fissue-88519-unused-paren.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Fissue-88519-unused-paren.rs?ref=72a51c39c69256c8a8256e775f2764a1983048d4", "patch": "@@ -0,0 +1,94 @@\n+// check-pass\n+// Make sure unused parens lint doesn't emit a false positive.\n+// See https://github.com/rust-lang/rust/issues/88519\n+#![deny(unused_parens)]\n+#![feature(type_ascription)]\n+\n+// binary ops are tested in issue-71290-unused-paren-binop.rs\n+\n+mod call {\n+    fn noop() -> u8 { 0 }\n+    fn outside() -> u8 {\n+        ({ noop })()\n+    }\n+    fn inside() -> u8 {\n+        ({ noop }())\n+    }\n+    fn outside_match() -> u8 {\n+        (match noop { x => x })()\n+    }\n+    fn inside_match() -> u8 {\n+        (match noop { x => x }())\n+    }\n+    fn outside_if() -> u8 {\n+        (if false { noop } else { noop })()\n+    }\n+    fn inside_if() -> u8 {\n+        (if false { noop } else { noop }())\n+    }\n+}\n+\n+mod casts {\n+    fn outside() -> u8 {\n+        ({ 0 }) as u8\n+    }\n+    fn inside() -> u8 {\n+        ({ 0 } as u8)\n+    }\n+    fn outside_match() -> u8 {\n+        (match 0 { x => x }) as u8\n+    }\n+    fn inside_match() -> u8 {\n+        (match 0 { x => x } as u8)\n+    }\n+    fn outside_if() -> u8 {\n+        (if false { 0 } else { 0 }) as u8\n+    }\n+    fn inside_if() -> u8 {\n+        (if false { 0 } else { 0 } as u8)\n+    }\n+}\n+\n+mod typeascription {\n+    fn outside() -> u8 {\n+        ({ 0 }): u8\n+    }\n+    fn inside() -> u8 {\n+        ({ 0 }: u8)\n+    }\n+    fn outside_match() -> u8 {\n+        (match 0 { x => x }): u8\n+    }\n+    fn inside_match() -> u8 {\n+        (match 0 { x => x }: u8)\n+    }\n+    fn outside_if() -> u8 {\n+        (if false { 0 } else { 0 }): u8\n+    }\n+    fn inside_if() -> u8 {\n+        (if false { 0 } else { 0 }: u8)\n+    }\n+}\n+\n+mod index {\n+    fn outside(x: &[u8]) -> u8 {\n+        ({ x })[0]\n+    }\n+    fn inside(x: &[u8]) -> u8 {\n+        ({ x }[0])\n+    }\n+    fn outside_match(x: &[u8]) -> u8 {\n+        (match x { x => x })[0]\n+    }\n+    fn inside_match(x: &[u8]) -> u8 {\n+        (match x { x => x }[0])\n+    }\n+    fn outside_if(x: &[u8]) -> u8 {\n+        (if false { x } else { x })[0]\n+    }\n+    fn inside_if(x: &[u8]) -> u8 {\n+        (if false { x } else { x }[0])\n+    }\n+}\n+\n+fn main() {}"}]}