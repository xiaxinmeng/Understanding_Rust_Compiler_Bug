{"sha": "34edc3f782a7929fb72efc82929bb070ea74e020", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ZWRjM2Y3ODJhNzkyOWZiNzJlZmM4MjkyOWJiMDcwZWE3NGUwMjA=", "commit": {"author": {"name": "Zaki Manian", "email": "zaki@manian.org", "date": "2017-09-02T22:04:52Z"}, "committer": {"name": "Zaki Manian", "email": "zaki@manian.org", "date": "2017-09-02T22:04:52Z"}, "message": "Handle method calls", "tree": {"sha": "c7004b541e854248c7a38540e75ea52be7983942", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7004b541e854248c7a38540e75ea52be7983942"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34edc3f782a7929fb72efc82929bb070ea74e020", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34edc3f782a7929fb72efc82929bb070ea74e020", "html_url": "https://github.com/rust-lang/rust/commit/34edc3f782a7929fb72efc82929bb070ea74e020", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34edc3f782a7929fb72efc82929bb070ea74e020/comments", "author": {"login": "zmanian", "id": 93434, "node_id": "MDQ6VXNlcjkzNDM0", "avatar_url": "https://avatars.githubusercontent.com/u/93434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmanian", "html_url": "https://github.com/zmanian", "followers_url": "https://api.github.com/users/zmanian/followers", "following_url": "https://api.github.com/users/zmanian/following{/other_user}", "gists_url": "https://api.github.com/users/zmanian/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmanian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmanian/subscriptions", "organizations_url": "https://api.github.com/users/zmanian/orgs", "repos_url": "https://api.github.com/users/zmanian/repos", "events_url": "https://api.github.com/users/zmanian/events{/privacy}", "received_events_url": "https://api.github.com/users/zmanian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zmanian", "id": 93434, "node_id": "MDQ6VXNlcjkzNDM0", "avatar_url": "https://avatars.githubusercontent.com/u/93434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmanian", "html_url": "https://github.com/zmanian", "followers_url": "https://api.github.com/users/zmanian/followers", "following_url": "https://api.github.com/users/zmanian/following{/other_user}", "gists_url": "https://api.github.com/users/zmanian/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmanian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmanian/subscriptions", "organizations_url": "https://api.github.com/users/zmanian/orgs", "repos_url": "https://api.github.com/users/zmanian/repos", "events_url": "https://api.github.com/users/zmanian/events{/privacy}", "received_events_url": "https://api.github.com/users/zmanian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7c5825378166a5ceeedd2b5b5168dd3866bb105", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7c5825378166a5ceeedd2b5b5168dd3866bb105", "html_url": "https://github.com/rust-lang/rust/commit/e7c5825378166a5ceeedd2b5b5168dd3866bb105"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "6239fa8507750e15e47e6a83a184ef2b7dc67351", "filename": "clippy_lints/src/is_unit_expr.rs", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/34edc3f782a7929fb72efc82929bb070ea74e020/clippy_lints%2Fsrc%2Fis_unit_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34edc3f782a7929fb72efc82929bb070ea74e020/clippy_lints%2Fsrc%2Fis_unit_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fis_unit_expr.rs?ref=34edc3f782a7929fb72efc82929bb070ea74e020", "patch": "@@ -2,7 +2,7 @@ use rustc::lint::*;\n use syntax::ast::*;\n use syntax::codemap::Spanned;\n use utils::{span_lint_and_sugg, snippet};\n-\n+use std::ops::Deref;\n \n /// **What it does:** Checks for \n ///  - () being assigned to a variable\n@@ -34,7 +34,7 @@ impl LintPass for UnitExpr {\n \n impl EarlyLintPass for UnitExpr {\n     fn check_expr(&mut self, cx: &EarlyContext, expr: &Expr) {\n-        if let ExprKind::Assign(ref left, ref right) = expr.node {\n+        if let ExprKind::Assign(ref _left, ref right) = expr.node {\n             if is_unit_expr(right){\n                 span_lint_and_sugg(\n                     cx,\n@@ -46,7 +46,7 @@ impl EarlyLintPass for UnitExpr {\n                 )\n             }\n         }\n-        if let ExprKind::MethodCall(_, ref args) = expr.node {\n+        if let ExprKind::MethodCall(ref _left, ref args) = expr.node {\n             for ref arg in args{\n                 if is_unit_expr(arg){\n                     span_lint_and_sugg(\n@@ -97,15 +97,26 @@ impl EarlyLintPass for UnitExpr {\n \n fn is_unit_expr(expr: &Expr)->bool{\n     match expr.node{\n-         ExprKind::Block(ref next) => {\n-            let ref final_stmt = &next.stmts[next.stmts.len()-1];\n-            if let StmtKind::Expr(_) = final_stmt.node{\n+         ExprKind::Block(ref block) => {\n+             return check_last_stmt_in_block(block);\n+        },\n+        ExprKind::If(_, ref then, ref else_)=>{\n+            let check_then = check_last_stmt_in_block(then);\n+            if let Some(ref else_) = *else_{\n+                return check_then && is_unit_expr(else_.deref());\n+            } \n+            return check_then;\n+        }\n+        _ => return false,\n+    }\n+}\n+\n+fn check_last_stmt_in_block(block: &Block)->bool{\n+    let ref final_stmt = &block.stmts[block.stmts.len()-1];\n+        if let StmtKind::Expr(_) = final_stmt.node{\n                 return false;\n             }\n             else{\n                 return true;\n             }\n-        },\n-        _ => return false,\n-    }\n }\n\\ No newline at end of file"}]}