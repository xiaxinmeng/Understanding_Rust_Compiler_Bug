{"sha": "1b120216de987f2e7700b7707ef6b5d5b5545d94", "node_id": "C_kwDOAAsO6NoAKDFiMTIwMjE2ZGU5ODdmMmU3NzAwYjc3MDdlZjZiNWQ1YjU1NDVkOTQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-25T17:01:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-25T17:01:44Z"}, "message": "Auto merge of #12078 - Veykril:neither, r=Veykril\n\nminor: Re-export `FxHashMap` and `FxHashSet` from `ide_db`", "tree": {"sha": "1bc84f9bbf66fec0ea30c6fe36ea531baba37589", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bc84f9bbf66fec0ea30c6fe36ea531baba37589"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b120216de987f2e7700b7707ef6b5d5b5545d94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b120216de987f2e7700b7707ef6b5d5b5545d94", "html_url": "https://github.com/rust-lang/rust/commit/1b120216de987f2e7700b7707ef6b5d5b5545d94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b120216de987f2e7700b7707ef6b5d5b5545d94/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04000c34d9772ee80f7a381ff225e202e4141d92", "url": "https://api.github.com/repos/rust-lang/rust/commits/04000c34d9772ee80f7a381ff225e202e4141d92", "html_url": "https://github.com/rust-lang/rust/commit/04000c34d9772ee80f7a381ff225e202e4141d92"}, {"sha": "4255996965171bb8f25fadc605aa7cdb0677e666", "url": "https://api.github.com/repos/rust-lang/rust/commits/4255996965171bb8f25fadc605aa7cdb0677e666", "html_url": "https://github.com/rust-lang/rust/commit/4255996965171bb8f25fadc605aa7cdb0677e666"}], "stats": {"total": 164, "additions": 70, "deletions": 94}, "files": [{"sha": "cb57a82216dbff9964417a849708b033edab1145", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -606,7 +606,6 @@ dependencies = [\n  \"profile\",\n  \"pulldown-cmark\",\n  \"pulldown-cmark-to-cmark\",\n- \"rustc-hash\",\n  \"stdx\",\n  \"syntax\",\n  \"test_utils\",\n@@ -627,7 +626,6 @@ dependencies = [\n  \"ide_db\",\n  \"itertools\",\n  \"profile\",\n- \"rustc-hash\",\n  \"sourcegen\",\n  \"stdx\",\n  \"syntax\",\n@@ -647,7 +645,6 @@ dependencies = [\n  \"itertools\",\n  \"once_cell\",\n  \"profile\",\n- \"rustc-hash\",\n  \"smallvec\",\n  \"stdx\",\n  \"syntax\",\n@@ -695,7 +692,6 @@ dependencies = [\n  \"ide_db\",\n  \"itertools\",\n  \"profile\",\n- \"rustc-hash\",\n  \"sourcegen\",\n  \"stdx\",\n  \"syntax\",\n@@ -713,7 +709,6 @@ dependencies = [\n  \"ide_db\",\n  \"itertools\",\n  \"parser\",\n- \"rustc-hash\",\n  \"syntax\",\n  \"test_utils\",\n  \"text_edit\","}, {"sha": "f8bb1e4c0155d3752bd95252896a8bbff2021a38", "filename": "crates/ide/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2FCargo.toml?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -15,7 +15,6 @@ crossbeam-channel = \"0.5.4\"\n either = \"1.6.1\"\n itertools = \"0.10.3\"\n tracing = \"0.1.32\"\n-rustc-hash = \"1.1.0\"\n oorandom = \"11.1.3\"\n pulldown-cmark-to-cmark = \"10.0.1\"\n pulldown-cmark = { version = \"0.9.1\", default-features = false }"}, {"sha": "e69e959d320a3eb1809027d1981f422608834fcb", "filename": "crates/ide/src/folding_ranges.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Ffolding_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Ffolding_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ffolding_ranges.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,6 +1,4 @@\n-use ide_db::syntax_helpers::node_ext::vis_eq;\n-use rustc_hash::FxHashSet;\n-\n+use ide_db::{syntax_helpers::node_ext::vis_eq, FxHashSet};\n use syntax::{\n     ast::{self, AstNode, AstToken},\n     match_ast, Direction, NodeOrToken, SourceFile,"}, {"sha": "2aa4fbf55ea97cb749cc9948cda3ee6b8fcab612", "filename": "crates/ide/src/highlight_related.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhighlight_related.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -5,9 +5,8 @@ use ide_db::{\n     helpers::pick_best_token,\n     search::{FileReference, ReferenceCategory, SearchScope},\n     syntax_helpers::node_ext::{for_each_break_and_continue_expr, for_each_tail_expr, walk_expr},\n-    RootDatabase,\n+    FxHashSet, RootDatabase,\n };\n-use rustc_hash::FxHashSet;\n use syntax::{\n     ast::{self, HasLoopBody},\n     match_ast, AstNode,"}, {"sha": "f78e70f7a3936d1c39f82690171781fcc84f81cb", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,10 +1,10 @@\n use either::Either;\n use hir::{known, Callable, HasVisibility, HirDisplay, Semantics, TypeInfo};\n use ide_db::{\n-    base_db::FileRange, famous_defs::FamousDefs, syntax_helpers::node_ext::walk_ty, RootDatabase,\n+    base_db::FileRange, famous_defs::FamousDefs, syntax_helpers::node_ext::walk_ty, FxHashMap,\n+    RootDatabase,\n };\n use itertools::Itertools;\n-use rustc_hash::FxHashMap;\n use stdx::to_lower_snake_case;\n use syntax::{\n     ast::{self, AstNode, HasArgList, HasGenericParams, HasName, UnaryOp},"}, {"sha": "296270036002b906a8ec950621291a11bdca9486", "filename": "crates/ide/src/prime_caches.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fprime_caches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fprime_caches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fprime_caches.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -12,9 +12,8 @@ use ide_db::{\n         salsa::{Database, ParallelDatabase, Snapshot},\n         Cancelled, CrateGraph, CrateId, SourceDatabase, SourceDatabaseExt,\n     },\n-    FxIndexMap,\n+    FxHashSet, FxIndexMap,\n };\n-use rustc_hash::FxHashSet;\n \n use crate::RootDatabase;\n "}, {"sha": "9c3ceedbb691dfce7ad4dce79da4f8be02890267", "filename": "crates/ide/src/prime_caches/topologic_sort.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fprime_caches%2Ftopologic_sort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fprime_caches%2Ftopologic_sort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fprime_caches%2Ftopologic_sort.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,7 +1,7 @@\n //! helper data structure to schedule work for parallel prime caches.\n use std::{collections::VecDeque, hash::Hash};\n \n-use rustc_hash::FxHashMap;\n+use ide_db::FxHashMap;\n \n pub(crate) struct TopologicSortIterBuilder<T> {\n     nodes: FxHashMap<T, Entry<T>>,"}, {"sha": "0cd29c8432dd98c1ef324859b84df5dc3f9721d6", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -14,9 +14,8 @@ use ide_db::{\n     base_db::FileId,\n     defs::{Definition, NameClass, NameRefClass},\n     search::{ReferenceCategory, SearchScope, UsageSearchResult},\n-    RootDatabase,\n+    FxHashMap, RootDatabase,\n };\n-use rustc_hash::FxHashMap;\n use syntax::{\n     algo::find_node_at_offset,\n     ast::{self, HasName},"}, {"sha": "2c21bbc1652f74ceb52aa2d516427929ef6aa29b", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -9,10 +9,9 @@ use ide_db::{\n     defs::Definition,\n     helpers::visit_file_defs,\n     search::SearchScope,\n-    RootDatabase, SymbolKind,\n+    FxHashMap, FxHashSet, RootDatabase, SymbolKind,\n };\n use itertools::Itertools;\n-use rustc_hash::{FxHashMap, FxHashSet};\n use stdx::{always, format_to};\n use syntax::{\n     ast::{self, AstNode, HasAttrs as _},"}, {"sha": "15cb89dcce95f11b42882b07c37b5b4c68259830", "filename": "crates/ide/src/shuffle_crate_graph.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fshuffle_crate_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fshuffle_crate_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fshuffle_crate_graph.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,9 +1,9 @@\n use std::sync::Arc;\n \n-use ide_db::base_db::salsa::Durability;\n-use ide_db::base_db::{CrateGraph, SourceDatabase};\n-use ide_db::RootDatabase;\n-use rustc_hash::FxHashMap;\n+use ide_db::{\n+    base_db::{salsa::Durability, CrateGraph, SourceDatabase},\n+    FxHashMap, RootDatabase,\n+};\n \n // Feature: Shuffle Crate Graph\n //"}, {"sha": "497eb1cc130d5ed88271876d0d0c8917ce107b28", "filename": "crates/ide/src/ssr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fssr.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -63,9 +63,8 @@ mod tests {\n     use ide_db::{\n         base_db::{fixture::WithFixture, salsa::Durability, FileRange},\n         symbol_index::SymbolsDatabase,\n-        RootDatabase,\n+        FxHashSet, RootDatabase,\n     };\n-    use rustc_hash::FxHashSet;\n \n     use super::ssr_assists;\n "}, {"sha": "7bc39c8d1cecf71fc06d108eb6a4749dacc1250a", "filename": "crates/ide/src/static_index.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fstatic_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fstatic_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fstatic_index.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -7,9 +7,8 @@ use hir::{db::HirDatabase, Crate, Module, Semantics};\n use ide_db::{\n     base_db::{FileId, FileRange, SourceDatabaseExt},\n     defs::{Definition, IdentClass},\n-    RootDatabase,\n+    FxHashSet, RootDatabase,\n };\n-use rustc_hash::FxHashSet;\n use syntax::{AstNode, SyntaxKind::*, SyntaxToken, TextRange, T};\n \n use crate::{"}, {"sha": "f6754e44f38c80d9ca2efced04eae91c0c7e43f1", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -14,8 +14,7 @@ mod html;\n mod tests;\n \n use hir::{InFile, Name, Semantics};\n-use ide_db::RootDatabase;\n-use rustc_hash::FxHashMap;\n+use ide_db::{FxHashMap, RootDatabase};\n use syntax::{\n     ast, AstNode, AstToken, NodeOrToken, SyntaxKind::*, SyntaxNode, TextRange, WalkEvent, T,\n };"}, {"sha": "e04fd5a7c7f26ae377ce87dbd97772f0ffe13013", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -3,9 +3,8 @@\n use hir::{AsAssocItem, HasVisibility, Semantics};\n use ide_db::{\n     defs::{Definition, IdentClass, NameClass, NameRefClass},\n-    RootDatabase, SymbolKind,\n+    FxHashMap, RootDatabase, SymbolKind,\n };\n-use rustc_hash::FxHashMap;\n use syntax::{\n     ast, match_ast, AstNode, AstToken, NodeOrToken,\n     SyntaxKind::{self, *},"}, {"sha": "51291a64532fee5791fb0d56d550ad0a78c9299c", "filename": "crates/ide/src/view_crate_graph.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fview_crate_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide%2Fsrc%2Fview_crate_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fview_crate_graph.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -3,9 +3,8 @@ use std::sync::Arc;\n use dot::{Id, LabelText};\n use ide_db::{\n     base_db::{CrateGraph, CrateId, Dependency, SourceDatabase, SourceDatabaseExt},\n-    RootDatabase,\n+    FxHashSet, RootDatabase,\n };\n-use rustc_hash::FxHashSet;\n \n // Feature: View Crate Graph\n //"}, {"sha": "edd0d262909f9158fd811b1d6a69627793d546d3", "filename": "crates/ide_assists/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2FCargo.toml?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -11,7 +11,7 @@ doctest = false\n \n [dependencies]\n cov-mark = \"2.0.0-pre.1\"\n-rustc-hash = \"1.1.0\"\n+\n itertools = \"0.10.3\"\n either = \"1.6.1\"\n "}, {"sha": "ebfd65ae79501cf7e5006fb0f3ed74c02b0cf6e6", "filename": "crates/ide_assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -7,10 +7,9 @@ use ide_db::{\n     helpers::mod_path_to_ast,\n     imports::insert_use::{insert_use, ImportScope, InsertUseConfig},\n     search::FileReference,\n-    RootDatabase,\n+    FxHashSet, RootDatabase,\n };\n use itertools::{Itertools, Position};\n-use rustc_hash::FxHashSet;\n use syntax::{\n     ast::{\n         self, edit::IndentLevel, edit_in_place::Indent, make, AstNode, HasAttrs, HasGenericParams,"}, {"sha": "24cef5630f10c2aa7cf0c9c055379bc89f51c40c", "filename": "crates/ide_assists/src/handlers/generate_function.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,11 +1,9 @@\n-use rustc_hash::{FxHashMap, FxHashSet};\n-\n use hir::{HasSource, HirDisplay, Module, Semantics, TypeInfo};\n use ide_db::{\n     base_db::FileId,\n     defs::{Definition, NameRefClass},\n     famous_defs::FamousDefs,\n-    RootDatabase, SnippetCap,\n+    FxHashMap, FxHashSet, RootDatabase, SnippetCap,\n };\n use stdx::to_lower_snake_case;\n use syntax::{"}, {"sha": "fa7635d12323f80c65eba16e8c1564d4670e4296", "filename": "crates/ide_assists/src/handlers/introduce_named_lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,4 +1,4 @@\n-use rustc_hash::FxHashSet;\n+use ide_db::FxHashSet;\n use syntax::{\n     ast::{self, edit_in_place::GenericParamsOwnerEdit, make, HasGenericParams},\n     ted::{self, Position},"}, {"sha": "35c4cb6d64109f07ae76f4771615fb3905b9847d", "filename": "crates/ide_assists/src/handlers/reorder_fields.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freorder_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freorder_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freorder_fields.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,7 +1,6 @@\n use either::Either;\n+use ide_db::FxHashMap;\n use itertools::Itertools;\n-use rustc_hash::FxHashMap;\n-\n use syntax::{ast, ted, AstNode};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};"}, {"sha": "c0991c6080dea04c7ffc3ed84b8258a176de4933", "filename": "crates/ide_assists/src/handlers/reorder_impl.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freorder_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freorder_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freorder_impl.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,8 +1,6 @@\n-use itertools::Itertools;\n-use rustc_hash::FxHashMap;\n-\n use hir::{PathResolution, Semantics};\n-use ide_db::RootDatabase;\n+use ide_db::{FxHashMap, RootDatabase};\n+use itertools::Itertools;\n use syntax::{\n     ast::{self, HasName},\n     ted, AstNode,"}, {"sha": "a82223ca90032b2bd8875c1da2678f81bed8523a", "filename": "crates/ide_completion/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2FCargo.toml?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -12,7 +12,7 @@ doctest = false\n [dependencies]\n cov-mark = \"2.0.0-pre.1\"\n itertools = \"0.10.3\"\n-rustc-hash = \"1.1.0\"\n+\n once_cell = \"1.10.0\"\n smallvec = \"1.8.0\"\n "}, {"sha": "09ba672a14d3bf60536e6653fadb8fe378e6ecbc", "filename": "crates/ide_completion/src/completions/attribute.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -7,11 +7,10 @@ use ide_db::{\n         Lint, CLIPPY_LINTS, CLIPPY_LINT_GROUPS, DEFAULT_LINTS, FEATURES, RUSTDOC_LINTS,\n     },\n     syntax_helpers::node_ext::parse_tt_as_comma_sep_paths,\n-    SymbolKind,\n+    FxHashMap, SymbolKind,\n };\n use itertools::Itertools;\n use once_cell::sync::Lazy;\n-use rustc_hash::FxHashMap;\n use syntax::{\n     ast::{self, AttrKind},\n     AstNode, SyntaxKind, T,"}, {"sha": "f9df33d88b093afbe9aae79262c0fb03d184dc2f", "filename": "crates/ide_completion/src/completions/dot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,6 +1,6 @@\n //! Completes references after dot (fields and method calls).\n \n-use rustc_hash::FxHashSet;\n+use ide_db::FxHashSet;\n \n use crate::{context::CompletionContext, patterns::ImmediateLocation, Completions};\n "}, {"sha": "c010c49489803e2cf386f7d5b7d5a5723d5d9b5a", "filename": "crates/ide_completion/src/completions/fn_param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,7 +1,7 @@\n //! See [`complete_fn_param`].\n \n use hir::HirDisplay;\n-use rustc_hash::FxHashMap;\n+use ide_db::FxHashMap;\n use syntax::{\n     algo,\n     ast::{self, HasModuleItem},"}, {"sha": "5551934da93e345a9a37bc51c11b95fc4aaba67d", "filename": "crates/ide_completion/src/completions/mod_.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fmod_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fmod_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fmod_.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -3,11 +3,11 @@\n use std::iter;\n \n use hir::{Module, ModuleSource};\n+use ide_db::FxHashSet;\n use ide_db::{\n     base_db::{SourceDatabaseExt, VfsPath},\n     RootDatabase, SymbolKind,\n };\n-use rustc_hash::FxHashSet;\n \n use crate::{context::NameContext, CompletionItem};\n "}, {"sha": "16666eba458d8a0d83c7a94cb22a2a0c387e0b9e", "filename": "crates/ide_completion/src/completions/pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpattern.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,7 +1,7 @@\n //! Completes constants and paths in unqualified patterns.\n \n use hir::{db::DefDatabase, AssocItem, ScopeDef};\n-use rustc_hash::FxHashSet;\n+use ide_db::FxHashSet;\n use syntax::ast::Pat;\n \n use crate::{"}, {"sha": "2c2fe524ef9d92d8937862ebc74bd7820d8c0a45", "filename": "crates/ide_completion/src/completions/qualified_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,7 +1,7 @@\n //! Completion of paths, i.e. `some::prefix::$0`.\n \n use hir::{ScopeDef, Trait};\n-use rustc_hash::FxHashSet;\n+use ide_db::FxHashSet;\n use syntax::ast;\n \n use crate::{"}, {"sha": "25eb3fb908ca26d12b73756f1ae945a643726d8f", "filename": "crates/ide_completion/src/completions/use_.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fuse_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fuse_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fuse_.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,7 +1,7 @@\n //! Completion for use trees\n \n use hir::ScopeDef;\n-use rustc_hash::FxHashSet;\n+use ide_db::FxHashSet;\n use syntax::{ast, AstNode};\n \n use crate::{"}, {"sha": "f75aa8f9ff89f7ff12670b8028e5946b97d45c77", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -10,9 +10,8 @@ use ide_db::{\n     active_parameter::ActiveParameter,\n     base_db::{FilePosition, SourceDatabase},\n     famous_defs::FamousDefs,\n-    RootDatabase,\n+    FxHashMap, FxHashSet, RootDatabase,\n };\n-use rustc_hash::{FxHashMap, FxHashSet};\n use syntax::{\n     algo::{find_node_at_offset, non_trivia_sibling},\n     ast::{self, AttrKind, HasName, NameOrNameRef},"}, {"sha": "8fad4ac0f3ce1821326f8f614028f9c92aa37bc6", "filename": "crates/ide_db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Flib.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -49,9 +49,9 @@ use hir::{\n     db::{AstDatabase, DefDatabase, HirDatabase},\n     symbols::FileSymbolKind,\n };\n-use rustc_hash::FxHashSet;\n \n use crate::{line_index::LineIndex, symbol_index::SymbolsDatabase};\n+pub use rustc_hash::{FxHashMap, FxHashSet, FxHasher};\n \n /// `base_db` is normally also needed in places where `ide_db` is used, so this re-export is for convenience.\n pub use base_db;"}, {"sha": "20bd4a2ed2434ce86395984fb538715c2bd4914a", "filename": "crates/ide_diagnostics/Cargo.toml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_diagnostics%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_diagnostics%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2FCargo.toml?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -12,7 +12,8 @@ doctest = false\n [dependencies]\n cov-mark = \"2.0.0-pre.1\"\n itertools = \"0.10.3\"\n-rustc-hash = \"1.1.0\"\n+\n+\n either = \"1.6.1\"\n \n profile = { path = \"../profile\", version = \"0.0.0\" }"}, {"sha": "3160004380ff01cc6f0a9f741eac7cb8ad300897", "filename": "crates/ide_diagnostics/src/handlers/missing_fields.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -3,8 +3,7 @@ use hir::{\n     db::{AstDatabase, HirDatabase},\n     known, AssocItem, HirDisplay, InFile, Type,\n };\n-use ide_db::{assists::Assist, famous_defs::FamousDefs, source_change::SourceChange};\n-use rustc_hash::FxHashMap;\n+use ide_db::{assists::Assist, famous_defs::FamousDefs, source_change::SourceChange, FxHashMap};\n use stdx::format_to;\n use syntax::{\n     algo,"}, {"sha": "1d4ea461d0845235c8230c6968144e475850e032", "filename": "crates/ide_diagnostics/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_diagnostics%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_diagnostics%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Flib.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -59,9 +59,8 @@ use ide_db::{\n     base_db::{FileId, SourceDatabase},\n     label::Label,\n     source_change::SourceChange,\n-    RootDatabase,\n+    FxHashSet, RootDatabase,\n };\n-use rustc_hash::FxHashSet;\n use syntax::{ast::AstNode, TextRange};\n \n #[derive(Copy, Clone, Debug, PartialEq)]"}, {"sha": "a736b900ecb8468f4ff47c5147c8b6f2c08cc68c", "filename": "crates/ide_ssr/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2FCargo.toml?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -12,7 +12,7 @@ doctest = false\n \n [dependencies]\n cov-mark = \"2.0.0-pre.1\"\n-rustc-hash = \"1.1.0\"\n+\n itertools = \"0.10.3\"\n \n text_edit = { path = \"../text_edit\", version = \"0.0.0\" }"}, {"sha": "7b4e53ed24a67e103022828e343f36d4ec617c00", "filename": "crates/ide_ssr/src/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2Fsrc%2Flib.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -80,15 +80,15 @@ mod errors;\n #[cfg(test)]\n mod tests;\n \n-use crate::errors::bail;\n-pub use crate::errors::SsrError;\n-pub use crate::from_comment::ssr_from_comment;\n-pub use crate::matching::Match;\n-use crate::matching::MatchFailureReason;\n+pub use crate::{errors::SsrError, from_comment::ssr_from_comment, matching::Match};\n+\n+use crate::{errors::bail, matching::MatchFailureReason};\n use hir::Semantics;\n-use ide_db::base_db::{FileId, FilePosition, FileRange};\n+use ide_db::{\n+    base_db::{FileId, FilePosition, FileRange},\n+    FxHashMap,\n+};\n use resolving::ResolvedRule;\n-use rustc_hash::FxHashMap;\n use syntax::{ast, AstNode, SyntaxNode, TextRange};\n use text_edit::TextEdit;\n "}, {"sha": "ba2a99c5d41db320390837ad00693884e72871ab", "filename": "crates/ide_ssr/src/matching.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Fmatching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Fmatching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2Fsrc%2Fmatching.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -7,13 +7,11 @@ use crate::{\n     SsrMatches,\n };\n use hir::Semantics;\n-use ide_db::base_db::FileRange;\n-use rustc_hash::FxHashMap;\n+use ide_db::{base_db::FileRange, FxHashMap};\n use std::{cell::Cell, iter::Peekable};\n-use syntax::{ast, SyntaxElement, SyntaxElementChildren, SyntaxKind, SyntaxNode, SyntaxToken};\n use syntax::{\n-    ast::{AstNode, AstToken},\n-    SmolStr,\n+    ast::{self, AstNode, AstToken},\n+    SmolStr, SyntaxElement, SyntaxElementChildren, SyntaxKind, SyntaxNode, SyntaxToken,\n };\n \n // Creates a match error. If we're currently attempting to match some code that we thought we were"}, {"sha": "0c1b2685b204f090a4297af984a4c5c02b864513", "filename": "crates/ide_ssr/src/nester.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Fnester.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Fnester.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2Fsrc%2Fnester.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -7,10 +7,11 @@\n //! then we'll get 3 matches, however only the outermost and innermost matches can be accepted. The\n //! middle match would take the second `foo` from the outer match.\n \n-use crate::{Match, SsrMatches};\n-use rustc_hash::FxHashMap;\n+use ide_db::FxHashMap;\n use syntax::SyntaxNode;\n \n+use crate::{Match, SsrMatches};\n+\n pub(crate) fn nest_and_remove_collisions(\n     mut matches: Vec<Match>,\n     sema: &hir::Semantics<ide_db::RootDatabase>,"}, {"sha": "f6220b928a4c6d4413159c1de6c769787929495f", "filename": "crates/ide_ssr/src/parsing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Fparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Fparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2Fsrc%2Fparsing.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -4,7 +4,7 @@\n //! placeholders, which start with `$`. For replacement templates, this is the final form. For\n //! search patterns, we go further and parse the pattern as each kind of thing that we can match.\n //! e.g. expressions, type references etc.\n-use rustc_hash::{FxHashMap, FxHashSet};\n+use ide_db::{FxHashMap, FxHashSet};\n use std::{fmt::Display, str::FromStr};\n use syntax::{SmolStr, SyntaxKind, SyntaxNode, T};\n "}, {"sha": "1726d5701a4c621e78ade4e09c1bc12ff6be02d6", "filename": "crates/ide_ssr/src/replacing.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Freplacing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Freplacing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2Fsrc%2Freplacing.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,14 +1,15 @@\n //! Code for applying replacement templates for matches that have previously been found.\n \n-use crate::fragments;\n-use crate::{resolving::ResolvedRule, Match, SsrMatches};\n+use ide_db::{FxHashMap, FxHashSet};\n use itertools::Itertools;\n-use rustc_hash::{FxHashMap, FxHashSet};\n-use syntax::ast::{self, AstNode, AstToken};\n-use syntax::{SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, TextSize};\n-\n+use syntax::{\n+    ast::{self, AstNode, AstToken},\n+    SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, TextSize,\n+};\n use text_edit::TextEdit;\n \n+use crate::{fragments, resolving::ResolvedRule, Match, SsrMatches};\n+\n /// Returns a text edit that will replace each match in `matches` with its corresponding replacement\n /// template. Placeholders in the template will have been substituted with whatever they matched to\n /// in the original code."}, {"sha": "d46ca05e5584faef0b5a67e2e166ef1461e2a035", "filename": "crates/ide_ssr/src/resolving.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Fresolving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Fresolving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2Fsrc%2Fresolving.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,13 +1,12 @@\n //! This module is responsible for resolving paths within rules.\n \n-use crate::errors::error;\n-use crate::{parsing, SsrError};\n use hir::AsAssocItem;\n-use ide_db::base_db::FilePosition;\n+use ide_db::{base_db::FilePosition, FxHashMap};\n use parsing::Placeholder;\n-use rustc_hash::FxHashMap;\n use syntax::{ast, SmolStr, SyntaxKind, SyntaxNode, SyntaxToken};\n \n+use crate::{errors::error, parsing, SsrError};\n+\n pub(crate) struct ResolutionScope<'db> {\n     scope: hir::SemanticsScope<'db>,\n     node: SyntaxNode,"}, {"sha": "0a85569b60080dfa41d1ddfd164b73db26f2ea01", "filename": "crates/ide_ssr/src/search.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2Fsrc%2Fsearch.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -9,8 +9,8 @@ use ide_db::{\n     base_db::{FileId, FileRange},\n     defs::Definition,\n     search::{SearchScope, UsageSearchResult},\n+    FxHashSet,\n };\n-use rustc_hash::FxHashSet;\n use syntax::{ast, AstNode, SyntaxKind, SyntaxNode};\n \n /// A cache for the results of find_usages. This is for when we have multiple patterns that have the"}, {"sha": "e86190564cf44588a96b54576fb7160bfe5375e4", "filename": "crates/ide_ssr/src/tests.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b120216de987f2e7700b7707ef6b5d5b5545d94/crates%2Fide_ssr%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_ssr%2Fsrc%2Ftests.rs?ref=1b120216de987f2e7700b7707ef6b5d5b5545d94", "patch": "@@ -1,10 +1,13 @@\n-use crate::{MatchFinder, SsrRule};\n use expect_test::{expect, Expect};\n-use ide_db::base_db::{salsa::Durability, FileId, FilePosition, FileRange, SourceDatabaseExt};\n-use rustc_hash::FxHashSet;\n+use ide_db::{\n+    base_db::{salsa::Durability, FileId, FilePosition, FileRange, SourceDatabaseExt},\n+    FxHashSet,\n+};\n use std::sync::Arc;\n use test_utils::RangeOrOffset;\n \n+use crate::{MatchFinder, SsrRule};\n+\n fn parse_error_text(query: &str) -> String {\n     format!(\"{}\", query.parse::<SsrRule>().unwrap_err())\n }"}]}