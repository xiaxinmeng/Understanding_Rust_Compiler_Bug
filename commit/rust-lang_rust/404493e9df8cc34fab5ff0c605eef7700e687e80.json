{"sha": "404493e9df8cc34fab5ff0c605eef7700e687e80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNDQ5M2U5ZGY4Y2MzNGZhYjVmZjBjNjA1ZWVmNzcwMGU2ODdlODA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-22T16:00:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-22T16:00:17Z"}, "message": "Merge #2359\n\n2359: Remove TraitData from API r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "d7ebbde67a4253cf4e827c3f4d2e8323a26ad547", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7ebbde67a4253cf4e827c3f4d2e8323a26ad547"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/404493e9df8cc34fab5ff0c605eef7700e687e80", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd2AYRCRBK7hj4Ov3rIwAAdHIIADFdm31EFz1TNjJ7sDHTRZPO\neWTa0Hs3XjFNg0ra0ki7cMw5BvHhLT2DEOBLZRMCoV2fcR6d/f8WMflvdZpebNKD\n/uxCUiDeb8M5luNAAO3P4WYs9ivOu2oYYhk60Ys8pZFaq4I/Tx4/l2R18jB/I2ki\nTYzIG4bUwyxDHRXxCvWeXY18aoF8Qk5Bx4cLc8aRa7AAHcqdqkEyljYYuRIJGOx4\n61YldqebZhWPTsJu1oxtBej5DkjjDP+iXHLfwUvxbr+f7QGqpvVYraHu3cHLix/x\n9veaCKTon7lTmv/yziC0kH0NrXkqmGR6wofghR1bzQzf49KNomUPpLTXnC1hwcQ=\n=O8/i\n-----END PGP SIGNATURE-----\n", "payload": "tree d7ebbde67a4253cf4e827c3f4d2e8323a26ad547\nparent 6d42db2e51e223c9be7b6ea234521ca6f93ee95a\nparent 7469d2b8631594a5ed41082f375bd4cb20538efa\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1574438417 +0000\ncommitter GitHub <noreply@github.com> 1574438417 +0000\n\nMerge #2359\n\n2359: Remove TraitData from API r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/404493e9df8cc34fab5ff0c605eef7700e687e80", "html_url": "https://github.com/rust-lang/rust/commit/404493e9df8cc34fab5ff0c605eef7700e687e80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/404493e9df8cc34fab5ff0c605eef7700e687e80/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d42db2e51e223c9be7b6ea234521ca6f93ee95a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d42db2e51e223c9be7b6ea234521ca6f93ee95a", "html_url": "https://github.com/rust-lang/rust/commit/6d42db2e51e223c9be7b6ea234521ca6f93ee95a"}, {"sha": "7469d2b8631594a5ed41082f375bd4cb20538efa", "url": "https://api.github.com/repos/rust-lang/rust/commits/7469d2b8631594a5ed41082f375bd4cb20538efa", "html_url": "https://github.com/rust-lang/rust/commit/7469d2b8631594a5ed41082f375bd4cb20538efa"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "9f8c6c4a52b3b468c828ef2cca13eff6e4f973b0", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/404493e9df8cc34fab5ff0c605eef7700e687e80/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/404493e9df8cc34fab5ff0c605eef7700e687e80/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=404493e9df8cc34fab5ff0c605eef7700e687e80", "patch": "@@ -10,7 +10,6 @@ use hir_def::{\n     adt::VariantData,\n     body::scope::ExprScopes,\n     builtin_type::BuiltinType,\n-    data::TraitData,\n     nameres::per_ns::PerNs,\n     resolver::{HasResolver, TypeNs},\n     type_ref::TypeRef,\n@@ -707,11 +706,11 @@ impl Trait {\n     }\n \n     pub fn name(self, db: &impl DefDatabase) -> Option<Name> {\n-        self.trait_data(db).name.clone()\n+        db.trait_data(self.id).name.clone()\n     }\n \n     pub fn items(self, db: &impl DefDatabase) -> Vec<AssocItem> {\n-        self.trait_data(db).items.iter().map(|it| (*it).into()).collect()\n+        db.trait_data(self.id).items.iter().map(|it| (*it).into()).collect()\n     }\n \n     fn direct_super_traits(self, db: &impl HirDatabase) -> Vec<Trait> {\n@@ -757,7 +756,7 @@ impl Trait {\n     }\n \n     pub fn associated_type_by_name(self, db: &impl DefDatabase, name: &Name) -> Option<TypeAlias> {\n-        let trait_data = self.trait_data(db);\n+        let trait_data = db.trait_data(self.id);\n         let res =\n             trait_data.associated_types().map(TypeAlias::from).find(|t| &t.name(db) == name)?;\n         Some(res)\n@@ -771,16 +770,12 @@ impl Trait {\n         self.all_super_traits(db).into_iter().find_map(|t| t.associated_type_by_name(db, name))\n     }\n \n-    pub(crate) fn trait_data(self, db: &impl DefDatabase) -> Arc<TraitData> {\n-        db.trait_data(self.id)\n-    }\n-\n     pub fn trait_ref(self, db: &impl HirDatabase) -> TraitRef {\n         TraitRef::for_trait(db, self)\n     }\n \n     pub fn is_auto(self, db: &impl DefDatabase) -> bool {\n-        self.trait_data(db).auto\n+        db.trait_data(self.id).auto\n     }\n }\n "}, {"sha": "f61c27218c3a53a7a260319f970175748dc8543d", "filename": "crates/ra_hir/src/ty/method_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/404493e9df8cc34fab5ff0c605eef7700e687e80/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/404493e9df8cc34fab5ff0c605eef7700e687e80/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs?ref=404493e9df8cc34fab5ff0c605eef7700e687e80", "patch": "@@ -233,7 +233,7 @@ fn iterate_trait_method_candidates<T>(\n         .chain(traits_from_env)\n         .chain(resolver.traits_in_scope(db).into_iter().map(Trait::from));\n     'traits: for t in traits {\n-        let data = t.trait_data(db);\n+        let data = db.trait_data(t.id);\n \n         // we'll be lazy about checking whether the type implements the\n         // trait, but if we find out it doesn't, we'll skip the rest of the"}]}