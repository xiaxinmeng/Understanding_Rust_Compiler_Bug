{"sha": "0f009795171c7ea9977110e6aeebe72c67f559c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMDA5Nzk1MTcxYzdlYTk5NzcxMTBlNmFlZWJlNzJjNjdmNTU5Yzc=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-08-15T23:06:26Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-08-15T23:49:56Z"}, "message": "syntax: process all edition features before other features.", "tree": {"sha": "ef093140476e61897a63c95b0ae10316e2b4242c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef093140476e61897a63c95b0ae10316e2b4242c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f009795171c7ea9977110e6aeebe72c67f559c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f009795171c7ea9977110e6aeebe72c67f559c7", "html_url": "https://github.com/rust-lang/rust/commit/0f009795171c7ea9977110e6aeebe72c67f559c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f009795171c7ea9977110e6aeebe72c67f559c7/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d767ee11616390d128853a06f5addb619e79213f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d767ee11616390d128853a06f5addb619e79213f", "html_url": "https://github.com/rust-lang/rust/commit/d767ee11616390d128853a06f5addb619e79213f"}], "stats": {"total": 48, "additions": 36, "deletions": 12}, "files": [{"sha": "74db42ead7d41300bf178f96cbe16f39a303d6aa", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 34, "deletions": 10, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/0f009795171c7ea9977110e6aeebe72c67f559c7/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f009795171c7ea9977110e6aeebe72c67f559c7/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=0f009795171c7ea9977110e6aeebe72c67f559c7", "patch": "@@ -1923,7 +1923,7 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n     let mut features = Features::new();\n     let mut edition_enabled_features = FxHashMap();\n \n-    for &(name, .., f_edition, set) in ACTIVE_FEATURES.iter() {\n+    for &(name, .., f_edition, set) in ACTIVE_FEATURES {\n         if let Some(f_edition) = f_edition {\n             if f_edition <= crate_edition {\n                 set(&mut features, DUMMY_SP);\n@@ -1932,35 +1932,31 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n         }\n     }\n \n+    // Process the edition umbrella feature-gates first, to ensure\n+    // `edition_enabled_features` is completed before it's queried.\n     for attr in krate_attrs {\n         if !attr.check_name(\"feature\") {\n             continue\n         }\n \n         let list = match attr.meta_item_list() {\n             Some(list) => list,\n-            None => {\n-                span_err!(span_handler, attr.span, E0555,\n-                          \"malformed feature attribute, expected #![feature(...)]\");\n-                continue\n-            }\n+            None => continue,\n         };\n \n         for mi in list {\n             let name = if let Some(word) = mi.word() {\n                 word.name()\n             } else {\n-                span_err!(span_handler, mi.span, E0556,\n-                          \"malformed feature, expected just one word\");\n                 continue\n             };\n \n             if let Some(edition) = ALL_EDITIONS.iter().find(|e| name == e.feature_name()) {\n                 if *edition <= crate_edition {\n-                    continue\n+                    continue;\n                 }\n \n-                for &(name, .., f_edition, set) in ACTIVE_FEATURES.iter() {\n+                for &(name, .., f_edition, set) in ACTIVE_FEATURES {\n                     if let Some(f_edition) = f_edition {\n                         if f_edition <= *edition {\n                             // FIXME(Manishearth) there is currently no way to set\n@@ -1970,8 +1966,36 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n                         }\n                     }\n                 }\n+            }\n+        }\n+    }\n+\n+    for attr in krate_attrs {\n+        if !attr.check_name(\"feature\") {\n+            continue\n+        }\n+\n+        let list = match attr.meta_item_list() {\n+            Some(list) => list,\n+            None => {\n+                span_err!(span_handler, attr.span, E0555,\n+                          \"malformed feature attribute, expected #![feature(...)]\");\n+                continue\n+            }\n+        };\n \n+        for mi in list {\n+            let name = if let Some(word) = mi.word() {\n+                word.name()\n+            } else {\n+                span_err!(span_handler, mi.span, E0556,\n+                          \"malformed feature, expected just one word\");\n                 continue\n+            };\n+\n+            if ALL_EDITIONS.iter().any(|e| name == e.feature_name()) {\n+                // Handled in the separate loop above.\n+                continue;\n             }\n \n             if let Some((.., set)) = ACTIVE_FEATURES.iter().find(|f| name == f.0) {"}, {"sha": "b5fd3cf35f28bedd306e13813b6ed3a1a1a2a261", "filename": "src/test/ui/E0705.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f009795171c7ea9977110e6aeebe72c67f559c7/src%2Ftest%2Fui%2FE0705.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f009795171c7ea9977110e6aeebe72c67f559c7/src%2Ftest%2Fui%2FE0705.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0705.rs?ref=0f009795171c7ea9977110e6aeebe72c67f559c7", "patch": "@@ -10,9 +10,9 @@\n \n // compile-pass\n \n-#![feature(rust_2018_preview)]\n #![feature(raw_identifiers)]\n //~^ WARN the feature `raw_identifiers` is included in the Rust 2018 edition\n+#![feature(rust_2018_preview)]\n \n fn main() {\n     let foo = 0;"}, {"sha": "2aa3077e48c2dad6ffa3d56be088b875f2f4492e", "filename": "src/test/ui/E0705.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f009795171c7ea9977110e6aeebe72c67f559c7/src%2Ftest%2Fui%2FE0705.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f009795171c7ea9977110e6aeebe72c67f559c7/src%2Ftest%2Fui%2FE0705.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0705.stderr?ref=0f009795171c7ea9977110e6aeebe72c67f559c7", "patch": "@@ -1,5 +1,5 @@\n warning[E0705]: the feature `raw_identifiers` is included in the Rust 2018 edition\n-  --> $DIR/E0705.rs:14:12\n+  --> $DIR/E0705.rs:13:12\n    |\n LL | #![feature(raw_identifiers)]\n    |            ^^^^^^^^^^^^^^^"}]}