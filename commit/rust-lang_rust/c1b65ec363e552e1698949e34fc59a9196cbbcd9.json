{"sha": "c1b65ec363e552e1698949e34fc59a9196cbbcd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYjY1ZWMzNjNlNTUyZTE2OTg5NDllMzRmYzU5YTkxOTZjYmJjZDk=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-02-26T10:21:07Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-02-26T10:21:07Z"}, "message": "fix line format", "tree": {"sha": "132e9b71fc5208bd65143b421434da0d6e4b5000", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/132e9b71fc5208bd65143b421434da0d6e4b5000"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1b65ec363e552e1698949e34fc59a9196cbbcd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1b65ec363e552e1698949e34fc59a9196cbbcd9", "html_url": "https://github.com/rust-lang/rust/commit/c1b65ec363e552e1698949e34fc59a9196cbbcd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1b65ec363e552e1698949e34fc59a9196cbbcd9/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bc2e1d60d23a2f6a31d7a04d40171372d80b5b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bc2e1d60d23a2f6a31d7a04d40171372d80b5b3", "html_url": "https://github.com/rust-lang/rust/commit/7bc2e1d60d23a2f6a31d7a04d40171372d80b5b3"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "73da2467f59c2d64cd03b62581aabde93e2e5183", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c1b65ec363e552e1698949e34fc59a9196cbbcd9/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1b65ec363e552e1698949e34fc59a9196cbbcd9/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=c1b65ec363e552e1698949e34fc59a9196cbbcd9", "patch": "@@ -2218,7 +2218,8 @@ fn is_conditional(expr: &Expr) -> bool {\n fn is_nested(cx: &LateContext<'_, '_>, match_expr: &Expr, iter_expr: &Expr) -> bool {\n     if_chain! {\n         if let Some(loop_block) = get_enclosing_block(cx, match_expr.hir_id);\n-        if let Some(Node::Expr(loop_expr)) = cx.tcx.hir().find_by_hir_id(cx.tcx.hir().get_parent_node_by_hir_id(loop_block.hir_id));\n+        let parent_node = cx.tcx.hir().get_parent_node_by_hir_id(loop_block.hir_id);\n+        if let Some(Node::Expr(loop_expr)) = cx.tcx.hir().find_by_hir_id(parent_node);\n         then {\n             return is_loop_nested(cx, loop_expr, iter_expr)\n         }"}]}