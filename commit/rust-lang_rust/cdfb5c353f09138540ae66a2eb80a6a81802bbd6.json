{"sha": "cdfb5c353f09138540ae66a2eb80a6a81802bbd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkZmI1YzM1M2YwOTEzODU0MGFlNjZhMmViODBhNmE4MTgwMmJiZDY=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-17T10:22:40Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-17T10:22:40Z"}, "message": "Remove quadratic attr source lookup", "tree": {"sha": "3fac436573b616e090565c38e232e49ad6f2b8d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fac436573b616e090565c38e232e49ad6f2b8d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdfb5c353f09138540ae66a2eb80a6a81802bbd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdfb5c353f09138540ae66a2eb80a6a81802bbd6", "html_url": "https://github.com/rust-lang/rust/commit/cdfb5c353f09138540ae66a2eb80a6a81802bbd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdfb5c353f09138540ae66a2eb80a6a81802bbd6/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c766492d2625dba65c3bd933841c71938f6dc747", "url": "https://api.github.com/repos/rust-lang/rust/commits/c766492d2625dba65c3bd933841c71938f6dc747", "html_url": "https://github.com/rust-lang/rust/commit/c766492d2625dba65c3bd933841c71938f6dc747"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "7a6a41dc2cafc5132cc155a293b91d05edce4455", "filename": "crates/hir_def/src/attr.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/cdfb5c353f09138540ae66a2eb80a6a81802bbd6/crates%2Fhir_def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdfb5c353f09138540ae66a2eb80a6a81802bbd6/crates%2Fhir_def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fattr.rs?ref=cdfb5c353f09138540ae66a2eb80a6a81802bbd6", "patch": "@@ -294,6 +294,13 @@ impl Attrs {\n         Arc::new(res)\n     }\n \n+    /// Constructs a map that maps the lowered `Attr`s in this `Attrs` back to its original syntax nodes.\n+    ///\n+    /// `owner` must be the original owner of the attributes.\n+    pub fn source_map(&self, owner: &dyn AttrsOwner) -> AttrSourceMap {\n+        AttrSourceMap { attrs: collect_attrs(owner).collect() }\n+    }\n+\n     pub fn by_key(&self, key: &'static str) -> AttrQuery<'_> {\n         AttrQuery { attrs: self, key }\n     }\n@@ -366,6 +373,24 @@ fn inner_attributes(\n     Some((attrs, docs))\n }\n \n+pub struct AttrSourceMap {\n+    attrs: Vec<Either<ast::Attr, ast::Comment>>,\n+}\n+\n+impl AttrSourceMap {\n+    /// Maps the lowered `Attr` back to its original syntax node.\n+    ///\n+    /// `attr` must come from the `owner` used for AttrSourceMap\n+    ///\n+    /// Note that the returned syntax node might be a `#[cfg_attr]`, or a doc comment, instead of\n+    /// the attribute represented by `Attr`.\n+    pub fn source_of(&self, attr: &Attr) -> &Either<ast::Attr, ast::Comment> {\n+        self.attrs\n+            .get(attr.index as usize)\n+            .unwrap_or_else(|| panic!(\"cannot find `Attr` at index {}\", attr.index))\n+    }\n+}\n+\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct Attr {\n     index: u32,"}, {"sha": "d4c367f66077d83b4c91142699fb2b1d52e76a4c", "filename": "crates/ide/src/syntax_highlighting/inject.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cdfb5c353f09138540ae66a2eb80a6a81802bbd6/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdfb5c353f09138540ae66a2eb80a6a81802bbd6/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs?ref=cdfb5c353f09138540ae66a2eb80a6a81802bbd6", "patch": "@@ -153,6 +153,7 @@ pub(super) fn doc_comment(hl: &mut Highlights, sema: &Semantics<RootDatabase>, n\n     if attributes.docs().map_or(true, |docs| !String::from(docs).contains(RUSTDOC_FENCE)) {\n         return;\n     }\n+    let attrs_source_map = attributes.source_map(&owner);\n \n     let mut inj = Injector::default();\n     inj.add_unmapped(\"fn doctest() {\\n\");\n@@ -165,7 +166,7 @@ pub(super) fn doc_comment(hl: &mut Highlights, sema: &Semantics<RootDatabase>, n\n     let mut new_comments = Vec::new();\n     let mut string;\n     for attr in attributes.by_key(\"doc\").attrs() {\n-        let src = attr.to_src(&owner);\n+        let src = attrs_source_map.source_of(&attr);\n         let (line, range, prefix) = match &src {\n             Either::Left(it) => {\n                 string = match find_doc_string_in_attr(attr, it) {"}]}