{"sha": "19fa5c9ebb85aa7643d5917c406f6bcc0dc0ff52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5ZmE1YzllYmI4NWFhNzY0M2Q1OTE3YzQwNmY2YmNjMGRjMGZmNTI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-04-22T07:26:42Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-04-22T07:26:42Z"}, "message": "Update docs (and a function name)", "tree": {"sha": "7ae2c73320bf3d4eb182d28882b88c41db7e9d35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ae2c73320bf3d4eb182d28882b88c41db7e9d35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19fa5c9ebb85aa7643d5917c406f6bcc0dc0ff52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19fa5c9ebb85aa7643d5917c406f6bcc0dc0ff52", "html_url": "https://github.com/rust-lang/rust/commit/19fa5c9ebb85aa7643d5917c406f6bcc0dc0ff52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19fa5c9ebb85aa7643d5917c406f6bcc0dc0ff52/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95cc135bacb3130402d2f1bbc69c9788ca791841", "url": "https://api.github.com/repos/rust-lang/rust/commits/95cc135bacb3130402d2f1bbc69c9788ca791841", "html_url": "https://github.com/rust-lang/rust/commit/95cc135bacb3130402d2f1bbc69c9788ca791841"}], "stats": {"total": 33, "additions": 12, "deletions": 21}, "files": [{"sha": "d4faedca5c170a2f8a328512f26c3ad12c3d426e", "filename": "src/chains.rs", "status": "modified", "additions": 12, "deletions": 21, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/19fa5c9ebb85aa7643d5917c406f6bcc0dc0ff52/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19fa5c9ebb85aa7643d5917c406f6bcc0dc0ff52/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=19fa5c9ebb85aa7643d5917c406f6bcc0dc0ff52", "patch": "@@ -54,35 +54,26 @@\n ///     .baz();\n /// ```\n ///\n-/// `chain_indent` dictates how the rest of the chain is aligned. This only seems\n-/// to have an effect if the first non-root part of the chain is put on a\n-/// newline, otherwise we align the dots:\n-/// ```\n-/// foo.bar\n-///    .baz()\n-/// ```\n+/// `chain_indent` dictates how the rest of the chain is aligned.\n /// If the first item in the chain is a block expression, we align the dots with\n /// the braces.\n-///\n-/// Otherwise:\n /// Visual:\n /// ```\n-/// let a = foo(aaa, bbb)\n-///             .bar\n-///             .baz()\n+/// let a = foo.bar\n+///            .baz()\n+///            .qux\n /// ```\n-/// Visual seems to be a tab indented from the indent of the whole expression.\n /// Inherit:\n /// ```\n-/// let a = foo(aaa, bbb)\n-/// .bar\n+/// let a = foo.bar\n /// .baz()\n+/// .qux\n /// ```\n /// Tabbed:\n /// ```\n-/// let a = foo(aaa, bbb)\n-///     .bar\n+/// let a = foo.bar\n ///     .baz()\n+///     .qux\n /// ```\n /// `chains_overflow_last` applies only to chains where the last item is a\n /// method call. Usually, any line break in a chain sub-expression causes the\n@@ -127,7 +118,7 @@ pub fn rewrite_chain(expr: &ast::Expr,\n     } else if parent_rewrite.contains('\\n') {\n         (chain_indent(context, parent_block_indent.block_indent(context.config)), false)\n     } else {\n-        (hacked_chain_indent(context, offset + Indent::new(0, parent_rewrite.len())), false)\n+        (chain_indent_newline(context, offset + Indent::new(0, parent_rewrite.len())), false)\n     };\n \n     let max_width = try_opt!((width + offset.width()).checked_sub(indent.width()));\n@@ -259,9 +250,9 @@ fn chain_indent(context: &RewriteContext, offset: Indent) -> Indent {\n     }\n }\n \n-// Temporary hack - ignores visual indenting because this function should be\n-// called where it is not possible to use visual indentation.\n-fn hacked_chain_indent(context: &RewriteContext, _offset: Indent) -> Indent {\n+// Ignores visual indenting because this function should be called where it is\n+// not possible to use visual indentation because we are starting on a newline.\n+fn chain_indent_newline(context: &RewriteContext, _offset: Indent) -> Indent {\n     match context.config.chain_indent {\n         BlockIndentStyle::Inherit => context.block_indent,\n         BlockIndentStyle::Visual | BlockIndentStyle::Tabbed => {"}]}