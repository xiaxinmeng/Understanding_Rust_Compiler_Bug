{"sha": "b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3OWM4YjZkOGEzYjM4Yzk0ZGU5OTJhNTRmZmI5MDU1YzFhZDZmMzE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-27T18:10:02Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-27T18:10:02Z"}, "message": "Fix error blocks", "tree": {"sha": "4979b92b8f4e41bf55e4e1404a8cb183c034d6d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4979b92b8f4e41bf55e4e1404a8cb183c034d6d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31", "html_url": "https://github.com/rust-lang/rust/commit/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f4b07a9076a38b2bd0fa0518ba090311dcaf880", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f4b07a9076a38b2bd0fa0518ba090311dcaf880", "html_url": "https://github.com/rust-lang/rust/commit/7f4b07a9076a38b2bd0fa0518ba090311dcaf880"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "7a34d354ef66961fbf997012e798123323df1692", "filename": "crates/libanalysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/crates%2Flibanalysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/crates%2Flibanalysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibanalysis%2Fsrc%2Flib.rs?ref=b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31", "patch": "@@ -130,6 +130,7 @@ impl WorldState {\n     }\n }\n \n+#[derive(Debug)]\n pub enum QuickFix {\n     CreateFile(PathBuf),\n }"}, {"sha": "7c2950cccbf398a97dfafb277a14491ad7f5b784", "filename": "crates/libanalysis/tests/tests.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/crates%2Flibanalysis%2Ftests%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/crates%2Flibanalysis%2Ftests%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibanalysis%2Ftests%2Ftests.rs?ref=b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31", "patch": "@@ -52,7 +52,8 @@ fn test_unresolved_module_diagnostic() {\n     let snap = world.snapshot(|_id, _path| None);\n     let diagnostics = snap.diagnostics(FileId(1)).unwrap();\n     assert_eq_dbg(\n-        r#\"[Diagnostic { range: [4; 7), msg: \"unresolved module\" }]\"#,\n+        r#\"[(Diagnostic { range: [4; 7), msg: \"unresolved module\" },\n+             Some(CreateFile(\"../foo.rs\")))]\"#,\n         &diagnostics,\n     );\n }"}, {"sha": "ab4aa49d2de50b6e244388ac29eb6eed29a1e0db", "filename": "crates/libsyntax2/src/grammar/expressions/atom.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31", "patch": "@@ -269,6 +269,10 @@ fn match_arm_list(p: &mut Parser) {\n     let m = p.start();\n     p.eat(L_CURLY);\n     while !p.at(EOF) && !p.at(R_CURLY) {\n+        if p.at(L_CURLY) {\n+            error_block(p, \"expected match arm\");\n+            continue;\n+        }\n         // test match_arms_commas\n         // fn foo() {\n         //     match () {"}, {"sha": "9379ed93852676498ca8c930b4761883295e7463", "filename": "crates/libsyntax2/src/grammar/expressions/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fexpressions%2Fmod.rs?ref=b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31", "patch": "@@ -433,6 +433,7 @@ fn named_field_list(p: &mut Parser) {\n                 p.bump();\n                 expr(p);\n             }\n+            L_CURLY => error_block(p, \"expected a field\"),\n             _ => p.err_and_bump(\"expected identifier\"),\n         }\n         if !p.at(R_CURLY) {"}, {"sha": "180205393a506442679f4998b6e5e76e9a46c664", "filename": "crates/libsyntax2/src/grammar/items/structs.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fstructs.rs?ref=b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31", "patch": "@@ -56,6 +56,10 @@ fn enum_variant_list(p: &mut Parser) {\n     let m = p.start();\n     p.bump();\n     while !p.at(EOF) && !p.at(R_CURLY) {\n+        if p.at(L_CURLY) {\n+            error_block(p, \"expected enum variant\");\n+            continue;\n+        }\n         let var = p.start();\n         attributes::outer_attributes(p);\n         if p.at(IDENT) {"}, {"sha": "01b79e3c961b3a5aa1452836c217a307eb3c1de2", "filename": "crates/libsyntax2/src/grammar/items/traits.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=b79c8b6d8a3b38c94de992a54ffb9055c1ad6f31", "patch": "@@ -30,6 +30,10 @@ fn trait_item_list(p: &mut Parser) {\n     let m = p.start();\n     p.bump();\n     while !p.at(EOF) && !p.at(R_CURLY) {\n+        if p.at(L_CURLY) {\n+            error_block(p, \"expected an item\");\n+            continue;\n+        }\n         item_or_macro(p, true, ItemFlavor::Trait);\n     }\n     p.expect(R_CURLY);\n@@ -76,6 +80,10 @@ fn impl_item_list(p: &mut Parser) {\n     p.bump();\n \n     while !p.at(EOF) && !p.at(R_CURLY) {\n+        if p.at(L_CURLY) {\n+            error_block(p, \"expected an item\");\n+            continue;\n+        }\n         item_or_macro(p, true, ItemFlavor::Mod);\n     }\n     p.expect(R_CURLY);"}]}