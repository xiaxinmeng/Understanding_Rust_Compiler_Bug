{"sha": "a0866d0166283ffca0ce6ded21ba11ffb73f9554", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwODY2ZDAxNjYyODNmZmNhMGNlNmRlZDIxYmExMWZmYjczZjk1NTQ=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-27T01:23:12Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-27T01:23:30Z"}, "message": "Adjust error messages for compile-fail tests.", "tree": {"sha": "7b12d8240c298dc956929460d81c8100844581a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b12d8240c298dc956929460d81c8100844581a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0866d0166283ffca0ce6ded21ba11ffb73f9554", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0866d0166283ffca0ce6ded21ba11ffb73f9554", "html_url": "https://github.com/rust-lang/rust/commit/a0866d0166283ffca0ce6ded21ba11ffb73f9554", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0866d0166283ffca0ce6ded21ba11ffb73f9554/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f460c2adf8223fdff2eaa039af8781bcba11e587", "url": "https://api.github.com/repos/rust-lang/rust/commits/f460c2adf8223fdff2eaa039af8781bcba11e587", "html_url": "https://github.com/rust-lang/rust/commit/f460c2adf8223fdff2eaa039af8781bcba11e587"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "e75a73650b4251219713ca15114570d5845474a6", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=a0866d0166283ffca0ce6ded21ba11ffb73f9554", "patch": "@@ -4842,7 +4842,8 @@ pub impl Resolver {\n \n         if vec::len(values) > 0 &&\n             values[smallest] != uint::max_value &&\n-            values[smallest] < str::len(name) + 2 {\n+            values[smallest] < str::len(name) + 2 &&\n+            maybes[smallest] != name.to_owned() {\n \n             Some(vec::swap_remove(&mut maybes, smallest))\n "}, {"sha": "94488fbb55213b5b9575382e0884bf97b04fde28", "filename": "src/test/compile-fail/alt-join.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Falt-join.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Falt-join.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Falt-join.rs?ref=a0866d0166283ffca0ce6ded21ba11ffb73f9554", "patch": "@@ -16,6 +16,6 @@ fn my_fail() -> ! { fail!(); }\n fn main() {\n     match true { false => { my_fail(); } true => { } }\n \n-    log(debug, x); //~ ERROR unresolved name: x\n+    log(debug, x); //~ ERROR unresolved name: `x`.\n     let x: int;\n }"}, {"sha": "30014817308f433d47e77fc3a240ca637f779d94", "filename": "src/test/compile-fail/bad-expr-path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fbad-expr-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fbad-expr-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-expr-path.rs?ref=a0866d0166283ffca0ce6ded21ba11ffb73f9554", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: unresolved name: m1::a\n+// error-pattern: unresolved name: `m1::a`. Did you mean: `args`?\n \n mod m1 {}\n "}, {"sha": "88239a4cc3fee9a31d1efae9c004e44ad4e60c83", "filename": "src/test/compile-fail/bad-expr-path2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fbad-expr-path2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fbad-expr-path2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-expr-path2.rs?ref=a0866d0166283ffca0ce6ded21ba11ffb73f9554", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: unresolved name: m1::a\n+// error-pattern: unresolved name: `m1::a`. Did you mean: `args`?\n \n mod m1 {\n     pub mod a {}"}, {"sha": "a360d6579574fc3b2b8fa2488304c30d369ecb7a", "filename": "src/test/compile-fail/does-nothing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fdoes-nothing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fdoes-nothing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdoes-nothing.rs?ref=a0866d0166283ffca0ce6ded21ba11ffb73f9554", "patch": "@@ -1,3 +1,3 @@\n-// error-pattern: unresolved name: this_does_nothing_what_the\n+// error-pattern: unresolved name: `this_does_nothing_what_the`.\n fn main() { debug!(\"doing\"); this_does_nothing_what_the; debug!(\"boing\"); }\n "}, {"sha": "7a45ecc83b0c297fcbd247dd398e63b56d754f3a", "filename": "src/test/compile-fail/issue-1476.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fissue-1476.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fissue-1476.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1476.rs?ref=a0866d0166283ffca0ce6ded21ba11ffb73f9554", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n fn main() {\n-    log(error, x); //~ ERROR unresolved name: x\n+    log(error, x); //~ ERROR unresolved name: `x`.\n }"}, {"sha": "1d4cd69c54ee0a23a6693b1778da31a6934e76ac", "filename": "src/test/compile-fail/issue-3021-b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fissue-3021-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fissue-3021-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3021-b.rs?ref=a0866d0166283ffca0ce6ded21ba11ffb73f9554", "patch": "@@ -19,7 +19,7 @@ fn siphash(k0 : u64) {\n     impl siphash {\n         fn reset(&mut self) {\n            self.v0 = k0 ^ 0x736f6d6570736575; //~ ERROR attempted dynamic environment-capture\n-           //~^ ERROR unresolved name: k0\n+           //~^ ERROR unresolved name: `k0`.\n         }\n     }\n }"}, {"sha": "7381d36a223967823dc112a0fb581859e362b013", "filename": "src/test/compile-fail/issue-3021-d.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fissue-3021-d.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fissue-3021-d.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3021-d.rs?ref=a0866d0166283ffca0ce6ded21ba11ffb73f9554", "patch": "@@ -31,9 +31,9 @@ fn siphash(k0 : u64, k1 : u64) -> siphash {\n    impl siphash for sipstate {\n         fn reset() {\n             self.v0 = k0 ^ 0x736f6d6570736575;  //~ ERROR attempted dynamic environment-capture\n-            //~^ ERROR unresolved name: k0\n+            //~^ ERROR unresolved name: `k0`.\n             self.v1 = k1 ^ 0x646f72616e646f6d;   //~ ERROR attempted dynamic environment-capture\n-            //~^ ERROR unresolved name: k1\n+            //~^ ERROR unresolved name: `k1`.\n         }\n         fn result() -> u64 { return mk_result(self); }\n     }"}, {"sha": "e5a7a7990e526184d1726b8380b67d5bca558a91", "filename": "src/test/compile-fail/issue-3021.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fissue-3021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0866d0166283ffca0ce6ded21ba11ffb73f9554/src%2Ftest%2Fcompile-fail%2Fissue-3021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3021.rs?ref=a0866d0166283ffca0ce6ded21ba11ffb73f9554", "patch": "@@ -23,7 +23,7 @@ fn siphash(k0 : u64) -> siphash {\n    impl siphash for sipstate {\n         fn reset() {\n            self.v0 = k0 ^ 0x736f6d6570736575; //~ ERROR attempted dynamic environment-capture\n-           //~^ ERROR unresolved name: k0\n+           //~^ ERROR unresolved name: `k0`.\n         }\n     }\n     fail!();"}]}