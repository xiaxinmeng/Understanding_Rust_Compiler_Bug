{"sha": "77cd09a88cd21f22865287025dafc1252856c5d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3Y2QwOWE4OGNkMjFmMjI4NjUyODcwMjVkYWZjMTI1Mjg1NmM1ZDk=", "commit": {"author": {"name": "Mohit Agarwal", "email": "mohit@sdf.org", "date": "2016-08-30T04:51:27Z"}, "committer": {"name": "Mohit Agarwal", "email": "mohit@sdf.org", "date": "2016-08-30T14:50:01Z"}, "message": "Update E0520 to new error format\n\nFixes #36112.\nPart of #35233.\n\nr? @jonathandturner", "tree": {"sha": "525d822326ecff725158b1ff088f8248f49b1617", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/525d822326ecff725158b1ff088f8248f49b1617"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77cd09a88cd21f22865287025dafc1252856c5d9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXxZ0aAAoJEIvp0V0LDQbrxtEP/1b3wO/SpiiU/SLgDt8jk0vn\n/sSvyc8Yk941mqUz1v1lQKo5fonKp2wFL2ARUXGggPD9apZWle1EptRuJhRueuQ1\nQSmNENSseRfzIwDXQg94uLqLb/VH9NLJnwtyUrWRM8mDUWWBYmvXmItPHwGrPbW4\n1ZPkLKwDpIzvM/q7GinzhyOfVT5j+OuzHwkJTtikjU8yEpdaLZ5jLH71iGAoFDNX\nXOFh6HWJxIi6H5gaYYGUdxGGsZFgFliJobZQoHwEHpTrU/7xC9Gm46sOB5xxJ+j/\nHNQxBrwinO49/rBWSzbtiaGVGbzWoKcb0X1KxXb17o0RqUuP+JMkZdcGBceNwLpW\n4UpcKCjfcjDFxnY5jcSfhnj32ig3P6lIdDeyoU6i2HtRF5aHYCMnYEuSM/QUraIx\nHDcg9ebkuePRKmGIOSGfJPUGalXrB2wP4DpfBDl5rxA+kCRgLKXp7ogXXFCmlpiR\nPFQxedkP314G+Gz0ruoku02RqZvZSI9iWW7c5FUZ2qi+gioXNV0600CwSMn5oP/J\n9cIqJpEomt7YegjzR2PN6tlVul8u3VemhqjM6saLE4O0z1HnPDCiGrCUMOd0/4Pv\nIwvUqWnGrBrvHOPCtJmw9QhbjLZHSf6mfV1nD9sed4h6yxDoGPXfbetxHaxzGFy5\nnpNzm20EYamGCY9z/Zx/\n=4KRe\n-----END PGP SIGNATURE-----", "payload": "tree 525d822326ecff725158b1ff088f8248f49b1617\nparent 71ee82a8aa0c02fc2c73e84f40bdb55512d10938\nauthor Mohit Agarwal <mohit@sdf.org> 1472532687 +0530\ncommitter Mohit Agarwal <mohit@sdf.org> 1472568601 +0530\n\nUpdate E0520 to new error format\n\nFixes #36112.\nPart of #35233.\n\nr? @jonathandturner\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77cd09a88cd21f22865287025dafc1252856c5d9", "html_url": "https://github.com/rust-lang/rust/commit/77cd09a88cd21f22865287025dafc1252856c5d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77cd09a88cd21f22865287025dafc1252856c5d9/comments", "author": {"login": "0xmohit", "id": 8176079, "node_id": "MDQ6VXNlcjgxNzYwNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8176079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xmohit", "html_url": "https://github.com/0xmohit", "followers_url": "https://api.github.com/users/0xmohit/followers", "following_url": "https://api.github.com/users/0xmohit/following{/other_user}", "gists_url": "https://api.github.com/users/0xmohit/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xmohit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xmohit/subscriptions", "organizations_url": "https://api.github.com/users/0xmohit/orgs", "repos_url": "https://api.github.com/users/0xmohit/repos", "events_url": "https://api.github.com/users/0xmohit/events{/privacy}", "received_events_url": "https://api.github.com/users/0xmohit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "0xmohit", "id": 8176079, "node_id": "MDQ6VXNlcjgxNzYwNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8176079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xmohit", "html_url": "https://github.com/0xmohit", "followers_url": "https://api.github.com/users/0xmohit/followers", "following_url": "https://api.github.com/users/0xmohit/following{/other_user}", "gists_url": "https://api.github.com/users/0xmohit/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xmohit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xmohit/subscriptions", "organizations_url": "https://api.github.com/users/0xmohit/orgs", "repos_url": "https://api.github.com/users/0xmohit/repos", "events_url": "https://api.github.com/users/0xmohit/events{/privacy}", "received_events_url": "https://api.github.com/users/0xmohit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71ee82a8aa0c02fc2c73e84f40bdb55512d10938", "url": "https://api.github.com/repos/rust-lang/rust/commits/71ee82a8aa0c02fc2c73e84f40bdb55512d10938", "html_url": "https://github.com/rust-lang/rust/commit/71ee82a8aa0c02fc2c73e84f40bdb55512d10938"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "e73c3e2de5320e16cfff17ba5aa348f439412681", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/77cd09a88cd21f22865287025dafc1252856c5d9/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77cd09a88cd21f22865287025dafc1252856c5d9/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=77cd09a88cd21f22865287025dafc1252856c5d9", "patch": "@@ -903,14 +903,18 @@ fn report_forbidden_specialization<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n {\n     let mut err = struct_span_err!(\n         tcx.sess, impl_item.span, E0520,\n-        \"item `{}` is provided by an `impl` that specializes \\\n-         another, but the item in the parent `impl` is not \\\n-         marked `default` and so it cannot be specialized.\",\n+        \"`{}` specializes an item from a parent `impl`, but \\\n+         neither that item nor the `impl` are marked `default`\",\n         impl_item.name);\n+    err.span_label(impl_item.span, &format!(\"cannot specialize default item `{}`\",\n+                                            impl_item.name));\n \n     match tcx.span_of_impl(parent_impl) {\n         Ok(span) => {\n-            err.span_note(span, \"parent implementation is here:\");\n+            err.span_label(span, &\"parent `impl` is here\");\n+            err.note(&format!(\"to specialize, either the parent `impl` or `{}` \\\n+                               in the parent `impl` must be marked `default`\",\n+                              impl_item.name));\n         }\n         Err(cname) => {\n             err.note(&format!(\"parent implementation is in crate `{}`\", cname));"}, {"sha": "0bb8faea62e1ea9267f1c64f44b207eb1a65cf9b", "filename": "src/test/compile-fail/E0520.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77cd09a88cd21f22865287025dafc1252856c5d9/src%2Ftest%2Fcompile-fail%2FE0520.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77cd09a88cd21f22865287025dafc1252856c5d9/src%2Ftest%2Fcompile-fail%2FE0520.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0520.rs?ref=77cd09a88cd21f22865287025dafc1252856c5d9", "patch": "@@ -19,11 +19,15 @@ impl<T> SpaceLlama for T {\n }\n \n impl<T: Clone> SpaceLlama for T {\n+//~^ NOTE parent `impl` is here\n     fn fly(&self) {}\n }\n \n impl SpaceLlama for i32 {\n-    default fn fly(&self) {} //~ ERROR E0520\n+    default fn fly(&self) {}\n+    //~^ ERROR E0520\n+    //~| NOTE cannot specialize default item `fly`\n+    //~| NOTE either the parent `impl` or `fly` in the parent `impl` must be marked `default`\n }\n \n fn main() {"}]}