{"sha": "044b3d90c31d871d716c390fb5792168ad203489", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NGIzZDkwYzMxZDg3MWQ3MTZjMzkwZmI1NzkyMTY4YWQyMDM0ODk=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-04-06T10:15:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-06T10:15:33Z"}, "message": "Merge pull request #2633 from mikerite/ref_cow_tests\n\nMove ref cow tests", "tree": {"sha": "4bbdcdc5c865346414fa8302c53b53952753d082", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bbdcdc5c865346414fa8302c53b53952753d082"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/044b3d90c31d871d716c390fb5792168ad203489", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJax0jFCRBK7hj4Ov3rIwAAdHIIAESXMC15tVEzFGnYAR9clyln\nXTH3tUYkWViegGr0oLjM9T87W6ULwegz+m6L3eEBCk5SsvJD8OqCMOf1c7+2PY9L\nSPRIRhJKLmCgm7Rpxtn4XMM5kmeYFQ3B4iNX3bIW6hA4o49SYX8GAkmE+X9RpkJ7\nIH7BeKnYNazDYNY5GS8kmf7TkUcO0a8abvm6zZ1arwmcbTb66Td9vfRDRxzdY6TQ\nX+4aWUW8yBJH/UKKA8+vuUxpg/C9qeU4W9kSoYmITQVMBONxhtS1fkq73Ora75ee\nwtAaKgNJ/++TCwsdVr+fNCXvBz8Uegly55PoH0KZKFaNtovOKeoxb52Ogf/WJZE=\n=0Bdq\n-----END PGP SIGNATURE-----\n", "payload": "tree 4bbdcdc5c865346414fa8302c53b53952753d082\nparent 71a15bf264a2d71e6af2a06f30c0ddbf4bba75cc\nparent 2fd671e4bd26e1c2ebef6fe3a0ce6194ffc14182\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1523009733 +0200\ncommitter GitHub <noreply@github.com> 1523009733 +0200\n\nMerge pull request #2633 from mikerite/ref_cow_tests\n\nMove ref cow tests"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/044b3d90c31d871d716c390fb5792168ad203489", "html_url": "https://github.com/rust-lang/rust/commit/044b3d90c31d871d716c390fb5792168ad203489", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/044b3d90c31d871d716c390fb5792168ad203489/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71a15bf264a2d71e6af2a06f30c0ddbf4bba75cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/71a15bf264a2d71e6af2a06f30c0ddbf4bba75cc", "html_url": "https://github.com/rust-lang/rust/commit/71a15bf264a2d71e6af2a06f30c0ddbf4bba75cc"}, {"sha": "2fd671e4bd26e1c2ebef6fe3a0ce6194ffc14182", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fd671e4bd26e1c2ebef6fe3a0ce6194ffc14182", "html_url": "https://github.com/rust-lang/rust/commit/2fd671e4bd26e1c2ebef6fe3a0ce6194ffc14182"}], "stats": {"total": 39, "additions": 18, "deletions": 21}, "files": [{"sha": "99500cd0746d04301f5951c18e895f0427c35994", "filename": "tests/ui/needless_borrow.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/044b3d90c31d871d716c390fb5792168ad203489/tests%2Fui%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/044b3d90c31d871d716c390fb5792168ad203489/tests%2Fui%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.rs?ref=044b3d90c31d871d716c390fb5792168ad203489", "patch": "@@ -51,12 +51,3 @@ fn issue_1432() {\n \n     let _ = v.iter().filter(|&a| a.is_empty());\n }\n-\n-#[allow(dead_code)]\n-fn test_cow_with_ref(c: &Cow<[i32]>) {\n-}\n-\n-#[allow(dead_code)]\n-fn test_cow(c: Cow<[i32]>) {\n-    let _c = c;\n-}"}, {"sha": "fde38508b32333eec5f9b47629805d4ca6617562", "filename": "tests/ui/needless_borrow.stderr", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/044b3d90c31d871d716c390fb5792168ad203489/tests%2Fui%2Fneedless_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/044b3d90c31d871d716c390fb5792168ad203489/tests%2Fui%2Fneedless_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.stderr?ref=044b3d90c31d871d716c390fb5792168ad203489", "patch": "@@ -38,13 +38,5 @@ error: this pattern creates a reference to a reference\n 50 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n    |                               ^^^^^ help: change this to: `a`\n \n-error: using a reference to `Cow` is not recommended.\n-  --> $DIR/needless_borrow.rs:56:25\n-   |\n-56 | fn test_cow_with_ref(c: &Cow<[i32]>) {\n-   |                         ^^^^^^^^^^^ help: change this to: `&[i32]`\n-   |\n-   = note: `-D ptr-arg` implied by `-D warnings`\n-\n-error: aborting due to 7 previous errors\n+error: aborting due to 6 previous errors\n "}, {"sha": "ce572be7ad8ace96e2e093ca0d8fb00829c79134", "filename": "tests/ui/ptr_arg.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/044b3d90c31d871d716c390fb5792168ad203489/tests%2Fui%2Fptr_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/044b3d90c31d871d716c390fb5792168ad203489/tests%2Fui%2Fptr_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.rs?ref=044b3d90c31d871d716c390fb5792168ad203489", "patch": "@@ -1,8 +1,8 @@\n-\n-\n #![allow(unused, many_single_char_names)]\n #![warn(ptr_arg)]\n \n+use std::borrow::Cow;\n+\n fn do_vec(x: &Vec<i64>) {\n     //Nothing here\n }\n@@ -67,3 +67,11 @@ fn false_positive_capacity_too(x: &String) -> String {\n     x.clone()\n }\n \n+#[allow(dead_code)]\n+fn test_cow_with_ref(c: &Cow<[i32]>) {\n+}\n+\n+#[allow(dead_code)]\n+fn test_cow(c: Cow<[i32]>) {\n+    let _c = c;\n+}"}, {"sha": "a29e393baa1b464787146cca547555b531ba13dc", "filename": "tests/ui/ptr_arg.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/044b3d90c31d871d716c390fb5792168ad203489/tests%2Fui%2Fptr_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/044b3d90c31d871d716c390fb5792168ad203489/tests%2Fui%2Fptr_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.stderr?ref=044b3d90c31d871d716c390fb5792168ad203489", "patch": "@@ -76,5 +76,11 @@ help: change `y.as_str()` to\n 62 |     let c = y;\n    |             ^\n \n-error: aborting due to 6 previous errors\n+error: using a reference to `Cow` is not recommended.\n+  --> $DIR/ptr_arg.rs:71:25\n+   |\n+71 | fn test_cow_with_ref(c: &Cow<[i32]>) {\n+   |                         ^^^^^^^^^^^ help: change this to: `&[i32]`\n+\n+error: aborting due to 7 previous errors\n "}]}