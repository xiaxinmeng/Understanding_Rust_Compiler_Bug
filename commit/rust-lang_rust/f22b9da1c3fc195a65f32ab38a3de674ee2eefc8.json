{"sha": "f22b9da1c3fc195a65f32ab38a3de674ee2eefc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyMmI5ZGExYzNmYzE5NWE2NWYzMmFiMzhhM2RlNjc0ZWUyZWVmYzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-28T09:10:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-28T09:10:12Z"}, "message": "Auto merge of #44790 - clarcharr:zip_bytes, r=sfackler\n\nTrustedRandomAccess specialisation for Iterator::cloned when Item: Copy.\n\nThis should fix #44424. It also provides a potential fix for more iterators using `Iterator::cloned`.", "tree": {"sha": "70a93292c7ba159af98abdcb676551c2ab02c3d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70a93292c7ba159af98abdcb676551c2ab02c3d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f22b9da1c3fc195a65f32ab38a3de674ee2eefc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f22b9da1c3fc195a65f32ab38a3de674ee2eefc8", "html_url": "https://github.com/rust-lang/rust/commit/f22b9da1c3fc195a65f32ab38a3de674ee2eefc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f22b9da1c3fc195a65f32ab38a3de674ee2eefc8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cb90f4e23ffc225da8fc1a26df01621641b6138", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cb90f4e23ffc225da8fc1a26df01621641b6138", "html_url": "https://github.com/rust-lang/rust/commit/9cb90f4e23ffc225da8fc1a26df01621641b6138"}, {"sha": "1c589b7a51c005b3c55244a7b7589ed351028d46", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c589b7a51c005b3c55244a7b7589ed351028d46", "html_url": "https://github.com/rust-lang/rust/commit/1c589b7a51c005b3c55244a7b7589ed351028d46"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "2d3ff6a348d39f85c49de33c68ef137cd9e07cc4", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f22b9da1c3fc195a65f32ab38a3de674ee2eefc8/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f22b9da1c3fc195a65f32ab38a3de674ee2eefc8/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=f22b9da1c3fc195a65f32ab38a3de674ee2eefc8", "patch": "@@ -488,7 +488,7 @@ impl<'a, I, T: 'a> FusedIterator for Cloned<I>\n {}\n \n #[doc(hidden)]\n-unsafe impl<'a, I, T: 'a> TrustedRandomAccess for Cloned<I>\n+default unsafe impl<'a, I, T: 'a> TrustedRandomAccess for Cloned<I>\n     where I: TrustedRandomAccess<Item=&'a T>, T: Clone\n {\n     unsafe fn get_unchecked(&mut self, i: usize) -> Self::Item {\n@@ -499,6 +499,18 @@ unsafe impl<'a, I, T: 'a> TrustedRandomAccess for Cloned<I>\n     fn may_have_side_effect() -> bool { true }\n }\n \n+#[doc(hidden)]\n+unsafe impl<'a, I, T: 'a> TrustedRandomAccess for Cloned<I>\n+    where I: TrustedRandomAccess<Item=&'a T>, T: Copy\n+{\n+    unsafe fn get_unchecked(&mut self, i: usize) -> Self::Item {\n+        *self.it.get_unchecked(i)\n+    }\n+\n+    #[inline]\n+    fn may_have_side_effect() -> bool { false }\n+}\n+\n #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<'a, I, T: 'a> TrustedLen for Cloned<I>\n     where I: TrustedLen<Item=&'a T>,"}, {"sha": "62367b051fced34b9552d595e6ca00abf16789e8", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f22b9da1c3fc195a65f32ab38a3de674ee2eefc8/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f22b9da1c3fc195a65f32ab38a3de674ee2eefc8/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=f22b9da1c3fc195a65f32ab38a3de674ee2eefc8", "patch": "@@ -20,7 +20,8 @@ use self::pattern::{Searcher, ReverseSearcher, DoubleEndedSearcher};\n use char;\n use convert::TryFrom;\n use fmt;\n-use iter::{Map, Cloned, FusedIterator};\n+use iter::{Map, Cloned, FusedIterator, TrustedLen};\n+use iter_private::TrustedRandomAccess;\n use slice::{self, SliceIndex};\n use mem;\n \n@@ -818,6 +819,17 @@ impl<'a> ExactSizeIterator for Bytes<'a> {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a> FusedIterator for Bytes<'a> {}\n \n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n+unsafe impl<'a> TrustedLen for Bytes<'a> {}\n+\n+#[doc(hidden)]\n+unsafe impl<'a> TrustedRandomAccess for Bytes<'a> {\n+    unsafe fn get_unchecked(&mut self, i: usize) -> u8 {\n+        self.0.get_unchecked(i)\n+    }\n+    fn may_have_side_effect() -> bool { false }\n+}\n+\n /// This macro generates a Clone impl for string pattern API\n /// wrapper types of the form X<'a, P>\n macro_rules! derive_pattern_clone {"}]}