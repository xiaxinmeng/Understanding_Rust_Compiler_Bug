{"sha": "095bf01649a202b088c817bcdd3612d2604187e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NWJmMDE2NDlhMjAyYjA4OGM4MTdiY2RkMzYxMmQyNjA0MTg3ZTA=", "commit": {"author": {"name": "Han Mertens", "email": "hanmertens@outlook.com", "date": "2021-01-17T16:49:02Z"}, "committer": {"name": "Han Mertens", "email": "hanmertens@outlook.com", "date": "2021-02-21T15:18:52Z"}, "message": "Improve sift_down performance in BinaryHeap\n\nBecause child > 0, the two statements are equivalent, but using\nsaturating_sub and <= yields in faster code. This is most notable in the\nbinary_heap::bench_into_sorted_vec benchmark, which shows a speedup of\n1.26x, which uses sift_down_range internally. The speedup of pop (that\nuses sift_down_to_bottom internally) is much less significant as the\nsifting method is not called in a loop.", "tree": {"sha": "4b1483f6d17aa6a90f00008f7439c838ea1f1034", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b1483f6d17aa6a90f00008f7439c838ea1f1034"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/095bf01649a202b088c817bcdd3612d2604187e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/095bf01649a202b088c817bcdd3612d2604187e0", "html_url": "https://github.com/rust-lang/rust/commit/095bf01649a202b088c817bcdd3612d2604187e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/095bf01649a202b088c817bcdd3612d2604187e0/comments", "author": {"login": "hanmertens", "id": 21318961, "node_id": "MDQ6VXNlcjIxMzE4OTYx", "avatar_url": "https://avatars.githubusercontent.com/u/21318961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanmertens", "html_url": "https://github.com/hanmertens", "followers_url": "https://api.github.com/users/hanmertens/followers", "following_url": "https://api.github.com/users/hanmertens/following{/other_user}", "gists_url": "https://api.github.com/users/hanmertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanmertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanmertens/subscriptions", "organizations_url": "https://api.github.com/users/hanmertens/orgs", "repos_url": "https://api.github.com/users/hanmertens/repos", "events_url": "https://api.github.com/users/hanmertens/events{/privacy}", "received_events_url": "https://api.github.com/users/hanmertens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hanmertens", "id": 21318961, "node_id": "MDQ6VXNlcjIxMzE4OTYx", "avatar_url": "https://avatars.githubusercontent.com/u/21318961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanmertens", "html_url": "https://github.com/hanmertens", "followers_url": "https://api.github.com/users/hanmertens/followers", "following_url": "https://api.github.com/users/hanmertens/following{/other_user}", "gists_url": "https://api.github.com/users/hanmertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanmertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanmertens/subscriptions", "organizations_url": "https://api.github.com/users/hanmertens/orgs", "repos_url": "https://api.github.com/users/hanmertens/repos", "events_url": "https://api.github.com/users/hanmertens/events{/privacy}", "received_events_url": "https://api.github.com/users/hanmertens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e826bb11228508fbe749e594038d6727208aa94", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e826bb11228508fbe749e594038d6727208aa94", "html_url": "https://github.com/rust-lang/rust/commit/3e826bb11228508fbe749e594038d6727208aa94"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e025da74da471549c6be4f16925fe6bdd96a8126", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/095bf01649a202b088c817bcdd3612d2604187e0/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/095bf01649a202b088c817bcdd3612d2604187e0/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=095bf01649a202b088c817bcdd3612d2604187e0", "patch": "@@ -565,7 +565,7 @@ impl<T: Ord> BinaryHeap<T> {\n         let mut child = 2 * hole.pos() + 1;\n \n         // Loop invariant: child == 2 * hole.pos() + 1.\n-        while child < end - 1 {\n+        while child <= end.saturating_sub(2) {\n             // compare with the greater of the two children\n             // SAFETY: child < end - 1 < self.len() and\n             //  child + 1 < end <= self.len(), so they're valid indexes.\n@@ -624,7 +624,7 @@ impl<T: Ord> BinaryHeap<T> {\n         let mut child = 2 * hole.pos() + 1;\n \n         // Loop invariant: child == 2 * hole.pos() + 1.\n-        while child < end - 1 {\n+        while child <= end.saturating_sub(2) {\n             // SAFETY: child < end - 1 < self.len() and\n             //  child + 1 < end <= self.len(), so they're valid indexes.\n             //  child == 2 * hole.pos() + 1 != hole.pos() and"}]}