{"sha": "e36df0f6c87278345d4bb98292bff661291b65f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNmRmMGY2Yzg3Mjc4MzQ1ZDRiYjk4MjkyYmZmNjYxMjkxYjY1ZjI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-01-21T01:23:56Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-01-21T01:26:31Z"}, "message": "Handle fail after return correctly in typestate\n\nPreviously, typestate would conclude that this function was\ncorrectly diverging:\n\nfn f() -> ! { ret; fail; }\n\neven though it always returns to the caller. It wasn't handling the\ni_diverge and i_return bits correctly in the fail case. Fixed it.\n\nCloses #897", "tree": {"sha": "7693c76c56ca21f530ed647402ae79ff00666abc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7693c76c56ca21f530ed647402ae79ff00666abc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e36df0f6c87278345d4bb98292bff661291b65f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e36df0f6c87278345d4bb98292bff661291b65f2", "html_url": "https://github.com/rust-lang/rust/commit/e36df0f6c87278345d4bb98292bff661291b65f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e36df0f6c87278345d4bb98292bff661291b65f2/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00a4aee2ede16541b0af34093d2fbcc4ba7cd6f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/00a4aee2ede16541b0af34093d2fbcc4ba7cd6f2", "html_url": "https://github.com/rust-lang/rust/commit/00a4aee2ede16541b0af34093d2fbcc4ba7cd6f2"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "ae621b8f31f5178b23ea47c7b36eb668120e4688", "filename": "src/comp/middle/tstate/states.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e36df0f6c87278345d4bb98292bff661291b65f2/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e36df0f6c87278345d4bb98292bff661291b65f2/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs?ref=e36df0f6c87278345d4bb98292bff661291b65f2", "patch": "@@ -48,6 +48,22 @@ fn handle_move_or_copy(fcx: fn_ctxt, post: poststate, rhs_path: @path,\n     }\n }\n \n+fn handle_fail(fcx: fn_ctxt, pres:prestate, post:poststate) {\n+    // Remember what the old value of the \"I return\" trit was, so that\n+    // we can avoid changing that (if it was true, there was a return\n+    // that dominates this fail and the fail is unreachable)\n+    if !promises(fcx, pres, fcx.enclosing.i_return)\n+        // (only if we're in a diverging function -- you can fail when\n+        // you're supposed to return, but not vice versa).\n+        && fcx.enclosing.cf == noreturn {\n+          kill_poststate_(fcx, fcx.enclosing.i_return, post);\n+    } else {\n+        // This code is unreachable (it's dominated by a return),\n+        // so doesn't diverge.\n+        kill_poststate_(fcx, fcx.enclosing.i_diverge, post);\n+    }\n+}\n+\n fn seq_states(fcx: fn_ctxt, pres: prestate, bindings: [binding]) ->\n    {changed: bool, post: poststate} {\n     let changed = false;\n@@ -189,6 +205,7 @@ fn find_pre_post_state_exprs(fcx: fn_ctxt, pres: prestate, id: node_id,\n     alt cf {\n       noreturn {\n         let post = false_postcond(num_constraints(fcx.enclosing));\n+        handle_fail(fcx, pres, post);\n         changed |= set_poststate_ann(fcx.ccx, id, post);\n       }\n       _ { changed |= set_poststate_ann(fcx.ccx, id, rs.post); }\n@@ -584,10 +601,7 @@ fn find_pre_post_state_expr(fcx: fn_ctxt, pres: prestate, e: @expr) -> bool {\n         /* if execution continues after fail, then everything is true!\n         woo! */\n         let post = false_postcond(num_constrs);\n-        alt fcx.enclosing.cf {\n-          noreturn { kill_poststate_(fcx, fcx.enclosing.i_return, post); }\n-          _ { }\n-        }\n+        handle_fail(fcx, pres, post);\n         ret set_prestate_ann(fcx.ccx, e.id, pres) |\n                 set_poststate_ann(fcx.ccx, e.id, post) |\n                 option::maybe(false, maybe_fail_val, {|fail_val|"}, {"sha": "ec1c88f81a52c7818e3c67271e40bdde2c4010dd", "filename": "src/test/compile-fail/issue-897-2.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e36df0f6c87278345d4bb98292bff661291b65f2/src%2Ftest%2Fcompile-fail%2Fissue-897-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e36df0f6c87278345d4bb98292bff661291b65f2/src%2Ftest%2Fcompile-fail%2Fissue-897-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-897-2.rs?ref=e36df0f6c87278345d4bb98292bff661291b65f2", "patch": "@@ -0,0 +1,4 @@\n+// error-pattern: In non-returning function f, some control paths may return\n+fn g() -> ! { fail; }\n+fn f() -> ! { ret 42; g(); }\n+fn main() { }"}, {"sha": "3341ce5f974d070ff898f90a8fec6e0034699406", "filename": "src/test/compile-fail/issue-897.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e36df0f6c87278345d4bb98292bff661291b65f2/src%2Ftest%2Fcompile-fail%2Fissue-897.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e36df0f6c87278345d4bb98292bff661291b65f2/src%2Ftest%2Fcompile-fail%2Fissue-897.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-897.rs?ref=e36df0f6c87278345d4bb98292bff661291b65f2", "patch": "@@ -0,0 +1,3 @@\n+// error-pattern: In non-returning function f, some control paths may return\n+fn f() -> ! { ret 42; fail; }\n+fn main() { }"}]}