{"sha": "b335c2d49f1698ada99e3622d3cd482c27c9fc9b", "node_id": "C_kwDOAAsO6NoAKGIzMzVjMmQ0OWYxNjk4YWRhOTllMzYyMmQzY2Q0ODJjMjdjOWZjOWI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-11T21:15:39Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-14T03:13:56Z"}, "message": "Assemble Unpin candidates specially for generators in new solver", "tree": {"sha": "86599bb811efc618bf26f829b8717d1ccb1609fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86599bb811efc618bf26f829b8717d1ccb1609fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b335c2d49f1698ada99e3622d3cd482c27c9fc9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b335c2d49f1698ada99e3622d3cd482c27c9fc9b", "html_url": "https://github.com/rust-lang/rust/commit/b335c2d49f1698ada99e3622d3cd482c27c9fc9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b335c2d49f1698ada99e3622d3cd482c27c9fc9b/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a41fc00eaf352541008965fec0dee811e44373b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a41fc00eaf352541008965fec0dee811e44373b3", "html_url": "https://github.com/rust-lang/rust/commit/a41fc00eaf352541008965fec0dee811e44373b3"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "73c599e181405450b0a4fd3f2a5b130275e3ae48", "filename": "compiler/rustc_trait_selection/src/solve/trait_goals.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b335c2d49f1698ada99e3622d3cd482c27c9fc9b/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b335c2d49f1698ada99e3622d3cd482c27c9fc9b/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs?ref=b335c2d49f1698ada99e3622d3cd482c27c9fc9b", "patch": "@@ -3,7 +3,7 @@\n use super::assembly::{self, structural_traits};\n use super::{EvalCtxt, SolverMode};\n use rustc_hir::def_id::DefId;\n-use rustc_hir::LangItem;\n+use rustc_hir::{LangItem, Movability};\n use rustc_infer::traits::query::NoSolution;\n use rustc_infer::traits::util::supertraits;\n use rustc_middle::traits::solve::{CanonicalResponse, Certainty, Goal, QueryResult};\n@@ -168,6 +168,23 @@ impl<'tcx> assembly::GoalKind<'tcx> for TraitPredicate<'tcx> {\n \n             ty::Infer(_) | ty::Bound(_, _) => bug!(\"unexpected type `{self_ty}`\"),\n \n+            // Generators have one special built-in candidate, `Unpin`, which\n+            // takes precedence over the structural auto trait candidate being\n+            // assembled.\n+            ty::Generator(_, _, movability)\n+                if Some(goal.predicate.def_id()) == ecx.tcx().lang_items().unpin_trait() =>\n+            {\n+                match movability {\n+                    Movability::Static => {\n+                        return Err(NoSolution);\n+                    }\n+                    Movability::Movable => {\n+                        return ecx\n+                            .evaluate_added_goals_and_make_canonical_response(Certainty::Yes);\n+                    }\n+                }\n+            }\n+\n             // For rigid types, we only register a builtin auto implementation\n             // if there is no implementation that could ever apply to the self\n             // type."}, {"sha": "17e23f5bcd2faf50bf8cc2537f75ef04a3be675d", "filename": "tests/ui/generator/non-static-is-unpin.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b335c2d49f1698ada99e3622d3cd482c27c9fc9b/tests%2Fui%2Fgenerator%2Fnon-static-is-unpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b335c2d49f1698ada99e3622d3cd482c27c9fc9b/tests%2Fui%2Fgenerator%2Fnon-static-is-unpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerator%2Fnon-static-is-unpin.rs?ref=b335c2d49f1698ada99e3622d3cd482c27c9fc9b", "patch": "@@ -1,3 +1,5 @@\n+// revisions: current next\n+//[next] compile-flags: -Ztrait-solver=next\n // run-pass\n \n #![feature(generators, generator_trait)]"}, {"sha": "ecd8ca60c6f2c4ee8148df9ccf321eef9ba762fd", "filename": "tests/ui/generator/static-not-unpin.current.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b335c2d49f1698ada99e3622d3cd482c27c9fc9b/tests%2Fui%2Fgenerator%2Fstatic-not-unpin.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b335c2d49f1698ada99e3622d3cd482c27c9fc9b/tests%2Fui%2Fgenerator%2Fstatic-not-unpin.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerator%2Fstatic-not-unpin.current.stderr?ref=b335c2d49f1698ada99e3622d3cd482c27c9fc9b", "patch": "@@ -1,15 +1,15 @@\n-error[E0277]: `[static generator@$DIR/static-not-unpin.rs:11:25: 11:34]` cannot be unpinned\n-  --> $DIR/static-not-unpin.rs:14:18\n+error[E0277]: `[static generator@$DIR/static-not-unpin.rs:14:25: 14:34]` cannot be unpinned\n+  --> $DIR/static-not-unpin.rs:17:18\n    |\n LL |     assert_unpin(generator);\n-   |     ------------ ^^^^^^^^^ the trait `Unpin` is not implemented for `[static generator@$DIR/static-not-unpin.rs:11:25: 11:34]`\n+   |     ------------ ^^^^^^^^^ the trait `Unpin` is not implemented for `[static generator@$DIR/static-not-unpin.rs:14:25: 14:34]`\n    |     |\n    |     required by a bound introduced by this call\n    |\n    = note: consider using the `pin!` macro\n            consider using `Box::pin` if you need to access the pinned value outside of the current scope\n note: required by a bound in `assert_unpin`\n-  --> $DIR/static-not-unpin.rs:7:20\n+  --> $DIR/static-not-unpin.rs:10:20\n    |\n LL | fn assert_unpin<T: Unpin>(_: T) {\n    |                    ^^^^^ required by this bound in `assert_unpin`", "previous_filename": "tests/ui/generator/static-not-unpin.stderr"}, {"sha": "ecd8ca60c6f2c4ee8148df9ccf321eef9ba762fd", "filename": "tests/ui/generator/static-not-unpin.next.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b335c2d49f1698ada99e3622d3cd482c27c9fc9b/tests%2Fui%2Fgenerator%2Fstatic-not-unpin.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b335c2d49f1698ada99e3622d3cd482c27c9fc9b/tests%2Fui%2Fgenerator%2Fstatic-not-unpin.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerator%2Fstatic-not-unpin.next.stderr?ref=b335c2d49f1698ada99e3622d3cd482c27c9fc9b", "patch": "@@ -0,0 +1,19 @@\n+error[E0277]: `[static generator@$DIR/static-not-unpin.rs:14:25: 14:34]` cannot be unpinned\n+  --> $DIR/static-not-unpin.rs:17:18\n+   |\n+LL |     assert_unpin(generator);\n+   |     ------------ ^^^^^^^^^ the trait `Unpin` is not implemented for `[static generator@$DIR/static-not-unpin.rs:14:25: 14:34]`\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+   = note: consider using the `pin!` macro\n+           consider using `Box::pin` if you need to access the pinned value outside of the current scope\n+note: required by a bound in `assert_unpin`\n+  --> $DIR/static-not-unpin.rs:10:20\n+   |\n+LL | fn assert_unpin<T: Unpin>(_: T) {\n+   |                    ^^^^^ required by this bound in `assert_unpin`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "30d3f29187096bf2538f835e785f2ffb48dce36d", "filename": "tests/ui/generator/static-not-unpin.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b335c2d49f1698ada99e3622d3cd482c27c9fc9b/tests%2Fui%2Fgenerator%2Fstatic-not-unpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b335c2d49f1698ada99e3622d3cd482c27c9fc9b/tests%2Fui%2Fgenerator%2Fstatic-not-unpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerator%2Fstatic-not-unpin.rs?ref=b335c2d49f1698ada99e3622d3cd482c27c9fc9b", "patch": "@@ -1,3 +1,6 @@\n+// revisions: current next\n+//[next] compile-flags: -Ztrait-solver=next\n+\n #![feature(generators)]\n \n // normalize-stderr-test \"std::pin::Unpin\" -> \"std::marker::Unpin\""}]}