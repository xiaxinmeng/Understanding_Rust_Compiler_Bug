{"sha": "2fe50bc01bf9023b64a72407bb41a1f3b7245abd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZTUwYmMwMWJmOTAyM2I2NGE3MjQwN2JiNDFhMWYzYjcyNDVhYmQ=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-05-03T04:04:26Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-05-03T04:04:26Z"}, "message": "Propagate mutability from arguments to local bindings in async fn", "tree": {"sha": "546935c0bf0b17391e7dc28e03c610e46b2fc9ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/546935c0bf0b17391e7dc28e03c610e46b2fc9ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fe50bc01bf9023b64a72407bb41a1f3b7245abd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fe50bc01bf9023b64a72407bb41a1f3b7245abd", "html_url": "https://github.com/rust-lang/rust/commit/2fe50bc01bf9023b64a72407bb41a1f3b7245abd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fe50bc01bf9023b64a72407bb41a1f3b7245abd/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d15fc173818ccea6f8d97af13a30d454f9e4b35c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d15fc173818ccea6f8d97af13a30d454f9e4b35c", "html_url": "https://github.com/rust-lang/rust/commit/d15fc173818ccea6f8d97af13a30d454f9e4b35c"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "c5173aa556953368f5eb47683bd4850cacc3dafd", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2fe50bc01bf9023b64a72407bb41a1f3b7245abd/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fe50bc01bf9023b64a72407bb41a1f3b7245abd/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=2fe50bc01bf9023b64a72407bb41a1f3b7245abd", "patch": "@@ -8725,9 +8725,9 @@ impl<'a> Parser<'a> {\n                 // Check if this is a ident pattern, if so, we can optimize and avoid adding a\n                 // `let <pat> = __argN;` statement, instead just adding a `let <pat> = <pat>;`\n                 // statement.\n-                let (ident, is_simple_pattern) = match input.pat.node {\n-                    PatKind::Ident(_, ident, _) => (ident, true),\n-                    _ => (ident, false),\n+                let (binding_mode, ident, is_simple_pattern) = match input.pat.node {\n+                    PatKind::Ident(binding_mode, ident, _) => (binding_mode, ident, true),\n+                    _ => (BindingMode::ByValue(Mutability::Immutable), ident, false),\n                 };\n \n                 // Construct an argument representing `__argN: <ty>` to replace the argument of the\n@@ -8755,9 +8755,7 @@ impl<'a> Parser<'a> {\n                 let move_local = Local {\n                     pat: P(Pat {\n                         id,\n-                        node: PatKind::Ident(\n-                            BindingMode::ByValue(Mutability::Immutable), ident, None,\n-                        ),\n+                        node: PatKind::Ident(binding_mode, ident, None),\n                         span,\n                     }),\n                     // We explicitly do not specify the type for this statement. When the user's"}, {"sha": "4d6dba74097ca77f240a4d6ff436b5466882924e", "filename": "src/test/ui/async-await/mutable-arguments.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2fe50bc01bf9023b64a72407bb41a1f3b7245abd/src%2Ftest%2Fui%2Fasync-await%2Fmutable-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fe50bc01bf9023b64a72407bb41a1f3b7245abd/src%2Ftest%2Fui%2Fasync-await%2Fmutable-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fmutable-arguments.rs?ref=2fe50bc01bf9023b64a72407bb41a1f3b7245abd", "patch": "@@ -0,0 +1,10 @@\n+// edition:2018\n+// run-pass\n+\n+#![feature(async_await)]\n+\n+async fn foo(n: u32, mut vec: Vec<u32>) {\n+    vec.push(n);\n+}\n+\n+fn main() {}"}]}