{"sha": "a6eeb75120876e968f7d5adabbc7fcd6cc000c98", "node_id": "C_kwDOAAsO6NoAKGE2ZWViNzUxMjA4NzZlOTY4ZjdkNWFkYWJiYzdmY2Q2Y2MwMDBjOTg", "commit": {"author": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2021-10-14T14:40:57Z"}, "committer": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2021-10-14T15:20:11Z"}, "message": "Use workspace cargo to fetch rust source's metadata\n\nPreviously the detected cargo is the global one, as it uses the\ndirectory of the rust source which doesn't pick up the local override\n\nThis fixes the case in clippy where the local rust toolchain is a recent\nnightly that has a 2021 edition Cargo.toml. The global (stable) cargo\nreturns an error attempting to parse it\n\nFixes #10445", "tree": {"sha": "dc5b16a49b99278f4891b5029ccedd95ca9aceb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc5b16a49b99278f4891b5029ccedd95ca9aceb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6eeb75120876e968f7d5adabbc7fcd6cc000c98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6eeb75120876e968f7d5adabbc7fcd6cc000c98", "html_url": "https://github.com/rust-lang/rust/commit/a6eeb75120876e968f7d5adabbc7fcd6cc000c98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6eeb75120876e968f7d5adabbc7fcd6cc000c98/comments", "author": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a30941e2a553156ef891fa38d6241535eac3ce6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a30941e2a553156ef891fa38d6241535eac3ce6f", "html_url": "https://github.com/rust-lang/rust/commit/a30941e2a553156ef891fa38d6241535eac3ce6f"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "13ff20c8c678fcf2c78fc2885616eab4cc86904d", "filename": "crates/project_model/src/cargo_workspace.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6eeb75120876e968f7d5adabbc7fcd6cc000c98/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6eeb75120876e968f7d5adabbc7fcd6cc000c98/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs?ref=a6eeb75120876e968f7d5adabbc7fcd6cc000c98", "patch": "@@ -251,6 +251,7 @@ struct PackageMetadata {\n impl CargoWorkspace {\n     pub fn fetch_metadata(\n         cargo_toml: &ManifestPath,\n+        current_dir: &AbsPath,\n         config: &CargoConfig,\n         progress: &dyn Fn(String),\n     ) -> Result<cargo_metadata::Metadata> {\n@@ -275,7 +276,7 @@ impl CargoWorkspace {\n                 meta.features(CargoOpt::SomeFeatures(config.features.clone()));\n             }\n         }\n-        meta.current_dir(cargo_toml.parent().as_os_str());\n+        meta.current_dir(current_dir.as_os_str());\n \n         if let Some(target) = target {\n             meta.other_options(vec![String::from(\"--filter-platform\"), target]);"}, {"sha": "339fdfcc9be42894c606d44852e1b7eda6f8c74c", "filename": "crates/project_model/src/workspace.rs", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/a6eeb75120876e968f7d5adabbc7fcd6cc000c98/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6eeb75120876e968f7d5adabbc7fcd6cc000c98/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fworkspace.rs?ref=a6eeb75120876e968f7d5adabbc7fcd6cc000c98", "patch": "@@ -160,14 +160,19 @@ impl ProjectWorkspace {\n                     cmd\n                 })?;\n \n-                let meta = CargoWorkspace::fetch_metadata(&cargo_toml, config, progress)\n-                    .with_context(|| {\n-                        format!(\n-                            \"Failed to read Cargo metadata from Cargo.toml file {}, {}\",\n-                            cargo_toml.display(),\n-                            cargo_version\n-                        )\n-                    })?;\n+                let meta = CargoWorkspace::fetch_metadata(\n+                    &cargo_toml,\n+                    cargo_toml.parent(),\n+                    config,\n+                    progress,\n+                )\n+                .with_context(|| {\n+                    format!(\n+                        \"Failed to read Cargo metadata from Cargo.toml file {}, {}\",\n+                        cargo_toml.display(),\n+                        cargo_version\n+                    )\n+                })?;\n                 let cargo = CargoWorkspace::new(meta);\n \n                 let sysroot = if config.no_sysroot {\n@@ -189,10 +194,15 @@ impl ProjectWorkspace {\n \n                 let rustc = match rustc_dir {\n                     Some(rustc_dir) => Some({\n-                        let meta = CargoWorkspace::fetch_metadata(&rustc_dir, config, progress)\n-                            .with_context(|| {\n-                                \"Failed to read Cargo metadata for Rust sources\".to_string()\n-                            })?;\n+                        let meta = CargoWorkspace::fetch_metadata(\n+                            &rustc_dir,\n+                            cargo_toml.parent(),\n+                            config,\n+                            progress,\n+                        )\n+                        .with_context(|| {\n+                            \"Failed to read Cargo metadata for Rust sources\".to_string()\n+                        })?;\n                         CargoWorkspace::new(meta)\n                     }),\n                     None => None,"}]}