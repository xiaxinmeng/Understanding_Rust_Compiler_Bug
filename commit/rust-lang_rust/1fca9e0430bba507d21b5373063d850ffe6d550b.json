{"sha": "1fca9e0430bba507d21b5373063d850ffe6d550b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmY2E5ZTA0MzBiYmE1MDdkMjFiNTM3MzA2M2Q4NTBmZmU2ZDU1MGI=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-02-28T20:12:15Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-03-05T20:43:44Z"}, "message": "Don't check in-tree deps", "tree": {"sha": "4018a199d85dfd40778739c41b00d34a209c494f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4018a199d85dfd40778739c41b00d34a209c494f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fca9e0430bba507d21b5373063d850ffe6d550b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fca9e0430bba507d21b5373063d850ffe6d550b", "html_url": "https://github.com/rust-lang/rust/commit/1fca9e0430bba507d21b5373063d850ffe6d550b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fca9e0430bba507d21b5373063d850ffe6d550b/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18f0533c4cf5e320df1f2e8724f98f550ca65130", "url": "https://api.github.com/repos/rust-lang/rust/commits/18f0533c4cf5e320df1f2e8724f98f550ca65130", "html_url": "https://github.com/rust-lang/rust/commit/18f0533c4cf5e320df1f2e8724f98f550ca65130"}], "stats": {"total": 51, "additions": 12, "deletions": 39}, "files": [{"sha": "f22f8ac8efc70d20a09d6748e28d2e140318475d", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 12, "deletions": 39, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/1fca9e0430bba507d21b5373063d850ffe6d550b/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fca9e0430bba507d21b5373063d850ffe6d550b/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=1fca9e0430bba507d21b5373063d850ffe6d550b", "patch": "@@ -56,61 +56,27 @@ static WHITELIST_CRATES: &'static [CrateVersion] = &[\n \n /// Whitelist of crates rustc is allowed to depend on. Avoid adding to the list if possible.\n static WHITELIST: &'static [Crate] = &[\n-//    Crate(\"ar\"),\n-//    Crate(\"arena\"),\n //    Crate(\"backtrace\"),\n //    Crate(\"backtrace-sys\"),\n //    Crate(\"bitflags\"),\n-//    Crate(\"build_helper\"),\n //    Crate(\"byteorder\"),\n //    Crate(\"cc\"),\n //    Crate(\"cfg-if\"),\n-//    Crate(\"cmake\"),\n-//    Crate(\"filetime\"),\n //    Crate(\"flate2\"),\n-//    Crate(\"fmt_macros\"),\n //    Crate(\"fuchsia-zircon\"),\n //    Crate(\"fuchsia-zircon-sys\"),\n-//    Crate(\"graphviz\"),\n //    Crate(\"jobserver\"),\n-//    Crate(\"kernel32-sys\"),\n //    Crate(\"lazy_static\"),\n //    Crate(\"libc\"),\n //    Crate(\"log\"),\n-//    Crate(\"log_settings\"),\n //    Crate(\"miniz-sys\"),\n //    Crate(\"num_cpus\"),\n-//    Crate(\"owning_ref\"),\n-//    Crate(\"parking_lot\"),\n-//    Crate(\"parking_lot_core\"),\n //    Crate(\"rand\"),\n-//    Crate(\"redox_syscall\"),\n //    Crate(\"rustc\"),\n //    Crate(\"rustc-demangle\"),\n-//    Crate(\"rustc_allocator\"),\n-//    Crate(\"rustc_apfloat\"),\n-//    Crate(\"rustc_back\"),\n-//    Crate(\"rustc_binaryen\"),\n-//    Crate(\"rustc_const_eval\"),\n-//    Crate(\"rustc_const_math\"),\n-//    Crate(\"rustc_cratesio_shim\"),\n-//    Crate(\"rustc_data_structures\"),\n-//    Crate(\"rustc_errors\"),\n-//    Crate(\"rustc_incremental\"),\n-//    Crate(\"rustc_llvm\"),\n-//    Crate(\"rustc_mir\"),\n-//    Crate(\"rustc_platform_intrinsics\"),\n //    Crate(\"rustc_trans\"),\n-//    Crate(\"rustc_trans_utils\"),\n-//    Crate(\"serialize\"),\n-//    Crate(\"smallvec\"),\n-//    Crate(\"stable_deref_trait\"),\n-//    Crate(\"syntax\"),\n-//    Crate(\"syntax_pos\"),\n //    Crate(\"tempdir\"),\n-//    Crate(\"unicode-width\"),\n //    Crate(\"winapi\"),\n-//    Crate(\"winapi-build\"),\n //    Crate(\"winapi-i686-pc-windows-gnu\"),\n //    Crate(\"winapi-x86_64-pc-windows-gnu\"),\n ];\n@@ -147,12 +113,16 @@ impl<'a> Crate<'a> {\n }\n \n impl<'a> CrateVersion<'a> {\n-    pub fn from_str(s: &'a str) -> Self {\n+    /// Returns the struct and whether or not the dep is in-tree\n+    pub fn from_str(s: &'a str) -> (Self, bool) {\n         let mut parts = s.split(\" \");\n         let name = parts.next().unwrap();\n         let version = parts.next().unwrap();\n+        let path = parts.next().unwrap();\n \n-        CrateVersion(name, version)\n+        let is_path_dep = path.starts_with(\"(path+\");\n+\n+        (CrateVersion(name, version), is_path_dep)\n     }\n \n     pub fn id_str(&self) -> String {\n@@ -310,10 +280,13 @@ fn check_crate_whitelist<'a, 'b>(\n         .expect(\"crate does not exist\");\n \n     for dep in to_check.dependencies.iter() {\n-        let krate = CrateVersion::from_str(dep);\n-        let mut bad = check_crate_whitelist(whitelist, resolve, visited, krate);\n+        let (krate, is_path_dep) = CrateVersion::from_str(dep);\n \n-        unapproved.append(&mut bad);\n+        // We don't check in-tree deps\n+        if !is_path_dep {\n+            let mut bad = check_crate_whitelist(whitelist, resolve, visited, krate);\n+            unapproved.append(&mut bad);\n+        }\n     }\n \n     unapproved"}]}