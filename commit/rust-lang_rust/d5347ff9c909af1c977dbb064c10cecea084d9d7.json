{"sha": "d5347ff9c909af1c977dbb064c10cecea084d9d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MzQ3ZmY5YzkwOWFmMWM5NzdkYmIwNjRjMTBjZWNlYTA4NGQ5ZDc=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-07-26T13:08:56Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-07-26T13:08:56Z"}, "message": "Fix ui test", "tree": {"sha": "0c9ee7539401353dfdbc017e8572b1ae30b59a61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c9ee7539401353dfdbc017e8572b1ae30b59a61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5347ff9c909af1c977dbb064c10cecea084d9d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5347ff9c909af1c977dbb064c10cecea084d9d7", "html_url": "https://github.com/rust-lang/rust/commit/d5347ff9c909af1c977dbb064c10cecea084d9d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5347ff9c909af1c977dbb064c10cecea084d9d7/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20151ca7169e9f94d9efe682eee4719d4b4ccdf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/20151ca7169e9f94d9efe682eee4719d4b4ccdf3", "html_url": "https://github.com/rust-lang/rust/commit/20151ca7169e9f94d9efe682eee4719d4b4ccdf3"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "f06d7360d85b09cdb5efe8deaedcf878e755c995", "filename": "src/test/ui/issue-13033.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d5347ff9c909af1c977dbb064c10cecea084d9d7/src%2Ftest%2Fui%2Fissue-13033.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5347ff9c909af1c977dbb064c10cecea084d9d7/src%2Ftest%2Fui%2Fissue-13033.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13033.stderr?ref=d5347ff9c909af1c977dbb064c10cecea084d9d7", "patch": "@@ -9,6 +9,10 @@ LL |     fn bar(&mut self, other: &Foo) {}\n    |\n    = note: expected type `fn(&mut Baz, &mut dyn Foo)`\n               found type `fn(&mut Baz, &dyn Foo)`\n+help: consider change the type to match the mutability in trait\n+   |\n+LL |     fn bar(&mut self, other: &mut Foo) {}\n+   |                              ^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "f707a600f29e34d989996198e46f123e74fcd614", "filename": "src/test/ui/mismatched_types/E0053.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d5347ff9c909af1c977dbb064c10cecea084d9d7/src%2Ftest%2Fui%2Fmismatched_types%2FE0053.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5347ff9c909af1c977dbb064c10cecea084d9d7/src%2Ftest%2Fui%2Fmismatched_types%2FE0053.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2FE0053.stderr?ref=d5347ff9c909af1c977dbb064c10cecea084d9d7", "patch": "@@ -21,6 +21,10 @@ LL |     fn bar(&mut self) { }\n    |\n    = note: expected type `fn(&Bar)`\n               found type `fn(&mut Bar)`\n+help: consider change the type to match the mutability in trait\n+   |\n+LL |     fn bar(&self) { }\n+   |            ^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "631af21cac5ca893ffdbd862766d943bbcb3512e", "filename": "src/test/ui/mismatched_types/trait-impl-fn-incompatibility.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d5347ff9c909af1c977dbb064c10cecea084d9d7/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5347ff9c909af1c977dbb064c10cecea084d9d7/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.stderr?ref=d5347ff9c909af1c977dbb064c10cecea084d9d7", "patch": "@@ -21,6 +21,10 @@ LL |     fn bar(&mut self, bar: &Bar) { } //~ ERROR incompatible type\n    |\n    = note: expected type `fn(&mut Bar, &mut Bar)`\n               found type `fn(&mut Bar, &Bar)`\n+help: consider change the type to match the mutability in trait\n+   |\n+LL |     fn bar(&mut self, bar: &mut Bar) { } //~ ERROR incompatible type\n+   |                            ^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}]}