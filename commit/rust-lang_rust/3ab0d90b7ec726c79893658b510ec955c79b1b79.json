{"sha": "3ab0d90b7ec726c79893658b510ec955c79b1b79", "node_id": "C_kwDOAAsO6NoAKDNhYjBkOTBiN2VjNzI2Yzc5ODkzNjU4YjUxMGVjOTU1Yzc5YjFiNzk", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-03-31T11:39:27Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-05-28T10:26:30Z"}, "message": "Stabilize String::leak", "tree": {"sha": "eca634402514cfa9986d823bac7fb6d360c109da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eca634402514cfa9986d823bac7fb6d360c109da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ab0d90b7ec726c79893658b510ec955c79b1b79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ab0d90b7ec726c79893658b510ec955c79b1b79", "html_url": "https://github.com/rust-lang/rust/commit/3ab0d90b7ec726c79893658b510ec955c79b1b79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ab0d90b7ec726c79893658b510ec955c79b1b79/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddad0576caf8d0515ed453e04b468977c7d3dfc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddad0576caf8d0515ed453e04b468977c7d3dfc1", "html_url": "https://github.com/rust-lang/rust/commit/ddad0576caf8d0515ed453e04b468977c7d3dfc1"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "0e5a4eea604890b5c87cca43ad692709434a2b88", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3ab0d90b7ec726c79893658b510ec955c79b1b79/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ab0d90b7ec726c79893658b510ec955c79b1b79/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=3ab0d90b7ec726c79893658b510ec955c79b1b79", "patch": "@@ -1853,26 +1853,27 @@ impl String {\n     /// Consumes and leaks the `String`, returning a mutable reference to the contents,\n     /// `&'a mut str`.\n     ///\n-    /// This is mainly useful for data that lives for the remainder of\n-    /// the program's life. Dropping the returned reference will cause a memory\n-    /// leak.\n+    /// The caller has free choice over the returned lifetime, including `'static`. Indeed,\n+    /// this function is ideally used for data that lives for the remainder of the program's life,\n+    /// as dropping the returned reference will cause a memory leak.\n     ///\n     /// It does not reallocate or shrink the `String`,\n     /// so the leaked allocation may include unused capacity that is not part\n-    /// of the returned slice.\n+    /// of the returned slice. If you don't want that, call [`into_boxed_str`],\n+    /// and then [`Box::leak`].\n+    ///\n+    /// [`into_boxed_str`]: Self::into_boxed_str\n     ///\n     /// # Examples\n     ///\n     /// Simple usage:\n     ///\n     /// ```\n-    /// #![feature(string_leak)]\n-    ///\n     /// let x = String::from(\"bucket\");\n     /// let static_ref: &'static mut str = x.leak();\n     /// assert_eq!(static_ref, \"bucket\");\n     /// ```\n-    #[unstable(feature = \"string_leak\", issue = \"102929\")]\n+    #[stable(feature = \"string_leak\", since = \"CURRENT_RUSTC_VERSION\")]\n     #[inline]\n     pub fn leak<'a>(self) -> &'a mut str {\n         let slice = self.vec.leak();"}]}