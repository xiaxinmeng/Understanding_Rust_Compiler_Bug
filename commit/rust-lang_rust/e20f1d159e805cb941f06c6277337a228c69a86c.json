{"sha": "e20f1d159e805cb941f06c6277337a228c69a86c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMGYxZDE1OWU4MDVjYjk0MWYwNmM2Mjc3MzM3YTIyOGM2OWE4NmM=", "commit": {"author": {"name": "Robin Kruppe", "email": "robin.kruppe@gmail.com", "date": "2018-07-13T13:51:25Z"}, "committer": {"name": "Robin Kruppe", "email": "robin.kruppe@gmail.com", "date": "2018-07-13T15:09:09Z"}, "message": "Fix typo in improper_ctypes suggestion\n\ncloses #52345", "tree": {"sha": "bbb836292b07f2e0b6156e55b555108ef5d87a30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbb836292b07f2e0b6156e55b555108ef5d87a30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e20f1d159e805cb941f06c6277337a228c69a86c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e20f1d159e805cb941f06c6277337a228c69a86c", "html_url": "https://github.com/rust-lang/rust/commit/e20f1d159e805cb941f06c6277337a228c69a86c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e20f1d159e805cb941f06c6277337a228c69a86c/comments", "author": null, "committer": null, "parents": [{"sha": "c0955a34bcb17f0b31d7b86522a520ebe7fa93ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0955a34bcb17f0b31d7b86522a520ebe7fa93ac", "html_url": "https://github.com/rust-lang/rust/commit/c0955a34bcb17f0b31d7b86522a520ebe7fa93ac"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e5bd6a7f610f3bb40e566ff511484638d5e4e458", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e20f1d159e805cb941f06c6277337a228c69a86c/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e20f1d159e805cb941f06c6277337a228c69a86c/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=e20f1d159e805cb941f06c6277337a228c69a86c", "patch": "@@ -673,7 +673,7 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n                         return FfiUnsafe {\n                             ty: ty,\n                             reason: \"this function pointer has Rust-specific calling convention\",\n-                            help: Some(\"consider using an `fn \\\"extern\\\"(...) -> ...` \\\n+                            help: Some(\"consider using an `extern fn(...) -> ...` \\\n                                         function pointer instead\"),\n                         }\n                     }"}, {"sha": "b97e4662660fbd5c5236d5cca266c83a619beda6", "filename": "src/test/ui/lint-ctypes.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e20f1d159e805cb941f06c6277337a228c69a86c/src%2Ftest%2Fui%2Flint-ctypes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e20f1d159e805cb941f06c6277337a228c69a86c/src%2Ftest%2Fui%2Flint-ctypes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint-ctypes.stderr?ref=e20f1d159e805cb941f06c6277337a228c69a86c", "patch": "@@ -126,15 +126,15 @@ error: `extern` block uses type `fn()` which is not FFI-safe: this function poin\n LL |     pub fn fn_type(p: RustFn); //~ ERROR function pointer has Rust-specific\n    |                       ^^^^^^\n    |\n-   = help: consider using an `fn \"extern\"(...) -> ...` function pointer instead\n+   = help: consider using an `extern fn(...) -> ...` function pointer instead\n \n error: `extern` block uses type `fn()` which is not FFI-safe: this function pointer has Rust-specific calling convention\n   --> $DIR/lint-ctypes.rs:70:24\n    |\n LL |     pub fn fn_type2(p: fn()); //~ ERROR function pointer has Rust-specific\n    |                        ^^^^\n    |\n-   = help: consider using an `fn \"extern\"(...) -> ...` function pointer instead\n+   = help: consider using an `extern fn(...) -> ...` function pointer instead\n \n error: `extern` block uses type `std::boxed::Box<u32>` which is not FFI-safe: this struct has unspecified layout\n   --> $DIR/lint-ctypes.rs:71:28"}]}