{"sha": "245062cdcd9907bd7f71822f958219dc8ce994d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NTA2MmNkY2Q5OTA3YmQ3ZjcxODIyZjk1ODIxOWRjOGNlOTk0ZDI=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2020-01-24T18:13:45Z"}, "committer": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2020-02-22T19:11:15Z"}, "message": "some fixes", "tree": {"sha": "84d5f9a5cb37498c891fd9894c1288c9e2cbf3c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84d5f9a5cb37498c891fd9894c1288c9e2cbf3c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/245062cdcd9907bd7f71822f958219dc8ce994d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/245062cdcd9907bd7f71822f958219dc8ce994d2", "html_url": "https://github.com/rust-lang/rust/commit/245062cdcd9907bd7f71822f958219dc8ce994d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/245062cdcd9907bd7f71822f958219dc8ce994d2/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d22e757cd97d1a69ed8ddda7d346355ce466255", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d22e757cd97d1a69ed8ddda7d346355ce466255", "html_url": "https://github.com/rust-lang/rust/commit/4d22e757cd97d1a69ed8ddda7d346355ce466255"}], "stats": {"total": 26, "additions": 6, "deletions": 20}, "files": [{"sha": "07c7ccfd16da283e348d70b6de509d523d28adbb", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/245062cdcd9907bd7f71822f958219dc8ce994d2/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245062cdcd9907bd7f71822f958219dc8ce994d2/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=245062cdcd9907bd7f71822f958219dc8ce994d2", "patch": "@@ -1518,13 +1518,10 @@ impl<'tcx> TyCtxt<'tcx> {\n         &self,\n         def_id: crate::hir::def_id::DefId,\n     ) -> (&'static str, &'static str) {\n-        self.def_kind(def_id).map_or_else(\n-            || {\n-                // TODO: is it a problem to try to use the ty here?\n-                self.type_of(def_id).kind.article_and_description()\n-            },\n-            |def_kind| (def_kind.article(), def_kind.descr(def_id)),\n-        )\n+        match self.def_kind(def_id) {\n+            Some(def_kind) => (def_kind.article(), def_kind.descr(def_id)),\n+            None => self.type_of(def_id).kind.article_and_description(),\n+        }\n     }\n }\n "}, {"sha": "83669a53eb4ac6dc5378ed296edbeb7b61b12d53", "filename": "src/librustc_mir/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/245062cdcd9907bd7f71822f958219dc8ce994d2/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245062cdcd9907bd7f71822f958219dc8ce994d2/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=245062cdcd9907bd7f71822f958219dc8ce994d2", "patch": "@@ -1275,18 +1275,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n     ) -> DiagnosticBuilder<'cx> {\n         let tcx = self.infcx.tcx;\n \n-        let escapes_from = if tcx.is_closure(self.mir_def_id) {\n-            let tables = tcx.typeck_tables_of(self.mir_def_id);\n-            let mir_hir_id = tcx.hir().def_index_to_hir_id(self.mir_def_id.index);\n-            match tables.node_type(mir_hir_id).kind {\n-                ref kind @ ty::Closure(..) | ref kind @ ty::Generator(..) => {\n-                    kind.article_and_description().1\n-                }\n-                _ => bug!(\"Closure body doesn't have a closure or generator type\"),\n-            }\n-        } else {\n-            \"function\"\n-        };\n+        let (_, escapes_from) = tcx.article_and_description(self.mir_def_id);\n \n         let mut err =\n             borrowck_errors::borrowed_data_escapes_closure(tcx, escape_span, escapes_from);"}, {"sha": "f4089b26860848036e2ea9d3c178eb595841254b", "filename": "src/librustc_mir/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/245062cdcd9907bd7f71822f958219dc8ce994d2/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245062cdcd9907bd7f71822f958219dc8ce994d2/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=245062cdcd9907bd7f71822f958219dc8ce994d2", "patch": "@@ -435,7 +435,7 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n         if (fr_name_and_span.is_none() && outlived_fr_name_and_span.is_none())\n             || (*category == ConstraintCategory::Assignment\n                 && self.universal_regions.defining_ty.is_fn_def())\n-            || self.universal_regions.defining_ty.is_closure()\n+            || self.universal_regions.defining_ty.is_const()\n         {\n             return self.report_general_error(&ErrorConstraintInfo {\n                 fr_is_local: true,"}]}