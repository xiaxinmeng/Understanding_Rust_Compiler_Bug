{"sha": "d83c5f7b1b5db74348c9d80a047364d10f2bc82d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4M2M1ZjdiMWI1ZGI3NDM0OGM5ZDgwYTA0NzM2NGQxMGYyYmM4MmQ=", "commit": {"author": {"name": "Michael Letterle", "email": "michael.letterle@gmail.com", "date": "2013-10-22T01:23:00Z"}, "committer": {"name": "Michael Letterle", "email": "michael.letterle@gmail.com", "date": "2013-10-22T18:30:27Z"}, "message": "Minor grammatical fixes and removed section on 'rust' tool", "tree": {"sha": "2b757bc7ccc243f797f35810cde3774f8f645bdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b757bc7ccc243f797f35810cde3774f8f645bdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d83c5f7b1b5db74348c9d80a047364d10f2bc82d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d83c5f7b1b5db74348c9d80a047364d10f2bc82d", "html_url": "https://github.com/rust-lang/rust/commit/d83c5f7b1b5db74348c9d80a047364d10f2bc82d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d83c5f7b1b5db74348c9d80a047364d10f2bc82d/comments", "author": {"login": "mletterle", "id": 3096, "node_id": "MDQ6VXNlcjMwOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mletterle", "html_url": "https://github.com/mletterle", "followers_url": "https://api.github.com/users/mletterle/followers", "following_url": "https://api.github.com/users/mletterle/following{/other_user}", "gists_url": "https://api.github.com/users/mletterle/gists{/gist_id}", "starred_url": "https://api.github.com/users/mletterle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mletterle/subscriptions", "organizations_url": "https://api.github.com/users/mletterle/orgs", "repos_url": "https://api.github.com/users/mletterle/repos", "events_url": "https://api.github.com/users/mletterle/events{/privacy}", "received_events_url": "https://api.github.com/users/mletterle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mletterle", "id": 3096, "node_id": "MDQ6VXNlcjMwOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mletterle", "html_url": "https://github.com/mletterle", "followers_url": "https://api.github.com/users/mletterle/followers", "following_url": "https://api.github.com/users/mletterle/following{/other_user}", "gists_url": "https://api.github.com/users/mletterle/gists{/gist_id}", "starred_url": "https://api.github.com/users/mletterle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mletterle/subscriptions", "organizations_url": "https://api.github.com/users/mletterle/orgs", "repos_url": "https://api.github.com/users/mletterle/repos", "events_url": "https://api.github.com/users/mletterle/events{/privacy}", "received_events_url": "https://api.github.com/users/mletterle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd2c0128a7dd3cb19eda253acd01cd7905d1c7dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd2c0128a7dd3cb19eda253acd01cd7905d1c7dc", "html_url": "https://github.com/rust-lang/rust/commit/fd2c0128a7dd3cb19eda253acd01cd7905d1c7dc"}], "stats": {"total": 22, "additions": 3, "deletions": 19}, "files": [{"sha": "fd2da43a037f77679a60f9157dce478d56a819d2", "filename": "doc/rust.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d83c5f7b1b5db74348c9d80a047364d10f2bc82d/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/d83c5f7b1b5db74348c9d80a047364d10f2bc82d/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=d83c5f7b1b5db74348c9d80a047364d10f2bc82d", "patch": "@@ -3168,7 +3168,7 @@ Raw pointers (`*`)\n   : Raw pointers are pointers without safety or liveness guarantees.\n     Raw pointers are written `*content`,\n     for example `*int` means a raw pointer to an integer.\n-    Copying or dropping a raw pointer is has no effect on the lifecycle of any other value.\n+    Copying or dropping a raw pointer has no effect on the lifecycle of any other value.\n     Dereferencing a raw pointer or converting it to any other pointer type is an [`unsafe` operation](#unsafe-functions).\n     Raw pointers are generally discouraged in Rust code;\n     they exist to support interoperability with foreign code,"}, {"sha": "7451919c5becf3e37cd26aae1b72b2df0b861b41", "filename": "doc/tutorial.md", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d83c5f7b1b5db74348c9d80a047364d10f2bc82d/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/d83c5f7b1b5db74348c9d80a047364d10f2bc82d/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=d83c5f7b1b5db74348c9d80a047364d10f2bc82d", "patch": "@@ -151,22 +151,6 @@ declaration to appear at the top level of the file: all statements must\n live inside a function.  Rust programs can also be compiled as\n libraries, and included in other programs.\n \n-## Using the rust tool\n-\n-While using `rustc` directly to generate your executables, and then\n-running them manually is a perfectly valid way to test your code,\n-for smaller projects, prototypes, or if you're a beginner, it might be\n-more convenient to use the `rust` tool.\n-\n-The `rust` tool provides central access to the other rust tools,\n-as well as handy shortcuts for directly running source files.\n-For example, if you have a file `foo.rs` in your current directory,\n-`rust run foo.rs` would attempt to compile it and, if successful,\n-directly run the resulting binary.\n-\n-To get a list of all available commands, simply call `rust` without any\n-argument.\n-\n ## Editing Rust code\n \n There are vim highlighting and indentation scripts in the Rust source"}, {"sha": "f78a20dd111cba4df1365129652b563359d3d626", "filename": "src/libstd/rt/io/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d83c5f7b1b5db74348c9d80a047364d10f2bc82d/src%2Flibstd%2Frt%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d83c5f7b1b5db74348c9d80a047364d10f2bc82d/src%2Flibstd%2Frt%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fmod.rs?ref=d83c5f7b1b5db74348c9d80a047364d10f2bc82d", "patch": "@@ -12,8 +12,8 @@\n \n This module defines the Rust interface for synchronous I/O.\n It models byte-oriented input and output with the Reader and Writer traits.\n-Types that implement both `Reader` and `Writer` and called 'streams',\n-and automatically implement trait `Stream`.\n+Types that implement both `Reader` and `Writer` are called 'streams',\n+and automatically implement the `Stream` trait.\n Implementations are provided for common I/O streams like\n file, TCP, UDP, Unix domain sockets.\n Readers and Writers may be composed to add capabilities like string"}]}