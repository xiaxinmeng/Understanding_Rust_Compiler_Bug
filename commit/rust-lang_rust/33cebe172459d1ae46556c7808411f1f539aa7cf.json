{"sha": "33cebe172459d1ae46556c7808411f1f539aa7cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzY2ViZTE3MjQ1OWQxYWU0NjU1NmM3ODA4NDExZjFmNTM5YWE3Y2Y=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-27T10:49:04Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-27T10:49:04Z"}, "message": "Work around for issue in vscode reporting a failure in request\n\nvscode would report \"A request has failed\" when it got \"Content modified\"\nmessage and this would cause a pop-up to appear. This works around the issue by\nreturning an \"empty\" response that vscode can ignore.", "tree": {"sha": "86c9b76381ad0731878e684fab5a46a983a70dcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86c9b76381ad0731878e684fab5a46a983a70dcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33cebe172459d1ae46556c7808411f1f539aa7cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33cebe172459d1ae46556c7808411f1f539aa7cf", "html_url": "https://github.com/rust-lang/rust/commit/33cebe172459d1ae46556c7808411f1f539aa7cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33cebe172459d1ae46556c7808411f1f539aa7cf/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4248b39993e2446c66f732ae9e45fb2f564099f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4248b39993e2446c66f732ae9e45fb2f564099f5", "html_url": "https://github.com/rust-lang/rust/commit/4248b39993e2446c66f732ae9e45fb2f564099f5"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "dfd9eeeb40f80eb3a864abbbecd9bcd5400a76e5", "filename": "crates/gen_lsp_server/src/msg.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/33cebe172459d1ae46556c7808411f1f539aa7cf/crates%2Fgen_lsp_server%2Fsrc%2Fmsg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33cebe172459d1ae46556c7808411f1f539aa7cf/crates%2Fgen_lsp_server%2Fsrc%2Fmsg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fgen_lsp_server%2Fsrc%2Fmsg.rs?ref=33cebe172459d1ae46556c7808411f1f539aa7cf", "patch": "@@ -120,6 +120,11 @@ impl RawResponse {\n         let error = RawResponseError { code, message, data: None };\n         RawResponse { id, result: None, error: Some(error) }\n     }\n+    /// Returns an \"empty\" RawResponse\n+    /// Empty response still has a value `()` in its `result` field.\n+    pub fn empty(id: u64) -> RawResponse {\n+        RawResponse { id, result: Some(to_value(&()).unwrap()), error: None }\n+    }\n }\n \n impl RawNotification {"}, {"sha": "1baeff26654c7c1ab26c8482f1d98afc1868f4d8", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/33cebe172459d1ae46556c7808411f1f539aa7cf/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33cebe172459d1ae46556c7808411f1f539aa7cf/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=33cebe172459d1ae46556c7808411f1f539aa7cf", "patch": "@@ -416,11 +416,17 @@ impl<'a> PoolDispatcher<'a> {\n                             }\n                             Err(e) => {\n                                 if is_canceled(&e) {\n-                                    RawResponse::err(\n-                                        id,\n-                                        ErrorCode::ContentModified as i32,\n-                                        \"content modified\".to_string(),\n-                                    )\n+                                    // FIXME: When https://github.com/Microsoft/vscode-languageserver-node/issues/457\n+                                    // gets fixed, we can return the proper response.\n+                                    // This works around the issue where \"content modified\" error would continuously\n+                                    // show an message pop-up in VsCode\n+                                    // RawResponse::err(\n+                                    //     id,\n+                                    //     ErrorCode::ContentModified as i32,\n+                                    //     \"content modified\".to_string(),\n+                                    // )\n+                                    RawResponse::empty(id)\n+\n                                 } else {\n                                     RawResponse::err(\n                                         id,"}]}