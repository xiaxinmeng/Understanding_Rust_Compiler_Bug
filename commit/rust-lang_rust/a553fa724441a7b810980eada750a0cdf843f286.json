{"sha": "a553fa724441a7b810980eada750a0cdf843f286", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NTNmYTcyNDQ0MWE3YjgxMDk4MGVhZGE3NTBhMGNkZjg0M2YyODY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-05-22T00:02:47Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-16T19:09:05Z"}, "message": "Fix integer overflow", "tree": {"sha": "3e05740f601538aeadb3e32f2ef5d44a23775db9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e05740f601538aeadb3e32f2ef5d44a23775db9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a553fa724441a7b810980eada750a0cdf843f286", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a553fa724441a7b810980eada750a0cdf843f286", "html_url": "https://github.com/rust-lang/rust/commit/a553fa724441a7b810980eada750a0cdf843f286", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a553fa724441a7b810980eada750a0cdf843f286/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7695bd0be9cc6d08b9d58c1c0ef193458857ece7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7695bd0be9cc6d08b9d58c1c0ef193458857ece7", "html_url": "https://github.com/rust-lang/rust/commit/7695bd0be9cc6d08b9d58c1c0ef193458857ece7"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "3f483dfee55b539bb2b48f818865d4290bae66e2", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a553fa724441a7b810980eada750a0cdf843f286/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a553fa724441a7b810980eada750a0cdf843f286/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=a553fa724441a7b810980eada750a0cdf843f286", "patch": "@@ -475,8 +475,8 @@ fn all_constructors<'a, 'tcx: 'a>(cx: &mut MatchCheckCtxt<'a, 'tcx>,\n             let min_max_ty = |sty| {\n                 let size = cx.tcx.layout_of(ty::ParamEnv::reveal_all().and(sty))\n                                   .unwrap().size.bits() as i128;\n-                let min = -(1 << (size - 1));\n-                let max = (1 << (size - 1)) - 1;\n+                let min = (1i128 << (size - 1)).wrapping_neg();\n+                let max = (1i128 << (size - 1)).wrapping_sub(1);\n                 (min as u128, max as u128, sty)\n             };\n             let (min, max, ty) = match int_ty {\n@@ -496,8 +496,9 @@ fn all_constructors<'a, 'tcx: 'a>(cx: &mut MatchCheckCtxt<'a, 'tcx>,\n             use syntax::ast::UintTy::*;\n             let min_max_ty = |sty| {\n                 let size = cx.tcx.layout_of(ty::ParamEnv::reveal_all().and(sty))\n-                                  .unwrap().size.bits() as i128;\n-                let max = (1 << size) - 1;\n+                                  .unwrap().size.bits() as u32;\n+                let shift = 1u128.overflowing_shl(size);\n+                let max = shift.0.wrapping_sub(1 + (shift.1 as u128));\n                 (0u128, max as u128, sty)\n             };\n             let (min, max, ty) = match uint_ty {"}]}