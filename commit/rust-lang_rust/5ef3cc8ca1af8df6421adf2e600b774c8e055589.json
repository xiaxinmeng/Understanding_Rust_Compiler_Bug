{"sha": "5ef3cc8ca1af8df6421adf2e600b774c8e055589", "node_id": "C_kwDOAAsO6NoAKDVlZjNjYzhjYTFhZjhkZjY0MjFhZGYyZTYwMGI3NzRjOGUwNTU1ODk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-21T03:02:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-21T03:02:48Z"}, "message": "Auto merge of #10197 - blyxyas:impl_trait_param, r=Jarcho\n\nAdd `impl_trait_in_params` lint\n\nAs this is a lint about style, and using `impl Trait` is purely cosmetical (even with downsides), a lot of unrelated files needed to allow this lint.\n\n---\n\nResolves #10030\n\nchangelog: New lint: [`impl_trait_in_params`]\n[10197](https://github.com/rust-lang/rust-clippy/pull/10197)\n<!-- changelog_checked -->", "tree": {"sha": "292b2a917148443c27e2ed1b5da5dd3aac9f6719", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/292b2a917148443c27e2ed1b5da5dd3aac9f6719"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ef3cc8ca1af8df6421adf2e600b774c8e055589", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ef3cc8ca1af8df6421adf2e600b774c8e055589", "html_url": "https://github.com/rust-lang/rust/commit/5ef3cc8ca1af8df6421adf2e600b774c8e055589", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ef3cc8ca1af8df6421adf2e600b774c8e055589/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1cf1e7b6acecfdf773dd24c09cb4cf27507481f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1cf1e7b6acecfdf773dd24c09cb4cf27507481f", "html_url": "https://github.com/rust-lang/rust/commit/b1cf1e7b6acecfdf773dd24c09cb4cf27507481f"}, {"sha": "89fde4abf2c689c0ad5a09cc423a0a7be475d6ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/89fde4abf2c689c0ad5a09cc423a0a7be475d6ee", "html_url": "https://github.com/rust-lang/rust/commit/89fde4abf2c689c0ad5a09cc423a0a7be475d6ee"}], "stats": {"total": 123, "additions": 123, "deletions": 0}, "files": [{"sha": "5ed61f997803981234892e7b97d0c631bc54d267", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5ef3cc8ca1af8df6421adf2e600b774c8e055589/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/5ef3cc8ca1af8df6421adf2e600b774c8e055589/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=5ef3cc8ca1af8df6421adf2e600b774c8e055589", "patch": "@@ -4430,6 +4430,7 @@ Released 2018-09-13\n [`if_same_then_else`]: https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else\n [`if_then_some_else_none`]: https://rust-lang.github.io/rust-clippy/master/index.html#if_then_some_else_none\n [`ifs_same_cond`]: https://rust-lang.github.io/rust-clippy/master/index.html#ifs_same_cond\n+[`impl_trait_in_params`]: https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params\n [`implicit_clone`]: https://rust-lang.github.io/rust-clippy/master/index.html#implicit_clone\n [`implicit_hasher`]: https://rust-lang.github.io/rust-clippy/master/index.html#implicit_hasher\n [`implicit_return`]: https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return"}, {"sha": "d05f22c231c60633354f90ddd7b1b5796c79c28e", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5ef3cc8ca1af8df6421adf2e600b774c8e055589/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ef3cc8ca1af8df6421adf2e600b774c8e055589/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=5ef3cc8ca1af8df6421adf2e600b774c8e055589", "patch": "@@ -179,6 +179,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::from_raw_with_void_ptr::FROM_RAW_WITH_VOID_PTR_INFO,\n     crate::from_str_radix_10::FROM_STR_RADIX_10_INFO,\n     crate::functions::DOUBLE_MUST_USE_INFO,\n+    crate::functions::IMPL_TRAIT_IN_PARAMS_INFO,\n     crate::functions::MISNAMED_GETTERS_INFO,\n     crate::functions::MUST_USE_CANDIDATE_INFO,\n     crate::functions::MUST_USE_UNIT_INFO,"}, {"sha": "2811a73f6c18947cfde5fa935c51bc8fd7f38a30", "filename": "clippy_lints/src/functions/impl_trait_in_params.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/5ef3cc8ca1af8df6421adf2e600b774c8e055589/clippy_lints%2Fsrc%2Ffunctions%2Fimpl_trait_in_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ef3cc8ca1af8df6421adf2e600b774c8e055589/clippy_lints%2Fsrc%2Ffunctions%2Fimpl_trait_in_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fimpl_trait_in_params.rs?ref=5ef3cc8ca1af8df6421adf2e600b774c8e055589", "patch": "@@ -0,0 +1,50 @@\n+use clippy_utils::{diagnostics::span_lint_and_then, is_in_test_function};\n+\n+use rustc_hir::{intravisit::FnKind, Body, HirId};\n+use rustc_lint::LateContext;\n+use rustc_span::Span;\n+\n+use super::IMPL_TRAIT_IN_PARAMS;\n+\n+pub(super) fn check_fn<'tcx>(cx: &LateContext<'_>, kind: &'tcx FnKind<'_>, body: &'tcx Body<'_>, hir_id: HirId) {\n+    if cx.tcx.visibility(cx.tcx.hir().body_owner_def_id(body.id())).is_public() && !is_in_test_function(cx.tcx, hir_id)\n+    {\n+        if let FnKind::ItemFn(ident, generics, _) = kind {\n+            for param in generics.params {\n+                if param.is_impl_trait() {\n+                    // No generics with nested generics, and no generics like FnMut(x)\n+                    span_lint_and_then(\n+                        cx,\n+                        IMPL_TRAIT_IN_PARAMS,\n+                        param.span,\n+                        \"'`impl Trait` used as a function parameter'\",\n+                        |diag| {\n+                            if let Some(gen_span) = generics.span_for_param_suggestion() {\n+                                diag.span_suggestion_with_style(\n+                                    gen_span,\n+                                    \"add a type paremeter\",\n+                                    format!(\", {{ /* Generic name */ }}: {}\", &param.name.ident().as_str()[5..]),\n+                                    rustc_errors::Applicability::HasPlaceholders,\n+                                    rustc_errors::SuggestionStyle::ShowAlways,\n+                                );\n+                            } else {\n+                                diag.span_suggestion_with_style(\n+                                    Span::new(\n+                                        body.params[0].span.lo() - rustc_span::BytePos(1),\n+                                        ident.span.hi(),\n+                                        ident.span.ctxt(),\n+                                        ident.span.parent(),\n+                                    ),\n+                                    \"add a type paremeter\",\n+                                    format!(\"<{{ /* Generic name */ }}: {}>\", &param.name.ident().as_str()[5..]),\n+                                    rustc_errors::Applicability::HasPlaceholders,\n+                                    rustc_errors::SuggestionStyle::ShowAlways,\n+                                );\n+                            }\n+                        },\n+                    );\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "d2852b4acad1eca80da81340410c0953c09ff651", "filename": "clippy_lints/src/functions/mod.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5ef3cc8ca1af8df6421adf2e600b774c8e055589/clippy_lints%2Fsrc%2Ffunctions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ef3cc8ca1af8df6421adf2e600b774c8e055589/clippy_lints%2Fsrc%2Ffunctions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fmod.rs?ref=5ef3cc8ca1af8df6421adf2e600b774c8e055589", "patch": "@@ -1,3 +1,4 @@\n+mod impl_trait_in_params;\n mod misnamed_getters;\n mod must_use;\n mod not_unsafe_ptr_arg_deref;\n@@ -327,6 +328,32 @@ declare_clippy_lint! {\n     \"getter method returning the wrong field\"\n }\n \n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Lints when `impl Trait` is being used in a function's paremeters.\n+    /// ### Why is this bad?\n+    /// Turbofish syntax (`::<>`) cannot be used when `impl Trait` is being used, making `impl Trait` less powerful. Readability may also be a factor.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// trait MyTrait {}\n+    /// fn foo(a: impl MyTrait) {\n+    /// \t// [...]\n+    /// }\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// trait MyTrait {}\n+    /// fn foo<T: MyTrait>(a: T) {\n+    /// \t// [...]\n+    /// }\n+    /// ```\n+    #[clippy::version = \"1.68.0\"]\n+    pub IMPL_TRAIT_IN_PARAMS,\n+    restriction,\n+    \"`impl Trait` is used in the function's parameters\"\n+}\n+\n #[derive(Copy, Clone)]\n pub struct Functions {\n     too_many_arguments_threshold: u64,\n@@ -354,6 +381,7 @@ impl_lint_pass!(Functions => [\n     RESULT_UNIT_ERR,\n     RESULT_LARGE_ERR,\n     MISNAMED_GETTERS,\n+    IMPL_TRAIT_IN_PARAMS,\n ]);\n \n impl<'tcx> LateLintPass<'tcx> for Functions {\n@@ -371,6 +399,7 @@ impl<'tcx> LateLintPass<'tcx> for Functions {\n         too_many_lines::check_fn(cx, kind, span, body, self.too_many_lines_threshold);\n         not_unsafe_ptr_arg_deref::check_fn(cx, kind, decl, body, def_id);\n         misnamed_getters::check_fn(cx, kind, decl, body, span);\n+        impl_trait_in_params::check_fn(cx, &kind, body, hir_id);\n     }\n \n     fn check_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx hir::Item<'_>) {"}, {"sha": "07560101a4167cb2047d8ad33a91991cbe773e7f", "filename": "tests/ui/impl_trait_in_params.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5ef3cc8ca1af8df6421adf2e600b774c8e055589/tests%2Fui%2Fimpl_trait_in_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ef3cc8ca1af8df6421adf2e600b774c8e055589/tests%2Fui%2Fimpl_trait_in_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl_trait_in_params.rs?ref=5ef3cc8ca1af8df6421adf2e600b774c8e055589", "patch": "@@ -0,0 +1,17 @@\n+#![allow(unused)]\n+#![warn(clippy::impl_trait_in_params)]\n+\n+pub trait Trait {}\n+pub trait AnotherTrait<T> {}\n+\n+// Should warn\n+pub fn a(_: impl Trait) {}\n+pub fn c<C: Trait>(_: C, _: impl Trait) {}\n+fn d(_: impl AnotherTrait<u32>) {}\n+\n+// Shouldn't warn\n+\n+pub fn b<B: Trait>(_: B) {}\n+fn e<T: AnotherTrait<u32>>(_: T) {}\n+\n+fn main() {}"}, {"sha": "acfcc21445ebcbaae7225f261276f4a14b3335db", "filename": "tests/ui/impl_trait_in_params.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5ef3cc8ca1af8df6421adf2e600b774c8e055589/tests%2Fui%2Fimpl_trait_in_params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ef3cc8ca1af8df6421adf2e600b774c8e055589/tests%2Fui%2Fimpl_trait_in_params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl_trait_in_params.stderr?ref=5ef3cc8ca1af8df6421adf2e600b774c8e055589", "patch": "@@ -0,0 +1,25 @@\n+error: '`impl Trait` used as a function parameter'\n+  --> $DIR/impl_trait_in_params.rs:8:13\n+   |\n+LL | pub fn a(_: impl Trait) {}\n+   |             ^^^^^^^^^^\n+   |\n+   = note: `-D clippy::impl-trait-in-params` implied by `-D warnings`\n+help: add a type paremeter\n+   |\n+LL | pub fn a<{ /* Generic name */ }: Trait>(_: impl Trait) {}\n+   |         +++++++++++++++++++++++++++++++\n+\n+error: '`impl Trait` used as a function parameter'\n+  --> $DIR/impl_trait_in_params.rs:9:29\n+   |\n+LL | pub fn c<C: Trait>(_: C, _: impl Trait) {}\n+   |                             ^^^^^^^^^^\n+   |\n+help: add a type paremeter\n+   |\n+LL | pub fn c<C: Trait, { /* Generic name */ }: Trait>(_: C, _: impl Trait) {}\n+   |                  +++++++++++++++++++++++++++++++\n+\n+error: aborting due to 2 previous errors\n+"}]}