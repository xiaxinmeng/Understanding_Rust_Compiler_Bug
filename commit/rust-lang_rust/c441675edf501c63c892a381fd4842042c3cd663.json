{"sha": "c441675edf501c63c892a381fd4842042c3cd663", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NDE2NzVlZGY1MDFjNjNjODkyYTM4MWZkNDg0MjA0MmMzY2Q2NjM=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-05-21T02:40:48Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-05-21T02:42:29Z"}, "message": "Add Weak may_dangle tests", "tree": {"sha": "27c686b928c55b9dc464d651ba85cdb74bdde639", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27c686b928c55b9dc464d651ba85cdb74bdde639"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c441675edf501c63c892a381fd4842042c3cd663", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmCnHhUACgkQ+boUO5X/\nbYIuwxAAwC2/k/0Fqjp9Q0Byt7HdXrkwoL1KDHnkma2k9VMxV6e4atK2MHaOrogm\n0bNU7x88h0WccQ9walHVNyGRJHH3iscZFhbH89jYMhpqUGaavwwVGeQXa9RQ5FrW\nyP7C8sT8kgNOyXXboxq6Ir9HyEVbOUgPHvDzd/CI7AVQPbt/GT8OBPcjX3HAwbV/\nLcwoPZ64UV11mhAH2dB5PW+YTuGj9UEtstCM4Ws5sOFV8ZtqaFI+4bayqCphzi1C\nQ3uod9BtqGiEfcPBLESmyvAwFQSDZOYxkg5WAdV5luDc1NNpzFG/RtACF6JHSZud\nPknIzri6Tn6OKKhNDjIzY1+N49Xn+o1r4ZEuCouWj8D53prgJcFNZlxwYb4BCHWh\nwvHUqq3BZoipaLWBkhvdqIgusriEI35swLBh99zYb5ThVkRTqj95+fC02y1//rcF\nGe0ITAuRhwRP+sx2DaCDqFEmCjZHE05ZerOoOvVpv2PrY+Y5WpEXZKYybGBStW+r\nMYm8XlhlOUm3kCHu9+NXLUcMyvTgjq0NLWAfwEZyx/x7DMlV1umnm15FJAYMDV7Z\n0gzz+OjZc/olO2i5uV9e7dWpsvFfwZqF/cTJWzBGYMEqypXwdr1BUVhTWegFXnpi\nukG8OQ53Cw4gPHX6bxU3QJqdzbP+L3ZKN70ZksyWrGMsP8rNJZ0=\n=4Ndy\n-----END PGP SIGNATURE-----", "payload": "tree 27c686b928c55b9dc464d651ba85cdb74bdde639\nparent 40d23020470db06903589e210c83a4936f22d52a\nauthor David Tolnay <dtolnay@gmail.com> 1621564848 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1621564949 -0700\n\nAdd Weak may_dangle tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c441675edf501c63c892a381fd4842042c3cd663", "html_url": "https://github.com/rust-lang/rust/commit/c441675edf501c63c892a381fd4842042c3cd663", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c441675edf501c63c892a381fd4842042c3cd663/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40d23020470db06903589e210c83a4936f22d52a", "url": "https://api.github.com/repos/rust-lang/rust/commits/40d23020470db06903589e210c83a4936f22d52a", "html_url": "https://github.com/rust-lang/rust/commit/40d23020470db06903589e210c83a4936f22d52a"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "ce40b5c9b0a0d3a5948635c131dc1b353adbbcfb", "filename": "library/alloc/tests/arc.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c441675edf501c63c892a381fd4842042c3cd663/library%2Falloc%2Ftests%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c441675edf501c63c892a381fd4842042c3cd663/library%2Falloc%2Ftests%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Farc.rs?ref=c441675edf501c63c892a381fd4842042c3cd663", "patch": "@@ -195,3 +195,18 @@ fn shared_from_iter_trustedlen_no_fuse() {\n     assert_trusted_len(&iter);\n     assert_eq!(&[Box::new(42), Box::new(24)], &*iter.collect::<Rc<[_]>>());\n }\n+\n+#[test]\n+fn weak_may_dangle() {\n+    fn hmm<'a>(val: &'a mut Weak<&'a str>) -> Weak<&'a str> {\n+        val.clone()\n+    }\n+\n+    // Without #[may_dangle] we get:\n+    let mut val = Weak::new();\n+    hmm(&mut val);\n+    //  ~~~~~~~~ borrowed value does not live long enough\n+    //\n+    // `val` dropped here while still borrowed\n+    // borrow might be used here, when `val` is dropped and runs the `Drop` code for type `std::sync::Weak`\n+}"}, {"sha": "efb39a609665b33ad2e6b9b43a75533a98f1feb5", "filename": "library/alloc/tests/rc.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c441675edf501c63c892a381fd4842042c3cd663/library%2Falloc%2Ftests%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c441675edf501c63c892a381fd4842042c3cd663/library%2Falloc%2Ftests%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Frc.rs?ref=c441675edf501c63c892a381fd4842042c3cd663", "patch": "@@ -191,3 +191,18 @@ fn shared_from_iter_trustedlen_no_fuse() {\n     assert_trusted_len(&iter);\n     assert_eq!(&[Box::new(42), Box::new(24)], &*iter.collect::<Rc<[_]>>());\n }\n+\n+#[test]\n+fn weak_may_dangle() {\n+    fn hmm<'a>(val: &'a mut Weak<&'a str>) -> Weak<&'a str> {\n+        val.clone()\n+    }\n+\n+    // Without #[may_dangle] we get:\n+    let mut val = Weak::new();\n+    hmm(&mut val);\n+    //  ~~~~~~~~ borrowed value does not live long enough\n+    //\n+    // `val` dropped here while still borrowed\n+    // borrow might be used here, when `val` is dropped and runs the `Drop` code for type `std::rc::Weak`\n+}"}]}