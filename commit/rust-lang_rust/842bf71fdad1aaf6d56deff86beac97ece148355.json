{"sha": "842bf71fdad1aaf6d56deff86beac97ece148355", "node_id": "C_kwDOAAsO6NoAKDg0MmJmNzFmZGFkMWFhZjZkNTZkZWZmODZiZWFjOTdlY2UxNDgzNTU", "commit": {"author": {"name": "James R T", "email": "jamestiotio@gmail.com", "date": "2022-01-11T02:42:51Z"}, "committer": {"name": "James R T", "email": "jamestiotio@gmail.com", "date": "2022-01-11T02:42:51Z"}, "message": "fix(compiler): correct minor typos in some long error code explanations", "tree": {"sha": "e1da921f8d139376fd5577f277928b39d16ddfb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1da921f8d139376fd5577f277928b39d16ddfb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/842bf71fdad1aaf6d56deff86beac97ece148355", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEELizd4vpASmhT8H9Iqnt5azGCpDkFAmHc7qsACgkQqnt5azGC\npDkcog//d1wz0RJDrczIKDqKWP8fh9sbuO5//p/xogmryJxV9BmwrwbY8ZaGkZ7G\nOa/1SMxSWNSnmSxp+LblEeAUARH8PHAx0WZCHQ3DCp8/IfsyPUyIzg5HeSpyY949\nxFTKRyJ2SY41Dtci/5zRTL0idph/cDANTfagpjunEoYx2DbAx67dB1VA8B7W1sQR\nt6+2l5FmEmQZuGEJrOtmBF5kiM0jm3tLLwXRDB4d0csvnEuF5PI6FMnCq9s1fwDc\nDoLFyhw0RDocpGhUeoHY2uMlJUmtNrI8NO3K+UMntV6s87EBSemmpnZFDLEhnk/V\nmZH5Vb/llGiCj5vfPGJmq+L6t7iXuoDv+HcCkBbA5JtYwWYyr8MjEZO8lTwIpJwH\nTHLX8Dcfji665BMS2IDE8yaqxSWz4KrYqUvlHwLmVzZEctmiOgYLsm1wKIsEEf0F\nsnO+kBak7oAzebfslUh79octPkKCH/xjubby38pH5w+I/hVkHShLu2lrLbQgCVBJ\nNdOL4921MDFibb5cQbaLukuI6LuXj0qs8Y2DdYeCGKVX++//nw/Rey3PBY1pfiQ+\nnxGcgKmAn36g3YM0D8JWVkgqgFQ1vse5pHpO9PWFzgad3xqQMV8VLzrLl0HF28dv\nFIDF/zE9xxzlugrFtBR0WeboqTNOhSr//JmfMvyPiNiTvRJDsGM=\n=M3do\n-----END PGP SIGNATURE-----", "payload": "tree e1da921f8d139376fd5577f277928b39d16ddfb4\nparent 89b9f7b284aacc5f8613438b80e4dd7bdd10549e\nauthor James R T <jamestiotio@gmail.com> 1641868971 +0800\ncommitter James R T <jamestiotio@gmail.com> 1641868971 +0800\n\nfix(compiler): correct minor typos in some long error code explanations\n\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/842bf71fdad1aaf6d56deff86beac97ece148355", "html_url": "https://github.com/rust-lang/rust/commit/842bf71fdad1aaf6d56deff86beac97ece148355", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/842bf71fdad1aaf6d56deff86beac97ece148355/comments", "author": {"login": "jamestiotio", "id": 18364745, "node_id": "MDQ6VXNlcjE4MzY0NzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/18364745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamestiotio", "html_url": "https://github.com/jamestiotio", "followers_url": "https://api.github.com/users/jamestiotio/followers", "following_url": "https://api.github.com/users/jamestiotio/following{/other_user}", "gists_url": "https://api.github.com/users/jamestiotio/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamestiotio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamestiotio/subscriptions", "organizations_url": "https://api.github.com/users/jamestiotio/orgs", "repos_url": "https://api.github.com/users/jamestiotio/repos", "events_url": "https://api.github.com/users/jamestiotio/events{/privacy}", "received_events_url": "https://api.github.com/users/jamestiotio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamestiotio", "id": 18364745, "node_id": "MDQ6VXNlcjE4MzY0NzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/18364745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamestiotio", "html_url": "https://github.com/jamestiotio", "followers_url": "https://api.github.com/users/jamestiotio/followers", "following_url": "https://api.github.com/users/jamestiotio/following{/other_user}", "gists_url": "https://api.github.com/users/jamestiotio/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamestiotio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamestiotio/subscriptions", "organizations_url": "https://api.github.com/users/jamestiotio/orgs", "repos_url": "https://api.github.com/users/jamestiotio/repos", "events_url": "https://api.github.com/users/jamestiotio/events{/privacy}", "received_events_url": "https://api.github.com/users/jamestiotio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89b9f7b284aacc5f8613438b80e4dd7bdd10549e", "url": "https://api.github.com/repos/rust-lang/rust/commits/89b9f7b284aacc5f8613438b80e4dd7bdd10549e", "html_url": "https://github.com/rust-lang/rust/commit/89b9f7b284aacc5f8613438b80e4dd7bdd10549e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "584b78554ef88f1ac9d42a93df6af10d47bcbeb7", "filename": "compiler/rustc_error_codes/src/error_codes/E0038.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/842bf71fdad1aaf6d56deff86beac97ece148355/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0038.md", "raw_url": "https://github.com/rust-lang/rust/raw/842bf71fdad1aaf6d56deff86beac97ece148355/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0038.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0038.md?ref=842bf71fdad1aaf6d56deff86beac97ece148355", "patch": "@@ -15,7 +15,7 @@ Two general aspects of trait object types give rise to the restrictions:\n      these types can only be accessed through pointers, such as `&dyn Trait` or\n      `Box<dyn Trait>`. The size of such a pointer is known, but the size of the\n      `dyn Trait` object pointed-to by the pointer is _opaque_ to code working\n-     with it, and different tait objects with the same trait object type may\n+     with it, and different trait objects with the same trait object type may\n      have different sizes.\n \n   2. The pointer used to access a trait object is paired with an extra pointer\n@@ -167,7 +167,7 @@ implementation on-demand. If you call `foo()` with a `bool` parameter, the\n compiler will only generate code for `foo::<bool>()`. When we have additional\n type parameters, the number of monomorphized implementations the compiler\n generates does not grow drastically, since the compiler will only generate an\n-implementation if the function is called with unparametrized substitutions\n+implementation if the function is called with unparameterized substitutions\n (i.e., substitutions where none of the substituted types are themselves\n parameterized).\n "}, {"sha": "92fa4c7c21e72d84eece06829af306f34b77fe98", "filename": "compiler/rustc_error_codes/src/error_codes/E0183.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/842bf71fdad1aaf6d56deff86beac97ece148355/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0183.md", "raw_url": "https://github.com/rust-lang/rust/raw/842bf71fdad1aaf6d56deff86beac97ece148355/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0183.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0183.md?ref=842bf71fdad1aaf6d56deff86beac97ece148355", "patch": "@@ -1,4 +1,4 @@\n-Manual implemetation of a `Fn*` trait.\n+Manual implementation of a `Fn*` trait.\n \n Erroneous code example:\n \n@@ -33,7 +33,7 @@ impl FnOnce<()> for MyClosure {  // ok!\n }\n ```\n \n-The argumements must be a tuple representing the argument list.\n+The arguments must be a tuple representing the argument list.\n For more info, see the [tracking issue][iss29625]:\n \n [iss29625]: https://github.com/rust-lang/rust/issues/29625"}, {"sha": "fedf6365fb5590d10489e4a04dd7081fa26d4a2b", "filename": "compiler/rustc_error_codes/src/error_codes/E0521.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/842bf71fdad1aaf6d56deff86beac97ece148355/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0521.md", "raw_url": "https://github.com/rust-lang/rust/raw/842bf71fdad1aaf6d56deff86beac97ece148355/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0521.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0521.md?ref=842bf71fdad1aaf6d56deff86beac97ece148355", "patch": "@@ -10,7 +10,7 @@ let _add = |el: &str| {\n };\n ```\n \n-A type anotation of a closure parameter implies a new lifetime declaration.\n+A type annotation of a closure parameter implies a new lifetime declaration.\n Consider to drop it, the compiler is reliably able to infer them.\n \n ```"}, {"sha": "02468dd946646eb25e0d31001076fe138118836a", "filename": "compiler/rustc_error_codes/src/error_codes/E0581.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/842bf71fdad1aaf6d56deff86beac97ece148355/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0581.md", "raw_url": "https://github.com/rust-lang/rust/raw/842bf71fdad1aaf6d56deff86beac97ece148355/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0581.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0581.md?ref=842bf71fdad1aaf6d56deff86beac97ece148355", "patch": "@@ -10,7 +10,7 @@ fn main() {\n }\n ```\n \n-The problem here is that the lifetime isn't contrained by any of the arguments,\n+The problem here is that the lifetime isn't constrained by any of the arguments,\n making it impossible to determine how long it's supposed to live.\n \n To fix this issue, either use the lifetime in the arguments, or use the"}]}