{"sha": "68469be89bd7652cf12a0fe74fb6cd6c5915498d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NDY5YmU4OWJkNzY1MmNmMTJhMGZlNzRmYjZjZDZjNTkxNTQ5OGQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-20T14:52:53Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-20T14:52:53Z"}, "message": "rename function cache member", "tree": {"sha": "fd8d74177aad3472f48fb6b9cd255f963fb67cd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd8d74177aad3472f48fb6b9cd255f963fb67cd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68469be89bd7652cf12a0fe74fb6cd6c5915498d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXaANFAAoJEFbW7qD8Z6xGcJYP+wZmOK95X7A3UQU7OBdY9Ezf\nWZ4gUV2FKpmU8FbAxsubBKK7cxBSfWKw70fN/4/92MX6g2gXQbVo4IzZjqrrEI2n\nTGBeognBTE9cFc3Yf+/CSaJ93RcJwg0cOtQPt7VBMhT57o0nNYvYYiOx4EUPgCPX\nP05V84v2PkAcn7BUcdclLD/CbQVPxDm/QC25chCeujOCgYjidXbylqpcN1MVueET\nYorn2iI6Z6RvHhB2Cp4OvjoGe3gsZBPvjBbbZjKCTzj2tGl1Zz4yaKdmu+206QMs\npm+AQLoffvzKQlHtUjmLoiMzADCJMwRl8Fx/cXgFKyYb/hZbq3b3Zc9Eg2/aOkhe\nak57sRo02Q228k/SbhkWn3UGxXCdaT/MYQ098ITrg1VZBELiTzmrsykIjSqqLv0U\nCv4PEWBkbwPxRt5q7zVAiTkMMIM4UeM9+VLQdgkuo2Y1yfbWlNoEHV/RmR6oJ4gN\nsp2Heh9HwqW0Zi499FodTA/Bs+4ogcthrC9xPbsUtYWYfdUwI5kqu2M9A5C/s/Hg\n0sRo2Vyt0S3N6aHqebCt9HEp3F4YO7z8h60oRHvZlHKzt9yCaI4DQw9YrQY6s31g\nLo5IaJFwC3F8NXKyYwJdH5+5/0g7wa+90Ev46gMC44IGi2twyyMjhF+iyxHghgwS\n1SrKGyDJBMaPrx1bgCaI\n=0FJ2\n-----END PGP SIGNATURE-----", "payload": "tree fd8d74177aad3472f48fb6b9cd255f963fb67cd7\nparent b9ac85d2a94e94dd5c81d5988b0adf60c1868e0c\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466434373 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466434373 +0200\n\nrename function cache member"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68469be89bd7652cf12a0fe74fb6cd6c5915498d", "html_url": "https://github.com/rust-lang/rust/commit/68469be89bd7652cf12a0fe74fb6cd6c5915498d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68469be89bd7652cf12a0fe74fb6cd6c5915498d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9ac85d2a94e94dd5c81d5988b0adf60c1868e0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9ac85d2a94e94dd5c81d5988b0adf60c1868e0c", "html_url": "https://github.com/rust-lang/rust/commit/b9ac85d2a94e94dd5c81d5988b0adf60c1868e0c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "be0cd0ef4f321a939a8384c544ea8b023be9f5ec", "filename": "src/memory.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/68469be89bd7652cf12a0fe74fb6cd6c5915498d/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68469be89bd7652cf12a0fe74fb6cd6c5915498d/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=68469be89bd7652cf12a0fe74fb6cd6c5915498d", "patch": "@@ -60,7 +60,7 @@ pub struct Memory<'tcx> {\n     /// we can figure out what they point to.\n     functions: HashMap<AllocId, FunctionDefinition<'tcx>>,\n     /// Inverse map of `functions` so we don't allocate a new pointer every time we need one\n-    function_definitions: HashMap<FunctionDefinition<'tcx>, AllocId>,\n+    function_alloc_cache: HashMap<FunctionDefinition<'tcx>, AllocId>,\n     next_id: AllocId,\n     pub pointer_size: usize,\n }\n@@ -71,7 +71,7 @@ impl<'tcx> Memory<'tcx> {\n         Memory {\n             alloc_map: HashMap::new(),\n             functions: HashMap::new(),\n-            function_definitions: HashMap::new(),\n+            function_alloc_cache: HashMap::new(),\n             next_id: AllocId(0),\n             pointer_size: pointer_size,\n         }\n@@ -83,7 +83,7 @@ impl<'tcx> Memory<'tcx> {\n             substs: substs,\n             fn_ty: fn_ty,\n         };\n-        if let Some(&alloc_id) = self.function_definitions.get(&def) {\n+        if let Some(&alloc_id) = self.function_alloc_cache.get(&def) {\n             return Pointer {\n                 alloc_id: alloc_id,\n                 offset: 0,\n@@ -93,7 +93,7 @@ impl<'tcx> Memory<'tcx> {\n         debug!(\"creating fn ptr: {}\", id);\n         self.next_id.0 += 1;\n         self.functions.insert(id, def);\n-        self.function_definitions.insert(def, id);\n+        self.function_alloc_cache.insert(def, id);\n         Pointer {\n             alloc_id: id,\n             offset: 0,"}]}