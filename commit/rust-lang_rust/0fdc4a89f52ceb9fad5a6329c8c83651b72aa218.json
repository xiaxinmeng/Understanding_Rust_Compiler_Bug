{"sha": "0fdc4a89f52ceb9fad5a6329c8c83651b72aa218", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmZGM0YTg5ZjUyY2ViOWZhZDVhNjMyOWM4YzgzNjUxYjcyYWEyMTg=", "commit": {"author": {"name": "Sylvestre Ledru", "email": "sylvestre@debian.org", "date": "2015-08-11T21:46:32Z"}, "committer": {"name": "Sylvestre Ledru", "email": "sylvestre@debian.org", "date": "2015-08-19T10:43:16Z"}, "message": "Issue #27628 - Also support the LLVM 3.6 IR format in two tests", "tree": {"sha": "12a58885d18a24c15df2b305739a9c9106afdabd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12a58885d18a24c15df2b305739a9c9106afdabd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fdc4a89f52ceb9fad5a6329c8c83651b72aa218", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fdc4a89f52ceb9fad5a6329c8c83651b72aa218", "html_url": "https://github.com/rust-lang/rust/commit/0fdc4a89f52ceb9fad5a6329c8c83651b72aa218", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fdc4a89f52ceb9fad5a6329c8c83651b72aa218/comments", "author": {"login": "sylvestre", "id": 733326, "node_id": "MDQ6VXNlcjczMzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/733326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sylvestre", "html_url": "https://github.com/sylvestre", "followers_url": "https://api.github.com/users/sylvestre/followers", "following_url": "https://api.github.com/users/sylvestre/following{/other_user}", "gists_url": "https://api.github.com/users/sylvestre/gists{/gist_id}", "starred_url": "https://api.github.com/users/sylvestre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sylvestre/subscriptions", "organizations_url": "https://api.github.com/users/sylvestre/orgs", "repos_url": "https://api.github.com/users/sylvestre/repos", "events_url": "https://api.github.com/users/sylvestre/events{/privacy}", "received_events_url": "https://api.github.com/users/sylvestre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sylvestre", "id": 733326, "node_id": "MDQ6VXNlcjczMzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/733326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sylvestre", "html_url": "https://github.com/sylvestre", "followers_url": "https://api.github.com/users/sylvestre/followers", "following_url": "https://api.github.com/users/sylvestre/following{/other_user}", "gists_url": "https://api.github.com/users/sylvestre/gists{/gist_id}", "starred_url": "https://api.github.com/users/sylvestre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sylvestre/subscriptions", "organizations_url": "https://api.github.com/users/sylvestre/orgs", "repos_url": "https://api.github.com/users/sylvestre/repos", "events_url": "https://api.github.com/users/sylvestre/events{/privacy}", "received_events_url": "https://api.github.com/users/sylvestre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e13faee1776595fb1e460005d8271c141f758b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e13faee1776595fb1e460005d8271c141f758b0", "html_url": "https://github.com/rust-lang/rust/commit/7e13faee1776595fb1e460005d8271c141f758b0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "b51da69fef2251a4f80b99763e2f160e71d79cb6", "filename": "src/test/codegen/loads.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0fdc4a89f52ceb9fad5a6329c8c83651b72aa218/src%2Ftest%2Fcodegen%2Floads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fdc4a89f52ceb9fad5a6329c8c83651b72aa218/src%2Ftest%2Fcodegen%2Floads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Floads.rs?ref=0fdc4a89f52ceb9fad5a6329c8c83651b72aa218", "patch": "@@ -20,14 +20,14 @@ pub struct Bytes {\n // CHECK-LABEL: @borrow\n #[no_mangle]\n pub fn borrow(x: &i32) -> &i32 {\n-// CHECK: load i32*, i32** %x{{.*}}, !nonnull\n+// CHECK: load {{(i32\\*, )?}}i32** %x{{.*}}, !nonnull\n     x\n }\n \n // CHECK-LABEL: @_box\n #[no_mangle]\n pub fn _box(x: Box<i32>) -> i32 {\n-// CHECK: load i32*, i32** %x{{.*}}, !nonnull\n+// CHECK: load {{(i32\\*, )?}}i32** %x{{.*}}, !nonnull\n     *x\n }\n \n@@ -36,7 +36,7 @@ pub fn _box(x: Box<i32>) -> i32 {\n // dependent alignment\n #[no_mangle]\n pub fn small_array_alignment(x: [i8; 4]) -> [i8; 4] {\n-// CHECK: [[VAR:%[0-9]+]] = load i32, i32* %{{.*}}, align 1\n+// CHECK: [[VAR:%[0-9]+]] = load {{(i32, )?}}i32* %{{.*}}, align 1\n // CHECK: ret i32 [[VAR]]\n     x\n }\n@@ -46,7 +46,7 @@ pub fn small_array_alignment(x: [i8; 4]) -> [i8; 4] {\n // dependent alignment\n #[no_mangle]\n pub fn small_struct_alignment(x: Bytes) -> Bytes {\n-// CHECK: [[VAR:%[0-9]+]] = load i32, i32* %{{.*}}, align 1\n+// CHECK: [[VAR:%[0-9]+]] = load {{(i32, )?}}i32* %{{.*}}, align 1\n // CHECK: ret i32 [[VAR]]\n     x\n }"}, {"sha": "72862ea8b6ff912fa7551e780d01b2aff38b498b", "filename": "src/test/codegen/stores.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0fdc4a89f52ceb9fad5a6329c8c83651b72aa218/src%2Ftest%2Fcodegen%2Fstores.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fdc4a89f52ceb9fad5a6329c8c83651b72aa218/src%2Ftest%2Fcodegen%2Fstores.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fstores.rs?ref=0fdc4a89f52ceb9fad5a6329c8c83651b72aa218", "patch": "@@ -22,7 +22,7 @@ pub struct Bytes {\n // dependent alignment\n #[no_mangle]\n pub fn small_array_alignment(x: &mut [i8; 4]) {\n-// CHECK: [[VAR:%[0-9]+]] = load [4 x i8]*, [4 x i8]** %x\n+// CHECK: [[VAR:%[0-9]+]] = load {{(\\[4 x i8\\]\\*, )?}}[4 x i8]** %x\n // CHECK: [[VAR2:%[0-9]+]] = bitcast [4 x i8]* [[VAR]] to i32*\n // CHECK: store i32 %{{.*}}, i32* [[VAR2]], align 1\n     *x = [0; 4];\n@@ -33,7 +33,7 @@ pub fn small_array_alignment(x: &mut [i8; 4]) {\n // dependent alignment\n #[no_mangle]\n pub fn small_struct_alignment(x: &mut Bytes) {\n-// CHECK: [[VAR:%[0-9]+]] = load %Bytes*, %Bytes** %x\n+// CHECK: [[VAR:%[0-9]+]] = load {{(%Bytes\\*, )?}}%Bytes** %x\n // CHECK: [[VAR2:%[0-9]+]] = bitcast %Bytes* [[VAR]] to i32*\n // CHECK: store i32 %{{.*}}, i32* [[VAR2]], align 1\n     *x = Bytes {"}]}