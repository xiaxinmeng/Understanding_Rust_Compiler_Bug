{"sha": "8219ad4fac6728a87a8fdbf4eb6e4f696e60c230", "node_id": "C_kwDOAAsO6NoAKDgyMTlhZDRmYWM2NzI4YTg3YThmZGJmNGViNmU0ZjY5NmU2MGMyMzA", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-02-07T14:08:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-07T14:08:32Z"}, "message": "Rollup merge of #92724 - inteon:cleanup, r=Mark-Simulacrum\n\nCleanup c_str.rs\n\nSome code cleanups in `c_str.rs`.\nNo functional changes.\n\nref: https://github.com/bytecodealliance/rustix/pull/163", "tree": {"sha": "148b1683edf208dc1e67eab5afd196fe01ec391c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/148b1683edf208dc1e67eab5afd196fe01ec391c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8219ad4fac6728a87a8fdbf4eb6e4f696e60c230", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiASfgCRBK7hj4Ov3rIwAAuEUIAFc2+/EMENNpwQtSwTIlKwAk\n9tKIpKt3/Krc7ye89bCLNsom3efVH4sDoB5+FZ9lb9SMo3vklLe9kBlPoCYFAmop\n7dSo2HAZyP7MVm4KHNoUKsdC5Ue0Q9WulRw1EXT+AYl0MQr3FTe4TzqKhgbs6EMI\nGuwUL0kgUUIATSn9ux/1Cq1chLlRZU5dv+NogHnNg0ZK07rpvq4HEEY2CvxwxySr\n6DFXvEOP8bjps185O7aLFdcuneNMsvYsbKr+vZ8tL1vRxiNwFfjt7VVcwOm9/wjv\nn2Xa2a6avR27BMGzCDuc6GaT+g3eOxvtP3Yq0r5TeOG49NM3Wi5IIpwljLDfZcI=\n=JqDd\n-----END PGP SIGNATURE-----\n", "payload": "tree 148b1683edf208dc1e67eab5afd196fe01ec391c\nparent 557d300e1b8b3faabcf0611d0c452a52dd69f3d2\nparent afb7a502f6e4e564d034ebf9601f4a4a13551f15\nauthor Mara Bos <m-ou.se@m-ou.se> 1644242912 +0000\ncommitter GitHub <noreply@github.com> 1644242912 +0000\n\nRollup merge of #92724 - inteon:cleanup, r=Mark-Simulacrum\n\nCleanup c_str.rs\n\nSome code cleanups in `c_str.rs`.\nNo functional changes.\n\nref: https://github.com/bytecodealliance/rustix/pull/163\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8219ad4fac6728a87a8fdbf4eb6e4f696e60c230", "html_url": "https://github.com/rust-lang/rust/commit/8219ad4fac6728a87a8fdbf4eb6e4f696e60c230", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8219ad4fac6728a87a8fdbf4eb6e4f696e60c230/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "557d300e1b8b3faabcf0611d0c452a52dd69f3d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/557d300e1b8b3faabcf0611d0c452a52dd69f3d2", "html_url": "https://github.com/rust-lang/rust/commit/557d300e1b8b3faabcf0611d0c452a52dd69f3d2"}, {"sha": "afb7a502f6e4e564d034ebf9601f4a4a13551f15", "url": "https://api.github.com/repos/rust-lang/rust/commits/afb7a502f6e4e564d034ebf9601f4a4a13551f15", "html_url": "https://github.com/rust-lang/rust/commit/afb7a502f6e4e564d034ebf9601f4a4a13551f15"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "e10c6a5daf13e4216447c8a44ad1bcc75b465708", "filename": "library/std/src/ffi/c_str.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8219ad4fac6728a87a8fdbf4eb6e4f696e60c230/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8219ad4fac6728a87a8fdbf4eb6e4f696e60c230/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs?ref=8219ad4fac6728a87a8fdbf4eb6e4f696e60c230", "patch": "@@ -1252,15 +1252,16 @@ impl CStr {\n     /// assert!(cstr.is_err());\n     /// ```\n     #[stable(feature = \"cstr_from_bytes\", since = \"1.10.0\")]\n-    pub fn from_bytes_with_nul(bytes: &[u8]) -> Result<&CStr, FromBytesWithNulError> {\n+    pub fn from_bytes_with_nul(bytes: &[u8]) -> Result<&Self, FromBytesWithNulError> {\n         let nul_pos = memchr::memchr(0, bytes);\n-        if let Some(nul_pos) = nul_pos {\n-            if nul_pos + 1 != bytes.len() {\n-                return Err(FromBytesWithNulError::interior_nul(nul_pos));\n+        match nul_pos {\n+            Some(nul_pos) if nul_pos + 1 == bytes.len() => {\n+                // SAFETY: We know there is only one nul byte, at the end\n+                // of the byte slice.\n+                Ok(unsafe { Self::from_bytes_with_nul_unchecked(bytes) })\n             }\n-            Ok(unsafe { CStr::from_bytes_with_nul_unchecked(bytes) })\n-        } else {\n-            Err(FromBytesWithNulError::not_nul_terminated())\n+            Some(nul_pos) => Err(FromBytesWithNulError::interior_nul(nul_pos)),\n+            None => Err(FromBytesWithNulError::not_nul_terminated()),\n         }\n     }\n "}]}