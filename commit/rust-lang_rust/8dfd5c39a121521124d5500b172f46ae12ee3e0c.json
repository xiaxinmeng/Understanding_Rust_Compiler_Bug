{"sha": "8dfd5c39a121521124d5500b172f46ae12ee3e0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkZmQ1YzM5YTEyMTUyMTEyNGQ1NTAwYjE3MmY0NmFlMTJlZTNlMGM=", "commit": {"author": {"name": "David Craven", "email": "david@craven.ch", "date": "2018-08-30T12:19:48Z"}, "committer": {"name": "David Craven", "email": "david@craven.ch", "date": "2018-08-30T14:03:37Z"}, "message": "[RISCV] Add riscv32imc-unknown-none-elf target.", "tree": {"sha": "a8784e78948957417245fdeb1f17c0892f934683", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8784e78948957417245fdeb1f17c0892f934683"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dfd5c39a121521124d5500b172f46ae12ee3e0c", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEX0O2gQQ3L0uomKZLM7np/eKNLCMFAluH+TkACgkQM7np/eKN\nLCMF5gf7Bn+03Fgbs2mbU2WBRQ7a9zUhaV0K7hbIssZWQTpSgw9hoIdtrzCQMOFq\nnKP5Ml9sx4QG7OrX6VdiwTG2HW/hqA5AoG9dnTojQCuxfxolYP+vQbVFGRxfQ/ks\nb4TxaBqW3U1faBMJqQgN+3e1Sh2S8I5j5bQQ19y2vD49dm1TXqgch7dsPTdp22pk\n2LEYe1qL5pZJbiVRhORMVRVXA+TVxgdhSZjfEYqv0xD+uZydbrjKTL/Nc9D94fnd\noTb2p20zKblP00VJead9uv3iGr0CVywEEumKC5ny6cbrUQu1FBj0caPjb4gnIdwQ\ntyZ97hCRczHachOGoB37o0wj7iXEDw==\n=zVVi\n-----END PGP SIGNATURE-----", "payload": "tree a8784e78948957417245fdeb1f17c0892f934683\nparent cd862a8ff3a936c354bc394beef74e4681abfd35\nauthor David Craven <david@craven.ch> 1535631588 +0200\ncommitter David Craven <david@craven.ch> 1535637817 +0200\n\n[RISCV] Add riscv32imc-unknown-none-elf target.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dfd5c39a121521124d5500b172f46ae12ee3e0c", "html_url": "https://github.com/rust-lang/rust/commit/8dfd5c39a121521124d5500b172f46ae12ee3e0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dfd5c39a121521124d5500b172f46ae12ee3e0c/comments", "author": {"login": "dvc94ch", "id": 741807, "node_id": "MDQ6VXNlcjc0MTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/741807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvc94ch", "html_url": "https://github.com/dvc94ch", "followers_url": "https://api.github.com/users/dvc94ch/followers", "following_url": "https://api.github.com/users/dvc94ch/following{/other_user}", "gists_url": "https://api.github.com/users/dvc94ch/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvc94ch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvc94ch/subscriptions", "organizations_url": "https://api.github.com/users/dvc94ch/orgs", "repos_url": "https://api.github.com/users/dvc94ch/repos", "events_url": "https://api.github.com/users/dvc94ch/events{/privacy}", "received_events_url": "https://api.github.com/users/dvc94ch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dvc94ch", "id": 741807, "node_id": "MDQ6VXNlcjc0MTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/741807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvc94ch", "html_url": "https://github.com/dvc94ch", "followers_url": "https://api.github.com/users/dvc94ch/followers", "following_url": "https://api.github.com/users/dvc94ch/following{/other_user}", "gists_url": "https://api.github.com/users/dvc94ch/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvc94ch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvc94ch/subscriptions", "organizations_url": "https://api.github.com/users/dvc94ch/orgs", "repos_url": "https://api.github.com/users/dvc94ch/repos", "events_url": "https://api.github.com/users/dvc94ch/events{/privacy}", "received_events_url": "https://api.github.com/users/dvc94ch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd862a8ff3a936c354bc394beef74e4681abfd35", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd862a8ff3a936c354bc394beef74e4681abfd35", "html_url": "https://github.com/rust-lang/rust/commit/cd862a8ff3a936c354bc394beef74e4681abfd35"}], "stats": {"total": 90, "additions": 76, "deletions": 14}, "files": [{"sha": "e2484b7224b26fb96decc794a86464ee6fb3a495", "filename": "src/ci/docker/dist-various-1/Dockerfile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dfd5c39a121521124d5500b172f46ae12ee3e0c/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/8dfd5c39a121521124d5500b172f46ae12ee3e0c/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile?ref=8dfd5c39a121521124d5500b172f46ae12ee3e0c", "patch": "@@ -102,6 +102,7 @@ ENV TARGETS=$TARGETS,thumbv6m-none-eabi\n ENV TARGETS=$TARGETS,thumbv7m-none-eabi\n ENV TARGETS=$TARGETS,thumbv7em-none-eabi\n ENV TARGETS=$TARGETS,thumbv7em-none-eabihf\n+ENV TARGETS=$TARGETS,riscv32imc-unknown-none-elf\n ENV TARGETS=$TARGETS,riscv32imac-unknown-none-elf\n ENV TARGETS=$TARGETS,armebv7r-none-eabi\n ENV TARGETS=$TARGETS,armebv7r-none-eabihf"}, {"sha": "2514909ba75f3082a490e5ede673aa3d0bb3edd1", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dfd5c39a121521124d5500b172f46ae12ee3e0c/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dfd5c39a121521124d5500b172f46ae12ee3e0c/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=8dfd5c39a121521124d5500b172f46ae12ee3e0c", "patch": "@@ -74,6 +74,7 @@ mod thumb_base;\n mod l4re_base;\n mod fuchsia_base;\n mod redox_base;\n+mod riscv_base;\n \n #[derive(Clone, Copy, Debug, Eq, Ord, PartialEq, PartialOrd, Hash,\n          RustcEncodable, RustcDecodable)]\n@@ -406,6 +407,7 @@ supported_targets! {\n     (\"aarch64-unknown-hermit\", aarch64_unknown_hermit),\n     (\"x86_64-unknown-hermit\", x86_64_unknown_hermit),\n \n+    (\"riscv32imc-unknown-none-elf\", riscv32imc_unknown_none_elf),\n     (\"riscv32imac-unknown-none-elf\", riscv32imac_unknown_none_elf),\n \n     (\"aarch64-unknown-none\", aarch64_unknown_none),"}, {"sha": "b199a50f0ca389a3d8faa5e0e37c54481823fde9", "filename": "src/librustc_target/spec/riscv32imac_unknown_none_elf.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8dfd5c39a121521124d5500b172f46ae12ee3e0c/src%2Flibrustc_target%2Fspec%2Friscv32imac_unknown_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dfd5c39a121521124d5500b172f46ae12ee3e0c/src%2Flibrustc_target%2Fspec%2Friscv32imac_unknown_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Friscv32imac_unknown_none_elf.rs?ref=8dfd5c39a121521124d5500b172f46ae12ee3e0c", "patch": "@@ -10,7 +10,6 @@\n \n use spec::{LinkerFlavor, LldFlavor, PanicStrategy,\n            Target, TargetOptions, TargetResult};\n-use spec::abi::{Abi};\n \n pub fn target() -> TargetResult {\n     Ok(Target {\n@@ -35,19 +34,7 @@ pub fn target() -> TargetResult {\n             panic_strategy: PanicStrategy::Abort,\n             relocation_model: \"static\".to_string(),\n             emit_debug_gdb_scripts: false,\n-            abi_blacklist: vec![\n-                Abi::Cdecl,\n-                Abi::Stdcall,\n-                Abi::Fastcall,\n-                Abi::Vectorcall,\n-                Abi::Thiscall,\n-                Abi::Aapcs,\n-                Abi::Win64,\n-                Abi::SysV64,\n-                Abi::PtxKernel,\n-                Abi::Msp430Interrupt,\n-                Abi::X86Interrupt,\n-            ],\n+            abi_blacklist: super::riscv_base::abi_blacklist(),\n             .. Default::default()\n         },\n     })"}, {"sha": "15b16cf31019541feeacc37c20f1a27bb70c7ef7", "filename": "src/librustc_target/spec/riscv32imc_unknown_none_elf.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/8dfd5c39a121521124d5500b172f46ae12ee3e0c/src%2Flibrustc_target%2Fspec%2Friscv32imc_unknown_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dfd5c39a121521124d5500b172f46ae12ee3e0c/src%2Flibrustc_target%2Fspec%2Friscv32imc_unknown_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Friscv32imc_unknown_none_elf.rs?ref=8dfd5c39a121521124d5500b172f46ae12ee3e0c", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use spec::{LinkerFlavor, LldFlavor, PanicStrategy,\n+           Target, TargetOptions, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    Ok(Target {\n+        data_layout: \"e-m:e-p:32:32-i64:64-n32-S128\".to_string(),\n+        llvm_target: \"riscv32\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: String::new(),\n+        target_vendor: \"unknown\".to_string(),\n+        arch: \"riscv32\".to_string(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+\n+        options: TargetOptions {\n+            linker: Some(\"rust-lld\".to_string()),\n+            cpu: \"generic-rv32\".to_string(),\n+            max_atomic_width: Some(32),\n+            atomic_cas: false,\n+            features: \"+m,+c\".to_string(),\n+            executables: true,\n+            panic_strategy: PanicStrategy::Abort,\n+            relocation_model: \"static\".to_string(),\n+            emit_debug_gdb_scripts: false,\n+            abi_blacklist: super::riscv_base::abi_blacklist(),\n+            .. Default::default()\n+        },\n+    })\n+}"}, {"sha": "701ddf57b32c89ed3ae22a92a086a0ebeb86dfc5", "filename": "src/librustc_target/spec/riscv_base.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/8dfd5c39a121521124d5500b172f46ae12ee3e0c/src%2Flibrustc_target%2Fspec%2Friscv_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dfd5c39a121521124d5500b172f46ae12ee3e0c/src%2Flibrustc_target%2Fspec%2Friscv_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Friscv_base.rs?ref=8dfd5c39a121521124d5500b172f46ae12ee3e0c", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use spec::abi::Abi;\n+\n+// All the calling conventions trigger an assertion(Unsupported calling\n+// convention) in llvm on RISCV\n+pub fn abi_blacklist() -> Vec<Abi> {\n+    vec![\n+        Abi::Cdecl,\n+        Abi::Stdcall,\n+        Abi::Fastcall,\n+        Abi::Vectorcall,\n+        Abi::Thiscall,\n+        Abi::Aapcs,\n+        Abi::Win64,\n+        Abi::SysV64,\n+        Abi::PtxKernel,\n+        Abi::Msp430Interrupt,\n+        Abi::X86Interrupt,\n+        Abi::AmdGpuKernel,\n+    ]\n+}"}, {"sha": "589eaea30900aca6e8a08ce8407befae403d35e8", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dfd5c39a121521124d5500b172f46ae12ee3e0c/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dfd5c39a121521124d5500b172f46ae12ee3e0c/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=8dfd5c39a121521124d5500b172f46ae12ee3e0c", "patch": "@@ -92,6 +92,7 @@ static TARGETS: &'static [&'static str] = &[\n     \"powerpc64-unknown-linux-gnu\",\n     \"powerpc64le-unknown-linux-gnu\",\n     \"powerpc64le-unknown-linux-musl\",\n+    \"riscv32imc-unknown-none-elf\",\n     \"riscv32imac-unknown-none-elf\",\n     \"s390x-unknown-linux-gnu\",\n     \"sparc-unknown-linux-gnu\","}]}