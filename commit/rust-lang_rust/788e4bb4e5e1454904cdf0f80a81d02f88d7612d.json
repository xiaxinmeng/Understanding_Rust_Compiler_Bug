{"sha": "788e4bb4e5e1454904cdf0f80a81d02f88d7612d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4OGU0YmI0ZTVlMTQ1NDkwNGNkZjBmODBhODFkMDJmODhkNzYxMmQ=", "commit": {"author": {"name": "0yoyoyo", "email": "60439919+0yoyoyo@users.noreply.github.com", "date": "2021-02-11T15:40:54Z"}, "committer": {"name": "0yoyoyo", "email": "60439919+0yoyoyo@users.noreply.github.com", "date": "2021-02-11T15:48:44Z"}, "message": "Fix suggestion to introduce explicit lifetime", "tree": {"sha": "c62de5e28325935f5ad7dbee87fa4d79ed175fb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c62de5e28325935f5ad7dbee87fa4d79ed175fb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/788e4bb4e5e1454904cdf0f80a81d02f88d7612d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/788e4bb4e5e1454904cdf0f80a81d02f88d7612d", "html_url": "https://github.com/rust-lang/rust/commit/788e4bb4e5e1454904cdf0f80a81d02f88d7612d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/788e4bb4e5e1454904cdf0f80a81d02f88d7612d/comments", "author": {"login": "0yoyoyo", "id": 60439919, "node_id": "MDQ6VXNlcjYwNDM5OTE5", "avatar_url": "https://avatars.githubusercontent.com/u/60439919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0yoyoyo", "html_url": "https://github.com/0yoyoyo", "followers_url": "https://api.github.com/users/0yoyoyo/followers", "following_url": "https://api.github.com/users/0yoyoyo/following{/other_user}", "gists_url": "https://api.github.com/users/0yoyoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/0yoyoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0yoyoyo/subscriptions", "organizations_url": "https://api.github.com/users/0yoyoyo/orgs", "repos_url": "https://api.github.com/users/0yoyoyo/repos", "events_url": "https://api.github.com/users/0yoyoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/0yoyoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "0yoyoyo", "id": 60439919, "node_id": "MDQ6VXNlcjYwNDM5OTE5", "avatar_url": "https://avatars.githubusercontent.com/u/60439919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0yoyoyo", "html_url": "https://github.com/0yoyoyo", "followers_url": "https://api.github.com/users/0yoyoyo/followers", "following_url": "https://api.github.com/users/0yoyoyo/following{/other_user}", "gists_url": "https://api.github.com/users/0yoyoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/0yoyoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0yoyoyo/subscriptions", "organizations_url": "https://api.github.com/users/0yoyoyo/orgs", "repos_url": "https://api.github.com/users/0yoyoyo/repos", "events_url": "https://api.github.com/users/0yoyoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/0yoyoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07194ffcd25b0871ce560b9f702e52db27ac9f77", "url": "https://api.github.com/repos/rust-lang/rust/commits/07194ffcd25b0871ce560b9f702e52db27ac9f77", "html_url": "https://github.com/rust-lang/rust/commit/07194ffcd25b0871ce560b9f702e52db27ac9f77"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "63f8a7293d899d020687dc5ee69ae00af930f4d1", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/788e4bb4e5e1454904cdf0f80a81d02f88d7612d/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/788e4bb4e5e1454904cdf0f80a81d02f88d7612d/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=788e4bb4e5e1454904cdf0f80a81d02f88d7612d", "patch": "@@ -2248,13 +2248,18 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     \"...\",\n                 );\n                 if let Some(infer::RelateParamBound(_, t)) = origin {\n+                    let return_impl_trait = self\n+                        .in_progress_typeck_results\n+                        .map(|typeck_results| typeck_results.borrow().hir_owner)\n+                        .and_then(|owner| self.tcx.return_type_impl_trait(owner))\n+                        .is_some();\n                     let t = self.resolve_vars_if_possible(t);\n                     match t.kind() {\n                         // We've got:\n                         // fn get_later<G, T>(g: G, dest: &mut T) -> impl FnOnce() + '_\n                         // suggest:\n                         // fn get_later<'a, G: 'a, T>(g: G, dest: &mut T) -> impl FnOnce() + '_ + 'a\n-                        ty::Closure(_, _substs) | ty::Opaque(_, _substs) => {\n+                        ty::Closure(_, _substs) | ty::Opaque(_, _substs) if return_impl_trait => {\n                             new_binding_suggestion(&mut err, type_param_span, bound_kind);\n                         }\n                         _ => {"}, {"sha": "c6802ac6cc704e0a2839947f628d97e7d0c20dfa", "filename": "src/test/ui/suggestions/lifetimes/missing-lifetimes-in-signature-2.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/788e4bb4e5e1454904cdf0f80a81d02f88d7612d/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/788e4bb4e5e1454904cdf0f80a81d02f88d7612d/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature-2.rs?ref=788e4bb4e5e1454904cdf0f80a81d02f88d7612d", "patch": "@@ -0,0 +1,26 @@\n+// Regression test for #81650\n+\n+struct Foo<'a> {\n+    x: &'a mut &'a i32,\n+}\n+\n+impl<'a> Foo<'a> {\n+    fn bar<F, T>(&self, f: F)\n+    where\n+        F: FnOnce(&Foo<'a>) -> T,\n+        F: 'a,\n+    {}\n+}\n+\n+trait Test {\n+    fn test(&self);\n+}\n+\n+fn func<T: Test>(foo: &Foo, t: T) {\n+    foo.bar(move |_| {\n+    //~^ ERROR the parameter type `T` may not live long enough\n+        t.test();\n+    });\n+}\n+\n+fn main() {}"}, {"sha": "c7def9b668d9c4ae5a471ed96da243714a2608f5", "filename": "src/test/ui/suggestions/lifetimes/missing-lifetimes-in-signature-2.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/788e4bb4e5e1454904cdf0f80a81d02f88d7612d/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/788e4bb4e5e1454904cdf0f80a81d02f88d7612d/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Fmissing-lifetimes-in-signature-2.stderr?ref=788e4bb4e5e1454904cdf0f80a81d02f88d7612d", "patch": "@@ -0,0 +1,21 @@\n+error[E0311]: the parameter type `T` may not live long enough\n+  --> $DIR/missing-lifetimes-in-signature-2.rs:20:9\n+   |\n+LL | fn func<T: Test>(foo: &Foo, t: T) {\n+   |         -- help: consider adding an explicit lifetime bound...: `T: 'a +`\n+LL |     foo.bar(move |_| {\n+   |         ^^^\n+   |\n+note: the parameter type `T` must be valid for the anonymous lifetime #2 defined on the function body at 19:1...\n+  --> $DIR/missing-lifetimes-in-signature-2.rs:19:1\n+   |\n+LL | fn func<T: Test>(foo: &Foo, t: T) {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: ...so that the type `[closure@$DIR/missing-lifetimes-in-signature-2.rs:20:13: 23:6]` will meet its required lifetime bounds\n+  --> $DIR/missing-lifetimes-in-signature-2.rs:20:9\n+   |\n+LL |     foo.bar(move |_| {\n+   |         ^^^\n+\n+error: aborting due to previous error\n+"}]}