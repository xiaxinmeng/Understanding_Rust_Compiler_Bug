{"sha": "17643af868c0310ec23c64d729e2f75ff19f21c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NjQzYWY4NjhjMDMxMGVjMjNjNjRkNzI5ZTJmNzVmZjE5ZjIxYzc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-04-30T13:31:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-30T13:31:53Z"}, "message": "Apply suggestions from code review\n\nCo-Authored-By: RalfJung <post@ralfj.de>", "tree": {"sha": "9a31d3167f103f875a7a9d49dbf799858916c177", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a31d3167f103f875a7a9d49dbf799858916c177"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17643af868c0310ec23c64d729e2f75ff19f21c7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcyE5KCRBK7hj4Ov3rIwAAdHIIAHmvbYq7+aIrUaTIW9CMfmsY\nRKAnqQt0zLoi0I09iQT4A9liINuGDU5PaEODpOKi91rYSJGJ7W0l3noOBNY3Vpqf\nIu5SOXR/U40qw1LfUomzgIS8LDUWr4X9247HeiwfuGYuQg1b6lsbnY+dioY8MA1v\nkIRi0dU3WWhBAtdj6B/HzJh1Ex7uhe5zsnHpyAgPxDtZNyCeye/PSGW1MoFK3ol3\njOEPKzkD4akT1W3X/bDHQpWwPAsUWrqPcwWKW1rXdtqPeq/qP5oX9jbbz733Y0QR\nUbtw66n6+Wekmnh/6CWoDd6f8PJN8CIlSdfk4mKUIQfGNhJ3X8p3WhzBJpQ3aD8=\n=Mw1A\n-----END PGP SIGNATURE-----\n", "payload": "tree 9a31d3167f103f875a7a9d49dbf799858916c177\nparent 59985157d3931861a709ff610b22114442aac9ba\nauthor bjorn3 <bjorn3@users.noreply.github.com> 1556631113 +0200\ncommitter GitHub <noreply@github.com> 1556631113 +0200\n\nApply suggestions from code review\n\nCo-Authored-By: RalfJung <post@ralfj.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17643af868c0310ec23c64d729e2f75ff19f21c7", "html_url": "https://github.com/rust-lang/rust/commit/17643af868c0310ec23c64d729e2f75ff19f21c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17643af868c0310ec23c64d729e2f75ff19f21c7/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59985157d3931861a709ff610b22114442aac9ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/59985157d3931861a709ff610b22114442aac9ba", "html_url": "https://github.com/rust-lang/rust/commit/59985157d3931861a709ff610b22114442aac9ba"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2b4034d7313784a693a560d30304ca55d1398fdf", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/17643af868c0310ec23c64d729e2f75ff19f21c7/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17643af868c0310ec23c64d729e2f75ff19f21c7/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=17643af868c0310ec23c64d729e2f75ff19f21c7", "patch": "@@ -400,9 +400,9 @@ impl<'tcx> Stack {\n         // Either way, we ensure that we insert the new item in a way that between\n         // `derived_from` and the new one, there are only items *compatible with* `derived_from`.\n         let new_idx = if weak {\n-            // A weak ShareadReadOnly reborrow might be added below other items, violating the\n+            // A weak SharedReadOnly reborrow might be added below other items, violating the\n             // invariant that only SharedReadOnly can sit on top of SharedReadOnly.\n-            assert!(new.perm != Permission::SharedReadOnly, \"Weak ShareadReadOnly reborrows don't work\");\n+            assert!(new.perm != Permission::SharedReadOnly, \"Weak SharedReadOnly reborrows don't work\");\n             // A very liberal reborrow because the new pointer does not expect any kind of aliasing guarantee.\n             // Just insert new permission as child of old permission, and maintain everything else.\n             // This inserts \"as far down as possible\", which is good because it makes this pointer as"}]}