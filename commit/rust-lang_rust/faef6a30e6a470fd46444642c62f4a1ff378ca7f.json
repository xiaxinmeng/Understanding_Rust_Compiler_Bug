{"sha": "faef6a30e6a470fd46444642c62f4a1ff378ca7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhZWY2YTMwZTZhNDcwZmQ0NjQ0NDY0MmM2MmY0YTFmZjM3OGNhN2Y=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-06-30T18:23:41Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-06-30T19:20:10Z"}, "message": "Copy undef_masks correctly for repeated bytes", "tree": {"sha": "5c83bd056858010f24a3be2da92f8772841dabf3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c83bd056858010f24a3be2da92f8772841dabf3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faef6a30e6a470fd46444642c62f4a1ff378ca7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faef6a30e6a470fd46444642c62f4a1ff378ca7f", "html_url": "https://github.com/rust-lang/rust/commit/faef6a30e6a470fd46444642c62f4a1ff378ca7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faef6a30e6a470fd46444642c62f4a1ff378ca7f/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84fe0c40a1829ebac169a1f7804da4b557b31359", "url": "https://api.github.com/repos/rust-lang/rust/commits/84fe0c40a1829ebac169a1f7804da4b557b31359", "html_url": "https://github.com/rust-lang/rust/commit/84fe0c40a1829ebac169a1f7804da4b557b31359"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "bf720540bdcd40ba93742c19c0ba6a6140695d4b", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/faef6a30e6a470fd46444642c62f4a1ff378ca7f/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faef6a30e6a470fd46444642c62f4a1ff378ca7f/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=faef6a30e6a470fd46444642c62f4a1ff378ca7f", "patch": "@@ -666,7 +666,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n             }\n         }\n \n-        self.copy_undef_mask(src, dest, size * length)?;\n+        self.copy_undef_mask(src, dest, size, length)?;\n         // copy back the relocations\n         self.get_mut(dest.alloc_id)?.relocations.insert_presorted(relocations);\n \n@@ -887,6 +887,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n         src: Pointer,\n         dest: Pointer,\n         size: Size,\n+        repeat: u64,\n     ) -> EvalResult<'tcx> {\n         // The bits have to be saved locally before writing to dest in case src and dest overlap.\n         assert_eq!(size.bytes() as usize as u64, size.bytes());\n@@ -896,10 +897,13 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n \n         for i in 0..size.bytes() {\n             let defined = undef_mask.get(src.offset + Size::from_bytes(i));\n-            dest_allocation.undef_mask.set(\n-                dest.offset + Size::from_bytes(i),\n-                defined\n-            );\n+            \n+            for j in 0..repeat {\n+                dest_allocation.undef_mask.set(\n+                    dest.offset + Size::from_bytes(i + (size.bytes() * j)),\n+                    defined\n+                );\n+            }\n         }\n \n         Ok(())"}]}