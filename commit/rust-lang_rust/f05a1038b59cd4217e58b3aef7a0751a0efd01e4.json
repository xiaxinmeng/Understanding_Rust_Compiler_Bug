{"sha": "f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwNWExMDM4YjU5Y2Q0MjE3ZTU4YjNhZWY3YTA3NTFhMGVmZDAxZTQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-08-20T02:16:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-20T02:16:54Z"}, "message": "Merge pull request #3065 from rust-lang-nursery/rustup\n\nRustup to rustc 1.30.0-nightly (6bf6d50a6 2018-08-19)", "tree": {"sha": "b9c766d285e71f0071b2629dbae8f37231e56dca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9c766d285e71f0071b2629dbae8f37231e56dca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbeiSWCRBK7hj4Ov3rIwAAdHIIABnH81V4Ahjt8P2bvtRLs5wy\nUNPlYKaMuywB8ELMN34/wW62GzzM/zAS3ZfaKlnNeW9jfLjwcHt8QLf3aZ3ygcFo\nj+/q9qCixb/To1j2hI7UeOkVKGGQRcLQh8lnC+RpIrnJKROcHY1M55fNXxjaeyuu\nxP8qW+a1elORP5YNmWWuuDBFU1GcyzsrO0e9qyL75WZ85vs1FTCZKRv6peKpgvKQ\n9K0DbJKgLdumYd+kJDqSh2Cz98akow/n0JhzlSMkUBIm8CPW6Kbn5KP1c+xEyx7t\nWWoH8b6LWk2FQsCwxGnYCfWt3MpHcCDtxcycxlhoKd/xgI/tFJDaW1janMGSdcs=\n=IQO4\n-----END PGP SIGNATURE-----\n", "payload": "tree b9c766d285e71f0071b2629dbae8f37231e56dca\nparent 07c2e614362ad8645eafe771e672a65f92e3b9a2\nparent a7bea134d30577fa6f1f722cc27e5873c5869962\nauthor Manish Goregaokar <manishsmail@gmail.com> 1534731414 -0700\ncommitter GitHub <noreply@github.com> 1534731414 -0700\n\nMerge pull request #3065 from rust-lang-nursery/rustup\n\nRustup to rustc 1.30.0-nightly (6bf6d50a6 2018-08-19)"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "html_url": "https://github.com/rust-lang/rust/commit/f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07c2e614362ad8645eafe771e672a65f92e3b9a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/07c2e614362ad8645eafe771e672a65f92e3b9a2", "html_url": "https://github.com/rust-lang/rust/commit/07c2e614362ad8645eafe771e672a65f92e3b9a2"}, {"sha": "a7bea134d30577fa6f1f722cc27e5873c5869962", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7bea134d30577fa6f1f722cc27e5873c5869962", "html_url": "https://github.com/rust-lang/rust/commit/a7bea134d30577fa6f1f722cc27e5873c5869962"}], "stats": {"total": 126, "additions": 62, "deletions": 64}, "files": [{"sha": "90f72d3d1842614583e83aeb057799a5e75f3609", "filename": "clippy_lints/src/arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -2,7 +2,7 @@ use crate::utils::span_lint;\n use rustc::hir;\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n \n /// **What it does:** Checks for plain integer arithmetic.\n ///"}, {"sha": "9804d3a0f0773892317548f6a759b3be869616d9", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -12,7 +12,7 @@ use if_chain::if_chain;\n use rustc::ty::{self, TyCtxt};\n use semver::Version;\n use syntax::ast::{AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem, NestedMetaItemKind};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n \n /// **What it does:** Checks for items annotated with `#[inline(always)]`,\n /// unless the annotated function is empty or simply panics."}, {"sha": "12de4faa753cbe7f26620e44634a4ee20822aff7", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -3,7 +3,7 @@ use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::ast::LitKind;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::{span_lint, span_lint_and_then};\n use crate::utils::sugg::Sugg;\n use crate::consts::{constant, Constant};"}, {"sha": "eda6a045cba4c90cf6791ac0b14828280b268480", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -3,7 +3,7 @@ use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use rustc::hir::intravisit::*;\n use syntax::ast::{LitKind, NodeId, DUMMY_NODE_ID};\n-use syntax::codemap::{dummy_spanned, Span, DUMMY_SP};\n+use syntax::source_map::{dummy_spanned, Span, DUMMY_SP};\n use rustc_data_structures::thin_vec::ThinVec;\n use crate::utils::{in_macro, paths, match_type, snippet_opt, span_lint_and_then, SpanlessEq, get_trait_def_id, implements_trait};\n "}, {"sha": "67cd37bee37071a2b360eaadddb73dacb14bf0a4", "filename": "clippy_lints/src/cyclomatic_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -7,7 +7,7 @@ use rustc::hir::*;\n use rustc::ty;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use syntax::ast::{Attribute, NodeId};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n \n use crate::utils::{in_macro, is_allowed, match_type, paths, span_help_and_lint, LimitStack};\n "}, {"sha": "5aeca29f6d8c22acc844549a6ed0797caddb9736", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -3,7 +3,7 @@ use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};\n use rustc::hir::*;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::paths;\n use crate::utils::{is_automatically_derived, is_copy, match_path, span_lint_and_then};\n "}, {"sha": "12128eda25883b26e0eafd4165f733433ff2b03f", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -3,7 +3,7 @@ use pulldown_cmark;\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use syntax::ast;\n-use syntax::codemap::{BytePos, Span};\n+use syntax::source_map::{BytePos, Span};\n use syntax_pos::Pos;\n use crate::utils::span_lint;\n use url::Url;"}, {"sha": "013a75e6457135971178487edd2e3ce3466d235f", "filename": "clippy_lints/src/double_comparison.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_comparison.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -3,7 +3,7 @@\n use rustc::hir::*;\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n \n use crate::utils::{snippet, span_lint_and_sugg, SpanlessEq};\n "}, {"sha": "ef5d18f081a9cf200579075c1096e332e1c44bc2", "filename": "clippy_lints/src/duration_subsec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fduration_subsec.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -2,7 +2,7 @@ use rustc::hir::*;\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n-use syntax::codemap::Spanned;\n+use syntax::source_map::Spanned;\n \n use crate::consts::{constant, Constant};\n use crate::utils::paths;"}, {"sha": "142a099f53999b013df01490230ce0ad45b72cf4", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -3,7 +3,7 @@ use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::SpanlessEq;\n use crate::utils::{get_item_name, match_type, paths, snippet, span_lint_and_then, walk_ptrs_ty};\n "}, {"sha": "90cc1716cc1b024b0ec356908f1d33c3f210d21f", "filename": "clippy_lints/src/enum_glob_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_glob_use.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -5,7 +5,7 @@ use rustc::hir::def::Def;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint, lint_array};\n use syntax::ast::NodeId;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::span_lint;\n \n /// **What it does:** Checks for `use Enum::*`."}, {"sha": "ca38d497df4662e9f045fc11e8bc033489c1b1e5", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -3,7 +3,7 @@\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use syntax::symbol::LocalInternedString;\n use crate::utils::{span_help_and_lint, span_lint};\n use crate::utils::{camel_case_from, camel_case_until, in_macro};"}, {"sha": "2976700428cbd94fb725c41a2fabda7ab8d42eb9", "filename": "clippy_lints/src/erasing_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Ferasing_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Ferasing_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ferasing_op.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -2,7 +2,7 @@ use crate::consts::{constant_simple, Constant};\n use rustc::hir::*;\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::{in_macro, span_lint};\n \n /// **What it does:** Checks for erasing operations, e.g. `x * 0`."}, {"sha": "2cd2a46cbabe3c075c336bae638a58c0dd0fa528", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -9,7 +9,7 @@ use rustc::ty::{self, Ty};\n use rustc::ty::layout::LayoutOf;\n use rustc::util::nodemap::NodeSet;\n use syntax::ast::NodeId;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::span_lint;\n \n pub struct Pass {"}, {"sha": "b86e3332188926a93d0b66671a75e07f3aa56025", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -8,7 +8,7 @@ use rustc::hir::def::Def;\n use std::collections::HashSet;\n use syntax::ast;\n use rustc_target::spec::abi::Abi;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::{iter_input_pats, span_lint, type_is_unsafe_function};\n \n /// **What it does:** Checks for functions with too many parameters."}, {"sha": "939039e93ca78bdef676b89e3eaace7c66320ecf", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -2,7 +2,7 @@ use crate::consts::{constant_simple, Constant};\n use rustc::hir::*;\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::{in_macro, snippet, span_lint, unsext, clip};\n use rustc::ty;\n "}, {"sha": "ce0635188802b7ce49e853f01823cb6760ee79b9", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -5,7 +5,7 @@ use rustc::{declare_lint, lint_array};\n use rustc::ty;\n use std::collections::HashSet;\n use syntax::ast::{Lit, LitKind, Name};\n-use syntax::codemap::{Span, Spanned};\n+use syntax::source_map::{Span, Spanned};\n use crate::utils::{get_item_name, in_macro, snippet, span_lint, span_lint_and_sugg, walk_ptrs_ty};\n \n /// **What it does:** Checks for getting the length of something via `.len()`"}, {"sha": "76649d8a1451c7714e7ac527d246af89a08a0521", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -12,7 +12,6 @@\n #![feature(iterator_find_map)]\n #![feature(macro_at_most_once_rep)]\n #![feature(tool_attributes)]\n-#![feature(rust_2018_preview)]\n #![warn(rust_2018_idioms)]\n \n use toml;"}, {"sha": "d8e6a43f864f66c32c8b2141d6a6a1fac1eb5c7f", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -6,7 +6,7 @@ use rustc::hir::def::Def;\n use rustc::hir::*;\n use rustc::hir::intravisit::*;\n use std::collections::{HashMap, HashSet};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::{last_path_segment, span_lint};\n use syntax::symbol::keywords;\n "}, {"sha": "3dacb3cd422be23b024ff9c27eb20c702d9e423a", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -18,7 +18,7 @@ use rustc::ty::subst::Subst;\n use std::collections::{HashMap, HashSet};\n use std::iter::{once, Iterator};\n use syntax::ast;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::{sugg, sext};\n use crate::utils::usage::mutated_variables;\n use crate::consts::{constant, Constant};"}, {"sha": "7cbed82d5c7efd832d68cdc4f5eb212533298436", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -4,7 +4,7 @@ use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty;\n use rustc_errors::Applicability;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::{in_macro, iter_input_pats, match_type, method_chain_args, snippet, span_lint_and_then};\n use crate::utils::paths;\n "}, {"sha": "84ab72777e4363d7c6a30480109c249ce6bfb8b3", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -6,7 +6,7 @@ use rustc::ty::{self, Ty};\n use std::cmp::Ordering;\n use std::collections::Bound;\n use syntax::ast::LitKind;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::paths;\n use crate::utils::{expr_block, is_allowed, is_expn_of, match_qpath, match_type, multispan_sugg,\n             remove_blocks, snippet, span_lint_and_sugg, span_lint_and_then, span_note_and_lint, walk_ptrs_ty};"}, {"sha": "ceb1307dfed453ceff23a885a9cee83ab990abf7", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -9,7 +9,7 @@ use std::borrow::Cow;\n use std::fmt;\n use std::iter;\n use syntax::ast;\n-use syntax::codemap::{Span, BytePos};\n+use syntax::source_map::{Span, BytePos};\n use crate::utils::{get_arg_name, get_trait_def_id, implements_trait, in_macro, is_copy, is_expn_of, is_self,\n             is_self_ty, iter_input_pats, last_path_segment, match_def_path, match_path, match_qpath, match_trait_method,\n             match_type, method_chain_args, match_var, return_ty, remove_blocks, same_tys, single_segment_path, snippet,\n@@ -1311,7 +1311,7 @@ fn lint_unnecessary_fold(cx: &LateContext<'_, '_>, expr: &hir::Expr, fold_args:\n \n             then {\n                 // Span containing `.fold(...)`\n-                let next_point = cx.sess().codemap().next_point(fold_args[0].span);\n+                let next_point = cx.sess().source_map().next_point(fold_args[0].span);\n                 let fold_span = next_point.with_hi(fold_args[2].span.hi() + BytePos(1));\n \n                 let sugg = if replacement_has_args {"}, {"sha": "fc9b72ba949ce16123922a4481ed47cb152cea53", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -6,7 +6,7 @@ use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty;\n-use syntax::codemap::{ExpnFormat, Span};\n+use syntax::source_map::{ExpnFormat, Span};\n use crate::utils::{get_item_name, get_parent_expr, implements_trait, in_constant, in_macro, is_integer_literal,\n             iter_input_pats, last_path_segment, match_qpath, match_trait_method, paths, snippet, span_lint,\n             span_lint_and_then, walk_ptrs_ty, SpanlessEq};"}, {"sha": "6c82fa58e8dfafb1b1ffddc969c89f6e6fa18540", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -4,7 +4,7 @@ use if_chain::if_chain;\n use std::collections::HashMap;\n use std::char;\n use syntax::ast::*;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use syntax::visit::FnKind;\n use crate::utils::{constants, snippet, snippet_opt, span_help_and_lint, span_lint, span_lint_and_then};\n \n@@ -235,7 +235,7 @@ impl EarlyLintPass for MiscEarly {\n                 for field in pfields {\n                     match field.node.pat.node {\n                         PatKind::Wild => {},\n-                        _ => if let Ok(n) = cx.sess().codemap().span_to_snippet(field.span) {\n+                        _ => if let Ok(n) = cx.sess().source_map().span_to_snippet(field.span) {\n                             normal.push(n);\n                         },\n                     }"}, {"sha": "9735799d136b79fe562299861ed049c2d905a6fd", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -24,7 +24,7 @@ use rustc::{declare_lint, lint_array};\n use rustc::ty;\n use syntax::ast;\n use syntax::attr;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::in_macro;\n \n /// **What it does:** Warns if there is missing doc for any documentable item"}, {"sha": "8e2b08b51525956aac1e8f7793188ae873dc0ed5", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -13,7 +13,7 @@ use rustc::hir;\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use syntax::ast;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n \n /// **What it does:** it lints if an exported function, method, trait method with default impl,\n /// or trait method impl is not `#[inline]`."}, {"sha": "19d860dab36597f1f29c74cd14090e9207e05494", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -6,7 +6,7 @@ use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use syntax::ast::LitKind;\n-use syntax::codemap::Spanned;\n+use syntax::source_map::Spanned;\n use crate::utils::{snippet, span_lint, span_lint_and_sugg};\n use crate::utils::sugg::Sugg;\n "}, {"sha": "0c9b354035f9aa4743a5e8248183b9ff051bb3f8", "filename": "clippy_lints/src/needless_continue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_continue.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -30,7 +30,7 @@\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use syntax::ast;\n-use syntax::codemap::{original_sp, DUMMY_SP};\n+use syntax::source_map::{original_sp, DUMMY_SP};\n use std::borrow::Cow;\n \n use crate::utils::{in_macro, snippet, snippet_block, span_help_and_lint, trim_multiline};"}, {"sha": "2b0c021ea03d6654c08ee7d613edaf97d993129c", "filename": "clippy_lints/src/neg_multiply.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_multiply.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -2,7 +2,7 @@ use rustc::hir::*;\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n-use syntax::codemap::{Span, Spanned};\n+use syntax::source_map::{Span, Spanned};\n \n use crate::consts::{self, Constant};\n use crate::utils::span_lint;"}, {"sha": "77b945f48fd6566e480600f95926d3658d6e64c2", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -4,7 +4,7 @@ use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::paths;\n use crate::utils::{get_trait_def_id, implements_trait, return_ty, same_tys, span_lint_and_then};\n use crate::utils::sugg::DiagnosticBuilderExt;"}, {"sha": "acfa341ed1fae969ce31beaaf8b70070f4c95a4e", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -1,6 +1,6 @@\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use syntax::symbol::LocalInternedString;\n use syntax::ast::*;\n use syntax::attr;"}, {"sha": "ac399e238b695df1cb41b8b63046911d0fac8b83", "filename": "clippy_lints/src/open_options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fopen_options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fopen_options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fopen_options.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -2,7 +2,7 @@ use rustc::hir::{Expr, ExprKind};\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use syntax::ast::LitKind;\n-use syntax::codemap::{Span, Spanned};\n+use syntax::source_map::{Span, Spanned};\n use crate::utils::{match_type, paths, span_lint, walk_ptrs_ty};\n \n /// **What it does:** Checks for duplicate open options as well as combinations"}, {"sha": "c4e802adaeeca4ce7f421ca9e8c35357368dc496", "filename": "clippy_lints/src/precedence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprecedence.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -1,7 +1,7 @@\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n-use syntax::codemap::Spanned;\n+use syntax::source_map::Spanned;\n use crate::utils::{in_macro, snippet, span_lint_and_sugg};\n \n /// **What it does:** Checks for operations where precedence may be unclear"}, {"sha": "cbf171381378ccdef64af720d7dbe17df74208c6", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -9,7 +9,7 @@ use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty;\n use syntax::ast::NodeId;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use syntax_pos::MultiSpan;\n use crate::utils::{match_qpath, match_type, paths, snippet_opt, span_lint, span_lint_and_then, walk_ptrs_hir_ty};\n use crate::utils::ptr::get_spans;"}, {"sha": "27620ede5b0c265528ae4812bb2694cfe2d7ceb0", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -3,7 +3,7 @@ use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::hir::*;\n use syntax::ast::RangeLimits;\n-use syntax::codemap::Spanned;\n+use syntax::source_map::Spanned;\n use crate::utils::{is_integer_literal, paths, snippet, span_lint, span_lint_and_then};\n use crate::utils::{get_trait_def_id, higher, implements_trait, SpanlessEq};\n use crate::utils::sugg::Sugg;"}, {"sha": "4553b08e7478bb631ed6604114cbaceef08b2d21", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -5,7 +5,7 @@ use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use std::collections::HashSet;\n use syntax::ast::{LitKind, NodeId, StrStyle};\n-use syntax::codemap::{BytePos, Span};\n+use syntax::source_map::{BytePos, Span};\n use crate::utils::{is_expn_of, match_def_path, match_type, opt_def_id, paths, span_help_and_lint, span_lint};\n use crate::consts::{constant, Constant};\n "}, {"sha": "8125cc4153bab634990d4df1541b7223fd3ff6cb", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -2,7 +2,7 @@ use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use syntax::ast;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use syntax::visit::FnKind;\n \n use crate::utils::{in_macro, match_path_ast, snippet_opt, span_lint_and_then, span_note_and_lint};"}, {"sha": "f5c25737993dffb2085fcadd7e53741ad5742e5e", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -4,7 +4,7 @@ use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use rustc::hir::intravisit::FnKind;\n use rustc::ty;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::{contains_name, higher, iter_input_pats, snippet, span_lint_and_then};\n \n /// **What it does:** Checks for bindings that shadow other bindings already in"}, {"sha": "d66163984aa8ae6a68b80fe08c9d090d43ae5718", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -1,7 +1,7 @@\n use rustc::hir::*;\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n-use syntax::codemap::Spanned;\n+use syntax::source_map::Spanned;\n use crate::utils::SpanlessEq;\n use crate::utils::{get_parent_expr, is_allowed, match_type, paths, span_lint, span_lint_and_sugg, walk_ptrs_ty};\n "}, {"sha": "3b311847795c47ee6d2b022f10573ac66209aecf", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -12,7 +12,7 @@ use std::cmp::Ordering;\n use std::collections::BTreeMap;\n use std::borrow::Cow;\n use syntax::ast::{FloatTy, IntTy, UintTy};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use syntax::errors::DiagnosticBuilder;\n use crate::utils::{comparisons, differing_macro_contexts, higher, in_constant, in_macro, last_path_segment, match_def_path, match_path,\n             match_type, multispan_sugg, opt_def_id, same_tys, snippet, snippet_opt, span_help_and_lint, span_lint,"}, {"sha": "2768efca88e175ebecb0b75befb992e5f78ef8c2", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -2,7 +2,7 @@ use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n use syntax::ast::{LitKind, NodeId};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use unicode_normalization::UnicodeNormalization;\n use crate::utils::{is_allowed, snippet, span_help_and_lint};\n "}, {"sha": "37a5836f153d7618b48ae90fc6d7c9cf34fdac87", "filename": "clippy_lints/src/unsafe_removed_from_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -1,7 +1,7 @@\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use syntax::ast::*;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use syntax::symbol::LocalInternedString;\n use crate::utils::span_lint;\n "}, {"sha": "04b4fcabdd80278e969d1bf2d02f8803470d113e", "filename": "clippy_lints/src/unused_label.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Funused_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Funused_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_label.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -4,7 +4,7 @@ use rustc::hir;\n use rustc::hir::intravisit::{walk_expr, walk_fn, FnKind, NestedVisitorMap, Visitor};\n use std::collections::HashMap;\n use syntax::ast;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use syntax::symbol::LocalInternedString;\n use crate::utils::{in_macro, span_lint};\n "}, {"sha": "2a557ed8e4362a5769e370c6066d655ab58a08af", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -6,7 +6,7 @@ use crate::utils::{in_macro, match_type, paths, span_lint_and_then, usage::is_po\n use rustc::hir::intravisit::*;\n use rustc::hir::*;\n use syntax::ast::NodeId;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n \n /// **What it does:** Checks for calls of `unwrap[_err]()` that cannot fail.\n ///"}, {"sha": "1567bd9ffb67063804ae50881b54ec9d20cb0641", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -5,14 +5,14 @@\n use lazy_static::lazy_static;\n use std::{env, fmt, fs, io, path};\n use std::io::Read;\n-use syntax::{ast, codemap};\n+use syntax::{ast, source_map};\n use toml;\n use std::sync::Mutex;\n \n /// Get the configuration file from arguments.\n pub fn file_from_args(\n-    args: &[codemap::Spanned<ast::NestedMetaItemKind>],\n-) -> Result<Option<path::PathBuf>, (&'static str, codemap::Span)> {\n+    args: &[source_map::Spanned<ast::NestedMetaItemKind>],\n+) -> Result<Option<path::PathBuf>, (&'static str, source_map::Span)> {\n     for arg in args.iter().filter_map(|a| a.meta_item()) {\n         if arg.name() == \"conf_file\" {\n             return match arg.node {"}, {"sha": "6df41f1cd41c02a280c122dbd001cd43b1119bb9", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -7,7 +7,7 @@ use rustc_data_structures::fx::FxHashMap;\n use crate::utils::{match_qpath, paths, span_lint, span_lint_and_sugg};\n use syntax::symbol::LocalInternedString;\n use syntax::ast::{Crate as AstCrate, Ident, ItemKind, Name};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use std::collections::{HashMap, HashSet};\n \n "}, {"sha": "0182ae6a1a0b33fb1c0573d86e4d61c5de275433", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -19,7 +19,7 @@ use std::str::FromStr;\n use std::rc::Rc;\n use syntax::ast::{self, LitKind};\n use syntax::attr;\n-use syntax::codemap::{Span, DUMMY_SP};\n+use syntax::source_map::{Span, DUMMY_SP};\n use syntax::errors::DiagnosticBuilder;\n use syntax::ptr::P;\n use syntax::symbol::keywords;\n@@ -365,7 +365,7 @@ pub fn snippet<'a, 'b, T: LintContext<'b>>(cx: &T, span: Span, default: &'a str)\n \n /// Convert a span to a code snippet. Returns `None` if not available.\n pub fn snippet_opt<'a, T: LintContext<'a>>(cx: &T, span: Span) -> Option<String> {\n-    cx.sess().codemap().span_to_snippet(span).ok()\n+    cx.sess().source_map().span_to_snippet(span).ok()\n }\n \n /// Convert a span (from a block) to a code snippet if available, otherwise use\n@@ -385,7 +385,7 @@ pub fn snippet_block<'a, 'b, T: LintContext<'b>>(cx: &T, span: Span, default: &'\n \n /// Returns a new Span that covers the full last line of the given Span\n pub fn last_line_of_span<'a, T: LintContext<'a>>(cx: &T, span: Span) -> Span {\n-    let file_map_and_line = cx.sess().codemap().lookup_line(span.lo()).unwrap();\n+    let file_map_and_line = cx.sess().source_map().lookup_line(span.lo()).unwrap();\n     let line_no = file_map_and_line.line;\n     let line_start = &file_map_and_line.fm.lines[line_no];\n     Span::new(*line_start, span.hi(), span.ctxt())"}, {"sha": "16a03f8f99c6d4a93697ad50ba7ef15f7a773f12", "filename": "clippy_lints/src/utils/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fptr.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -3,7 +3,7 @@ use rustc::hir::*;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc::lint::LateContext;\n use syntax::ast::Name;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::{get_pat_name, match_var, snippet};\n \n pub fn get_spans("}, {"sha": "d513fb8bced702df8ae220a275a3dfc4df80df6e", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -10,7 +10,7 @@ use rustc_errors;\n use std::borrow::Cow;\n use std::fmt::Display;\n use std;\n-use syntax::codemap::{CharPos, Span};\n+use syntax::source_map::{CharPos, Span};\n use syntax::parse::token;\n use syntax::print::pprust::token_to_string;\n use syntax::util::parser::AssocOp;\n@@ -432,7 +432,7 @@ fn astbinop2assignop(op: ast::BinOp) -> AssocOp {\n /// Return the indentation before `span` if there are nothing but `[ \\t]`\n /// before it on its line.\n fn indentation<'a, T: LintContext<'a>>(cx: &T, span: Span) -> Option<String> {\n-    let lo = cx.sess().codemap().lookup_char_pos(span.lo());\n+    let lo = cx.sess().source_map().lookup_char_pos(span.lo());\n     if let Some(line) = lo.file\n         .get_line(lo.line - 1 /* line numbers in `Loc` are 1-based */)\n     {\n@@ -524,8 +524,8 @@ impl<'a, 'b, 'c, T: LintContext<'c>> DiagnosticBuilderExt<'c, T> for rustc_error\n \n     fn suggest_remove_item(&mut self, cx: &T, item: Span, msg: &str) {\n         let mut remove_span = item;\n-        let hi = cx.sess().codemap().next_point(remove_span).hi();\n-        let fmpos = cx.sess().codemap().lookup_byte_offset(hi);\n+        let hi = cx.sess().source_map().next_point(remove_span).hi();\n+        let fmpos = cx.sess().source_map().lookup_byte_offset(hi);\n \n         if let Some(ref src) = fmpos.fm.src {\n             let non_whitespace_offset = src[fmpos.pos.to_usize()..].find(|c| c != ' ' && c != '\\t' && c != '\\n');"}, {"sha": "95199b9f208e33aecffdb6bedfb80ed84f8bd855", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -8,7 +8,7 @@ use rustc::middle::mem_categorization::Categorization;\n use rustc::ty;\n use std::collections::HashSet;\n use syntax::ast::NodeId;\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n \n /// Returns a set of mutated local variable ids or None if mutations could not be determined.\n pub fn mutated_variables<'a, 'tcx: 'a>(expr: &'tcx Expr, cx: &'a LateContext<'a, 'tcx>) -> Option<HashSet<NodeId>> {"}, {"sha": "9e0cd06134b7d05859c6b2f1fa27dd092cc3e1bf", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -3,7 +3,7 @@ use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};\n-use syntax::codemap::Span;\n+use syntax::source_map::Span;\n use crate::utils::{higher, is_copy, snippet, span_lint_and_sugg};\n use crate::consts::constant;\n "}, {"sha": "8a19dc2c4e58b0a4001d15ce433014a7b9c3fdeb", "filename": "mini-macro/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/mini-macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/mini-macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mini-macro%2Fsrc%2Flib.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -1,4 +1,4 @@\n-#![feature(use_extern_macros, proc_macro_quote, proc_macro_non_items)]\n+#![feature(proc_macro_quote, proc_macro_non_items)]\n extern crate proc_macro;\n \n use proc_macro::{TokenStream, quote};"}, {"sha": "e6aaff1b2a95de8a4dda8d0d4764846484f7df8a", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -1,6 +1,5 @@\n // error-pattern:cargo-clippy\n #![feature(plugin_registrar)]\n-#![feature(rust_2018_preview)]\n #![feature(rustc_private)]\n #![feature(macro_vis_matcher)]\n #![allow(unknown_lints)]"}, {"sha": "c79e233cc8153c60fb8d6833a2d48cf7c536231f", "filename": "tests/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/tests%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f05a1038b59cd4217e58b3aef7a0751a0efd01e4/tests%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmatches.rs?ref=f05a1038b59cd4217e58b3aef7a0751a0efd01e4", "patch": "@@ -7,7 +7,7 @@ use std::collections::Bound;\n #[test]\n fn test_overlapping() {\n     use clippy_lints::matches::overlapping;\n-    use syntax::codemap::DUMMY_SP;\n+    use syntax::source_map::DUMMY_SP;\n \n     let sp = |s, e| clippy_lints::matches::SpannedRange {\n         span: DUMMY_SP,"}]}