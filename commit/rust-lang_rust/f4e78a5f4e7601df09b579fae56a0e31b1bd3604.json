{"sha": "f4e78a5f4e7601df09b579fae56a0e31b1bd3604", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ZTc4YTVmNGU3NjAxZGYwOWI1NzlmYWU1NmEwZTMxYjFiZDM2MDQ=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-22T17:11:33Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-22T17:11:33Z"}, "message": "Add TestDB", "tree": {"sha": "f6b3cec476a30e8c8c51f3ee8f50b83041d13c94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6b3cec476a30e8c8c51f3ee8f50b83041d13c94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4e78a5f4e7601df09b579fae56a0e31b1bd3604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4e78a5f4e7601df09b579fae56a0e31b1bd3604", "html_url": "https://github.com/rust-lang/rust/commit/f4e78a5f4e7601df09b579fae56a0e31b1bd3604", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4e78a5f4e7601df09b579fae56a0e31b1bd3604/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d49b5d174430feede9833c5e66c39ee41b5fa3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d49b5d174430feede9833c5e66c39ee41b5fa3e", "html_url": "https://github.com/rust-lang/rust/commit/4d49b5d174430feede9833c5e66c39ee41b5fa3e"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "f514a15e4e55660f6cb25e44e6a1749b840212d2", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f4e78a5f4e7601df09b579fae56a0e31b1bd3604/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4e78a5f4e7601df09b579fae56a0e31b1bd3604/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=f4e78a5f4e7601df09b579fae56a0e31b1bd3604", "patch": "@@ -26,6 +26,9 @@ use ra_syntax::{\n use crate::ast_id_map::FileAstId;\n use crate::builtin_macro::BuiltinExpander;\n \n+#[cfg(test)]\n+mod test_db;\n+\n /// Input to the analyzer is a set of files, where each file is identified by\n /// `FileId` and contains source code. However, another source of source code in\n /// Rust are macros: each macro can be thought of as producing a \"temporary"}, {"sha": "d23e75d9ee3b93ee421e5d0e7ad3ec2b5cf1fe58", "filename": "crates/ra_hir_expand/src/test_db.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/f4e78a5f4e7601df09b579fae56a0e31b1bd3604/crates%2Fra_hir_expand%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4e78a5f4e7601df09b579fae56a0e31b1bd3604/crates%2Fra_hir_expand%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Ftest_db.rs?ref=f4e78a5f4e7601df09b579fae56a0e31b1bd3604", "patch": "@@ -0,0 +1,50 @@\n+//! Database used for testing `hir_expand`.\n+\n+use std::{\n+    panic,\n+    sync::{Arc, Mutex},\n+};\n+\n+use ra_db::{salsa, CrateId, FileId, FileLoader, FileLoaderDelegate, RelativePath};\n+\n+#[salsa::database(\n+    ra_db::SourceDatabaseExtStorage,\n+    ra_db::SourceDatabaseStorage,\n+    crate::db::AstDatabaseStorage\n+)]\n+#[derive(Debug, Default)]\n+pub struct TestDB {\n+    runtime: salsa::Runtime<TestDB>,\n+    events: Mutex<Option<Vec<salsa::Event<TestDB>>>>,\n+}\n+\n+impl salsa::Database for TestDB {\n+    fn salsa_runtime(&self) -> &salsa::Runtime<Self> {\n+        &self.runtime\n+    }\n+\n+    fn salsa_event(&self, event: impl Fn() -> salsa::Event<TestDB>) {\n+        let mut events = self.events.lock().unwrap();\n+        if let Some(events) = &mut *events {\n+            events.push(event());\n+        }\n+    }\n+}\n+\n+impl panic::RefUnwindSafe for TestDB {}\n+\n+impl FileLoader for TestDB {\n+    fn file_text(&self, file_id: FileId) -> Arc<String> {\n+        FileLoaderDelegate(self).file_text(file_id)\n+    }\n+    fn resolve_relative_path(\n+        &self,\n+        anchor: FileId,\n+        relative_path: &RelativePath,\n+    ) -> Option<FileId> {\n+        FileLoaderDelegate(self).resolve_relative_path(anchor, relative_path)\n+    }\n+    fn relevant_crates(&self, file_id: FileId) -> Arc<Vec<CrateId>> {\n+        FileLoaderDelegate(self).relevant_crates(file_id)\n+    }\n+}"}]}