{"sha": "85fec06617ec45bb4f941720feb785f5892d4a0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZmVjMDY2MTdlYzQ1YmI0Zjk0MTcyMGZlYjc4NWY1ODkyZDRhMGI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-06-06T23:06:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-06T23:06:48Z"}, "message": "Rollup merge of #83433 - jyn514:cfg-bootstrap-macro, r=Mark-Simulacrum\n\nPass --cfg=bootstrap for proc macros built by stage0\n\nCargo has a bug where it ignores RUSTFLAGS when building proc macro\ncrates (https://github.com/rust-lang/cargo/issues/4423).\nHowever, sometimes rustc_macro needs to have conditional\ncompilation when there are breaking changes to the `libproc_macro` API\n(see for example #83363). Previously, this wasn't possible, because the\ncrate couldn't tell the difference between stage 0 and stage 1.\n\nAnother alternative is to unconditionally build rustc_macros with the\nmaster libstd instead of the beta one (i.e. use `--sysroot\nstage0-sysroot`), but that led to strange and maddening errors:\n\n```\nerror[E0460]: found possibly newer version of crate `std` which `synstructure` depends on\n --> compiler/rustc_macros/src/lib.rs:5:5\n  |\n5 | use synstructure::decl_derive;\n  |     ^^^^^^^^^^^^\n  |\n  = note: perhaps that crate needs to be recompiled?\n  = note: the following crate versions were found:\n          crate `std`: /home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage0-sysroot/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-b3602c301b71cc3d.rmeta\n          crate `synstructure`: /home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage0-rustc/release/deps/libsynstructure-74ee66863479e972.rmeta\nerror[E0460]: found possibly newer version of crate `std` which `proc_macro2` depends on\n  --> /home/joshua/.local/lib/cargo/registry/src/github.com-1ecc6299db9ec823/tracing-attributes-0.1.13/src/lib.rs:90:5\n   |\n90 | use proc_macro2::TokenStream;\n   |     ^^^^^^^^^^^\n   |\n   = note: perhaps that crate needs to be recompiled?\n   = note: the following crate versions were found:\n           crate `std`: /home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage0-sysroot/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-b3602c301b71cc3d.rmeta\n           crate `proc_macro2`: /home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage0-rustc/release/deps/libproc_macro2-a83c1f01610c129e.rlib\n```\n\nr? `@Mark-Simulacrum` cc `@jhpratt`", "tree": {"sha": "fe041e5312271c5e9d1de4fbb68fbe6d8020f916", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe041e5312271c5e9d1de4fbb68fbe6d8020f916"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85fec06617ec45bb4f941720feb785f5892d4a0b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgvVUICRBK7hj4Ov3rIwAAwHsIAABtdfgRZnxGkFr/RW4jsNzQ\nJEwjupqmGj2wQa5DMA+o6rYAky6ig9A4DWMox766dB2YWg6CSOZATAjRZLAT+dbc\nc2p1ZD2IWq/McImEGO31XpxU0BCixr5i4i+wzYojZXXEcpEDtRq96SKHr8by4R6D\nvBEHfj0BLUuuwVPMvxVwsnS3prRYWwE+UEhdFStdC/Gw65TqOWGwBdhe9I8eYsa0\nbprXfU6SXBuz9zdvB/YaY8OjlgSmruHiFP+qvhVyl0+k5oWuQfpqemwXTMkDd+Rx\ntG2p5mJuT5NtYyYCqBDLQjIrCyGvdqhVnXyGDkRomDywKi6GsKfmjk5E2e4MFC8=\n=K6xy\n-----END PGP SIGNATURE-----\n", "payload": "tree fe041e5312271c5e9d1de4fbb68fbe6d8020f916\nparent 35fff69d043b1c0f5c29894e7f4b0da8b039c131\nparent dc302587e2cf5105a3a864319d7e7bcb434bba20\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1623020808 +0200\ncommitter GitHub <noreply@github.com> 1623020808 +0200\n\nRollup merge of #83433 - jyn514:cfg-bootstrap-macro, r=Mark-Simulacrum\n\nPass --cfg=bootstrap for proc macros built by stage0\n\nCargo has a bug where it ignores RUSTFLAGS when building proc macro\ncrates (https://github.com/rust-lang/cargo/issues/4423).\nHowever, sometimes rustc_macro needs to have conditional\ncompilation when there are breaking changes to the `libproc_macro` API\n(see for example #83363). Previously, this wasn't possible, because the\ncrate couldn't tell the difference between stage 0 and stage 1.\n\nAnother alternative is to unconditionally build rustc_macros with the\nmaster libstd instead of the beta one (i.e. use `--sysroot\nstage0-sysroot`), but that led to strange and maddening errors:\n\n```\nerror[E0460]: found possibly newer version of crate `std` which `synstructure` depends on\n --> compiler/rustc_macros/src/lib.rs:5:5\n  |\n5 | use synstructure::decl_derive;\n  |     ^^^^^^^^^^^^\n  |\n  = note: perhaps that crate needs to be recompiled?\n  = note: the following crate versions were found:\n          crate `std`: /home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage0-sysroot/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-b3602c301b71cc3d.rmeta\n          crate `synstructure`: /home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage0-rustc/release/deps/libsynstructure-74ee66863479e972.rmeta\nerror[E0460]: found possibly newer version of crate `std` which `proc_macro2` depends on\n  --> /home/joshua/.local/lib/cargo/registry/src/github.com-1ecc6299db9ec823/tracing-attributes-0.1.13/src/lib.rs:90:5\n   |\n90 | use proc_macro2::TokenStream;\n   |     ^^^^^^^^^^^\n   |\n   = note: perhaps that crate needs to be recompiled?\n   = note: the following crate versions were found:\n           crate `std`: /home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage0-sysroot/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-b3602c301b71cc3d.rmeta\n           crate `proc_macro2`: /home/joshua/rustc2/build/x86_64-unknown-linux-gnu/stage0-rustc/release/deps/libproc_macro2-a83c1f01610c129e.rlib\n```\n\nr? `@Mark-Simulacrum` cc `@jhpratt`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85fec06617ec45bb4f941720feb785f5892d4a0b", "html_url": "https://github.com/rust-lang/rust/commit/85fec06617ec45bb4f941720feb785f5892d4a0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85fec06617ec45bb4f941720feb785f5892d4a0b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35fff69d043b1c0f5c29894e7f4b0da8b039c131", "url": "https://api.github.com/repos/rust-lang/rust/commits/35fff69d043b1c0f5c29894e7f4b0da8b039c131", "html_url": "https://github.com/rust-lang/rust/commit/35fff69d043b1c0f5c29894e7f4b0da8b039c131"}, {"sha": "dc302587e2cf5105a3a864319d7e7bcb434bba20", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc302587e2cf5105a3a864319d7e7bcb434bba20", "html_url": "https://github.com/rust-lang/rust/commit/dc302587e2cf5105a3a864319d7e7bcb434bba20"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "ac8bbfe102dfea63efb4f7491c99946f06cc4046", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/85fec06617ec45bb4f941720feb785f5892d4a0b/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85fec06617ec45bb4f941720feb785f5892d4a0b/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=85fec06617ec45bb4f941720feb785f5892d4a0b", "patch": "@@ -124,6 +124,13 @@ fn main() {\n                 cmd.arg(\"-C\").arg(\"target-feature=-crt-static\");\n             }\n         }\n+\n+        if stage == \"0\" {\n+            // Cargo doesn't pass RUSTFLAGS to proc_macros:\n+            // https://github.com/rust-lang/cargo/issues/4423\n+            // Set `--cfg=bootstrap` explicitly instead.\n+            cmd.arg(\"--cfg=bootstrap\");\n+        }\n     }\n \n     if let Ok(map) = env::var(\"RUSTC_DEBUGINFO_MAP\") {"}]}