{"sha": "45d507d39ebdeed82cf9a3cdcab2e590621bb8b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZDUwN2QzOWViZGVlZDgyY2Y5YTNjZGNhYjJlNTkwNjIxYmI4YjA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-10T12:24:34Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-10T18:24:42Z"}, "message": "lowering: extract lower_expr_yield", "tree": {"sha": "5cecc9aeabb97a351b01dad19977ebd24740eae2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cecc9aeabb97a351b01dad19977ebd24740eae2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45d507d39ebdeed82cf9a3cdcab2e590621bb8b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45d507d39ebdeed82cf9a3cdcab2e590621bb8b0", "html_url": "https://github.com/rust-lang/rust/commit/45d507d39ebdeed82cf9a3cdcab2e590621bb8b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45d507d39ebdeed82cf9a3cdcab2e590621bb8b0/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d739ca12d88c3985cd78d4af027d48ce2254e18", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d739ca12d88c3985cd78d4af027d48ce2254e18", "html_url": "https://github.com/rust-lang/rust/commit/9d739ca12d88c3985cd78d4af027d48ce2254e18"}], "stats": {"total": 46, "additions": 24, "deletions": 22}, "files": [{"sha": "9b4074294b372465e47a6bb1bb137d34ad2ec907", "filename": "src/librustc/hir/lowering/expr.rs", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/45d507d39ebdeed82cf9a3cdcab2e590621bb8b0/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45d507d39ebdeed82cf9a3cdcab2e590621bb8b0/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs?ref=45d507d39ebdeed82cf9a3cdcab2e590621bb8b0", "patch": "@@ -505,28 +505,7 @@ impl LoweringContext<'_> {\n                 return ex;\n             }\n \n-            ExprKind::Yield(ref opt_expr) => {\n-                match self.generator_kind {\n-                    Some(hir::GeneratorKind::Gen) => {},\n-                    Some(hir::GeneratorKind::Async) => {\n-                        span_err!(\n-                            self.sess,\n-                            e.span,\n-                            E0727,\n-                            \"`async` generators are not yet supported\",\n-                        );\n-                        self.sess.abort_if_errors();\n-                    },\n-                    None => {\n-                        self.generator_kind = Some(hir::GeneratorKind::Gen);\n-                    }\n-                }\n-                let expr = opt_expr\n-                    .as_ref()\n-                    .map(|x| self.lower_expr(x))\n-                    .unwrap_or_else(|| self.expr_unit(e.span));\n-                hir::ExprKind::Yield(P(expr), hir::YieldSource::Yield)\n-            }\n+            ExprKind::Yield(ref opt_expr) => self.lower_expr_yield(e.span, opt_expr.as_deref()),\n \n             ExprKind::Err => hir::ExprKind::Err,\n \n@@ -547,6 +526,29 @@ impl LoweringContext<'_> {\n         }\n     }\n \n+    fn lower_expr_yield(&mut self, span: Span, opt_expr: Option<&Expr>) -> hir::ExprKind {\n+        match self.generator_kind {\n+            Some(hir::GeneratorKind::Gen) => {},\n+            Some(hir::GeneratorKind::Async) => {\n+                span_err!(\n+                    self.sess,\n+                    span,\n+                    E0727,\n+                    \"`async` generators are not yet supported\",\n+                );\n+                self.sess.abort_if_errors();\n+            },\n+            None => self.generator_kind = Some(hir::GeneratorKind::Gen),\n+        }\n+\n+        let expr = opt_expr\n+            .as_ref()\n+            .map(|x| self.lower_expr(x))\n+            .unwrap_or_else(|| self.expr_unit(span));\n+\n+        hir::ExprKind::Yield(P(expr), hir::YieldSource::Yield)\n+    }\n+\n     /// Desugar `ExprForLoop` from: `[opt_ident]: for <pat> in <head> <body>` into:\n     /// ```rust\n     /// {"}]}