{"sha": "e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "node_id": "C_kwDOAAsO6NoAKGU2ZTdhNmRiMjgwN2NmNjhhNDE0N2JiZmFhNmQ1ZTBmOGMyODI4ZDM", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-03T21:10:08Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-23T20:17:47Z"}, "message": "Fix wording", "tree": {"sha": "e495f902e505dbcb574243af5aa2f710ccb15bb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e495f902e505dbcb574243af5aa2f710ccb15bb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "html_url": "https://github.com/rust-lang/rust/commit/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d687d46f68295c5e8aa318492500d22450d89b20", "url": "https://api.github.com/repos/rust-lang/rust/commits/d687d46f68295c5e8aa318492500d22450d89b20", "html_url": "https://github.com/rust-lang/rust/commit/d687d46f68295c5e8aa318492500d22450d89b20"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "5bbeaa631c6201a91ad36730cdc5d7bec7e13923", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -403,7 +403,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                         let mut span: MultiSpan = arg.span.into();\n                         span.push_span_label(\n                             arg.span,\n-                            \"this type parameter takes ownership of the value\".to_string(),\n+                            \"this parameter takes ownership of the value\".to_string(),\n                         );\n                         let descr = match node.fn_kind() {\n                             Some(hir::intravisit::FnKind::ItemFn(..)) | None => \"function\","}, {"sha": "c25337c0c6c632408d0d492de397d678974e21ae", "filename": "src/test/ui/borrowck/borrowck-consume-unsize-vec.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-consume-unsize-vec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-consume-unsize-vec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-consume-unsize-vec.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -12,7 +12,7 @@ note: consider changing this parameter type in function `consume` to borrow inst\n   --> $DIR/borrowck-consume-unsize-vec.rs:3:15\n    |\n LL | fn consume(_: Box<[i32]>) {\n-   |    -------    ^^^^^^^^^^ this type parameter takes ownership of the value\n+   |    -------    ^^^^^^^^^^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n help: consider cloning the value if the performance cost is acceptable"}, {"sha": "49d85cd5fa2a7ffe0dea3a32f19d2fb4a2195a80", "filename": "src/test/ui/borrowck/borrowck-consume-upcast-box.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-consume-upcast-box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-consume-upcast-box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-consume-upcast-box.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -12,7 +12,7 @@ note: consider changing this parameter type in function `consume` to borrow inst\n   --> $DIR/borrowck-consume-upcast-box.rs:5:15\n    |\n LL | fn consume(_: Box<dyn Foo>) {\n-   |    -------    ^^^^^^^^^^^^ this type parameter takes ownership of the value\n+   |    -------    ^^^^^^^^^^^^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n "}, {"sha": "b441244cdfdeaa4bbce940baa734a591a0c1334c", "filename": "src/test/ui/borrowck/mut-borrow-in-loop-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-in-loop-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-in-loop-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-in-loop-2.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -12,7 +12,7 @@ note: consider changing this parameter type in function `handle` to borrow inste\n   --> $DIR/mut-borrow-in-loop-2.rs:9:22\n    |\n LL |     fn handle(value: T) -> Self;\n-   |        ------        ^ this type parameter takes ownership of the value\n+   |        ------        ^ this parameter takes ownership of the value\n    |        |\n    |        in this function\n help: consider creating a fresh reborrow of `value` here"}, {"sha": "5b5ac65113fdd77157c04037f2873979738bd266", "filename": "src/test/ui/liveness/liveness-move-call-arg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fliveness%2Fliveness-move-call-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fliveness%2Fliveness-move-call-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-move-call-arg.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -13,7 +13,7 @@ note: consider changing this parameter type in function `take` to borrow instead\n   --> $DIR/liveness-move-call-arg.rs:1:13\n    |\n LL | fn take(_x: Box<isize>) {}\n-   |    ----     ^^^^^^^^^^ this type parameter takes ownership of the value\n+   |    ----     ^^^^^^^^^^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n help: consider cloning the value if the performance cost is acceptable"}, {"sha": "3dbe5ac517e4388175390aa1510da25a3cfd1af1", "filename": "src/test/ui/liveness/liveness-use-after-send.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fliveness%2Fliveness-use-after-send.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fliveness%2Fliveness-use-after-send.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-use-after-send.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -12,7 +12,7 @@ note: consider changing this parameter type in function `send` to borrow instead\n   --> $DIR/liveness-use-after-send.rs:3:54\n    |\n LL | fn send<T:Send + std::fmt::Debug>(ch: Chan<T>, data: T) {\n-   |    ---- in this function                             ^ this type parameter takes ownership of the value\n+   |    ---- in this function                             ^ this parameter takes ownership of the value\n    = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider cloning the value if the performance cost is acceptable\n    |"}, {"sha": "b68552220397c1ace3cc45c3d628458ed81b8f16", "filename": "src/test/ui/moves/borrow-closures-instead-of-move.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fmoves%2Fborrow-closures-instead-of-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fmoves%2Fborrow-closures-instead-of-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fborrow-closures-instead-of-move.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -12,7 +12,7 @@ note: consider changing this parameter type in function `takes_fnonce` to borrow\n   --> $DIR/borrow-closures-instead-of-move.rs:34:20\n    |\n LL | fn takes_fnonce(_: impl FnOnce()) {}\n-   |    ------------    ^^^^^^^^^^^^^ this type parameter takes ownership of the value\n+   |    ------------    ^^^^^^^^^^^^^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n help: consider borrowing `f`\n@@ -36,7 +36,7 @@ note: consider changing this parameter type in function `takes_fnonce` to borrow\n   --> $DIR/borrow-closures-instead-of-move.rs:34:20\n    |\n LL | fn takes_fnonce(_: impl FnOnce()) {}\n-   |    ------------    ^^^^^^^^^^^^^ this type parameter takes ownership of the value\n+   |    ------------    ^^^^^^^^^^^^^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n help: consider mutably borrowing `m`\n@@ -62,7 +62,7 @@ note: consider changing this parameter type in function `takes_fnonce` to borrow\n   --> $DIR/borrow-closures-instead-of-move.rs:34:20\n    |\n LL | fn takes_fnonce(_: impl FnOnce()) {}\n-   |    ------------    ^^^^^^^^^^^^^ this type parameter takes ownership of the value\n+   |    ------------    ^^^^^^^^^^^^^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n help: consider mutably borrowing `closure`"}, {"sha": "440a908a3c66276fbdb72932eeebbb6393c43799", "filename": "src/test/ui/moves/move-guard-same-consts.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fmoves%2Fmove-guard-same-consts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fmoves%2Fmove-guard-same-consts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmove-guard-same-consts.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -13,7 +13,7 @@ note: consider changing this parameter type in function `take` to borrow instead\n   --> $DIR/move-guard-same-consts.rs:25:15\n    |\n LL | fn take<T>(_: T) -> bool { false }\n-   |    ----       ^ this type parameter takes ownership of the value\n+   |    ----       ^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n help: consider cloning the value if the performance cost is acceptable"}, {"sha": "e054f31349a6cfd215af6955a132369f6dc10459", "filename": "src/test/ui/moves/move-in-guard-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fmoves%2Fmove-in-guard-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fmoves%2Fmove-in-guard-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmove-in-guard-1.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -13,7 +13,7 @@ note: consider changing this parameter type in function `take` to borrow instead\n   --> $DIR/move-in-guard-1.rs:15:15\n    |\n LL | fn take<T>(_: T) -> bool { false }\n-   |    ----       ^ this type parameter takes ownership of the value\n+   |    ----       ^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n help: consider cloning the value if the performance cost is acceptable"}, {"sha": "49267c276315937eff2ac06e3564241c4580b750", "filename": "src/test/ui/moves/move-in-guard-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fmoves%2Fmove-in-guard-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fmoves%2Fmove-in-guard-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmove-in-guard-2.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -11,7 +11,7 @@ note: consider changing this parameter type in function `take` to borrow instead\n   --> $DIR/move-in-guard-2.rs:13:15\n    |\n LL | fn take<T>(_: T) -> bool { false }\n-   |    ----       ^ this type parameter takes ownership of the value\n+   |    ----       ^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n help: consider cloning the value if the performance cost is acceptable"}, {"sha": "6efda8c5e8366192b1da3570a93c117d4ca04151", "filename": "src/test/ui/moves/moves-based-on-type-exprs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-exprs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-exprs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-exprs.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -112,7 +112,7 @@ note: consider changing this parameter type in function `guard` to borrow instea\n   --> $DIR/moves-based-on-type-exprs.rs:6:14\n    |\n LL | fn guard(_s: String) -> bool {panic!()}\n-   |    -----     ^^^^^^ this type parameter takes ownership of the value\n+   |    -----     ^^^^^^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n help: consider cloning the value if the performance cost is acceptable"}, {"sha": "c695282fbb0d322c2fecd16f3b6dac327a8e7a62", "filename": "src/test/ui/union/union-move.mirunsafeck.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Funion%2Funion-move.mirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Funion%2Funion-move.mirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-move.mirunsafeck.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -13,7 +13,7 @@ note: consider changing this parameter type in function `move_out` to borrow ins\n   --> $DIR/union-move.rs:10:19\n    |\n LL | fn move_out<T>(x: T) {}\n-   |    --------       ^ this type parameter takes ownership of the value\n+   |    --------       ^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n \n@@ -32,7 +32,7 @@ note: consider changing this parameter type in function `move_out` to borrow ins\n   --> $DIR/union-move.rs:10:19\n    |\n LL | fn move_out<T>(x: T) {}\n-   |    --------       ^ this type parameter takes ownership of the value\n+   |    --------       ^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n "}, {"sha": "c695282fbb0d322c2fecd16f3b6dac327a8e7a62", "filename": "src/test/ui/union/union-move.thirunsafeck.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Funion%2Funion-move.thirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Funion%2Funion-move.thirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-move.thirunsafeck.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -13,7 +13,7 @@ note: consider changing this parameter type in function `move_out` to borrow ins\n   --> $DIR/union-move.rs:10:19\n    |\n LL | fn move_out<T>(x: T) {}\n-   |    --------       ^ this type parameter takes ownership of the value\n+   |    --------       ^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n \n@@ -32,7 +32,7 @@ note: consider changing this parameter type in function `move_out` to borrow ins\n   --> $DIR/union-move.rs:10:19\n    |\n LL | fn move_out<T>(x: T) {}\n-   |    --------       ^ this type parameter takes ownership of the value\n+   |    --------       ^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n "}, {"sha": "e11c398e8d0307cc65da8684fc362a2b4f8d9899", "filename": "src/test/ui/unsized-locals/borrow-after-move.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fborrow-after-move.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -33,7 +33,7 @@ note: consider changing this parameter type in function `drop_unsized` to borrow\n   --> $DIR/borrow-after-move.rs:14:31\n    |\n LL | fn drop_unsized<T: ?Sized>(_: T) {}\n-   |    ------------               ^ this type parameter takes ownership of the value\n+   |    ------------               ^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n "}, {"sha": "84192e750989673a29bb2528671b607c1f8fa250", "filename": "src/test/ui/unsized-locals/double-move.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fdouble-move.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -21,7 +21,7 @@ note: consider changing this parameter type in function `drop_unsized` to borrow\n   --> $DIR/double-move.rs:14:31\n    |\n LL | fn drop_unsized<T: ?Sized>(_: T) {}\n-   |    ------------               ^ this type parameter takes ownership of the value\n+   |    ------------               ^ this parameter takes ownership of the value\n    |    |\n    |    in this function\n "}, {"sha": "395bb4019fd61143ac534d05b044bd21fee4d009", "filename": "src/test/ui/use/use-after-move-implicity-coerced-object.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-implicity-coerced-object.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-implicity-coerced-object.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-after-move-implicity-coerced-object.stderr?ref=e6e7a6db2807cf68a4147bbfaa6d5e0f8c2828d3", "patch": "@@ -14,7 +14,7 @@ note: consider changing this parameter type in method `push` to borrow instead i\n   --> $DIR/use-after-move-implicity-coerced-object.rs:17:27\n    |\n LL |     fn push(&mut self, n: Box<dyn ToString + 'static>) {\n-   |        ----               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ this type parameter takes ownership of the value\n+   |        ----               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ this parameter takes ownership of the value\n    |        |\n    |        in this method\n "}]}