{"sha": "00e5abe9b6f713b1d868f17694113a5d50d96c19", "node_id": "C_kwDOAAsO6NoAKDAwZTVhYmU5YjZmNzEzYjFkODY4ZjE3Njk0MTEzYTVkNTBkOTZjMTk", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-10-13T12:53:49Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-10-15T08:58:18Z"}, "message": "allow `potential_query_instability` everywhere", "tree": {"sha": "5d3dfef5c7dbeb6459d507f28d1cbc5b42c358f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d3dfef5c7dbeb6459d507f28d1cbc5b42c358f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00e5abe9b6f713b1d868f17694113a5d50d96c19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00e5abe9b6f713b1d868f17694113a5d50d96c19", "html_url": "https://github.com/rust-lang/rust/commit/00e5abe9b6f713b1d868f17694113a5d50d96c19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00e5abe9b6f713b1d868f17694113a5d50d96c19/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80fe0bb76e601054398eb3c4763a6e9125d8101c", "url": "https://api.github.com/repos/rust-lang/rust/commits/80fe0bb76e601054398eb3c4763a6e9125d8101c", "html_url": "https://github.com/rust-lang/rust/commit/80fe0bb76e601054398eb3c4763a6e9125d8101c"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "fc21c54fef4c3fc4317916b3672d4a9aa5c23b54", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -34,6 +34,7 @@\n #![feature(box_patterns)]\n #![feature(iter_zip)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n use rustc_ast::node_id::NodeMap;\n use rustc_ast::token::{self, Token};"}, {"sha": "6da128a037499db3cc9802b5113b27ae0d88f0dc", "filename": "compiler/rustc_ast_passes/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_ast_passes%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_ast_passes%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -7,6 +7,7 @@\n #![feature(iter_is_partitioned)]\n #![feature(box_patterns)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n pub mod ast_validation;\n pub mod feature_gate;"}, {"sha": "5dba948d984da349a26b45c1f4f5418d20d6ac1d", "filename": "compiler/rustc_borrowck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -12,6 +12,7 @@\n #![feature(trusted_step)]\n #![feature(try_blocks)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate rustc_middle;"}, {"sha": "d3e2ed02c32ea2de4e4596372aa5548a808053b2", "filename": "compiler/rustc_builtin_macros/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -11,6 +11,7 @@\n #![feature(proc_macro_internals)]\n #![feature(proc_macro_quote)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n extern crate proc_macro;\n "}, {"sha": "f1dacc393d53b6c9a49813ba4c9d8e252dfc399a", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -13,6 +13,7 @@\n #![feature(iter_zip)]\n #![feature(nll)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n use back::write::{create_informational_target_machine, create_target_machine};\n "}, {"sha": "de428bfedba0654d11f59c4b978e2a00f4d6cc92", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -7,6 +7,7 @@\n #![feature(nll)]\n #![feature(associated_type_bounds)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n //! This crate contains codegen code that is used by all codegen backends (LLVM and others).\n //! The backend-agnostic functions of this crate use functions defined in various traits that"}, {"sha": "e78606c6f8f7c82c06a63ac0900bed3cb283544b", "filename": "compiler/rustc_const_eval/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -23,6 +23,7 @@ Rust MIR: a lowered representation of Rust.\n #![feature(trusted_step)]\n #![feature(try_blocks)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate tracing;"}, {"sha": "0fbcd22c5e09876a27e46c7a29cc75ff591adeee", "filename": "compiler/rustc_data_structures/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -28,6 +28,7 @@\n #![feature(thread_id_value)]\n #![allow(rustc::default_hash_types)]\n #![deny(unaligned_references)]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate tracing;"}, {"sha": "1a9f8961bd74167dff07f4b30a103cb21b596c17", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -8,6 +8,7 @@\n #![feature(nll)]\n #![feature(once_cell)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate tracing;\n@@ -846,7 +847,7 @@ Available lint options:\n     let builtin = sort_lints(sess, builtin);\n \n     let (plugin_groups, builtin_groups): (Vec<_>, _) =\n-        lint_store.get_lint_groups().iter().cloned().partition(|&(.., p)| p);\n+        lint_store.get_lint_groups().partition(|&(.., p)| p);\n     let plugin_groups = sort_lint_groups(plugin_groups);\n     let builtin_groups = sort_lint_groups(builtin_groups);\n "}, {"sha": "0d4ea28878eb150aaf3ef60cb144e9820e8264af", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -9,6 +9,7 @@\n #![feature(format_args_capture)]\n #![feature(iter_zip)]\n #![feature(nll)]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "e2eaaadc9b05e24a7c0571b3cad5daf42cf958d5", "filename": "compiler/rustc_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -9,6 +9,7 @@\n #![feature(proc_macro_span)]\n #![feature(try_blocks)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "5331b63a6160c858279f403117f2a21268e1cca6", "filename": "compiler/rustc_incremental/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_incremental%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_incremental%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -4,6 +4,7 @@\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate rustc_middle;"}, {"sha": "da6cb34315e9699456a5ad239abfb5c85afbc16a", "filename": "compiler/rustc_infer/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -23,6 +23,7 @@\n #![feature(min_specialization)]\n #![feature(label_break_value)]\n #![recursion_limit = \"512\"] // For rustdoc\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "969df0fbf24d9127939ad751238e8cdd039b617b", "filename": "compiler/rustc_interface/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_interface%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_interface%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -5,6 +5,7 @@\n #![feature(nll)]\n #![feature(once_cell)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n mod callbacks;\n pub mod interface;"}, {"sha": "e34a92aba25f653c6e376438f4b85a7ea83b5aa1", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -144,7 +144,11 @@ impl LintStore {\n         &self.lints\n     }\n \n-    pub fn get_lint_groups<'t>(&'t self) -> Vec<(&'static str, Vec<LintId>, bool)> {\n+    pub fn get_lint_groups<'t>(\n+        &'t self,\n+    ) -> impl Iterator<Item = (&'static str, Vec<LintId>, bool)> + 't {\n+        // This function is not used in a way which observes the order of lints.\n+        #[cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n         self.lint_groups\n             .iter()\n             .filter(|(_, LintGroup { depr, .. })| {\n@@ -154,7 +158,6 @@ impl LintStore {\n             .map(|(k, LintGroup { lint_ids, from_plugin, .. })| {\n                 (*k, lint_ids.clone(), *from_plugin)\n             })\n-            .collect()\n     }\n \n     pub fn register_early_pass("}, {"sha": "f83eaabdfefcde5de2705a50a964d65a0f35009a", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -38,6 +38,7 @@\n #![feature(nll)]\n #![feature(control_flow_enum)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate rustc_middle;"}, {"sha": "cb3d4b2931eaffc0df7101ade420ba57e4021633", "filename": "compiler/rustc_metadata/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_metadata%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_metadata%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -9,6 +9,7 @@\n #![feature(try_blocks)]\n #![feature(never_type)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n extern crate proc_macro;\n "}, {"sha": "9401247d37c00d9955a3b274917dab52fed63d34", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -55,6 +55,7 @@\n #![feature(try_reserve_kind)]\n #![feature(nonzero_ops)]\n #![recursion_limit = \"512\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate bitflags;"}, {"sha": "d962c9afd232b5d21cd93c0203b455fc048c4ec6", "filename": "compiler/rustc_mir_build/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -9,6 +9,7 @@\n #![feature(once_cell)]\n #![feature(min_specialization)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate tracing;"}, {"sha": "2c6dc138b0f25175c2377a8c9c3b56c310a34c70", "filename": "compiler/rustc_mir_transform/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -12,6 +12,7 @@\n #![feature(trusted_step)]\n #![feature(try_blocks)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate tracing;"}, {"sha": "04c83abd814d54dc1167cf75323c4c42fd47f6f8", "filename": "compiler/rustc_monomorphize/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -4,6 +4,7 @@\n #![feature(control_flow_enum)]\n #![feature(in_band_lifetimes)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate tracing;"}, {"sha": "c698333c8e222a1005191449fd017a51c2353ce7", "filename": "compiler/rustc_passes/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_passes%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_passes%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -14,6 +14,7 @@\n #![feature(nll)]\n #![feature(try_blocks)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate rustc_middle;"}, {"sha": "38ccdb79f9bd6cb44d8d3ced76310d83d76e09da", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -5,6 +5,7 @@\n #![feature(try_blocks)]\n #![feature(associated_type_defaults)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n use rustc_ast::MacroDef;\n use rustc_attr as attr;"}, {"sha": "2465f1cbdf9185a058581b5ae23eba109cb3248b", "filename": "compiler/rustc_query_impl/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_query_impl%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_query_impl%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -8,6 +8,7 @@\n #![feature(once_cell)]\n #![feature(rustc_attrs)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "21d21ea2b4441ea40ea0bdd9bfb237dc0d285fe0", "filename": "compiler/rustc_query_system/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_query_system%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_query_system%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -5,6 +5,7 @@\n #![feature(iter_zip)]\n #![feature(min_specialization)]\n #![feature(thread_local_const_init)]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate tracing;"}, {"sha": "ccf033aeec6008065edf0fb808fc7a039ca6f6a8", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -19,6 +19,7 @@\n #![feature(nll)]\n #![recursion_limit = \"256\"]\n #![allow(rustdoc::private_intra_doc_links)]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate tracing;"}, {"sha": "8fd2011ac46e08fa2dcef9d9aa493d86a363dfc9", "filename": "compiler/rustc_save_analysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -2,6 +2,7 @@\n #![feature(if_let_guard)]\n #![feature(nll)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n mod dump_visitor;\n mod dumper;"}, {"sha": "1a6cab7ecde81f379304d7caa1931b6376757340", "filename": "compiler/rustc_session/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_session%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_session%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -2,6 +2,7 @@\n #![feature(min_specialization)]\n #![feature(once_cell)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "4eafa7cebb3270534bc1aa952c77dc14c715b074", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -21,6 +21,7 @@\n #![feature(nll)]\n #![feature(min_specialization)]\n #![feature(thread_local_const_init)]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "f6517610da26271a1237031860e2c61965de1d53", "filename": "compiler/rustc_symbol_mangling/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -93,6 +93,7 @@\n #![feature(in_band_lifetimes)]\n #![feature(iter_zip)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate rustc_middle;"}, {"sha": "077d83866e25a4f6bd5bbbdb43832a58d31c0771", "filename": "compiler/rustc_trait_selection/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -21,6 +21,7 @@\n #![feature(crate_visibility_modifier)]\n #![feature(control_flow_enum)]\n #![recursion_limit = \"512\"] // For rustdoc\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "4a37cebe6eaae8467e7e10c7536701ba2de13d9f", "filename": "compiler/rustc_typeck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e5abe9b6f713b1d868f17694113a5d50d96c19/compiler%2Frustc_typeck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Flib.rs?ref=00e5abe9b6f713b1d868f17694113a5d50d96c19", "patch": "@@ -70,6 +70,7 @@ This API is completely unstable and subject to change.\n #![feature(slice_partition_dedup)]\n #![feature(control_flow_enum)]\n #![recursion_limit = \"256\"]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n #[macro_use]\n extern crate tracing;"}]}