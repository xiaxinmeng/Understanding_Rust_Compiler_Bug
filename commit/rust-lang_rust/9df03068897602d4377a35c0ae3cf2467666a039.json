{"sha": "9df03068897602d4377a35c0ae3cf2467666a039", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZjAzMDY4ODk3NjAyZDQzNzdhMzVjMGFlM2NmMjQ2NzY2NmEwMzk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-19T08:14:41Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-19T08:14:41Z"}, "message": "rustdoc: Cleanup", "tree": {"sha": "986c713f33e0c91bed9ee28b3b7c1a8044d02660", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/986c713f33e0c91bed9ee28b3b7c1a8044d02660"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9df03068897602d4377a35c0ae3cf2467666a039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9df03068897602d4377a35c0ae3cf2467666a039", "html_url": "https://github.com/rust-lang/rust/commit/9df03068897602d4377a35c0ae3cf2467666a039", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9df03068897602d4377a35c0ae3cf2467666a039/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f77458a67681859806256c64d2f99b5da77745d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f77458a67681859806256c64d2f99b5da77745d6", "html_url": "https://github.com/rust-lang/rust/commit/f77458a67681859806256c64d2f99b5da77745d6"}], "stats": {"total": 71, "additions": 11, "deletions": 60}, "files": [{"sha": "ee3d8abb8f3c6ba114b10288a1ae53fb50cbd617", "filename": "src/rustdoc/attr_pass.rs", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9df03068897602d4377a35c0ae3cf2467666a039/src%2Frustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9df03068897602d4377a35c0ae3cf2467666a039/src%2Frustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_pass.rs?ref=9df03068897602d4377a35c0ae3cf2467666a039", "patch": "@@ -20,24 +20,9 @@ fn run(\n     doc: doc::cratedoc\n ) -> doc::cratedoc {\n     let fold = fold::fold({\n-        fold_crate: fn~(\n-            f: fold::fold<astsrv::srv>,\n-            d: doc::cratedoc\n-        ) -> doc::cratedoc {\n-            fold_crate(f, d)\n-        },\n-        fold_mod: fn~(\n-            f: fold::fold<astsrv::srv>,\n-            d: doc::moddoc\n-        ) -> doc::moddoc {\n-            fold_mod(f, d)\n-        },\n-        fold_fn: fn~(\n-            f: fold::fold<astsrv::srv>,\n-            d: doc::fndoc\n-        ) -> doc::fndoc {\n-            fold_fn(f, d)\n-        }\n+        fold_crate: fold_crate,\n+        fold_mod: fold_mod,\n+        fold_fn: fold_fn\n         with *fold::default_seq_fold(srv)\n     });\n     fold.fold_crate(fold, doc)"}, {"sha": "2d4c8c347315cb9317729758507f55c53c559b7d", "filename": "src/rustdoc/fold.rs", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9df03068897602d4377a35c0ae3cf2467666a039/src%2Frustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9df03068897602d4377a35c0ae3cf2467666a039/src%2Frustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ffold.rs?ref=9df03068897602d4377a35c0ae3cf2467666a039", "patch": "@@ -8,30 +8,11 @@ export default_seq_fold_fnlist;\n \n tag fold<T> = t<T>;\n \n-type fold_crate<T> = fn~(\n-    fold: fold<T>,\n-    doc: doc::cratedoc\n-) -> doc::cratedoc;\n-\n-type fold_mod<T> = fn~(\n-    fold: fold<T>,\n-    doc: doc::moddoc\n-) -> doc::moddoc;\n-\n-type fold_fn<T> = fn~(\n-    fold: fold<T>,\n-    doc: doc::fndoc\n-) -> doc::fndoc;\n-\n-type fold_modlist<T> = fn~(\n-    fold: fold<T>,\n-    list: doc::modlist\n-) -> doc::modlist;\n-\n-type fold_fnlist<T> = fn~(\n-    fold: fold<T>,\n-    list: doc::fnlist\n-) -> doc::fnlist;\n+type fold_crate<T> = fn~(fold: fold<T>, doc: doc::cratedoc) -> doc::cratedoc;\n+type fold_mod<T> = fn~(fold: fold<T>, doc: doc::moddoc) -> doc::moddoc;\n+type fold_fn<T> = fn~(fold: fold<T>, doc: doc::fndoc) -> doc::fndoc;\n+type fold_modlist<T> = fn~(fold: fold<T>,list: doc::modlist) -> doc::modlist;\n+type fold_fnlist<T> = fn~(fold: fold<T>,list: doc::fnlist) -> doc::fnlist;\n \n type t<T> = {\n     ctxt: T,"}, {"sha": "5bc8696b08a0392df5ada494a0656607035011b7", "filename": "src/rustdoc/prune_undoc_pass.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9df03068897602d4377a35c0ae3cf2467666a039/src%2Frustdoc%2Fprune_undoc_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9df03068897602d4377a35c0ae3cf2467666a039/src%2Frustdoc%2Fprune_undoc_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fprune_undoc_pass.rs?ref=9df03068897602d4377a35c0ae3cf2467666a039", "patch": "@@ -18,18 +18,8 @@ fn run(\n         mutable have_docs: true\n     };\n     let fold = fold::fold({\n-        fold_fn: fn~(\n-            f: fold::fold<ctxt>,\n-            d: doc::fndoc\n-        ) -> doc::fndoc {\n-            fold_fn(f, d)\n-        },\n-        fold_fnlist: fn~(\n-            f: fold::fold<ctxt>,\n-            l: doc::fnlist\n-        ) -> doc::fnlist {\n-            fold_fnlist(f, l)\n-        }\n+        fold_fn: fold_fn,\n+        fold_fnlist: fold_fnlist\n         with *fold::default_seq_fold(ctxt)\n     });\n     fold.fold_crate(fold, doc)"}, {"sha": "fe3f0aafb106cfc75bb7ab37c95c002b6412e022", "filename": "src/rustdoc/tystr_pass.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9df03068897602d4377a35c0ae3cf2467666a039/src%2Frustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9df03068897602d4377a35c0ae3cf2467666a039/src%2Frustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ftystr_pass.rs?ref=9df03068897602d4377a35c0ae3cf2467666a039", "patch": "@@ -16,12 +16,7 @@ fn run(\n     doc: doc::cratedoc\n ) -> doc::cratedoc {\n     let fold = fold::fold({\n-        fold_fn: fn~(\n-            f: fold::fold<astsrv::srv>,\n-            d: doc::fndoc\n-        ) -> doc::fndoc {\n-            fold_fn(f, d)\n-        }\n+        fold_fn: fold_fn\n         with *fold::default_seq_fold(srv)\n     });\n     fold.fold_crate(fold, doc)"}]}