{"sha": "ee9e1af4ed55cee61ec278e83c229fda0eff22ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlOWUxYWY0ZWQ1NWNlZTYxZWMyNzhlODNjMjI5ZmRhMGVmZjIyZWM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-20T07:07:13Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-21T01:01:06Z"}, "message": "implicit_return: make it use a rustfix test", "tree": {"sha": "d0ad54ba71b2dac03373c9bb59d166149935fbf1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0ad54ba71b2dac03373c9bb59d166149935fbf1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee9e1af4ed55cee61ec278e83c229fda0eff22ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee9e1af4ed55cee61ec278e83c229fda0eff22ec", "html_url": "https://github.com/rust-lang/rust/commit/ee9e1af4ed55cee61ec278e83c229fda0eff22ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee9e1af4ed55cee61ec278e83c229fda0eff22ec/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2ab0698ccf7e53a80e8eb044bad7db9b1544539", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2ab0698ccf7e53a80e8eb044bad7db9b1544539", "html_url": "https://github.com/rust-lang/rust/commit/a2ab0698ccf7e53a80e8eb044bad7db9b1544539"}], "stats": {"total": 127, "additions": 116, "deletions": 11}, "files": [{"sha": "dd42f06664e155f926e85ea49236286bc79a915e", "filename": "tests/ui/implicit_return.fixed", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/ee9e1af4ed55cee61ec278e83c229fda0eff22ec/tests%2Fui%2Fimplicit_return.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ee9e1af4ed55cee61ec278e83c229fda0eff22ec/tests%2Fui%2Fimplicit_return.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.fixed?ref=ee9e1af4ed55cee61ec278e83c229fda0eff22ec", "patch": "@@ -0,0 +1,102 @@\n+// run-rustfix\n+\n+#![warn(clippy::implicit_return)]\n+#![allow(clippy::needless_return, unused)]\n+\n+fn test_end_of_fn() -> bool {\n+    if true {\n+        // no error!\n+        return true;\n+    }\n+\n+    return true\n+}\n+\n+#[allow(clippy::needless_bool)]\n+fn test_if_block() -> bool {\n+    if true {\n+        return true\n+    } else {\n+        return false\n+    }\n+}\n+\n+#[allow(clippy::match_bool)]\n+#[rustfmt::skip]\n+fn test_match(x: bool) -> bool {\n+    match x {\n+        true => return false,\n+        false => { return true },\n+    }\n+}\n+\n+#[allow(clippy::match_bool, clippy::needless_return)]\n+fn test_match_with_unreachable(x: bool) -> bool {\n+    match x {\n+        true => return false,\n+        false => unreachable!(),\n+    }\n+}\n+\n+#[allow(clippy::never_loop)]\n+fn test_loop() -> bool {\n+    loop {\n+        return true;\n+    }\n+}\n+\n+#[allow(clippy::never_loop)]\n+fn test_loop_with_block() -> bool {\n+    loop {\n+        {\n+            return true;\n+        }\n+    }\n+}\n+\n+#[allow(clippy::never_loop)]\n+fn test_loop_with_nests() -> bool {\n+    loop {\n+        if true {\n+            return true;\n+        } else {\n+            let _ = true;\n+        }\n+    }\n+}\n+\n+#[allow(clippy::redundant_pattern_matching)]\n+fn test_loop_with_if_let() -> bool {\n+    loop {\n+        if let Some(x) = Some(true) {\n+            return x;\n+        }\n+    }\n+}\n+\n+fn test_closure() {\n+    #[rustfmt::skip]\n+    let _ = || { return true };\n+    let _ = || return true;\n+}\n+\n+fn test_panic() -> bool {\n+    panic!()\n+}\n+\n+fn test_return_macro() -> String {\n+    return format!(\"test {}\", \"test\")\n+}\n+\n+fn main() {\n+    let _ = test_end_of_fn();\n+    let _ = test_if_block();\n+    let _ = test_match(true);\n+    let _ = test_match_with_unreachable(true);\n+    let _ = test_loop();\n+    let _ = test_loop_with_block();\n+    let _ = test_loop_with_nests();\n+    let _ = test_loop_with_if_let();\n+    test_closure();\n+    let _ = test_return_macro();\n+}"}, {"sha": "5abbf6a5583ea1f8352daae10d9b21910c7e80ef", "filename": "tests/ui/implicit_return.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ee9e1af4ed55cee61ec278e83c229fda0eff22ec/tests%2Fui%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee9e1af4ed55cee61ec278e83c229fda0eff22ec/tests%2Fui%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.rs?ref=ee9e1af4ed55cee61ec278e83c229fda0eff22ec", "patch": "@@ -1,4 +1,7 @@\n+// run-rustfix\n+\n #![warn(clippy::implicit_return)]\n+#![allow(clippy::needless_return, unused)]\n \n fn test_end_of_fn() -> bool {\n     if true {"}, {"sha": "21822344437bcfb15553673a56e7b1fb78fe3632", "filename": "tests/ui/implicit_return.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ee9e1af4ed55cee61ec278e83c229fda0eff22ec/tests%2Fui%2Fimplicit_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee9e1af4ed55cee61ec278e83c229fda0eff22ec/tests%2Fui%2Fimplicit_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.stderr?ref=ee9e1af4ed55cee61ec278e83c229fda0eff22ec", "patch": "@@ -1,67 +1,67 @@\n error: missing return statement\n-  --> $DIR/implicit_return.rs:9:5\n+  --> $DIR/implicit_return.rs:12:5\n    |\n LL |     true\n    |     ^^^^ help: add `return` as shown: `return true`\n    |\n    = note: `-D clippy::implicit-return` implied by `-D warnings`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:15:9\n+  --> $DIR/implicit_return.rs:18:9\n    |\n LL |         true\n    |         ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:17:9\n+  --> $DIR/implicit_return.rs:20:9\n    |\n LL |         false\n    |         ^^^^^ help: add `return` as shown: `return false`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:25:17\n+  --> $DIR/implicit_return.rs:28:17\n    |\n LL |         true => false,\n    |                 ^^^^^ help: add `return` as shown: `return false`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:26:20\n+  --> $DIR/implicit_return.rs:29:20\n    |\n LL |         false => { true },\n    |                    ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:41:9\n+  --> $DIR/implicit_return.rs:44:9\n    |\n LL |         break true;\n    |         ^^^^^^^^^^ help: change `break` to `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:49:13\n+  --> $DIR/implicit_return.rs:52:13\n    |\n LL |             break true;\n    |             ^^^^^^^^^^ help: change `break` to `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:58:13\n+  --> $DIR/implicit_return.rs:61:13\n    |\n LL |             break true;\n    |             ^^^^^^^^^^ help: change `break` to `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:76:18\n+  --> $DIR/implicit_return.rs:79:18\n    |\n LL |     let _ = || { true };\n    |                  ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:77:16\n+  --> $DIR/implicit_return.rs:80:16\n    |\n LL |     let _ = || true;\n    |                ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:85:5\n+  --> $DIR/implicit_return.rs:88:5\n    |\n LL |     format!(\"test {}\", \"test\")\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return format!(\"test {}\", \"test\")`"}]}