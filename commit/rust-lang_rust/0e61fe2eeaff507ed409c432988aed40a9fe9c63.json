{"sha": "0e61fe2eeaff507ed409c432988aed40a9fe9c63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNjFmZTJlZWFmZjUwN2VkNDA5YzQzMjk4OGFlZDQwYTlmZTljNjM=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-02-13T01:33:45Z"}, "committer": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-02-13T09:56:10Z"}, "message": "(core::str) use slice_bytes in starts_with for a little bit less string traversal", "tree": {"sha": "9c9c978ab7c84978318ad796fe1e1c095bf223d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c9c978ab7c84978318ad796fe1e1c095bf223d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e61fe2eeaff507ed409c432988aed40a9fe9c63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e61fe2eeaff507ed409c432988aed40a9fe9c63", "html_url": "https://github.com/rust-lang/rust/commit/0e61fe2eeaff507ed409c432988aed40a9fe9c63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e61fe2eeaff507ed409c432988aed40a9fe9c63/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8309d50ff4ead4dd58b8f3c8388d5668e2e0d152", "url": "https://api.github.com/repos/rust-lang/rust/commits/8309d50ff4ead4dd58b8f3c8388d5668e2e0d152", "html_url": "https://github.com/rust-lang/rust/commit/8309d50ff4ead4dd58b8f3c8388d5668e2e0d152"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "8baec57725d332658c51ae45195954b3ed9842dd", "filename": "src/libcore/str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0e61fe2eeaff507ed409c432988aed40a9fe9c63/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e61fe2eeaff507ed409c432988aed40a9fe9c63/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=0e61fe2eeaff507ed409c432988aed40a9fe9c63", "patch": "@@ -932,12 +932,12 @@ Parameters:\n haystack - The string to look in\n needle - The string to look for\n */\n-fn starts_with(haystack: str, needle: str) -> bool {\n-    let haystack_len: uint = len(haystack);\n-    let needle_len: uint = len(needle);\n+fn starts_with(haystack: str, needle: str) -> bool unsafe {\n+    let haystack_len: uint = len_bytes(haystack);\n+    let needle_len: uint = len_bytes(needle);\n     if needle_len == 0u { ret true; }\n     if needle_len > haystack_len { ret false; }\n-    ret eq(substr(haystack, 0u, needle_len), needle);\n+    ret eq(unsafe::slice_bytes(haystack, 0u, needle_len), needle);\n }\n \n /*"}]}