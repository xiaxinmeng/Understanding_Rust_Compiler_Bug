{"sha": "c7ff9334a63e2669204b1ee35e49886d8f0b90e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ZmY5MzM0YTYzZTI2NjkyMDRiMWVlMzVlNDk4ODZkOGYwYjkwZTE=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-05-01T16:10:25Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-05-01T16:10:25Z"}, "message": "Fixed build for latest nightly", "tree": {"sha": "af88f962dd15ecdf3e9e5676bfe6ab5b19ba9fbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af88f962dd15ecdf3e9e5676bfe6ab5b19ba9fbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7ff9334a63e2669204b1ee35e49886d8f0b90e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ff9334a63e2669204b1ee35e49886d8f0b90e1", "html_url": "https://github.com/rust-lang/rust/commit/c7ff9334a63e2669204b1ee35e49886d8f0b90e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7ff9334a63e2669204b1ee35e49886d8f0b90e1/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1742229ebb7843a65c05ee495d8de5366fcc5567", "url": "https://api.github.com/repos/rust-lang/rust/commits/1742229ebb7843a65c05ee495d8de5366fcc5567", "html_url": "https://github.com/rust-lang/rust/commit/1742229ebb7843a65c05ee495d8de5366fcc5567"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "fb8814d6d873680777a3807867e2f58245aeb9c4", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c7ff9334a63e2669204b1ee35e49886d8f0b90e1/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7ff9334a63e2669204b1ee35e49886d8f0b90e1/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=c7ff9334a63e2669204b1ee35e49886d8f0b90e1", "patch": "@@ -1,6 +1,7 @@\n use rustc::hir;\n use rustc::lint::*;\n use rustc::ty;\n+use rustc_errors::{Applicability};\n use syntax::codemap::Span;\n use utils::{in_macro, iter_input_pats, match_type, method_chain_args, snippet, span_lint_and_then};\n use utils::paths;\n@@ -210,25 +211,31 @@ fn lint_map_unit_fn(cx: &LateContext, stmt: &hir::Stmt, expr: &hir::Expr, map_ar\n                                  snippet(cx, fn_arg.span, \"_\"));\n \n         span_lint_and_then(cx, lint, expr.span, &msg, |db| {\n-            db.span_approximate_suggestion(stmt.span, \"try this\", suggestion);\n+            db.span_suggestion_with_applicability(stmt.span,\n+                                                  \"try this\",\n+                                                  suggestion,\n+                                                  Applicability::Unspecified);\n         });\n     } else if let Some((binding, closure_expr)) = unit_closure(cx, fn_arg) {\n         let msg = suggestion_msg(\"closure\", map_type);\n \n         span_lint_and_then(cx, lint, expr.span, &msg, |db| {\n             if let Some(reduced_expr_span) = reduce_unit_expression(cx, closure_expr) {\n                 let suggestion = format!(\"if let {0}({1}) = {2} {{ {3} }}\",\n-                                        variant,\n-                                        snippet(cx, binding.pat.span, \"_\"),\n-                                        snippet(cx, var_arg.span, \"_\"),\n-                                        snippet(cx, reduced_expr_span, \"_\"));\n+                                         variant,\n+                                         snippet(cx, binding.pat.span, \"_\"),\n+                                         snippet(cx, var_arg.span, \"_\"),\n+                                         snippet(cx, reduced_expr_span, \"_\"));\n                 db.span_suggestion(stmt.span, \"try this\", suggestion);\n             } else {\n                 let suggestion = format!(\"if let {0}({1}) = {2} {{ ... }}\",\n-                                        variant,\n-                                        snippet(cx, binding.pat.span, \"_\"),\n-                                        snippet(cx, var_arg.span, \"_\"));\n-                db.span_approximate_suggestion(stmt.span, \"try this\", suggestion);\n+                                         variant,\n+                                         snippet(cx, binding.pat.span, \"_\"),\n+                                         snippet(cx, var_arg.span, \"_\"));\n+                db.span_suggestion_with_applicability(stmt.span,\n+                                                      \"try this\",\n+                                                      suggestion,\n+                                                      Applicability::Unspecified);\n             }\n         });\n     }"}, {"sha": "79e319cfc68c392d79ca49ddab1ad838e4b9d7d4", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c7ff9334a63e2669204b1ee35e49886d8f0b90e1/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7ff9334a63e2669204b1ee35e49886d8f0b90e1/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=c7ff9334a63e2669204b1ee35e49886d8f0b90e1", "patch": "@@ -9,7 +9,7 @@ use rustc::lint::{LateContext, Level, Lint, LintContext};\n use rustc::session::Session;\n use rustc::traits;\n use rustc::ty::{self, Ty, TyCtxt, layout::{self, IntegerExt}};\n-use rustc_errors;\n+use rustc_errors::{Applicability, CodeSuggestion, Substitution, SubstitutionPart};\n use std::borrow::Cow;\n use std::env;\n use std::mem;\n@@ -645,12 +645,12 @@ pub fn multispan_sugg<I>(db: &mut DiagnosticBuilder, help_msg: String, sugg: I)\n where\n     I: IntoIterator<Item = (Span, String)>,\n {\n-    let sugg = rustc_errors::CodeSuggestion {\n+    let sugg = CodeSuggestion {\n         substitutions: vec![\n-            rustc_errors::Substitution {\n+            Substitution {\n                 parts: sugg.into_iter()\n                     .map(|(span, snippet)| {\n-                        rustc_errors::SubstitutionPart {\n+                        SubstitutionPart {\n                             snippet,\n                             span,\n                         }\n@@ -660,7 +660,7 @@ where\n         ],\n         msg: help_msg,\n         show_code_when_inline: true,\n-        approximate: false,\n+        applicability: Applicability::Unspecified,\n     };\n     db.suggestions.push(sugg);\n }"}]}