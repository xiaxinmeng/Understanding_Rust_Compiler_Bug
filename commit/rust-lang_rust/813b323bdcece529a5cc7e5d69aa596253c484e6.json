{"sha": "813b323bdcece529a5cc7e5d69aa596253c484e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxM2IzMjNiZGNlY2U1MjlhNWNjN2U1ZDY5YWE1OTYyNTNjNDg0ZTY=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2017-09-09T20:01:45Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2017-09-09T20:01:45Z"}, "message": "Don't promote references to statics that occur in non-static locations", "tree": {"sha": "4d0e5b64729c1a8885c0992fc74321eb10d20b2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d0e5b64729c1a8885c0992fc74321eb10d20b2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/813b323bdcece529a5cc7e5d69aa596253c484e6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAlm0SL8ACgkQtAh+UQ6Y\nsWT2cA//XYwWYsDs1SotKbf/CoGsUkd2Y8jLSl5YwI/R/3a3O2R1ZxF7N3ZIQbUf\nPGF9r/61MK5OoooCHdxDgaEvtQelKxibrJc14AA4r4YG6B8vinxMWAgAXDIVoaLL\nSJI5RCqmz3ewAXo+UNOWnvULBPQlxzhJ+sAn2VbsD0GH+g8kg/MUo/VVQtluAX0d\nNt2jMuNJaKeFNIOxnJIfBpWS2aGaKXGns7Tik5am9GiPz8aZzkKMHNi3yrOJTYau\nG5j7ULjlsdP1I6BxfD8BxqCMDBUixBCA4nyHiFbbsV+rIeIPuZhNF71tm70+xsGU\nPzF6n0ggJk+e1fTiMct6eHxyh/py8NPnCp1L7lUa1kivw80ThNqIFx4sJo9slD2P\nPQOUQySdDfdINwKycOaeXnKXfbke7C433PQyvoxSszdVfxmY+9uGAbMCmY8vusIZ\ndEo6JaW27dm92QQDxmjpUVOVCwsrK+RgCq8iiv0RU02tivHJblMjR6XfYtiKRDbA\npfZUyu+psGpC5CpEUCvgwko9C75cSoFHZqonLQ1Ch2ZQnWjke2oLWsiJrcdxIWkJ\nhJR+ecTxdz3G53VPviqRySXz8JQb6LxHOlxOUIRrJeQM5r7E4DHGVg3Dw5bZ+YMJ\n9GhxiMfFg3ySUdn5CHua0/ME/xptuU4s8GUoAhPOCrEItTbjfUE=\n=+KVx\n-----END PGP SIGNATURE-----", "payload": "tree 4d0e5b64729c1a8885c0992fc74321eb10d20b2f\nparent 07becc5f2438a2f628e8cb5d5a6128dd9ed2cc31\nauthor Aaron Hill <aa1ronham@gmail.com> 1504987305 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1504987305 -0400\n\nDon't promote references to statics that occur in non-static locations\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/813b323bdcece529a5cc7e5d69aa596253c484e6", "html_url": "https://github.com/rust-lang/rust/commit/813b323bdcece529a5cc7e5d69aa596253c484e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/813b323bdcece529a5cc7e5d69aa596253c484e6/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07becc5f2438a2f628e8cb5d5a6128dd9ed2cc31", "url": "https://api.github.com/repos/rust-lang/rust/commits/07becc5f2438a2f628e8cb5d5a6128dd9ed2cc31", "html_url": "https://github.com/rust-lang/rust/commit/07becc5f2438a2f628e8cb5d5a6128dd9ed2cc31"}], "stats": {"total": 62, "additions": 47, "deletions": 15}, "files": [{"sha": "eb955ccf6bf70d4b902ea5e65c9d533be19602fd", "filename": "src/librustc_passes/consts.rs", "status": "modified", "additions": 31, "deletions": 15, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/813b323bdcece529a5cc7e5d69aa596253c484e6/src%2Flibrustc_passes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/813b323bdcece529a5cc7e5d69aa596253c484e6/src%2Flibrustc_passes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fconsts.rs?ref=813b323bdcece529a5cc7e5d69aa596253c484e6", "patch": "@@ -56,6 +56,7 @@ use std::cmp::Ordering;\n struct CheckCrateVisitor<'a, 'tcx: 'a> {\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     in_fn: bool,\n+    in_static: bool,\n     promotable: bool,\n     mut_rvalue_borrows: NodeSet,\n     param_env: ty::ParamEnv<'tcx>,\n@@ -128,10 +129,16 @@ impl<'a, 'tcx> Visitor<'tcx> for CheckCrateVisitor<'a, 'tcx> {\n         let outer_param_env = self.param_env;\n         let outer_identity_substs = self.identity_substs;\n \n-        self.in_fn = match MirSource::from_node(self.tcx, item_id) {\n-            MirSource::Fn(_) => true,\n-            _ => false\n+        self.in_fn = false;\n+        self.in_static = false;\n+\n+        match MirSource::from_node(self.tcx, item_id) {\n+            MirSource::Fn(_) => self.in_fn = true,\n+            MirSource::Static(_, _) => self.in_static = true,\n+            _ => {}\n         };\n+\n+\n         self.tables = self.tcx.typeck_tables_of(item_def_id);\n         self.param_env = self.tcx.param_env(item_def_id);\n         self.identity_substs = Substs::identity_for_item(self.tcx, item_def_id);\n@@ -333,20 +340,28 @@ fn check_expr<'a, 'tcx>(v: &mut CheckCrateVisitor<'a, 'tcx>, e: &hir::Expr, node\n                 // with the exception of \"#[thread_loca]\" statics.\n                 // The latter may not outlive the current function\n                 Def::Static(did, _) => {\n-                    let mut thread_local = false;\n-\n-                    for attr in &v.tcx.get_attrs(did)[..] {\n-                        if attr.check_name(\"thread_local\") {\n-                            debug!(\"Static(id={:?}) is unpromotable \\\n-                                   due to a #[thread_local] attribute\", did);\n-                            v.promotable = false;\n-                            thread_local = true;\n-                            break;\n+\n+                    if v.in_static {\n+                        let mut thread_local = false;\n+\n+                        for attr in &v.tcx.get_attrs(did)[..] {\n+                            if attr.check_name(\"thread_local\") {\n+                                debug!(\"Reference to Static(id={:?}) is unpromotable \\\n+                                       due to a #[thread_local] attribute\", did);\n+                                v.promotable = false;\n+                                thread_local = true;\n+                                break;\n+                            }\n                         }\n-                    }\n \n-                    if !thread_local {\n-                        debug!(\"Allowing promotion of reference to Static(id={:?})\", did);\n+                        if !thread_local {\n+                            debug!(\"Allowing promotion of reference to Static(id={:?})\", did);\n+                        }\n+                    } else {\n+                        debug!(\"Reference to Static(id={:?}) is unpromotable as it is not \\\n+                               referenced from a static\", did);\n+                        v.promotable = false;\n+\n                     }\n                 }\n \n@@ -502,6 +517,7 @@ pub fn check_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n         tcx,\n         tables: &ty::TypeckTables::empty(None),\n         in_fn: false,\n+        in_static: false,\n         promotable: false,\n         mut_rvalue_borrows: NodeSet(),\n         param_env: ty::ParamEnv::empty(Reveal::UserFacing),"}, {"sha": "d744ad11c5c721787bf1b9be1decf025db54aeb0", "filename": "src/test/compile-fail/issue-44373.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/813b323bdcece529a5cc7e5d69aa596253c484e6/src%2Ftest%2Fcompile-fail%2Fissue-44373.rs", "raw_url": "https://github.com/rust-lang/rust/raw/813b323bdcece529a5cc7e5d69aa596253c484e6/src%2Ftest%2Fcompile-fail%2Fissue-44373.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-44373.rs?ref=813b323bdcece529a5cc7e5d69aa596253c484e6", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+static FOO: u32 = 50;\n+\n+fn main() {\n+    let _val: &'static [&'static u32] = &[&FOO]; //~ ERROR borrowed value does not live long enough\n+}"}]}