{"sha": "2467c6e5a7fe008c33fdc1060a5ce869d6219a92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NjdjNmU1YTdmZTAwOGMzM2ZkYzEwNjBhNWNlODY5ZDYyMTlhOTI=", "commit": {"author": {"name": "Derek Harland", "email": "derek.harland@finq.co.nz", "date": "2014-07-31T03:57:29Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-31T18:50:24Z"}, "message": "Implement slice::Vector for Option<T> and CVec<T>", "tree": {"sha": "ec8c58e4bbace51dac1c2174c98e86435e1f0192", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec8c58e4bbace51dac1c2174c98e86435e1f0192"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2467c6e5a7fe008c33fdc1060a5ce869d6219a92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2467c6e5a7fe008c33fdc1060a5ce869d6219a92", "html_url": "https://github.com/rust-lang/rust/commit/2467c6e5a7fe008c33fdc1060a5ce869d6219a92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2467c6e5a7fe008c33fdc1060a5ce869d6219a92/comments", "author": {"login": "donkopotamus", "id": 4120456, "node_id": "MDQ6VXNlcjQxMjA0NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4120456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donkopotamus", "html_url": "https://github.com/donkopotamus", "followers_url": "https://api.github.com/users/donkopotamus/followers", "following_url": "https://api.github.com/users/donkopotamus/following{/other_user}", "gists_url": "https://api.github.com/users/donkopotamus/gists{/gist_id}", "starred_url": "https://api.github.com/users/donkopotamus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donkopotamus/subscriptions", "organizations_url": "https://api.github.com/users/donkopotamus/orgs", "repos_url": "https://api.github.com/users/donkopotamus/repos", "events_url": "https://api.github.com/users/donkopotamus/events{/privacy}", "received_events_url": "https://api.github.com/users/donkopotamus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc24819bb298f5ab1d89ae74cab5ae5f26423bba", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc24819bb298f5ab1d89ae74cab5ae5f26423bba", "html_url": "https://github.com/rust-lang/rust/commit/bc24819bb298f5ab1d89ae74cab5ae5f26423bba"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "f8293aeb03d1910651677ceb44175a797730e9ab", "filename": "src/libcore/option.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2467c6e5a7fe008c33fdc1060a5ce869d6219a92/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2467c6e5a7fe008c33fdc1060a5ce869d6219a92/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=2467c6e5a7fe008c33fdc1060a5ce869d6219a92", "patch": "@@ -143,6 +143,7 @@\n \n use cmp::{PartialEq, Eq, Ord};\n use default::Default;\n+use slice::Vector;\n use iter::{Iterator, DoubleEndedIterator, FromIterator, ExactSize};\n use mem;\n use slice;\n@@ -216,15 +217,6 @@ impl<T> Option<T> {\n         match *self { Some(ref mut x) => Some(x), None => None }\n     }\n \n-    /// Convert from `Option<T>` to `&[T]` (without copying)\n-    #[inline]\n-    pub fn as_slice<'r>(&'r self) -> &'r [T] {\n-        match *self {\n-            Some(ref x) => slice::ref_slice(x),\n-            None => &[]\n-        }\n-    }\n-\n     /// Convert from `Option<T>` to `&mut [T]` (without copying)\n     #[inline]\n     pub fn as_mut_slice<'r>(&'r mut self) -> &'r mut [T] {\n@@ -526,6 +518,17 @@ impl<T: Default> Option<T> {\n // Trait implementations\n /////////////////////////////////////////////////////////////////////////////\n \n+impl<T> Vector<T> for Option<T> {\n+    /// Convert from `Option<T>` to `&[T]` (without copying)\n+    #[inline]\n+    fn as_slice<'a>(&'a self) -> &'a [T] {\n+        match *self {\n+            Some(ref x) => slice::ref_slice(x),\n+            None => &[]\n+        }\n+    }\n+}\n+\n impl<T> Default for Option<T> {\n     #[inline]\n     fn default() -> Option<T> { None }"}, {"sha": "80fe05fcea5cdf99f1cdc14179c4af21dfd3324d", "filename": "src/libstd/c_vec.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2467c6e5a7fe008c33fdc1060a5ce869d6219a92/src%2Flibstd%2Fc_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2467c6e5a7fe008c33fdc1060a5ce869d6219a92/src%2Flibstd%2Fc_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_vec.rs?ref=2467c6e5a7fe008c33fdc1060a5ce869d6219a92", "patch": "@@ -43,6 +43,7 @@ use option::{Option, Some, None};\n use ptr::RawPtr;\n use ptr;\n use raw;\n+use slice::Vector;\n \n /// The type representing a foreign chunk of memory\n pub struct CVec<T> {\n@@ -101,13 +102,6 @@ impl<T> CVec<T> {\n         }\n     }\n \n-    /// View the stored data as a slice.\n-    pub fn as_slice<'a>(&'a self) -> &'a [T] {\n-        unsafe {\n-            mem::transmute(raw::Slice { data: self.base as *const T, len: self.len })\n-        }\n-    }\n-\n     /// View the stored data as a mutable slice.\n     pub fn as_mut_slice<'a>(&'a mut self) -> &'a mut [T] {\n         unsafe {\n@@ -151,6 +145,15 @@ impl<T> CVec<T> {\n     }\n }\n \n+impl<T> Vector<T> for CVec<T> {\n+    /// View the stored data as a slice.\n+    fn as_slice<'a>(&'a self) -> &'a [T] {\n+        unsafe {\n+            mem::transmute(raw::Slice { data: self.base as *const T, len: self.len })\n+        }\n+    }\n+}\n+\n impl<T> Collection for CVec<T> {\n     fn len(&self) -> uint { self.len }\n }"}]}