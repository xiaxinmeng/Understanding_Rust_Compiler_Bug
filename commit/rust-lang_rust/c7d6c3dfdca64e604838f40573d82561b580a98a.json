{"sha": "c7d6c3dfdca64e604838f40573d82561b580a98a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ZDZjM2RmZGNhNjRlNjA0ODM4ZjQwNTczZDgyNTYxYjU4MGE5OGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-02T22:06:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-02T22:06:17Z"}, "message": "Auto merge of #80592 - Skynoodle:snake-case-lint-reserved-identifier, r=davidtwco\n\nSuggest renaming or escaping when fixing non-snake-case identifiers which would conflict with keywords\n\nFixes #80575", "tree": {"sha": "6219a05cb549e7ee4d4e6c1c60ccabc360ab666a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6219a05cb549e7ee4d4e6c1c60ccabc360ab666a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7d6c3dfdca64e604838f40573d82561b580a98a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7d6c3dfdca64e604838f40573d82561b580a98a", "html_url": "https://github.com/rust-lang/rust/commit/c7d6c3dfdca64e604838f40573d82561b580a98a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7d6c3dfdca64e604838f40573d82561b580a98a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fde692739576089729885b7f79aa2232cb9778c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fde692739576089729885b7f79aa2232cb9778c5", "html_url": "https://github.com/rust-lang/rust/commit/fde692739576089729885b7f79aa2232cb9778c5"}, {"sha": "750c52af7334e325e9c3980dbdad10dedeb22f82", "url": "https://api.github.com/repos/rust-lang/rust/commits/750c52af7334e325e9c3980dbdad10dedeb22f82", "html_url": "https://github.com/rust-lang/rust/commit/750c52af7334e325e9c3980dbdad10dedeb22f82"}], "stats": {"total": 105, "additions": 103, "deletions": 2}, "files": [{"sha": "8bb3ff0dde014aeb79883aa0517ebbb532e430c1", "filename": "compiler/rustc_lint/src/nonstandard_style.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c7d6c3dfdca64e604838f40573d82561b580a98a/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7d6c3dfdca64e604838f40573d82561b580a98a/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs?ref=c7d6c3dfdca64e604838f40573d82561b580a98a", "patch": "@@ -275,10 +275,25 @@ impl NonSnakeCase {\n                     // We have a valid span in almost all cases, but we don't have one when linting a crate\n                     // name provided via the command line.\n                     if !ident.span.is_dummy() {\n+                        let sc_ident = Ident::from_str_and_span(&sc, ident.span);\n+                        let (message, suggestion) = if sc_ident.is_reserved() {\n+                            // We shouldn't suggest a reserved identifier to fix non-snake-case identifiers.\n+                            // Instead, recommend renaming the identifier entirely or, if permitted,\n+                            // escaping it to create a raw identifier.\n+                            if sc_ident.name.can_be_raw() {\n+                                (\"rename the identifier or convert it to a snake case raw identifier\", sc_ident.to_string())\n+                            } else {\n+                                err.note(&format!(\"`{}` cannot be used as a raw identifier\", sc));\n+                                (\"rename the identifier\", String::new())\n+                            }\n+                        } else {\n+                            (\"convert the identifier to snake case\", sc)\n+                        };\n+\n                         err.span_suggestion(\n                             ident.span,\n-                            \"convert the identifier to snake case\",\n-                            sc,\n+                            message,\n+                            suggestion,\n                             Applicability::MaybeIncorrect,\n                         );\n                     } else {"}, {"sha": "8cc4f976a4b99361babf6224b46c7507619f7e1e", "filename": "src/test/ui/lint/lint-non-snake-case-identifiers-suggestion-reserved.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c7d6c3dfdca64e604838f40573d82561b580a98a/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-identifiers-suggestion-reserved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7d6c3dfdca64e604838f40573d82561b580a98a/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-identifiers-suggestion-reserved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-identifiers-suggestion-reserved.rs?ref=c7d6c3dfdca64e604838f40573d82561b580a98a", "patch": "@@ -0,0 +1,19 @@\n+#![warn(unused)]\n+#![allow(dead_code)]\n+#![deny(non_snake_case)]\n+\n+mod Impl {}\n+//~^ ERROR module `Impl` should have a snake case name\n+\n+fn While() {}\n+//~^ ERROR function `While` should have a snake case name\n+\n+fn main() {\n+    let Mod: usize = 0;\n+    //~^ ERROR variable `Mod` should have a snake case name\n+    //~^^ WARN unused variable: `Mod`\n+\n+    let Super: usize = 0;\n+    //~^ ERROR variable `Super` should have a snake case name\n+    //~^^ WARN unused variable: `Super`\n+}"}, {"sha": "c179f4a25bdd2290da656a8b1d55a3082ff4dd8d", "filename": "src/test/ui/lint/lint-non-snake-case-identifiers-suggestion-reserved.stderr", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/c7d6c3dfdca64e604838f40573d82561b580a98a/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-identifiers-suggestion-reserved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c7d6c3dfdca64e604838f40573d82561b580a98a/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-identifiers-suggestion-reserved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-identifiers-suggestion-reserved.stderr?ref=c7d6c3dfdca64e604838f40573d82561b580a98a", "patch": "@@ -0,0 +1,67 @@\n+warning: unused variable: `Mod`\n+  --> $DIR/lint-non-snake-case-identifiers-suggestion-reserved.rs:12:9\n+   |\n+LL |     let Mod: usize = 0;\n+   |         ^^^ help: if this is intentional, prefix it with an underscore: `_Mod`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/lint-non-snake-case-identifiers-suggestion-reserved.rs:1:9\n+   |\n+LL | #![warn(unused)]\n+   |         ^^^^^^\n+   = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`\n+\n+warning: unused variable: `Super`\n+  --> $DIR/lint-non-snake-case-identifiers-suggestion-reserved.rs:16:9\n+   |\n+LL |     let Super: usize = 0;\n+   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_Super`\n+\n+error: module `Impl` should have a snake case name\n+  --> $DIR/lint-non-snake-case-identifiers-suggestion-reserved.rs:5:5\n+   |\n+LL | mod Impl {}\n+   |     ^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/lint-non-snake-case-identifiers-suggestion-reserved.rs:3:9\n+   |\n+LL | #![deny(non_snake_case)]\n+   |         ^^^^^^^^^^^^^^\n+help: rename the identifier or convert it to a snake case raw identifier\n+   |\n+LL | mod r#impl {}\n+   |     ^^^^^^\n+\n+error: function `While` should have a snake case name\n+  --> $DIR/lint-non-snake-case-identifiers-suggestion-reserved.rs:8:4\n+   |\n+LL | fn While() {}\n+   |    ^^^^^\n+   |\n+help: rename the identifier or convert it to a snake case raw identifier\n+   |\n+LL | fn r#while() {}\n+   |    ^^^^^^^\n+\n+error: variable `Mod` should have a snake case name\n+  --> $DIR/lint-non-snake-case-identifiers-suggestion-reserved.rs:12:9\n+   |\n+LL |     let Mod: usize = 0;\n+   |         ^^^\n+   |\n+help: rename the identifier or convert it to a snake case raw identifier\n+   |\n+LL |     let r#mod: usize = 0;\n+   |         ^^^^^\n+\n+error: variable `Super` should have a snake case name\n+  --> $DIR/lint-non-snake-case-identifiers-suggestion-reserved.rs:16:9\n+   |\n+LL |     let Super: usize = 0;\n+   |         ^^^^^ help: rename the identifier\n+   |\n+   = note: `super` cannot be used as a raw identifier\n+\n+error: aborting due to 4 previous errors; 2 warnings emitted\n+"}]}