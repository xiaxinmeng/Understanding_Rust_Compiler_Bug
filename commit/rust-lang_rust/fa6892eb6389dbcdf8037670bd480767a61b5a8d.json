{"sha": "fa6892eb6389dbcdf8037670bd480767a61b5a8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNjg5MmViNjM4OWRiY2RmODAzNzY3MGJkNDgwNzY3YTYxYjVhOGQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-01-22T04:04:20Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-01-22T04:04:20Z"}, "message": "Use field initialization shorthand if possible\n\nAlso this PR fixes a bug that attributes on a shorthand field get removed.", "tree": {"sha": "4bd8b8257622ece7fccb4209575c648bb189ee85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bd8b8257622ece7fccb4209575c648bb189ee85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa6892eb6389dbcdf8037670bd480767a61b5a8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa6892eb6389dbcdf8037670bd480767a61b5a8d", "html_url": "https://github.com/rust-lang/rust/commit/fa6892eb6389dbcdf8037670bd480767a61b5a8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa6892eb6389dbcdf8037670bd480767a61b5a8d/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fff59fe8d9eccb6cd234efa9316533ddf6cd1302", "url": "https://api.github.com/repos/rust-lang/rust/commits/fff59fe8d9eccb6cd234efa9316533ddf6cd1302", "html_url": "https://github.com/rust-lang/rust/commit/fff59fe8d9eccb6cd234efa9316533ddf6cd1302"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "09917ca088b5d22c0c0f6e970a070a0b5b08e937", "filename": "src/expr.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fa6892eb6389dbcdf8037670bd480767a61b5a8d/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6892eb6389dbcdf8037670bd480767a61b5a8d/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=fa6892eb6389dbcdf8037670bd480767a61b5a8d", "patch": "@@ -2565,9 +2565,13 @@ pub fn rewrite_field(\n     if contains_skip(&field.attrs) {\n         return Some(context.snippet(field.span()).to_owned());\n     }\n-    let name = &field.ident.node.to_string();\n+    let mut attrs_str = field.attrs.rewrite(context, shape)?;\n+    if !attrs_str.is_empty() {\n+        attrs_str.push_str(&format!(\"\\n{}\", shape.indent.to_string(context.config)));\n+    };\n+    let name = field.ident.node.to_string();\n     if field.is_shorthand {\n-        Some(name.to_string())\n+        Some(attrs_str + &name)\n     } else {\n         let mut separator = String::from(struct_lit_field_separator(context.config));\n         for _ in 0..prefix_max_width.checked_sub(name.len()).unwrap_or(0) {\n@@ -2577,12 +2581,8 @@ pub fn rewrite_field(\n         let expr_shape = shape.offset_left(overhead)?;\n         let expr = field.expr.rewrite(context, expr_shape);\n \n-        let mut attrs_str = field.attrs.rewrite(context, shape)?;\n-        if !attrs_str.is_empty() {\n-            attrs_str.push_str(&format!(\"\\n{}\", shape.indent.to_string(context.config)));\n-        };\n-\n         match expr {\n+            Some(ref e) if e.as_str() == name => Some(attrs_str + &name),\n             Some(e) => Some(format!(\"{}{}{}{}\", attrs_str, name, separator, e)),\n             None => {\n                 let expr_offset = shape.indent.block_indent(context.config);"}]}