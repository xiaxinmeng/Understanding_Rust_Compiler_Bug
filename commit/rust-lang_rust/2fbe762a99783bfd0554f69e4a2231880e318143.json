{"sha": "2fbe762a99783bfd0554f69e4a2231880e318143", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmYmU3NjJhOTk3ODNiZmQwNTU0ZjY5ZTRhMjIzMTg4MGUzMTgxNDM=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-12-08T22:18:25Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-12-08T22:18:25Z"}, "message": "Merge pull request #485 from sanxiyn/suggestion\n\nUse suggestion for redundant_closure", "tree": {"sha": "8af5c41ed8f6fbef50407953de012aa33ba4380c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8af5c41ed8f6fbef50407953de012aa33ba4380c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fbe762a99783bfd0554f69e4a2231880e318143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fbe762a99783bfd0554f69e4a2231880e318143", "html_url": "https://github.com/rust-lang/rust/commit/2fbe762a99783bfd0554f69e4a2231880e318143", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fbe762a99783bfd0554f69e4a2231880e318143/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98c4dc185c5bdd688dcf3631b840ca7d12047f94", "url": "https://api.github.com/repos/rust-lang/rust/commits/98c4dc185c5bdd688dcf3631b840ca7d12047f94", "html_url": "https://github.com/rust-lang/rust/commit/98c4dc185c5bdd688dcf3631b840ca7d12047f94"}, {"sha": "213c15cd66c2291bcb95c8f9bd421c5181cb68d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/213c15cd66c2291bcb95c8f9bd421c5181cb68d3", "html_url": "https://github.com/rust-lang/rust/commit/213c15cd66c2291bcb95c8f9bd421c5181cb68d3"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "4957c2e21bc6dfb66a63dd2ed288d4c8e6316de1", "filename": "src/eta_reduction.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2fbe762a99783bfd0554f69e4a2231880e318143/src%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fbe762a99783bfd0554f69e4a2231880e318143/src%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feta_reduction.rs?ref=2fbe762a99783bfd0554f69e4a2231880e318143", "patch": "@@ -2,7 +2,7 @@ use rustc::lint::*;\n use rustc_front::hir::*;\n use rustc::middle::ty;\n \n-use utils::{snippet, span_lint, is_adjusted};\n+use utils::{snippet_opt, span_lint_and_then, is_adjusted};\n \n \n #[allow(missing_copy_implementations)]\n@@ -75,9 +75,15 @@ fn check_closure(cx: &LateContext, expr: &Expr) {\n                         return\n                     }\n                 }\n-                span_lint(cx, REDUNDANT_CLOSURE, expr.span, &format!(\n-                    \"redundant closure found. Consider using `{}` in its place\",\n-                    snippet(cx, caller.span, \"..\")));\n+                span_lint_and_then(cx, REDUNDANT_CLOSURE, expr.span,\n+                                   \"redundant closure found\",\n+                                   || {\n+                    if let Some(snippet) = snippet_opt(cx, caller.span) {\n+                        cx.sess().span_suggestion(expr.span,\n+                                                  \"remove closure as shown:\",\n+                                                  snippet);\n+                    }\n+                });\n             }\n         }\n     }"}, {"sha": "5e1671b709cb6ccf5b4787e0a1158c62802bf37a", "filename": "src/utils.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2fbe762a99783bfd0554f69e4a2231880e318143/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fbe762a99783bfd0554f69e4a2231880e318143/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=2fbe762a99783bfd0554f69e4a2231880e318143", "patch": "@@ -195,6 +195,11 @@ pub fn snippet<'a, T: LintContext>(cx: &T, span: Span, default: &'a str) -> Cow<\n     cx.sess().codemap().span_to_snippet(span).map(From::from).unwrap_or(Cow::Borrowed(default))\n }\n \n+/// Converts a span to a code snippet. Returns None if not available.\n+pub fn snippet_opt<T: LintContext>(cx: &T, span: Span) -> Option<String> {\n+    cx.sess().codemap().span_to_snippet(span).ok()\n+}\n+\n /// convert a span (from a block) to a code snippet if available, otherwise use default, e.g.\n /// `snippet(cx, expr.span, \"..\")`\n /// This trims the code of indentation, except for the first line\n@@ -320,6 +325,17 @@ pub fn span_note_and_lint<T: LintContext>(cx: &T, lint: &'static Lint, span: Spa\n     }\n }\n \n+pub fn span_lint_and_then<T: LintContext, F>(cx: &T, lint: &'static Lint, sp: Span,\n+        msg: &str, f: F) where F: Fn() {\n+    cx.span_lint(lint, sp, msg);\n+    if cx.current_level(lint) != Level::Allow {\n+        f();\n+        cx.sess().fileline_help(sp, &format!(\"for further information visit \\\n+            https://github.com/Manishearth/rust-clippy/wiki#{}\",\n+            lint.name_lower()))\n+    }\n+}\n+\n /// return the base type for references and raw pointers\n pub fn walk_ptrs_ty(ty: ty::Ty) -> ty::Ty {\n     match ty.sty {"}, {"sha": "a51d116d9cc80c0beb564d04d56c7b1c7b65728d", "filename": "tests/compile-fail/eta.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2fbe762a99783bfd0554f69e4a2231880e318143/tests%2Fcompile-fail%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fbe762a99783bfd0554f69e4a2231880e318143/tests%2Fcompile-fail%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Feta.rs?ref=2fbe762a99783bfd0554f69e4a2231880e318143", "patch": "@@ -5,11 +5,17 @@\n \n fn main() {\n     let a = Some(1u8).map(|a| foo(a));\n-    //~^ ERROR redundant closure found. Consider using `foo` in its place\n+    //~^ ERROR redundant closure found\n+    //~| HELP remove closure as shown\n+    //~| SUGGESTION let a = Some(1u8).map(foo);\n     meta(|a| foo(a));\n-    //~^ ERROR redundant closure found. Consider using `foo` in its place\n+    //~^ ERROR redundant closure found\n+    //~| HELP remove closure as shown\n+    //~| SUGGESTION meta(foo);\n     let c = Some(1u8).map(|a| {1+2; foo}(a));\n-    //~^ ERROR redundant closure found. Consider using `{1+2; foo}` in its place\n+    //~^ ERROR redundant closure found\n+    //~| HELP remove closure as shown\n+    //~| SUGGESTION let c = Some(1u8).map({1+2; foo});\n     let d = Some(1u8).map(|a| foo((|b| foo2(b))(a))); //is adjusted?\n     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted\n     unsafe {"}]}