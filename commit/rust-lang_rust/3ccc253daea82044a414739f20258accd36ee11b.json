{"sha": "3ccc253daea82044a414739f20258accd36ee11b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjY2MyNTNkYWVhODIwNDRhNDE0NzM5ZjIwMjU4YWNjZDM2ZWUxMWI=", "commit": {"author": {"name": "Jack Wilson", "email": "jack.wilson.v@gmail.com", "date": "2015-09-06T02:54:52Z"}, "committer": {"name": "Jack Wilson", "email": "jack.wilson.v@gmail.com", "date": "2015-09-06T02:54:52Z"}, "message": "Small formatting/syntax tweaks", "tree": {"sha": "061f969001f3adc2a6c3876f84cc53ca5d045603", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/061f969001f3adc2a6c3876f84cc53ca5d045603"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ccc253daea82044a414739f20258accd36ee11b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ccc253daea82044a414739f20258accd36ee11b", "html_url": "https://github.com/rust-lang/rust/commit/3ccc253daea82044a414739f20258accd36ee11b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ccc253daea82044a414739f20258accd36ee11b/comments", "author": {"login": "id4ho", "id": 1232370, "node_id": "MDQ6VXNlcjEyMzIzNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1232370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/id4ho", "html_url": "https://github.com/id4ho", "followers_url": "https://api.github.com/users/id4ho/followers", "following_url": "https://api.github.com/users/id4ho/following{/other_user}", "gists_url": "https://api.github.com/users/id4ho/gists{/gist_id}", "starred_url": "https://api.github.com/users/id4ho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/id4ho/subscriptions", "organizations_url": "https://api.github.com/users/id4ho/orgs", "repos_url": "https://api.github.com/users/id4ho/repos", "events_url": "https://api.github.com/users/id4ho/events{/privacy}", "received_events_url": "https://api.github.com/users/id4ho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "id4ho", "id": 1232370, "node_id": "MDQ6VXNlcjEyMzIzNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1232370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/id4ho", "html_url": "https://github.com/id4ho", "followers_url": "https://api.github.com/users/id4ho/followers", "following_url": "https://api.github.com/users/id4ho/following{/other_user}", "gists_url": "https://api.github.com/users/id4ho/gists{/gist_id}", "starred_url": "https://api.github.com/users/id4ho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/id4ho/subscriptions", "organizations_url": "https://api.github.com/users/id4ho/orgs", "repos_url": "https://api.github.com/users/id4ho/repos", "events_url": "https://api.github.com/users/id4ho/events{/privacy}", "received_events_url": "https://api.github.com/users/id4ho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f84d53ca0afaeac14903d16ab24455f6170795e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f84d53ca0afaeac14903d16ab24455f6170795e1", "html_url": "https://github.com/rust-lang/rust/commit/f84d53ca0afaeac14903d16ab24455f6170795e1"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "347c1f5757c62e041740557d5535da9e37ead042", "filename": "src/doc/trpl/generics.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ccc253daea82044a414739f20258accd36ee11b/src%2Fdoc%2Ftrpl%2Fgenerics.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ccc253daea82044a414739f20258accd36ee11b/src%2Fdoc%2Ftrpl%2Fgenerics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fgenerics.md?ref=3ccc253daea82044a414739f20258accd36ee11b", "patch": "@@ -17,7 +17,7 @@ enum Option<T> {\n ```\n \n The `<T>` part, which you\u2019ve seen a few times before, indicates that this is\n-a generic data type. Inside the declaration of our enum, wherever we see a `T`,\n+a generic data type. Inside the declaration of our `enum`, wherever we see a `T`,\n we substitute that type for the same type used in the generic. Here\u2019s an\n example of using `Option<T>`, with some extra type annotations:\n \n@@ -115,10 +115,10 @@ let int_origin = Point { x: 0, y: 0 };\n let float_origin = Point { x: 0.0, y: 0.0 };\n ```\n \n-Similarly to functions, the `<T>` is where we declare the generic parameters,\n+Similar to functions, the `<T>` is where we declare the generic parameters,\n and we then use `x: T` in the type declaration, too.\n \n-When you want to add an implementation for the generic struct, you just\n+When you want to add an implementation for the generic `struct`, you just\n declare the type parameter after the `impl`:\n \n ```rust"}]}