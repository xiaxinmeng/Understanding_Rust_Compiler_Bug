{"sha": "ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmODA2Yjg3MTY3YTliNGYzOGI5ZTNkMmY2ZTljNGU2MjFkZjZhNzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-16T17:22:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-16T17:22:54Z"}, "message": "Auto merge of #76420 - Gelbpunkt:aarch64-linux-musl, r=pietroalbini\n\nAdd aarch64-unknown-linux-musl host builds\n\nThis adds aarch64-unknown-linux-musl to the hosts list and adds the build to the dist-arm-linux builder as `@Mark-Simulacrum` suggested to me in Zulip. `@jyn514` requested to be mentioned :smile:\n\nI had to update the config for crosstool-ng as it had a prompt about the glibc version.\n\nI ran `src/ci/docker/run.sh dist-arm-linux` to test it.\n\n```\nBuild completed successfully in 1:31:50\nCompile requests              8180\nCompile requests executed     8135\nCache hits                     287\nCache misses                  7848\nCache timeouts                   0\nCache read errors                0\nForced recaches                  0\nCache write errors               0\nCompilation failures             0\nCache errors                     0\nNon-cacheable compilations       0\nNon-cacheable calls             36\nNon-compilation calls            9\nUnsupported compiler calls       0\nAverage cache write          0.000 s\nAverage cache read miss      6.389 s\nAverage cache read hit       0.000 s\nCache location             Local disk: \"/sccache\"\nCache size                     202 MiB\nMax cache size                  10 GiB\n== clock drift check ==\n  local time: Sun Sep  6 19:30:17 UTC 2020\n  network time: Sun, 06 Sep 2020 19:30:17 GMT\n== end clock drift check ==\n```\n\nOnly errors were in miri due to struct fields being private (already been reported [here](https://github.com/rust-lang/rust/issues/76337))\n\nEdit: Maybe it is helpful if I add that it is a working compiler\n```sh\n/rust-nightly-aarch64-unknown-linux-musl # ash install.sh\ninstall: creating uninstall script at /usr/local/lib/rustlib/uninstall.sh\ninstall: installing component 'rustc'\ninstall: installing component 'cargo'\ninstall: installing component 'rls-preview'\ninstall: installing component 'rust-analyzer-preview'\ninstall: installing component 'clippy-preview'\ninstall: installing component 'rustfmt-preview'\ninstall: installing component 'llvm-tools-preview'\ninstall: installing component 'rust-analysis-aarch64-unknown-linux-musl'\ninstall: installing component 'rust-std-aarch64-unknown-linux-musl'\ninstall: WARNING: failed to run ldconfig. this may happen when not installing as root. run with --verbose to see the error\n\n    Rust is ready to roll.\n\n/ # cat test.rs\nfn main() { println!(\"hello world\"); }\n/ # rustc test.rs\n/ # ./test\nhello world\n # file test\ntest: ELF 64-bit LSB executable, ARM aarch64, version 1 (SYSV), statically linked, not stripped\n```", "tree": {"sha": "0660b8c0b310306241c959aca8252afae1cc79d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0660b8c0b310306241c959aca8252afae1cc79d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77", "html_url": "https://github.com/rust-lang/rust/commit/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bb106fe633872de703af46381843057f8cd384f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bb106fe633872de703af46381843057f8cd384f", "html_url": "https://github.com/rust-lang/rust/commit/7bb106fe633872de703af46381843057f8cd384f"}, {"sha": "bfb56d82d465c6e24b4ab27c44fbb7e39bb4dd13", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfb56d82d465c6e24b4ab27c44fbb7e39bb4dd13", "html_url": "https://github.com/rust-lang/rust/commit/bfb56d82d465c6e24b4ab27c44fbb7e39bb4dd13"}], "stats": {"total": 39, "additions": 15, "deletions": 24}, "files": [{"sha": "88b13eab2d08cceef29a0cc1e8c0f5581f2c3712", "filename": "src/ci/docker/host-x86_64/dist-arm-linux/Dockerfile", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-arm-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-arm-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-arm-linux%2FDockerfile?ref=ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77", "patch": "@@ -6,6 +6,14 @@ RUN sh /scripts/cross-apt-packages.sh\n COPY scripts/crosstool-ng-1.24.sh /scripts/\n RUN sh /scripts/crosstool-ng-1.24.sh\n \n+WORKDIR /build\n+\n+COPY scripts/musl-toolchain.sh /build/\n+# We need to mitigate rust-lang/rust#34978 when compiling musl itself as well\n+RUN CFLAGS=\"-Wa,--compress-debug-sections=none -Wl,--compress-debug-sections=none\" \\\n+    CXXFLAGS=\"-Wa,--compress-debug-sections=none -Wl,--compress-debug-sections=none\" \\\n+    bash musl-toolchain.sh aarch64 && rm -rf build\n+\n COPY scripts/rustbuild-setup.sh /scripts/\n RUN sh /scripts/rustbuild-setup.sh\n USER rustbuild\n@@ -25,7 +33,8 @@ ENV CC_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-gcc \\\n     AR_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-ar \\\n     CXX_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-g++\n \n-ENV HOSTS=arm-unknown-linux-gnueabi\n+ENV HOSTS=arm-unknown-linux-gnueabi,aarch64-unknown-linux-musl\n \n-ENV RUST_CONFIGURE_ARGS --enable-full-tools --disable-docs\n+ENV RUST_CONFIGURE_ARGS --enable-full-tools --disable-docs --musl-root-aarch64=/usr/local/aarch64-linux-musl \\\n+    --set target.aarch64-unknown-linux-musl.crt-static=false\n ENV SCRIPT python3 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "66709a4004cafbbbe59b90fda81aa621a0ca8459", "filename": "src/ci/docker/host-x86_64/dist-arm-linux/arm-linux-gnueabi.config", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-arm-linux%2Farm-linux-gnueabi.config", "raw_url": "https://github.com/rust-lang/rust/raw/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-arm-linux%2Farm-linux-gnueabi.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-arm-linux%2Farm-linux-gnueabi.config?ref=ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77", "patch": "@@ -14,6 +14,7 @@ CT_CONFIGURE_has_autoconf_2_65_or_newer=y\n CT_CONFIGURE_has_autoreconf_2_65_or_newer=y\n CT_CONFIGURE_has_automake_1_15_or_newer=y\n CT_CONFIGURE_has_gnu_m4_1_4_12_or_newer=y\n+CT_CONFIGURE_has_python_3_4_or_newer=y\n CT_CONFIGURE_has_bison_2_7_or_newer=y\n CT_CONFIGURE_has_python=y\n CT_CONFIGURE_has_git=y\n@@ -132,12 +133,6 @@ CT_ARCH_ARM=y\n # CT_ARCH_XTENSA is not set\n CT_ARCH=\"arm\"\n CT_ARCH_CHOICE_KSYM=\"ARM\"\n-# CT_ARCH_ALPHA_EV4 is not set\n-# CT_ARCH_ALPHA_EV45 is not set\n-# CT_ARCH_ALPHA_EV5 is not set\n-# CT_ARCH_ALPHA_EV56 is not set\n-# CT_ARCH_ALPHA_EV6 is not set\n-# CT_ARCH_ALPHA_EV67 is not set\n CT_ARCH_CPU=\"\"\n CT_ARCH_TUNE=\"\"\n CT_ARCH_ARM_SHOW=y\n@@ -371,8 +366,6 @@ CT_ALL_BINUTILS_CHOICES=\"BINUTILS\"\n # C-library\n #\n CT_LIBC_GLIBC=y\n-# CT_LIBC_NEWLIB is not set\n-# CT_LIBC_NONE is not set\n # CT_LIBC_UCLIBC is not set\n CT_LIBC=\"glibc\"\n CT_LIBC_CHOICE_KSYM=\"GLIBC\"\n@@ -389,6 +382,7 @@ CT_GLIBC_USE=\"GLIBC\"\n CT_GLIBC_PKG_NAME=\"glibc\"\n CT_GLIBC_SRC_RELEASE=y\n CT_GLIBC_PATCH_ORDER=\"global\"\n+# CT_GLIBC_V_2_29 is not set\n # CT_GLIBC_V_2_28 is not set\n # CT_GLIBC_V_2_27 is not set\n # CT_GLIBC_V_2_26 is not set\n@@ -407,7 +401,6 @@ CT_GLIBC_ARCHIVE_FORMATS=\".tar.xz .tar.bz2 .tar.gz\"\n CT_GLIBC_SIGNATURE_FORMAT=\"packed/.sig\"\n CT_GLIBC_2_29_or_older=y\n CT_GLIBC_older_than_2_29=y\n-CT_GLIBC_REQUIRE_older_than_2_29=y\n CT_GLIBC_2_27_or_older=y\n CT_GLIBC_older_than_2_27=y\n CT_GLIBC_2_26_or_older=y\n@@ -447,12 +440,6 @@ CT_GLIBC_FORCE_UNWIND=y\n CT_GLIBC_KERNEL_VERSION_AS_HEADERS=y\n # CT_GLIBC_KERNEL_VERSION_CHOSEN is not set\n CT_GLIBC_MIN_KERNEL=\"3.2.101\"\n-# CT_GLIBC_SSP_DEFAULT is not set\n-# CT_GLIBC_SSP_NO is not set\n-# CT_GLIBC_SSP_YES is not set\n-# CT_GLIBC_SSP_ALL is not set\n-# CT_GLIBC_SSP_STRONG is not set\n-# CT_NEWLIB_USE_REDHAT is not set\n CT_ALL_LIBC_CHOICES=\"AVR_LIBC BIONIC GLIBC MINGW_W64 MOXIEBOX MUSL NEWLIB NONE UCLIBC\"\n CT_LIBC_SUPPORT_THREADS_ANY=y\n CT_LIBC_SUPPORT_THREADS_NATIVE=y"}, {"sha": "431892697d4c98bc03a311b88f1f2ac814d1f38a", "filename": "src/ci/docker/host-x86_64/dist-various-1/Dockerfile", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2FDockerfile?ref=ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77", "patch": "@@ -84,10 +84,6 @@ RUN env \\\n     CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv7-a\" \\\n     bash musl.sh armv7hf && \\\n     env \\\n-    CC=aarch64-linux-gnu-gcc \\\n-    CXX=aarch64-linux-gnu-g++ \\\n-    bash musl.sh aarch64 && \\\n-    env \\\n     CC=mips-openwrt-linux-gcc \\\n     CXX=mips-openwrt-linux-g++ \\\n     bash musl.sh mips && \\\n@@ -130,7 +126,6 @@ ENV TARGETS=$TARGETS,arm-unknown-linux-musleabihf\n ENV TARGETS=$TARGETS,armv5te-unknown-linux-gnueabi\n ENV TARGETS=$TARGETS,armv5te-unknown-linux-musleabi\n ENV TARGETS=$TARGETS,armv7-unknown-linux-musleabihf\n-ENV TARGETS=$TARGETS,aarch64-unknown-linux-musl\n ENV TARGETS=$TARGETS,aarch64-unknown-none\n ENV TARGETS=$TARGETS,aarch64-unknown-none-softfloat\n ENV TARGETS=$TARGETS,sparc64-unknown-linux-gnu\n@@ -185,7 +180,6 @@ ENV RUST_CONFIGURE_ARGS \\\n       --musl-root-arm=/musl-arm \\\n       --musl-root-armhf=/musl-armhf \\\n       --musl-root-armv7hf=/musl-armv7hf \\\n-      --musl-root-aarch64=/musl-aarch64 \\\n       --musl-root-mips=/musl-mips \\\n       --musl-root-mipsel=/musl-mipsel \\\n       --musl-root-mips64=/musl-mips64 \\"}, {"sha": "9b2474a95df2792126ee58e351da527da7ca6908", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77", "patch": "@@ -62,7 +62,7 @@ target | std | host | notes\n `aarch64-linux-android` | \u2713 |  | ARM64 Android\n `aarch64-pc-windows-msvc` | \u2713 |  | ARM64 Windows MSVC\n `aarch64-unknown-linux-gnu` | \u2713 | \u2713 | ARM64 Linux (kernel 4.2, glibc 2.17)\n-`aarch64-unknown-linux-musl` | \u2713 |  | ARM64 Linux with MUSL\n+`aarch64-unknown-linux-musl` | \u2713 | \u2713 | ARM64 Linux with MUSL\n `aarch64-unknown-none` | * |  | Bare ARM64, hardfloat\n `aarch64-unknown-none-softfloat` | * |  | Bare ARM64, softfloat\n `arm-linux-androideabi` | \u2713 |  | ARMv7 Android"}, {"sha": "ff9ee67763ba5dbb3f701414b029fca828163127", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=ff806b87167a9b4f38b9e3d2f6e9c4e621df6a77", "patch": "@@ -16,6 +16,7 @@ use std::process::{Command, Stdio};\n \n static HOSTS: &[&str] = &[\n     \"aarch64-unknown-linux-gnu\",\n+    \"aarch64-unknown-linux-musl\",\n     \"arm-unknown-linux-gnueabi\",\n     \"arm-unknown-linux-gnueabihf\",\n     \"armv7-unknown-linux-gnueabihf\","}]}