{"sha": "37e3f2fe63a9e0a41d5ebca7d276401599f3e636", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3ZTNmMmZlNjNhOWUwYTQxZDVlYmNhN2QyNzY0MDE1OTlmM2U2MzY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-19T01:11:22Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:24Z"}, "message": "librustc: De-`@mut` `CrateContext::extern_const_values`", "tree": {"sha": "e24eaa844de1a79dc92d6932306c4be5146ce6e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e24eaa844de1a79dc92d6932306c4be5146ce6e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37e3f2fe63a9e0a41d5ebca7d276401599f3e636", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37e3f2fe63a9e0a41d5ebca7d276401599f3e636", "html_url": "https://github.com/rust-lang/rust/commit/37e3f2fe63a9e0a41d5ebca7d276401599f3e636", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37e3f2fe63a9e0a41d5ebca7d276401599f3e636/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d16cca1f50d97e78334cba96bba0e6e0235cae7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d16cca1f50d97e78334cba96bba0e6e0235cae7d", "html_url": "https://github.com/rust-lang/rust/commit/d16cca1f50d97e78334cba96bba0e6e0235cae7d"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "79c14a70990bf26620b5a8e3f298205496d4104e", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37e3f2fe63a9e0a41d5ebca7d276401599f3e636/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37e3f2fe63a9e0a41d5ebca7d276401599f3e636/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=37e3f2fe63a9e0a41d5ebca7d276401599f3e636", "patch": "@@ -87,7 +87,7 @@ pub struct CrateContext {\n      const_values: RefCell<HashMap<ast::NodeId, ValueRef>>,\n \n      // Cache of external const values\n-     extern_const_values: HashMap<ast::DefId, ValueRef>,\n+     extern_const_values: RefCell<HashMap<ast::DefId, ValueRef>>,\n \n      impl_method_cache: HashMap<(ast::DefId, ast::Name), ast::DefId>,\n \n@@ -200,7 +200,7 @@ impl CrateContext {\n                   const_cstr_cache: RefCell::new(HashMap::new()),\n                   const_globals: RefCell::new(HashMap::new()),\n                   const_values: RefCell::new(HashMap::new()),\n-                  extern_const_values: HashMap::new(),\n+                  extern_const_values: RefCell::new(HashMap::new()),\n                   impl_method_cache: HashMap::new(),\n                   module_data: HashMap::new(),\n                   lltypes: HashMap::new(),"}, {"sha": "7297778cafaee043f624eda8ba0ccd37dd35f516", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/37e3f2fe63a9e0a41d5ebca7d276401599f3e636/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37e3f2fe63a9e0a41d5ebca7d276401599f3e636/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=37e3f2fe63a9e0a41d5ebca7d276401599f3e636", "patch": "@@ -1018,8 +1018,10 @@ fn trans_lvalue_unadjusted(bcx: @Block, expr: &ast::Expr) -> DatumBlock {\n                         PointerCast(bcx, val, pty)\n                     } else {\n                         {\n-                            let extern_const_values = &bcx.ccx().extern_const_values;\n-                            match extern_const_values.find(&did) {\n+                            let extern_const_values = bcx.ccx()\n+                                                         .extern_const_values\n+                                                         .borrow();\n+                            match extern_const_values.get().find(&did) {\n                                 None => {}  // Continue.\n                                 Some(llval) => {\n                                     return *llval;\n@@ -1037,8 +1039,9 @@ fn trans_lvalue_unadjusted(bcx: @Block, expr: &ast::Expr) -> DatumBlock {\n                                                     llty.to_ref(),\n                                                     buf)\n                             });\n-                            let extern_const_values = &mut bcx.ccx().extern_const_values;\n-                            extern_const_values.insert(did, llval);\n+                            let mut extern_const_values =\n+                                bcx.ccx().extern_const_values.borrow_mut();\n+                            extern_const_values.get().insert(did, llval);\n                             llval\n                         }\n                     }"}]}