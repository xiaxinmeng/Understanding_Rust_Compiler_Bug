{"sha": "5a7ce4609e3a7c364d9ff8810329242cefb76a4b", "node_id": "C_kwDOAAsO6NoAKDVhN2NlNDYwOWUzYTdjMzY0ZDlmZjg4MTAzMjkyNDJjZWZiNzZhNGI", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-02-03T08:04:12Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-03-29T06:55:21Z"}, "message": "Support TLS access into dylibs on Windows", "tree": {"sha": "b026e8d3d52cdd053d33048d0a2b32689e8067c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b026e8d3d52cdd053d33048d0a2b32689e8067c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a7ce4609e3a7c364d9ff8810329242cefb76a4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a7ce4609e3a7c364d9ff8810329242cefb76a4b", "html_url": "https://github.com/rust-lang/rust/commit/5a7ce4609e3a7c364d9ff8810329242cefb76a4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a7ce4609e3a7c364d9ff8810329242cefb76a4b/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37ab4bd419ab7e87a6e6f592f9da62f35c4b9f98", "url": "https://api.github.com/repos/rust-lang/rust/commits/37ab4bd419ab7e87a6e6f592f9da62f35c4b9f98", "html_url": "https://github.com/rust-lang/rust/commit/37ab4bd419ab7e87a6e6f592f9da62f35c4b9f98"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "ebb4de33f990a2e118c5dea57f4ad760ed279f63", "filename": "src/constant.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5a7ce4609e3a7c364d9ff8810329242cefb76a4b/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a7ce4609e3a7c364d9ff8810329242cefb76a4b/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=5a7ce4609e3a7c364d9ff8810329242cefb76a4b", "patch": "@@ -54,12 +54,22 @@ pub(crate) fn codegen_tls_ref<'tcx>(\n     def_id: DefId,\n     layout: TyAndLayout<'tcx>,\n ) -> CValue<'tcx> {\n-    let data_id = data_id_for_static(fx.tcx, fx.module, def_id, false);\n-    let local_data_id = fx.module.declare_data_in_func(data_id, &mut fx.bcx.func);\n-    if fx.clif_comments.enabled() {\n-        fx.add_comment(local_data_id, format!(\"tls {:?}\", def_id));\n-    }\n-    let tls_ptr = fx.bcx.ins().tls_value(fx.pointer_type, local_data_id);\n+    let tls_ptr = if !def_id.is_local() && fx.tcx.needs_thread_local_shim(def_id) {\n+        let instance = ty::Instance {\n+            def: ty::InstanceDef::ThreadLocalShim(def_id),\n+            substs: ty::InternalSubsts::empty(),\n+        };\n+        let func_ref = fx.get_function_ref(instance);\n+        let call = fx.bcx.ins().call(func_ref, &[]);\n+        fx.bcx.func.dfg.first_result(call)\n+    } else {\n+        let data_id = data_id_for_static(fx.tcx, fx.module, def_id, false);\n+        let local_data_id = fx.module.declare_data_in_func(data_id, &mut fx.bcx.func);\n+        if fx.clif_comments.enabled() {\n+            fx.add_comment(local_data_id, format!(\"tls {:?}\", def_id));\n+        }\n+        fx.bcx.ins().tls_value(fx.pointer_type, local_data_id)\n+    };\n     CValue::by_val(tls_ptr, layout)\n }\n "}]}