{"sha": "023ec3e39599993bb64e724ae14c797bd3ebb96e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyM2VjM2UzOTU5OTk5M2JiNjRlNzI0YWUxNGM3OTdiZDNlYmI5NmU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-02-09T18:15:40Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-02-09T18:15:40Z"}, "message": "add some comments for clarification", "tree": {"sha": "a0300875cff1c5ac8a2fa95b31fc1caaa46ed47f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0300875cff1c5ac8a2fa95b31fc1caaa46ed47f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/023ec3e39599993bb64e724ae14c797bd3ebb96e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/023ec3e39599993bb64e724ae14c797bd3ebb96e", "html_url": "https://github.com/rust-lang/rust/commit/023ec3e39599993bb64e724ae14c797bd3ebb96e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/023ec3e39599993bb64e724ae14c797bd3ebb96e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c06251b0d2765f31c7e1b3f94490c5e7f454a3b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c06251b0d2765f31c7e1b3f94490c5e7f454a3b6", "html_url": "https://github.com/rust-lang/rust/commit/c06251b0d2765f31c7e1b3f94490c5e7f454a3b6"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "4ee87c34fcece4f1319b969227ca6a2af44dc841", "filename": "src/terminator/drop.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/023ec3e39599993bb64e724ae14c797bd3ebb96e/src%2Fterminator%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/023ec3e39599993bb64e724ae14c797bd3ebb96e/src%2Fterminator%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fdrop.rs?ref=023ec3e39599993bb64e724ae14c797bd3ebb96e", "patch": "@@ -79,10 +79,12 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                         self.drop(Lvalue::Ptr { ptr, extra }, contents_ty, drop)?;\n                     },\n                 }\n+                // We cannot use Box's destructor, because it is a no-op and only exists to reduce\n+                // the number of hacks required in the compiler around the Box type.\n                 let box_free_fn = self.tcx.lang_items.box_free_fn().expect(\"no box_free lang item\");\n                 let substs = self.tcx.intern_substs(&[Kind::from(contents_ty)]);\n                 // this is somewhat hacky, but hey, there's no representation difference between\n-                // pointers and references, so\n+                // pointers, `Box`es and references, so\n                 // #[lang = \"box_free\"] unsafe fn box_free<T>(ptr: *mut T)\n                 // is the same as\n                 // fn drop(&mut self) if Self is Box<T>\n@@ -164,7 +166,9 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 let drop_fn = self.memory.read_ptr(vtable)?;\n                 // some values don't need to call a drop impl, so the value is null\n                 if drop_fn != Pointer::from_int(0) {\n-                    let FunctionDefinition {def_id, substs, sig, ..} = self.memory.get_fn(drop_fn.alloc_id)?.expect_drop_glue()?;\n+                    // FIXME: change the `DropGlue` variant of `Function` to only contain `real_ty`\n+                    let FunctionDefinition {substs, sig, ..} = self.memory.get_fn(drop_fn.alloc_id)?.expect_drop_glue()?;\n+                    // The real type is taken from the self argument in `fn drop(&mut self)`\n                     let real_ty = match sig.inputs()[0].sty {\n                         ty::TyRef(_, mt) => self.monomorphize(mt.ty, substs),\n                         _ => bug!(\"first argument of Drop::drop must be &mut T\"),"}]}