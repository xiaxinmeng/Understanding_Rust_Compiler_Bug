{"sha": "85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78", "node_id": "C_kwDOAAsO6NoAKDg1YzFmNzRmZWY2YjQ5ZmJhZjFiOGQwMzU3NWZkNmVlM2UzNTJkNzg", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-06-13T17:09:52Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-06-28T16:48:50Z"}, "message": "Add `explicit_auto_deref` test for variadic function", "tree": {"sha": "9623dd15df255b134b5ed8aadeecf2e290a83cfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9623dd15df255b134b5ed8aadeecf2e290a83cfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78", "html_url": "https://github.com/rust-lang/rust/commit/85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15df2289ea1b9e90eaa37890dcecc155946bb6ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/15df2289ea1b9e90eaa37890dcecc155946bb6ac", "html_url": "https://github.com/rust-lang/rust/commit/15df2289ea1b9e90eaa37890dcecc155946bb6ac"}], "stats": {"total": 82, "additions": 50, "deletions": 32}, "files": [{"sha": "d4ff1b1566dc613bd50d9c46e1f3c5ccdb4d5b64", "filename": "tests/ui/explicit_auto_deref.fixed", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78/tests%2Fui%2Fexplicit_auto_deref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78/tests%2Fui%2Fexplicit_auto_deref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_auto_deref.fixed?ref=85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78", "patch": "@@ -59,6 +59,10 @@ fn f_str_t<T>(_: &str, _: T) {}\n \n fn f_box_t<T>(_: &Box<T>) {}\n \n+extern \"C\" {\n+    fn var(_: u32, ...);\n+}\n+\n fn main() {\n     let s = String::new();\n \n@@ -202,4 +206,9 @@ fn main() {\n \n     f_str(&&ref_str); // `needless_borrow` will suggest removing both references\n     f_str(&ref_str); // `needless_borrow` will suggest removing only one reference\n+\n+    let x = &&40;\n+    unsafe {\n+        var(0, &**x);\n+    }\n }"}, {"sha": "99294a7947bf16e8d24939434a085e1384fccbf6", "filename": "tests/ui/explicit_auto_deref.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78/tests%2Fui%2Fexplicit_auto_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78/tests%2Fui%2Fexplicit_auto_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_auto_deref.rs?ref=85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78", "patch": "@@ -59,6 +59,10 @@ fn f_str_t<T>(_: &str, _: T) {}\n \n fn f_box_t<T>(_: &Box<T>) {}\n \n+extern \"C\" {\n+    fn var(_: u32, ...);\n+}\n+\n fn main() {\n     let s = String::new();\n \n@@ -202,4 +206,9 @@ fn main() {\n \n     f_str(&&*ref_str); // `needless_borrow` will suggest removing both references\n     f_str(&&**ref_str); // `needless_borrow` will suggest removing only one reference\n+\n+    let x = &&40;\n+    unsafe {\n+        var(0, &**x);\n+    }\n }"}, {"sha": "55f956e37aed77fb51d97e222658614a9e2ccff6", "filename": "tests/ui/explicit_auto_deref.stderr", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78/tests%2Fui%2Fexplicit_auto_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78/tests%2Fui%2Fexplicit_auto_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_auto_deref.stderr?ref=85c1f74fef6b49fbaf1b8d03575fd6ee3e352d78", "patch": "@@ -1,193 +1,193 @@\n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:65:20\n+  --> $DIR/explicit_auto_deref.rs:69:20\n    |\n LL |     let _: &str = &*s;\n    |                    ^^ help: try this: `s`\n    |\n    = note: `-D clippy::explicit-auto-deref` implied by `-D warnings`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:69:12\n+  --> $DIR/explicit_auto_deref.rs:73:12\n    |\n LL |     f_str(&*s);\n    |            ^^ help: try this: `s`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:73:14\n+  --> $DIR/explicit_auto_deref.rs:77:14\n    |\n LL |     f_str_t(&*s, &*s); // Don't lint second param.\n    |              ^^ help: try this: `s`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:76:25\n+  --> $DIR/explicit_auto_deref.rs:80:25\n    |\n LL |     let _: &Box<i32> = &**b;\n    |                         ^^^ help: try this: `b`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:82:8\n+  --> $DIR/explicit_auto_deref.rs:86:8\n    |\n LL |     c(&*s);\n    |        ^^ help: try this: `s`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:88:9\n+  --> $DIR/explicit_auto_deref.rs:92:9\n    |\n LL |         &**x\n    |         ^^^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:92:11\n+  --> $DIR/explicit_auto_deref.rs:96:11\n    |\n LL |         { &**x }\n    |           ^^^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:96:9\n+  --> $DIR/explicit_auto_deref.rs:100:9\n    |\n LL |         &**{ x }\n    |         ^^^^^^^^ help: try this: `{ x }`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:100:9\n+  --> $DIR/explicit_auto_deref.rs:104:9\n    |\n LL |         &***x\n    |         ^^^^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:117:13\n+  --> $DIR/explicit_auto_deref.rs:121:13\n    |\n LL |         f1(&*x);\n    |             ^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:118:13\n+  --> $DIR/explicit_auto_deref.rs:122:13\n    |\n LL |         f2(&*x);\n    |             ^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:119:13\n+  --> $DIR/explicit_auto_deref.rs:123:13\n    |\n LL |         f3(&*x);\n    |             ^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:120:28\n+  --> $DIR/explicit_auto_deref.rs:124:28\n    |\n LL |         f4.callable_str()(&*x);\n    |                            ^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:121:13\n+  --> $DIR/explicit_auto_deref.rs:125:13\n    |\n LL |         f5(&*x);\n    |             ^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:122:13\n+  --> $DIR/explicit_auto_deref.rs:126:13\n    |\n LL |         f6(&*x);\n    |             ^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:123:28\n+  --> $DIR/explicit_auto_deref.rs:127:28\n    |\n LL |         f7.callable_str()(&*x);\n    |                            ^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:124:26\n+  --> $DIR/explicit_auto_deref.rs:128:26\n    |\n LL |         f8.callable_t()(&*x);\n    |                          ^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:125:13\n+  --> $DIR/explicit_auto_deref.rs:129:13\n    |\n LL |         f9(&*x);\n    |             ^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:126:14\n+  --> $DIR/explicit_auto_deref.rs:130:14\n    |\n LL |         f10(&*x);\n    |              ^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:127:27\n+  --> $DIR/explicit_auto_deref.rs:131:27\n    |\n LL |         f11.callable_t()(&*x);\n    |                           ^^ help: try this: `x`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:131:17\n+  --> $DIR/explicit_auto_deref.rs:135:17\n    |\n LL |     let _ = S1(&*s);\n    |                 ^^ help: try this: `s`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:136:22\n+  --> $DIR/explicit_auto_deref.rs:140:22\n    |\n LL |     let _ = S2 { s: &*s };\n    |                      ^^ help: try this: `s`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:152:30\n+  --> $DIR/explicit_auto_deref.rs:156:30\n    |\n LL |             let _ = Self::S1(&**s);\n    |                              ^^^^ help: try this: `s`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:153:35\n+  --> $DIR/explicit_auto_deref.rs:157:35\n    |\n LL |             let _ = Self::S2 { s: &**s };\n    |                                   ^^^^ help: try this: `s`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:156:21\n+  --> $DIR/explicit_auto_deref.rs:160:21\n    |\n LL |     let _ = E1::S1(&*s);\n    |                     ^^ help: try this: `s`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:157:26\n+  --> $DIR/explicit_auto_deref.rs:161:26\n    |\n LL |     let _ = E1::S2 { s: &*s };\n    |                          ^^ help: try this: `s`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:175:13\n+  --> $DIR/explicit_auto_deref.rs:179:13\n    |\n LL |     let _ = (*b).foo;\n    |             ^^^^ help: try this: `b`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:176:13\n+  --> $DIR/explicit_auto_deref.rs:180:13\n    |\n LL |     let _ = (**b).foo;\n    |             ^^^^^ help: try this: `b`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:191:19\n+  --> $DIR/explicit_auto_deref.rs:195:19\n    |\n LL |     let _ = f_str(*ref_str);\n    |                   ^^^^^^^^ help: try this: `ref_str`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:193:19\n+  --> $DIR/explicit_auto_deref.rs:197:19\n    |\n LL |     let _ = f_str(**ref_ref_str);\n    |                   ^^^^^^^^^^^^^ help: try this: `ref_ref_str`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:203:13\n+  --> $DIR/explicit_auto_deref.rs:207:13\n    |\n LL |     f_str(&&*ref_str); // `needless_borrow` will suggest removing both references\n    |             ^^^^^^^^ help: try this: `ref_str`\n \n error: deref which would be done by auto-deref\n-  --> $DIR/explicit_auto_deref.rs:204:12\n+  --> $DIR/explicit_auto_deref.rs:208:12\n    |\n LL |     f_str(&&**ref_str); // `needless_borrow` will suggest removing only one reference\n    |            ^^^^^^^^^^ help: try this: `ref_str`"}]}