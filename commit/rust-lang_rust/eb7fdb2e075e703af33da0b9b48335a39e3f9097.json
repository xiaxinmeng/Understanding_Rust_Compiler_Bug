{"sha": "eb7fdb2e075e703af33da0b9b48335a39e3f9097", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViN2ZkYjJlMDc1ZTcwM2FmMzNkYTBiOWI0ODMzNWEzOWUzZjkwOTc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-14T05:23:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-14T05:23:00Z"}, "message": "Rollup merge of #73852 - euclio:rustdoc-attr-newlines, r=GuillaumeGomez\n\nrustdoc: insert newlines between attributes\n\nFixes #73205.", "tree": {"sha": "f41ce15bc05db0a9749eccfe91d6b8079f79260e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f41ce15bc05db0a9749eccfe91d6b8079f79260e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb7fdb2e075e703af33da0b9b48335a39e3f9097", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDUE0CRBK7hj4Ov3rIwAAdHIIAEWmat1rTgcJq9qt7uCMGFwR\nRB5cTxs1FNfwdAJ1VjEkyzJCUMo3a0vqfc9ytu5y9YpdOWsj64Cj61syKwQtL42D\nLvxgWPf54BvqB4bIPI7my+MChpsZtt1UrzGOJaOkn81fDCZicZM41eRbWPewz+T7\nlnBCe9T5GPS/pQ3fh3oEfJaL1ytsAMBtGTX29bRB8ZrSLzxljIhT/Vx75ejCR6Te\naU6rqp2Z+kcKqnJY1ZBhv2uEl0l3rl5ll4o8jt7FO4Y6Y2ecb4Gk3YjL1BTEqoXF\nU2hY1R2DAfAipF8gfpOaUCHf7B0pJneq042pBzTDnu0gkKh3IO7PmuvGL6p8bW0=\n=HCtA\n-----END PGP SIGNATURE-----\n", "payload": "tree f41ce15bc05db0a9749eccfe91d6b8079f79260e\nparent aa29e3de31a2af8cb96ecc87194f5884a1b64259\nparent 0979545330689186dff27e22f539c1a06887981f\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594704180 -0700\ncommitter GitHub <noreply@github.com> 1594704180 -0700\n\nRollup merge of #73852 - euclio:rustdoc-attr-newlines, r=GuillaumeGomez\n\nrustdoc: insert newlines between attributes\n\nFixes #73205.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb7fdb2e075e703af33da0b9b48335a39e3f9097", "html_url": "https://github.com/rust-lang/rust/commit/eb7fdb2e075e703af33da0b9b48335a39e3f9097", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb7fdb2e075e703af33da0b9b48335a39e3f9097/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa29e3de31a2af8cb96ecc87194f5884a1b64259", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa29e3de31a2af8cb96ecc87194f5884a1b64259", "html_url": "https://github.com/rust-lang/rust/commit/aa29e3de31a2af8cb96ecc87194f5884a1b64259"}, {"sha": "0979545330689186dff27e22f539c1a06887981f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0979545330689186dff27e22f539c1a06887981f", "html_url": "https://github.com/rust-lang/rust/commit/0979545330689186dff27e22f539c1a06887981f"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "301896fd2c1ada0ae8aa85a9225f11f5d0de1401", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/eb7fdb2e075e703af33da0b9b48335a39e3f9097/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb7fdb2e075e703af33da0b9b48335a39e3f9097/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=eb7fdb2e075e703af33da0b9b48335a39e3f9097", "patch": "@@ -42,6 +42,7 @@ use std::str;\n use std::string::ToString;\n use std::sync::Arc;\n \n+use itertools::Itertools;\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::flock;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -3170,15 +3171,19 @@ const ALLOWED_ATTRIBUTES: &[Symbol] = &[\n //     bar: usize,\n // }\n fn render_attributes(w: &mut Buffer, it: &clean::Item, top: bool) {\n-    let mut attrs = String::new();\n-\n-    for attr in &it.attrs.other_attrs {\n-        if !ALLOWED_ATTRIBUTES.contains(&attr.name_or_empty()) {\n-            continue;\n-        }\n+    let attrs = it\n+        .attrs\n+        .other_attrs\n+        .iter()\n+        .filter_map(|attr| {\n+            if ALLOWED_ATTRIBUTES.contains(&attr.name_or_empty()) {\n+                Some(pprust::attribute_to_string(&attr))\n+            } else {\n+                None\n+            }\n+        })\n+        .join(\"\\n\");\n \n-        attrs.push_str(&pprust::attribute_to_string(&attr));\n-    }\n     if !attrs.is_empty() {\n         write!(\n             w,"}, {"sha": "54c5939f908d422eabe291add61f9ed2251d6774", "filename": "src/test/rustdoc/attributes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb7fdb2e075e703af33da0b9b48335a39e3f9097/src%2Ftest%2Frustdoc%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb7fdb2e075e703af33da0b9b48335a39e3f9097/src%2Ftest%2Frustdoc%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fattributes.rs?ref=eb7fdb2e075e703af33da0b9b48335a39e3f9097", "patch": "@@ -8,8 +8,8 @@ pub extern \"C\" fn f() {}\n #[export_name = \"bar\"]\n pub extern \"C\" fn g() {}\n \n-// @has foo/enum.Foo.html '//*[@class=\"docblock attributes top-attr\"]' '#[repr(i64)]'\n-// @has foo/enum.Foo.html '//*[@class=\"docblock attributes top-attr\"]' '#[must_use]'\n+// @matches foo/enum.Foo.html '//*[@class=\"docblock attributes top-attr\"]' \\\n+//      '(?m)\\A#\\[repr\\(i64\\)\\]\\n#\\[must_use\\]\\Z'\n #[repr(i64)]\n #[must_use]\n pub enum Foo {"}]}