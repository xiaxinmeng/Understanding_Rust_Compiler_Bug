{"sha": "ab3b75290632c963d3db3828c7ef5d28b882a46f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiM2I3NTI5MDYzMmM5NjNkM2RiMzgyOGM3ZWY1ZDI4Yjg4MmE0NmY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-08T00:26:52Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-08T02:29:10Z"}, "message": "librustc: Implement \"&mut [T]\" as an expression. r=brson", "tree": {"sha": "5c80f357360dd3dac87fddfb906b93a23dc0f8f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c80f357360dd3dac87fddfb906b93a23dc0f8f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab3b75290632c963d3db3828c7ef5d28b882a46f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab3b75290632c963d3db3828c7ef5d28b882a46f", "html_url": "https://github.com/rust-lang/rust/commit/ab3b75290632c963d3db3828c7ef5d28b882a46f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab3b75290632c963d3db3828c7ef5d28b882a46f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87f3ea7705ccc70d7a4c4cf7fe658dbd53348bf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/87f3ea7705ccc70d7a4c4cf7fe658dbd53348bf6", "html_url": "https://github.com/rust-lang/rust/commit/87f3ea7705ccc70d7a4c4cf7fe658dbd53348bf6"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "f483f922ed7acca36ef17a0c15a5f326377ce889", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=ab3b75290632c963d3db3828c7ef5d28b882a46f", "patch": "@@ -103,7 +103,8 @@ fn classify(e: @expr,\n                       ast::expr_vstore_slice => classify(e, def_map, tcx),\n                       ast::expr_vstore_uniq |\n                       ast::expr_vstore_box |\n-                      ast::expr_vstore_mut_box => non_const\n+                      ast::expr_vstore_mut_box |\n+                      ast::expr_vstore_mut_slice => non_const\n                   }\n               }\n "}, {"sha": "64aed0b283ea90acdce19b030763e3a501baa4e7", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=ab3b75290632c963d3db3828c7ef5d28b882a46f", "patch": "@@ -535,7 +535,8 @@ fn trans_rvalue_dps_unadjusted(bcx: block, expr: @ast::expr,\n         ast::expr_lit(@{node: ast::lit_str(s), _}) => {\n             return tvec::trans_lit_str(bcx, expr, s, dest);\n         }\n-        ast::expr_vstore(contents, ast::expr_vstore_slice) => {\n+        ast::expr_vstore(contents, ast::expr_vstore_slice) |\n+        ast::expr_vstore(contents, ast::expr_vstore_mut_slice) => {\n             return tvec::trans_slice_vstore(bcx, expr, contents, dest);\n         }\n         ast::expr_vstore(contents, ast::expr_vstore_fixed(_)) => {"}, {"sha": "a671b2cc4020687d24643d04569995ceb14d979f", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=ab3b75290632c963d3db3828c7ef5d28b882a46f", "patch": "@@ -3126,6 +3126,7 @@ fn expr_kind(tcx: ctxt,\n         ast::expr_repeat(*) |\n         ast::expr_lit(@{node: lit_str(_), _}) |\n         ast::expr_vstore(_, ast::expr_vstore_slice) |\n+        ast::expr_vstore(_, ast::expr_vstore_mut_slice) |\n         ast::expr_vstore(_, ast::expr_vstore_fixed(_)) |\n         ast::expr_vec(*) => {\n             RvalueDpsExpr"}, {"sha": "db16d3d15a421e30826ea81bd2663f7da5134f68", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=ab3b75290632c963d3db3828c7ef5d28b882a46f", "patch": "@@ -1804,7 +1804,9 @@ fn check_expr_with_unifier(fcx: @fn_ctxt,\n             let tt = ast_expr_vstore_to_vstore(fcx, ev, args.len(), vst);\n             let mutability;\n             match vst {\n-                ast::expr_vstore_mut_box => mutability = ast::m_mutbl,\n+                ast::expr_vstore_mut_box | ast::expr_vstore_mut_slice => {\n+                    mutability = ast::m_mutbl\n+                }\n                 _ => mutability = mutbl\n             }\n             let t: ty::t = fcx.infcx().next_ty_var();\n@@ -2823,7 +2825,7 @@ fn ast_expr_vstore_to_vstore(fcx: @fn_ctxt, e: @ast::expr, n: uint,\n         }\n         ast::expr_vstore_uniq => ty::vstore_uniq,\n         ast::expr_vstore_box | ast::expr_vstore_mut_box => ty::vstore_box,\n-        ast::expr_vstore_slice => {\n+        ast::expr_vstore_slice | ast::expr_vstore_mut_slice => {\n             let r = fcx.infcx().next_region_var(e.span, e.id);\n             ty::vstore_slice(r)\n         }"}, {"sha": "da80bd489b5f6a2fa9084f24b3dbff80daa9e033", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=ab3b75290632c963d3db3828c7ef5d28b882a46f", "patch": "@@ -441,7 +441,8 @@ enum expr_vstore {\n     expr_vstore_uniq,                  // ~[1,2,3,4]\n     expr_vstore_box,                   // @[1,2,3,4]\n     expr_vstore_mut_box,               // @mut [1,2,3,4]\n-    expr_vstore_slice                  // &[1,2,3,4]\n+    expr_vstore_slice,                 // &[1,2,3,4]\n+    expr_vstore_mut_slice,             // &mut [1,2,3,4]\n }\n \n pure fn is_blockish(p: ast::Proto) -> bool {"}, {"sha": "a9a0c1bdc76bf49e403690a94222d5ed574f57c9", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ab3b75290632c963d3db3828c7ef5d28b882a46f", "patch": "@@ -37,7 +37,7 @@ use ast::{_mod, add, arg, arm, attribute,\n              expr_method_call, expr_paren, expr_path, expr_rec, expr_repeat,\n              expr_ret, expr_swap, expr_struct, expr_tup, expr_unary,\n              expr_unary_move, expr_vec, expr_vstore, expr_vstore_mut_box,\n-             expr_while, extern_fn, field, fn_decl,\n+             expr_vstore_mut_slice, expr_while, extern_fn, field, fn_decl,\n              foreign_item, foreign_item_const, foreign_item_fn, foreign_mod,\n              ident, impure_fn, infer, inherited,\n              item, item_, item_class, item_const, item_enum, item_fn,\n@@ -1456,6 +1456,9 @@ impl Parser {\n                   if m == m_imm => {\n                     expr_vstore(e, expr_vstore_slice)\n                   }\n+                  expr_vec(*) if m == m_mutbl => {\n+                    expr_vstore(e, expr_vstore_mut_slice)\n+                  }\n                   _ => expr_addr_of(m, e)\n                 };\n               }"}, {"sha": "5b0663f0b44338033e9e0e4bf2fc714e2ce945b7", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=ab3b75290632c963d3db3828c7ef5d28b882a46f", "patch": "@@ -1052,6 +1052,10 @@ fn print_expr_vstore(s: ps, t: ast::expr_vstore) {\n         word(s.s, ~\"mut\");\n       }\n       ast::expr_vstore_slice => word(s.s, ~\"&\"),\n+      ast::expr_vstore_mut_slice => {\n+        word(s.s, ~\"&\");\n+        word(s.s, ~\"mut\");\n+      }\n     }\n }\n "}, {"sha": "3eb0209b4f9c88f0e407d9f4514df45e8b62fbd9", "filename": "src/test/run-pass/mut-vstore-expr.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Ftest%2Frun-pass%2Fmut-vstore-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3b75290632c963d3db3828c7ef5d28b882a46f/src%2Ftest%2Frun-pass%2Fmut-vstore-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmut-vstore-expr.rs?ref=ab3b75290632c963d3db3828c7ef5d28b882a46f", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let x: &mut [int] = &mut [ 1, 2, 3 ];\n+}\n+"}]}