{"sha": "978f8c65ee44b43243a83a047be6cdacb6df1320", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3OGY4YzY1ZWU0NGI0MzI0M2E4M2EwNDdiZTZjZGFjYjZkZjEzMjA=", "commit": {"author": {"name": "daxpedda", "email": "daxpedda@users.noreply.github.com", "date": "2018-12-05T09:54:21Z"}, "committer": {"name": "daxpedda", "email": "daxpedda@users.noreply.github.com", "date": "2018-12-05T09:54:21Z"}, "message": "Renamed `forced_return` to `missing_returns`.\nBetter clarification in the docs.\nRan `update_lints`.", "tree": {"sha": "68fd6202d37f9948244a64a000b073a32bdab9aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68fd6202d37f9948244a64a000b073a32bdab9aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/978f8c65ee44b43243a83a047be6cdacb6df1320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/978f8c65ee44b43243a83a047be6cdacb6df1320", "html_url": "https://github.com/rust-lang/rust/commit/978f8c65ee44b43243a83a047be6cdacb6df1320", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/978f8c65ee44b43243a83a047be6cdacb6df1320/comments", "author": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5d669228867259277ce2724bb2fa510d16f0b47", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5d669228867259277ce2724bb2fa510d16f0b47", "html_url": "https://github.com/rust-lang/rust/commit/d5d669228867259277ce2724bb2fa510d16f0b47"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "ed5057daf29ba3b516af949f30b418747556166b", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/978f8c65ee44b43243a83a047be6cdacb6df1320/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/978f8c65ee44b43243a83a047be6cdacb6df1320/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=978f8c65ee44b43243a83a047be6cdacb6df1320", "patch": "@@ -756,6 +756,7 @@ All notable changes to this project will be documented in this file.\n [`misrefactored_assign_op`]: https://rust-lang.github.io/rust-clippy/master/index.html#misrefactored_assign_op\n [`missing_docs_in_private_items`]: https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items\n [`missing_inline_in_public_items`]: https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items\n+[`missing_returns`]: https://rust-lang.github.io/rust-clippy/master/index.html#missing_returns\n [`mistyped_literal_suffixes`]: https://rust-lang.github.io/rust-clippy/master/index.html#mistyped_literal_suffixes\n [`mixed_case_hex_literals`]: https://rust-lang.github.io/rust-clippy/master/index.html#mixed_case_hex_literals\n [`module_inception`]: https://rust-lang.github.io/rust-clippy/master/index.html#module_inception"}, {"sha": "87dbe8708b9b90e649c7eb5f6de92e2638d569fe", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/978f8c65ee44b43243a83a047be6cdacb6df1320/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/978f8c65ee44b43243a83a047be6cdacb6df1320/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=978f8c65ee44b43243a83a047be6cdacb6df1320", "patch": "@@ -152,6 +152,7 @@ pub mod misc;\n pub mod misc_early;\n pub mod missing_doc;\n pub mod missing_inline;\n+pub mod missing_returns;\n pub mod multiple_crate_versions;\n pub mod mut_mut;\n pub mod mut_reference;\n@@ -185,7 +186,6 @@ pub mod reference;\n pub mod regex;\n pub mod replace_consts;\n pub mod returns;\n-pub mod forced_return;\n pub mod serde_api;\n pub mod shadow;\n pub mod slow_vector_initialization;\n@@ -372,7 +372,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box unicode::Unicode);\n     reg.register_late_lint_pass(box strings::StringAdd);\n     reg.register_early_lint_pass(box returns::ReturnPass);\n-    reg.register_late_lint_pass(box forced_return::ForcedReturnPass);\n+    reg.register_late_lint_pass(box missing_returns::MissingReturnsPass);\n     reg.register_late_lint_pass(box methods::Pass);\n     reg.register_late_lint_pass(box map_clone::Pass);\n     reg.register_late_lint_pass(box shadow::Pass);\n@@ -498,13 +498,13 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         misc::FLOAT_CMP_CONST,\n         missing_doc::MISSING_DOCS_IN_PRIVATE_ITEMS,\n         missing_inline::MISSING_INLINE_IN_PUBLIC_ITEMS,\n+        missing_returns::MISSING_RETURNS,\n         panic_unimplemented::UNIMPLEMENTED,\n         shadow::SHADOW_REUSE,\n         shadow::SHADOW_SAME,\n         strings::STRING_ADD,\n         write::PRINT_STDOUT,\n         write::USE_DEBUG,\n-        forced_return::FORCED_RETURN,\n     ]);\n \n     reg.register_lint_group(\"clippy::pedantic\", Some(\"clippy_pedantic\"), vec!["}, {"sha": "8a4d37a98acd867cd4a4d979f886e01168ee9bfe", "filename": "clippy_lints/src/missing_returns.rs", "status": "renamed", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/978f8c65ee44b43243a83a047be6cdacb6df1320/clippy_lints%2Fsrc%2Fmissing_returns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/978f8c65ee44b43243a83a047be6cdacb6df1320/clippy_lints%2Fsrc%2Fmissing_returns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_returns.rs?ref=978f8c65ee44b43243a83a047be6cdacb6df1320", "patch": "@@ -16,8 +16,8 @@ use crate::utils::{snippet_opt, span_lint_and_then};\n \n /// **What it does:** Checks for missing return statements at the end of a block.\n ///\n-/// **Why is this bad?** Actually it is idiomatic Rust code. Programmers coming\n-/// from other languages might prefer the expressiveness of `return`.\n+/// **Why is this bad?** Actually omitting the return keyword is idiomatic Rust code. Programmers\n+/// coming from other languages might prefer the expressiveness of `return`.\n ///\n /// **Known problems:** None.\n ///\n@@ -34,16 +34,16 @@ use crate::utils::{snippet_opt, span_lint_and_then};\n /// }\n /// ```\n declare_clippy_lint! {\n-    pub FORCED_RETURN,\n+    pub MISSING_RETURNS,\n     restriction,\n     \"use a return statement like `return expr` instead of an expression\"\n }\n \n-pub struct ForcedReturnPass;\n+pub struct MissingReturnsPass;\n \n-impl ForcedReturnPass {\n+impl MissingReturnsPass {\n     fn show_suggestion(cx: &LateContext<'_, '_>, span: syntax_pos::Span) {\n-        span_lint_and_then(cx, FORCED_RETURN, span, \"missing return statement\", |db| {\n+        span_lint_and_then(cx, MISSING_RETURNS, span, \"missing return statement\", |db| {\n             if let Some(snippet) = snippet_opt(cx, span) {\n                 db.span_suggestion_with_applicability(\n                     span,\n@@ -80,13 +80,13 @@ impl ForcedReturnPass {\n     }\n }\n \n-impl LintPass for ForcedReturnPass {\n+impl LintPass for MissingReturnsPass {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(FORCED_RETURN)\n+        lint_array!(MISSING_RETURNS)\n     }\n }\n \n-impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ForcedReturnPass {\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingReturnsPass {\n     fn check_fn(\n         &mut self,\n         cx: &LateContext<'a, 'tcx>,", "previous_filename": "clippy_lints/src/forced_return.rs"}, {"sha": "96935eb6b533fea42ee56fabccfffeccb29b5de8", "filename": "tests/ui/missing_returns.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/978f8c65ee44b43243a83a047be6cdacb6df1320/tests%2Fui%2Fmissing_returns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/978f8c65ee44b43243a83a047be6cdacb6df1320/tests%2Fui%2Fmissing_returns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_returns.rs?ref=978f8c65ee44b43243a83a047be6cdacb6df1320", "patch": "@@ -11,7 +11,7 @@\n \n \n \n-#![warn(clippy::forced_return)]\n+#![warn(clippy::missing_returns)]\n \n fn test_end_of_fn() -> bool {\n     if true {", "previous_filename": "tests/ui/forced_return.rs"}, {"sha": "874bec9e10932b76d6427d936794d05a37060684", "filename": "tests/ui/missing_returns.stderr", "status": "renamed", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/978f8c65ee44b43243a83a047be6cdacb6df1320/tests%2Fui%2Fmissing_returns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/978f8c65ee44b43243a83a047be6cdacb6df1320/tests%2Fui%2Fmissing_returns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_returns.stderr?ref=978f8c65ee44b43243a83a047be6cdacb6df1320", "patch": "@@ -1,43 +1,43 @@\n error: missing return statement\n-  --> $DIR/forced_return.rs:21:5\n+  --> $DIR/missing_returns.rs:21:5\n    |\n 21 |     true\n    |     ^^^^ help: add `return` as shown: `return true`\n    |\n-   = note: `-D clippy::forced-return` implied by `-D warnings`\n+   = note: `-D clippy::missing-returns` implied by `-D warnings`\n \n error: missing return statement\n-  --> $DIR/forced_return.rs:27:9\n+  --> $DIR/missing_returns.rs:27:9\n    |\n 27 |         true\n    |         ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/forced_return.rs:29:9\n+  --> $DIR/missing_returns.rs:29:9\n    |\n 29 |         false\n    |         ^^^^^ help: add `return` as shown: `return false`\n \n error: missing return statement\n-  --> $DIR/forced_return.rs:36:17\n+  --> $DIR/missing_returns.rs:36:17\n    |\n 36 |         true => false,\n    |                 ^^^^^ help: add `return` as shown: `return false`\n \n error: missing return statement\n-  --> $DIR/forced_return.rs:38:13\n+  --> $DIR/missing_returns.rs:38:13\n    |\n 38 |             true\n    |             ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/forced_return.rs:45:9\n+  --> $DIR/missing_returns.rs:45:9\n    |\n 45 |         true\n    |         ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/forced_return.rs:47:16\n+  --> $DIR/missing_returns.rs:47:16\n    |\n 47 |     let _ = || true;\n    |                ^^^^ help: add `return` as shown: `return true`", "previous_filename": "tests/ui/forced_return.stderr"}]}