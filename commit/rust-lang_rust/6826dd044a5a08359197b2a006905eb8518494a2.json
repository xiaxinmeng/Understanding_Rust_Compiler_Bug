{"sha": "6826dd044a5a08359197b2a006905eb8518494a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MjZkZDA0NGE1YTA4MzU5MTk3YjJhMDA2OTA1ZWI4NTE4NDk0YTI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-17T14:23:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-17T14:23:03Z"}, "message": "Merge #5782\n\n5782: Fix StatusNotification r=matklad a=vsrs\n\nThis PR fixes the following:\r\n\r\nAs per specification `params` property in [NotificationMessage ](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#notificationMessage) should be `array | object` while RA uses `\"loading\" | \"ready\" | \"invalid\" | \"needsReload\"`.\n\nCo-authored-by: vsrs <vit@conrlab.com>", "tree": {"sha": "64a08650423cb9b1025657e36f1d1c0767b73ad2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64a08650423cb9b1025657e36f1d1c0767b73ad2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6826dd044a5a08359197b2a006905eb8518494a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfOpLHCRBK7hj4Ov3rIwAAdHIIAJxV2YAT+PcC/RZ4EFHD2oL2\nmpX7+dN0CnJE3ECEURN81OXWgw22T9VmdXaUD3WtG4qWsgl7wtacyaDhGANFMvb7\n24XhvkA5828nMyRohwLNeg79zM2bNMzMfSF4f4HxfJit2m/Uhd57QrJI84mjpOQ9\nw//VLfpPzZxRFibkgdEAVLel3JPhj1G8yAVM8mO1l3INn81ABbu/+1NIKYVWYjgb\n64e00k4CRW4IIdP/eD4UjsCQrvAV0yUARBxeeuI9SKke2XtnW3+B67w03YFrcZcJ\nJtUcSctc4G33AOd8r73L/ngAuxEUaW1YE9nGG40B4ex4luXwC+wNOZ65WNk1FUU=\n=aJR1\n-----END PGP SIGNATURE-----\n", "payload": "tree 64a08650423cb9b1025657e36f1d1c0767b73ad2\nparent 64bbdb5bc7e61d2d6ff67e722e34275ef2a47554\nparent 1eed036a6e68aee6128d099e3a8f2c06a90b846b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597674183 +0000\ncommitter GitHub <noreply@github.com> 1597674183 +0000\n\nMerge #5782\n\n5782: Fix StatusNotification r=matklad a=vsrs\n\nThis PR fixes the following:\r\n\r\nAs per specification `params` property in [NotificationMessage ](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#notificationMessage) should be `array | object` while RA uses `\"loading\" | \"ready\" | \"invalid\" | \"needsReload\"`.\n\nCo-authored-by: vsrs <vit@conrlab.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6826dd044a5a08359197b2a006905eb8518494a2", "html_url": "https://github.com/rust-lang/rust/commit/6826dd044a5a08359197b2a006905eb8518494a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6826dd044a5a08359197b2a006905eb8518494a2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64bbdb5bc7e61d2d6ff67e722e34275ef2a47554", "url": "https://api.github.com/repos/rust-lang/rust/commits/64bbdb5bc7e61d2d6ff67e722e34275ef2a47554", "html_url": "https://github.com/rust-lang/rust/commit/64bbdb5bc7e61d2d6ff67e722e34275ef2a47554"}, {"sha": "1eed036a6e68aee6128d099e3a8f2c06a90b846b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1eed036a6e68aee6128d099e3a8f2c06a90b846b", "html_url": "https://github.com/rust-lang/rust/commit/1eed036a6e68aee6128d099e3a8f2c06a90b846b"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "e1a28b1b4bade2dd7e18721dad9eab7060378045", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6826dd044a5a08359197b2a006905eb8518494a2/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6826dd044a5a08359197b2a006905eb8518494a2/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=6826dd044a5a08359197b2a006905eb8518494a2", "patch": "@@ -237,8 +237,13 @@ pub enum Status {\n     Invalid,\n }\n \n+#[derive(Deserialize, Serialize)]\n+pub struct StatusParams {\n+    pub status: Status,\n+}\n+\n impl Notification for StatusNotification {\n-    type Params = Status;\n+    type Params = StatusParams;\n     const METHOD: &'static str = \"rust-analyzer/status\";\n }\n "}, {"sha": "505505a779619b9168d2f37b158567fa868b2eea", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6826dd044a5a08359197b2a006905eb8518494a2/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6826dd044a5a08359197b2a006905eb8518494a2/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=6826dd044a5a08359197b2a006905eb8518494a2", "patch": "@@ -13,6 +13,7 @@ use crate::{\n     lsp_ext,\n     main_loop::Task,\n };\n+use lsp_ext::StatusParams;\n \n impl GlobalState {\n     pub(crate) fn update_configuration(&mut self, config: Config) {\n@@ -85,7 +86,9 @@ impl GlobalState {\n                 Status::Invalid => lsp_ext::Status::Invalid,\n                 Status::NeedsReload => lsp_ext::Status::NeedsReload,\n             };\n-            self.send_notification::<lsp_ext::StatusNotification>(lsp_status);\n+            self.send_notification::<lsp_ext::StatusNotification>(StatusParams {\n+                status: lsp_status,\n+            });\n         }\n     }\n     pub(crate) fn fetch_workspaces(&mut self) {"}, {"sha": "2e3133449fb44fbe3e60291d285db19ec15a5a44", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6826dd044a5a08359197b2a006905eb8518494a2/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/6826dd044a5a08359197b2a006905eb8518494a2/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=6826dd044a5a08359197b2a006905eb8518494a2", "patch": "@@ -412,7 +412,13 @@ Reloads project information (that is, re-executes `cargo metadata`).\n \n **Method:** `rust-analyzer/status`\n \n-**Notification:** `\"loading\" | \"ready\" | \"invalid\" | \"needsReload\"`\n+**Notification:**\n+\n+```typescript\n+interface StatusParams {\n+    status: \"loading\" | \"ready\" | \"invalid\" | \"needsReload\",\n+}\n+```\n \n This notification is sent from server to client.\n The client can use it to display persistent status to the user (in modline)."}, {"sha": "543f7e02e389b0840fb874b6c4a62899d35873e0", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6826dd044a5a08359197b2a006905eb8518494a2/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/6826dd044a5a08359197b2a006905eb8518494a2/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=6826dd044a5a08359197b2a006905eb8518494a2", "patch": "@@ -36,7 +36,7 @@ export class Ctx {\n \n         res.pushCleanup(client.start());\n         await client.onReady();\n-        client.onNotification(ra.status, (status) => res.setStatus(status));\n+        client.onNotification(ra.status, (params) => res.setStatus(params.status));\n         return res;\n     }\n "}, {"sha": "8663737a6849ca38ad261c3f5777a7c534b937aa", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6826dd044a5a08359197b2a006905eb8518494a2/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/6826dd044a5a08359197b2a006905eb8518494a2/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=6826dd044a5a08359197b2a006905eb8518494a2", "patch": "@@ -8,7 +8,10 @@ export const analyzerStatus = new lc.RequestType<null, string, void>(\"rust-analy\n export const memoryUsage = new lc.RequestType<null, string, void>(\"rust-analyzer/memoryUsage\");\n \n export type Status = \"loading\" | \"ready\" | \"invalid\" | \"needsReload\";\n-export const status = new lc.NotificationType<Status>(\"rust-analyzer/status\");\n+export interface StatusParams {\n+    status: Status;\n+}\n+export const status = new lc.NotificationType<StatusParams>(\"rust-analyzer/status\");\n \n export const reloadWorkspace = new lc.RequestType<null, null, void>(\"rust-analyzer/reloadWorkspace\");\n "}]}