{"sha": "8e7714d3bb81e41ed3e812415626acbabd20ff02", "node_id": "C_kwDOAAsO6NoAKDhlNzcxNGQzYmI4MWU0MWVkM2U4MTI0MTU2MjZhY2JhYmQyMGZmMDI", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2023-05-05T23:30:32Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2023-05-05T23:30:32Z"}, "message": "Reorder to keep duplicate checks in sync.", "tree": {"sha": "9cab34e21895b9de65f2225125c82b168b67e222", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cab34e21895b9de65f2225125c82b168b67e222"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e7714d3bb81e41ed3e812415626acbabd20ff02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e7714d3bb81e41ed3e812415626acbabd20ff02", "html_url": "https://github.com/rust-lang/rust/commit/8e7714d3bb81e41ed3e812415626acbabd20ff02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e7714d3bb81e41ed3e812415626acbabd20ff02/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "012f9a333b4017f5cb3d7917b03132b79a26dc09", "url": "https://api.github.com/repos/rust-lang/rust/commits/012f9a333b4017f5cb3d7917b03132b79a26dc09", "html_url": "https://github.com/rust-lang/rust/commit/012f9a333b4017f5cb3d7917b03132b79a26dc09"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "3d97d9b489508a8004023841fe3d921bf89260b9", "filename": "compiler/rustc_abi/src/layout.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8e7714d3bb81e41ed3e812415626acbabd20ff02/compiler%2Frustc_abi%2Fsrc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7714d3bb81e41ed3e812415626acbabd20ff02/compiler%2Frustc_abi%2Fsrc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_abi%2Fsrc%2Flayout.rs?ref=8e7714d3bb81e41ed3e812415626acbabd20ff02", "patch": "@@ -744,20 +744,28 @@ pub trait LayoutCalculator {\n         for field in only_variant {\n             assert!(field.0.is_sized());\n \n-            if !field.0.is_zst() && !common_non_zst_abi_and_align.is_err() {\n+            align = align.max(field.align());\n+            size = cmp::max(size, field.size());\n+\n+            if field.0.is_zst() {\n+                // Nothing more to do for ZST fields\n+                continue;\n+            }\n+\n+            if let Ok(common) = common_non_zst_abi_and_align {\n                 // Discard valid range information and allow undef\n                 let field_abi = field.abi().to_union();\n \n-                if let Ok(Some((common_abi, common_align))) = &mut common_non_zst_abi_and_align {\n-                    if *common_abi != field_abi {\n+                if let Some((common_abi, common_align)) = common {\n+                    if common_abi != field_abi {\n                         // Different fields have different ABI: disable opt\n                         common_non_zst_abi_and_align = Err(AbiMismatch);\n                     } else {\n                         // Fields with the same non-Aggregate ABI should also\n                         // have the same alignment\n                         if !matches!(common_abi, Abi::Aggregate { .. }) {\n                             assert_eq!(\n-                                *common_align,\n+                                common_align,\n                                 field.align().abi,\n                                 \"non-Aggregate field with matching ABI but differing alignment\"\n                             );\n@@ -768,9 +776,6 @@ pub trait LayoutCalculator {\n                     common_non_zst_abi_and_align = Ok(Some((field_abi, field.align().abi)));\n                 }\n             }\n-\n-            align = align.max(field.align());\n-            size = cmp::max(size, field.size());\n         }\n \n         if let Some(pack) = repr.pack {"}]}