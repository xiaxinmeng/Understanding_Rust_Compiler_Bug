{"sha": "e7b41caba8b968450717b487087b5a2cdc10461a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YjQxY2FiYThiOTY4NDUwNzE3YjQ4NzA4N2I1YTJjZGMxMDQ2MWE=", "commit": {"author": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-07-27T18:41:33Z"}, "committer": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-07-27T18:41:33Z"}, "message": "Implement Hash for tuples of up to arity 12. Also change the style to be consistent with core::tuple", "tree": {"sha": "406abadbf636981c1e9f0718f9dbcea3d61cd06b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/406abadbf636981c1e9f0718f9dbcea3d61cd06b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7b41caba8b968450717b487087b5a2cdc10461a", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7b41caba8b968450717b487087b5a2cdc10461a", "html_url": "https://github.com/rust-lang/rust/commit/e7b41caba8b968450717b487087b5a2cdc10461a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7b41caba8b968450717b487087b5a2cdc10461a/comments", "author": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0d10bb69ab04ab041b39c71f7537d8c63ef9669", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0d10bb69ab04ab041b39c71f7537d8c63ef9669", "html_url": "https://github.com/rust-lang/rust/commit/e0d10bb69ab04ab041b39c71f7537d8c63ef9669"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "6f8b63953e2b495d4f8a60ca6bbd95f05cc96448", "filename": "src/libcollections/hash/mod.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e7b41caba8b968450717b487087b5a2cdc10461a/src%2Flibcollections%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b41caba8b968450717b487087b5a2cdc10461a/src%2Flibcollections%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fhash%2Fmod.rs?ref=e7b41caba8b968450717b487087b5a2cdc10461a", "patch": "@@ -155,29 +155,36 @@ macro_rules! impl_hash_tuple(\n         }\n     );\n \n-    ($A:ident $($B:ident)*) => (\n-        impl<\n-            S: Writer,\n-            $A: Hash<S> $(, $B: Hash<S>)*\n-        > Hash<S> for ($A, $($B),*) {\n+    ( $($name:ident)+) => (\n+        impl<S: Writer, $($name: Hash<S>),*> Hash<S> for ($($name,)*) {\n+            #[allow(uppercase_variables)]\n             #[inline]\n             fn hash(&self, state: &mut S) {\n                 match *self {\n-                    (ref $A, $(ref $B),*) => {\n-                        $A.hash(state);\n+                    ($(ref $name,)*) => {\n                         $(\n-                            $B.hash(state);\n+                            $name.hash(state);\n                         )*\n                     }\n                 }\n             }\n         }\n-\n-        impl_hash_tuple!($($B)*)\n     );\n )\n \n-impl_hash_tuple!(a0 a1 a2 a3 a4 a5 a6 a7)\n+impl_hash_tuple!()\n+impl_hash_tuple!(A)\n+impl_hash_tuple!(A B)\n+impl_hash_tuple!(A B C)\n+impl_hash_tuple!(A B C D)\n+impl_hash_tuple!(A B C D E)\n+impl_hash_tuple!(A B C D E F)\n+impl_hash_tuple!(A B C D E F G)\n+impl_hash_tuple!(A B C D E F G H)\n+impl_hash_tuple!(A B C D E F G H I)\n+impl_hash_tuple!(A B C D E F G H I J)\n+impl_hash_tuple!(A B C D E F G H I J K)\n+impl_hash_tuple!(A B C D E F G H I J K L)\n \n impl<'a, S: Writer, T: Hash<S>> Hash<S> for &'a [T] {\n     #[inline]"}]}