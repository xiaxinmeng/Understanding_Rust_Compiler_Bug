{"sha": "890085450a495678622178a471afd630fe15f0f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MDA4NTQ1MGE0OTU2Nzg2MjIxNzhhNDcxYWZkNjMwZmUxNWYwZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-03T14:21:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-03T14:21:51Z"}, "message": "Auto merge of #38061 - cardoe:target-spec, r=alexcrichton\n\nprint option to dump target spec as JSON\n\nThis lets the user dump out the target spec that the compiler is using. This is useful to people defining their own target.json to compare it against existing targets or understand how different targets change internal settings. It is also potentially useful for Cargo to determine if something has changed with a target and it needs to rebuild things.", "tree": {"sha": "0b7b4e3ffb7c6116559ce802f374d1e20c14dbae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b7b4e3ffb7c6116559ce802f374d1e20c14dbae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/890085450a495678622178a471afd630fe15f0f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/890085450a495678622178a471afd630fe15f0f5", "html_url": "https://github.com/rust-lang/rust/commit/890085450a495678622178a471afd630fe15f0f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/890085450a495678622178a471afd630fe15f0f5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a101d8987ea66795db6623f42788db856e7efc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a101d8987ea66795db6623f42788db856e7efc8", "html_url": "https://github.com/rust-lang/rust/commit/9a101d8987ea66795db6623f42788db856e7efc8"}, {"sha": "7151b5ad7821dc7c1990af0bd2850fcbcbe100e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7151b5ad7821dc7c1990af0bd2850fcbcbe100e7", "html_url": "https://github.com/rust-lang/rust/commit/7151b5ad7821dc7c1990af0bd2850fcbcbe100e7"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "478b6b80414a385f4b8831293ea147b1a93930fe", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/890085450a495678622178a471afd630fe15f0f5/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890085450a495678622178a471afd630fe15f0f5/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=890085450a495678622178a471afd630fe15f0f5", "patch": "@@ -308,6 +308,7 @@ pub enum PrintRequest {\n     TargetFeatures,\n     RelocationModels,\n     CodeModels,\n+    TargetSpec,\n }\n \n pub enum Input {\n@@ -1138,6 +1139,13 @@ mod opt {\n /// including metadata for each option, such as whether the option is\n /// part of the stable long-term interface for rustc.\n pub fn rustc_short_optgroups() -> Vec<RustcOptGroup> {\n+    let mut print_opts = vec![\"crate-name\", \"file-names\", \"sysroot\", \"cfg\",\n+                              \"target-list\", \"target-cpus\", \"target-features\",\n+                              \"relocation-models\", \"code-models\"];\n+    if nightly_options::is_nightly_build() {\n+        print_opts.push(\"target-spec-json\");\n+    }\n+\n     vec![\n         opt::flag_s(\"h\", \"help\", \"Display this message\"),\n         opt::multi_s(\"\", \"cfg\", \"Configure the compilation environment\", \"SPEC\"),\n@@ -1157,9 +1165,7 @@ pub fn rustc_short_optgroups() -> Vec<RustcOptGroup> {\n                               the compiler to emit\",\n                  \"[asm|llvm-bc|llvm-ir|obj|link|dep-info]\"),\n         opt::multi_s(\"\", \"print\", \"Comma separated list of compiler information to \\\n-                               print on stdout\",\n-                 \"[crate-name|file-names|sysroot|cfg|target-list|target-cpus|\\\n-                   target-features|relocation-models|code-models]\"),\n+                               print on stdout\", &print_opts.join(\"|\")),\n         opt::flagmulti_s(\"g\",  \"\",  \"Equivalent to -C debuginfo=2\"),\n         opt::flagmulti_s(\"O\", \"\", \"Equivalent to -C opt-level=2\"),\n         opt::opt_s(\"o\", \"\", \"Write output to <filename>\", \"FILENAME\"),\n@@ -1469,6 +1475,8 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n             \"target-features\" => PrintRequest::TargetFeatures,\n             \"relocation-models\" => PrintRequest::RelocationModels,\n             \"code-models\" => PrintRequest::CodeModels,\n+            \"target-spec-json\" if nightly_options::is_unstable_enabled(matches)\n+                => PrintRequest::TargetSpec,\n             req => {\n                 early_error(error_format, &format!(\"unknown print request `{}`\", req))\n             }"}, {"sha": "f84622c2f028553a547113d7f0b2ef6a40c499b0", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/890085450a495678622178a471afd630fe15f0f5/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890085450a495678622178a471afd630fe15f0f5/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=890085450a495678622178a471afd630fe15f0f5", "patch": "@@ -80,6 +80,8 @@ use rustc_metadata::locator;\n use rustc_metadata::cstore::CStore;\n use rustc::util::common::time;\n \n+use serialize::json::ToJson;\n+\n use std::cmp::max;\n use std::cmp::Ordering::Equal;\n use std::default::Default;\n@@ -584,6 +586,7 @@ impl RustcDefaultCalls {\n                     println!(\"{}\", targets.join(\"\\n\"));\n                 },\n                 PrintRequest::Sysroot => println!(\"{}\", sess.sysroot().display()),\n+                PrintRequest::TargetSpec => println!(\"{}\", sess.target.target.to_json().pretty()),\n                 PrintRequest::FileNames |\n                 PrintRequest::CrateName => {\n                     let input = match input {"}, {"sha": "6b58ad7b6dff07b4550f3d644dc2d308b2dd830c", "filename": "src/test/run-make/target-specs/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/890085450a495678622178a471afd630fe15f0f5/src%2Ftest%2Frun-make%2Ftarget-specs%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/890085450a495678622178a471afd630fe15f0f5/src%2Ftest%2Frun-make%2Ftarget-specs%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftarget-specs%2FMakefile?ref=890085450a495678622178a471afd630fe15f0f5", "patch": "@@ -6,3 +6,4 @@ all:\n \t$(RUSTC) foo.rs --target=my-incomplete-platform.json 2>&1 | grep 'Field llvm-target'\n \tRUST_TARGET_PATH=. $(RUSTC) foo.rs --target=my-awesome-platform --crate-type=lib --emit=asm\n \tRUST_TARGET_PATH=. $(RUSTC) foo.rs --target=x86_64-unknown-linux-gnu --crate-type=lib --emit=asm\n+\t$(RUSTC) -Z unstable-options --target=my-awesome-platform.json --print target-spec-json > $(TMPDIR)/test-platform.json && $(RUSTC) -Z unstable-options --target=$(TMPDIR)/test-platform.json --print target-spec-json | diff -q $(TMPDIR)/test-platform.json -"}]}