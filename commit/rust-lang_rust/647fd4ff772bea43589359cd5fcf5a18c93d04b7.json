{"sha": "647fd4ff772bea43589359cd5fcf5a18c93d04b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0N2ZkNGZmNzcyYmVhNDM1ODkzNTljZDVmY2Y1YTE4YzkzZDA0Yjc=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-12T22:28:26Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-06-06T05:32:06Z"}, "message": "Leave GlobalAsm and MacroDef without formatting", "tree": {"sha": "f30af5780969435f89cd8a8ece84ff943331843f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f30af5780969435f89cd8a8ece84ff943331843f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/647fd4ff772bea43589359cd5fcf5a18c93d04b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/647fd4ff772bea43589359cd5fcf5a18c93d04b7", "html_url": "https://github.com/rust-lang/rust/commit/647fd4ff772bea43589359cd5fcf5a18c93d04b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/647fd4ff772bea43589359cd5fcf5a18c93d04b7/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e994eac3f1c6afb4458c621b991f0540f768c078", "url": "https://api.github.com/repos/rust-lang/rust/commits/e994eac3f1c6afb4458c621b991f0540f768c078", "html_url": "https://github.com/rust-lang/rust/commit/e994eac3f1c6afb4458c621b991f0540f768c078"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "d01e8e02eadf57b356df2d98dd90ac0dcd060a18", "filename": "src/visitor.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/647fd4ff772bea43589359cd5fcf5a18c93d04b7/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/647fd4ff772bea43589359cd5fcf5a18c93d04b7/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=647fd4ff772bea43589359cd5fcf5a18c93d04b7", "patch": "@@ -384,10 +384,13 @@ impl<'a> FmtVisitor<'a> {\n                 // FIXME(#1157): format union definitions.\n             }\n             ast::ItemKind::GlobalAsm(..) => {\n-                // FIXME(#1538): format GlobalAsm\n+                let snippet = Some(self.snippet(item.span));\n+                self.push_rewrite(item.span, snippet);\n             }\n             ast::ItemKind::MacroDef(..) => {\n                 // FIXME(#1539): macros 2.0\n+                let snippet = Some(self.snippet(item.span));\n+                self.push_rewrite(item.span, snippet);\n             }\n         }\n     }"}]}