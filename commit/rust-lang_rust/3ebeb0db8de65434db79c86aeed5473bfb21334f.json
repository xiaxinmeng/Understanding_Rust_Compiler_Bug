{"sha": "3ebeb0db8de65434db79c86aeed5473bfb21334f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYmViMGRiOGRlNjU0MzRkYjc5Yzg2YWVlZDU0NzNiZmIyMTMzNGY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-15T17:56:19Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-15T21:00:05Z"}, "message": "move readonly source to module tree descr", "tree": {"sha": "a17f7418309ccb063d7142d56c3fe46c0d609a7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a17f7418309ccb063d7142d56c3fe46c0d609a7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ebeb0db8de65434db79c86aeed5473bfb21334f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ebeb0db8de65434db79c86aeed5473bfb21334f", "html_url": "https://github.com/rust-lang/rust/commit/3ebeb0db8de65434db79c86aeed5473bfb21334f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ebeb0db8de65434db79c86aeed5473bfb21334f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58674dc3c415142dbdd93b990d9f5b4fe10bef69", "url": "https://api.github.com/repos/rust-lang/rust/commits/58674dc3c415142dbdd93b990d9f5b4fe10bef69", "html_url": "https://github.com/rust-lang/rust/commit/58674dc3c415142dbdd93b990d9f5b4fe10bef69"}], "stats": {"total": 42, "additions": 25, "deletions": 17}, "files": [{"sha": "200f21576b75678dc70265ad8ef635a5dab4f845", "filename": "crates/libanalysis/src/descriptors.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3ebeb0db8de65434db79c86aeed5473bfb21334f/crates%2Flibanalysis%2Fsrc%2Fdescriptors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ebeb0db8de65434db79c86aeed5473bfb21334f/crates%2Flibanalysis%2Fsrc%2Fdescriptors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibanalysis%2Fsrc%2Fdescriptors.rs?ref=3ebeb0db8de65434db79c86aeed5473bfb21334f", "patch": "@@ -42,25 +42,25 @@ pub struct Submodule {\n     pub name: SmolStr,\n }\n \n-#[derive(Hash)]\n+#[derive(Hash, Debug)]\n pub(crate) struct ModuleTreeDescriptor {\n     nodes: Vec<NodeData>,\n     links: Vec<LinkData>,\n     file_id2node: BTreeMap<FileId, Node>,\n }\n \n-#[derive(Clone, Copy, PartialEq, Eq, Hash)]\n+#[derive(Clone, Copy, PartialEq, Eq, Hash, Debug)]\n struct Node(usize);\n-#[derive(Hash)]\n+#[derive(Hash, Debug)]\n struct NodeData {\n     file_id: FileId,\n     links: Vec<Link>,\n     parents: Vec<Link>\n }\n \n-#[derive(Clone, Copy, PartialEq, Eq, Hash)]\n+#[derive(Clone, Copy, PartialEq, Eq, Hash, Debug)]\n pub(crate) struct Link(usize);\n-#[derive(Hash)]\n+#[derive(Hash, Debug)]\n struct LinkData {\n     owner: Node,\n     name: SmolStr,"}, {"sha": "e9527eeff443f8fbf3788cf95c897ee17053ff88", "filename": "crates/libanalysis/src/roots.rs", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3ebeb0db8de65434db79c86aeed5473bfb21334f/crates%2Flibanalysis%2Fsrc%2Froots.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ebeb0db8de65434db79c86aeed5473bfb21334f/crates%2Flibanalysis%2Fsrc%2Froots.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibanalysis%2Fsrc%2Froots.rs?ref=3ebeb0db8de65434db79c86aeed5473bfb21334f", "patch": "@@ -15,7 +15,7 @@ use {\n     imp::FileResolverImp,\n     module_map::{ModuleMap, ChangeKind},\n     symbol_index::SymbolIndex,\n-    descriptors::ModuleTreeDescriptor,\n+    descriptors::{ModuleDescriptor, ModuleTreeDescriptor},\n };\n \n pub(crate) trait SourceRoot {\n@@ -137,30 +137,35 @@ impl FileData {\n pub(crate) struct ReadonlySourceRoot {\n     symbol_index: SymbolIndex,\n     file_map: HashMap<FileId, FileData>,\n-    module_map: ModuleMap,\n+    module_tree: Arc<ModuleTreeDescriptor>,\n }\n \n impl ReadonlySourceRoot {\n     pub(crate) fn new(files: Vec<(FileId, String)>, file_resolver: FileResolverImp) -> ReadonlySourceRoot {\n-        let mut module_map = ModuleMap::new();\n-        module_map.set_file_resolver(file_resolver);\n-        let symbol_index = SymbolIndex::for_files(\n-            files.par_iter().map(|(file_id, text)| {\n-                (*file_id, File::parse(text))\n+        let modules = files.par_iter()\n+            .map(|(file_id, text)| {\n+                let syntax = File::parse(text);\n+                let mod_descr = ModuleDescriptor::new(syntax.ast());\n+                (*file_id, syntax, mod_descr)\n             })\n+            .collect::<Vec<_>>();\n+        let module_tree = ModuleTreeDescriptor::new(\n+            modules.iter().map(|it| (it.0, &it.2)),\n+            &file_resolver,\n+        );\n+\n+        let symbol_index = SymbolIndex::for_files(\n+            modules.par_iter().map(|it| (it.0, it.1.clone()))\n         );\n         let file_map: HashMap<FileId, FileData> = files\n             .into_iter()\n-            .map(|(id, text)| {\n-                module_map.update_file(id, ChangeKind::Insert);\n-                (id, FileData::new(text))\n-            })\n+            .map(|(id, text)| (id, FileData::new(text)))\n             .collect();\n \n         ReadonlySourceRoot {\n             symbol_index,\n             file_map,\n-            module_map,\n+            module_tree: Arc::new(module_tree),\n         }\n     }\n \n@@ -173,6 +178,9 @@ impl ReadonlySourceRoot {\n }\n \n impl SourceRoot for ReadonlySourceRoot {\n+    fn module_tree(&self) -> Arc<ModuleTreeDescriptor> {\n+        Arc::clone(&self.module_tree)\n+    }\n     fn contains(&self, file_id: FileId) -> bool {\n         self.file_map.contains_key(&file_id)\n     }"}]}