{"sha": "9fdb347ad733dcd40eaab34ebb3143a1c6060206", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZGIzNDdhZDczM2RjZDQwZWFhYjM0ZWJiMzE0M2ExYzYwNjAyMDY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-09-26T09:40:13Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-09-26T09:41:11Z"}, "message": "Rustup to `sty` -> `kind` changes", "tree": {"sha": "00e6c6d3122995c3e12c0e0ec7116d866fddca5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00e6c6d3122995c3e12c0e0ec7116d866fddca5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fdb347ad733dcd40eaab34ebb3143a1c6060206", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fdb347ad733dcd40eaab34ebb3143a1c6060206", "html_url": "https://github.com/rust-lang/rust/commit/9fdb347ad733dcd40eaab34ebb3143a1c6060206", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fdb347ad733dcd40eaab34ebb3143a1c6060206/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20b10cc6d3419f50844a13fec2bc693b0194801d", "url": "https://api.github.com/repos/rust-lang/rust/commits/20b10cc6d3419f50844a13fec2bc693b0194801d", "html_url": "https://github.com/rust-lang/rust/commit/20b10cc6d3419f50844a13fec2bc693b0194801d"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "e8bca6ea63b580d343f8184190b0a3e592bddf02", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fdb347ad733dcd40eaab34ebb3143a1c6060206/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/9fdb347ad733dcd40eaab34ebb3143a1c6060206/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=9fdb347ad733dcd40eaab34ebb3143a1c6060206", "patch": "@@ -1 +1 @@\n-a5bc0f0e3f0c58518c0537d82dee0fcfeb57115c\n+dc45735f29788924b9fc351d100e5bf3ebdca162"}, {"sha": "3bee028c5eb7a7148620869755f8838107c66465", "filename": "src/helpers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fdb347ad733dcd40eaab34ebb3143a1c6060206/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fdb347ad733dcd40eaab34ebb3143a1c6060206/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=9fdb347ad733dcd40eaab34ebb3143a1c6060206", "patch": "@@ -211,7 +211,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             fn visit_value(&mut self, v: MPlaceTy<'tcx, Tag>) -> InterpResult<'tcx>\n             {\n                 trace!(\"UnsafeCellVisitor: {:?} {:?}\", *v, v.layout.ty);\n-                let is_unsafe_cell = match v.layout.ty.sty {\n+                let is_unsafe_cell = match v.layout.ty.kind {\n                     ty::Adt(adt, _) => Some(adt.did) == self.ecx.tcx.lang_items().unsafe_cell_type(),\n                     _ => false,\n                 };"}, {"sha": "5258cbb5485b4bd5ce9ced346d68873483dca5a7", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9fdb347ad733dcd40eaab34ebb3143a1c6060206/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fdb347ad733dcd40eaab34ebb3143a1c6060206/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=9fdb347ad733dcd40eaab34ebb3143a1c6060206", "patch": "@@ -435,7 +435,7 @@ impl<'tcx> Stacks {\n \n         Stacks {\n             stacks: RefCell::new(RangeMap::new(size, stack)),\n-            global: extra, \n+            global: extra,\n         }\n     }\n \n@@ -460,7 +460,7 @@ impl Stacks {\n     pub fn new_allocation(\n         id: AllocId,\n         size: Size,\n-        extra: MemoryExtra, \n+        extra: MemoryExtra,\n         kind: MemoryKind<MiriMemoryKind>,\n     ) -> (Self, Tag) {\n         let (tag, perm) = match kind {\n@@ -616,7 +616,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         // Cannot use `builtin_deref` because that reports *immutable* for `Box`,\n         // making it useless.\n         fn qualify(ty: ty::Ty<'_>, kind: RetagKind) -> Option<(RefKind, bool)> {\n-            match ty.sty {\n+            match ty.kind {\n                 // References are simple.\n                 ty::Ref(_, _, MutMutable) =>\n                     Some((RefKind::Unique { two_phase: kind == RetagKind::TwoPhase}, kind == RetagKind::FnEntry)),"}]}