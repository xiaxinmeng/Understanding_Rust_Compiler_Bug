{"sha": "d82511597840d38b5d8d68f936e0b5ad0d201537", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MjUxMTU5Nzg0MGQzOGI1ZDhkNjhmOTM2ZTBiNWFkMGQyMDE1Mzc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-07-02T16:33:16Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-07-05T16:30:27Z"}, "message": "Update Cargo.lock dependencies\n\nRun `cargo update` and let's see how far we can get!", "tree": {"sha": "0dca02ada17e515b7c9aade0b37493bfbfd3fd83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dca02ada17e515b7c9aade0b37493bfbfd3fd83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d82511597840d38b5d8d68f936e0b5ad0d201537", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d82511597840d38b5d8d68f936e0b5ad0d201537", "html_url": "https://github.com/rust-lang/rust/commit/d82511597840d38b5d8d68f936e0b5ad0d201537", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d82511597840d38b5d8d68f936e0b5ad0d201537/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef41cf028809328d3f976d3c2eb6a7ef8d912a19", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef41cf028809328d3f976d3c2eb6a7ef8d912a19", "html_url": "https://github.com/rust-lang/rust/commit/ef41cf028809328d3f976d3c2eb6a7ef8d912a19"}], "stats": {"total": 1247, "additions": 627, "deletions": 620}, "files": [{"sha": "dc032e2d3f1e542702afa16dcee150de941bef94", "filename": "src/Cargo.lock", "status": "modified", "additions": 620, "deletions": 618, "changes": 1238, "blob_url": "https://github.com/rust-lang/rust/blob/d82511597840d38b5d8d68f936e0b5ad0d201537/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d82511597840d38b5d8d68f936e0b5ad0d201537/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=d82511597840d38b5d8d68f936e0b5ad0d201537"}, {"sha": "c885c842e40e4e1843768808347f2f9c0725d8d6", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d82511597840d38b5d8d68f936e0b5ad0d201537/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d82511597840d38b5d8d68f936e0b5ad0d201537/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=d82511597840d38b5d8d68f936e0b5ad0d201537", "patch": "@@ -337,13 +337,14 @@ pub enum Mode {\n     /// Compile a tool which uses all libraries we compile (up to rustc).\n     /// Doesn't use the stage0 compiler libraries like \"other\", and includes\n     /// tools like rustdoc, cargo, rls, etc.\n+    ToolStd,\n     ToolRustc,\n }\n \n impl Mode {\n     pub fn is_tool(&self) -> bool {\n         match self {\n-            Mode::ToolBootstrap | Mode::ToolRustc => true,\n+            Mode::ToolBootstrap | Mode::ToolRustc | Mode::ToolStd => true,\n             _ => false\n         }\n     }\n@@ -554,6 +555,7 @@ impl Build {\n             Mode::Codegen => \"-rustc\",\n             Mode::Rustc => \"-rustc\",\n             Mode::ToolBootstrap => \"-bootstrap-tools\",\n+            Mode::ToolStd => \"-tools\",\n             Mode::ToolRustc => \"-tools\",\n         };\n         self.out.join(&*compiler.host)"}, {"sha": "32d1e428e7607686dac8862110a930349b9d056b", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d82511597840d38b5d8d68f936e0b5ad0d201537/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d82511597840d38b5d8d68f936e0b5ad0d201537/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=d82511597840d38b5d8d68f936e0b5ad0d201537", "patch": "@@ -107,6 +107,9 @@ impl Step for ToolBuild {\n             Mode::ToolRustc => {\n                 builder.ensure(compile::Rustc { compiler, target })\n             }\n+            Mode::ToolStd => {\n+                builder.ensure(compile::Std { compiler, target })\n+            }\n             Mode::ToolBootstrap => {} // uses downloaded stage0 compiler libs\n             _ => panic!(\"unexpected Mode for tool build\")\n         }\n@@ -380,7 +383,7 @@ impl Step for RemoteTestServer {\n             compiler: self.compiler,\n             target: self.target,\n             tool: \"remote-test-server\",\n-            mode: Mode::ToolBootstrap,\n+            mode: Mode::ToolStd,\n             path: \"src/tools/remote-test-server\",\n             is_ext_tool: false,\n             extra_features: Vec::new(),"}]}