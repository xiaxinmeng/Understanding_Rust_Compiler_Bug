{"sha": "58d62b83711b5f1401509b97a1340495f9907134", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZDYyYjgzNzExYjVmMTQwMTUwOWI5N2ExMzQwNDk1Zjk5MDcxMzQ=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-19T14:57:30Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-19T14:57:30Z"}, "message": "Inform tidy about the reason for the ignored rust code", "tree": {"sha": "3fdf078191438b678bcc49349dafc3335f58a938", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fdf078191438b678bcc49349dafc3335f58a938"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58d62b83711b5f1401509b97a1340495f9907134", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58d62b83711b5f1401509b97a1340495f9907134", "html_url": "https://github.com/rust-lang/rust/commit/58d62b83711b5f1401509b97a1340495f9907134", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58d62b83711b5f1401509b97a1340495f9907134/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfca61a4c22d3cd1bc6b7a493de6f6763223b71f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfca61a4c22d3cd1bc6b7a493de6f6763223b71f", "html_url": "https://github.com/rust-lang/rust/commit/dfca61a4c22d3cd1bc6b7a493de6f6763223b71f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "1ecf6abc7546fd0705d7e8f25e3cf756ac934290", "filename": "library/core/src/alloc/global.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58d62b83711b5f1401509b97a1340495f9907134/library%2Fcore%2Fsrc%2Falloc%2Fglobal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d62b83711b5f1401509b97a1340495f9907134/library%2Fcore%2Fsrc%2Falloc%2Fglobal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Falloc%2Fglobal.rs?ref=58d62b83711b5f1401509b97a1340495f9907134", "patch": "@@ -61,7 +61,7 @@ use crate::ptr;\n ///   More concretely, the following code example is unsound, irrespective of whether your\n ///   custom allocator allows counting how many allocations have happened.\n ///\n-///   ```text\n+///   ```rust,ignore (unsound and has placeholders)\n ///   drop(Box::new(42));\n ///   let number_of_heap_allocs = /* call private allocator API */;\n ///   unsafe { std::intrinsics::assume(number_of_heap_allocs > 0); }"}, {"sha": "1616d8fab212ca95ab492639c69ffc5e69155712", "filename": "library/core/src/alloc/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58d62b83711b5f1401509b97a1340495f9907134/library%2Fcore%2Fsrc%2Falloc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d62b83711b5f1401509b97a1340495f9907134/library%2Fcore%2Fsrc%2Falloc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Falloc%2Fmod.rs?ref=58d62b83711b5f1401509b97a1340495f9907134", "patch": "@@ -100,7 +100,7 @@ pub unsafe trait AllocRef {\n     /// More concretely, the following code example is unsound, irrespective of whether your\n     /// custom allocator allows counting how many allocations have happened.\n     ///\n-    /// ```text\n+    /// ```rust,ignore (unsound and has placeholders)\n     /// Global::dealloc(Global::alloc(some_layout));\n     /// let number_of_heap_allocs = /* call private allocator API */;\n     /// unsafe { std::intrinsics::assume(number_of_heap_allocs > 0); }"}]}