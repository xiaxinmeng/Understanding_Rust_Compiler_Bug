{"sha": "9e857458d6ccf236361cefe33c313bc3c31d9428", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllODU3NDU4ZDZjY2YyMzYzNjFjZWZlMzNjMzEzYmMzYzMxZDk0Mjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-31T14:34:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-31T14:34:24Z"}, "message": "auto merge of #8145 : brson/rust/rttestfixes, r=pcwalton\n\nTwo commits here that fix test case dependencies on the old scheduler.", "tree": {"sha": "7b53a3ceb75b960fa16ccb82300eeb00a41635be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b53a3ceb75b960fa16ccb82300eeb00a41635be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e857458d6ccf236361cefe33c313bc3c31d9428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e857458d6ccf236361cefe33c313bc3c31d9428", "html_url": "https://github.com/rust-lang/rust/commit/9e857458d6ccf236361cefe33c313bc3c31d9428", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e857458d6ccf236361cefe33c313bc3c31d9428/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d409ccd30c92099f3637e7f5545b4cea6b705b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d409ccd30c92099f3637e7f5545b4cea6b705b1", "html_url": "https://github.com/rust-lang/rust/commit/5d409ccd30c92099f3637e7f5545b4cea6b705b1"}, {"sha": "0a87589b94bc1ca17fdfeb35f5b029762fe678a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a87589b94bc1ca17fdfeb35f5b029762fe678a8", "html_url": "https://github.com/rust-lang/rust/commit/0a87589b94bc1ca17fdfeb35f5b029762fe678a8"}], "stats": {"total": 90, "additions": 18, "deletions": 72}, "files": [{"sha": "492874a0c26fb28c11cee3a2725be242427fa29c", "filename": "src/rt/rust_test_helpers.cpp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Frt%2Frust_test_helpers.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Frt%2Frust_test_helpers.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_test_helpers.cpp?ref=9e857458d6ccf236361cefe33c313bc3c31d9428", "patch": "@@ -176,3 +176,8 @@ rust_dbg_next_port(uintptr_t base_port) {\n   next_offset += 1;\n   return this_port;\n }\n+\n+extern \"C\" CDECL intptr_t\n+rust_get_test_int() {\n+  return 1;\n+}"}, {"sha": "7b438849751b298c82689c7e3bdc9c917ff24fd3", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=9e857458d6ccf236361cefe33c313bc3c31d9428", "patch": "@@ -265,3 +265,4 @@ rust_set_exit_status_newrt\n rust_get_exit_status_newrt\n rust_take_change_dir_lock\n rust_drop_change_dir_lock\n+rust_get_test_int"}, {"sha": "3c73bd1b7f20e5778bd0b56e31d782e7b34b9c88", "filename": "src/test/auxiliary/anon-extern-mod-cross-crate-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Fauxiliary%2Fanon-extern-mod-cross-crate-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Fauxiliary%2Fanon-extern-mod-cross-crate-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fanon-extern-mod-cross-crate-1.rs?ref=9e857458d6ccf236361cefe33c313bc3c31d9428", "patch": "@@ -18,5 +18,5 @@\n use std::libc;\n \n extern {\n-    pub fn rust_get_argc() -> libc::c_int;\n+    pub fn rust_get_test_int() -> libc::intptr_t;\n }"}, {"sha": "d67e329b04e887e95ef6fcff9b497f85cf4f7f24", "filename": "src/test/auxiliary/foreign_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs?ref=9e857458d6ccf236361cefe33c313bc3c31d9428", "patch": "@@ -14,6 +14,6 @@ pub mod rustrt {\n     use std::libc;\n \n     extern {\n-        pub fn rust_get_argc() -> libc::c_int;\n+        fn rust_get_test_int() -> libc::intptr_t;\n     }\n }"}, {"sha": "3f1bd83046241bd4c5d9fe298887e1cb5fed214e", "filename": "src/test/run-pass/anon-extern-mod-cross-crate-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs?ref=9e857458d6ccf236361cefe33c313bc3c31d9428", "patch": "@@ -16,6 +16,6 @@ use anonexternmod::*;\n \n pub fn main() {\n     unsafe {\n-        rust_get_argc();\n+        rust_get_test_int();\n     }\n }"}, {"sha": "b305007d8d24844be061292c9682bc417d26092b", "filename": "src/test/run-pass/anon-extern-mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs?ref=9e857458d6ccf236361cefe33c313bc3c31d9428", "patch": "@@ -13,11 +13,11 @@ use std::libc;\n #[abi = \"cdecl\"]\n #[link_name = \"rustrt\"]\n extern {\n-    fn rust_get_argc() -> libc::c_int;\n+    fn rust_get_test_int() -> libc::intptr_t;\n }\n \n pub fn main() {\n     unsafe {\n-        let _ = rust_get_argc();\n+        let _ = rust_get_test_int();\n     }\n }"}, {"sha": "574ef59f0b642f3dfb7cc06792c9396c981a506e", "filename": "src/test/run-pass/foreign-dupe.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Frun-pass%2Fforeign-dupe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Frun-pass%2Fforeign-dupe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-dupe.rs?ref=9e857458d6ccf236361cefe33c313bc3c31d9428", "patch": "@@ -17,7 +17,7 @@ mod rustrt1 {\n     #[abi = \"cdecl\"]\n     #[link_name = \"rustrt\"]\n     extern {\n-        pub fn rust_get_argc() -> libc::c_int;\n+        fn rust_get_test_int() -> libc::intptr_t;\n     }\n }\n \n@@ -27,13 +27,13 @@ mod rustrt2 {\n     #[abi = \"cdecl\"]\n     #[link_name = \"rustrt\"]\n     extern {\n-        pub fn rust_get_argc() -> libc::c_int;\n+        fn rust_get_test_int() -> libc::intptr_t;\n     }\n }\n \n pub fn main() {\n     unsafe {\n-        rustrt1::rust_get_argc();\n-        rustrt2::rust_get_argc();\n+        rustrt1::rust_get_test_int();\n+        rustrt2::rust_get_test_int();\n     }\n }"}, {"sha": "d914d52adf57da60012383a9b4dd182a4d0b0e1a", "filename": "src/test/run-pass/foreign-no-abi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Frun-pass%2Fforeign-no-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Frun-pass%2Fforeign-no-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-no-abi.rs?ref=9e857458d6ccf236361cefe33c313bc3c31d9428", "patch": "@@ -14,12 +14,12 @@ mod rustrt {\n     use std::libc;\n \n     extern {\n-        pub fn get_task_id() -> libc::intptr_t;\n+        fn rust_get_test_int() -> libc::intptr_t;\n     }\n }\n \n pub fn main() {\n     unsafe {\n-        rustrt::get_task_id();\n+        rustrt::rust_get_test_int();\n     }\n }"}, {"sha": "4ccd5355987fbe6e1195acb6d96418059390995a", "filename": "src/test/run-pass/invoke-external-foreign.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e857458d6ccf236361cefe33c313bc3c31d9428/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs?ref=9e857458d6ccf236361cefe33c313bc3c31d9428", "patch": "@@ -19,6 +19,6 @@ extern mod foreign_lib;\n \n pub fn main() {\n     unsafe {\n-        let foo = foreign_lib::rustrt::rust_get_argc();\n+        let foo = foreign_lib::rustrt::rust_get_test_int();\n     }\n }"}, {"sha": "e110ac010653fd4b565c00c3d6717b99efeddbc7", "filename": "src/test/run-pass/rt-sched-1.rs", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/5d409ccd30c92099f3637e7f5545b4cea6b705b1/src%2Ftest%2Frun-pass%2Frt-sched-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d409ccd30c92099f3637e7f5545b4cea6b705b1/src%2Ftest%2Frun-pass%2Frt-sched-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frt-sched-1.rs?ref=5d409ccd30c92099f3637e7f5545b4cea6b705b1", "patch": "@@ -1,60 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Tests of the runtime's scheduler interface\n-\n-use std::cast;\n-use std::comm::*;\n-use std::libc;\n-\n-pub type sched_id = int;\n-pub type task_id = *libc::c_void;\n-\n-pub type task = *libc::c_void;\n-pub type closure = *libc::c_void;\n-\n-mod rustrt {\n-    use super::{closure, sched_id, task, task_id};\n-\n-    use std::libc;\n-\n-    extern {\n-        pub fn rust_new_sched(num_threads: libc::uintptr_t) -> sched_id;\n-        pub fn rust_get_sched_id() -> sched_id;\n-        pub fn rust_new_task_in_sched(id: sched_id) -> task_id;\n-        pub fn start_task(id: task_id, f: closure);\n-    }\n-}\n-\n-pub fn main() {\n-    unsafe {\n-        let (po, ch) = stream();\n-        let parent_sched_id = rustrt::rust_get_sched_id();\n-        error!(\"parent %?\", parent_sched_id);\n-        let num_threads = 1u;\n-        let new_sched_id = rustrt::rust_new_sched(num_threads);\n-        error!(\"new_sched_id %?\", new_sched_id);\n-        let new_task_id = rustrt::rust_new_task_in_sched(new_sched_id);\n-        assert!(!new_task_id.is_null());\n-        let f: ~fn() = || {\n-            unsafe {\n-                let child_sched_id = rustrt::rust_get_sched_id();\n-                error!(\"child_sched_id %?\", child_sched_id);\n-                assert!(child_sched_id != parent_sched_id);\n-                assert_eq!(child_sched_id, new_sched_id);\n-                ch.send(());\n-            }\n-        };\n-        let fptr = cast::transmute(&f);\n-        rustrt::start_task(new_task_id, fptr);\n-        cast::forget(f);\n-        po.recv();\n-    }\n-}"}]}