{"sha": "ce413e0da234ecc68648c81d7c476da3a8d68b9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNDEzZTBkYTIzNGVjYzY4NjQ4YzgxZDdjNDc2ZGEzYThkNjhiOWU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-09-07T00:37:16Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-09-07T18:03:56Z"}, "message": "save-analysis: tweak the type value for functions", "tree": {"sha": "8f5c7012279695a29500bf536fc2c0addf2a0e7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f5c7012279695a29500bf536fc2c0addf2a0e7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce413e0da234ecc68648c81d7c476da3a8d68b9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce413e0da234ecc68648c81d7c476da3a8d68b9e", "html_url": "https://github.com/rust-lang/rust/commit/ce413e0da234ecc68648c81d7c476da3a8d68b9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce413e0da234ecc68648c81d7c476da3a8d68b9e/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31100403fd7a3734b9281cc530795716f94240a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/31100403fd7a3734b9281cc530795716f94240a0", "html_url": "https://github.com/rust-lang/rust/commit/31100403fd7a3734b9281cc530795716f94240a0"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "164869c5e1592c6eec200f13b867921a69870ba5", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce413e0da234ecc68648c81d7c476da3a8d68b9e/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce413e0da234ecc68648c81d7c476da3a8d68b9e/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=ce413e0da234ecc68648c81d7c476da3a8d68b9e", "patch": "@@ -676,7 +676,7 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n }\n \n fn make_signature(decl: &ast::FnDecl, generics: &ast::Generics) -> String {\n-    let mut sig = String::new();\n+    let mut sig = \"fn \".to_owned();\n     if !generics.lifetimes.is_empty() || !generics.ty_params.is_empty() {\n         sig.push('<');\n         sig.push_str(&generics.lifetimes.iter()\n@@ -696,7 +696,7 @@ fn make_signature(decl: &ast::FnDecl, generics: &ast::Generics) -> String {\n     sig.push_str(&decl.inputs.iter().map(arg_to_string).collect::<Vec<_>>().join(\", \"));\n     sig.push(')');\n     match decl.output {\n-        ast::FunctionRetTy::Default(_) => {}\n+        ast::FunctionRetTy::Default(_) => sig.push_str(\" -> ()\"),\n         ast::FunctionRetTy::Ty(ref t) => sig.push_str(&format!(\" -> {}\", ty_to_string(t))),\n     }\n "}]}