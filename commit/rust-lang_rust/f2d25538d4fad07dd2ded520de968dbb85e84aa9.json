{"sha": "f2d25538d4fad07dd2ded520de968dbb85e84aa9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZDI1NTM4ZDRmYWQwN2RkMmRlZDUyMGRlOTY4ZGJiODVlODRhYTk=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-21T08:55:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-21T08:55:08Z"}, "message": "Rollup merge of #75324 - ericseppanen:master, r=JohnTitor\n\nclarify documentation of remove_dir errors\n\nremove_dir will error if the path doesn't exist or isn't a directory.\n\nIt's useful to clarify that this is \"remove dir or fail\" not \"remove dir\nif it exists\".\n\nI don't think this belongs in the title. \"Removes an existing, empty\ndirectory\" is strangely worded-- there's no such thing as a non-existing\ndirectory.  Better to just say explicitly it will return an error.", "tree": {"sha": "caeb649210337245cb4197e077031a2972656585", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/caeb649210337245cb4197e077031a2972656585"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2d25538d4fad07dd2ded520de968dbb85e84aa9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfP4vtCRBK7hj4Ov3rIwAAdHIIAHZoVJcNBGxM92F9BCqTHnvl\nJH4ssRQfiJMy7rxhO8RYT843HJGCNAqzAw+PmnG+4pa+eraGi9N1r5gzJ82mSWdn\nXJGwpy8v+lPJPUKEqB+MDc5v6gD7YDZfn6rz4QNsty5ShLjyeCo+uMSyNJxqNHyP\nppz5LfR+P16wfFWXTVniwlepBthmHc9R1kKpeQ9Xi58CMEC6OVKNvSRqng+nymK8\noqiWkH0PsAwibP/r4SUQVhOQeSs0y5xZfg53kz5MUICiuqndjsm3XI+xc0RgIkBM\nOMiTeZ3gF2TcLVCBEcWOg5pixYvbXQRckDZ4YlIJFQKaoc79hDRhqPuV5O33Qo8=\n=rHry\n-----END PGP SIGNATURE-----\n", "payload": "tree caeb649210337245cb4197e077031a2972656585\nparent b51651ae9d0161967617be930415705b2e4d5faf\nparent f85d231301b506b512bb36d80c840d8478329b25\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1598000108 +0900\ncommitter GitHub <noreply@github.com> 1598000108 +0900\n\nRollup merge of #75324 - ericseppanen:master, r=JohnTitor\n\nclarify documentation of remove_dir errors\n\nremove_dir will error if the path doesn't exist or isn't a directory.\n\nIt's useful to clarify that this is \"remove dir or fail\" not \"remove dir\nif it exists\".\n\nI don't think this belongs in the title. \"Removes an existing, empty\ndirectory\" is strangely worded-- there's no such thing as a non-existing\ndirectory.  Better to just say explicitly it will return an error.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2d25538d4fad07dd2ded520de968dbb85e84aa9", "html_url": "https://github.com/rust-lang/rust/commit/f2d25538d4fad07dd2ded520de968dbb85e84aa9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2d25538d4fad07dd2ded520de968dbb85e84aa9/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b51651ae9d0161967617be930415705b2e4d5faf", "url": "https://api.github.com/repos/rust-lang/rust/commits/b51651ae9d0161967617be930415705b2e4d5faf", "html_url": "https://github.com/rust-lang/rust/commit/b51651ae9d0161967617be930415705b2e4d5faf"}, {"sha": "f85d231301b506b512bb36d80c840d8478329b25", "url": "https://api.github.com/repos/rust-lang/rust/commits/f85d231301b506b512bb36d80c840d8478329b25", "html_url": "https://github.com/rust-lang/rust/commit/f85d231301b506b512bb36d80c840d8478329b25"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "b1630f8f5494c7334a0283831ae27668558b2bcc", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2d25538d4fad07dd2ded520de968dbb85e84aa9/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2d25538d4fad07dd2ded520de968dbb85e84aa9/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=f2d25538d4fad07dd2ded520de968dbb85e84aa9", "patch": "@@ -1921,7 +1921,7 @@ pub fn create_dir_all<P: AsRef<Path>>(path: P) -> io::Result<()> {\n     DirBuilder::new().recursive(true).create(path.as_ref())\n }\n \n-/// Removes an existing, empty directory.\n+/// Removes an empty directory.\n ///\n /// # Platform-specific behavior\n ///\n@@ -1936,6 +1936,8 @@ pub fn create_dir_all<P: AsRef<Path>>(path: P) -> io::Result<()> {\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n+/// * `path` doesn't exist.\n+/// * `path` isn't a directory.\n /// * The user lacks permissions to remove the directory at the provided `path`.\n /// * The directory isn't empty.\n ///"}]}