{"sha": "87ace0d7200c12ae268e895ad880cf9589d1b1ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YWNlMGQ3MjAwYzEyYWUyNjhlODk1YWQ4ODBjZjk1ODlkMWIxYWM=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-02-04T02:53:09Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-02-04T02:53:09Z"}, "message": "More snap cleanup", "tree": {"sha": "d39a8a37c2dda2f19e1eb8ac727f9fe5218a2c12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d39a8a37c2dda2f19e1eb8ac727f9fe5218a2c12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87ace0d7200c12ae268e895ad880cf9589d1b1ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87ace0d7200c12ae268e895ad880cf9589d1b1ac", "html_url": "https://github.com/rust-lang/rust/commit/87ace0d7200c12ae268e895ad880cf9589d1b1ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87ace0d7200c12ae268e895ad880cf9589d1b1ac/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0648517faf1e2cf37c8b6770cbd0180a816ed9a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0648517faf1e2cf37c8b6770cbd0180a816ed9a0", "html_url": "https://github.com/rust-lang/rust/commit/0648517faf1e2cf37c8b6770cbd0180a816ed9a0"}], "stats": {"total": 42, "additions": 13, "deletions": 29}, "files": [{"sha": "5ed497f6159b01c2dd20397c6f6929437e8c9215", "filename": "src/libcompiler_builtins/lib.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87ace0d7200c12ae268e895ad880cf9589d1b1ac/src%2Flibcompiler_builtins%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ace0d7200c12ae268e895ad880cf9589d1b1ac/src%2Flibcompiler_builtins%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcompiler_builtins%2Flib.rs?ref=87ace0d7200c12ae268e895ad880cf9589d1b1ac", "patch": "@@ -544,8 +544,7 @@ pub mod reimpls {\n         const MD1 : u32 = MANTISSA_DIGITS + 1;\n         const MD2 : u32 = MANTISSA_DIGITS + 2;\n \n-        // SNAP: replace this with !0u128\n-        let negn :u128 = !0;\n+        let negn = !0u128;\n \n         if sd > MANTISSA_DIGITS {\n             a = match sd {\n@@ -579,8 +578,7 @@ pub mod reimpls {\n         const MD1 : u32 = MANTISSA_DIGITS + 1;\n         const MD2 : u32 = MANTISSA_DIGITS + 2;\n \n-        // SNAP: replace this with !0u128\n-        let negn :u128 = !0;\n+        let negn = !0u128;\n \n         if sd > MANTISSA_DIGITS {\n             a = match sd {"}, {"sha": "af4f63a05613eef94f20438b98343163cf7d0c35", "filename": "src/librustc_const_eval/eval.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/87ace0d7200c12ae268e895ad880cf9589d1b1ac/src%2Flibrustc_const_eval%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ace0d7200c12ae268e895ad880cf9589d1b1ac/src%2Flibrustc_const_eval%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Feval.rs?ref=87ace0d7200c12ae268e895ad880cf9589d1b1ac", "patch": "@@ -482,12 +482,9 @@ fn eval_const_expr_partial<'a, 'tcx>(cx: &ConstContext<'a, 'tcx>,\n                 (&LitKind::Int(I64_OVERFLOW, Signed(IntTy::I64)), _) => {\n                     return Ok(Integral(I64(i64::min_value())))\n                 },\n-                (&LitKind::Int(n, _), Some(&ty::TyInt(IntTy::I128))) |\n-                (&LitKind::Int(n, Signed(IntTy::I128)), _) => {\n-                    // SNAP: replace n in pattern with I128_OVERFLOW and remove this if.\n-                    if n == I128_OVERFLOW {\n-                        return Ok(Integral(I128(i128::min_value())))\n-                    }\n+                (&LitKind::Int(I128_OVERFLOW, _), Some(&ty::TyInt(IntTy::I128))) |\n+                (&LitKind::Int(I128_OVERFLOW, Signed(IntTy::I128)), _) => {\n+                    return Ok(Integral(I128(i128::min_value())))\n                 },\n                 (&LitKind::Int(n, _), Some(&ty::TyInt(IntTy::Is))) |\n                 (&LitKind::Int(n, Signed(IntTy::Is)), _) => {"}, {"sha": "17714f2fb2d6cd3074c460e7b6783cbdf0704ee8", "filename": "src/librustc_const_math/int.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87ace0d7200c12ae268e895ad880cf9589d1b1ac/src%2Flibrustc_const_math%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ace0d7200c12ae268e895ad880cf9589d1b1ac/src%2Flibrustc_const_math%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_math%2Fint.rs?ref=87ace0d7200c12ae268e895ad880cf9589d1b1ac", "patch": "@@ -155,13 +155,11 @@ impl ConstInt {\n             (InferSigned(a @ 0...ibounds::U8MAX), U8(_)) => U8(a as u8),\n             (InferSigned(a @ 0...ibounds::U16MAX), U16(_)) => U16(a as u16),\n             (InferSigned(a @ 0...ibounds::U32MAX), U32(_)) => U32(a as u32),\n-            // SNAP: replace with U64MAX\n-            (InferSigned(a @ 0...ibounds::I64MAX), U64(_)) => U64(a as u64),\n+            (InferSigned(a @ 0...ibounds::U64MAX), U64(_)) => U64(a as u64),\n             (InferSigned(a @ 0...ibounds::I128MAX), U128(_)) => U128(a as u128),\n             (InferSigned(a @ 0...ibounds::U16MAX), Usize(Us16(_))) => Usize(Us16(a as u16)),\n             (InferSigned(a @ 0...ibounds::U32MAX), Usize(Us32(_))) => Usize(Us32(a as u32)),\n-            // SNAP: replace with U64MAX\n-            (InferSigned(a @ 0...ibounds::I64MAX), Usize(Us64(_))) => Usize(Us64(a as u64)),\n+            (InferSigned(a @ 0...ibounds::U64MAX), Usize(Us64(_))) => Usize(Us64(a as u64)),\n             (InferSigned(_), _) => return Err(ConstMathErr::NotInRange),\n             _ => self, // already known types\n         };"}, {"sha": "b995760f5b7a3318fd1ea69da974c06e2dab7e3d", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/87ace0d7200c12ae268e895ad880cf9589d1b1ac/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ace0d7200c12ae268e895ad880cf9589d1b1ac/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=87ace0d7200c12ae268e895ad880cf9589d1b1ac", "patch": "@@ -229,15 +229,10 @@ pub fn C_integral(t: Type, u: u64, sign_extend: bool) -> ValueRef {\n     }\n }\n \n-pub fn C_big_integral(t: Type, u: u128, sign_extend: bool) -> ValueRef {\n-    if ::std::mem::size_of::<u128>() == 16 {\n-        unsafe {\n-            let words = [u as u64, u.wrapping_shr(64) as u64];\n-            llvm::LLVMConstIntOfArbitraryPrecision(t.to_ref(), 2, words.as_ptr())\n-        }\n-    } else {\n-        // SNAP: remove after snapshot\n-        C_integral(t, u as u64, sign_extend)\n+pub fn C_big_integral(t: Type, u: u128) -> ValueRef {\n+    unsafe {\n+        let words = [u as u64, u.wrapping_shr(64) as u64];\n+        llvm::LLVMConstIntOfArbitraryPrecision(t.to_ref(), 2, words.as_ptr())\n     }\n }\n "}, {"sha": "2a427da4d683e5a76ad7405835deb39de4fb1114", "filename": "src/librustc_trans/mir/constant.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87ace0d7200c12ae268e895ad880cf9589d1b1ac/src%2Flibrustc_trans%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ace0d7200c12ae268e895ad880cf9589d1b1ac/src%2Flibrustc_trans%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fconstant.rs?ref=87ace0d7200c12ae268e895ad880cf9589d1b1ac", "patch": "@@ -75,7 +75,7 @@ impl<'tcx> Const<'tcx> {\n             ConstVal::Integral(I16(v)) => C_integral(Type::i16(ccx), v as u64, true),\n             ConstVal::Integral(I32(v)) => C_integral(Type::i32(ccx), v as u64, true),\n             ConstVal::Integral(I64(v)) => C_integral(Type::i64(ccx), v as u64, true),\n-            ConstVal::Integral(I128(v)) => C_big_integral(Type::i128(ccx), v as u128, true),\n+            ConstVal::Integral(I128(v)) => C_big_integral(Type::i128(ccx), v as u128),\n             ConstVal::Integral(Isize(v)) => {\n                 let i = v.as_i64(ccx.tcx().sess.target.int_type);\n                 C_integral(Type::int(ccx), i as u64, true)\n@@ -84,7 +84,7 @@ impl<'tcx> Const<'tcx> {\n             ConstVal::Integral(U16(v)) => C_integral(Type::i16(ccx), v as u64, false),\n             ConstVal::Integral(U32(v)) => C_integral(Type::i32(ccx), v as u64, false),\n             ConstVal::Integral(U64(v)) => C_integral(Type::i64(ccx), v, false),\n-            ConstVal::Integral(U128(v)) => C_big_integral(Type::i128(ccx), v, false),\n+            ConstVal::Integral(U128(v)) => C_big_integral(Type::i128(ccx), v),\n             ConstVal::Integral(Usize(v)) => {\n                 let u = v.as_u64(ccx.tcx().sess.target.uint_type);\n                 C_integral(Type::int(ccx), u, false)"}, {"sha": "a513476d4a33a3fc2ed51dcabd072a71fe90983d", "filename": "src/test/run-pass/issue-38987.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87ace0d7200c12ae268e895ad880cf9589d1b1ac/src%2Ftest%2Frun-pass%2Fissue-38987.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87ace0d7200c12ae268e895ad880cf9589d1b1ac/src%2Ftest%2Frun-pass%2Fissue-38987.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-38987.rs?ref=87ace0d7200c12ae268e895ad880cf9589d1b1ac", "patch": "@@ -9,10 +9,6 @@\n // except according to those terms.\n #![feature(i128_type)]\n \n-// SNAP: run on all stages after snapshot, i128 currently doesn't work on stages 0 and 1\n-// ignore-stage1\n-// ignore-stage0\n-\n fn main() {\n     let _ = -0x8000_0000_0000_0000_0000_0000_0000_0000i128;\n }"}]}