{"sha": "a7f2bb634308a5f05f2af716482b67ba43701681", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZjJiYjYzNDMwOGE1ZjA1ZjJhZjcxNjQ4MmI2N2JhNDM3MDE2ODE=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-16T09:43:39Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-11-13T10:19:25Z"}, "message": "Reserve space in advance", "tree": {"sha": "9c24ac53de1323e7262ca6fa31ed15cb395b1127", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c24ac53de1323e7262ca6fa31ed15cb395b1127"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7f2bb634308a5f05f2af716482b67ba43701681", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7f2bb634308a5f05f2af716482b67ba43701681", "html_url": "https://github.com/rust-lang/rust/commit/a7f2bb634308a5f05f2af716482b67ba43701681", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7f2bb634308a5f05f2af716482b67ba43701681/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ca0b855933f4b9f72a995c81a69d7291268beca", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ca0b855933f4b9f72a995c81a69d7291268beca", "html_url": "https://github.com/rust-lang/rust/commit/2ca0b855933f4b9f72a995c81a69d7291268beca"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "fe67b905bf30f01a9b3eead31fc7cd2f5472c3ce", "filename": "compiler/rustc_ast/src/tokenstream.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7f2bb634308a5f05f2af716482b67ba43701681/compiler%2Frustc_ast%2Fsrc%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7f2bb634308a5f05f2af716482b67ba43701681/compiler%2Frustc_ast%2Fsrc%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftokenstream.rs?ref=a7f2bb634308a5f05f2af716482b67ba43701681", "patch": "@@ -221,7 +221,7 @@ impl TokenStream {\n             }\n         }\n         if let Some((pos, comma, sp)) = suggestion {\n-            let mut new_stream = vec![];\n+            let mut new_stream = Vec::with_capacity(self.0.len() + 1);\n             let parts = self.0.split_at(pos + 1);\n             new_stream.extend_from_slice(parts.0);\n             new_stream.push(comma);"}, {"sha": "88ad2706eacf5899c459935f8e1a92fe9fba9479", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a7f2bb634308a5f05f2af716482b67ba43701681/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7f2bb634308a5f05f2af716482b67ba43701681/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=a7f2bb634308a5f05f2af716482b67ba43701681", "patch": "@@ -2011,17 +2011,17 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         //\n         // For the \"output\" lifetime parameters, we just want to\n         // generate `'_`.\n-        let mut generic_args: Vec<_> = lifetime_params[..input_lifetimes_count]\n-            .iter()\n-            .map(|&(span, hir_name)| {\n+        let mut generic_args = Vec::with_capacity(lifetime_params.len());\n+        generic_args.extend(lifetime_params[..input_lifetimes_count].iter().map(\n+            |&(span, hir_name)| {\n                 // Input lifetime like `'a` or `'1`:\n                 GenericArg::Lifetime(hir::Lifetime {\n                     hir_id: self.next_id(),\n                     span,\n                     name: hir::LifetimeName::Param(hir_name),\n                 })\n-            })\n-            .collect();\n+            },\n+        ));\n         generic_args.extend(lifetime_params[input_lifetimes_count..].iter().map(|&(span, _)|\n             // Output lifetime like `'_`.\n             GenericArg::Lifetime(hir::Lifetime {"}, {"sha": "9381264f498f34938949cba477cd6c113b9d1e85", "filename": "compiler/rustc_builtin_macros/src/deriving/debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7f2bb634308a5f05f2af716482b67ba43701681/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7f2bb634308a5f05f2af716482b67ba43701681/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fdebug.rs?ref=a7f2bb634308a5f05f2af716482b67ba43701681", "patch": "@@ -66,7 +66,7 @@ fn show_substructure(cx: &mut ExtCtxt<'_>, span: Span, substr: &Substructure<'_>\n \n     let fmt = substr.nonself_args[0].clone();\n \n-    let mut stmts = vec![];\n+    let mut stmts = Vec::with_capacity(fields.len() + 2);\n     match vdata {\n         ast::VariantData::Tuple(..) | ast::VariantData::Unit(..) => {\n             // tuple struct/\"normal\" variant"}, {"sha": "02da85d25d5c552de3f232edc2ba6accb0e4380a", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7f2bb634308a5f05f2af716482b67ba43701681/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7f2bb634308a5f05f2af716482b67ba43701681/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=a7f2bb634308a5f05f2af716482b67ba43701681", "patch": "@@ -30,6 +30,8 @@ fn lint_levels(tcx: TyCtxt<'_>, cnum: CrateNum) -> LintLevelMap {\n     let mut builder = LintLevelMapBuilder { levels, tcx, store };\n     let krate = tcx.hir().krate();\n \n+    builder.levels.id_to_set.reserve(krate.exported_macros.len() + 1);\n+\n     let push = builder.levels.push(&krate.item.attrs, &store, true);\n     builder.levels.register_id(hir::CRATE_HIR_ID);\n     for macro_def in krate.exported_macros {"}]}