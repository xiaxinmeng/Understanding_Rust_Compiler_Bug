{"sha": "bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5", "node_id": "C_kwDOAAsO6NoAKGJkOGQ3ZTRhNDU0ZWE4YjM4MWMzMTA4ZmNjZGJmM2Y1NTYzZGU2ZjU", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-10-16T15:52:06Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-12-02T10:27:01Z"}, "message": "Transform const generics if the function uses rustc_legacy_const_generics", "tree": {"sha": "495f01ad33aa3a6dd1f486955c8971e62cdacee6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/495f01ad33aa3a6dd1f486955c8971e62cdacee6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5", "html_url": "https://github.com/rust-lang/rust/commit/bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9981e56d3b820f429fac62b4ff916f2a871340b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9981e56d3b820f429fac62b4ff916f2a871340b4", "html_url": "https://github.com/rust-lang/rust/commit/9981e56d3b820f429fac62b4ff916f2a871340b4"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "440ac5b1b41fc46d578733cc8e5bc132e31ee9dd", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5", "patch": "@@ -749,11 +749,42 @@ fn clean_fn_or_proc_macro(\n                 } else {\n                     hir::Constness::NotConst\n                 };\n+            clean_fn_decl_legacy_const_generics(&mut func, attrs);\n             FunctionItem(func)\n         }\n     }\n }\n \n+/// This is needed to make it more \"readable\" when documenting functions using\n+/// `rustc_legacy_const_generics`. More information in\n+/// <https://github.com/rust-lang/rust/issues/83167>.\n+fn clean_fn_decl_legacy_const_generics(func: &mut Function, attrs: &[ast::Attribute]) {\n+    for meta_item_list in attrs\n+        .iter()\n+        .filter(|a| a.has_name(sym::rustc_legacy_const_generics))\n+        .filter_map(|a| a.meta_item_list())\n+    {\n+        for (pos, literal) in meta_item_list.iter().filter_map(|meta| meta.literal()).enumerate() {\n+            match literal.kind {\n+                ast::LitKind::Int(a, _) => {\n+                    let gen = func.generics.params.remove(0);\n+                    if let GenericParamDef { name, kind: GenericParamDefKind::Const { ty, .. } } =\n+                        gen\n+                    {\n+                        func.decl\n+                            .inputs\n+                            .values\n+                            .insert(a as _, Argument { name, type_: *ty, is_const: true });\n+                    } else {\n+                        panic!(\"unexpected non const in position {}\", pos);\n+                    }\n+                }\n+                _ => panic!(\"invalid arg index\"),\n+            }\n+        }\n+    }\n+}\n+\n impl<'a> Clean<Function> for (&'a hir::FnSig<'a>, &'a hir::Generics<'a>, hir::BodyId) {\n     fn clean(&self, cx: &mut DocContext<'_>) -> Function {\n         let (generics, decl) = enter_impl_trait(cx, |cx| {\n@@ -779,7 +810,7 @@ impl<'a> Clean<Arguments> for (&'a [hir::Ty<'a>], &'a [Ident]) {\n                     if name.is_empty() {\n                         name = kw::Underscore;\n                     }\n-                    Argument { name, type_: ty.clean(cx) }\n+                    Argument { name, type_: ty.clean(cx), is_const: false }\n                 })\n                 .collect(),\n         }\n@@ -798,6 +829,7 @@ impl<'a> Clean<Arguments> for (&'a [hir::Ty<'a>], hir::BodyId) {\n                 .map(|(i, ty)| Argument {\n                     name: name_from_pat(body.params[i].pat),\n                     type_: ty.clean(cx),\n+                    is_const: false,\n                 })\n                 .collect(),\n         }\n@@ -828,6 +860,7 @@ impl<'tcx> Clean<FnDecl> for (DefId, ty::PolyFnSig<'tcx>) {\n                     .map(|t| Argument {\n                         type_: t.clean(cx),\n                         name: names.next().map_or(kw::Empty, |i| i.name),\n+                        is_const: false,\n                     })\n                     .collect(),\n             },"}, {"sha": "a5fd691d5ed2ae1fa5f406e8abcd3c43994e008d", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5", "patch": "@@ -1353,6 +1353,9 @@ crate struct Arguments {\n crate struct Argument {\n     crate type_: Type,\n     crate name: Symbol,\n+    /// This field is used to represent \"const\" arguments from the `rustc_legacy_const_generics`\n+    /// feature. More information in <https://github.com/rust-lang/rust/issues/83167>.\n+    crate is_const: bool,\n }\n \n #[derive(Clone, PartialEq, Debug)]"}, {"sha": "80a816ad46a7c16b623d0470210bb6dd100d9dea", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=bd8d7e4a454ea8b381c3108fccdbf3f5563de6f5", "patch": "@@ -1177,6 +1177,10 @@ impl clean::FnDecl {\n                     args.push_str(\" <br>\");\n                     args_plain.push(' ');\n                 }\n+                if input.is_const {\n+                    args.push_str(\"const \");\n+                    args_plain.push_str(\"const \");\n+                }\n                 if !input.name.is_empty() {\n                     args.push_str(&format!(\"{}: \", input.name));\n                     args_plain.push_str(&format!(\"{}: \", input.name));"}]}