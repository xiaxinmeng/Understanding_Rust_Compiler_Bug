{"sha": "3aa0a14af0521dd8d2383bba9a14bc4cf5e1aa63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYTBhMTRhZjA1MjFkZDhkMjM4M2JiYTlhMTRiYzRjZjVlMWFhNjM=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2014-08-24T10:26:45Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2014-08-24T10:26:45Z"}, "message": "doc: remove trailing spaces from Guide", "tree": {"sha": "c61d05adabe5590ad4c2d7e6f5260228e783d97f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c61d05adabe5590ad4c2d7e6f5260228e783d97f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3aa0a14af0521dd8d2383bba9a14bc4cf5e1aa63", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3aa0a14af0521dd8d2383bba9a14bc4cf5e1aa63", "html_url": "https://github.com/rust-lang/rust/commit/3aa0a14af0521dd8d2383bba9a14bc4cf5e1aa63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3aa0a14af0521dd8d2383bba9a14bc4cf5e1aa63/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16d538cba0cc5b5830e7c17663e985d13ece8e0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/16d538cba0cc5b5830e7c17663e985d13ece8e0c", "html_url": "https://github.com/rust-lang/rust/commit/16d538cba0cc5b5830e7c17663e985d13ece8e0c"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "bff0a34032a6a23f7fb9cee03796e58dc25d534c", "filename": "src/doc/guide.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3aa0a14af0521dd8d2383bba9a14bc4cf5e1aa63/src%2Fdoc%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/3aa0a14af0521dd8d2383bba9a14bc4cf5e1aa63/src%2Fdoc%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide.md?ref=3aa0a14af0521dd8d2383bba9a14bc4cf5e1aa63", "patch": "@@ -2021,7 +2021,7 @@ And trying it out:\n ```{notrust,ignore}\n $ cargo build\n    Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n-$ ./target/guessing_game \n+$ ./target/guessing_game\n Guess the number!\n The secret number is: 57\n Please input your guess.\n@@ -2292,7 +2292,7 @@ print an error message and return. Let's give this a shot:\n ```{notrust,ignore}\n $ cargo build\n    Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n-$ ./target/guessing_game \n+$ ./target/guessing_game\n Guess the number!\n The secret number is: 17\n Please input your guess.\n@@ -2358,11 +2358,11 @@ Let's try it!\n ```{notrust,ignore}\n $ cargo build\n    Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n-$ ./target/guessing_game \n+$ ./target/guessing_game\n Guess the number!\n The secret number is: 58\n Please input your guess.\n-  76  \n+  76\n You guessed: 76\n Too big!\n $\n@@ -2436,7 +2436,7 @@ that `return`? If we give a non-number answer, we'll `return` and quit. Observe:\n ```{notrust,ignore}\n $ cargo build\n    Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n-$ ./target/guessing_game \n+$ ./target/guessing_game\n Guess the number!\n The secret number is: 59\n Please input your guess.\n@@ -2569,7 +2569,7 @@ Now we should be good! Let's try:\n ```{rust,ignore}\n $ cargo build\n    Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n-$ ./target/guessing_game \n+$ ./target/guessing_game\n Guess the number!\n The secret number is: 61\n Please input your guess.\n@@ -3718,18 +3718,18 @@ That's a lot to take in. It's also one of the _most_ important concepts in\n all of Rust. Let's see this syntax in action:\n \n ```{rust}\n-{ \n+{\n     let x = 5i; // x is the owner of this integer, which is memory on the stack.\n \n     // other code here...\n-   \n+\n } // privilege 1: when x goes out of scope, this memory is deallocated\n \n /// this function borrows an integer. It's given back automatically when the\n /// function returns.\n-fn foo(x: &int) -> &int { x } \n+fn foo(x: &int) -> &int { x }\n \n-{ \n+{\n     let x = 5i; // x is the owner of this integer, which is memory on the stack.\n \n     // privilege 2: you may lend that resource, to as many borrowers as you'd like\n@@ -3739,14 +3739,14 @@ fn foo(x: &int) -> &int { x }\n     foo(&x); // functions can borrow too!\n \n     let a = &x; // we can do this alllllll day!\n-} \n+}\n \n-{ \n+{\n     let mut x = 5i; // x is the owner of this integer, which is memory on the stack.\n \n     let y = &mut x; // privilege 3: you may lend that resource to a single borrower,\n                     // mutably\n-}   \n+}\n ```\n \n If you are a borrower, you get a few privileges as well, but must also obey a\n@@ -4535,7 +4535,7 @@ let one_to_one_hundred = range(0i, 100i).collect();\n ```\n \n As you can see, we call `collect()` on our iterator. `collect()` takes\n-as many values as the iterator will give it, and returns a collection \n+as many values as the iterator will give it, and returns a collection\n of the results. So why won't this compile? Rust can't determine what\n type of things you want to collect, and so you need to let it know.\n Here's the version that does compile:\n@@ -5508,7 +5508,7 @@ fn main() {\n }\n ```\n \n-Whew! This isn't too terrible. You can see that we still `let x = 5i`, \n+Whew! This isn't too terrible. You can see that we still `let x = 5i`,\n but then things get a little bit hairy. Three more bindings get set: a\n static format string, an argument vector, and the aruments. We then\n invoke the `println_args` function with the generated arguments."}]}