{"sha": "f5cef21569115d41171114ec07bb144a3875afc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1Y2VmMjE1NjkxMTVkNDExNzExMTRlYzA3YmIxNDRhMzg3NWFmYzM=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2017-09-27T17:29:11Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2017-10-05T02:50:53Z"}, "message": "Convert regions to IndexVec", "tree": {"sha": "e2858b6a92b01dc779a3b6c38dc8fedf5c8896ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2858b6a92b01dc779a3b6c38dc8fedf5c8896ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5cef21569115d41171114ec07bb144a3875afc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5cef21569115d41171114ec07bb144a3875afc3", "html_url": "https://github.com/rust-lang/rust/commit/f5cef21569115d41171114ec07bb144a3875afc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5cef21569115d41171114ec07bb144a3875afc3/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c5de8633c8ea5d73606103db5049529c9b5d034", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c5de8633c8ea5d73606103db5049529c9b5d034", "html_url": "https://github.com/rust-lang/rust/commit/0c5de8633c8ea5d73606103db5049529c9b5d034"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "f06441f77e2653c318c4ce45605aef7efbd314c7", "filename": "src/librustc_mir/transform/nll/mod.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f5cef21569115d41171114ec07bb144a3875afc3/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5cef21569115d41171114ec07bb144a3875afc3/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs?ref=f5cef21569115d41171114ec07bb144a3875afc3", "patch": "@@ -16,13 +16,14 @@ use rustc::mir::visit::{MutVisitor, Lookup};\n use rustc::mir::transform::{MirPass, MirSource};\n use rustc::infer::{self, InferCtxt};\n use rustc::util::nodemap::FxHashSet;\n+use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n use syntax_pos::DUMMY_SP;\n use std::collections::HashMap;\n \n #[allow(dead_code)]\n struct NLLVisitor<'a, 'gcx: 'a + 'tcx, 'tcx: 'a> {\n     lookup_map: HashMap<RegionVid, Lookup>,\n-    regions: Vec<Region>,\n+    regions: IndexVec<RegionIndex, Region>,\n     infcx: InferCtxt<'a, 'gcx, 'tcx>,\n }\n \n@@ -31,7 +32,7 @@ impl<'a, 'gcx, 'tcx> NLLVisitor<'a, 'gcx, 'tcx> {\n         NLLVisitor {\n             infcx,\n             lookup_map: HashMap::new(),\n-            regions: vec![],\n+            regions: IndexVec::new(),\n         }\n     }\n \n@@ -153,3 +154,19 @@ impl MirPass for NLL {\n struct Region {\n     points: FxHashSet<Location>,\n }\n+\n+#[derive(Copy, Clone, Hash, Eq, PartialEq, Ord, PartialOrd, Debug)]\n+pub struct RegionIndex(pub u32);\n+\n+impl Idx for RegionIndex {\n+    #[inline]\n+    fn new(idx: usize) -> Self {\n+        assert!(idx <= ::std::u32::MAX as usize);\n+        RegionIndex(idx as u32)\n+    }\n+\n+    #[inline]\n+    fn index(self) -> usize {\n+        self.0 as usize\n+    }\n+}"}]}