{"sha": "bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2", "node_id": "C_kwDOAAsO6NoAKGJiZDVkZDBmNGNmYTlhNTliMmY1NmQ2NDFkMzg4NWU5Y2MxNDNjZjI", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-10-01T10:35:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-01T10:35:15Z"}, "message": "Merge #10412\n\n10412: feat: highlight `asm!` as format string r=jonas-schievink a=jonas-schievink\n\n![screenshot-2021-10-01-12:34:31](https://user-images.githubusercontent.com/1786438/135606261-a1cb6caf-0a7f-45f7-9dde-0275370b0889.png)\r\n\r\npart of https://github.com/rust-analyzer/rust-analyzer/issues/10394\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "d46f3f29ecc0eda5e086ab4155dbe5de6e6b6fc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d46f3f29ecc0eda5e086ab4155dbe5de6e6b6fc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhVuRjCRBK7hj4Ov3rIwAAx/EIAAh6sr2ASFQotWDrEq8x7Jrq\nwa8+994metLloUrtgSYYBolXWb/NXgTR+MaiQu74mEwhC9uXQnYEGtYKodo6sWGY\n7uqBvxmZx20qOElv8M8BRbTdRu6WWOc7MvJScNFnFT8svEl4CXBlDvSchmku3OFk\nLhJqNGZBb1gN3YJek9bl9TdbbdozIdFP3tFae86kOweap7Ot2d6vRv0RqycAaoUL\nv4BCA+hzUYUX06bq+JNEQH7puwIZ346cwF4VJdW6yRUm9TPCQLLGBHAQdqvQd+Dg\nW3s35TSOe9cCoiXU+vzNgOnLvGNZ+qXpptWx3ZbHOcFc+hvUUtJS3sH31D2Omu8=\n=g+XN\n-----END PGP SIGNATURE-----\n", "payload": "tree d46f3f29ecc0eda5e086ab4155dbe5de6e6b6fc6\nparent 8b45de596f06646b13ed0fdc8b7a80a271f3b174\nparent cca6ee5757f88f7f131c6d30f2f222c6f88e1886\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1633084515 +0000\ncommitter GitHub <noreply@github.com> 1633084515 +0000\n\nMerge #10412\n\n10412: feat: highlight `asm!` as format string r=jonas-schievink a=jonas-schievink\n\n![screenshot-2021-10-01-12:34:31](https://user-images.githubusercontent.com/1786438/135606261-a1cb6caf-0a7f-45f7-9dde-0275370b0889.png)\r\n\r\npart of https://github.com/rust-analyzer/rust-analyzer/issues/10394\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2", "html_url": "https://github.com/rust-lang/rust/commit/bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b45de596f06646b13ed0fdc8b7a80a271f3b174", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b45de596f06646b13ed0fdc8b7a80a271f3b174", "html_url": "https://github.com/rust-lang/rust/commit/8b45de596f06646b13ed0fdc8b7a80a271f3b174"}, {"sha": "cca6ee5757f88f7f131c6d30f2f222c6f88e1886", "url": "https://api.github.com/repos/rust-lang/rust/commits/cca6ee5757f88f7f131c6d30f2f222c6f88e1886", "html_url": "https://github.com/rust-lang/rust/commit/cca6ee5757f88f7f131c6d30f2f222c6f88e1886"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "a4ddafbf7af4359299db81e88b7c749308509467", "filename": "crates/hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2", "patch": "@@ -267,13 +267,30 @@ fn format_args_expand(\n fn asm_expand(\n     _db: &dyn AstDatabase,\n     _id: MacroCallId,\n-    _tt: &tt::Subtree,\n+    tt: &tt::Subtree,\n ) -> ExpandResult<tt::Subtree> {\n-    // both asm and llvm_asm don't return anything, so we can expand them to nothing,\n-    // for now\n-    let expanded = quote! {\n+    // We expand all assembly snippets to `format_args!` invocations to get format syntax\n+    // highlighting for them.\n+\n+    let krate = tt::Ident { text: \"$crate\".into(), id: tt::TokenId::unspecified() };\n+\n+    let mut literals = Vec::new();\n+    for tt in tt.token_trees.chunks(2) {\n+        match tt {\n+            [tt::TokenTree::Leaf(tt::Leaf::Literal(lit))]\n+            | [tt::TokenTree::Leaf(tt::Leaf::Literal(lit)), tt::TokenTree::Leaf(tt::Leaf::Punct(tt::Punct { char: ',', id: _, spacing: _ }))] =>\n+            {\n+                let krate = krate.clone();\n+                literals.push(quote!(#krate::format_args!(#lit);));\n+            }\n+            _ => break,\n+        }\n+    }\n+\n+    let expanded = quote! {{\n+        ##literals\n         ()\n-    };\n+    }};\n     ExpandResult::ok(expanded)\n }\n "}, {"sha": "4f67c4316a4a14ada15bbf6fa1786a5b6dc7d44e", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_strings.html", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html?ref=bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2", "patch": "@@ -82,6 +82,8 @@\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">panic</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">assert</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n+<span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">asm</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">toho</span> <span class=\"brace\">{</span>\n     <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>panic<span class=\"punctuation\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"not yet implemented\"</span><span class=\"parenthesis\">)</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n@@ -142,4 +144,5 @@\n     <span class=\"macro\">assert!</span><span class=\"parenthesis\">(</span><span class=\"bool_literal\">true</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"macro\">assert!</span><span class=\"parenthesis\">(</span><span class=\"bool_literal\">true</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> asdasd\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"macro\">toho!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">fmt\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">asm!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"mov eax, </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "fd8e1a0e21d5435573a57c7b0f884004985174cc", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=bbd5dd0f4cfa9a59b2f56d641d3885e9cc143cf2", "patch": "@@ -477,6 +477,8 @@ mod panic {\n macro_rules! panic {}\n #[rustc_builtin_macro]\n macro_rules! assert {}\n+#[rustc_builtin_macro]\n+macro_rules! asm {}\n \n macro_rules! toho {\n     () => ($crate::panic!(\"not yet implemented\"));\n@@ -537,6 +539,7 @@ fn main() {\n     assert!(true, \"{}\", 1);\n     assert!(true, \"{} asdasd\", 1);\n     toho!(\"{}fmt\", 0);\n+    asm!(\"mov eax, {0}\");\n }\"#\n         .trim(),\n         expect_file![\"./test_data/highlight_strings.html\"],"}]}