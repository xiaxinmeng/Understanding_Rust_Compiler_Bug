{"sha": "307f2ddfa4d0cdbf64a4f2c756566e610853e511", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwN2YyZGRmYTRkMGNkYmY2NGE0ZjJjNzU2NTY2ZTYxMDg1M2U1MTE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-09-17T15:41:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-17T15:41:16Z"}, "message": "Rollup merge of #88899 - FabianWolff:issue-88844, r=matthewjasper\n\nDo not issue E0071 if a type error has already been reported\n\nFixes #88844. A suggested fix is already included in the error message for E0412, so with my changes, E0071 is simply not emitted anymore if the type in question is a \"type error\". This makes sense, I think, because we cannot confidently state that something is \"not a struct\" if we couldn't resolve it properly; and it's unnecessary to pollute the output with this additional error message, as it is a direct consequence of the former error.\n\nI have also addressed the issue mentioned in https://github.com/rust-lang/rust/issues/88844#issuecomment-917324856 by changing the fixed example in the documentation to more closely match the erroneous code example.", "tree": {"sha": "19202b3c2065fe4e2ea171b56b2a4ba68fda514d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19202b3c2065fe4e2ea171b56b2a4ba68fda514d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/307f2ddfa4d0cdbf64a4f2c756566e610853e511", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhRLccCRBK7hj4Ov3rIwAAZWEIAILCC89vdBUeylrmQk4ZbGJ1\nlXwhJ58cSm+VTs6SqWY15zoGUunNUPsQL5Yyn3zxBQl4w3STXmy9LtBwO3S67vT5\nK04uwuQxToYHzrCtEhh+eAvG8LodhFLxp6bZ+q775Fk5Ehvqiz54hYy1U42b11C2\nY6yEqnHGBU5q1oHEzvzZGeUZDQZeOo7cACFrJkQBreWABGmQ7S87IeokcIylt+bV\nUr2UFdh/DSl6VIf8FaV9WhUqJPjAXuWKgEaLQz5zN6qXEcpNWa4S12xwokjTncBL\nd6HJZFXPtNzoGEiRrlt40nwqz/2Pt03oM4fh4IGyxylOP348CHDKPHNh063OH6k=\n=e62u\n-----END PGP SIGNATURE-----\n", "payload": "tree 19202b3c2065fe4e2ea171b56b2a4ba68fda514d\nparent 765f1533db10a7d31b9d61d1618bf0a199d41562\nparent ab83d501a404bede933df8f33e280a7534cc71bf\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1631893276 +0200\ncommitter GitHub <noreply@github.com> 1631893276 +0200\n\nRollup merge of #88899 - FabianWolff:issue-88844, r=matthewjasper\n\nDo not issue E0071 if a type error has already been reported\n\nFixes #88844. A suggested fix is already included in the error message for E0412, so with my changes, E0071 is simply not emitted anymore if the type in question is a \"type error\". This makes sense, I think, because we cannot confidently state that something is \"not a struct\" if we couldn't resolve it properly; and it's unnecessary to pollute the output with this additional error message, as it is a direct consequence of the former error.\n\nI have also addressed the issue mentioned in https://github.com/rust-lang/rust/issues/88844#issuecomment-917324856 by changing the fixed example in the documentation to more closely match the erroneous code example.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/307f2ddfa4d0cdbf64a4f2c756566e610853e511", "html_url": "https://github.com/rust-lang/rust/commit/307f2ddfa4d0cdbf64a4f2c756566e610853e511", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/307f2ddfa4d0cdbf64a4f2c756566e610853e511/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "765f1533db10a7d31b9d61d1618bf0a199d41562", "url": "https://api.github.com/repos/rust-lang/rust/commits/765f1533db10a7d31b9d61d1618bf0a199d41562", "html_url": "https://github.com/rust-lang/rust/commit/765f1533db10a7d31b9d61d1618bf0a199d41562"}, {"sha": "ab83d501a404bede933df8f33e280a7534cc71bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab83d501a404bede933df8f33e280a7534cc71bf", "html_url": "https://github.com/rust-lang/rust/commit/ab83d501a404bede933df8f33e280a7534cc71bf"}], "stats": {"total": 68, "additions": 52, "deletions": 16}, "files": [{"sha": "a6d6d19762b58dde38260fbbfd5842a6a95d012c", "filename": "compiler/rustc_error_codes/src/error_codes/E0071.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/307f2ddfa4d0cdbf64a4f2c756566e610853e511/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0071.md", "raw_url": "https://github.com/rust-lang/rust/raw/307f2ddfa4d0cdbf64a4f2c756566e610853e511/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0071.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0071.md?ref=307f2ddfa4d0cdbf64a4f2c756566e610853e511", "patch": "@@ -15,13 +15,13 @@ form of initializer was used.\n For example, the code above can be fixed to:\n \n ```\n-enum Foo {\n-    FirstValue(i32)\n-}\n+type U32 = u32;\n+let t: U32 = 4;\n+```\n \n-fn main() {\n-    let u = Foo::FirstValue(0i32);\n+or:\n \n-    let t = 4;\n-}\n+```\n+struct U32 { value: u32 }\n+let t = U32 { value: 4 };\n ```"}, {"sha": "551522334aa00a7d9d328bdeb7a361c0f0e36854", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/307f2ddfa4d0cdbf64a4f2c756566e610853e511/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/307f2ddfa4d0cdbf64a4f2c756566e610853e511/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=307f2ddfa4d0cdbf64a4f2c756566e610853e511", "patch": "@@ -532,15 +532,25 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n             Some((variant, ty))\n         } else {\n-            struct_span_err!(\n-                self.tcx.sess,\n-                path_span,\n-                E0071,\n-                \"expected struct, variant or union type, found {}\",\n-                ty.sort_string(self.tcx)\n-            )\n-            .span_label(path_span, \"not a struct\")\n-            .emit();\n+            match ty.kind() {\n+                ty::Error(_) => {\n+                    // E0071 might be caused by a spelling error, which will have\n+                    // already caused an error message and probably a suggestion\n+                    // elsewhere. Refrain from emitting more unhelpful errors here\n+                    // (issue #88844).\n+                }\n+                _ => {\n+                    struct_span_err!(\n+                        self.tcx.sess,\n+                        path_span,\n+                        E0071,\n+                        \"expected struct, variant or union type, found {}\",\n+                        ty.sort_string(self.tcx)\n+                    )\n+                    .span_label(path_span, \"not a struct\")\n+                    .emit();\n+                }\n+            }\n             None\n         }\n     }"}, {"sha": "116c75aabdbdf4ed02f7322f7e8302c21480852f", "filename": "src/test/ui/typeck/issue-88844.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/307f2ddfa4d0cdbf64a4f2c756566e610853e511/src%2Ftest%2Fui%2Ftypeck%2Fissue-88844.rs", "raw_url": "https://github.com/rust-lang/rust/raw/307f2ddfa4d0cdbf64a4f2c756566e610853e511/src%2Ftest%2Fui%2Ftypeck%2Fissue-88844.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-88844.rs?ref=307f2ddfa4d0cdbf64a4f2c756566e610853e511", "patch": "@@ -0,0 +1,14 @@\n+// Regression test for #88844.\n+\n+struct Struct { value: i32 }\n+//~^ NOTE: similarly named struct `Struct` defined here\n+\n+impl Stuct {\n+//~^ ERROR: cannot find type `Stuct` in this scope [E0412]\n+//~| HELP: a struct with a similar name exists\n+    fn new() -> Self {\n+        Self { value: 42 }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "90bba90be346c3ecfadeb8f7cf4802bd4eafccca", "filename": "src/test/ui/typeck/issue-88844.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/307f2ddfa4d0cdbf64a4f2c756566e610853e511/src%2Ftest%2Fui%2Ftypeck%2Fissue-88844.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/307f2ddfa4d0cdbf64a4f2c756566e610853e511/src%2Ftest%2Fui%2Ftypeck%2Fissue-88844.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-88844.stderr?ref=307f2ddfa4d0cdbf64a4f2c756566e610853e511", "patch": "@@ -0,0 +1,12 @@\n+error[E0412]: cannot find type `Stuct` in this scope\n+  --> $DIR/issue-88844.rs:6:6\n+   |\n+LL | struct Struct { value: i32 }\n+   | ------------- similarly named struct `Struct` defined here\n+...\n+LL | impl Stuct {\n+   |      ^^^^^ help: a struct with a similar name exists: `Struct`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0412`."}]}