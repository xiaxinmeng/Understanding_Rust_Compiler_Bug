{"sha": "33223fdd76e462456d6364da493b48b968036e6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMjIzZmRkNzZlNDYyNDU2ZDYzNjRkYTQ5M2I0OGI5NjgwMzZlNmU=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-12-17T07:43:58Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-12-17T07:43:58Z"}, "message": "Allow compiletest to see symlinked targets.", "tree": {"sha": "8ecbd8dfd3859ec13ed0a83779c06981cc3ed64f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ecbd8dfd3859ec13ed0a83779c06981cc3ed64f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33223fdd76e462456d6364da493b48b968036e6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33223fdd76e462456d6364da493b48b968036e6e", "html_url": "https://github.com/rust-lang/rust/commit/33223fdd76e462456d6364da493b48b968036e6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33223fdd76e462456d6364da493b48b968036e6e/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bad50e11472339d3477c605adb90034c476c8b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bad50e11472339d3477c605adb90034c476c8b8", "html_url": "https://github.com/rust-lang/rust/commit/3bad50e11472339d3477c605adb90034c476c8b8"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "ff96cf3c6801d120200c58062235e54bf2fa4f08", "filename": "tests/compiletest.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/33223fdd76e462456d6364da493b48b968036e6e/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33223fdd76e462456d6364da493b48b968036e6e/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=33223fdd76e462456d6364da493b48b968036e6e", "patch": "@@ -38,15 +38,8 @@ fn miri_pass(path: &str, target: &str) {\n \n fn for_all_targets<F: FnMut(String)>(sysroot: &str, mut f: F) {\n     for target in std::fs::read_dir(format!(\"{}/lib/rustlib/\", sysroot)).unwrap() {\n-        let target = target.unwrap();\n-        if !target.metadata().unwrap().is_dir() {\n-            continue;\n-        }\n-        let target = target.file_name().into_string().unwrap();\n-        match &*target {\n-            \"etc\" | \"src\" => continue,\n-            _ => {},\n-        }\n+        let target = target.unwrap().file_name().into_string().unwrap();\n+        if !target.contains(\"-\") { continue; }\n         let stderr = std::io::stderr();\n         writeln!(stderr.lock(), \"running tests for target {}\", target).unwrap();\n         f(target);"}]}