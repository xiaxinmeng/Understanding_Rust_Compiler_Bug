{"sha": "f150ab3277c5ce2b154201e2205cd2e10cb8eb36", "node_id": "C_kwDOAAsO6NoAKGYxNTBhYjMyNzdjNWNlMmIxNTQyMDFlMjIwNWNkMmUxMGNiOGViMzY", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-10-18T21:11:46Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-10-18T21:11:46Z"}, "message": "Improve code generating inline ASM", "tree": {"sha": "f624fade84a9b77009405296f58f9161431b19f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f624fade84a9b77009405296f58f9161431b19f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f150ab3277c5ce2b154201e2205cd2e10cb8eb36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f150ab3277c5ce2b154201e2205cd2e10cb8eb36", "html_url": "https://github.com/rust-lang/rust/commit/f150ab3277c5ce2b154201e2205cd2e10cb8eb36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f150ab3277c5ce2b154201e2205cd2e10cb8eb36/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5484c131a5edbaee9a88bb4c7e9f14cced5afc8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5484c131a5edbaee9a88bb4c7e9f14cced5afc8d", "html_url": "https://github.com/rust-lang/rust/commit/5484c131a5edbaee9a88bb4c7e9f14cced5afc8d"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "6dea20e40081e369c7db6fc7ab4b4457bc0545b4", "filename": "src/asm.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f150ab3277c5ce2b154201e2205cd2e10cb8eb36/src%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f150ab3277c5ce2b154201e2205cd2e10cb8eb36/src%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fasm.rs?ref=f150ab3277c5ce2b154201e2205cd2e10cb8eb36", "patch": "@@ -706,7 +706,10 @@ impl<'gcc, 'tcx> AsmMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n             && options.contains(InlineAsmOptions::ATT_SYNTAX);\n \n         // Build the template string\n-        let mut template_str = String::new();\n+        let mut template_str = \".pushsection .text\\n\".to_owned();\n+        if att_dialect {\n+            template_str.push_str(\".att_syntax\\n\");\n+        }\n         for piece in template {\n             match *piece {\n                 InlineAsmTemplatePiece::String(ref string) => {\n@@ -754,15 +757,11 @@ impl<'gcc, 'tcx> AsmMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n             }\n         }\n \n-        let template_str =\n-            if att_dialect {\n-                format!(\".att_syntax\\n\\t{}\\n\\t.intel_syntax noprefix\", template_str)\n-            }\n-            else {\n-                template_str\n-            };\n+        if att_dialect {\n+            template_str.push_str(\"\\n\\t.intel_syntax noprefix\");\n+        }\n         // NOTE: seems like gcc will put the asm in the wrong section, so set it to .text manually.\n-        let template_str = format!(\".pushsection .text\\n{}\\n.popsection\", template_str);\n+        template_str.push_str(\"\\n.popsection\");\n         self.context.add_top_level_asm(None, &template_str);\n     }\n }"}]}