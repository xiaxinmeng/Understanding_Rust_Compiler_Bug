{"sha": "5d1dae83a12dadcb72d4d3b7010f26250a88c5c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMWRhZTgzYTEyZGFkY2I3MmQ0ZDNiNzAxMGYyNjI1MGE4OGM1Yzc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-09T13:16:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-09T15:53:35Z"}, "message": "Switch to absolute offsets for extend comment word", "tree": {"sha": "fbe584528e9791f9f5034bf3ab6871410814bbd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbe584528e9791f9f5034bf3ab6871410814bbd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d1dae83a12dadcb72d4d3b7010f26250a88c5c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d1dae83a12dadcb72d4d3b7010f26250a88c5c7", "html_url": "https://github.com/rust-lang/rust/commit/5d1dae83a12dadcb72d4d3b7010f26250a88c5c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d1dae83a12dadcb72d4d3b7010f26250a88c5c7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91f99920bdafad7108211b408b957894bf9d4a38", "url": "https://api.github.com/repos/rust-lang/rust/commits/91f99920bdafad7108211b408b957894bf9d4a38", "html_url": "https://github.com/rust-lang/rust/commit/91f99920bdafad7108211b408b957894bf9d4a38"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "ab03a717ed41e0e188e9c26b301b64340d5c0062", "filename": "crates/ra_editor/src/extend_selection.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5d1dae83a12dadcb72d4d3b7010f26250a88c5c7/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d1dae83a12dadcb72d4d3b7010f26250a88c5c7/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fextend_selection.rs?ref=5d1dae83a12dadcb72d4d3b7010f26250a88c5c7", "patch": "@@ -43,17 +43,17 @@ pub(crate) fn extend(root: SyntaxNodeRef, range: TextRange) -> Option<TextRange>\n }\n \n fn extend_single_word_in_comment(leaf: SyntaxNodeRef, offset: TextUnit) -> Option<TextRange> {\n-    let text : &str = leaf.leaf_text()?;\n+    let text: &str = leaf.leaf_text()?;\n     let cursor_position: u32 = (offset - leaf.range().start()).into();\n \n     let (before, after) = text.split_at(cursor_position as usize);\n     let start_idx = before.rfind(char::is_whitespace)? as u32;\n     let end_idx = after.find(char::is_whitespace)? as u32;\n \n-    let from : TextUnit = (start_idx + 1).into();\n-    let to : TextUnit = (cursor_position + end_idx).into();\n+    let from: TextUnit = (start_idx + 1).into();\n+    let to: TextUnit = (cursor_position + end_idx).into();\n \n-    Some(TextRange::from_to(from, to))\n+    Some(TextRange::from_to(from, to) + leaf.range().start())\n }\n \n fn extend_ws(root: SyntaxNodeRef, ws: SyntaxNodeRef, offset: TextUnit) -> TextRange {\n@@ -219,5 +219,14 @@ fn main() { foo+<|>bar;}\n             r#\"// foo bar b<|>az quxx\"#,\n             &[\"baz\", \"// foo bar baz quxx\"]\n         );\n+        do_check(r#\"\n+impl S {\n+    fn foo() {\n+        // hel<|>lo world\n+    }\n+}\n+        \"#,\n+            &[\"hello\", \"// hello world\"]\n+        );\n     }\n }"}]}