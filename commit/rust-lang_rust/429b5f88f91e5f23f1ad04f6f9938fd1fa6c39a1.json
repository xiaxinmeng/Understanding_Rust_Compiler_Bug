{"sha": "429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyOWI1Zjg4ZjkxZTVmMjNmMWFkMDRmNmY5OTM4ZmQxZmE2YzM5YTE=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2013-08-22T04:29:23Z"}, "committer": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2013-08-22T23:31:58Z"}, "message": "std: rename tmp file paths to go into ./tmp folder in builddir", "tree": {"sha": "b21d1364643159809751f84d795bee4735dfc0e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b21d1364643159809751f84d795bee4735dfc0e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1", "html_url": "https://github.com/rust-lang/rust/commit/429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13eb259a091c373393d996596178f145579c9d7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/13eb259a091c373393d996596178f145579c9d7e", "html_url": "https://github.com/rust-lang/rust/commit/13eb259a091c373393d996596178f145579c9d7e"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "c4ec19b6d27a8ab85a72a9d19c1a8ba641f4c2b5", "filename": "src/libstd/rt/io/file.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1/src%2Flibstd%2Frt%2Fio%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1/src%2Flibstd%2Frt%2Fio%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Ffile.rs?ref=429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1", "patch": "@@ -192,7 +192,7 @@ impl Seek for FileStream {\n fn file_test_smoke_test_impl() {\n     do run_in_newsched_task {\n         let message = \"it's alright. have a good time\";\n-        let filename = &Path(\"./rt_io_file_test.txt\");\n+        let filename = &Path(\"./tmp/file_rt_io_file_test.txt\");\n         {\n             let mut write_stream = FileStream::open(filename, Create, ReadWrite).unwrap();\n             write_stream.write(message.as_bytes());\n@@ -218,7 +218,7 @@ fn file_test_io_smoke_test() {\n \n fn file_test_invalid_path_opened_without_create_should_raise_condition_impl() {\n     do run_in_newsched_task {\n-        let filename = &Path(\"./file_that_does_not_exist.txt\");\n+        let filename = &Path(\"./tmp/file_that_does_not_exist.txt\");\n         let mut called = false;\n         do io_error::cond.trap(|_| {\n             called = true;\n@@ -236,7 +236,7 @@ fn file_test_io_invalid_path_opened_without_create_should_raise_condition() {\n \n fn file_test_unlinking_invalid_path_should_raise_condition_impl() {\n     do run_in_newsched_task {\n-        let filename = &Path(\"./another_file_that_does_not_exist.txt\");\n+        let filename = &Path(\"./tmp/file_another_file_that_does_not_exist.txt\");\n         let mut called = false;\n         do io_error::cond.trap(|_| {\n             called = true;\n@@ -256,7 +256,7 @@ fn file_test_io_non_positional_read_impl() {\n         use str;\n         let message = \"ten-four\";\n         let mut read_mem = [0, .. 8];\n-        let filename = &Path(\"./rt_io_file_test_positional.txt\");\n+        let filename = &Path(\"./tmp/file_rt_io_file_test_positional.txt\");\n         {\n             let mut rw_stream = FileStream::open(filename, Create, ReadWrite).unwrap();\n             rw_stream.write(message.as_bytes());\n@@ -291,7 +291,7 @@ fn file_test_io_seeking_impl() {\n         let set_cursor = 4 as u64;\n         let mut tell_pos_pre_read;\n         let mut tell_pos_post_read;\n-        let filename = &Path(\"./rt_io_file_test_seeking.txt\");\n+        let filename = &Path(\"./tmp/file_rt_io_file_test_seeking.txt\");\n         {\n             let mut rw_stream = FileStream::open(filename, Create, ReadWrite).unwrap();\n             rw_stream.write(message.as_bytes());\n@@ -324,7 +324,7 @@ fn file_test_io_seek_and_write_impl() {\n         let final_msg =     \"foo-the-bar!!\";\n         let seek_idx = 3;\n         let mut read_mem = [0, .. 13];\n-        let filename = &Path(\"./rt_io_file_test_seek_and_write.txt\");\n+        let filename = &Path(\"./tmp/file_rt_io_file_test_seek_and_write.txt\");\n         {\n             let mut rw_stream = FileStream::open(filename, Create, ReadWrite).unwrap();\n             rw_stream.write(initial_msg.as_bytes());\n@@ -354,7 +354,7 @@ fn file_test_io_seek_shakedown_impl() {\n         let chunk_two = \"asdf\";\n         let chunk_three = \"zxcv\";\n         let mut read_mem = [0, .. 4];\n-        let filename = &Path(\"./rt_io_file_test_seek_shakedown.txt\");\n+        let filename = &Path(\"./tmp/file_rt_io_file_test_seek_shakedown.txt\");\n         {\n             let mut rw_stream = FileStream::open(filename, Create, ReadWrite).unwrap();\n             rw_stream.write(initial_msg.as_bytes());"}, {"sha": "6abc21219e977f953417720eda7234e4559f37d9", "filename": "src/libstd/rt/uv/file.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1/src%2Flibstd%2Frt%2Fuv%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1/src%2Flibstd%2Frt%2Fuv%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Ffile.rs?ref=429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1", "patch": "@@ -281,7 +281,7 @@ mod test {\n                 // these aren't defined in std::libc :(\n                 //map_mode(S_IRGRP) |\n                 //map_mode(S_IROTH);\n-            let path_str = \"./file_full_simple.txt\";\n+            let path_str = \"./tmp/file_full_simple.txt\";\n             let write_val = \"hello\".as_bytes().to_owned();\n             let write_buf  = slice_to_uv_buf(write_val);\n             let write_buf_ptr: *Buf = &write_buf;\n@@ -352,7 +352,7 @@ mod test {\n                 S_IRUSR;\n                 //S_IRGRP |\n                 //S_IROTH;\n-            let path_str = \"./file_full_simple_sync.txt\";\n+            let path_str = \"./tmp/file_full_simple_sync.txt\";\n             let write_val = \"hello\".as_bytes().to_owned();\n             let write_buf = slice_to_uv_buf(write_val);\n             // open/create"}, {"sha": "fa5b49432976fb628c27cfac1e5ac9d030d8abea", "filename": "src/libstd/rt/uv/uvio.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1/src%2Flibstd%2Frt%2Fuv%2Fuvio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1/src%2Flibstd%2Frt%2Fuv%2Fuvio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fuvio.rs?ref=429b5f88f91e5f23f1ad04f6f9938fd1fa6c39a1", "patch": "@@ -1711,7 +1711,7 @@ fn file_test_uvio_full_simple_impl() {\n         let ro_flags = O_RDONLY;\n         let write_val = \"hello uvio!\";\n         let mode = S_IWUSR | S_IRUSR;\n-        let path = \"./file_test_uvio_full.txt\";\n+        let path = \"./tmp/file_test_uvio_full.txt\";\n         {\n             let mut fd = (*io).fs_open(&Path(path), create_flags as int, mode as int).unwrap();\n             let write_buf = write_val.as_bytes();"}]}