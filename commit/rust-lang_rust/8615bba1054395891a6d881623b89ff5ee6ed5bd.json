{"sha": "8615bba1054395891a6d881623b89ff5ee6ed5bd", "node_id": "C_kwDOAAsO6NoAKDg2MTViYmExMDU0Mzk1ODkxYTZkODgxNjIzYjg5ZmY1ZWU2ZWQ1YmQ", "commit": {"author": {"name": "Daniel Eades", "email": "danieleades@hotmail.com", "date": "2022-12-30T08:45:08Z"}, "committer": {"name": "Daniel Eades", "email": "danieleades@hotmail.com", "date": "2023-01-02T15:02:54Z"}, "message": "use 'unwrap_or_default'", "tree": {"sha": "2c546bb4f6b973bd54e70e61b91a906b6f3cd6a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c546bb4f6b973bd54e70e61b91a906b6f3cd6a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8615bba1054395891a6d881623b89ff5ee6ed5bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8615bba1054395891a6d881623b89ff5ee6ed5bd", "html_url": "https://github.com/rust-lang/rust/commit/8615bba1054395891a6d881623b89ff5ee6ed5bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8615bba1054395891a6d881623b89ff5ee6ed5bd/comments", "author": {"login": "danieleades", "id": 33452915, "node_id": "MDQ6VXNlcjMzNDUyOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/33452915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danieleades", "html_url": "https://github.com/danieleades", "followers_url": "https://api.github.com/users/danieleades/followers", "following_url": "https://api.github.com/users/danieleades/following{/other_user}", "gists_url": "https://api.github.com/users/danieleades/gists{/gist_id}", "starred_url": "https://api.github.com/users/danieleades/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danieleades/subscriptions", "organizations_url": "https://api.github.com/users/danieleades/orgs", "repos_url": "https://api.github.com/users/danieleades/repos", "events_url": "https://api.github.com/users/danieleades/events{/privacy}", "received_events_url": "https://api.github.com/users/danieleades/received_events", "type": "User", "site_admin": false}, "committer": {"login": "danieleades", "id": 33452915, "node_id": "MDQ6VXNlcjMzNDUyOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/33452915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danieleades", "html_url": "https://github.com/danieleades", "followers_url": "https://api.github.com/users/danieleades/followers", "following_url": "https://api.github.com/users/danieleades/following{/other_user}", "gists_url": "https://api.github.com/users/danieleades/gists{/gist_id}", "starred_url": "https://api.github.com/users/danieleades/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danieleades/subscriptions", "organizations_url": "https://api.github.com/users/danieleades/orgs", "repos_url": "https://api.github.com/users/danieleades/repos", "events_url": "https://api.github.com/users/danieleades/events{/privacy}", "received_events_url": "https://api.github.com/users/danieleades/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efd2c20e96bfcd2b988dd261f882d1405fc2361d", "url": "https://api.github.com/repos/rust-lang/rust/commits/efd2c20e96bfcd2b988dd261f882d1405fc2361d", "html_url": "https://github.com/rust-lang/rust/commit/efd2c20e96bfcd2b988dd261f882d1405fc2361d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e5f1a5ebb20e7ff0fe1e5433d632a63e094eb879", "filename": "crates/hir-expand/src/builtin_fn_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8615bba1054395891a6d881623b89ff5ee6ed5bd/crates%2Fhir-expand%2Fsrc%2Fbuiltin_fn_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8615bba1054395891a6d881623b89ff5ee6ed5bd/crates%2Fhir-expand%2Fsrc%2Fbuiltin_fn_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Fbuiltin_fn_macro.rs?ref=8615bba1054395891a6d881623b89ff5ee6ed5bd", "patch": "@@ -449,7 +449,7 @@ fn concat_bytes_expand(\n                 match token.kind() {\n                     syntax::SyntaxKind::BYTE => bytes.push(token.text().to_string()),\n                     syntax::SyntaxKind::BYTE_STRING => {\n-                        let components = unquote_byte_string(lit).unwrap_or_else(Vec::new);\n+                        let components = unquote_byte_string(lit).unwrap_or_default();\n                         components.into_iter().for_each(|x| bytes.push(x.to_string()));\n                     }\n                     _ => {"}]}