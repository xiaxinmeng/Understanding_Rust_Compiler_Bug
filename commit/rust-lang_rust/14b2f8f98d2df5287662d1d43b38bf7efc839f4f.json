{"sha": "14b2f8f98d2df5287662d1d43b38bf7efc839f4f", "node_id": "C_kwDOAAsO6NoAKDE0YjJmOGY5OGQyZGY1Mjg3NjYyZDFkNDNiMzhiZjdlZmM4MzlmNGY", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-07-02T17:38:23Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-07-02T17:38:50Z"}, "message": "Add code to print clif ir on panics during define_function", "tree": {"sha": "e03788e4d0073609fb4e1df47bf342042b0e0172", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e03788e4d0073609fb4e1df47bf342042b0e0172"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14b2f8f98d2df5287662d1d43b38bf7efc839f4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14b2f8f98d2df5287662d1d43b38bf7efc839f4f", "html_url": "https://github.com/rust-lang/rust/commit/14b2f8f98d2df5287662d1d43b38bf7efc839f4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14b2f8f98d2df5287662d1d43b38bf7efc839f4f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45b6cd6a8a2a3b364d22d4fabc0d72f9e37e3e50", "url": "https://api.github.com/repos/rust-lang/rust/commits/45b6cd6a8a2a3b364d22d4fabc0d72f9e37e3e50", "html_url": "https://github.com/rust-lang/rust/commit/45b6cd6a8a2a3b364d22d4fabc0d72f9e37e3e50"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "bdcf2f806eb09cc562159bc9b3edc4e523a3f852", "filename": "src/base.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/14b2f8f98d2df5287662d1d43b38bf7efc839f4f/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14b2f8f98d2df5287662d1d43b38bf7efc839f4f/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=14b2f8f98d2df5287662d1d43b38bf7efc839f4f", "patch": "@@ -175,10 +175,37 @@ fn compile_fn<'tcx>(\n         );\n     });\n \n+    #[cfg(any())] // This is never true\n+    let _clif_guard = {\n+        use std::fmt::Write;\n+\n+        let func_clone = context.func.clone();\n+        let clif_comments_clone = clif_comments.clone();\n+        let mut clif = String::new();\n+        for flag in module.isa().flags().iter() {\n+            writeln!(clif, \"set {}\", flag).unwrap();\n+        }\n+        write!(clif, \"target {}\", module.isa().triple().architecture.to_string()).unwrap();\n+        for isa_flag in module.isa().isa_flags().iter() {\n+            write!(clif, \" {}\", isa_flag).unwrap();\n+        }\n+        writeln!(clif, \"\\n\").unwrap();\n+        crate::PrintOnPanic(move || {\n+            let mut clif = clif.clone();\n+            ::cranelift_codegen::write::decorate_function(\n+                &mut &clif_comments_clone,\n+                &mut clif,\n+                &func_clone,\n+            )\n+            .unwrap();\n+            clif\n+        })\n+    };\n+\n     // Define function\n     tcx.sess.time(\"define function\", || {\n         context.want_disasm = crate::pretty_clif::should_write_ir(tcx);\n-        module.define_function(func_id, context).unwrap()\n+        module.define_function(func_id, context).unwrap();\n     });\n \n     // Write optimized function to file for debugging"}, {"sha": "1d1ec21680e30a7dc981c262b4fc7b172b12a013", "filename": "src/pretty_clif.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/14b2f8f98d2df5287662d1d43b38bf7efc839f4f/src%2Fpretty_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14b2f8f98d2df5287662d1d43b38bf7efc839f4f/src%2Fpretty_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpretty_clif.rs?ref=14b2f8f98d2df5287662d1d43b38bf7efc839f4f", "patch": "@@ -66,7 +66,7 @@ use rustc_session::config::OutputType;\n \n use crate::prelude::*;\n \n-#[derive(Debug)]\n+#[derive(Clone, Debug)]\n pub(crate) struct CommentWriter {\n     enabled: bool,\n     global_comments: Vec<String>,\n@@ -237,6 +237,7 @@ pub(crate) fn write_clif_file<'tcx>(\n     func: &cranelift_codegen::ir::Function,\n     mut clif_comments: &CommentWriter,\n ) {\n+    // FIXME work around filename too long errors\n     write_ir_file(\n         tcx,\n         || format!(\"{}.{}.clif\", tcx.symbol_name(instance).name, postfix),"}]}