{"sha": "80510b800a633895247811049faef321bd6bff92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNTEwYjgwMGE2MzM4OTUyNDc4MTEwNDlmYWVmMzIxYmQ2YmZmOTI=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2016-08-14T17:29:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-14T17:29:51Z"}, "message": "Rollup merge of #35611 - jonathandturner:ptr-helper, r=nikomatsakis\n\nImprove &-ptr printing\n\nThis PR replaces printing `&-ptr` with a more readable description.  To do so it uses a few heuristics.\n\nIf the name of the type is unknown, too long (longer than just saying \"reference\"), or too complex (a type with explicit lifetime annotations), it will instead opt to print either \"reference\" or \"mutable reference\", depending on the mutability of the type.\n\nBefore:\n\n```\nerror[E0308]: mismatched types\n  --> src/test/compile-fail/issue-7061.rs:14:46\n   |\n14 |     fn foo(&'a mut self) -> Box<BarStruct> { self }\n   |                                              ^^^^ expected box, found &-ptr\n   |\n   = note: expected type `Box<BarStruct>`\n   = note:    found type `&'a mut BarStruct`\n\nerror: aborting due to previous error\n```\n\nAfter:\n\n```\nerror[E0308]: mismatched types\n  --> src/test/compile-fail/issue-7061.rs:14:46\n   |\n14 |     fn foo(&'a mut self) -> Box<BarStruct> { self }\n   |                                              ^^^^ expected box, found mutable reference\n   |\n   = note: expected type `Box<BarStruct>`\n   = note:    found type `&'a mut BarStruct`\n\nerror: aborting due to previous error\n```", "tree": {"sha": "d786d4926ce44aa5785c8487aacbd4fd7d4ae2ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d786d4926ce44aa5785c8487aacbd4fd7d4ae2ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80510b800a633895247811049faef321bd6bff92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80510b800a633895247811049faef321bd6bff92", "html_url": "https://github.com/rust-lang/rust/commit/80510b800a633895247811049faef321bd6bff92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80510b800a633895247811049faef321bd6bff92/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7aaa83a7d8da9fcc3f9f1e017041e5adf9919799", "url": "https://api.github.com/repos/rust-lang/rust/commits/7aaa83a7d8da9fcc3f9f1e017041e5adf9919799", "html_url": "https://github.com/rust-lang/rust/commit/7aaa83a7d8da9fcc3f9f1e017041e5adf9919799"}, {"sha": "42247372c6c507beed4d309ea5867579d5b65511", "url": "https://api.github.com/repos/rust-lang/rust/commits/42247372c6c507beed4d309ea5867579d5b65511", "html_url": "https://github.com/rust-lang/rust/commit/42247372c6c507beed4d309ea5867579d5b65511"}], "stats": {"total": 61, "additions": 39, "deletions": 22}, "files": [{"sha": "6b34c0a21988dd81ecf6246b1aeee854cab71888", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -222,7 +222,24 @@ impl<'a, 'gcx, 'lcx, 'tcx> ty::TyS<'tcx> {\n             ty::TyArray(_, n) => format!(\"array of {} elements\", n),\n             ty::TySlice(_) => \"slice\".to_string(),\n             ty::TyRawPtr(_) => \"*-ptr\".to_string(),\n-            ty::TyRef(_, _) => \"&-ptr\".to_string(),\n+            ty::TyRef(region, tymut) => {\n+                let tymut_string = tymut.to_string();\n+                if tymut_string == \"_\" ||         //unknown type name,\n+                   tymut_string.len() > 10 ||     //name longer than saying \"reference\",\n+                   region.to_string() != \"\"       //... or a complex type\n+                {\n+                    match tymut {\n+                        ty::TypeAndMut{mutbl, ..} => {\n+                            format!(\"{}reference\", match mutbl {\n+                                hir::Mutability::MutMutable => \"mutable \",\n+                                _ => \"\"\n+                            })\n+                        }\n+                    }\n+                } else {\n+                    format!(\"&{}\", tymut_string)\n+                }\n+            }\n             ty::TyFnDef(..) => format!(\"fn item\"),\n             ty::TyFnPtr(_) => \"fn pointer\".to_string(),\n             ty::TyTrait(ref inner) => {"}, {"sha": "6b468ff96620d25bf0b667d9823d4ba70b5dc964", "filename": "src/test/compile-fail/coercion-slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fcoercion-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fcoercion-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoercion-slice.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -15,5 +15,5 @@ fn main() {\n     //~^ ERROR mismatched types\n     //~| expected type `&[i32]`\n     //~| found type `[{integer}; 1]`\n-    //~| expected &-ptr, found array of 1 elements\n+    //~| expected &[i32], found array of 1 elements\n }"}, {"sha": "672ff464718f8b2a499f8bf8b8b433e92151ff66", "filename": "src/test/compile-fail/cross-borrow-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fcross-borrow-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fcross-borrow-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcross-borrow-trait.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -21,5 +21,5 @@ pub fn main() {\n     let _y: &Trait = x; //~  ERROR mismatched types\n                         //~| expected type `&Trait`\n                         //~| found type `Box<Trait>`\n-                        //~| expected &-ptr, found box\n+                        //~| expected &Trait, found box\n }"}, {"sha": "89fb1e105900d7deac59d2a03ff33f263b31f8ab", "filename": "src/test/compile-fail/destructure-trait-ref.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fdestructure-trait-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fdestructure-trait-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdestructure-trait-ref.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -42,12 +42,12 @@ fn main() {\n     //~^ ERROR mismatched types\n     //~| expected type `T`\n     //~| found type `&_`\n-    //~| expected trait T, found &-ptr\n+    //~| expected trait T, found reference\n     let &&&x = &(&1isize as &T);\n     //~^ ERROR mismatched types\n     //~| expected type `T`\n     //~| found type `&_`\n-    //~| expected trait T, found &-ptr\n+    //~| expected trait T, found reference\n     let box box x = box 1isize as Box<T>;\n     //~^ ERROR mismatched types\n     //~| expected type `T`"}, {"sha": "883c16b0895816076c8326de14e232ea9154ca74", "filename": "src/test/compile-fail/dst-bad-coercions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fdst-bad-coercions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fdst-bad-coercions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdst-bad-coercions.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -19,12 +19,12 @@ struct Foo<T: ?Sized> {\n }\n \n pub fn main() {\n-    // Test that we cannot convert from *-ptr to &-ptr\n+    // Test that we cannot convert from *-ptr to &S and &T\n     let x: *const S = &S;\n     let y: &S = x; //~ ERROR mismatched types\n     let y: &T = x; //~ ERROR mismatched types\n \n-    // Test that we cannot convert from *-ptr to &-ptr (mut version)\n+    // Test that we cannot convert from *-ptr to &S and &T (mut version)\n     let x: *mut S = &mut S;\n     let y: &S = x; //~ ERROR mismatched types\n     let y: &T = x; //~ ERROR mismatched types"}, {"sha": "276d7f7c9ed339c7646ecf2d1c8e17db16e74b3b", "filename": "src/test/compile-fail/issue-12997-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-12997-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-12997-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12997-2.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -17,4 +17,4 @@ fn bar(x: isize) { }\n //~^ ERROR mismatched types\n //~| expected type `fn(&mut __test::test::Bencher)`\n //~| found type `fn(isize) {bar}`\n-//~| expected &-ptr, found isize\n+//~| expected mutable reference, found isize"}, {"sha": "a4517e60d66e195bb61dd57492d5437da9b32227", "filename": "src/test/compile-fail/issue-16338.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-16338.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-16338.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16338.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -18,5 +18,5 @@ fn main() {\n     //~^ ERROR mismatched types\n     //~| expected type `&str`\n     //~| found type `Slice<_>`\n-    //~| expected &-ptr, found struct `Slice`\n+    //~| expected &str, found struct `Slice`\n }"}, {"sha": "1cd43cbb0f8571b250c25c31e6c7b2d0a9a75730", "filename": "src/test/compile-fail/issue-17033.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-17033.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-17033.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17033.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -12,7 +12,7 @@ fn f<'r>(p: &'r mut fn(p: &mut ())) {\n     (*p)(()) //~  ERROR mismatched types\n              //~| expected type `&mut ()`\n              //~| found type `()`\n-             //~| expected &-ptr, found ()\n+             //~| expected &mut (), found ()\n }\n \n fn main() {}"}, {"sha": "f38961c427ae9c686cb0678722bb177b157f212d", "filename": "src/test/compile-fail/issue-20225.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-20225.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-20225.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-20225.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -15,21 +15,21 @@ struct Foo;\n impl<'a, T> Fn<(&'a T,)> for Foo {\n   extern \"rust-call\" fn call(&self, (_,): (T,)) {}\n   //~^ ERROR: has an incompatible type for trait\n-  //~| expected &-ptr\n+  //~| expected reference\n }\n \n impl<'a, T> FnMut<(&'a T,)> for Foo {\n   extern \"rust-call\" fn call_mut(&mut self, (_,): (T,)) {}\n   //~^ ERROR: has an incompatible type for trait\n-  //~| expected &-ptr\n+  //~| expected reference\n }\n \n impl<'a, T> FnOnce<(&'a T,)> for Foo {\n   type Output = ();\n \n   extern \"rust-call\" fn call_once(self, (_,): (T,)) {}\n   //~^ ERROR: has an incompatible type for trait\n-  //~| expected &-ptr\n+  //~| expected reference\n }\n \n fn main() {}"}, {"sha": "6cb6bbf1893fc15b8638c09ab3c6f56011c3d22a", "filename": "src/test/compile-fail/issue-29084.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-29084.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-29084.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-29084.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -13,7 +13,7 @@ macro_rules! foo {\n         fn bar(d: u8) { }\n         bar(&mut $d);\n         //~^ ERROR mismatched types\n-        //~| expected u8, found &-ptr\n+        //~| expected u8, found &mut u8\n         //~| expected type `u8`\n         //~| found type `&mut u8`\n     }}"}, {"sha": "a1f5d74b30e3677608892c4d9457555aec1a3bbd", "filename": "src/test/compile-fail/issue-5100.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -52,7 +52,7 @@ fn main() {\n //~^ ERROR mismatched types\n //~| expected type `(bool, bool)`\n //~| found type `&_`\n-//~| expected tuple, found &-ptr\n+//~| expected tuple, found reference\n     }\n \n "}, {"sha": "1cbb7588e17df5e5fdddb3d8f0ff54f5e2608bbf", "filename": "src/test/compile-fail/issue-5500.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-5500.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-5500.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5500.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -13,5 +13,5 @@ fn main() {\n     //~^ ERROR mismatched types\n     //~| expected type `()`\n     //~| found type `&_`\n-    //~| expected (), found &-ptr\n+    //~| expected (), found reference\n }"}, {"sha": "da6f49f3efe911b73895512be3ec9f69cf2ae590", "filename": "src/test/compile-fail/issue-7061.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-7061.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-7061.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7061.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -15,7 +15,7 @@ impl<'a> BarStruct {\n     //~^ ERROR mismatched types\n     //~| expected type `Box<BarStruct>`\n     //~| found type `&'a mut BarStruct`\n-    //~| expected box, found &-ptr\n+    //~| expected box, found mutable reference\n }\n \n fn main() {}"}, {"sha": "7d9f8e90585219d750a0f18dc68a9af06b84750a", "filename": "src/test/compile-fail/issue-7867.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-7867.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fissue-7867.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7867.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -27,11 +27,11 @@ fn main() {\n         //~^ ERROR mismatched types\n         //~| expected type `&std::option::Option<{integer}>`\n         //~| found type `std::option::Option<_>`\n-        //~| expected &-ptr, found enum `std::option::Option`\n+        //~| expected reference, found enum `std::option::Option`\n         None => ()\n         //~^ ERROR mismatched types\n         //~| expected type `&std::option::Option<{integer}>`\n         //~| found type `std::option::Option<_>`\n-        //~| expected &-ptr, found enum `std::option::Option`\n+        //~| expected reference, found enum `std::option::Option`\n     }\n }"}, {"sha": "4c8800878f07df4787096e35d8d1d1429614bc9e", "filename": "src/test/compile-fail/method-self-arg-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fmethod-self-arg-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Fmethod-self-arg-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmethod-self-arg-1.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -21,7 +21,7 @@ fn main() {\n     Foo::bar(x); //~  ERROR mismatched types\n                  //~| expected type `&Foo`\n                  //~| found type `Foo`\n-                 //~| expected &-ptr, found struct `Foo`\n+                 //~| expected &Foo, found struct `Foo`\n     Foo::bar(&42); //~  ERROR mismatched types\n                       //~| expected type `&Foo`\n                       //~| found type `&{integer}`"}, {"sha": "1825ec61f1ed7d84a1edf0dfdbd065416fbcdf14", "filename": "src/test/compile-fail/overloaded-calls-bad.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Foverloaded-calls-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Foverloaded-calls-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Foverloaded-calls-bad.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -36,7 +36,7 @@ fn main() {\n         y: 3,\n     };\n     let ans = s(\"what\");    //~ ERROR mismatched types\n-    //~^ NOTE expected isize, found &-ptr\n+    //~^ NOTE expected isize, found reference\n     //~| NOTE expected type\n     //~| NOTE found type\n     let ans = s();"}, {"sha": "5d5113ce07c719f66c2cf622d259cb7498f3e845", "filename": "src/test/compile-fail/repeat_count.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80510b800a633895247811049faef321bd6bff92/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs?ref=80510b800a633895247811049faef321bd6bff92", "patch": "@@ -38,7 +38,7 @@ fn main() {\n     //~^ ERROR mismatched types\n     //~| expected type `usize`\n     //~| found type `&'static str`\n-    //~| expected usize, found &-ptr\n+    //~| expected usize, found reference\n     //~| ERROR expected `usize` for repeat count, found string literal [E0306]\n     //~| expected `usize`\n     let f = [0; -4_isize];"}]}