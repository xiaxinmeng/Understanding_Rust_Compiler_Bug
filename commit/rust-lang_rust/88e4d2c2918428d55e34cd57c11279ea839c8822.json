{"sha": "88e4d2c2918428d55e34cd57c11279ea839c8822", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZTRkMmMyOTE4NDI4ZDU1ZTM0Y2Q1N2MxMTI3OWVhODM5Yzg4MjI=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-11-19T10:13:24Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-11-19T15:58:38Z"}, "message": "rustc_trans: work around i686-pc-windows-msvc byval align LLVM bug.", "tree": {"sha": "c6efece096ff5880788ca52cdcfc75df16ad589a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6efece096ff5880788ca52cdcfc75df16ad589a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88e4d2c2918428d55e34cd57c11279ea839c8822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88e4d2c2918428d55e34cd57c11279ea839c8822", "html_url": "https://github.com/rust-lang/rust/commit/88e4d2c2918428d55e34cd57c11279ea839c8822", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88e4d2c2918428d55e34cd57c11279ea839c8822/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0812de556d81c17fcbd2613c6752fc4d04927bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0812de556d81c17fcbd2613c6752fc4d04927bb", "html_url": "https://github.com/rust-lang/rust/commit/b0812de556d81c17fcbd2613c6752fc4d04927bb"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "0bf6e84337b223e217f5d992b1f5277050b3b995", "filename": "src/librustc_trans/abi.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88e4d2c2918428d55e34cd57c11279ea839c8822/src%2Flibrustc_trans%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e4d2c2918428d55e34cd57c11279ea839c8822/src%2Flibrustc_trans%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fabi.rs?ref=88e4d2c2918428d55e34cd57c11279ea839c8822", "patch": "@@ -491,7 +491,9 @@ impl<'a, 'tcx> ArgType<'tcx> {\n              .set(ArgAttribute::NoCapture)\n              .set(ArgAttribute::NonNull);\n         attrs.pointee_size = self.layout.size;\n-        attrs.pointee_align = Some(self.layout.align);\n+        // FIXME(eddyb) We should be doing this, but at least on\n+        // i686-pc-windows-msvc, it results in wrong stack offsets.\n+        // attrs.pointee_align = Some(self.layout.align);\n \n         self.mode = PassMode::Indirect(attrs);\n     }"}, {"sha": "f8945a6ee8d93aeb0eba51b16923d601f02b0f59", "filename": "src/test/codegen/function-arguments.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88e4d2c2918428d55e34cd57c11279ea839c8822/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e4d2c2918428d55e34cd57c11279ea839c8822/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs?ref=88e4d2c2918428d55e34cd57c11279ea839c8822", "patch": "@@ -66,7 +66,7 @@ pub fn mutable_unsafe_borrow(_: &mut UnsafeInner) {\n pub fn mutable_borrow(_: &mut i32) {\n }\n \n-// CHECK: @indirect_struct(%S* noalias nocapture align 4 dereferenceable(32) %arg0)\n+// CHECK: @indirect_struct(%S* noalias nocapture dereferenceable(32) %arg0)\n #[no_mangle]\n pub fn indirect_struct(_: S) {\n }\n@@ -83,7 +83,7 @@ pub fn _box(x: Box<i32>) -> Box<i32> {\n   x\n }\n \n-// CHECK: @struct_return(%S* noalias nocapture sret align 4 dereferenceable(32))\n+// CHECK: @struct_return(%S* noalias nocapture sret dereferenceable(32))\n #[no_mangle]\n pub fn struct_return() -> S {\n   S {"}, {"sha": "dd530cf03cd41f3d0a20dd613d096827ab9564eb", "filename": "src/test/codegen/packed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e4d2c2918428d55e34cd57c11279ea839c8822/src%2Ftest%2Fcodegen%2Fpacked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e4d2c2918428d55e34cd57c11279ea839c8822/src%2Ftest%2Fcodegen%2Fpacked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fpacked.rs?ref=88e4d2c2918428d55e34cd57c11279ea839c8822", "patch": "@@ -39,7 +39,7 @@ pub struct BigPacked {\n #[no_mangle]\n pub fn call_pkd(f: fn() -> Array) -> BigPacked {\n // CHECK: [[ALLOCA:%[_a-z0-9]+]] = alloca %Array\n-// CHECK: call void %{{.*}}(%Array* noalias nocapture sret align 4 dereferenceable(32) [[ALLOCA]])\n+// CHECK: call void %{{.*}}(%Array* noalias nocapture sret dereferenceable(32) [[ALLOCA]])\n // CHECK: call void @llvm.memcpy.{{.*}}(i8* %{{.*}}, i8* %{{.*}}, i{{[0-9]+}} 32, i32 1, i1 false)\n     // check that calls whose destination is a field of a packed struct\n     // go through an alloca rather than calling the function with an"}]}