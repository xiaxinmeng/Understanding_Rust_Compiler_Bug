{"sha": "5c71352b18ee7a48e825aefd2862b8e0d16ea45b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNzEzNTJiMThlZTdhNDhlODI1YWVmZDI4NjJiOGUwZDE2ZWE0NWI=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-27T01:52:06Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-27T01:54:20Z"}, "message": "Prevent unnecessary lints from triggering", "tree": {"sha": "1499866dfcdcfb9959938d44cb8d429312777e89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1499866dfcdcfb9959938d44cb8d429312777e89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c71352b18ee7a48e825aefd2862b8e0d16ea45b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c71352b18ee7a48e825aefd2862b8e0d16ea45b", "html_url": "https://github.com/rust-lang/rust/commit/5c71352b18ee7a48e825aefd2862b8e0d16ea45b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c71352b18ee7a48e825aefd2862b8e0d16ea45b/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4918e7ad62259e4c35a0b9d6ac0f0e98e51ff7b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4918e7ad62259e4c35a0b9d6ac0f0e98e51ff7b1", "html_url": "https://github.com/rust-lang/rust/commit/4918e7ad62259e4c35a0b9d6ac0f0e98e51ff7b1"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "f2df53aee4f6891627cd1cfdf7163b92dc09c429", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5c71352b18ee7a48e825aefd2862b8e0d16ea45b/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c71352b18ee7a48e825aefd2862b8e0d16ea45b/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=5c71352b18ee7a48e825aefd2862b8e0d16ea45b", "patch": "@@ -768,12 +768,14 @@ fn check_for_loop<'tcx>(\n     body: &'tcx Expr<'_>,\n     expr: &'tcx Expr<'_>,\n ) {\n-    check_for_loop_range(cx, pat, arg, body, expr);\n+    let is_manual_memcpy_triggered = detect_manual_memcpy(cx, pat, arg, body, expr);\n+    if !is_manual_memcpy_triggered {\n+        check_for_loop_range(cx, pat, arg, body, expr);\n+        check_for_loop_explicit_counter(cx, pat, arg, body, expr);\n+    }\n     check_for_loop_arg(cx, pat, arg, expr);\n-    check_for_loop_explicit_counter(cx, pat, arg, body, expr);\n     check_for_loop_over_map_kv(cx, pat, arg, body, expr);\n     check_for_mut_range_bound(cx, arg, body);\n-    detect_manual_memcpy(cx, pat, arg, body, expr);\n     detect_same_item_push(cx, pat, arg, body, expr);\n }\n \n@@ -1152,7 +1154,7 @@ fn detect_manual_memcpy<'tcx>(\n     arg: &'tcx Expr<'_>,\n     body: &'tcx Expr<'_>,\n     expr: &'tcx Expr<'_>,\n-) {\n+) -> bool {\n     if let Some(higher::Range {\n         start: Some(start),\n         end: Some(end),\n@@ -1222,9 +1224,11 @@ fn detect_manual_memcpy<'tcx>(\n                     big_sugg,\n                     Applicability::Unspecified,\n                 );\n+                return true;\n             }\n         }\n     }\n+    false\n }\n \n // Scans the body of the for loop and determines whether lint should be given"}, {"sha": "84758275dd7475c7e29908e0a4ace275c1173da5", "filename": "tests/ui/manual_memcpy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c71352b18ee7a48e825aefd2862b8e0d16ea45b/tests%2Fui%2Fmanual_memcpy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c71352b18ee7a48e825aefd2862b8e0d16ea45b/tests%2Fui%2Fmanual_memcpy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy.rs?ref=5c71352b18ee7a48e825aefd2862b8e0d16ea45b", "patch": "@@ -115,7 +115,6 @@ pub fn manual_copy(src: &[i32], dst: &mut [i32], dst2: &mut [i32]) {\n     }\n }\n \n-#[allow(clippy::needless_range_loop, clippy::explicit_counter_loop)]\n pub fn manual_copy_with_counters(src: &[i32], dst: &mut [i32], dst2: &mut [i32]) {\n     let mut count = 0;\n     for i in 3..src.len() {"}, {"sha": "464b18984fbc557df80578f5d316328e345650d1", "filename": "tests/ui/manual_memcpy.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5c71352b18ee7a48e825aefd2862b8e0d16ea45b/tests%2Fui%2Fmanual_memcpy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c71352b18ee7a48e825aefd2862b8e0d16ea45b/tests%2Fui%2Fmanual_memcpy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy.stderr?ref=5c71352b18ee7a48e825aefd2862b8e0d16ea45b", "patch": "@@ -79,49 +79,49 @@ LL |     for i in 0..0 {\n    |              ^^^^ help: try replacing the loop by: `dst[..0].clone_from_slice(&src[..0])`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:121:14\n+  --> $DIR/manual_memcpy.rs:120:14\n    |\n LL |     for i in 3..src.len() {\n    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[3..src.len()].clone_from_slice(&src[..(src.len() - 3)])`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:127:14\n+  --> $DIR/manual_memcpy.rs:126:14\n    |\n LL |     for i in 3..src.len() {\n    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..(src.len() - 3)].clone_from_slice(&src[3..])`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:133:14\n+  --> $DIR/manual_memcpy.rs:132:14\n    |\n LL |     for i in 0..src.len() {\n    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[3..(src.len() + 3)].clone_from_slice(&src[..])`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:139:14\n+  --> $DIR/manual_memcpy.rs:138:14\n    |\n LL |     for i in 0..src.len() {\n    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[3..(src.len() + 3)])`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:145:14\n+  --> $DIR/manual_memcpy.rs:144:14\n    |\n LL |     for i in 3..(3 + src.len()) {\n    |              ^^^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[3..((3 + src.len()))].clone_from_slice(&src[..((3 + src.len()) - 3)])`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:151:14\n+  --> $DIR/manual_memcpy.rs:150:14\n    |\n LL |     for i in 5..src.len() {\n    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[5..src.len()].clone_from_slice(&src[(3 - 2)..((src.len() - 2) + 3 - 5)])`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:157:14\n+  --> $DIR/manual_memcpy.rs:156:14\n    |\n LL |     for i in 3..10 {\n    |              ^^^^^ help: try replacing the loop by: `dst[3..10].clone_from_slice(&src[5..(10 + 5 - 3)])`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:164:14\n+  --> $DIR/manual_memcpy.rs:163:14\n    |\n LL |     for i in 0..src.len() {\n    |              ^^^^^^^^^^^^\n@@ -133,13 +133,13 @@ LL |     dst2[30..(src.len() + 30)].clone_from_slice(&src[..]) {\n    |\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:174:14\n+  --> $DIR/manual_memcpy.rs:173:14\n    |\n LL |     for i in 0..1 << 1 {\n    |              ^^^^^^^^^ help: try replacing the loop by: `dst[(0 << 1)..((1 << 1) + (0 << 1))].clone_from_slice(&src[2..((1 << 1) + 2)])`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:182:14\n+  --> $DIR/manual_memcpy.rs:181:14\n    |\n LL |     for i in 0..src.len() {\n    |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`"}]}