{"sha": "5645732b041ff1f3e7cee585d454613a9e7c43f0", "node_id": "C_kwDOAAsO6NoAKDU2NDU3MzJiMDQxZmYxZjNlN2NlZTU4NWQ0NTQ2MTNhOWU3YzQzZjA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-27T00:47:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-27T00:47:10Z"}, "message": "Rollup merge of #96383 - compiler-errors:issue-96381, r=estebank\n\nFix erased region escaping into wfcheck due to #95395\n\nWe can just use `liberate_late_bound_regions` instead of `erase_late_bound_regions`... This gives us `ReEarlyBound` instead of `ReErased`, the former being something typeck actually knows how to deal with...\n\nFixes #96381\n\nSide-note: We only actually get far enough in the compiler pipeline to cause this ICE when we're invoking rustdoc. We actually abort rustc right before wfcheck because of the error that we emit (having `_` in the type signature). Why does rustdoc keep going even though we raise an error?", "tree": {"sha": "589674d090636878ff6e84c0cbe5f8f54b44f055", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/589674d090636878ff6e84c0cbe5f8f54b44f055"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5645732b041ff1f3e7cee585d454613a9e7c43f0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiaJKOCRBK7hj4Ov3rIwAAJKAIAFJ8m+/2YvXH+cAgLtYQRZCv\nNyLtONdjzoNcVcrAX1GX+T/yj0efo0KQ2JibE6iy9SLUqFZYFjlxUzXyXeVPaJgI\neyRtMWnYh4GjXzuwX9oQX/VJHM44P+lz3pnuVe5NgF4grdDNeSywtBQOlPdaBf9e\nXJcloH2+LTqnUiGKNpKn6lvQ6sgl6RWyMVju5girQBaHsJUAaAYdApnt+esU8fcF\n+pPLt1GsIW61gr7Y/b+SKYdEWx4TaNXMhFRvHJOEG1inNVLO7fho2u6q/5KSohzF\nVt6T8rApIXGqqZeIKdf3WB9nqToemNuTJzkXv1WbM46EsYO5EYTIlzZ4FqmM1+8=\n=ySsI\n-----END PGP SIGNATURE-----\n", "payload": "tree 589674d090636878ff6e84c0cbe5f8f54b44f055\nparent e63da0ba000b94c932aa6e166a02cebe9bf2c719\nparent 8a28aa48d20ac4fd64d47815b84f1daf0c62f460\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1651020430 +0200\ncommitter GitHub <noreply@github.com> 1651020430 +0200\n\nRollup merge of #96383 - compiler-errors:issue-96381, r=estebank\n\nFix erased region escaping into wfcheck due to #95395\n\nWe can just use `liberate_late_bound_regions` instead of `erase_late_bound_regions`... This gives us `ReEarlyBound` instead of `ReErased`, the former being something typeck actually knows how to deal with...\n\nFixes #96381\n\nSide-note: We only actually get far enough in the compiler pipeline to cause this ICE when we're invoking rustdoc. We actually abort rustc right before wfcheck because of the error that we emit (having `_` in the type signature). Why does rustdoc keep going even though we raise an error?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5645732b041ff1f3e7cee585d454613a9e7c43f0", "html_url": "https://github.com/rust-lang/rust/commit/5645732b041ff1f3e7cee585d454613a9e7c43f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5645732b041ff1f3e7cee585d454613a9e7c43f0/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e63da0ba000b94c932aa6e166a02cebe9bf2c719", "url": "https://api.github.com/repos/rust-lang/rust/commits/e63da0ba000b94c932aa6e166a02cebe9bf2c719", "html_url": "https://github.com/rust-lang/rust/commit/e63da0ba000b94c932aa6e166a02cebe9bf2c719"}, {"sha": "8a28aa48d20ac4fd64d47815b84f1daf0c62f460", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a28aa48d20ac4fd64d47815b84f1daf0c62f460", "html_url": "https://github.com/rust-lang/rust/commit/8a28aa48d20ac4fd64d47815b84f1daf0c62f460"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "1caf93e5fe055fef2fc7eefdc603bb18b8362209", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5645732b041ff1f3e7cee585d454613a9e7c43f0/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5645732b041ff1f3e7cee585d454613a9e7c43f0/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=5645732b041ff1f3e7cee585d454613a9e7c43f0", "patch": "@@ -2681,21 +2681,21 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         let trait_ref =\n             self.instantiate_mono_trait_ref(i.of_trait.as_ref()?, self.ast_ty_to_ty(i.self_ty));\n \n-        let x: &ty::AssocItem = tcx.associated_items(trait_ref.def_id).find_by_name_and_kind(\n+        let assoc = tcx.associated_items(trait_ref.def_id).find_by_name_and_kind(\n             tcx,\n             *ident,\n             ty::AssocKind::Fn,\n             trait_ref.def_id,\n         )?;\n \n-        let fn_sig = tcx.fn_sig(x.def_id).subst(\n+        let fn_sig = tcx.fn_sig(assoc.def_id).subst(\n             tcx,\n-            trait_ref.substs.extend_to(tcx, x.def_id, |param, _| tcx.mk_param_from_def(param)),\n+            trait_ref.substs.extend_to(tcx, assoc.def_id, |param, _| tcx.mk_param_from_def(param)),\n         );\n \n         let ty = if let Some(arg_idx) = arg_idx { fn_sig.input(arg_idx) } else { fn_sig.output() };\n \n-        Some(tcx.erase_late_bound_regions(ty))\n+        Some(tcx.liberate_late_bound_regions(fn_hir_id.expect_owner().to_def_id(), ty))\n     }\n \n     fn validate_late_bound_regions("}, {"sha": "f0f123f85a03f1ad5f1c67172b429c11a9d9c251", "filename": "src/test/rustdoc/issue-96381.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5645732b041ff1f3e7cee585d454613a9e7c43f0/src%2Ftest%2Frustdoc%2Fissue-96381.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5645732b041ff1f3e7cee585d454613a9e7c43f0/src%2Ftest%2Frustdoc%2Fissue-96381.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-96381.rs?ref=5645732b041ff1f3e7cee585d454613a9e7c43f0", "patch": "@@ -0,0 +1,16 @@\n+// should-fail\n+\n+#![allow(unused)]\n+\n+trait Foo<T>: Sized {\n+    fn bar(i: i32, t: T, s: &Self) -> (T, i32);\n+}\n+\n+impl Foo<usize> for () {\n+    fn bar(i: _, t: _, s: _) -> _ {\n+        //~^ ERROR the placeholder `_` is not allowed within types on item signatures for functions\n+        (1, 2)\n+    }\n+}\n+\n+fn main() {}"}]}