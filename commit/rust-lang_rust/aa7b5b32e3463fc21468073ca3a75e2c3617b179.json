{"sha": "aa7b5b32e3463fc21468073ca3a75e2c3617b179", "node_id": "C_kwDOAAsO6NoAKGFhN2I1YjMyZTM0NjNmYzIxNDY4MDczY2EzYTc1ZTJjMzYxN2IxNzk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-11T22:36:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-11T22:36:45Z"}, "message": "Rollup merge of #105283 - compiler-errors:ty-var-in-hir-wfcheck, r=nagisa\n\nDon't call `diagnostic_hir_wf_check` query if we have infer variables\n\nFixes #105260", "tree": {"sha": "435f1c886c4dc21d452bc02de355c3abd5f1e939", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/435f1c886c4dc21d452bc02de355c3abd5f1e939"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa7b5b32e3463fc21468073ca3a75e2c3617b179", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjllt9CRBK7hj4Ov3rIwAAqF8IAAllOCTHx034+Qm3lrEQYyws\nZUPuT+c4/B1I1FamrsdhaIqOMHjvawnv8nxIn9oeUIXzjPrK0BDUSFV93tHE1Y+o\n/1EPOcPC62z/4Q3EgXammcZgnTN5vpH8ncRr2WBatNe+55GBk4C9p/67pPd7pNSM\nHDHosmKhbSOQzxxqvzFxgCX1j6lk2lV2R/caEbGAduZIu4P5GVp3zFq5Q7qQtz2M\nMVeH5MjQVAIqt8/ob+MG9ZSNwuFRWpQjyKquj65ClvXMVhFlTKtCxeGG/RWk4xNJ\nx+2r4ax5LS2X3kUbOqLJ+k1KzdaGn3t5Osq7kJc7dLWQX28pl7Uni1DkP/J/OP0=\n=3Abo\n-----END PGP SIGNATURE-----\n", "payload": "tree 435f1c886c4dc21d452bc02de355c3abd5f1e939\nparent 668976b80ad6ca3bfbc0cddf9e676b289c07fc49\nparent 64ad337a3bc50f7381f1afc1a0fc7006a8ad7f53\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670798205 +0100\ncommitter GitHub <noreply@github.com> 1670798205 +0100\n\nRollup merge of #105283 - compiler-errors:ty-var-in-hir-wfcheck, r=nagisa\n\nDon't call `diagnostic_hir_wf_check` query if we have infer variables\n\nFixes #105260\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa7b5b32e3463fc21468073ca3a75e2c3617b179", "html_url": "https://github.com/rust-lang/rust/commit/aa7b5b32e3463fc21468073ca3a75e2c3617b179", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa7b5b32e3463fc21468073ca3a75e2c3617b179/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "668976b80ad6ca3bfbc0cddf9e676b289c07fc49", "url": "https://api.github.com/repos/rust-lang/rust/commits/668976b80ad6ca3bfbc0cddf9e676b289c07fc49", "html_url": "https://github.com/rust-lang/rust/commit/668976b80ad6ca3bfbc0cddf9e676b289c07fc49"}, {"sha": "64ad337a3bc50f7381f1afc1a0fc7006a8ad7f53", "url": "https://api.github.com/repos/rust-lang/rust/commits/64ad337a3bc50f7381f1afc1a0fc7006a8ad7f53", "html_url": "https://github.com/rust-lang/rust/commit/64ad337a3bc50f7381f1afc1a0fc7006a8ad7f53"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "82449a36b1d54115320fbc52c17d5f7ebdcdf5de", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa7b5b32e3463fc21468073ca3a75e2c3617b179/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7b5b32e3463fc21468073ca3a75e2c3617b179/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=aa7b5b32e3463fc21468073ca3a75e2c3617b179", "patch": "@@ -597,6 +597,7 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                 // can get a better error message by performing HIR-based well-formedness checking.\n                 if let ObligationCauseCode::WellFormed(Some(wf_loc)) =\n                     root_obligation.cause.code().peel_derives()\n+                    && !obligation.predicate.has_non_region_infer()\n                 {\n                     if let Some(cause) = self\n                         .tcx"}, {"sha": "bdb84409d009d7ced0b030e68ca791af7d4b52bd", "filename": "src/test/ui/wf/hir-wf-canonicalized.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/aa7b5b32e3463fc21468073ca3a75e2c3617b179/src%2Ftest%2Fui%2Fwf%2Fhir-wf-canonicalized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa7b5b32e3463fc21468073ca3a75e2c3617b179/src%2Ftest%2Fui%2Fwf%2Fhir-wf-canonicalized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fhir-wf-canonicalized.rs?ref=aa7b5b32e3463fc21468073ca3a75e2c3617b179", "patch": "@@ -0,0 +1,18 @@\n+// incremental\n+\n+trait Foo {\n+    type V;\n+}\n+\n+trait Callback<T: Foo>: Fn(&Bar<'_, T>, &T::V) {}\n+\n+struct Bar<'a, T> {\n+    callback: Box<dyn Callback<dyn Callback<Bar<'a, T>>>>,\n+    //~^ ERROR the trait bound `Bar<'a, T>: Foo` is not satisfied\n+    //~| ERROR the trait bound `(dyn Callback<Bar<'a, T>, for<'b, 'c, 'd> Output = ()> + 'static): Foo` is not satisfied\n+    //~| ERROR the size for values of type `(dyn Callback<Bar<'a, T>, for<'b, 'c, 'd> Output = ()> + 'static)` cannot be known at compilation time\n+}\n+\n+impl<T: Foo> Bar<'_, Bar<'_, T>> {}\n+\n+fn main() {}"}, {"sha": "9fd0f9c81ebd8523a58f88f92ea37319b104fb91", "filename": "src/test/ui/wf/hir-wf-canonicalized.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/aa7b5b32e3463fc21468073ca3a75e2c3617b179/src%2Ftest%2Fui%2Fwf%2Fhir-wf-canonicalized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa7b5b32e3463fc21468073ca3a75e2c3617b179/src%2Ftest%2Fui%2Fwf%2Fhir-wf-canonicalized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fhir-wf-canonicalized.stderr?ref=aa7b5b32e3463fc21468073ca3a75e2c3617b179", "patch": "@@ -0,0 +1,32 @@\n+error[E0277]: the trait bound `Bar<'a, T>: Foo` is not satisfied\n+  --> $DIR/hir-wf-canonicalized.rs:10:15\n+   |\n+LL |     callback: Box<dyn Callback<dyn Callback<Bar<'a, T>>>>,\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Foo` is not implemented for `Bar<'a, T>`\n+\n+error[E0277]: the trait bound `(dyn Callback<Bar<'a, T>, for<'b, 'c, 'd> Output = ()> + 'static): Foo` is not satisfied\n+  --> $DIR/hir-wf-canonicalized.rs:10:15\n+   |\n+LL |     callback: Box<dyn Callback<dyn Callback<Bar<'a, T>>>>,\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Foo` is not implemented for `(dyn Callback<Bar<'a, T>, for<'b, 'c, 'd> Output = ()> + 'static)`\n+\n+error[E0277]: the size for values of type `(dyn Callback<Bar<'a, T>, for<'b, 'c, 'd> Output = ()> + 'static)` cannot be known at compilation time\n+  --> $DIR/hir-wf-canonicalized.rs:10:15\n+   |\n+LL |     callback: Box<dyn Callback<dyn Callback<Bar<'a, T>>>>,\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `(dyn Callback<Bar<'a, T>, for<'b, 'c, 'd> Output = ()> + 'static)`\n+note: required by a bound in `Bar`\n+  --> $DIR/hir-wf-canonicalized.rs:9:16\n+   |\n+LL | struct Bar<'a, T> {\n+   |                ^ required by this bound in `Bar`\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | struct Bar<'a, T: ?Sized> {\n+   |                 ++++++++\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}