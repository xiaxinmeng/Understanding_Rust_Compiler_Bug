{"sha": "65435e14febd9d8aa1d40a19cd1adb427263c48e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1NDM1ZTE0ZmViZDlkOGFhMWQ0MGExOWNkMWFkYjQyNzI2M2M0OGU=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-02-05T06:47:46Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-02-07T06:33:09Z"}, "message": "improve error message when two-arg assert_eq! receives a trailing comma\n\nPreviously, `assert_eq!(left, right,)` (respectively, `assert_ne!(left,\nright,)`; note the trailing comma) would result in a confusing \"requires\nat least a format string argument\" error. In reality, a format string is\noptional, but the trailing comma puts us into the \"match a token tree of\nzero or more tokens\" branch of the macro (in order to support the\noptional format string), and passing the empty token tree into\n`format_args!` results in the confusing error. If instead we match a\ntoken tree of one or more tokens, we get a much more sensible\n\"unexpected end of macro invocation\" error.\n\nWhile we're here, fix up a stray space before a comma in the match\nguards.\n\nResolves #39369.", "tree": {"sha": "87d7277d88a1b0603863c8eed608fceabd000c66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87d7277d88a1b0603863c8eed608fceabd000c66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65435e14febd9d8aa1d40a19cd1adb427263c48e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65435e14febd9d8aa1d40a19cd1adb427263c48e", "html_url": "https://github.com/rust-lang/rust/commit/65435e14febd9d8aa1d40a19cd1adb427263c48e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65435e14febd9d8aa1d40a19cd1adb427263c48e/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7777ae682d498ff43e3d6b65a7a8d0b2361fa0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7777ae682d498ff43e3d6b65a7a8d0b2361fa0b", "html_url": "https://github.com/rust-lang/rust/commit/d7777ae682d498ff43e3d6b65a7a8d0b2361fa0b"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "66a923f8e588ae33fe11784d12096ab9c0d45010", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/65435e14febd9d8aa1d40a19cd1adb427263c48e/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65435e14febd9d8aa1d40a19cd1adb427263c48e/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=65435e14febd9d8aa1d40a19cd1adb427263c48e", "patch": "@@ -103,7 +103,7 @@ macro_rules! assert {\n #[macro_export]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n macro_rules! assert_eq {\n-    ($left:expr , $right:expr) => ({\n+    ($left:expr, $right:expr) => ({\n         match (&$left, &$right) {\n             (left_val, right_val) => {\n                 if !(*left_val == *right_val) {\n@@ -113,13 +113,13 @@ macro_rules! assert_eq {\n             }\n         }\n     });\n-    ($left:expr , $right:expr, $($arg:tt)*) => ({\n+    ($left:expr, $right:expr, $($arg:tt)+) => ({\n         match (&($left), &($right)) {\n             (left_val, right_val) => {\n                 if !(*left_val == *right_val) {\n                     panic!(\"assertion failed: `(left == right)` \\\n                            (left: `{:?}`, right: `{:?}`): {}\", left_val, right_val,\n-                           format_args!($($arg)*))\n+                           format_args!($($arg)+))\n                 }\n             }\n         }\n@@ -146,7 +146,7 @@ macro_rules! assert_eq {\n #[macro_export]\n #[stable(feature = \"assert_ne\", since = \"1.12.0\")]\n macro_rules! assert_ne {\n-    ($left:expr , $right:expr) => ({\n+    ($left:expr, $right:expr) => ({\n         match (&$left, &$right) {\n             (left_val, right_val) => {\n                 if *left_val == *right_val {\n@@ -156,13 +156,13 @@ macro_rules! assert_ne {\n             }\n         }\n     });\n-    ($left:expr , $right:expr, $($arg:tt)*) => ({\n+    ($left:expr, $right:expr, $($arg:tt)+) => ({\n         match (&($left), &($right)) {\n             (left_val, right_val) => {\n                 if *left_val == *right_val {\n                     panic!(\"assertion failed: `(left != right)` \\\n                            (left: `{:?}`, right: `{:?}`): {}\", left_val, right_val,\n-                           format_args!($($arg)*))\n+                           format_args!($($arg)+))\n                 }\n             }\n         }"}, {"sha": "d98baf640a8c95ca71dfc3df4d2ad7041a64f374", "filename": "src/test/ui/macros/assert_eq_trailing_comma.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/65435e14febd9d8aa1d40a19cd1adb427263c48e/src%2Ftest%2Fui%2Fmacros%2Fassert_eq_trailing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65435e14febd9d8aa1d40a19cd1adb427263c48e/src%2Ftest%2Fui%2Fmacros%2Fassert_eq_trailing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert_eq_trailing_comma.rs?ref=65435e14febd9d8aa1d40a19cd1adb427263c48e", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    assert_eq!(1, 1,);\n+}"}, {"sha": "ca590db90e43f4a2dacb43b1b492ec2f508b1619", "filename": "src/test/ui/macros/assert_eq_trailing_comma.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/65435e14febd9d8aa1d40a19cd1adb427263c48e/src%2Ftest%2Fui%2Fmacros%2Fassert_eq_trailing_comma.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65435e14febd9d8aa1d40a19cd1adb427263c48e/src%2Ftest%2Fui%2Fmacros%2Fassert_eq_trailing_comma.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert_eq_trailing_comma.stderr?ref=65435e14febd9d8aa1d40a19cd1adb427263c48e", "patch": "@@ -0,0 +1,6 @@\n+error: unexpected end of macro invocation\n+  --> $DIR/assert_eq_trailing_comma.rs:12:20\n+   |\n+12 |     assert_eq!(1, 1,);\n+   |                    ^\n+"}, {"sha": "4d3c29da8b22b8efae94293c574b5ee0368cbfc8", "filename": "src/test/ui/macros/assert_ne_trailing_comma.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/65435e14febd9d8aa1d40a19cd1adb427263c48e/src%2Ftest%2Fui%2Fmacros%2Fassert_ne_trailing_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65435e14febd9d8aa1d40a19cd1adb427263c48e/src%2Ftest%2Fui%2Fmacros%2Fassert_ne_trailing_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert_ne_trailing_comma.rs?ref=65435e14febd9d8aa1d40a19cd1adb427263c48e", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    assert_ne!(1, 2,);\n+}"}, {"sha": "ffabcaeb0493c4e16a2c69d388c8888257110a95", "filename": "src/test/ui/macros/assert_ne_trailing_comma.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/65435e14febd9d8aa1d40a19cd1adb427263c48e/src%2Ftest%2Fui%2Fmacros%2Fassert_ne_trailing_comma.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65435e14febd9d8aa1d40a19cd1adb427263c48e/src%2Ftest%2Fui%2Fmacros%2Fassert_ne_trailing_comma.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert_ne_trailing_comma.stderr?ref=65435e14febd9d8aa1d40a19cd1adb427263c48e", "patch": "@@ -0,0 +1,6 @@\n+error: unexpected end of macro invocation\n+  --> $DIR/assert_ne_trailing_comma.rs:12:20\n+   |\n+12 |     assert_ne!(1, 2,);\n+   |                    ^\n+"}]}