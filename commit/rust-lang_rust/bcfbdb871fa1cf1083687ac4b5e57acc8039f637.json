{"sha": "bcfbdb871fa1cf1083687ac4b5e57acc8039f637", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjZmJkYjg3MWZhMWNmMTA4MzY4N2FjNGI1ZTU3YWNjODAzOWY2Mzc=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2016-09-26T20:50:03Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2016-09-26T20:50:03Z"}, "message": "Rename MIR local iterators to match convention", "tree": {"sha": "fc057c624adf9715e1d462a793c921dc23c0811c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc057c624adf9715e1d462a793c921dc23c0811c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcfbdb871fa1cf1083687ac4b5e57acc8039f637", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcfbdb871fa1cf1083687ac4b5e57acc8039f637", "html_url": "https://github.com/rust-lang/rust/commit/bcfbdb871fa1cf1083687ac4b5e57acc8039f637", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b0c318a5f4a5ef8c027326f7566b5f3ce7380d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b0c318a5f4a5ef8c027326f7566b5f3ce7380d6", "html_url": "https://github.com/rust-lang/rust/commit/3b0c318a5f4a5ef8c027326f7566b5f3ce7380d6"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "24224edf7be068689106146361c5ce67c0d6c6c5", "filename": "src/librustc/mir/repr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc%2Fmir%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc%2Fmir%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Frepr.rs?ref=bcfbdb871fa1cf1083687ac4b5e57acc8039f637", "patch": "@@ -188,7 +188,7 @@ impl<'tcx> Mir<'tcx> {\n \n     /// Returns an iterator over all temporaries.\n     #[inline]\n-    pub fn temp_iter<'a>(&'a self) -> impl Iterator<Item=Local> + 'a {\n+    pub fn temps_iter<'a>(&'a self) -> impl Iterator<Item=Local> + 'a {\n         (self.arg_count+1..self.local_decls.len()).filter_map(move |index| {\n             let local = Local::new(index);\n             if self.local_decls[local].source_info.is_none() {\n@@ -201,7 +201,7 @@ impl<'tcx> Mir<'tcx> {\n \n     /// Returns an iterator over all user-declared locals.\n     #[inline]\n-    pub fn var_iter<'a>(&'a self) -> impl Iterator<Item=Local> + 'a {\n+    pub fn vars_iter<'a>(&'a self) -> impl Iterator<Item=Local> + 'a {\n         (self.arg_count+1..self.local_decls.len()).filter_map(move |index| {\n             let local = Local::new(index);\n             if self.local_decls[local].source_info.is_none() {\n@@ -214,14 +214,14 @@ impl<'tcx> Mir<'tcx> {\n \n     /// Returns an iterator over all function arguments.\n     #[inline]\n-    pub fn arg_iter<'a>(&'a self) -> impl Iterator<Item=Local> + 'a {\n+    pub fn args_iter<'a>(&'a self) -> impl Iterator<Item=Local> + 'a {\n         (1..self.arg_count+1).map(Local::new)\n     }\n \n     /// Returns an iterator over all user-defined variables and compiler-generated temporaries (all\n     /// locals that are neither arguments nor the return pointer).\n     #[inline]\n-    pub fn var_and_temp_iter<'a>(&'a self) -> impl Iterator<Item=Local> + 'a {\n+    pub fn vars_and_temps_iter<'a>(&'a self) -> impl Iterator<Item=Local> + 'a {\n         (self.arg_count+1..self.local_decls.len()).map(Local::new)\n     }\n "}, {"sha": "2a3c602b134e77074342603728aaa7558f0126e7", "filename": "src/librustc_borrowck/borrowck/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs?ref=bcfbdb871fa1cf1083687ac4b5e57acc8039f637", "patch": "@@ -338,7 +338,7 @@ fn drop_flag_effects_for_function_entry<'a, 'tcx, F>(\n     where F: FnMut(MovePathIndex, DropFlagState)\n {\n     let move_data = &ctxt.move_data;\n-    for arg in mir.arg_iter() {\n+    for arg in mir.args_iter() {\n         let lvalue = repr::Lvalue::Local(arg);\n         let lookup_result = move_data.rev_lookup.find(&lvalue);\n         on_lookup_result_bits(tcx, mir, move_data,"}, {"sha": "1c1f0ca790267fe5b66f43c21e74d115a9caf3ef", "filename": "src/librustc_mir/graphviz.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc_mir%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc_mir%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fgraphviz.rs?ref=bcfbdb871fa1cf1083687ac4b5e57acc8039f637", "patch": "@@ -136,7 +136,7 @@ fn write_graph_label<'a, 'tcx, W: Write>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     write!(w, \"    label=<fn {}(\", dot::escape_html(&tcx.node_path_str(nid)))?;\n \n     // fn argument types.\n-    for (i, arg) in mir.arg_iter().enumerate() {\n+    for (i, arg) in mir.args_iter().enumerate() {\n         if i > 0 {\n             write!(w, \", \")?;\n         }\n@@ -146,7 +146,7 @@ fn write_graph_label<'a, 'tcx, W: Write>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     write!(w, \") -&gt; {}\", escape(mir.return_ty))?;\n     write!(w, r#\"<br align=\"left\"/>\"#)?;\n \n-    for local in mir.var_and_temp_iter() {\n+    for local in mir.vars_and_temps_iter() {\n         let decl = &mir.local_decls[local];\n \n         write!(w, \"let \")?;"}, {"sha": "5c88c89862126be6060d6e87a777087259f43a33", "filename": "src/librustc_mir/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc_mir%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc_mir%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fpretty.rs?ref=bcfbdb871fa1cf1083687ac4b5e57acc8039f637", "patch": "@@ -237,7 +237,7 @@ fn write_scope_tree(tcx: TyCtxt,\n         writeln!(w, \"{0:1$}scope {2} {{\", \"\", indent, child.index())?;\n \n         // User variable types (including the user's name in a comment).\n-        for local in mir.var_iter() {\n+        for local in mir.vars_iter() {\n             let var = &mir.local_decls[local];\n             let (name, source_info) = if var.source_info.unwrap().scope == child {\n                 (var.name.unwrap(), var.source_info.unwrap())\n@@ -333,7 +333,7 @@ fn write_mir_sig(tcx: TyCtxt, src: MirSource, mir: &Mir, w: &mut Write)\n         write!(w, \"(\")?;\n \n         // fn argument types.\n-        for (i, arg) in mir.arg_iter().enumerate() {\n+        for (i, arg) in mir.args_iter().enumerate() {\n             if i != 0 {\n                 write!(w, \", \")?;\n             }\n@@ -349,7 +349,7 @@ fn write_mir_sig(tcx: TyCtxt, src: MirSource, mir: &Mir, w: &mut Write)\n \n fn write_temp_decls(mir: &Mir, w: &mut Write) -> io::Result<()> {\n     // Compiler-introduced temporary types.\n-    for temp in mir.temp_iter() {\n+    for temp in mir.temps_iter() {\n         writeln!(w, \"{}let mut {:?}: {};\", INDENT, temp, mir.local_decls[temp].ty)?;\n     }\n "}, {"sha": "b00a88093d72655f5364a5c5f02daa12750d5fb2", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=bcfbdb871fa1cf1083687ac4b5e57acc8039f637", "patch": "@@ -410,7 +410,7 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx, 'tcx> {\n                 TerminatorKind::Return => {\n                     // Check for unused values. This usually means\n                     // there are extra statements in the AST.\n-                    for temp in mir.temp_iter() {\n+                    for temp in mir.temps_iter() {\n                         if self.temp_qualif[temp].is_none() {\n                             continue;\n                         }\n@@ -435,7 +435,7 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx, 'tcx> {\n \n                     // Make sure there are no extra unassigned variables.\n                     self.qualif = Qualif::NOT_CONST;\n-                    for index in mir.var_iter() {\n+                    for index in mir.vars_iter() {\n                         if !self.const_fn_arg_vars.contains(index.index()) {\n                             debug!(\"unassigned variable {:?}\", index);\n                             self.assign(&Lvalue::Local(index), Location {"}, {"sha": "1d7e4991aa847e4566d77f4dc9bb23224cc5f889", "filename": "src/librustc_trans/debuginfo/create_scope_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fcreate_scope_map.rs?ref=bcfbdb871fa1cf1083687ac4b5e57acc8039f637", "patch": "@@ -63,7 +63,7 @@ pub fn create_mir_scopes(fcx: &FunctionContext) -> IndexVec<VisibilityScope, Mir\n \n     // Find all the scopes with variables defined in them.\n     let mut has_variables = BitVector::new(mir.visibility_scopes.len());\n-    for var in mir.var_iter() {\n+    for var in mir.vars_iter() {\n         let decl = &mir.local_decls[var];\n         has_variables.insert(decl.source_info.unwrap().scope.index());\n     }"}, {"sha": "97e05ed33d989bc57cebd616b9e9abc62a547d9e", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcfbdb871fa1cf1083687ac4b5e57acc8039f637/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=bcfbdb871fa1cf1083687ac4b5e57acc8039f637", "patch": "@@ -290,7 +290,7 @@ pub fn trans_mir<'blk, 'tcx: 'blk>(fcx: &'blk FunctionContext<'blk, 'tcx>) {\n         let retptr = allocate_local(mir::RETURN_POINTER);\n         iter::once(retptr)\n             .chain(args.into_iter())\n-            .chain(mir.var_and_temp_iter().map(&mut allocate_local))\n+            .chain(mir.vars_and_temps_iter().map(&mut allocate_local))\n             .collect()\n     };\n \n@@ -356,7 +356,7 @@ fn arg_local_refs<'bcx, 'tcx>(bcx: &BlockAndBuilder<'bcx, 'tcx>,\n         None\n     };\n \n-    mir.arg_iter().enumerate().map(|(arg_index, local)| {\n+    mir.args_iter().enumerate().map(|(arg_index, local)| {\n         let arg_decl = &mir.local_decls[local];\n         let arg_ty = bcx.monomorphize(&arg_decl.ty);\n "}]}