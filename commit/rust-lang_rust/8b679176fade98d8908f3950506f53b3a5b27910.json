{"sha": "8b679176fade98d8908f3950506f53b3a5b27910", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNjc5MTc2ZmFkZTk4ZDg5MDhmMzk1MDUwNmY1M2IzYTViMjc5MTA=", "commit": {"author": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2018-05-28T07:29:02Z"}, "committer": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2018-05-28T11:07:19Z"}, "message": "Added lint for unnecessary references", "tree": {"sha": "4ea9b548be5ba8c6220e844a36f1365d24b03ff7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ea9b548be5ba8c6220e844a36f1365d24b03ff7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b679176fade98d8908f3950506f53b3a5b27910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b679176fade98d8908f3950506f53b3a5b27910", "html_url": "https://github.com/rust-lang/rust/commit/8b679176fade98d8908f3950506f53b3a5b27910", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b679176fade98d8908f3950506f53b3a5b27910/comments", "author": null, "committer": null, "parents": [{"sha": "fc008aa14c59a0b0cb0a1e60fe836f83019a722a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc008aa14c59a0b0cb0a1e60fe836f83019a722a", "html_url": "https://github.com/rust-lang/rust/commit/fc008aa14c59a0b0cb0a1e60fe836f83019a722a"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "c3e9c4bf86f5589b2d11ae0dfcf90e4991dd7141", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b679176fade98d8908f3950506f53b3a5b27910/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b679176fade98d8908f3950506f53b3a5b27910/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=8b679176fade98d8908f3950506f53b3a5b27910", "patch": "@@ -391,6 +391,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_late_lint_pass(box if_let_redundant_pattern_matching::Pass);\n     reg.register_late_lint_pass(box partialeq_ne_impl::Pass);\n     reg.register_early_lint_pass(box reference::Pass);\n+    reg.register_early_lint_pass(box reference::DerefPass);\n     reg.register_early_lint_pass(box double_parens::DoubleParens);\n     reg.register_late_lint_pass(box unused_io_amount::UnusedIoAmount);\n     reg.register_late_lint_pass(box large_enum_variant::LargeEnumVariant::new(conf.enum_variant_size_threshold));\n@@ -812,6 +813,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         precedence::PRECEDENCE,\n         ranges::RANGE_ZIP_WITH_LEN,\n         reference::DEREF_ADDROF,\n+        reference::REF_IN_DEREF,\n         swap::MANUAL_SWAP,\n         temporary_assignment::TEMPORARY_ASSIGNMENT,\n         transmute::CROSSPOINTER_TRANSMUTE,"}, {"sha": "765be0bdf36ef6f8a1fcd1b14b156fdf73f486db", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/8b679176fade98d8908f3950506f53b3a5b27910/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b679176fade98d8908f3950506f53b3a5b27910/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=8b679176fade98d8908f3950506f53b3a5b27910", "patch": "@@ -52,3 +52,53 @@ impl EarlyLintPass for Pass {\n         }\n     }\n }\n+\n+/// **What it does:** Checks for references in expressions that use\n+/// auto dereference.\n+///\n+/// **Why is this bad?** The reference is a no-op and is automatically\n+/// dereferenced by the compiler and makes the code less clear.\n+///\n+/// **Example:**\n+/// ```rust\n+/// struct Point(u32, u32);\n+/// let point = Foo(30, 20);\n+/// let x = (&point).x;\n+/// ```\n+declare_clippy_lint! {\n+    pub REF_IN_DEREF,\n+    complexity,\n+    \"Use of reference in auto dereference expression.\"\n+}\n+\n+pub struct DerefPass;\n+\n+impl LintPass for DerefPass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(REF_IN_DEREF)\n+    }\n+}\n+\n+impl EarlyLintPass for DerefPass {\n+    fn check_expr(&mut self, cx: &EarlyContext, e: &Expr) {\n+        if_chain! {\n+            if let ExprKind::Field(ref object, ref field_name) = e.node;\n+            if let ExprKind::Paren(ref parened) = object.node;\n+            if let ExprKind::AddrOf(_, ref inner) = parened.node;\n+            then {\n+                span_lint_and_sugg(\n+                    cx,\n+                    REF_IN_DEREF,\n+                    object.span,\n+                    \"Creating a reference that is immediately dereferenced.\",\n+                    \"try this\",\n+                    format!(\n+                        \"{}.{}\",\n+                        snippet(cx, inner.span, \"_\"),\n+                        snippet(cx, field_name.span, \"_\")\n+                    )\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "53b970dfa72c30b4ecc3bf233b88f8b7e9340e88", "filename": "tests/ui/unnecessary_ref.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8b679176fade98d8908f3950506f53b3a5b27910/tests%2Fui%2Funnecessary_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b679176fade98d8908f3950506f53b3a5b27910/tests%2Fui%2Funnecessary_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.rs?ref=8b679176fade98d8908f3950506f53b3a5b27910", "patch": "@@ -0,0 +1,12 @@\n+#![feature(tool_attributes)]\n+#![feature(stmt_expr_attributes)]\n+\n+struct Outer {\n+    inner: u32,\n+}\n+\n+#[deny(ref_in_deref)]\n+fn main() {\n+    let outer = Outer { inner: 0 };\n+    let inner = (&outer).inner;\n+}"}, {"sha": "ffc65084afa6149f24182952ab37912a6d01447b", "filename": "tests/ui/unnecessary_ref.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8b679176fade98d8908f3950506f53b3a5b27910/tests%2Fui%2Funnecessary_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8b679176fade98d8908f3950506f53b3a5b27910/tests%2Fui%2Funnecessary_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.stderr?ref=8b679176fade98d8908f3950506f53b3a5b27910", "patch": "@@ -0,0 +1,14 @@\n+error: Creating a reference that is immediately dereferenced.\n+  --> $DIR/unnecessary_ref.rs:11:17\n+   |\n+11 |     let inner = (&outer).inner;\n+   |                 ^^^^^^^^ help: try this: `outer.inner`\n+   |\n+note: lint level defined here\n+  --> $DIR/unnecessary_ref.rs:8:8\n+   |\n+8  | #[deny(ref_in_deref)]\n+   |        ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}