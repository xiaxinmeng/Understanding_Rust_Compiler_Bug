{"sha": "059ec76d9b2ba33be5d7b092ffeb401590a5d39d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1OWVjNzZkOWIyYmEzM2JlNWQ3YjA5MmZmZWI0MDE1OTBhNWQzOWQ=", "commit": {"author": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2018-10-28T06:28:15Z"}, "committer": {"name": "CrLF0710", "email": "crlf0710@gmail.com", "date": "2019-04-04T18:26:51Z"}, "message": "Add Fn* blanket impls for Box.", "tree": {"sha": "44e5505c8b940d2e37407f220d7fc6ca3e16158d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44e5505c8b940d2e37407f220d7fc6ca3e16158d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/059ec76d9b2ba33be5d7b092ffeb401590a5d39d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/059ec76d9b2ba33be5d7b092ffeb401590a5d39d", "html_url": "https://github.com/rust-lang/rust/commit/059ec76d9b2ba33be5d7b092ffeb401590a5d39d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/059ec76d9b2ba33be5d7b092ffeb401590a5d39d/comments", "author": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79941973af54db7f7b941582fdc9537b2ee95a00", "url": "https://api.github.com/repos/rust-lang/rust/commits/79941973af54db7f7b941582fdc9537b2ee95a00", "html_url": "https://github.com/rust-lang/rust/commit/79941973af54db7f7b941582fdc9537b2ee95a00"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "09554a1a34da8866f75018551170bb980f806139", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/059ec76d9b2ba33be5d7b092ffeb401590a5d39d/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/059ec76d9b2ba33be5d7b092ffeb401590a5d39d/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=059ec76d9b2ba33be5d7b092ffeb401590a5d39d", "patch": "@@ -694,6 +694,37 @@ impl<I: ExactSizeIterator + ?Sized> ExactSizeIterator for Box<I> {\n #[stable(feature = \"fused\", since = \"1.26.0\")]\n impl<I: FusedIterator + ?Sized> FusedIterator for Box<I> {}\n \n+#[cfg(not(stage0))]\n+#[unstable(feature = \"boxed_closure_impls\",\n+           reason = \"Box<FnOnce> relies on unsized rvalues and needs to be tested more\",\n+           issue = \"48055\")]\n+impl<A, F: FnOnce<A> + ?Sized> FnOnce<A> for Box<F> {\n+    type Output = <F as FnOnce<A>>::Output;\n+\n+    default extern \"rust-call\" fn call_once(self, args: A) -> Self::Output {\n+        <F as FnOnce<A>>::call_once(*self, args)\n+    }\n+}\n+\n+#[cfg(not(stage0))]\n+#[unstable(feature = \"boxed_closure_impls\",\n+           reason = \"Box<FnOnce> relies on unsized rvalues and needs to be tested more\",\n+           issue = \"48055\")]\n+impl<A, F: FnMut<A> + ?Sized> FnMut<A> for Box<F> {\n+    extern \"rust-call\" fn call_mut(&mut self, args: A) -> Self::Output {\n+        <F as FnMut<A>>::call_mut(self, args)\n+    }\n+}\n+\n+#[cfg(not(stage0))]\n+#[unstable(feature = \"boxed_closure_impls\",\n+           reason = \"Box<FnOnce> relies on unsized rvalues and needs to be tested more\",\n+           issue = \"48055\")]\n+impl<A, F: Fn<A> + ?Sized> Fn<A> for Box<F> {\n+    extern \"rust-call\" fn call(&self, args: A) -> Self::Output {\n+        <F as Fn<A>>::call(self, args)\n+    }\n+}\n \n /// `FnBox` is a version of the `FnOnce` intended for use with boxed\n /// closure objects. The idea is that where one would normally store a\n@@ -752,6 +783,7 @@ impl<A, F> FnBox<A> for F\n #[unstable(feature = \"fnbox\",\n            reason = \"will be deprecated if and when `Box<FnOnce>` becomes usable\", issue = \"28796\")]\n impl<A, R> FnOnce<A> for Box<dyn FnBox<A, Output = R> + '_> {\n+    #[cfg(stage0)]\n     type Output = R;\n \n     extern \"rust-call\" fn call_once(self, args: A) -> R {\n@@ -762,6 +794,7 @@ impl<A, R> FnOnce<A> for Box<dyn FnBox<A, Output = R> + '_> {\n #[unstable(feature = \"fnbox\",\n            reason = \"will be deprecated if and when `Box<FnOnce>` becomes usable\", issue = \"28796\")]\n impl<A, R> FnOnce<A> for Box<dyn FnBox<A, Output = R> + Send + '_> {\n+    #[cfg(stage0)]\n     type Output = R;\n \n     extern \"rust-call\" fn call_once(self, args: A) -> R {"}, {"sha": "9064b4ccd6a88a31d8099bd029913693dcbd34ec", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/059ec76d9b2ba33be5d7b092ffeb401590a5d39d/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/059ec76d9b2ba33be5d7b092ffeb401590a5d39d/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=059ec76d9b2ba33be5d7b092ffeb401590a5d39d", "patch": "@@ -107,6 +107,7 @@\n #![feature(unboxed_closures)]\n #![feature(unicode_internals)]\n #![feature(unsize)]\n+#![feature(unsized_locals)]\n #![feature(allocator_internals)]\n #![feature(on_unimplemented)]\n #![feature(rustc_const_unstable)]"}]}