{"sha": "532235be276de640d22c9d974d81f723e6094cf1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzMjIzNWJlMjc2ZGU2NDBkMjJjOWQ5NzRkODFmNzIzZTYwOTRjZjE=", "commit": {"author": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-06-26T20:29:40Z"}, "committer": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-06-26T20:29:40Z"}, "message": "Use Box::into_raw rather than the deprecated boxed::into_raw in tests and documentation.", "tree": {"sha": "b681d35ab0de0226fcc1c9574bd5dacd8adf45f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b681d35ab0de0226fcc1c9574bd5dacd8adf45f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/532235be276de640d22c9d974d81f723e6094cf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/532235be276de640d22c9d974d81f723e6094cf1", "html_url": "https://github.com/rust-lang/rust/commit/532235be276de640d22c9d974d81f723e6094cf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/532235be276de640d22c9d974d81f723e6094cf1/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cb8a31e7cea1ee499630c9c6744dedd0c0b371f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb8a31e7cea1ee499630c9c6744dedd0c0b371f", "html_url": "https://github.com/rust-lang/rust/commit/2cb8a31e7cea1ee499630c9c6744dedd0c0b371f"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "c941629b871ef418566ee87c4dda4ef4ba3bac7d", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/532235be276de640d22c9d974d81f723e6094cf1/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/532235be276de640d22c9d974d81f723e6094cf1/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=532235be276de640d22c9d974d81f723e6094cf1", "patch": "@@ -116,7 +116,7 @@ impl<T : ?Sized> Box<T> {\n     /// of `T` and releases memory. Since the way `Box` allocates and\n     /// releases memory is unspecified, the only valid pointer to pass\n     /// to this function is the one taken from another `Box` with\n-    /// `boxed::into_raw` function.\n+    /// `Box::into_raw` function.\n     ///\n     /// Function is unsafe, because improper use of this function may\n     /// lead to memory problems like double-free, for example if the\n@@ -140,10 +140,8 @@ impl<T : ?Sized> Box<T> {\n     /// # Examples\n     /// ```\n     /// # #![feature(box_raw)]\n-    /// use std::boxed;\n-    ///\n     /// let seventeen = Box::new(17u32);\n-    /// let raw = boxed::into_raw(seventeen);\n+    /// let raw = Box::into_raw(seventeen);\n     /// let boxed_again = unsafe { Box::from_raw(raw) };\n     /// ```\n     #[unstable(feature = \"box_raw\", reason = \"may be renamed\")]"}, {"sha": "2ef23b26a56a739549562c57ef71f521dab72063", "filename": "src/liballoc/boxed_test.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/532235be276de640d22c9d974d81f723e6094cf1/src%2Fliballoc%2Fboxed_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/532235be276de640d22c9d974d81f723e6094cf1/src%2Fliballoc%2Fboxed_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed_test.rs?ref=532235be276de640d22c9d974d81f723e6094cf1", "patch": "@@ -76,9 +76,9 @@ fn deref() {\n \n #[test]\n fn raw_sized() {\n+    let x = Box::new(17);\n+    let p = Box::into_raw(x);\n     unsafe {\n-        let x = Box::new(17);\n-        let p = boxed::into_raw(x);\n         assert_eq!(17, *p);\n         *p = 19;\n         let y = Box::from_raw(p);\n@@ -105,9 +105,9 @@ fn raw_trait() {\n         }\n     }\n \n+    let x: Box<Foo> = Box::new(Bar(17));\n+    let p = Box::into_raw(x);\n     unsafe {\n-        let x: Box<Foo> = Box::new(Bar(17));\n-        let p = boxed::into_raw(x);\n         assert_eq!(17, (*p).get());\n         (*p).set(19);\n         let y: Box<Foo> = Box::from_raw(p);"}, {"sha": "7b33a41f9556a0481db8ebdec8dcddfafbf78324", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/532235be276de640d22c9d974d81f723e6094cf1/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/532235be276de640d22c9d974d81f723e6094cf1/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=532235be276de640d22c9d974d81f723e6094cf1", "patch": "@@ -50,14 +50,12 @@\n //!\n //! ```\n //! # #![feature(box_raw)]\n-//! use std::boxed;\n+//! let my_speed: Box<i32> = Box::new(88);\n+//! let my_speed: *mut i32 = Box::into_raw(my_speed);\n //!\n+//! // By taking ownership of the original `Box<T>` though\n+//! // we are obligated to put it together later to be destroyed.\n //! unsafe {\n-//!     let my_speed: Box<i32> = Box::new(88);\n-//!     let my_speed: *mut i32 = boxed::into_raw(my_speed);\n-//!\n-//!     // By taking ownership of the original `Box<T>` though\n-//!     // we are obligated to put it together later to be destroyed.\n //!     drop(Box::from_raw(my_speed));\n //! }\n //! ```"}]}