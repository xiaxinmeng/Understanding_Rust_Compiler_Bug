{"sha": "d8bbc1ee1ad44e9c7bd93c8d59103eacd0ed36e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YmJjMWVlMWFkNDRlOWM3YmQ5M2M4ZDU5MTAzZWFjZDBlZDM2ZTg=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-05-17T20:32:47Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-05-17T20:32:47Z"}, "message": "Fix rebase", "tree": {"sha": "5678880e9cc9a71d357f550d53b4c3a186e9a346", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5678880e9cc9a71d357f550d53b4c3a186e9a346"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8bbc1ee1ad44e9c7bd93c8d59103eacd0ed36e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8bbc1ee1ad44e9c7bd93c8d59103eacd0ed36e8", "html_url": "https://github.com/rust-lang/rust/commit/d8bbc1ee1ad44e9c7bd93c8d59103eacd0ed36e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8bbc1ee1ad44e9c7bd93c8d59103eacd0ed36e8/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dae5f05f430455f7d6dfdce6bc5ccf7a10f8b2df", "url": "https://api.github.com/repos/rust-lang/rust/commits/dae5f05f430455f7d6dfdce6bc5ccf7a10f8b2df", "html_url": "https://github.com/rust-lang/rust/commit/dae5f05f430455f7d6dfdce6bc5ccf7a10f8b2df"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bcab61680965afc3aa1b381216e5ac4d1aebaf30", "filename": "src/libproc_macro/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8bbc1ee1ad44e9c7bd93c8d59103eacd0ed36e8/src%2Flibproc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8bbc1ee1ad44e9c7bd93c8d59103eacd0ed36e8/src%2Flibproc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Flib.rs?ref=d8bbc1ee1ad44e9c7bd93c8d59103eacd0ed36e8", "patch": "@@ -818,7 +818,7 @@ impl Ident {\n     pub fn new_raw(string: &str, span: Span) -> Ident {\n         let mut ident = Ident::new(string, span);\n         if ident.sym == keywords::Underscore.name() ||\n-           token::is_path_segment_keyword(ast::Ident::with_empty_ctxt(ident.sym)) {\n+           ast::Ident::with_empty_ctxt(ident.sym).is_path_segment_keyword() {\n             panic!(\"`{:?}` is not a valid raw identifier\", string)\n         }\n         ident.is_raw = true;"}]}