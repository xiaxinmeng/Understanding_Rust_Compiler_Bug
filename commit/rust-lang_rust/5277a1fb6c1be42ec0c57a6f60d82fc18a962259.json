{"sha": "5277a1fb6c1be42ec0c57a6f60d82fc18a962259", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNzdhMWZiNmMxYmU0MmVjMGM1N2E2ZjYwZDgyZmMxOGE5NjIyNTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-03T01:06:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-03T01:06:53Z"}, "message": "Auto merge of #3614 - matthiaskrgr:rustc_tool_utils, r=phansch\n\nrustc_tool_utils: fix failure to create proper non-repo version string when used in crates on crates.io, bump version", "tree": {"sha": "3607787a798f49317e3ce80a94b51bc44834b03c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3607787a798f49317e3ce80a94b51bc44834b03c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5277a1fb6c1be42ec0c57a6f60d82fc18a962259", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5277a1fb6c1be42ec0c57a6f60d82fc18a962259", "html_url": "https://github.com/rust-lang/rust/commit/5277a1fb6c1be42ec0c57a6f60d82fc18a962259", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5277a1fb6c1be42ec0c57a6f60d82fc18a962259/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84aa027888f95c9df3e09d9229424f525b3fcec1", "url": "https://api.github.com/repos/rust-lang/rust/commits/84aa027888f95c9df3e09d9229424f525b3fcec1", "html_url": "https://github.com/rust-lang/rust/commit/84aa027888f95c9df3e09d9229424f525b3fcec1"}, {"sha": "31d96300ef7cfebe99bc2aa20834e514466f8b80", "url": "https://api.github.com/repos/rust-lang/rust/commits/31d96300ef7cfebe99bc2aa20834e514466f8b80", "html_url": "https://github.com/rust-lang/rust/commit/31d96300ef7cfebe99bc2aa20834e514466f8b80"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "70ff86c49afe953de4a21dbd830c97f3691d744d", "filename": "rustc_tools_util/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5277a1fb6c1be42ec0c57a6f60d82fc18a962259/rustc_tools_util%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5277a1fb6c1be42ec0c57a6f60d82fc18a962259/rustc_tools_util%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2FCargo.toml?ref=5277a1fb6c1be42ec0c57a6f60d82fc18a962259", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"rustc_tools_util\"\n-version = \"0.1.0\"\n+version = \"0.1.1\"\n authors = [\"Matthias Kr\u00fcger <matthias.krueger@famsik.de>\"]\n description = \"small helper to generate version information for git packages\"\n repository = \"https://github.com/rust-lang/rust-clippy\""}, {"sha": "49bfb7d8b59963a23a22f09ae57e00ee272c433d", "filename": "rustc_tools_util/src/lib.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5277a1fb6c1be42ec0c57a6f60d82fc18a962259/rustc_tools_util%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5277a1fb6c1be42ec0c57a6f60d82fc18a962259/rustc_tools_util%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2Fsrc%2Flib.rs?ref=5277a1fb6c1be42ec0c57a6f60d82fc18a962259", "patch": "@@ -46,16 +46,17 @@ pub struct VersionInfo {\n \n impl std::fmt::Display for VersionInfo {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n-        if self.commit_hash.is_some() {\n+        let hash = self.commit_hash.clone().unwrap_or_default();\n+        let hash_trimmed = hash.trim();\n+\n+        let date = self.commit_date.clone().unwrap_or_default();\n+        let date_trimmed = date.trim();\n+\n+        if (hash_trimmed.len() + date_trimmed.len()) > 0 {\n             write!(\n                 f,\n                 \"{} {}.{}.{} ({} {})\",\n-                self.crate_name,\n-                self.major,\n-                self.minor,\n-                self.patch,\n-                self.commit_hash.clone().unwrap_or_default().trim(),\n-                self.commit_date.clone().unwrap_or_default().trim(),\n+                self.crate_name, self.major, self.minor, self.patch, hash_trimmed, date_trimmed,\n             )?;\n         } else {\n             write!(f, \"{} {}.{}.{}\", self.crate_name, self.major, self.minor, self.patch)?;\n@@ -121,7 +122,7 @@ mod test {\n         let vi = get_version_info!();\n         assert_eq!(vi.major, 0);\n         assert_eq!(vi.minor, 1);\n-        assert_eq!(vi.patch, 0);\n+        assert_eq!(vi.patch, 1);\n         assert_eq!(vi.crate_name, \"rustc_tools_util\");\n         // hard to make positive tests for these since they will always change\n         assert!(vi.commit_hash.is_none());\n@@ -131,7 +132,7 @@ mod test {\n     #[test]\n     fn test_display_local() {\n         let vi = get_version_info!();\n-        assert_eq!(vi.to_string(), \"rustc_tools_util 0.1.0\");\n+        assert_eq!(vi.to_string(), \"rustc_tools_util 0.1.1\");\n     }\n \n     #[test]\n@@ -140,7 +141,7 @@ mod test {\n         let s = format!(\"{:?}\", vi);\n         assert_eq!(\n             s,\n-            \"VersionInfo { crate_name: \\\"rustc_tools_util\\\", major: 0, minor: 1, patch: 0 }\"\n+            \"VersionInfo { crate_name: \\\"rustc_tools_util\\\", major: 0, minor: 1, patch: 1 }\"\n         );\n     }\n "}]}