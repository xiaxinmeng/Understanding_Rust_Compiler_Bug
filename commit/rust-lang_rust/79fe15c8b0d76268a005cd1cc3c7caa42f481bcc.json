{"sha": "79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "node_id": "C_kwDOAAsO6NoAKDc5ZmUxNWM4YjBkNzYyNjhhMDA1Y2QxY2MzYzdjYWE0MmY0ODFiY2M", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-11-28T10:12:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-28T10:12:10Z"}, "message": "Rollup merge of #104795 - estebank:multiline-spans, r=TaKO8Ki\n\nChange multiline span ASCII art visual order\n\nTweak the ASCII art for nested multiline spans so that we minimize line overlaps.\n\nPartially addresses https://github.com/rust-lang/rust/issues/61017.", "tree": {"sha": "d4db27b5d5e8821e50e60be94979afd5ccb8bf75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4db27b5d5e8821e50e60be94979afd5ccb8bf75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjhIl6CRBK7hj4Ov3rIwAA74oIAASxaEcybf/R02zE1r5r744q\nK/CWEuPB84a8huR2ttQcoruD8sSY0V5/mmCbLrk7qCjkGf2L1C1Au8Gen/n7V3rz\nrhiadriAzRNbkxKSGOn4kOFf64JLdI0V3CjTxlre0XBMFTpkcYcrQXt+Gm1MwDZd\ngolC+FNUO+W+brpXhXBoXczg9ppyRfWOGvrsO5LcJwcmAExRfDWeuGv4NBlr4JoA\n9ujsly1VnZSJYjLGlLUnPvqSoB5JcOKIlcdI2E8t/yX545BT+JKVZSh4/DV7vBm8\nAM5RN48YVdsnTpJnDtYNs/5HBsuaSCCItM7gWwZxAYbbS+wUYWu8ELSR+8RXR9c=\n=NyDQ\n-----END PGP SIGNATURE-----\n", "payload": "tree d4db27b5d5e8821e50e60be94979afd5ccb8bf75\nparent f90484df8ad52f73c4f28cf3e4924c2bfa668a38\nparent 136ffa2ab1e4c1b8c1f30a775040b63f65b871da\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1669630330 +0530\ncommitter GitHub <noreply@github.com> 1669630330 +0530\n\nRollup merge of #104795 - estebank:multiline-spans, r=TaKO8Ki\n\nChange multiline span ASCII art visual order\n\nTweak the ASCII art for nested multiline spans so that we minimize line overlaps.\n\nPartially addresses https://github.com/rust-lang/rust/issues/61017.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "html_url": "https://github.com/rust-lang/rust/commit/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f90484df8ad52f73c4f28cf3e4924c2bfa668a38", "url": "https://api.github.com/repos/rust-lang/rust/commits/f90484df8ad52f73c4f28cf3e4924c2bfa668a38", "html_url": "https://github.com/rust-lang/rust/commit/f90484df8ad52f73c4f28cf3e4924c2bfa668a38"}, {"sha": "136ffa2ab1e4c1b8c1f30a775040b63f65b871da", "url": "https://api.github.com/repos/rust-lang/rust/commits/136ffa2ab1e4c1b8c1f30a775040b63f65b871da", "html_url": "https://github.com/rust-lang/rust/commit/136ffa2ab1e4c1b8c1f30a775040b63f65b871da"}], "stats": {"total": 214, "additions": 108, "deletions": 106}, "files": [{"sha": "1fabe15ff83ba4563a5618988f9242640fa67835", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "patch": "@@ -2282,7 +2282,7 @@ impl FileWithAnnotatedLines {\n         }\n \n         // Find overlapping multiline annotations, put them at different depths\n-        multiline_annotations.sort_by_key(|&(_, ref ml)| (ml.line_start, ml.line_end));\n+        multiline_annotations.sort_by_key(|&(_, ref ml)| (ml.line_start, usize::MAX - ml.line_end));\n         for (_, ann) in multiline_annotations.clone() {\n             for (_, a) in multiline_annotations.iter_mut() {\n                 // Move all other multiline annotations overlapping with this one\n@@ -2300,8 +2300,14 @@ impl FileWithAnnotatedLines {\n         }\n \n         let mut max_depth = 0; // max overlapping multiline spans\n-        for (file, ann) in multiline_annotations {\n+        for (_, ann) in &multiline_annotations {\n             max_depth = max(max_depth, ann.depth);\n+        }\n+        // Change order of multispan depth to minimize the number of overlaps in the ASCII art.\n+        for (_, a) in multiline_annotations.iter_mut() {\n+            a.depth = max_depth - a.depth + 1;\n+        }\n+        for (file, ann) in multiline_annotations {\n             let mut end_ann = ann.as_end();\n             if !ann.overlaps_exactly {\n                 // avoid output like"}, {"sha": "539b04535a0d028f8f45f2cbabfe8828e97802ce", "filename": "compiler/rustc_expand/src/tests.rs", "status": "modified", "additions": 54, "deletions": 54, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/compiler%2Frustc_expand%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/compiler%2Frustc_expand%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Ftests.rs?ref=79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "patch": "@@ -272,13 +272,13 @@ error: foo\n  --> test.rs:3:3\n   |\n 3 |      X0 Y0\n-  |  ____^__-\n-  | | ___|\n+  |   ___^__-\n+  |  |___|\n   | ||\n 4 | ||   X1 Y1\n 5 | ||   X2 Y2\n   | ||____^__- `Y` is a good letter too\n-  |  |____|\n+  | |_____|\n   |       `X` is a good letter\n \n \"#,\n@@ -311,12 +311,12 @@ error: foo\n  --> test.rs:3:3\n   |\n 3 |      X0 Y0\n-  |  ____^__-\n-  | | ___|\n+  |   ___^__-\n+  |  |___|\n   | ||\n 4 | ||   Y1 X1\n   | ||____-__^ `X` is a good letter\n-  | |_____|\n+  |  |____|\n   |       `Y` is a good letter too\n \n \"#,\n@@ -351,13 +351,13 @@ error: foo\n  --> test.rs:3:6\n   |\n 3 |      X0 Y0 Z0\n-  |   ______^\n-4 |  |   X1 Y1 Z1\n-  |  |_________-\n+  |  _______^\n+4 | |    X1 Y1 Z1\n+  | | _________-\n 5 | ||   X2 Y2 Z2\n   | ||____^ `X` is a good letter\n-6 | |    X3 Y3 Z3\n-  | |_____- `Y` is a good letter too\n+6 |  |   X3 Y3 Z3\n+  |  |____- `Y` is a good letter too\n \n \"#,\n     );\n@@ -395,15 +395,15 @@ error: foo\n  --> test.rs:3:3\n   |\n 3 |       X0 Y0 Z0\n-  |  _____^__-__-\n-  | | ____|__|\n-  | || ___|\n+  |    ___^__-__-\n+  |   |___|__|\n+  |  ||___|\n   | |||\n 4 | |||   X1 Y1 Z1\n 5 | |||   X2 Y2 Z2\n   | |||____^__-__- `Z` label\n-  |  ||____|__|\n-  |   |____|  `Y` is a good letter too\n+  | ||_____|__|\n+  | |______|  `Y` is a good letter too\n   |        `X` is a good letter\n \n \"#,\n@@ -487,17 +487,17 @@ error: foo\n  --> test.rs:3:6\n   |\n 3 |      X0 Y0 Z0\n-  |   ______^\n-4 |  |   X1 Y1 Z1\n-  |  |____^_-\n+  |  _______^\n+4 | |    X1 Y1 Z1\n+  | | ____^_-\n   | ||____|\n-  | |     `X` is a good letter\n-5 | |    X2 Y2 Z2\n-  | |____-______- `Y` is a good letter too\n-  |  ____|\n-  | |\n-6 | |    X3 Y3 Z3\n-  | |________- `Z`\n+  |  |    `X` is a good letter\n+5 |  |   X2 Y2 Z2\n+  |  |___-______- `Y` is a good letter too\n+  |   ___|\n+  |  |\n+6 |  |   X3 Y3 Z3\n+  |  |_______- `Z`\n \n \"#,\n     );\n@@ -570,14 +570,14 @@ error: foo\n  --> test.rs:3:6\n   |\n 3 |      X0 Y0 Z0\n-  |   ______^\n-4 |  |   X1 Y1 Z1\n-  |  |____^____-\n+  |  _______^\n+4 | |    X1 Y1 Z1\n+  | | ____^____-\n   | ||____|\n-  | |     `X` is a good letter\n-5 | |    X2 Y2 Z2\n-6 | |    X3 Y3 Z3\n-  | |___________- `Y` is a good letter too\n+  |  |    `X` is a good letter\n+5 |  |   X2 Y2 Z2\n+6 |  |   X3 Y3 Z3\n+  |  |__________- `Y` is a good letter too\n \n \"#,\n     );\n@@ -941,18 +941,18 @@ error: foo\n   --> test.rs:3:6\n    |\n 3  |      X0 Y0 Z0\n-   |   ______^\n-4  |  |   X1 Y1 Z1\n-   |  |____^____-\n+   |  _______^\n+4  | |    X1 Y1 Z1\n+   | | ____^____-\n    | ||____|\n-   | |     `X` is a good letter\n-5  | |  1\n-6  | |  2\n-7  | |  3\n-...  |\n-15 | |    X2 Y2 Z2\n-16 | |    X3 Y3 Z3\n-   | |___________- `Y` is a good letter too\n+   |  |    `X` is a good letter\n+5  |  | 1\n+6  |  | 2\n+7  |  | 3\n+...   |\n+15 |  |   X2 Y2 Z2\n+16 |  |   X3 Y3 Z3\n+   |  |__________- `Y` is a good letter too\n \n \"#,\n     );\n@@ -996,21 +996,21 @@ error: foo\n   --> test.rs:3:6\n    |\n 3  |      X0 Y0 Z0\n-   |   ______^\n-4  |  | 1\n-5  |  | 2\n-6  |  | 3\n-7  |  |   X1 Y1 Z1\n-   |  |_________-\n+   |  _______^\n+4  | |  1\n+5  | |  2\n+6  | |  3\n+7  | |    X1 Y1 Z1\n+   | | _________-\n 8  | || 4\n 9  | || 5\n 10 | || 6\n 11 | ||   X2 Y2 Z2\n    | ||__________- `Z` is a good letter too\n-...   |\n-15 |  | 10\n-16 |  |   X3 Y3 Z3\n-   |  |_______^ `Y` is a good letter\n+...  |\n+15 | |  10\n+16 | |    X3 Y3 Z3\n+   | |________^ `Y` is a good letter\n \n \"#,\n     );"}, {"sha": "dd3665f22ac7880503376a2d726fbc8072c03aa7", "filename": "src/test/ui/alloc-error/alloc-error-handler-bad-signature-1.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-1.stderr?ref=79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |    #[alloc_error_handler]\n    |    ---------------------- in this procedural macro expansion\n LL |    fn oom(\n-   |   _^\n-   |  |_|\n+   |  __^\n+   | | _|\n    | ||\n LL | ||     info: &Layout,\n LL | || ) -> ()\n@@ -30,8 +30,8 @@ error[E0308]: mismatched types\n LL |    #[alloc_error_handler]\n    |    ---------------------- in this procedural macro expansion\n LL |    fn oom(\n-   |   _^\n-   |  |_|\n+   |  __^\n+   | | _|\n    | ||\n LL | ||     info: &Layout,\n LL | || ) -> ()"}, {"sha": "adb652fe61659bcf94a699b7dc6b427980a81cd8", "filename": "src/test/ui/alloc-error/alloc-error-handler-bad-signature-2.stderr", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-2.stderr?ref=79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "patch": "@@ -4,14 +4,12 @@ error[E0308]: mismatched types\n LL |    #[alloc_error_handler]\n    |    ---------------------- in this procedural macro expansion\n LL |    fn oom(\n-   |   _^\n-   |  |_|\n+   |  __^\n+   | | _|\n    | ||\n LL | ||     info: Layout,\n LL | || ) {\n-   | || -\n-   | ||_|\n-   | |  arguments to this function are incorrect\n+   | ||_- arguments to this function are incorrect\n LL | |      loop {}\n LL | |  }\n    | |__^ expected struct `Layout`, found struct `core::alloc::Layout`\n@@ -42,14 +40,12 @@ error[E0308]: mismatched types\n LL |    #[alloc_error_handler]\n    |    ---------------------- in this procedural macro expansion\n LL |    fn oom(\n-   |   _^\n-   |  |_|\n+   |  __^\n+   | | _|\n    | ||\n LL | ||     info: Layout,\n LL | || ) {\n-   | || ^\n-   | ||_|\n-   | |  expected `!`, found `()`\n+   | ||_^ expected `!`, found `()`\n LL | |      loop {}\n LL | |  }\n    | |__- expected `!` because of return type"}, {"sha": "034005697b4343b239e27871028732a1f068c5aa", "filename": "src/test/ui/inference/deref-suggestion.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Finference%2Fderef-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Finference%2Fderef-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fderef-suggestion.stderr?ref=79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "patch": "@@ -157,19 +157,19 @@ error[E0308]: `if` and `else` have incompatible types\n   --> $DIR/deref-suggestion.rs:69:12\n    |\n LL |        let val = if true {\n-   |   _______________-\n-LL |  |         *a\n-   |  |         -- expected because of this\n-LL |  |     } else if true {\n-   |  |____________^\n+   |  ________________-\n+LL | |          *a\n+   | |          -- expected because of this\n+LL | |      } else if true {\n+   | | ____________^\n LL | ||\n LL | ||         b\n LL | ||     } else {\n LL | ||         &0\n LL | ||     };\n    | ||     ^\n    | ||_____|\n-   | |______`if` and `else` have incompatible types\n+   |  |_____`if` and `else` have incompatible types\n    |        expected `i32`, found `&{integer}`\n \n error: aborting due to 13 previous errors"}, {"sha": "3abeadf9e4bbeb12ebb3b27bbd94ecc749fe03eb", "filename": "src/test/ui/issues/issue-13497-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13497-2.stderr?ref=79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "patch": "@@ -2,12 +2,12 @@ error[E0515]: cannot return value referencing local variable `rawLines`\n   --> $DIR/issue-13497-2.rs:3:5\n    |\n LL |        rawLines\n-   |   _____^\n-   |  |_____|\n+   |  ______^\n+   | | _____|\n    | ||\n LL | ||         .iter().map(|l| l.trim()).collect()\n    | ||_______________-___________________________^ returns a value referencing data owned by the current function\n-   | |________________|\n+   |  |_______________|\n    |                  `rawLines` is borrowed here\n \n error: aborting due to previous error"}, {"sha": "4caee777a131bb830da6ba797b298b03da760e3f", "filename": "src/test/ui/lint/suggestions.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr?ref=79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "patch": "@@ -41,12 +41,12 @@ warning: variable does not need to be mutable\n   --> $DIR/suggestions.rs:54:13\n    |\n LL |            let mut\n-   |   _____________^\n-   |  |_____________|\n+   |  ______________^\n+   | | _____________|\n    | ||\n LL | ||             b = 1;\n    | ||____________-^\n-   |  |____________|\n+   | |_____________|\n    |               help: remove this `mut`\n \n error: const items should never be `#[no_mangle]`"}, {"sha": "4f938670e5e2c88ab76a8ad53c3e3d59f4327a17", "filename": "src/test/ui/return/issue-86188-return-not-in-fn-body.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.stderr?ref=79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "patch": "@@ -35,17 +35,17 @@ LL | |     }\n error[E0572]: return statement outside of function body\n   --> $DIR/issue-86188-return-not-in-fn-body.rs:36:10\n    |\n-LL |  / fn main() {\n-LL |  |\n-LL |  |     [(); return || {\n-   |  |__________^\n+LL | /  fn main() {\n+LL | |\n+LL | |      [(); return || {\n+   | | __________^\n LL | ||\n LL | ||\n LL | ||         let tx;\n LL | ||     }];\n    | ||_____^ the return is part of this body...\n-LL |  | }\n-   |  |_- ...not the enclosing function body\n+LL | |  }\n+   | |__- ...not the enclosing function body\n \n error: aborting due to 4 previous errors\n "}, {"sha": "260df85653b156890153e712d62d14032886c4be", "filename": "src/test/ui/suggestions/issue-99240-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Fsuggestions%2Fissue-99240-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Fsuggestions%2Fissue-99240-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-99240-2.stderr?ref=79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "patch": "@@ -5,12 +5,12 @@ LL |        Unit,\n    |        ---- enum variant `Alias::Unit` defined here\n ...\n LL |        Alias::\n-   |   _____^\n-   |  |_____|\n+   |  ______^\n+   | | _____|\n    | ||\n LL | ||     Unit();\n    | ||________^_- call expression requires function\n-   | |_________|\n+   |  |________|\n    | \n    |\n help: `Alias::Unit` is a unit enum variant, and does not take parentheses to be constructed"}, {"sha": "31cca323d0e4226e578b79216ce8637a7bc36fa1", "filename": "src/test/ui/suggestions/suggest-remove-refs-3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-remove-refs-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-remove-refs-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-remove-refs-3.stderr?ref=79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "patch": "@@ -2,8 +2,8 @@ error[E0277]: `&&&&&Enumerate<std::slice::Iter<'_, {integer}>>` is not an iterat\n   --> $DIR/suggest-remove-refs-3.rs:6:19\n    |\n LL |        for (i, _) in & & &\n-   |   ___________________^\n-   |  |___________________|\n+   |  ____________________^\n+   | | ___________________|\n    | ||\n LL | ||         & &v\n    | ||___________- help: consider removing 5 leading `&`-references"}, {"sha": "92ba3592967803c41235fd84b4a418528a3bf376", "filename": "src/tools/clippy/tests/ui/async_yields_async.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasync_yields_async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasync_yields_async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fasync_yields_async.stderr?ref=79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "patch": "@@ -2,14 +2,14 @@ error: an async construct yields a type which is itself awaitable\n   --> $DIR/async_yields_async.rs:39:9\n    |\n LL |        let _h = async {\n-   |   ____________________-\n-LL |  |         async {\n-   |  |_________^\n+   |  _____________________-\n+LL | |          async {\n+   | | _________^\n LL | ||             3\n LL | ||         }\n    | ||_________^ awaitable value not awaited\n-LL |  |     };\n-   |  |_____- outer async construct\n+LL | |      };\n+   | |______- outer async construct\n    |\n    = note: `-D clippy::async-yields-async` implied by `-D warnings`\n help: consider awaiting this value\n@@ -36,14 +36,14 @@ error: an async construct yields a type which is itself awaitable\n   --> $DIR/async_yields_async.rs:50:9\n    |\n LL |        let _j = async || {\n-   |   _______________________-\n-LL |  |         async {\n-   |  |_________^\n+   |  ________________________-\n+LL | |          async {\n+   | | _________^\n LL | ||             3\n LL | ||         }\n    | ||_________^ awaitable value not awaited\n-LL |  |     };\n-   |  |_____- outer async construct\n+LL | |      };\n+   | |______- outer async construct\n    |\n help: consider awaiting this value\n    |"}, {"sha": "2e1eb8eb18066796e2eb95c7aa1671ddda5a0e89", "filename": "src/tools/clippy/tests/ui/result_map_unit_fn_unfixable.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fresult_map_unit_fn_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79fe15c8b0d76268a005cd1cc3c7caa42f481bcc/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fresult_map_unit_fn_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fresult_map_unit_fn_unfixable.stderr?ref=79fe15c8b0d76268a005cd1cc3c7caa42f481bcc", "patch": "@@ -20,14 +20,14 @@ error: called `map(f)` on an `Result` value where `f` is a closure that returns\n   --> $DIR/result_map_unit_fn_unfixable.rs:29:5\n    |\n LL |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n+   |  ______^\n+   | | _____|\n    | ||\n LL | ||         do_nothing(value);\n LL | ||         do_nothing(value)\n LL | ||     });\n    | ||______^- help: try this: `if let Ok(value) = x.field { ... }`\n-   | |_______|\n+   |  |______|\n    | \n \n error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`"}]}