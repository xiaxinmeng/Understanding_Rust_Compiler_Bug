{"sha": "817f05986ae77538e5721223a55b14cd780dbd73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxN2YwNTk4NmFlNzc1MzhlNTcyMTIyM2E1NWIxNGNkNzgwZGJkNzM=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-04T20:40:31Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-07T15:54:50Z"}, "message": "remove false positives of unused_braces", "tree": {"sha": "f586e843dc6e3b3b21ea6be73e4423dd24591e61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f586e843dc6e3b3b21ea6be73e4423dd24591e61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/817f05986ae77538e5721223a55b14cd780dbd73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/817f05986ae77538e5721223a55b14cd780dbd73", "html_url": "https://github.com/rust-lang/rust/commit/817f05986ae77538e5721223a55b14cd780dbd73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/817f05986ae77538e5721223a55b14cd780dbd73/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39b62533c7f9d0581a6ea9b9fc2cc51f21c3b5b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/39b62533c7f9d0581a6ea9b9fc2cc51f21c3b5b0", "html_url": "https://github.com/rust-lang/rust/commit/39b62533c7f9d0581a6ea9b9fc2cc51f21c3b5b0"}], "stats": {"total": 97, "additions": 72, "deletions": 25}, "files": [{"sha": "aa7c87e9f7bd2a12c49fe59cbc158e32c6fc128f", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/817f05986ae77538e5721223a55b14cd780dbd73/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/817f05986ae77538e5721223a55b14cd780dbd73/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=817f05986ae77538e5721223a55b14cd780dbd73", "patch": "@@ -355,6 +355,19 @@ impl From<UnusedDelimsCtx> for &'static str {\n trait UnusedDelimLint {\n     const DELIM_STR: &'static str;\n \n+    /// Due to `ref` pattern, there can be a difference between using\n+    /// `{ expr }` and `expr` in pattern-matching contexts. This means\n+    /// that we should only lint `unused_parens` and not `unused_braces`\n+    /// in this case.\n+    ///\n+    /// ```rust\n+    /// let mut a = 7;\n+    /// let ref b = { a }; // We actually borrow a copy of `a` here.\n+    /// a += 1; // By mutating `a` we invalidate any borrows of `a`.\n+    /// assert_eq!(b + 1, a); // `b` does not borrow `a`, so we can still use it here.\n+    /// ```\n+    const LINT_EXPR_IN_PATTERN_MATCHING_CTX: bool;\n+\n     // this cannot be a constant is it refers to a static.\n     fn lint(&self) -> &'static Lint;\n \n@@ -454,7 +467,10 @@ trait UnusedDelimLint {\n     fn check_expr(&mut self, cx: &EarlyContext<'_>, e: &ast::Expr) {\n         use rustc_ast::ast::ExprKind::*;\n         let (value, ctx, followed_by_block, left_pos, right_pos) = match e.kind {\n-            If(ref cond, ref block, ..) => {\n+            // Do not lint `unused_braces` in `if let` expressions.\n+            If(ref cond, ref block, ..)\n+                if !matches!(cond.kind, Let(_, _)) || Self::LINT_EXPR_IN_PATTERN_MATCHING_CTX =>\n+            {\n                 let left = e.span.lo() + rustc_span::BytePos(2);\n                 let right = block.span.lo();\n                 (cond, UnusedDelimsCtx::IfCond, true, Some(left), Some(right))\n@@ -470,7 +486,7 @@ trait UnusedDelimLint {\n                 (cond, UnusedDelimsCtx::ForIterExpr, true, None, Some(block.span.lo()))\n             }\n \n-            Match(ref head, _) => {\n+            Match(ref head, _) if Self::LINT_EXPR_IN_PATTERN_MATCHING_CTX => {\n                 let left = e.span.lo() + rustc_span::BytePos(5);\n                 (head, UnusedDelimsCtx::MatchScrutineeExpr, true, Some(left), None)\n             }\n@@ -512,7 +528,7 @@ trait UnusedDelimLint {\n \n     fn check_stmt(&mut self, cx: &EarlyContext<'_>, s: &ast::Stmt) {\n         match s.kind {\n-            StmtKind::Local(ref local) => {\n+            StmtKind::Local(ref local) if Self::LINT_EXPR_IN_PATTERN_MATCHING_CTX => {\n                 if let Some(ref value) = local.init {\n                     self.check_unused_delims_expr(\n                         cx,\n@@ -565,6 +581,8 @@ declare_lint_pass!(UnusedParens => [UNUSED_PARENS]);\n impl UnusedDelimLint for UnusedParens {\n     const DELIM_STR: &'static str = \"parentheses\";\n \n+    const LINT_EXPR_IN_PATTERN_MATCHING_CTX: bool = true;\n+\n     fn lint(&self) -> &'static Lint {\n         UNUSED_PARENS\n     }\n@@ -736,6 +754,8 @@ declare_lint_pass!(UnusedBraces => [UNUSED_BRACES]);\n impl UnusedDelimLint for UnusedBraces {\n     const DELIM_STR: &'static str = \"braces\";\n \n+    const LINT_EXPR_IN_PATTERN_MATCHING_CTX: bool = false;\n+\n     fn lint(&self) -> &'static Lint {\n         UNUSED_BRACES\n     }"}, {"sha": "952398ef0685bd8f0345eb2ac6aa4fe9e7e5b21b", "filename": "src/test/ui/lint/unused_braces.rs", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/817f05986ae77538e5721223a55b14cd780dbd73/src%2Ftest%2Fui%2Flint%2Funused_braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/817f05986ae77538e5721223a55b14cd780dbd73/src%2Ftest%2Fui%2Flint%2Funused_braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_braces.rs?ref=817f05986ae77538e5721223a55b14cd780dbd73", "patch": "@@ -1,29 +1,48 @@\n // check-pass\n #![warn(unused_braces, unused_parens)]\n \n+fn consume<T>(_: T) {}\n+\n fn main() {\n     let _ = (7);\n     //~^WARN unnecessary parentheses\n \n-    let _ = { 7 };\n-    //~^ WARN unnecessary braces\n+    // Do not emit a lint in these cases,\n+    // as we have to be careful with\n+    // `ref` patterns.\n+    {\n+        let _ = { 7 };\n+\n+        if let 7 = { 7 } { }\n+\n+        match { 7 } {\n+            _ => (),\n+        }\n+    }\n \n-    if let 7 = { 7 } {\n+    if { true } {\n+        //~^ WARN unnecessary braces\n+    }\n+\n+    while { false } {\n         //~^ WARN unnecessary braces\n     }\n \n     let _: [u8; { 3 }];\n     //~^ WARN unnecessary braces\n \n-    // do not emit error for multiline blocks.\n+    consume({ 7 });\n+    //~^ WARN unnecessary braces\n+\n+    // Do not emit lint for multiline blocks.\n     let _ = {\n         7\n     };\n \n-    // do not emit error for unsafe blocks.\n+    // Do not emit lint for unsafe blocks.\n     let _ = unsafe { 7 };\n \n-    // do not emit error, as the `{` would then\n+    // Do not emit lint, as the `{` would then\n     // be parsed as part of the `return`.\n     if { return } {\n "}, {"sha": "f195c00241836b375e09a4dc55166b9af42c36e7", "filename": "src/test/ui/lint/unused_braces.stderr", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/817f05986ae77538e5721223a55b14cd780dbd73/src%2Ftest%2Fui%2Flint%2Funused_braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/817f05986ae77538e5721223a55b14cd780dbd73/src%2Ftest%2Fui%2Flint%2Funused_braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_braces.stderr?ref=817f05986ae77538e5721223a55b14cd780dbd73", "patch": "@@ -1,5 +1,5 @@\n warning: unnecessary parentheses around assigned value\n-  --> $DIR/unused_braces.rs:5:13\n+  --> $DIR/unused_braces.rs:7:13\n    |\n LL |     let _ = (7);\n    |             ^^^ help: remove these parentheses\n@@ -10,27 +10,33 @@ note: the lint level is defined here\n LL | #![warn(unused_braces, unused_parens)]\n    |                        ^^^^^^^^^^^^^\n \n-warning: unnecessary braces around assigned value\n-  --> $DIR/unused_braces.rs:8:13\n+warning: unnecessary braces around `if` condition\n+  --> $DIR/unused_braces.rs:23:8\n    |\n-LL |     let _ = { 7 };\n-   |             ^^^^^ help: remove these braces\n+LL |     if { true } {\n+   |        ^^^^^^^^ help: remove these braces\n    |\n note: the lint level is defined here\n   --> $DIR/unused_braces.rs:2:9\n    |\n LL | #![warn(unused_braces, unused_parens)]\n    |         ^^^^^^^^^^^^^\n \n-warning: unnecessary braces around `let` scrutinee expression\n-  --> $DIR/unused_braces.rs:11:16\n+warning: unnecessary braces around `while` condition\n+  --> $DIR/unused_braces.rs:27:11\n    |\n-LL |     if let 7 = { 7 } {\n-   |                ^^^^^ help: remove these braces\n+LL |     while { false } {\n+   |           ^^^^^^^^^ help: remove these braces\n \n warning: unnecessary braces around const expression\n-  --> $DIR/unused_braces.rs:15:17\n+  --> $DIR/unused_braces.rs:31:17\n    |\n LL |     let _: [u8; { 3 }];\n    |                 ^^^^^ help: remove these braces\n \n+warning: unnecessary braces around function argument\n+  --> $DIR/unused_braces.rs:34:13\n+   |\n+LL |     consume({ 7 });\n+   |             ^^^^^ help: remove these braces\n+"}, {"sha": "d0b059744e1fd94e00ba6dd8e2989691c619f227", "filename": "src/test/ui/lint/unused_braces_borrow.rs", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/817f05986ae77538e5721223a55b14cd780dbd73/src%2Ftest%2Fui%2Flint%2Funused_braces_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/817f05986ae77538e5721223a55b14cd780dbd73/src%2Ftest%2Fui%2Flint%2Funused_braces_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_braces_borrow.rs?ref=817f05986ae77538e5721223a55b14cd780dbd73", "patch": "@@ -10,13 +10,15 @@ struct A {\n     b: u32,\n }\n \n+fn consume<T>(_: T) {}\n+\n fn main() {\n     let a = A {\n         a: 42,\n         b: 1729,\n     };\n \n-    let _ = &{ a.b };\n-    let _ = { a.b };\n+    consume(&{ a.b });\n+    consume({ a.b });\n     //~^ WARN unnecessary braces\n }", "previous_filename": "src/test/ui/lint/unused_parens_borrow.rs"}, {"sha": "82fb4375611c9e4e6ef40b5932c7c7a0fec8c812", "filename": "src/test/ui/lint/unused_braces_borrow.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/817f05986ae77538e5721223a55b14cd780dbd73/src%2Ftest%2Fui%2Flint%2Funused_braces_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/817f05986ae77538e5721223a55b14cd780dbd73/src%2Ftest%2Fui%2Flint%2Funused_braces_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_braces_borrow.stderr?ref=817f05986ae77538e5721223a55b14cd780dbd73", "patch": "@@ -1,11 +1,11 @@\n-warning: unnecessary braces around assigned value\n-  --> $DIR/unused_parens_borrow.rs:20:13\n+warning: unnecessary braces around function argument\n+  --> $DIR/unused_braces_borrow.rs:22:13\n    |\n-LL |     let _ = { a.b };\n+LL |     consume({ a.b });\n    |             ^^^^^^^ help: remove these braces\n    |\n note: the lint level is defined here\n-  --> $DIR/unused_parens_borrow.rs:2:9\n+  --> $DIR/unused_braces_borrow.rs:2:9\n    |\n LL | #![warn(unused_braces)]\n    |         ^^^^^^^^^^^^^", "previous_filename": "src/test/ui/lint/unused_parens_borrow.stderr"}]}