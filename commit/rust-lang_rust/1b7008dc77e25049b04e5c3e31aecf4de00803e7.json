{"sha": "1b7008dc77e25049b04e5c3e31aecf4de00803e7", "node_id": "C_kwDOAAsO6NoAKDFiNzAwOGRjNzdlMjUwNDliMDRlNWMzZTMxYWVjZjRkZTAwODAzZTc", "commit": {"author": {"name": "rainy-me", "email": "github@yue.coffee", "date": "2022-04-14T12:18:27Z"}, "committer": {"name": "rainy-me", "email": "github@yue.coffee", "date": "2022-04-14T12:18:27Z"}, "message": "refactor: change to use peekable", "tree": {"sha": "da08707577cf2d35a8dacd0410a95b1cb0ff8e26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da08707577cf2d35a8dacd0410a95b1cb0ff8e26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b7008dc77e25049b04e5c3e31aecf4de00803e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b7008dc77e25049b04e5c3e31aecf4de00803e7", "html_url": "https://github.com/rust-lang/rust/commit/1b7008dc77e25049b04e5c3e31aecf4de00803e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b7008dc77e25049b04e5c3e31aecf4de00803e7/comments", "author": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a0f8d517529cdaca6750966536052b5104b05be", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a0f8d517529cdaca6750966536052b5104b05be", "html_url": "https://github.com/rust-lang/rust/commit/4a0f8d517529cdaca6750966536052b5104b05be"}], "stats": {"total": 39, "additions": 18, "deletions": 21}, "files": [{"sha": "e5ee1d5dab92e5f03b604f49de586c230d9f5bc8", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/1b7008dc77e25049b04e5c3e31aecf4de00803e7/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7008dc77e25049b04e5c3e31aecf4de00803e7/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=1b7008dc77e25049b04e5c3e31aecf4de00803e7", "patch": "@@ -557,39 +557,36 @@ impl<'a> StringReader<'a> {\n         );\n         let mut nested_block_comment_open_idxs = vec![];\n         let mut last_nested_block_comment_idxs = None;\n-        let mut content_chars = self.str_from(start).char_indices();\n+        let mut content_chars = self.str_from(start).char_indices().peekable();\n \n-        if let Some((_, mut last_char)) = content_chars.next() {\n-            while let Some((idx, c)) = content_chars.next() {\n-                match c {\n-                    '*' if last_char == '/' => {\n-                        nested_block_comment_open_idxs.push(idx);\n-                    }\n-                    '/' if last_char == '*' => {\n-                        last_nested_block_comment_idxs =\n-                            nested_block_comment_open_idxs.pop().map(|open_idx| (open_idx, idx));\n-                    }\n-                    _ => {}\n-                };\n-                last_char = c;\n-            }\n+        while let Some((idx, current_char)) = content_chars.next() {\n+            match content_chars.peek() {\n+                Some((_, '*')) if current_char == '/' => {\n+                    nested_block_comment_open_idxs.push(idx);\n+                }\n+                Some((_, '/')) if current_char == '*' => {\n+                    last_nested_block_comment_idxs =\n+                        nested_block_comment_open_idxs.pop().map(|open_idx| (open_idx, idx));\n+                }\n+                _ => {}\n+            };\n         }\n \n         if let Some((nested_open_idx, nested_close_idx)) = last_nested_block_comment_idxs {\n             err.span_label(self.mk_sp(start, start + BytePos(2)), msg)\n                 .span_label(\n                     self.mk_sp(\n-                        start + BytePos(nested_open_idx as u32 - 1),\n-                        start + BytePos(nested_open_idx as u32 + 1),\n+                        start + BytePos(nested_open_idx as u32),\n+                        start + BytePos(nested_open_idx as u32 + 2),\n                     ),\n                     \"...as last nested comment starts here, maybe you want to close this instead?\",\n                 )\n                 .span_label(\n                     self.mk_sp(\n-                        start + BytePos(nested_close_idx as u32 - 1),\n-                        start + BytePos(nested_close_idx as u32 + 1),\n+                        start + BytePos(nested_close_idx as u32),\n+                        start + BytePos(nested_close_idx as u32 + 2),\n                     ),\n-                    \"...and last nested comment terminates here\",\n+                    \"...and last nested comment terminates here.\",\n                 );\n         }\n "}, {"sha": "3653e76c9cbda713c6da614711217e67accbd01f", "filename": "src/test/ui/unterminated-nested-comment.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b7008dc77e25049b04e5c3e31aecf4de00803e7/src%2Ftest%2Fui%2Funterminated-nested-comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b7008dc77e25049b04e5c3e31aecf4de00803e7/src%2Ftest%2Fui%2Funterminated-nested-comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funterminated-nested-comment.stderr?ref=1b7008dc77e25049b04e5c3e31aecf4de00803e7", "patch": "@@ -14,7 +14,7 @@ LL | | /*\n LL | | */\n    | |_--^\n    |   |\n-   |   ...and last nested comment terminates here\n+   |   ...and last nested comment terminates here.\n \n error: aborting due to previous error\n "}]}