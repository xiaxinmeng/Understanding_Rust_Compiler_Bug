{"sha": "cdc6af6bda50641a061608f433ec2cff53bf66d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkYzZhZjZiZGE1MDY0MWEwNjE2MDhmNDMzZWMyY2ZmNTNiZjY2ZDM=", "commit": {"author": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-12-18T13:58:48Z"}, "committer": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-12-18T13:58:48Z"}, "message": "Pass test", "tree": {"sha": "d43b7e73a7e789a63c292f58d185eeaeefa0f0bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d43b7e73a7e789a63c292f58d185eeaeefa0f0bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdc6af6bda50641a061608f433ec2cff53bf66d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdc6af6bda50641a061608f433ec2cff53bf66d3", "html_url": "https://github.com/rust-lang/rust/commit/cdc6af6bda50641a061608f433ec2cff53bf66d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdc6af6bda50641a061608f433ec2cff53bf66d3/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ec43ee07a26667bb1458990ec667f82670aff22", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ec43ee07a26667bb1458990ec667f82670aff22", "html_url": "https://github.com/rust-lang/rust/commit/7ec43ee07a26667bb1458990ec667f82670aff22"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3495cfa6d3ddf3625852aab0568c059e1b417a73", "filename": "crates/ra_ide/src/call_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cdc6af6bda50641a061608f433ec2cff53bf66d3/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdc6af6bda50641a061608f433ec2cff53bf66d3/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_info.rs?ref=cdc6af6bda50641a061608f433ec2cff53bf66d3", "patch": "@@ -18,7 +18,7 @@ pub(crate) fn call_info(db: &RootDatabase, position: FilePosition) -> Option<Cal\n     // Find the calling expression and it's NameRef\n     let calling_node = FnCallNode::with_node(&token.value.parent())?;\n     let name_ref = calling_node.name_ref()?;\n-    let name_ref = hir::InFile::new(position.file_id.into(), name_ref.syntax());\n+    let name_ref = token.with_value(name_ref.syntax());\n \n     let analyzer = hir::SourceAnalyzer::new(db, name_ref, None);\n     let (mut call_info, has_self) = match &calling_node {"}]}