{"sha": "904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNGEwYmRlOTNmMDM0OGY2OTkxNGVlOTBiMWY4YjZlNGUwZDdjYmM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-12-27T15:22:55Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-01-02T22:35:05Z"}, "message": "select.rs: unsizing coercion should use a subtype\n\nWhen we coerce `dyn Foo` to `dyn Bar`, that is OK as long as `Foo` is\nusable in all contexts where `Bar` is usable (hence using the source\nmust be a subtype of the target).\n\nThis is needed for the universe-based code to handle\n`old-lub-glb-object`; that test used to work sort of by accident\nbefore with the old code.", "tree": {"sha": "bacf1849877687975e2b51de611fc140cde005e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bacf1849877687975e2b51de611fc140cde005e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc", "html_url": "https://github.com/rust-lang/rust/commit/904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4170829e536f5b284c4c66f291acfb0da23bb526", "url": "https://api.github.com/repos/rust-lang/rust/commits/4170829e536f5b284c4c66f291acfb0da23bb526", "html_url": "https://github.com/rust-lang/rust/commit/4170829e536f5b284c4c66f291acfb0da23bb526"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "2576578f4c29446e9a1365aef105aaa2763d7c4e", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc", "patch": "@@ -3268,10 +3268,10 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n                         );\n                     tcx.mk_existential_predicates(iter)\n                 });\n-                let new_trait = tcx.mk_dynamic(existential_predicates, r_b);\n+                let source_trait = tcx.mk_dynamic(existential_predicates, r_b);\n                 let InferOk { obligations, .. } = self.infcx\n                     .at(&obligation.cause, obligation.param_env)\n-                    .eq(target, new_trait)\n+                    .sup(target, source_trait)\n                     .map_err(|_| Unimplemented)?;\n                 nested.extend(obligations);\n "}, {"sha": "132df608af71a20fa6f3bcf61fd51afae8fdad15", "filename": "src/test/ui/lub-glb/old-lub-glb-object.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc/src%2Ftest%2Fui%2Flub-glb%2Fold-lub-glb-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc/src%2Ftest%2Fui%2Flub-glb%2Fold-lub-glb-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flub-glb%2Fold-lub-glb-object.rs?ref=904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc", "patch": "@@ -7,7 +7,7 @@ fn foo(\n     x: &for<'a, 'b> Foo<&'a u8, &'b u8>,\n     y: &for<'a> Foo<&'a u8, &'a u8>,\n ) {\n-    let z = match 22 { //~ ERROR incompatible types\n+    let z = match 22 { //~ ERROR cannot infer\n         0 => x,\n         _ => y,\n     };"}, {"sha": "3a7478b73b85a588cb2ddffa251ed1b298833fd5", "filename": "src/test/ui/lub-glb/old-lub-glb-object.stderr", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc/src%2Ftest%2Fui%2Flub-glb%2Fold-lub-glb-object.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc/src%2Ftest%2Fui%2Flub-glb%2Fold-lub-glb-object.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flub-glb%2Fold-lub-glb-object.stderr?ref=904a0bde93f0348f69914ee90b1f8b6e4e0d7cbc", "patch": "@@ -1,17 +1,19 @@\n error[E0308]: match arms have incompatible types\n   --> $DIR/old-lub-glb-object.rs:10:13\n    |\n-LL |       let z = match 22 { //~ ERROR incompatible types\n+LL |       let z = match 22 { //~ ERROR cannot infer\n    |  _____________^\n LL | |         0 => x,\n LL | |         _ => y,\n-   | |              - match arm with an incompatible type\n LL | |     };\n-   | |_____^ expected bound lifetime parameter 'a, found concrete lifetime\n+   | |_____^\n    |\n-   = note: expected type `&dyn for<'a, 'b> Foo<&'a u8, &'b u8>`\n-              found type `&dyn for<'a> Foo<&'a u8, &'a u8>`\n+   = note: first, the lifetime cannot outlive lifetime RePlaceholder(Placeholder { universe: U5, name: BrNamed(crate0:DefIndex(1:11), 'a) })...\n+   = note: ...but the lifetime must also be valid for lifetime RePlaceholder(Placeholder { universe: U5, name: BrNamed(crate0:DefIndex(1:12), 'b) })...\n+   = note: ...so that the types are compatible:\n+           expected dyn for<'a, 'b> Foo<&'a u8, &'b u8>\n+              found dyn for<'a> Foo<&'a u8, &'a u8>\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0308`.\n+For more information about this error, try `rustc --explain E0495`."}]}