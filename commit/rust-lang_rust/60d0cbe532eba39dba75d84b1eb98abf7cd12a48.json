{"sha": "60d0cbe532eba39dba75d84b1eb98abf7cd12a48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwZDBjYmU1MzJlYmEzOWRiYTc1ZDg0YjFlYjk4YWJmN2NkMTJhNDg=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-01T08:25:16Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-10T12:39:33Z"}, "message": "Add insert_same extension to HashMap", "tree": {"sha": "a3d12f4873961aa189ecbe7bd8c20250d96df883", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3d12f4873961aa189ecbe7bd8c20250d96df883"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60d0cbe532eba39dba75d84b1eb98abf7cd12a48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60d0cbe532eba39dba75d84b1eb98abf7cd12a48", "html_url": "https://github.com/rust-lang/rust/commit/60d0cbe532eba39dba75d84b1eb98abf7cd12a48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60d0cbe532eba39dba75d84b1eb98abf7cd12a48/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5a602e364d5083a4c475747ad08c81ef29897bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5a602e364d5083a4c475747ad08c81ef29897bf", "html_url": "https://github.com/rust-lang/rust/commit/e5a602e364d5083a4c475747ad08c81ef29897bf"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "19039b9b0b0fcc9bb4d7a86b0c5aff8cbe00236c", "filename": "src/librustc_data_structures/sync.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/60d0cbe532eba39dba75d84b1eb98abf7cd12a48/src%2Flibrustc_data_structures%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60d0cbe532eba39dba75d84b1eb98abf7cd12a48/src%2Flibrustc_data_structures%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsync.rs?ref=60d0cbe532eba39dba75d84b1eb98abf7cd12a48", "patch": "@@ -29,6 +29,8 @@\n //! `rustc_erase_owner!` erases a OwningRef owner into Erased or Erased + Send + Sync\n //! depending on the value of cfg!(parallel_queries).\n \n+use std::collections::HashMap;\n+use std::hash::{Hash, BuildHasher};\n use std::cmp::Ordering;\n use std::fmt::Debug;\n use std::fmt::Formatter;\n@@ -227,6 +229,18 @@ pub fn assert_sync<T: ?Sized + Sync>() {}\n pub fn assert_send_val<T: ?Sized + Send>(_t: &T) {}\n pub fn assert_send_sync_val<T: ?Sized + Sync + Send>(_t: &T) {}\n \n+pub trait HashMapExt<K, V> {\n+    /// Same as HashMap::insert, but it may panic if there's already an\n+    /// entry for `key` with a value not equal to `value`\n+    fn insert_same(&mut self, key: K, value: V);\n+}\n+\n+impl<K: Eq + Hash, V: Eq, S: BuildHasher> HashMapExt<K, V> for HashMap<K, V, S> {\n+    fn insert_same(&mut self, key: K, value: V) {\n+        self.entry(key).and_modify(|old| assert!(*old == value)).or_insert(value);\n+    }\n+}\n+\n impl<T: Copy + Debug> Debug for LockCell<T> {\n     fn fmt(&self, f: &mut Formatter) -> fmt::Result {\n         f.debug_struct(\"LockCell\")"}]}