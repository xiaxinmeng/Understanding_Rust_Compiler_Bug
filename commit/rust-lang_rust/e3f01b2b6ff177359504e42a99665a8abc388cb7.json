{"sha": "e3f01b2b6ff177359504e42a99665a8abc388cb7", "node_id": "C_kwDOAAsO6NoAKGUzZjAxYjJiNmZmMTc3MzU5NTA0ZTQyYTk5NjY1YThhYmMzODhjYjc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-19T08:40:05Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-19T08:40:05Z"}, "message": "never type is const Drop", "tree": {"sha": "29dd9880b1c500e979dafad45fe26818e92662d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29dd9880b1c500e979dafad45fe26818e92662d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3f01b2b6ff177359504e42a99665a8abc388cb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3f01b2b6ff177359504e42a99665a8abc388cb7", "html_url": "https://github.com/rust-lang/rust/commit/e3f01b2b6ff177359504e42a99665a8abc388cb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3f01b2b6ff177359504e42a99665a8abc388cb7/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba87be05cfa8f9a02d673a64aa2ee83976d80e60", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba87be05cfa8f9a02d673a64aa2ee83976d80e60", "html_url": "https://github.com/rust-lang/rust/commit/ba87be05cfa8f9a02d673a64aa2ee83976d80e60"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "77db3bd2692cc0898075b421c9fdcabd70ea026b", "filename": "compiler/rustc_trait_selection/src/traits/select/candidate_assembly.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3f01b2b6ff177359504e42a99665a8abc388cb7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3f01b2b6ff177359504e42a99665a8abc388cb7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs?ref=e3f01b2b6ff177359504e42a99665a8abc388cb7", "patch": "@@ -932,7 +932,6 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             | ty::Bound(..)\n             | ty::Param(_)\n             | ty::Placeholder(_)\n-            | ty::Never\n             | ty::Foreign(_)\n             | ty::Projection(_) => {\n                 // We don't know if these are `~const Drop`, at least\n@@ -951,6 +950,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             | ty::Ref(..)\n             | ty::FnDef(..)\n             | ty::FnPtr(_)\n+            | ty::Never\n             | ty::Array(..)\n             | ty::Slice(_)\n             | ty::Closure(..)"}, {"sha": "35aebd9900fc9f5cc382e71d1be4d2a77296fc5d", "filename": "compiler/rustc_trait_selection/src/traits/select/confirmation.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e3f01b2b6ff177359504e42a99665a8abc388cb7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3f01b2b6ff177359504e42a99665a8abc388cb7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs?ref=e3f01b2b6ff177359504e42a99665a8abc388cb7", "patch": "@@ -1103,6 +1103,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         let tcx = self.tcx();\n         let self_ty = self.infcx.shallow_resolve(obligation.self_ty());\n \n+        // Skip binder here (*)\n         let nested_tys = match *self_ty.skip_binder().kind() {\n             ty::Bool\n             | ty::Char\n@@ -1116,7 +1117,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             | ty::Ref(..)\n             | ty::FnDef(..)\n             | ty::FnPtr(_)\n-            | ty::Projection(_) => vec![],\n+            | ty::Never => vec![],\n \n             ty::Adt(def, substs) => def.all_fields().map(|f| f.ty(tcx, substs)).collect(),\n \n@@ -1138,8 +1139,8 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             | ty::Bound(_, _)\n             | ty::Param(_)\n             | ty::Placeholder(_)\n-            | ty::Never\n             | ty::Foreign(_)\n+            | ty::Projection(_)\n             | ty::Infer(_) => {\n                 unreachable!();\n             }\n@@ -1165,6 +1166,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                     obligation.param_env,\n                     cause.clone(),\n                     obligation.recursion_depth + 1,\n+                    // Rebinding here (*)\n                     self_ty\n                         .rebind(ty::TraitPredicate {\n                             trait_ref: ty::TraitRef {"}]}