{"sha": "eefb8e206504e01054fdd4843c31270a3945e49c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZmI4ZTIwNjUwNGUwMTA1NGZkZDQ4NDNjMzEyNzBhMzk0NWU0OWM=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-03-25T07:42:15Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-03-25T07:44:35Z"}, "message": "unbreak bitrig/openbsd build after 8389253d\n\n`PathBuf::new` have been changed. Use `PathBuf::from` instead.\n\nApply the same change for freebsd too, while here.", "tree": {"sha": "971b8acf5ef2b69f317f135365138a8c5b138500", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/971b8acf5ef2b69f317f135365138a8c5b138500"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eefb8e206504e01054fdd4843c31270a3945e49c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eefb8e206504e01054fdd4843c31270a3945e49c", "html_url": "https://github.com/rust-lang/rust/commit/eefb8e206504e01054fdd4843c31270a3945e49c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eefb8e206504e01054fdd4843c31270a3945e49c/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "593db005d4dbce2ff72009c1ba03477b031b2c0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/593db005d4dbce2ff72009c1ba03477b031b2c0f", "html_url": "https://github.com/rust-lang/rust/commit/593db005d4dbce2ff72009c1ba03477b031b2c0f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7cd27ed3afc7b13b1edecb111d7916c7b59c4f69", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eefb8e206504e01054fdd4843c31270a3945e49c/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eefb8e206504e01054fdd4843c31270a3945e49c/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=eefb8e206504e01054fdd4843c31270a3945e49c", "patch": "@@ -206,7 +206,7 @@ pub fn current_exe() -> io::Result<PathBuf> {\n         if err != 0 { return Err(io::Error::last_os_error()); }\n         if sz == 0 { return Err(io::Error::last_os_error()); }\n         v.set_len(sz as uint - 1); // chop off trailing NUL\n-        Ok(PathBuf::new::<OsString>(OsStringExt::from_vec(v)))\n+        Ok(PathBuf::from(OsString::from_vec(v)))\n     }\n }\n \n@@ -232,7 +232,7 @@ pub fn current_exe() -> io::Result<PathBuf> {\n             Err(io::Error::last_os_error())\n         } else {\n             let vec = CStr::from_ptr(v).to_bytes().to_vec();\n-            Ok(PathBuf::new::<OsString>(OsStringExt::from_vec(vec)))\n+            Ok(PathBuf::from(OsString::from_vec(vec)))\n         }\n     }\n }"}]}