{"sha": "6f5c09849ed46b767922675d18e9d7fcbfbb69e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmNWMwOTg0OWVkNDZiNzY3OTIyNjc1ZDE4ZTlkN2ZjYmZiYjY5ZTI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-09-17T15:41:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-17T15:41:17Z"}, "message": "Rollup merge of #88949 - FabianWolff:issue-87563, r=estebank\n\nFix handling of `hir::GenericArg::Infer` in `wrong_number_of_generic_args.rs`\n\nFixes #87563. More precisely, I have fixed the \"index out of bounds\" error, which is what #87563 is about. The example given there still ICEs due to running into this `todo!()`, but I'd say that this is a separate issue:\nhttps://github.com/rust-lang/rust/blob/c3c0f80d6081092faff801542dd82f0e2420152b/compiler/rustc_typeck/src/astconv/mod.rs#L460-L463", "tree": {"sha": "2bfa25578745ba820d8fdd42d7d21008a205fb51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bfa25578745ba820d8fdd42d7d21008a205fb51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f5c09849ed46b767922675d18e9d7fcbfbb69e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhRLcdCRBK7hj4Ov3rIwAAsvUIADPksHL4UC0jIy9zxq+PuKoY\n9NvJP3cHW5x2RWVji7Jr5/3EW5z/Kn9y2KzAiN4EJlDaCoscHboa2fl/Ur3elTUh\nLPkdBCFnmKrOmLV3rmBrQdwp9EOw4bVWw/G6c37vqc0qPpaVzc7/HUjkWXuMI6io\nchBIM6MYJTpOo+XbYxaCKCHFRBbUt9KsImPaOLie1jM61gA/USK8/xFk1SMQvQW4\nMxHrhKDTeuTv0bs/Uv4VnhqQjiw0G8CEAmrJOg46NxByc+b6S3p2HKRTQfuOX4In\nb+sAWZkthxz56km71ZjRXRMCGf31Pzs5Qgrguljqv4MMEXcRZcajUU3u37P1+F0=\n=s4NF\n-----END PGP SIGNATURE-----\n", "payload": "tree 2bfa25578745ba820d8fdd42d7d21008a205fb51\nparent 307f2ddfa4d0cdbf64a4f2c756566e610853e511\nparent 2a2bfd1e59e9f84d2f68c0587bd7d7c93a237a46\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1631893277 +0200\ncommitter GitHub <noreply@github.com> 1631893277 +0200\n\nRollup merge of #88949 - FabianWolff:issue-87563, r=estebank\n\nFix handling of `hir::GenericArg::Infer` in `wrong_number_of_generic_args.rs`\n\nFixes #87563. More precisely, I have fixed the \"index out of bounds\" error, which is what #87563 is about. The example given there still ICEs due to running into this `todo!()`, but I'd say that this is a separate issue:\nhttps://github.com/rust-lang/rust/blob/c3c0f80d6081092faff801542dd82f0e2420152b/compiler/rustc_typeck/src/astconv/mod.rs#L460-L463\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f5c09849ed46b767922675d18e9d7fcbfbb69e2", "html_url": "https://github.com/rust-lang/rust/commit/6f5c09849ed46b767922675d18e9d7fcbfbb69e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f5c09849ed46b767922675d18e9d7fcbfbb69e2/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "307f2ddfa4d0cdbf64a4f2c756566e610853e511", "url": "https://api.github.com/repos/rust-lang/rust/commits/307f2ddfa4d0cdbf64a4f2c756566e610853e511", "html_url": "https://github.com/rust-lang/rust/commit/307f2ddfa4d0cdbf64a4f2c756566e610853e511"}, {"sha": "2a2bfd1e59e9f84d2f68c0587bd7d7c93a237a46", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a2bfd1e59e9f84d2f68c0587bd7d7c93a237a46", "html_url": "https://github.com/rust-lang/rust/commit/2a2bfd1e59e9f84d2f68c0587bd7d7c93a237a46"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "7e69ad21d034326a9c1fac72b80946e96a0c6fe8", "filename": "compiler/rustc_typeck/src/structured_errors/wrong_number_of_generic_args.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6f5c09849ed46b767922675d18e9d7fcbfbb69e2/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f5c09849ed46b767922675d18e9d7fcbfbb69e2/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs?ref=6f5c09849ed46b767922675d18e9d7fcbfbb69e2", "patch": "@@ -136,10 +136,7 @@ impl<'a, 'tcx> WrongNumberOfGenericArgs<'a, 'tcx> {\n             AngleBrackets::Missing => 0,\n             // Only lifetime arguments can be implied\n             AngleBrackets::Implied => self.gen_args.args.len(),\n-            AngleBrackets::Available => self.gen_args.args.iter().fold(0, |acc, arg| match arg {\n-                hir::GenericArg::Lifetime(_) => acc + 1,\n-                _ => acc,\n-            }),\n+            AngleBrackets::Available => self.gen_args.num_lifetime_params(),\n         }\n     }\n \n@@ -148,10 +145,7 @@ impl<'a, 'tcx> WrongNumberOfGenericArgs<'a, 'tcx> {\n             AngleBrackets::Missing => 0,\n             // Only lifetime arguments can be implied\n             AngleBrackets::Implied => 0,\n-            AngleBrackets::Available => self.gen_args.args.iter().fold(0, |acc, arg| match arg {\n-                hir::GenericArg::Type(_) | hir::GenericArg::Const(_) => acc + 1,\n-                _ => acc,\n-            }),\n+            AngleBrackets::Available => self.gen_args.num_generic_params(),\n         }\n     }\n \n@@ -651,7 +645,9 @@ impl<'a, 'tcx> WrongNumberOfGenericArgs<'a, 'tcx> {\n             let mut found_redundant = false;\n             for arg in self.gen_args.args {\n                 match arg {\n-                    hir::GenericArg::Type(_) | hir::GenericArg::Const(_) => {\n+                    hir::GenericArg::Type(_)\n+                    | hir::GenericArg::Const(_)\n+                    | hir::GenericArg::Infer(_) => {\n                         gen_arg_spans.push(arg.span());\n                         if gen_arg_spans.len() > self.num_expected_type_or_const_args() {\n                             found_redundant = true;"}]}