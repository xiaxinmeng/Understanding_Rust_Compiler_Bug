{"sha": "f960f2847ffc1c1422ecb8252ba8ebf1abae7f03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NjBmMjg0N2ZmYzFjMTQyMmVjYjgyNTJiYThlYmYxYWJhZTdmMDM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-17T09:06:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-17T09:06:19Z"}, "message": "Rollup merge of #78967 - tmiasko:codegen-tests, r=cuviper\n\nMake codegen tests compatible with extra inlining", "tree": {"sha": "f48ff169cbbfa61edc4b9d072bf4d552a97bb5b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f48ff169cbbfa61edc4b9d072bf4d552a97bb5b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f960f2847ffc1c1422ecb8252ba8ebf1abae7f03", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfs5KMCRBK7hj4Ov3rIwAAdHIIACeFi8XyxpL8ZlfpgFjH74so\nyEG9Vm87S6Zw/2QkAOrRIazE8aL6LsF25haiR4mL+uXYh6WUENnh1oQF8n6hW6Bu\nMotDJ+VsbwyLH29JN4YxohKlHkrQg14zyBkxImGchn9roR5uob04h2vRle+WvzOr\n7snZbDD3fWFnz1XdHM5aoZHiB15wnieps9cYyukOEIxAPY8TvOxaYRBKdvbRoe3B\nCIQpK7F/qCQDiKTMC40a8/PK2ljf0r+x2hIWRi8l/nRn7uXuVWIRp2twUvrsQG93\nSpJ5G+h4aREBxoqQwkzuMBf4HWok+cl9RjKDkNx4h2ICevfbdNPDyxnz0+OrqiY=\n=mBGg\n-----END PGP SIGNATURE-----\n", "payload": "tree f48ff169cbbfa61edc4b9d072bf4d552a97bb5b6\nparent d6da5254a0cc6e896685fa32e2a4c0979933dda5\nparent d54ea4f622a788b75d6576281081c4252b1ec05e\nauthor Mara Bos <m-ou.se@m-ou.se> 1605603979 +0100\ncommitter GitHub <noreply@github.com> 1605603979 +0100\n\nRollup merge of #78967 - tmiasko:codegen-tests, r=cuviper\n\nMake codegen tests compatible with extra inlining\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f960f2847ffc1c1422ecb8252ba8ebf1abae7f03", "html_url": "https://github.com/rust-lang/rust/commit/f960f2847ffc1c1422ecb8252ba8ebf1abae7f03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f960f2847ffc1c1422ecb8252ba8ebf1abae7f03/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6da5254a0cc6e896685fa32e2a4c0979933dda5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6da5254a0cc6e896685fa32e2a4c0979933dda5", "html_url": "https://github.com/rust-lang/rust/commit/d6da5254a0cc6e896685fa32e2a4c0979933dda5"}, {"sha": "d54ea4f622a788b75d6576281081c4252b1ec05e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d54ea4f622a788b75d6576281081c4252b1ec05e", "html_url": "https://github.com/rust-lang/rust/commit/d54ea4f622a788b75d6576281081c4252b1ec05e"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "ab3dc3fba5ef6eb78b2205ca1d893d20cabbbbb2", "filename": "src/test/codegen/internalize-closures.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f960f2847ffc1c1422ecb8252ba8ebf1abae7f03/src%2Ftest%2Fcodegen%2Finternalize-closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f960f2847ffc1c1422ecb8252ba8ebf1abae7f03/src%2Ftest%2Fcodegen%2Finternalize-closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Finternalize-closures.rs?ref=f960f2847ffc1c1422ecb8252ba8ebf1abae7f03", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -C no-prepopulate-passes\n+// compile-flags: -C no-prepopulate-passes -Zmir-opt-level=0\n \n pub fn main() {\n "}, {"sha": "a91e8e817e4037b881ade59c3ca7a3f4b81687d8", "filename": "src/test/codegen/issue-37945.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f960f2847ffc1c1422ecb8252ba8ebf1abae7f03/src%2Ftest%2Fcodegen%2Fissue-37945.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f960f2847ffc1c1422ecb8252ba8ebf1abae7f03/src%2Ftest%2Fcodegen%2Fissue-37945.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-37945.rs?ref=f960f2847ffc1c1422ecb8252ba8ebf1abae7f03", "patch": "@@ -1,26 +1,34 @@\n-// compile-flags: -O\n+// compile-flags: -O -Zmerge-functions=disabled\n // ignore-x86\n // ignore-arm\n // ignore-emscripten\n // ignore-gnux32\n // ignore 32-bit platforms (LLVM has a bug with them)\n \n-// See issue #37945.\n+// Check that LLVM understands that `Iter` pointer is not null. Issue #37945.\n \n #![crate_type = \"lib\"]\n \n use std::slice::Iter;\n \n-// CHECK-LABEL: @is_empty_1\n #[no_mangle]\n pub fn is_empty_1(xs: Iter<f32>) -> bool {\n-// CHECK-NOT: icmp eq float* {{.*}}, null\n+// CHECK-LABEL: @is_empty_1(\n+// CHECK-NEXT:  start:\n+// CHECK-NEXT:    [[A:%.*]] = icmp ne i32* %xs.1, null\n+// CHECK-NEXT:    tail call void @llvm.assume(i1 [[A]])\n+// CHECK-NEXT:    [[B:%.*]] = icmp eq i32* %xs.0, %xs.1\n+// CHECK-NEXT:    ret i1 [[B:%.*]]\n     {xs}.next().is_none()\n }\n \n-// CHECK-LABEL: @is_empty_2\n #[no_mangle]\n pub fn is_empty_2(xs: Iter<f32>) -> bool {\n-// CHECK-NOT: icmp eq float* {{.*}}, null\n+// CHECK-LABEL: @is_empty_2\n+// CHECK-NEXT:  start:\n+// CHECK-NEXT:    [[C:%.*]] = icmp ne i32* %xs.1, null\n+// CHECK-NEXT:    tail call void @llvm.assume(i1 [[C]])\n+// CHECK-NEXT:    [[D:%.*]] = icmp eq i32* %xs.0, %xs.1\n+// CHECK-NEXT:    ret i1 [[D:%.*]]\n     xs.map(|&x| x).next().is_none()\n }"}, {"sha": "cee4128c650401efcdef96d140938552b44a1e76", "filename": "src/test/codegen/vec-shrink-panic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f960f2847ffc1c1422ecb8252ba8ebf1abae7f03/src%2Ftest%2Fcodegen%2Fvec-shrink-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f960f2847ffc1c1422ecb8252ba8ebf1abae7f03/src%2Ftest%2Fcodegen%2Fvec-shrink-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fvec-shrink-panic.rs?ref=f960f2847ffc1c1422ecb8252ba8ebf1abae7f03", "patch": "@@ -15,9 +15,9 @@ pub fn shrink_to_fit(vec: &mut Vec<u32>) {\n \n // CHECK-LABEL: @issue71861\n #[no_mangle]\n-pub fn issue71861(n: usize) -> Box<[u32]> {\n+pub fn issue71861(vec: Vec<u32>) -> Box<[u32]> {\n     // CHECK-NOT: panic\n-    vec![0; n].into_boxed_slice()\n+    vec.into_boxed_slice()\n }\n \n // CHECK-LABEL: @issue75636"}]}