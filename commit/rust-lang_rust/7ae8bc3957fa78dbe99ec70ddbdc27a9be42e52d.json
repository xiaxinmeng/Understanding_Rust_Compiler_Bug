{"sha": "7ae8bc3957fa78dbe99ec70ddbdc27a9be42e52d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhZThiYzM5NTdmYTc4ZGJlOTllYzcwZGRiZGMyN2E5YmU0MmU1MmQ=", "commit": {"author": {"name": "oli", "email": "oli@uhura.edef.eu", "date": "2020-10-26T13:18:12Z"}, "committer": {"name": "oli", "email": "oli@uhura.edef.eu", "date": "2020-10-26T13:18:12Z"}, "message": "Add an inlining debuginfo test", "tree": {"sha": "b4c779c15636d71788389d0a8ae7c606a83d943a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4c779c15636d71788389d0a8ae7c606a83d943a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ae8bc3957fa78dbe99ec70ddbdc27a9be42e52d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ae8bc3957fa78dbe99ec70ddbdc27a9be42e52d", "html_url": "https://github.com/rust-lang/rust/commit/7ae8bc3957fa78dbe99ec70ddbdc27a9be42e52d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ae8bc3957fa78dbe99ec70ddbdc27a9be42e52d/comments", "author": null, "committer": null, "parents": [{"sha": "7101ce9127d805e602ea3fa75d5bbea4bf1e5dce", "url": "https://api.github.com/repos/rust-lang/rust/commits/7101ce9127d805e602ea3fa75d5bbea4bf1e5dce", "html_url": "https://github.com/rust-lang/rust/commit/7101ce9127d805e602ea3fa75d5bbea4bf1e5dce"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "219347ad7d879f6a8fcb1a3c15c8f1abbae1361f", "filename": "src/test/codegen/inline-debuginfo.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7ae8bc3957fa78dbe99ec70ddbdc27a9be42e52d/src%2Ftest%2Fcodegen%2Finline-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ae8bc3957fa78dbe99ec70ddbdc27a9be42e52d/src%2Ftest%2Fcodegen%2Finline-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Finline-debuginfo.rs?ref=7ae8bc3957fa78dbe99ec70ddbdc27a9be42e52d", "patch": "@@ -0,0 +1,16 @@\n+#![crate_type=\"rlib\"]\n+// compile-flags: -Copt-level=3 -g\n+\n+#[no_mangle]\n+#[inline(always)]\n+pub extern \"C\" fn callee(x: u32) -> u32 {\n+    x + 4\n+}\n+\n+// CHECK-LABEL: caller\n+// CHECK: call void @llvm.dbg.value(metadata i32 %y, metadata !{{.*}}, metadata !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value)), !dbg [[A:!.*]]\n+// CHECK: [[A]] = !DILocation(line: {{.*}}, scope: {{.*}}, inlinedAt: {{.*}})\n+#[no_mangle]\n+pub extern \"C\" fn caller(y: u32) -> u32 {\n+    callee(y - 3)\n+}"}]}