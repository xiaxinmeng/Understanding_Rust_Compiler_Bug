{"sha": "6f9b2b32476dbd3453e296bea54726d469e471c0", "node_id": "C_kwDOAAsO6NoAKDZmOWIyYjMyNDc2ZGJkMzQ1M2UyOTZiZWE1NDcyNmQ0NjllNDcxYzA", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-04-25T13:06:30Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-04-25T13:06:30Z"}, "message": "Stop exporting rust_eh_personality and friends from cdylib", "tree": {"sha": "6dfb22ce00d64bb94e1ff99ff183edb261c165de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dfb22ce00d64bb94e1ff99ff183edb261c165de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f9b2b32476dbd3453e296bea54726d469e471c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f9b2b32476dbd3453e296bea54726d469e471c0", "html_url": "https://github.com/rust-lang/rust/commit/6f9b2b32476dbd3453e296bea54726d469e471c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f9b2b32476dbd3453e296bea54726d469e471c0/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1af3e0a65e5c390ce46c4be9d3b9132768278ce9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1af3e0a65e5c390ce46c4be9d3b9132768278ce9", "html_url": "https://github.com/rust-lang/rust/commit/1af3e0a65e5c390ce46c4be9d3b9132768278ce9"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "10d70b117467c5baff404f80db20f5e88d7ba302", "filename": "compiler/rustc_codegen_ssa/src/back/symbol_export.rs", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6f9b2b32476dbd3453e296bea54726d469e471c0/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f9b2b32476dbd3453e296bea54726d469e471c0/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs?ref=6f9b2b32476dbd3453e296bea54726d469e471c0", "patch": "@@ -105,24 +105,18 @@ fn reachable_non_generics_provider(tcx: TyCtxt<'_>, cnum: CrateNum) -> DefIdMap<\n             }\n         })\n         .map(|def_id| {\n-            let export_level = if special_runtime_crate {\n+            let (export_level, used) = if special_runtime_crate {\n                 let name = tcx.symbol_name(Instance::mono(tcx, def_id.to_def_id())).name;\n-                // We can probably do better here by just ensuring that\n-                // it has hidden visibility rather than public\n-                // visibility, as this is primarily here to ensure it's\n-                // not stripped during LTO.\n-                //\n-                // In general though we won't link right if these\n-                // symbols are stripped, and LTO currently strips them.\n-                match name {\n+                // We won't link right if these symbols are stripped during LTO.\n+                let used = match name {\n                     \"rust_eh_personality\"\n                     | \"rust_eh_register_frames\"\n-                    | \"rust_eh_unregister_frames\" =>\n-                        SymbolExportLevel::C,\n-                    _ => SymbolExportLevel::Rust,\n-                }\n+                    | \"rust_eh_unregister_frames\" => true,\n+                    _ => false,\n+                };\n+                (SymbolExportLevel::Rust, used)\n             } else {\n-                symbol_export_level(tcx, def_id.to_def_id())\n+                (symbol_export_level(tcx, def_id.to_def_id()), false)\n             };\n             let codegen_attrs = tcx.codegen_fn_attrs(def_id.to_def_id());\n             debug!(\n@@ -142,7 +136,7 @@ fn reachable_non_generics_provider(tcx: TyCtxt<'_>, cnum: CrateNum) -> DefIdMap<\n                     SymbolExportKind::Text\n                 },\n                 used: codegen_attrs.flags.contains(CodegenFnAttrFlags::USED)\n-                    || codegen_attrs.flags.contains(CodegenFnAttrFlags::USED_LINKER),\n+                    || codegen_attrs.flags.contains(CodegenFnAttrFlags::USED_LINKER) || used,\n             })\n         })\n         .collect();"}]}