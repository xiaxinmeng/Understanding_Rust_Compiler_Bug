{"sha": "deb329a6bb1e6d2976cacd25333abdc976c1090d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYjMyOWE2YmIxZTZkMjk3NmNhY2QyNTMzM2FiZGM5NzZjMTA5MGQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-08-28T11:50:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-28T11:50:41Z"}, "message": "Forbid adding or removing a block from match arms inside macro calls (#3756)", "tree": {"sha": "8986e6d40df5ea13e4b10ac28c630c78a8575f63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8986e6d40df5ea13e4b10ac28c630c78a8575f63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/deb329a6bb1e6d2976cacd25333abdc976c1090d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdZmqRCRBK7hj4Ov3rIwAAdHIIAF2Xg8OuzlnlwDu9dbaXKVt1\nrJCDXDqrQzeHnKngQFVReVERB3mgo7KTKVDrGbfM8y6fvYbcTyic1Ds8gO0E0kzq\nHMpg7UeKCLkPosflG6Y53MTLOBwcKx86BjnvV7aNNIQebWsCTfqzrC7CUfJUNgGY\nl+sj38pVvmHndH6Q9H/9jPQK9z6I6NpJw8oGAwtkuxO4tKM8EfgN/x0rXP999Ov1\nllHWLjX47LZsxaVO/C0yHlgysALfggQUAohYmWHWO3iTm3qqkLEsXV1aFlvudJQl\nwIakKyrWtBvqNoGdThC5fkKNz6yR3ITYmqGjHQJ8NFLdQIetOONc+yZF6GJjgFU=\n=foFo\n-----END PGP SIGNATURE-----\n", "payload": "tree 8986e6d40df5ea13e4b10ac28c630c78a8575f63\nparent a09ca681def98dcde966f5fe1f6c0af3bd8956ba\nauthor Seiichi Uchida <seuchida@gmail.com> 1566993041 +0900\ncommitter GitHub <noreply@github.com> 1566993041 +0900\n\nForbid adding or removing a block from match arms inside macro calls (#3756)\n\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/deb329a6bb1e6d2976cacd25333abdc976c1090d", "html_url": "https://github.com/rust-lang/rust/commit/deb329a6bb1e6d2976cacd25333abdc976c1090d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/deb329a6bb1e6d2976cacd25333abdc976c1090d/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a09ca681def98dcde966f5fe1f6c0af3bd8956ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/a09ca681def98dcde966f5fe1f6c0af3bd8956ba", "html_url": "https://github.com/rust-lang/rust/commit/a09ca681def98dcde966f5fe1f6c0af3bd8956ba"}], "stats": {"total": 55, "additions": 38, "deletions": 17}, "files": [{"sha": "3cc7c45409f5ca852f6ac6bad5e27c591892c5ad", "filename": "src/matches.rs", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/deb329a6bb1e6d2976cacd25333abdc976c1090d/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb329a6bb1e6d2976cacd25333abdc976c1090d/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=deb329a6bb1e6d2976cacd25333abdc976c1090d", "patch": "@@ -278,6 +278,7 @@ fn block_can_be_flattened<'a>(\n     match expr.node {\n         ast::ExprKind::Block(ref block, _)\n             if !is_unsafe_block(block)\n+                && !context.inside_macro()\n                 && is_simple_block(block, Some(&expr.attrs), context.source_map) =>\n         {\n             Some(&*block)\n@@ -394,25 +395,26 @@ fn rewrite_match_body(\n         }\n \n         let indent_str = shape.indent.to_string_with_newline(context.config);\n-        let (body_prefix, body_suffix) = if context.config.match_arm_blocks() {\n-            let comma = if context.config.match_block_trailing_comma() {\n-                \",\"\n-            } else {\n-                \"\"\n-            };\n-            let semicolon = if context.config.version() == Version::One {\n-                \"\"\n-            } else {\n-                if semicolon_for_expr(context, body) {\n-                    \";\"\n+        let (body_prefix, body_suffix) =\n+            if context.config.match_arm_blocks() && !context.inside_macro() {\n+                let comma = if context.config.match_block_trailing_comma() {\n+                    \",\"\n                 } else {\n                     \"\"\n-                }\n+                };\n+                let semicolon = if context.config.version() == Version::One {\n+                    \"\"\n+                } else {\n+                    if semicolon_for_expr(context, body) {\n+                        \";\"\n+                    } else {\n+                        \"\"\n+                    }\n+                };\n+                (\"{\", format!(\"{}{}}}{}\", semicolon, indent_str, comma))\n+            } else {\n+                (\"\", String::from(\",\"))\n             };\n-            (\"{\", format!(\"{}{}}}{}\", semicolon, indent_str, comma))\n-        } else {\n-            (\"\", String::from(\",\"))\n-        };\n \n         let block_sep = match context.config.control_brace_style() {\n             ControlBraceStyle::AlwaysNextLine => format!(\"{}{}\", alt_block_sep, body_prefix),\n@@ -468,7 +470,9 @@ fn rewrite_match_body(\n         next_line_body_shape.width,\n     );\n     match (orig_body, next_line_body) {\n-        (Some(ref orig_str), Some(ref next_line_str)) if orig_str == next_line_str => {\n+        (Some(ref orig_str), Some(ref next_line_str))\n+            if orig_str == next_line_str || context.inside_macro() =>\n+        {\n             combine_orig_body(orig_str)\n         }\n         (Some(ref orig_str), Some(ref next_line_str))"}, {"sha": "3b286579ca8f1debff3b181bd411919e3d10009b", "filename": "tests/source/macros.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/deb329a6bb1e6d2976cacd25333abdc976c1090d/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb329a6bb1e6d2976cacd25333abdc976c1090d/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=deb329a6bb1e6d2976cacd25333abdc976c1090d", "patch": "@@ -473,5 +473,14 @@ pub fn fold_abi<V: Fold + ?Sized>(_visitor: &mut V, _i: Abi) -> Abi {\n // #3463\n x ! {()}\n \n+// #3746\n+f!(match a {\n+    4 =>\n+        &[\n+            (3, false), // Missing\n+            (4, true)   // I-frame\n+        ]  [..],\n+});\n+\n // #3583\n foo!(|x = y|);"}, {"sha": "e930b5037d930f79873633881acce0468c0f5371", "filename": "tests/target/macros.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/deb329a6bb1e6d2976cacd25333abdc976c1090d/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb329a6bb1e6d2976cacd25333abdc976c1090d/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=deb329a6bb1e6d2976cacd25333abdc976c1090d", "patch": "@@ -1050,5 +1050,13 @@ pub fn fold_abi<V: Fold + ?Sized>(_visitor: &mut V, _i: Abi) -> Abi {\n // #3463\n x! {()}\n \n+// #3746\n+f!(match a {\n+    4 => &[\n+        (3, false), // Missing\n+        (4, true)   // I-frame\n+    ][..],\n+});\n+\n // #3583\n foo!(|x = y|);"}]}