{"sha": "ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZTZkYTM0ZmZjNzJhNzAxZjQxODllZjdiZTVhYjJjMWNiNmU4Yzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-08T16:13:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-08T16:13:19Z"}, "message": "Auto merge of #33414 - Nercury:master, r=alexcrichton\n\nAdd armv7-linux-androideabi target\n\nThis PR adds `armv7-linux-androideabi` target that matches `armeabi-v7a` Android ABI, ~~downscales `arm-linux-androideabi` target to match `armeabi` Android ABI~~ (TBD later if needed).\n\nThis should allow us to get the best performance from every [Android ABI level](http://developer.android.com/ndk/guides/abis.html).\n\nCurrently existing target `arm-linux-androideabi` started gaining features out of the supported range of [android `armeabi`](http://developer.android.com/ndk/guides/abis.html). While android compiler does not use a different target for later supported `armv7` architecture, it has distinct ABI name `armeabi-v7a`. We decided to add rust target `armv7-linux-androideabi` to match it.\n\nNote that `NEON`, `VFPv3-D32`, and `ThumbEE` instruction sets are not added, because not all android devices are guaranteed to support all or some of these, and [their availability should be checked at runtime](http://developer.android.com/ndk/guides/abis.html#v7a).\n\n~~This reduces performance of existing `arm-linux-androideabi` and may make it _much_ slower (we are talking more than order of magnitude in some random ad-hoc fp benchmark that I did).~~\n\nPart of #33278.", "tree": {"sha": "0cdeaf3f9180cf5db5dde4489d2b7139f331d21f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cdeaf3f9180cf5db5dde4489d2b7139f331d21f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9", "html_url": "https://github.com/rust-lang/rust/commit/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cae42a471c13eec8a6470d0845f46f1606d50742", "url": "https://api.github.com/repos/rust-lang/rust/commits/cae42a471c13eec8a6470d0845f46f1606d50742", "html_url": "https://github.com/rust-lang/rust/commit/cae42a471c13eec8a6470d0845f46f1606d50742"}, {"sha": "ca03b81abb62b12853d9e0133765355dc6958c59", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca03b81abb62b12853d9e0133765355dc6958c59", "html_url": "https://github.com/rust-lang/rust/commit/ca03b81abb62b12853d9e0133765355dc6958c59"}], "stats": {"total": 82, "additions": 77, "deletions": 5}, "files": [{"sha": "38f3e3b00c6d82133905d41d09c9125b923946ea", "filename": "configure", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/configure", "raw_url": "https://github.com/rust-lang/rust/raw/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9", "patch": "@@ -632,6 +632,7 @@ valopt build \"${DEFAULT_BUILD}\" \"GNUs ./configure syntax LLVM build triple\"\n valopt android-cross-path \"\" \"Android NDK standalone path (deprecated)\"\n valopt i686-linux-android-ndk \"\" \"i686-linux-android NDK standalone path\"\n valopt arm-linux-androideabi-ndk \"\" \"arm-linux-androideabi NDK standalone path\"\n+valopt armv7-linux-androideabi-ndk \"\" \"armv7-linux-androideabi NDK standalone path\"\n valopt aarch64-linux-android-ndk \"\" \"aarch64-linux-android NDK standalone path\"\n valopt nacl-cross-path  \"\" \"NaCl SDK path (Pepper Canary is recommended). Must be absolute!\"\n valopt release-channel \"dev\" \"the name of the release channel to build\"\n@@ -1144,6 +1145,15 @@ do\n \n     case $i in\n         *android*)\n+            case $i in\n+                armv7-linux-androideabi)\n+                    cmd_prefix=\"arm-linux-androideabi\"\n+                    ;;\n+                *)\n+                    cmd_prefix=$i\n+                    ;;\n+            esac\n+\n             upper_snake_target=$(echo \"$i\" | tr '[:lower:]' '[:upper:]' | tr '\\-' '\\_')\n             eval ndk=\\$\"CFG_${upper_snake_target}_NDK\"\n             if [ -z \"$ndk\" ]\n@@ -1154,7 +1164,7 @@ do\n             fi\n \n             # Perform a basic sanity check of the NDK\n-            for android_ndk_tool in \"$ndk/bin/$i-gcc\" \"$ndk/bin/$i-g++\" \"$ndk/bin/$i-ar\"\n+            for android_ndk_tool in \"$ndk/bin/$cmd_prefix-gcc\" \"$ndk/bin/$cmd_prefix-g++\" \"$ndk/bin/$cmd_prefix-ar\"\n             do\n                 if [ ! -f $android_ndk_tool ]\n                 then\n@@ -1786,6 +1796,7 @@ putvar CFG_LIBDIR_RELATIVE\n putvar CFG_DISABLE_MANAGE_SUBMODULES\n putvar CFG_AARCH64_LINUX_ANDROID_NDK\n putvar CFG_ARM_LINUX_ANDROIDEABI_NDK\n+putvar CFG_ARMV7_LINUX_ANDROIDEABI_NDK\n putvar CFG_I686_LINUX_ANDROID_NDK\n putvar CFG_NACL_CROSS_PATH\n putvar CFG_MANDIR"}, {"sha": "e5bf2e4df7ab3851d366b3e98ccde17d5a6068c1", "filename": "mk/cfg/armv7-linux-androideabi.mk", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/mk%2Fcfg%2Farmv7-linux-androideabi.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/mk%2Fcfg%2Farmv7-linux-androideabi.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Farmv7-linux-androideabi.mk?ref=ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9", "patch": "@@ -0,0 +1,25 @@\n+# armv7-linux-androideabi configuration\n+CC_armv7-linux-androideabi=$(CFG_ARMV7_LINUX_ANDROIDEABI_NDK)/bin/arm-linux-androideabi-gcc\n+CXX_armv7-linux-androideabi=$(CFG_ARMV7_LINUX_ANDROIDEABI_NDK)/bin/arm-linux-androideabi-g++\n+CPP_armv7-linux-androideabi=$(CFG_ARMV7_LINUX_ANDROIDEABI_NDK)/bin/arm-linux-androideabi-gcc -E\n+AR_armv7-linux-androideabi=$(CFG_ARMV7_LINUX_ANDROIDEABI_NDK)/bin/arm-linux-androideabi-ar\n+CFG_LIB_NAME_armv7-linux-androideabi=lib$(1).so\n+CFG_STATIC_LIB_NAME_armv7-linux-androideabi=lib$(1).a\n+CFG_LIB_GLOB_armv7-linux-androideabi=lib$(1)-*.so\n+CFG_LIB_DSYM_GLOB_armv7-linux-androideabi=lib$(1)-*.dylib.dSYM\n+CFG_JEMALLOC_CFLAGS_armv7-linux-androideabi := -D__arm__ -DANDROID -D__ANDROID__ $(CFLAGS)\n+CFG_GCCISH_CFLAGS_armv7-linux-androideabi := -Wall -g -fPIC -D__arm__ -mfloat-abi=softfp -march=armv7-a -mfpu=vfpv3-d16 -DANDROID -D__ANDROID__ $(CFLAGS)\n+CFG_GCCISH_CXXFLAGS_armv7-linux-androideabi := -fno-rtti $(CXXFLAGS)\n+CFG_GCCISH_LINK_FLAGS_armv7-linux-androideabi := -shared -fPIC -ldl -g -lm -lsupc++\n+CFG_GCCISH_DEF_FLAG_armv7-linux-androideabi := -Wl,--export-dynamic,--dynamic-list=\n+CFG_LLC_FLAGS_armv7-linux-androideabi :=\n+CFG_INSTALL_NAME_armv7-linux-androideabi =\n+CFG_EXE_SUFFIX_armv7-linux-androideabi :=\n+CFG_WINDOWSY_armv7-linux-androideabi :=\n+CFG_UNIXY_armv7-linux-androideabi := 1\n+CFG_LDPATH_armv7-linux-androideabi :=\n+CFG_RUN_armv7-linux-androideabi=\n+CFG_RUN_TARG_armv7-linux-androideabi=\n+RUSTC_FLAGS_armv7-linux-androideabi :=\n+RUSTC_CROSS_FLAGS_armv7-linux-androideabi :=\n+CFG_GNU_TRIPLE_armv7-linux-androideabi := arm-linux-androideabi"}, {"sha": "5c4feebedb421535459098876b5be06e6b86afc4", "filename": "src/bootstrap/build/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/src%2Fbootstrap%2Fbuild%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/src%2Fbootstrap%2Fbuild%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fconfig.rs?ref=ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9", "patch": "@@ -338,6 +338,12 @@ impl Config {\n                                      .or_insert(Target::default());\n                     target.ndk = Some(PathBuf::from(value));\n                 }\n+                \"CFG_ARMV7_LINUX_ANDROIDEABI_NDK\" if value.len() > 0 => {\n+                    let target = \"armv7-linux-androideabi\".to_string();\n+                    let target = self.target_config.entry(target)\n+                                     .or_insert(Target::default());\n+                    target.ndk = Some(PathBuf::from(value));\n+                }\n                 \"CFG_I686_LINUX_ANDROID_NDK\" if value.len() > 0 => {\n                     let target = \"i686-linux-androideabi\".to_string();\n                     let target = self.target_config.entry(target)"}, {"sha": "e7d05a8d93a561eccb11f340ced8c8caac0b43af", "filename": "src/doc/book/getting-started.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/src%2Fdoc%2Fbook%2Fgetting-started.md", "raw_url": "https://github.com/rust-lang/rust/raw/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/src%2Fdoc%2Fbook%2Fgetting-started.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fgetting-started.md?ref=ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9", "patch": "@@ -98,6 +98,7 @@ unofficial locations.\n |  Target                       | std |rustc|cargo| notes                      |\n |-------------------------------|-----|-----|-----|----------------------------|\n | `aarch64-linux-android`       |  \u2713  |     |     | ARM64 Android              |\n+| `armv7-linux-androideabi`     |  \u2713  |     |     | ARM-v7a Android            |\n | `i686-linux-android`          |  \u2713  |     |     | 32-bit x86 Android         |\n | `i686-pc-windows-msvc` (XP)   |  \u2713  |     |     | Windows XP support         |\n | `i686-unknown-freebsd`        |  \u2713  |  \u2713  |  \u2713  | 32-bit FreeBSD             |"}, {"sha": "7096cd9c36d1c26bfadbb72ba9edc17c6be9d449", "filename": "src/librustc_back/target/armv7_linux_androideabi.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/src%2Flibrustc_back%2Ftarget%2Farmv7_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/src%2Flibrustc_back%2Ftarget%2Farmv7_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7_linux_androideabi.rs?ref=ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::Target;\n+\n+pub fn target() -> Target {\n+    let mut base = super::android_base::opts();\n+    base.features = \"+v7,+thumb2,+vfp3,+d16\".to_string();\n+\n+    Target {\n+        llvm_target: \"armv7-none-linux-android\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"android\".to_string(),\n+        target_env: \"gnu\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        options: base,\n+    }\n+}"}, {"sha": "30d0b47029dc35d3c8cd8520c7e5843d0a778172", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9", "patch": "@@ -108,6 +108,7 @@ supported_targets! {\n \n     (\"i686-linux-android\", i686_linux_android),\n     (\"arm-linux-androideabi\", arm_linux_androideabi),\n+    (\"armv7-linux-androideabi\", armv7_linux_androideabi),\n     (\"aarch64-linux-android\", aarch64_linux_android),\n \n     (\"i686-unknown-freebsd\", i686_unknown_freebsd),"}, {"sha": "aa1b9d2bafbb9e68c9d2e85ab4e8fb797de835ab", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=ebe6da34ffc72a701f4189ef7be5ab2c1cb6e8c9", "patch": "@@ -33,7 +33,7 @@ use std::process::{Command, Output, ExitStatus};\n pub fn run(config: Config, testpaths: &TestPaths) {\n     match &*config.target {\n \n-        \"arm-linux-androideabi\" | \"aarch64-linux-android\" => {\n+        \"arm-linux-androideabi\" | \"armv7-linux-androideabi\" | \"aarch64-linux-android\" => {\n             if !config.adb_device_status {\n                 panic!(\"android device not available\");\n             }\n@@ -424,7 +424,7 @@ actual:\\n\\\n \n         let debugger_run_result;\n         match &*self.config.target {\n-            \"arm-linux-androideabi\" | \"aarch64-linux-android\" => {\n+            \"arm-linux-androideabi\" | \"armv7-linux-androideabi\" | \"aarch64-linux-android\" => {\n \n                 cmds = cmds.replace(\"run\", \"continue\");\n \n@@ -1132,7 +1132,7 @@ actual:\\n\\\n \n         match &*self.config.target {\n \n-            \"arm-linux-androideabi\" | \"aarch64-linux-android\" => {\n+            \"arm-linux-androideabi\" | \"armv7-linux-androideabi\" | \"aarch64-linux-android\" => {\n                 self._arm_exec_compiled_test(env)\n             }\n \n@@ -1230,7 +1230,7 @@ actual:\\n\\\n             }\n \n             match &*self.config.target {\n-                \"arm-linux-androideabi\"  | \"aarch64-linux-android\" => {\n+                \"arm-linux-androideabi\" | \"armv7-linux-androideabi\" | \"aarch64-linux-android\" => {\n                     self._arm_push_aux_shared_library();\n                 }\n                 _ => {}"}]}