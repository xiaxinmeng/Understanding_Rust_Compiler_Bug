{"sha": "decc2867577c65682c6a73c89c550d34b5b270ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlY2MyODY3NTc3YzY1NjgyYzZhNzNjODljNTUwZDM0YjViMjcwYWQ=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-01-12T16:24:00Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-01-13T13:29:50Z"}, "message": "add doc for new `fn alloc_ty_init`.\n\n(Note that it might be a good idea to replace *all* calls of\n`alloc_ty` with calls to `alloc_ty_init`, to encourage programmers to\nconsider the appropriate value for the `init` flag when creating\ntemporary values.)", "tree": {"sha": "a6a22c3a26ed91c57b0009f8db7e6ca7bb87c8c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6a22c3a26ed91c57b0009f8db7e6ca7bb87c8c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/decc2867577c65682c6a73c89c550d34b5b270ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/decc2867577c65682c6a73c89c550d34b5b270ad", "html_url": "https://github.com/rust-lang/rust/commit/decc2867577c65682c6a73c89c550d34b5b270ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/decc2867577c65682c6a73c89c550d34b5b270ad/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7706e2333eacbbdf943164cec583a51b216bbde1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7706e2333eacbbdf943164cec583a51b216bbde1", "html_url": "https://github.com/rust-lang/rust/commit/7706e2333eacbbdf943164cec583a51b216bbde1"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "5f2fe98727fa1266dda200c28b9d2c4b22ef8190", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/decc2867577c65682c6a73c89c550d34b5b270ad/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/decc2867577c65682c6a73c89c550d34b5b270ad/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=decc2867577c65682c6a73c89c550d34b5b270ad", "patch": "@@ -1331,6 +1331,18 @@ pub fn alloc_ty<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     alloc_ty_init(bcx, t, InitAlloca::Uninit(\"all alloc_ty are uninit\"), name)\n }\n \n+/// This variant of `fn alloc_ty` does not necessarily assume that the\n+/// alloca should be created with no initial value. Instead the caller\n+/// controls that assumption via the `init` flag.\n+///\n+/// Note that if the alloca *is* initialized via `init`, then we will\n+/// also inject an `llvm.lifetime.start` before that initialization\n+/// occurs, and thus callers should not call_lifetime_start\n+/// themselves.  But if `init` says \"uninitialized\", then callers are\n+/// in charge of choosing where to call_lifetime_start and\n+/// subsequently populate the alloca.\n+///\n+/// (See related discussion on PR #30823.)\n pub fn alloc_ty_init<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n                              t: Ty<'tcx>,\n                              init: InitAlloca,"}]}