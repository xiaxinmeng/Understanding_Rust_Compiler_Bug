{"sha": "cdb446fec39b9359ffcf04e1c4ba7c2eae800809", "node_id": "C_kwDOAAsO6NoAKGNkYjQ0NmZlYzM5YjkzNTlmZmNmMDRlMWM0YmE3YzJlYWU4MDA4MDk", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-03T01:50:31Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-05T22:47:49Z"}, "message": "Streamline `active_cache` to `done_cache` transfer.", "tree": {"sha": "f09fc32f0aa04fc449445b91b1bb60c9faa0e283", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f09fc32f0aa04fc449445b91b1bb60c9faa0e283"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdb446fec39b9359ffcf04e1c4ba7c2eae800809", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdb446fec39b9359ffcf04e1c4ba7c2eae800809", "html_url": "https://github.com/rust-lang/rust/commit/cdb446fec39b9359ffcf04e1c4ba7c2eae800809", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdb446fec39b9359ffcf04e1c4ba7c2eae800809/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fee3a459dd6aba8e34a5b99f0fbcb4218a1e2401", "url": "https://api.github.com/repos/rust-lang/rust/commits/fee3a459dd6aba8e34a5b99f0fbcb4218a1e2401", "html_url": "https://github.com/rust-lang/rust/commit/fee3a459dd6aba8e34a5b99f0fbcb4218a1e2401"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "c085e18fd66f0bf02ffa52bbdd7c1e35bf3130e9", "filename": "compiler/rustc_data_structures/src/obligation_forest/mod.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cdb446fec39b9359ffcf04e1c4ba7c2eae800809/compiler%2Frustc_data_structures%2Fsrc%2Fobligation_forest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdb446fec39b9359ffcf04e1c4ba7c2eae800809/compiler%2Frustc_data_structures%2Fsrc%2Fobligation_forest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fobligation_forest%2Fmod.rs?ref=cdb446fec39b9359ffcf04e1c4ba7c2eae800809", "patch": "@@ -634,17 +634,14 @@ impl<O: ForestObligation> ObligationForest<O> {\n                     }\n                 }\n                 NodeState::Done => {\n-                    // This lookup can fail because the contents of\n+                    // The removal lookup might fail because the contents of\n                     // `self.active_cache` are not guaranteed to match those of\n                     // `self.nodes`. See the comment in `process_obligation`\n                     // for more details.\n-                    if let Some((predicate, _)) =\n-                        self.active_cache.remove_entry(&node.obligation.as_cache_key())\n-                    {\n-                        self.done_cache.insert(predicate);\n-                    } else {\n-                        self.done_cache.insert(node.obligation.as_cache_key().clone());\n-                    }\n+                    let cache_key = node.obligation.as_cache_key();\n+                    self.active_cache.remove(&cache_key);\n+                    self.done_cache.insert(cache_key);\n+\n                     // Extract the success stories.\n                     outcome_cb(&node.obligation);\n                     node_rewrites[index] = orig_nodes_len;"}]}