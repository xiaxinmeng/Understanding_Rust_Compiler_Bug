{"sha": "db99f98c3ec7978f33ab00aa45d1517a4562cfb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiOTlmOThjM2VjNzk3OGYzM2FiMDBhYTQ1ZDE1MTdhNDU2MmNmYjU=", "commit": {"author": {"name": "Lukas Kalbertodt", "email": "lukas.kalbertodt@gmail.com", "date": "2020-07-19T12:04:30Z"}, "committer": {"name": "Lukas Kalbertodt", "email": "lukas.kalbertodt@gmail.com", "date": "2020-08-12T19:12:21Z"}, "message": "Put panic code path from `copy_from_slice` into cold function\n\nThe previous `assert_eq` generated quite some code, which is especially\nproblematic when this call is inlined. This commit also slightly\nimproves the panic message from:\n\n  assertion failed: `(left == right)`\n    left: `3`,\n   right: `2`: destination and source slices have different lengths\n\n...to:\n\n  source slice length (2) does not match destination slice length (3)", "tree": {"sha": "536f6d69de7862521257306ccc3126763d76fc92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/536f6d69de7862521257306ccc3126763d76fc92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db99f98c3ec7978f33ab00aa45d1517a4562cfb5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQSOpdglyeINwt5bMtWqUCXPHMhXVAUCXzQ/FQAKCRCqUCXPHMhX\nVCAmAQD9G8+5Lbas3eGm8KrCSSGZkeKyjHClBnf1chUxkrP/VgD+JXaP05B3tY3h\nR59I0bjPrPVPcruHSq71vvIOgp84QwI=\n=vnRX\n-----END PGP SIGNATURE-----", "payload": "tree 536f6d69de7862521257306ccc3126763d76fc92\nparent 3df25ae186e89c885d9a71cd37fbd7a37e39fc85\nauthor Lukas Kalbertodt <lukas.kalbertodt@gmail.com> 1595160270 +0200\ncommitter Lukas Kalbertodt <lukas.kalbertodt@gmail.com> 1597259541 +0200\n\nPut panic code path from `copy_from_slice` into cold function\n\nThe previous `assert_eq` generated quite some code, which is especially\nproblematic when this call is inlined. This commit also slightly\nimproves the panic message from:\n\n  assertion failed: `(left == right)`\n    left: `3`,\n   right: `2`: destination and source slices have different lengths\n\n...to:\n\n  source slice length (2) does not match destination slice length (3)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db99f98c3ec7978f33ab00aa45d1517a4562cfb5", "html_url": "https://github.com/rust-lang/rust/commit/db99f98c3ec7978f33ab00aa45d1517a4562cfb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db99f98c3ec7978f33ab00aa45d1517a4562cfb5/comments", "author": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3df25ae186e89c885d9a71cd37fbd7a37e39fc85", "url": "https://api.github.com/repos/rust-lang/rust/commits/3df25ae186e89c885d9a71cd37fbd7a37e39fc85", "html_url": "https://github.com/rust-lang/rust/commit/3df25ae186e89c885d9a71cd37fbd7a37e39fc85"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "3c7d57f8b32a8d88f9fa9f70424dc7df872da8ee", "filename": "library/alloc/tests/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db99f98c3ec7978f33ab00aa45d1517a4562cfb5/library%2Falloc%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db99f98c3ec7978f33ab00aa45d1517a4562cfb5/library%2Falloc%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fslice.rs?ref=db99f98c3ec7978f33ab00aa45d1517a4562cfb5", "patch": "@@ -1522,15 +1522,15 @@ fn test_copy_from_slice() {\n }\n \n #[test]\n-#[should_panic(expected = \"destination and source slices have different lengths\")]\n+#[should_panic(expected = \"source slice length (4) does not match destination slice length (5)\")]\n fn test_copy_from_slice_dst_longer() {\n     let src = [0, 1, 2, 3];\n     let mut dst = [0; 5];\n     dst.copy_from_slice(&src);\n }\n \n #[test]\n-#[should_panic(expected = \"destination and source slices have different lengths\")]\n+#[should_panic(expected = \"source slice length (4) does not match destination slice length (3)\")]\n fn test_copy_from_slice_dst_shorter() {\n     let src = [0, 1, 2, 3];\n     let mut dst = [0; 3];"}, {"sha": "f2477ed6a6e1bf9214de80c7e6c70209dadd9452", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/db99f98c3ec7978f33ab00aa45d1517a4562cfb5/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db99f98c3ec7978f33ab00aa45d1517a4562cfb5/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=db99f98c3ec7978f33ab00aa45d1517a4562cfb5", "patch": "@@ -2501,7 +2501,22 @@ impl<T> [T] {\n     where\n         T: Copy,\n     {\n-        assert_eq!(self.len(), src.len(), \"destination and source slices have different lengths\");\n+        // The panic code path was put into a cold function to not bloat the\n+        // call site.\n+        #[inline(never)]\n+        #[cold]\n+        #[track_caller]\n+        fn len_mismatch_fail(dst_len: usize, src_len: usize) -> ! {\n+            panic!(\n+                \"source slice length ({}) does not match destination slice length ({})\",\n+                src_len, dst_len,\n+            );\n+        }\n+\n+        if self.len() != src.len() {\n+            len_mismatch_fail(self.len(), src.len());\n+        }\n+\n         // SAFETY: `self` is valid for `self.len()` elements by definition, and `src` was\n         // checked to have the same length. The slices cannot overlap because\n         // mutable references are exclusive."}]}