{"sha": "83ee47b054deb5939be20d7d6ce03ad33d005424", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZWU0N2IwNTRkZWI1OTM5YmUyMGQ3ZDZjZTAzYWQzM2QwMDU0MjQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-07-01T04:55:00Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-07-02T17:44:40Z"}, "message": "windows: Don't link rust_builtin\n\nThis library has no shims which are actually needed on Windows now, so translate\nthat last easy one into Rust and then don't link it at all on Windows.", "tree": {"sha": "d58439b31dd3ac21d5148f959ce5919b3b6afb80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d58439b31dd3ac21d5148f959ce5919b3b6afb80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83ee47b054deb5939be20d7d6ce03ad33d005424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83ee47b054deb5939be20d7d6ce03ad33d005424", "html_url": "https://github.com/rust-lang/rust/commit/83ee47b054deb5939be20d7d6ce03ad33d005424", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83ee47b054deb5939be20d7d6ce03ad33d005424/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18c39e126a833f66f58fe6cbf7b97ca4262f1c90", "url": "https://api.github.com/repos/rust-lang/rust/commits/18c39e126a833f66f58fe6cbf7b97ca4262f1c90", "html_url": "https://github.com/rust-lang/rust/commit/18c39e126a833f66f58fe6cbf7b97ca4262f1c90"}], "stats": {"total": 75, "additions": 35, "deletions": 40}, "files": [{"sha": "031fda089c84c7e5a8e6d382ccdca13351276a73", "filename": "src/libstd/rt/util.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/83ee47b054deb5939be20d7d6ce03ad33d005424/src%2Flibstd%2Frt%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83ee47b054deb5939be20d7d6ce03ad33d005424/src%2Flibstd%2Frt%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Futil.rs?ref=83ee47b054deb5939be20d7d6ce03ad33d005424", "patch": "@@ -13,7 +13,6 @@ use io::prelude::*;\n use env;\n use fmt;\n use intrinsics;\n-use libc::uintptr_t;\n use sync::atomic::{self, Ordering};\n use sys::stdio::Stderr;\n \n@@ -22,10 +21,18 @@ use sys::stdio::Stderr;\n /// can't run correctly un-altered. Valgrind is there to help\n /// you notice weirdness in normal, un-doctored code paths!\n pub fn running_on_valgrind() -> bool {\n-    extern {\n-        fn rust_running_on_valgrind() -> uintptr_t;\n+    return on_valgrind();\n+    #[cfg(windows)]\n+    fn on_valgrind() -> bool { false }\n+\n+    #[cfg(unix)]\n+    fn on_valgrind() -> bool {\n+        use libc::uintptr_t;\n+        extern {\n+            fn rust_running_on_valgrind() -> uintptr_t;\n+        }\n+        unsafe { rust_running_on_valgrind() != 0 }\n     }\n-    unsafe { rust_running_on_valgrind() != 0 }\n }\n \n /// Valgrind has a fixed-sized array (size around 2000) of segment descriptors"}, {"sha": "b7839423e52259821aaf0211756ecee9c647ecb7", "filename": "src/libstd/rtdeps.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83ee47b054deb5939be20d7d6ce03ad33d005424/src%2Flibstd%2Frtdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83ee47b054deb5939be20d7d6ce03ad33d005424/src%2Flibstd%2Frtdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frtdeps.rs?ref=83ee47b054deb5939be20d7d6ce03ad33d005424", "patch": "@@ -12,8 +12,8 @@\n //! the standard library This varies per-platform, but these libraries are\n //! necessary for running libstd.\n \n-// All platforms need to link to rustrt\n-#[cfg(not(test))]\n+// A few small shims in C that haven't been translated to Rust yet\n+#[cfg(all(not(test), not(windows)))]\n #[link(name = \"rust_builtin\", kind = \"static\")]\n extern {}\n "}, {"sha": "724c0b2a8927f9af7f5eaad48069b348e97828cf", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/83ee47b054deb5939be20d7d6ce03ad33d005424/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83ee47b054deb5939be20d7d6ce03ad33d005424/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=83ee47b054deb5939be20d7d6ce03ad33d005424", "patch": "@@ -872,7 +872,7 @@ fn run_tests<F>(opts: &TestOpts,\n \n #[allow(deprecated)]\n fn get_concurrency() -> usize {\n-    match env::var(\"RUST_TEST_THREADS\") {\n+    return match env::var(\"RUST_TEST_THREADS\") {\n         Ok(s) => {\n             let opt_n: Option<usize> = s.parse().ok();\n             match opt_n {\n@@ -884,10 +884,24 @@ fn get_concurrency() -> usize {\n             if std::rt::util::limit_thread_creation_due_to_osx_and_valgrind() {\n                 1\n             } else {\n-                extern { fn rust_get_num_cpus() -> libc::uintptr_t; }\n-                unsafe { rust_get_num_cpus() as usize }\n+                num_cpus()\n             }\n         }\n+    };\n+\n+    #[cfg(windows)]\n+    fn num_cpus() -> usize {\n+        unsafe {\n+            let mut sysinfo = std::mem::zeroed();\n+            libc::GetSystemInfo(&mut sysinfo);\n+            sysinfo.dwNumberOfProcessors as usize\n+        }\n+    }\n+\n+    #[cfg(unix)]\n+    fn num_cpus() -> usize {\n+        extern { fn rust_get_num_cpus() -> libc::uintptr_t; }\n+        unsafe { rust_get_num_cpus() as usize }\n     }\n }\n "}, {"sha": "76a3debef59a4163f87e24774a435216cc2c583c", "filename": "src/rt/rust_builtin.c", "status": "modified", "additions": 5, "deletions": 31, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/83ee47b054deb5939be20d7d6ce03ad33d005424/src%2Frt%2Frust_builtin.c", "raw_url": "https://github.com/rust-lang/rust/raw/83ee47b054deb5939be20d7d6ce03ad33d005424/src%2Frt%2Frust_builtin.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.c?ref=83ee47b054deb5939be20d7d6ce03ad33d005424", "patch": "@@ -8,27 +8,22 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#if !defined(_WIN32)\n+\n #include <stdint.h>\n #include <time.h>\n #include <string.h>\n #include <assert.h>\n #include <stdlib.h>\n \n \n-#if !defined(_WIN32)\n #include <dirent.h>\n #include <pthread.h>\n #include <signal.h>\n #include <sys/stat.h>\n #include <sys/time.h>\n #include <sys/types.h>\n #include <unistd.h>\n-#else\n-#include <windows.h>\n-#include <wincrypt.h>\n-#include <stdio.h>\n-#include <tchar.h>\n-#endif\n \n #ifdef __APPLE__\n #include <TargetConditionals.h>\n@@ -41,17 +36,8 @@\n \n /* Foreign builtins. */\n //include valgrind.h after stdint.h so that uintptr_t is defined for msys2 w64\n-#ifndef _WIN32\n #include \"valgrind/valgrind.h\"\n-#endif\n-\n-#if defined(_MSC_VER)\n-# define RUST_BUILTIN_API __declspec(dllexport)\n-#else\n-# define RUST_BUILTIN_API\n-#endif\n \n-#ifndef _WIN32\n char*\n rust_list_dir_val(struct dirent* entry_ptr) {\n     return entry_ptr->d_name;\n@@ -92,17 +78,8 @@ int\n rust_dirent_t_size() {\n     return sizeof(struct dirent);\n }\n-#endif\n-\n-#if defined(_WIN32)\n-int\n-get_num_cpus() {\n-    SYSTEM_INFO sysinfo;\n-    GetSystemInfo(&sysinfo);\n \n-    return (int) sysinfo.dwNumberOfProcessors;\n-}\n-#elif defined(__BSD__)\n+#if defined(__BSD__)\n int\n get_num_cpus() {\n     /* swiped from http://stackoverflow.com/questions/150355/\n@@ -136,19 +113,14 @@ get_num_cpus() {\n }\n #endif\n \n-RUST_BUILTIN_API\n uintptr_t\n rust_get_num_cpus() {\n     return get_num_cpus();\n }\n \n uintptr_t\n rust_running_on_valgrind() {\n-#ifdef _WIN32\n-    return 0;\n-#else\n     return RUNNING_ON_VALGRIND;\n-#endif\n }\n \n #if defined(__DragonFly__)\n@@ -484,6 +456,8 @@ const char * rust_current_exe() {\n \n #endif\n \n+#endif // !defined(_WIN32)\n+\n //\n // Local Variables:\n // mode: C++"}]}