{"sha": "260a24d05e8392da4ab5eb3ebe45de81d4f72f50", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2MGEyNGQwNWU4MzkyZGE0YWI1ZWIzZWJlNDVkZTgxZDRmNzJmNTA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-22T18:02:08Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-22T18:02:08Z"}, "message": "internal: count ItemScopes", "tree": {"sha": "0176dc6c74ba31b3540d7063b70b2fedddd8cadd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0176dc6c74ba31b3540d7063b70b2fedddd8cadd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/260a24d05e8392da4ab5eb3ebe45de81d4f72f50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/260a24d05e8392da4ab5eb3ebe45de81d4f72f50", "html_url": "https://github.com/rust-lang/rust/commit/260a24d05e8392da4ab5eb3ebe45de81d4f72f50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/260a24d05e8392da4ab5eb3ebe45de81d4f72f50/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4772cb6b301917820eff62d36e2d6ec359420df3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4772cb6b301917820eff62d36e2d6ec359420df3", "html_url": "https://github.com/rust-lang/rust/commit/4772cb6b301917820eff62d36e2d6ec359420df3"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "0d364b1cbad3284dbaf726456135f4bd556b804b", "filename": "crates/hir_def/src/item_scope.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/260a24d05e8392da4ab5eb3ebe45de81d4f72f50/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/260a24d05e8392da4ab5eb3ebe45de81d4f72f50/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs?ref=260a24d05e8392da4ab5eb3ebe45de81d4f72f50", "patch": "@@ -6,6 +6,7 @@ use std::collections::hash_map::Entry;\n use base_db::CrateId;\n use hir_expand::{name::Name, AstId, MacroCallId, MacroDefKind};\n use once_cell::sync::Lazy;\n+use profile::Count;\n use rustc_hash::{FxHashMap, FxHashSet};\n use stdx::format_to;\n use syntax::ast;\n@@ -30,6 +31,8 @@ pub struct PerNsGlobImports {\n \n #[derive(Debug, Default, PartialEq, Eq)]\n pub struct ItemScope {\n+    _c: Count<Self>,\n+\n     /// Defs visible in this scope. This includes `declarations`, but also\n     /// imports.\n     types: FxHashMap<Name, (ModuleDefId, Visibility)>,\n@@ -311,6 +314,7 @@ impl ItemScope {\n     pub(crate) fn shrink_to_fit(&mut self) {\n         // Exhaustive match to require handling new fields.\n         let Self {\n+            _c: _,\n             types,\n             values,\n             macros,"}]}