{"sha": "d3ca9c61a0685c5add1ce2115402dfc3e2f48912", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzY2E5YzYxYTA2ODVjNWFkZDFjZTIxMTU0MDJkZmMzZTJmNDg5MTI=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-05-09T01:47:34Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-05-09T20:08:53Z"}, "message": "Better error message for certain classes of unresolved imports", "tree": {"sha": "1093e685f83afc0bdedda9e252aba1ae39a68ce4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1093e685f83afc0bdedda9e252aba1ae39a68ce4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3ca9c61a0685c5add1ce2115402dfc3e2f48912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3ca9c61a0685c5add1ce2115402dfc3e2f48912", "html_url": "https://github.com/rust-lang/rust/commit/d3ca9c61a0685c5add1ce2115402dfc3e2f48912", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3ca9c61a0685c5add1ce2115402dfc3e2f48912/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d82d9874a6f88e0afa021796e9efaba5b3670c31", "url": "https://api.github.com/repos/rust-lang/rust/commits/d82d9874a6f88e0afa021796e9efaba5b3670c31", "html_url": "https://github.com/rust-lang/rust/commit/d82d9874a6f88e0afa021796e9efaba5b3670c31"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "26dad202ab32c0a72f3a2e902f2847b593696e84", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d3ca9c61a0685c5add1ce2115402dfc3e2f48912/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3ca9c61a0685c5add1ce2115402dfc3e2f48912/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=d3ca9c61a0685c5add1ce2115402dfc3e2f48912", "patch": "@@ -64,7 +64,7 @@ use syntax::attr::{attr_metas, contains_name, attrs_contains_name};\n use syntax::parse::token::ident_interner;\n use syntax::parse::token::special_idents;\n use syntax::print::pprust::path_to_str;\n-use syntax::codemap::{span, dummy_sp};\n+use syntax::codemap::{span, dummy_sp, BytePos};\n use syntax::visit::{default_visitor, mk_vt, Visitor, visit_block};\n use syntax::visit::{visit_crate, visit_expr, visit_expr_opt};\n use syntax::visit::{visit_foreign_item, visit_item};\n@@ -2482,6 +2482,16 @@ pub impl Resolver {\n                                               TypeNS,\n                                               name_search_type) {\n                 Failed => {\n+                    let segment_name = self.session.str_of(name);\n+                    let module_name = self.module_to_str(search_module);\n+                    if module_name == ~\"???\" {\n+                        self.session.span_err(span {lo: span.lo, hi: span.lo +\n+                                              BytePos(str::len(*segment_name)), expn_info:\n+                                              span.expn_info}, fmt!(\"unresolved import.  perhaps \\\n+                                                                    you forgot an 'extern mod %s'?\",\n+                                                                    *segment_name));\n+                        return Failed;\n+                    }\n                     self.session.span_err(span, ~\"unresolved name\");\n                     return Failed;\n                 }"}]}