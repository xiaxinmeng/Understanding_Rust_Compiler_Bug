{"sha": "01563682c69867984525c255a3232eba9859cff5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNTYzNjgyYzY5ODY3OTg0NTI1YzI1NWEzMjMyZWJhOTg1OWNmZjU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-05T04:35:51Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-05T11:49:22Z"}, "message": "fix ui-fulldeps fallout", "tree": {"sha": "300d0974cd8482f046c220f853c30b2f54a76437", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/300d0974cd8482f046c220f853c30b2f54a76437"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01563682c69867984525c255a3232eba9859cff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01563682c69867984525c255a3232eba9859cff5", "html_url": "https://github.com/rust-lang/rust/commit/01563682c69867984525c255a3232eba9859cff5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01563682c69867984525c255a3232eba9859cff5/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebfd8673a791661d9cb526d9994f2f6bbfa49348", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebfd8673a791661d9cb526d9994f2f6bbfa49348", "html_url": "https://github.com/rust-lang/rust/commit/ebfd8673a791661d9cb526d9994f2f6bbfa49348"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "84bcd220ae7669905f668b42373c7c1a106945bc", "filename": "src/test/run-make-fulldeps/hotplug_codegen_backend/the_backend.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/01563682c69867984525c255a3232eba9859cff5/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2Fthe_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01563682c69867984525c255a3232eba9859cff5/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2Fthe_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2Fthe_backend.rs?ref=01563682c69867984525c255a3232eba9859cff5", "patch": "@@ -4,6 +4,7 @@ extern crate rustc;\n extern crate rustc_codegen_utils;\n #[macro_use]\n extern crate rustc_data_structures;\n+extern crate rustc_hir;\n extern crate rustc_target;\n extern crate rustc_driver;\n extern crate rustc_span;\n@@ -65,7 +66,7 @@ impl CodegenBackend for TheBackend {\n         _metadata: EncodedMetadata,\n         _need_metadata_module: bool,\n     ) -> Box<dyn Any> {\n-        use rustc::hir::def_id::LOCAL_CRATE;\n+        use rustc_hir::def_id::LOCAL_CRATE;\n \n         Box::new(tcx.crate_name(LOCAL_CRATE) as Symbol)\n     }"}, {"sha": "ee14d71573041bbf88ab0406a5d4a21c30a52f15", "filename": "src/test/ui-fulldeps/auxiliary/issue-40001-plugin.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/01563682c69867984525c255a3232eba9859cff5/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01563682c69867984525c255a3232eba9859cff5/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fissue-40001-plugin.rs?ref=01563682c69867984525c255a3232eba9859cff5", "patch": "@@ -4,10 +4,13 @@\n #[macro_use] extern crate rustc;\n #[macro_use] extern crate rustc_session;\n extern crate rustc_driver;\n+extern crate rustc_hir;\n extern crate rustc_span;\n extern crate syntax;\n \n-use rustc::hir::{self, intravisit, Node};\n+use rustc::hir::intravisit;\n+use rustc_hir as hir;\n+use rustc_hir::Node;\n use rustc::lint::{LateContext, LintPass, LintArray, LateLintPass, LintContext};\n use rustc_driver::plugin::Registry;\n use rustc_span::source_map;"}, {"sha": "4ccbe8a3c0eb0f6cbf2c7c229cd074315e5f894c", "filename": "src/test/ui-fulldeps/auxiliary/lint-for-crate-rpass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01563682c69867984525c255a3232eba9859cff5/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01563682c69867984525c255a3232eba9859cff5/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate-rpass.rs?ref=01563682c69867984525c255a3232eba9859cff5", "patch": "@@ -5,10 +5,10 @@\n #[macro_use] extern crate rustc;\n #[macro_use] extern crate rustc_session;\n extern crate rustc_driver;\n+extern crate rustc_hir;\n extern crate rustc_span;\n extern crate syntax;\n \n-use rustc::hir;\n use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass};\n use rustc_driver::plugin::Registry;\n use rustc_span::symbol::Symbol;\n@@ -25,7 +25,7 @@ macro_rules! fake_lint_pass {\n         }\n \n         impl<'a, 'tcx> LateLintPass<'a, 'tcx> for $struct {\n-            fn check_crate(&mut self, cx: &LateContext, krate: &hir::Crate) {\n+            fn check_crate(&mut self, cx: &LateContext, krate: &rustc_hir::Crate) {\n                 $(\n                     if !attr::contains_name(&krate.attrs, $attr) {\n                         cx.span_lint(CRATE_NOT_OKAY, krate.span,"}, {"sha": "360bffaa46f2bfb3b6d0350a5ee6971536373808", "filename": "src/test/ui-fulldeps/auxiliary/lint-for-crate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01563682c69867984525c255a3232eba9859cff5/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01563682c69867984525c255a3232eba9859cff5/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-for-crate.rs?ref=01563682c69867984525c255a3232eba9859cff5", "patch": "@@ -6,10 +6,10 @@\n #[macro_use] extern crate rustc;\n #[macro_use] extern crate rustc_session;\n extern crate rustc_driver;\n+extern crate rustc_hir;\n extern crate rustc_span;\n extern crate syntax;\n \n-use rustc::hir;\n use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LintArray};\n use rustc_driver::plugin::Registry;\n use rustc_span::symbol::Symbol;\n@@ -24,7 +24,7 @@ declare_lint! {\n declare_lint_pass!(Pass => [CRATE_NOT_OKAY]);\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n-    fn check_crate(&mut self, cx: &LateContext, krate: &hir::Crate) {\n+    fn check_crate(&mut self, cx: &LateContext, krate: &rustc_hir::Crate) {\n         if !attr::contains_name(&krate.attrs, Symbol::intern(\"crate_okay\")) {\n             cx.span_lint(CRATE_NOT_OKAY, krate.span,\n                          \"crate is not marked with #![crate_okay]\");"}, {"sha": "786c699947e47080c39c0757b1adae50bb3320df", "filename": "src/test/ui-fulldeps/auxiliary/lint-group-plugin-test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01563682c69867984525c255a3232eba9859cff5/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-group-plugin-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01563682c69867984525c255a3232eba9859cff5/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-group-plugin-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-group-plugin-test.rs?ref=01563682c69867984525c255a3232eba9859cff5", "patch": "@@ -7,8 +7,8 @@\n #[macro_use] extern crate rustc;\n #[macro_use] extern crate rustc_session;\n extern crate rustc_driver;\n+extern crate rustc_hir;\n \n-use rustc::hir;\n use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LintArray, LintId};\n use rustc_driver::plugin::Registry;\n \n@@ -19,7 +19,7 @@ declare_lint!(PLEASE_LINT, Warn, \"Warn about items named 'pleaselintme'\");\n declare_lint_pass!(Pass => [TEST_LINT, PLEASE_LINT]);\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n-    fn check_item(&mut self, cx: &LateContext, it: &hir::Item) {\n+    fn check_item(&mut self, cx: &LateContext, it: &rustc_hir::Item) {\n         match &*it.ident.as_str() {\n             \"lintme\" => cx.span_lint(TEST_LINT, it.span, \"item is named 'lintme'\"),\n             \"pleaselintme\" => cx.span_lint(PLEASE_LINT, it.span, \"item is named 'pleaselintme'\"),"}]}