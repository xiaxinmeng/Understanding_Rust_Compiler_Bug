{"sha": "7edc93b45c6fa6515ce08f3fb8741560d4f2d139", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlZGM5M2I0NWM2ZmE2NTE1Y2UwOGYzZmI4NzQxNTYwZDRmMmQxMzk=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-09-02T01:24:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-02T01:24:43Z"}, "message": "Rollup merge of #76207 - denisvasilik:intra-doc-links-core-clone, r=jyn514\n\n# Move to intra-doc links for library/core/src/clone.rs\n\nHelps with #75080.\n\n@rustbot modify labels: T-doc, A-intra-doc-links", "tree": {"sha": "806c0873c06391a1f946cc73c17d65415d037cf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/806c0873c06391a1f946cc73c17d65415d037cf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7edc93b45c6fa6515ce08f3fb8741560d4f2d139", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfTvRbCRBK7hj4Ov3rIwAAdHIIAEcQEp5AK/lCDNxtwpNKkQAe\nUY2cs9w7Eo9I2JkeHZ23Yp4fLs2/trVoOii3jSGSefzLwEu1XeeEh30umLmndQ+i\ncZ/Moq+6L6mxgkvqMAXmOAaEEJ1/nw6+XGdkXdxwfyp5gBGGMOxzPHM9voCrh7pF\nIWyapVo7pK4AqjMtjEpj8ITa80e/qiNavON51zGPTY06m0P9rUC5gU3aYzNH46at\n7ufTQUK23tmTHsM1XJPBEU4vtIAYsWLQ5H++lYOwpi53R8zNiDRLOEqEL39ZE8By\nGLK+RzJwiWkvSTq0tKdm8PS+lj0awgIrc9T8kHaOTpI7VYxqWg7g7hA+SnDVaUg=\n=bgXA\n-----END PGP SIGNATURE-----\n", "payload": "tree 806c0873c06391a1f946cc73c17d65415d037cf0\nparent 11ff32f9ecabb0806140d5e950b5c19698cc5efc\nparent 3510c568874eb1274805b25cfa5cc54aa1819030\nauthor Tyler Mandry <tmandry@gmail.com> 1599009883 -0700\ncommitter GitHub <noreply@github.com> 1599009883 -0700\n\nRollup merge of #76207 - denisvasilik:intra-doc-links-core-clone, r=jyn514\n\n# Move to intra-doc links for library/core/src/clone.rs\n\nHelps with #75080.\n\n@rustbot modify labels: T-doc, A-intra-doc-links\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7edc93b45c6fa6515ce08f3fb8741560d4f2d139", "html_url": "https://github.com/rust-lang/rust/commit/7edc93b45c6fa6515ce08f3fb8741560d4f2d139", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7edc93b45c6fa6515ce08f3fb8741560d4f2d139/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11ff32f9ecabb0806140d5e950b5c19698cc5efc", "url": "https://api.github.com/repos/rust-lang/rust/commits/11ff32f9ecabb0806140d5e950b5c19698cc5efc", "html_url": "https://github.com/rust-lang/rust/commit/11ff32f9ecabb0806140d5e950b5c19698cc5efc"}, {"sha": "3510c568874eb1274805b25cfa5cc54aa1819030", "url": "https://api.github.com/repos/rust-lang/rust/commits/3510c568874eb1274805b25cfa5cc54aa1819030", "html_url": "https://github.com/rust-lang/rust/commit/3510c568874eb1274805b25cfa5cc54aa1819030"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "a953a3a4182bce854c29c7f02a5aceb67ccbf945", "filename": "library/core/src/clone.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7edc93b45c6fa6515ce08f3fb8741560d4f2d139/library%2Fcore%2Fsrc%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7edc93b45c6fa6515ce08f3fb8741560d4f2d139/library%2Fcore%2Fsrc%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fclone.rs?ref=7edc93b45c6fa6515ce08f3fb8741560d4f2d139", "patch": "@@ -7,11 +7,9 @@\n //! contain owned boxes or implement [`Drop`]), so the compiler considers\n //! them cheap and safe to copy. For other types copies must be made\n //! explicitly, by convention implementing the [`Clone`] trait and calling\n-//! the [`clone`][clone] method.\n+//! the [`clone`] method.\n //!\n-//! [`Clone`]: trait.Clone.html\n-//! [clone]: trait.Clone.html#tymethod.clone\n-//! [`Drop`]: ../../std/ops/trait.Drop.html\n+//! [`clone`]: Clone::clone\n //!\n //! Basic usage example:\n //!\n@@ -51,7 +49,9 @@\n /// ## Derivable\n ///\n /// This trait can be used with `#[derive]` if all fields are `Clone`. The `derive`d\n-/// implementation of [`clone`] calls [`clone`] on each field.\n+/// implementation of [`Clone`] calls [`clone`] on each field.\n+///\n+/// [`clone`]: Clone::clone\n ///\n /// For a generic struct, `#[derive]` implements `Clone` conditionally by adding bound `Clone` on\n /// generic parameters.\n@@ -74,9 +74,6 @@\n /// An example is a generic struct holding a function pointer. In this case, the\n /// implementation of `Clone` cannot be `derive`d, but can be implemented as:\n ///\n-/// [`Copy`]: ../../std/marker/trait.Copy.html\n-/// [`clone`]: trait.Clone.html#tymethod.clone\n-///\n /// ```\n /// struct Generate<T>(fn() -> T);\n ///"}]}