{"sha": "5c7278a36412c1a0a06bab4f1364cf5719ab8287", "node_id": "C_kwDOAAsO6NoAKDVjNzI3OGEzNjQxMmMxYTBhMDZiYWI0ZjEzNjRjZjU3MTlhYjgyODc", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-11-28T07:14:20Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-12-02T08:01:21Z"}, "message": "return when expr has error\n\nfmt\n\nadd a comment", "tree": {"sha": "49f8a7b97d3d1bcf94fde57d2e4ca90185a95777", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49f8a7b97d3d1bcf94fde57d2e4ca90185a95777"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c7278a36412c1a0a06bab4f1364cf5719ab8287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c7278a36412c1a0a06bab4f1364cf5719ab8287", "html_url": "https://github.com/rust-lang/rust/commit/5c7278a36412c1a0a06bab4f1364cf5719ab8287", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c7278a36412c1a0a06bab4f1364cf5719ab8287/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0e9c86b3f3e96267ba2cd80f95f362ef0cce40b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0e9c86b3f3e96267ba2cd80f95f362ef0cce40b", "html_url": "https://github.com/rust-lang/rust/commit/c0e9c86b3f3e96267ba2cd80f95f362ef0cce40b"}], "stats": {"total": 80, "additions": 75, "deletions": 5}, "files": [{"sha": "372b6d7a2b8c362e32f41072723d32d45ac71a2a", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5c7278a36412c1a0a06bab4f1364cf5719ab8287/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7278a36412c1a0a06bab4f1364cf5719ab8287/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=5c7278a36412c1a0a06bab4f1364cf5719ab8287", "patch": "@@ -636,13 +636,34 @@ trait UnusedDelimLint {\n         left_pos: Option<BytePos>,\n         right_pos: Option<BytePos>,\n     ) {\n+        // If `value` has `ExprKind::Err`, unused delim lint can be broken.\n+        // For example, the following code caused ICE.\n+        // This is because the `ExprKind::Call` in `value` has `ExprKind::Err` as its argument\n+        // and this leads to wrong spans. #104897\n+        //\n+        // ```\n+        // fn f(){(print!(\u00e1\n+        // ```\n+        use rustc_ast::visit::{walk_expr, Visitor};\n+        struct ErrExprVisitor {\n+            has_error: bool,\n+        }\n+        impl<'ast> Visitor<'ast> for ErrExprVisitor {\n+            fn visit_expr(&mut self, expr: &'ast ast::Expr) {\n+                if let ExprKind::Err = expr.kind {\n+                    self.has_error = true;\n+                    return;\n+                }\n+                walk_expr(self, expr)\n+            }\n+        }\n+        let mut visitor = ErrExprVisitor { has_error: false };\n+        visitor.visit_expr(value);\n+        if visitor.has_error {\n+            return;\n+        }\n         let spans = match value.kind {\n             ast::ExprKind::Block(ref block, None) if block.stmts.len() == 1 => {\n-                if let StmtKind::Expr(expr) = &block.stmts[0].kind\n-                    && let ExprKind::Err = expr.kind\n-                {\n-                    return\n-                }\n                 if let Some(span) = block.stmts[0].span.find_ancestor_inside(value.span) {\n                     Some((value.span.with_hi(span.lo()), value.span.with_lo(span.hi())))\n                 } else {"}, {"sha": "5fbc658f1557c9cbe1d61713592df9885356fde5", "filename": "src/test/ui/lint/issue-104897.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5c7278a36412c1a0a06bab4f1364cf5719ab8287/src%2Ftest%2Fui%2Flint%2Fissue-104897.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c7278a36412c1a0a06bab4f1364cf5719ab8287/src%2Ftest%2Fui%2Flint%2Fissue-104897.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-104897.rs?ref=5c7278a36412c1a0a06bab4f1364cf5719ab8287", "patch": "@@ -0,0 +1,6 @@\n+// error-pattern: this file contains an unclosed delimiter\n+// error-pattern: this file contains an unclosed delimiter\n+// error-pattern: this file contains an unclosed delimiter\n+// error-pattern: format argument must be a string literal\n+\n+fn f(){(print!(\u00e1"}, {"sha": "817a93c2f3bb2774d2ba158999384d4740324cbe", "filename": "src/test/ui/lint/issue-104897.stderr", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/5c7278a36412c1a0a06bab4f1364cf5719ab8287/src%2Ftest%2Fui%2Flint%2Fissue-104897.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c7278a36412c1a0a06bab4f1364cf5719ab8287/src%2Ftest%2Fui%2Flint%2Fissue-104897.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-104897.stderr?ref=5c7278a36412c1a0a06bab4f1364cf5719ab8287", "patch": "@@ -0,0 +1,43 @@\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-104897.rs:6:18\n+   |\n+LL | fn f(){(print!(\u00e1\n+   |       --      -  ^\n+   |       ||      |\n+   |       ||      unclosed delimiter\n+   |       |unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-104897.rs:6:18\n+   |\n+LL | fn f(){(print!(\u00e1\n+   |       --      -  ^\n+   |       ||      |\n+   |       ||      unclosed delimiter\n+   |       |unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-104897.rs:6:18\n+   |\n+LL | fn f(){(print!(\u00e1\n+   |       --      -  ^\n+   |       ||      |\n+   |       ||      unclosed delimiter\n+   |       |unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: format argument must be a string literal\n+  --> $DIR/issue-104897.rs:6:16\n+   |\n+LL | fn f(){(print!(\u00e1\n+   |                ^\n+   |\n+help: you might be missing a string literal to format with\n+   |\n+LL | fn f(){(print!(\"{}\", \u00e1\n+   |                +++++\n+\n+error: aborting due to 4 previous errors\n+"}]}