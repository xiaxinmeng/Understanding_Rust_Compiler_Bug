{"sha": "e65e1716a7086c365214e1b1c551c4d16af933d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NWUxNzE2YTcwODZjMzY1MjE0ZTFiMWM1NTFjNGQxNmFmOTMzZDU=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-16T15:46:51Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-03-16T15:46:51Z"}, "message": "Revert 6fdb81fa17b3c7147a69edc5217c9f93ff485410, it is causing failures in\nthe bots.", "tree": {"sha": "b6e36abcb6164665e6a313fbd65cc676d13ecbef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6e36abcb6164665e6a313fbd65cc676d13ecbef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e65e1716a7086c365214e1b1c551c4d16af933d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e65e1716a7086c365214e1b1c551c4d16af933d5", "html_url": "https://github.com/rust-lang/rust/commit/e65e1716a7086c365214e1b1c551c4d16af933d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e65e1716a7086c365214e1b1c551c4d16af933d5/comments", "author": null, "committer": null, "parents": [{"sha": "8dc505905831a364d09270f5288781e6770b02e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc505905831a364d09270f5288781e6770b02e0", "html_url": "https://github.com/rust-lang/rust/commit/8dc505905831a364d09270f5288781e6770b02e0"}], "stats": {"total": 24, "additions": 3, "deletions": 21}, "files": [{"sha": "b922b3780ed577f936a477d67ff6d34fbe0613f0", "filename": "src/comp/front/creader.rs", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e65e1716a7086c365214e1b1c551c4d16af933d5/src%2Fcomp%2Ffront%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65e1716a7086c365214e1b1c551c4d16af933d5/src%2Fcomp%2Ffront%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fcreader.rs?ref=e65e1716a7086c365214e1b1c551c4d16af933d5", "patch": "@@ -22,29 +22,12 @@ type env = @rec(\n \n // TODO: return something\n fn load_crate(ast.ident ident, vec[str] library_search_paths) -> @() {\n-    auto filename = os.dylib_filename(ident);\n     for (str library_search_path in library_search_paths) {\n-        auto path = fs.connect(library_search_path, filename);\n-        auto pb = _str.buf(path);\n-        auto llmb = llvmext.LLVMRustCreateMemoryBufferWithContentsOfFile(pb);\n-        if ((llmb as int) != 0) {\n-            auto llof = mk_object_file(llmb);\n-            if ((llof.llof as int) != 0) {\n-                auto llsi = mk_section_iter(llof.llof);\n-                while ((llvmext.LLVMIsSectionIteratorAtEnd(llof.llof,\n-                        llsi.llsi) as int) == 0) {\n-                    // TODO: check name, pass contents off.\n-\n-                    llvmext.LLVMMoveToNextSection(llsi.llsi);\n-                }\n-            }\n-        }\n+        auto path = fs.connect(library_search_path, ident);\n+        // TODO\n     }\n \n-    // TODO: write line number of \"use\" statement\n-    log #fmt(\"can't find a crate named '%s' (looked for '%s' in %s)\",\n-        ident, filename, _str.connect(library_search_paths, \", \"));\n-    fail;\n+    ret @();\n }\n \n fn fold_view_item_use(&env e, &span sp, ast.ident ident,"}, {"sha": "7f1a7a03ebcf688fbd1aa520970c3bf4ddb9cc3b", "filename": "src/comp/rustc.rc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e65e1716a7086c365214e1b1c551c4d16af933d5/src%2Fcomp%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/e65e1716a7086c365214e1b1c551c4d16af933d5/src%2Fcomp%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Frustc.rc?ref=e65e1716a7086c365214e1b1c551c4d16af933d5", "patch": "@@ -42,7 +42,6 @@ mod util {\n }\n \n auth driver.rustc.main = impure;\n-auth front.creader.load_crate = unsafe;\n auth middle.metadata = unsafe;\n auth middle.trans = unsafe;\n auth middle.trans.copy_args_to_allocas = impure;"}]}