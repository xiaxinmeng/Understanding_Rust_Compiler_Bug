{"sha": "76aab6b1a892b235d260cd6e79da0475166f4925", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2YWFiNmIxYTg5MmIyMzVkMjYwY2Q2ZTc5ZGEwNDc1MTY2ZjQ5MjU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-15T20:30:31Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-15T20:30:31Z"}, "message": "Teach typeck to stringify obj types.", "tree": {"sha": "3ce94a2a60b07ee91a211db3cb0e0e40bffa4be7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ce94a2a60b07ee91a211db3cb0e0e40bffa4be7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76aab6b1a892b235d260cd6e79da0475166f4925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76aab6b1a892b235d260cd6e79da0475166f4925", "html_url": "https://github.com/rust-lang/rust/commit/76aab6b1a892b235d260cd6e79da0475166f4925", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76aab6b1a892b235d260cd6e79da0475166f4925/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91c0cab61a955061fdf2df335cdc6efb51a4980b", "url": "https://api.github.com/repos/rust-lang/rust/commits/91c0cab61a955061fdf2df335cdc6efb51a4980b", "html_url": "https://github.com/rust-lang/rust/commit/91c0cab61a955061fdf2df335cdc6efb51a4980b"}], "stats": {"total": 39, "additions": 33, "deletions": 6}, "files": [{"sha": "123945aaaf590ca014e8932d5263861ed2b4e66a", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 33, "deletions": 6, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/76aab6b1a892b235d260cd6e79da0475166f4925/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76aab6b1a892b235d260cd6e79da0475166f4925/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=76aab6b1a892b235d260cd6e79da0475166f4925", "patch": "@@ -173,6 +173,32 @@ fn ty_to_str(&@ty typ) -> str {\n         ret s + ty_to_str(input.ty);\n     }\n \n+    fn fn_to_str(option.t[ast.ident] ident,\n+                 vec[arg] inputs, @ty output) -> str {\n+            auto f = fn_input_to_str;\n+            auto s = \"fn\";\n+            alt (ident) {\n+                case (some[ast.ident](?i)) {\n+                    s += \" \";\n+                    s += i;\n+                }\n+                case (_) { }\n+            }\n+\n+            s += \"(\";\n+            s += _str.connect(_vec.map[arg,str](f, inputs), \", \");\n+            s += \")\";\n+\n+            if (output.struct != ty_nil) {\n+                s += \" -> \" + ty_to_str(output);\n+            }\n+            ret s;\n+    }\n+\n+    fn method_to_str(&method m) -> str {\n+        ret fn_to_str(some[ast.ident](m.ident), m.inputs, m.output) + \";\";\n+    }\n+\n     fn field_to_str(&field f) -> str {\n         ret ty_to_str(f.ty) + \" \" + f.ident;\n     }\n@@ -211,12 +237,13 @@ fn ty_to_str(&@ty typ) -> str {\n         }\n \n         case (ty_fn(?inputs, ?output)) {\n-            auto f = fn_input_to_str;\n-            s = \"fn(\" + _str.connect(_vec.map[arg,str](f, inputs),\n-                                     \", \") + \")\";\n-            if (output.struct != ty_nil) {\n-                s += \" -> \" + ty_to_str(output);\n-            }\n+            s = fn_to_str(none[ast.ident], inputs, output);\n+        }\n+\n+        case (ty_obj(?meths)) {\n+            auto f = method_to_str;\n+            auto m = _vec.map[method,str](f, meths);\n+            s = \"obj {\\n\\t\" + _str.connect(m, \"\\n\\t\") + \"\\n}\";\n         }\n \n         case (ty_var(?v)) {"}]}