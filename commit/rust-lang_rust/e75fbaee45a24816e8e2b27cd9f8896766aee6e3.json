{"sha": "e75fbaee45a24816e8e2b27cd9f8896766aee6e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NWZiYWVlNDVhMjQ4MTZlOGUyYjI3Y2Q5Zjg4OTY3NjZhZWU2ZTM=", "commit": {"author": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2020-06-19T19:46:04Z"}, "committer": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2020-06-19T19:46:04Z"}, "message": "add second message for livedrop errors", "tree": {"sha": "e88da6044421afa60d4a9c337eefe7c445546de2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e88da6044421afa60d4a9c337eefe7c445546de2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e75fbaee45a24816e8e2b27cd9f8896766aee6e3", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQRsB8A/3NrzTlMMjT0nUl7150IKUAUCXu0V/AAKCRAnUl7150IK\nUO1kAP9LqKrd/5NdsH8YI+EIStOJ312BoJrxE2kiSOyOG8PI+wEA2oWzDIzEMXsj\nfdsB6siTwWgV/a2qMQY02M/FBk9PRAQ=\n=oMR6\n-----END PGP SIGNATURE-----", "payload": "tree e88da6044421afa60d4a9c337eefe7c445546de2\nparent f315c35a77e40bd11ce81fedc0556be0f410bbf4\nauthor Christian Poveda <git@christianpoveda.xyz> 1592595964 -0500\ncommitter Christian Poveda <git@christianpoveda.xyz> 1592595964 -0500\n\nadd second message for livedrop errors\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e75fbaee45a24816e8e2b27cd9f8896766aee6e3", "html_url": "https://github.com/rust-lang/rust/commit/e75fbaee45a24816e8e2b27cd9f8896766aee6e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e75fbaee45a24816e8e2b27cd9f8896766aee6e3/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f315c35a77e40bd11ce81fedc0556be0f410bbf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f315c35a77e40bd11ce81fedc0556be0f410bbf4", "html_url": "https://github.com/rust-lang/rust/commit/f315c35a77e40bd11ce81fedc0556be0f410bbf4"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "7791ae7fa12aa9fea9892f5a5891040c3b519569", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e75fbaee45a24816e8e2b27cd9f8896766aee6e3/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e75fbaee45a24816e8e2b27cd9f8896766aee6e3/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=e75fbaee45a24816e8e2b27cd9f8896766aee6e3", "patch": "@@ -160,17 +160,20 @@ pub struct InlineAsm;\n impl NonConstOp for InlineAsm {}\n \n #[derive(Debug)]\n-pub struct LiveDrop;\n+pub struct LiveDrop(pub Option<Span>);\n impl NonConstOp for LiveDrop {\n     fn emit_error(&self, ccx: &ConstCx<'_, '_>, span: Span) {\n-        struct_span_err!(\n+        let mut diagnostic = struct_span_err!(\n             ccx.tcx.sess,\n             span,\n             E0493,\n             \"destructors cannot be evaluated at compile-time\"\n-        )\n-        .span_label(span, format!(\"{}s cannot evaluate destructors\", ccx.const_kind()))\n-        .emit();\n+        );\n+        diagnostic.span_label(span, format!(\"{}s cannot evaluate destructors\", ccx.const_kind()));\n+        if let Some(span) = self.0 {\n+            diagnostic.span_label(span, \"value is dropped here\");\n+        }\n+        diagnostic.emit();\n     }\n }\n "}, {"sha": "b17ee53bda81fa40c2dd343e26a5350d1e47e87b", "filename": "src/librustc_mir/transform/check_consts/post_drop_elaboration.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e75fbaee45a24816e8e2b27cd9f8896766aee6e3/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fpost_drop_elaboration.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e75fbaee45a24816e8e2b27cd9f8896766aee6e3/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fpost_drop_elaboration.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fpost_drop_elaboration.rs?ref=e75fbaee45a24816e8e2b27cd9f8896766aee6e3", "patch": "@@ -58,7 +58,7 @@ impl std::ops::Deref for CheckLiveDrops<'mir, 'tcx> {\n \n impl CheckLiveDrops<'mir, 'tcx> {\n     fn check_live_drop(&self, span: Span) {\n-        ops::non_const(self.ccx, ops::LiveDrop, span);\n+        ops::non_const(self.ccx, ops::LiveDrop(None), span);\n     }\n }\n "}, {"sha": "e7886c50b7a32e476db3f557aed7b90e0ee96edd", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e75fbaee45a24816e8e2b27cd9f8896766aee6e3/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e75fbaee45a24816e8e2b27cd9f8896766aee6e3/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=e75fbaee45a24816e8e2b27cd9f8896766aee6e3", "patch": "@@ -588,7 +588,10 @@ impl Visitor<'tcx> for Validator<'mir, 'tcx> {\n                 };\n \n                 if needs_drop {\n-                    self.check_op_spanned(ops::LiveDrop, err_span);\n+                    self.check_op_spanned(\n+                        ops::LiveDrop(Some(terminator.source_info.span)),\n+                        err_span,\n+                    );\n                 }\n             }\n "}]}