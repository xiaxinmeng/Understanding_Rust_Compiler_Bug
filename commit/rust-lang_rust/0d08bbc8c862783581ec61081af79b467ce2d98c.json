{"sha": "0d08bbc8c862783581ec61081af79b467ce2d98c", "node_id": "C_kwDOAAsO6NoAKDBkMDhiYmM4Yzg2Mjc4MzU4MWVjNjEwODFhZjc5YjQ2N2NlMmQ5OGM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-29T23:04:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-29T23:04:16Z"}, "message": "Rollup merge of #93459 - tavianator:dirent-copy-only-reclen, r=cuviper\n\nfs: Don't copy d_name from struct dirent\n\nThe dirent returned from readdir() is only guaranteed to be valid for\nd_reclen bytes on common platforms.  Since we copy the name separately\nanyway, we can copy everything except d_name into DirEntry::entry.\n\nFixes #93384.", "tree": {"sha": "b91a645af7d4a19a0331c4858efb988fdcee5ffa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b91a645af7d4a19a0331c4858efb988fdcee5ffa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d08bbc8c862783581ec61081af79b467ce2d98c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh9cfwCRBK7hj4Ov3rIwAAuYMIALDiWH4mUN2LD6udGsL+o+mQ\n0mBSiyp1fmXf+OUew5pNMw5PLEt0WYMLy0jQ0AocERkfxwh+8kQybHXLnc7lua24\n53p6li1wkgEFNB80j3K/MhEJpzLTrbICepDKoxKy1Ewap4oV2tcXWZCOGm0Qi3LW\n0YTKq5YmH118ST/+LTGf+j+9PSOrRAG1TIJZSG3mwrJlIqDQRppeB67R0Vb+mhTg\nJpf1MEXMEZ8J4f/N1uNHoC0olEwUPogOVylCMuSsyo83r95A4r50gjQ6aOm4tb1s\n3qiJz5pjk5vfqN9TB0g6hcTcIOjNZ8OOkGzbhfWeiOrG0LGu+V0e+w6qpRLP5fE=\n=P17U\n-----END PGP SIGNATURE-----\n", "payload": "tree b91a645af7d4a19a0331c4858efb988fdcee5ffa\nparent 605ffd6113dc49a9b10ea2b5aa6ca41a275bb9ad\nparent d0c8b29ec66e1ddf9a4f722969794f8ebc6f07e7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1643497456 +0100\ncommitter GitHub <noreply@github.com> 1643497456 +0100\n\nRollup merge of #93459 - tavianator:dirent-copy-only-reclen, r=cuviper\n\nfs: Don't copy d_name from struct dirent\n\nThe dirent returned from readdir() is only guaranteed to be valid for\nd_reclen bytes on common platforms.  Since we copy the name separately\nanyway, we can copy everything except d_name into DirEntry::entry.\n\nFixes #93384.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d08bbc8c862783581ec61081af79b467ce2d98c", "html_url": "https://github.com/rust-lang/rust/commit/0d08bbc8c862783581ec61081af79b467ce2d98c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d08bbc8c862783581ec61081af79b467ce2d98c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "605ffd6113dc49a9b10ea2b5aa6ca41a275bb9ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/605ffd6113dc49a9b10ea2b5aa6ca41a275bb9ad", "html_url": "https://github.com/rust-lang/rust/commit/605ffd6113dc49a9b10ea2b5aa6ca41a275bb9ad"}, {"sha": "d0c8b29ec66e1ddf9a4f722969794f8ebc6f07e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0c8b29ec66e1ddf9a4f722969794f8ebc6f07e7", "html_url": "https://github.com/rust-lang/rust/commit/d0c8b29ec66e1ddf9a4f722969794f8ebc6f07e7"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "16b8bf68242ef5bd1ebf9f781c283caf344162bf", "filename": "library/std/src/fs/tests.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0d08bbc8c862783581ec61081af79b467ce2d98c/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d08bbc8c862783581ec61081af79b467ce2d98c/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs?ref=0d08bbc8c862783581ec61081af79b467ce2d98c", "patch": "@@ -1504,3 +1504,19 @@ fn create_dir_long_paths() {\n     let path = Path::new(\"\");\n     assert_eq!(path.canonicalize().unwrap_err().kind(), crate::io::ErrorKind::NotFound);\n }\n+\n+/// Ensure ReadDir works on large directories.\n+/// Regression test for https://github.com/rust-lang/rust/issues/93384.\n+#[test]\n+fn read_large_dir() {\n+    let tmpdir = tmpdir();\n+\n+    let count = 32 * 1024;\n+    for i in 0..count {\n+        check!(fs::File::create(tmpdir.join(&i.to_string())));\n+    }\n+\n+    for entry in fs::read_dir(tmpdir.path()).unwrap() {\n+        entry.unwrap();\n+    }\n+}"}, {"sha": "65e000d9215a507a0ab4fedb04e48bc5ec6467c9", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0d08bbc8c862783581ec61081af79b467ce2d98c/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d08bbc8c862783581ec61081af79b467ce2d98c/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=0d08bbc8c862783581ec61081af79b467ce2d98c", "patch": "@@ -489,10 +489,18 @@ impl Iterator for ReadDir {\n                     };\n                 }\n \n+                // Only d_reclen bytes of *entry_ptr are valid, so we can't just copy the\n+                // whole thing (#93384).  Instead, copy everything except the name.\n+                let entry_bytes = entry_ptr as *const u8;\n+                let entry_name = ptr::addr_of!((*entry_ptr).d_name) as *const u8;\n+                let name_offset = entry_name.offset_from(entry_bytes) as usize;\n+                let mut entry: dirent64 = mem::zeroed();\n+                ptr::copy_nonoverlapping(entry_bytes, &mut entry as *mut _ as *mut u8, name_offset);\n+\n                 let ret = DirEntry {\n-                    entry: *entry_ptr,\n+                    entry,\n                     // d_name is guaranteed to be null-terminated.\n-                    name: CStr::from_ptr((*entry_ptr).d_name.as_ptr()).to_owned(),\n+                    name: CStr::from_ptr(entry_name as *const _).to_owned(),\n                     dir: Arc::clone(&self.inner),\n                 };\n                 if ret.name_bytes() != b\".\" && ret.name_bytes() != b\"..\" {"}]}