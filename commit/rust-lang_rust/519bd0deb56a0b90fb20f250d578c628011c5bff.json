{"sha": "519bd0deb56a0b90fb20f250d578c628011c5bff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOWJkMGRlYjU2YTBiOTBmYjIwZjI1MGQ1NzhjNjI4MDExYzViZmY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-31T10:44:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-31T10:44:52Z"}, "message": "Fix #2700", "tree": {"sha": "f9f1c1198ef8a504ebbe4912647f85d0ae027b9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9f1c1198ef8a504ebbe4912647f85d0ae027b9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/519bd0deb56a0b90fb20f250d578c628011c5bff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/519bd0deb56a0b90fb20f250d578c628011c5bff", "html_url": "https://github.com/rust-lang/rust/commit/519bd0deb56a0b90fb20f250d578c628011c5bff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/519bd0deb56a0b90fb20f250d578c628011c5bff/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98e20dac4edabeb0dd695110fdca29a6adc40019", "url": "https://api.github.com/repos/rust-lang/rust/commits/98e20dac4edabeb0dd695110fdca29a6adc40019", "html_url": "https://github.com/rust-lang/rust/commit/98e20dac4edabeb0dd695110fdca29a6adc40019"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "693ce05ed4acb21f7fc3fdcf16f9762b01a915e0", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/519bd0deb56a0b90fb20f250d578c628011c5bff/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/519bd0deb56a0b90fb20f250d578c628011c5bff/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=519bd0deb56a0b90fb20f250d578c628011c5bff", "patch": "@@ -70,7 +70,7 @@ export class Ctx {\n         await this.client.onReady();\n         for (const delay of [2, 4, 6, 8, 10, null]) {\n             try {\n-                return await this.client.sendRequest(method, param, token);\n+                return await (token ? this.client.sendRequest(method, param, token) : this.client.sendRequest(method, param));\n             } catch (e) {\n                 if (\n                     e.code === lc.ErrorCodes.ContentModified &&"}]}