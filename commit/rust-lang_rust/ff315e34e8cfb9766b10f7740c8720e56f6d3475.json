{"sha": "ff315e34e8cfb9766b10f7740c8720e56f6d3475", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMzE1ZTM0ZThjZmI5NzY2YjEwZjc3NDBjODcyMGU1NmY2ZDM0NzU=", "commit": {"author": {"name": "Jeffrey Griffin", "email": "git@geogriffin.com", "date": "2021-02-05T01:43:46Z"}, "committer": {"name": "Jeffrey Griffin", "email": "git@geogriffin.com", "date": "2021-02-05T08:52:19Z"}, "message": "improve error message for disallowed ptr-to-int casts in const eval", "tree": {"sha": "554d1b25e560dca725b1718e575cf70060505106", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/554d1b25e560dca725b1718e575cf70060505106"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff315e34e8cfb9766b10f7740c8720e56f6d3475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff315e34e8cfb9766b10f7740c8720e56f6d3475", "html_url": "https://github.com/rust-lang/rust/commit/ff315e34e8cfb9766b10f7740c8720e56f6d3475", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff315e34e8cfb9766b10f7740c8720e56f6d3475/comments", "author": null, "committer": null, "parents": [{"sha": "6a388dcfbb07b3ca3d4ad3fd3902ac7e3b11b5f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a388dcfbb07b3ca3d4ad3fd3902ac7e3b11b5f6", "html_url": "https://github.com/rust-lang/rust/commit/6a388dcfbb07b3ca3d4ad3fd3902ac7e3b11b5f6"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "88af9391cadfe3d9c3d69092a59cbc8e16959422", "filename": "compiler/rustc_mir/src/const_eval/error.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ff315e34e8cfb9766b10f7740c8720e56f6d3475/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff315e34e8cfb9766b10f7740c8720e56f6d3475/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Ferror.rs?ref=ff315e34e8cfb9766b10f7740c8720e56f6d3475", "patch": "@@ -16,6 +16,7 @@ use crate::interpret::{\n #[derive(Clone, Debug)]\n pub enum ConstEvalErrKind {\n     NeedsRfc(String),\n+    PtrToIntCast,\n     ConstAccessesStatic,\n     ModifiedGlobal,\n     AssertFailure(AssertKind<ConstInt>),\n@@ -39,6 +40,12 @@ impl fmt::Display for ConstEvalErrKind {\n             NeedsRfc(ref msg) => {\n                 write!(f, \"\\\"{}\\\" needs an rfc before being allowed inside constants\", msg)\n             }\n+            PtrToIntCast => {\n+                write!(\n+                    f,\n+                    \"cannot cast pointer to integer because it was not created by cast from integer\"\n+                )\n+            }\n             ConstAccessesStatic => write!(f, \"constant accesses static\"),\n             ModifiedGlobal => {\n                 write!(f, \"modifying a static's initial value from another static's initializer\")"}, {"sha": "f6b950c08c78e05a6bbc31d0e8ed8b492d0744ec", "filename": "compiler/rustc_mir/src/const_eval/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff315e34e8cfb9766b10f7740c8720e56f6d3475/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff315e34e8cfb9766b10f7740c8720e56f6d3475/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=ff315e34e8cfb9766b10f7740c8720e56f6d3475", "patch": "@@ -352,7 +352,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n     }\n \n     fn ptr_to_int(_mem: &Memory<'mir, 'tcx, Self>, _ptr: Pointer) -> InterpResult<'tcx, u64> {\n-        Err(ConstEvalErrKind::NeedsRfc(\"pointer-to-integer cast\".to_string()).into())\n+        Err(ConstEvalErrKind::PtrToIntCast.into())\n     }\n \n     fn binary_ptr_op("}, {"sha": "bf1e790b5dc29270a92c743ab2b92bc122a2a031", "filename": "src/test/ui/const-ptr/ptr_to_usize_cast.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ff315e34e8cfb9766b10f7740c8720e56f6d3475/src%2Ftest%2Fui%2Fconst-ptr%2Fptr_to_usize_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff315e34e8cfb9766b10f7740c8720e56f6d3475/src%2Ftest%2Fui%2Fconst-ptr%2Fptr_to_usize_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-ptr%2Fptr_to_usize_cast.rs?ref=ff315e34e8cfb9766b10f7740c8720e56f6d3475", "patch": "@@ -0,0 +1,13 @@\n+#![feature(const_raw_ptr_to_usize_cast)]\n+\n+fn main() {\n+    const OK: usize = unsafe { 0 as *const i32 as usize };\n+\n+    const _ERROR: usize = unsafe { &0 as *const i32 as usize };\n+    //~^ ERROR [const_err]\n+    //~| NOTE cannot cast pointer to integer because it was not created by cast from integer\n+    //~| NOTE\n+    //~| NOTE `#[deny(const_err)]` on by default\n+    //~| WARN this was previously accepted by the compiler but is being phased out\n+    //~| NOTE see issue #71800\n+}"}, {"sha": "48255860bb53fd1f0b5331866dbe70ea6544de4d", "filename": "src/test/ui/const-ptr/ptr_to_usize_cast.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ff315e34e8cfb9766b10f7740c8720e56f6d3475/src%2Ftest%2Fui%2Fconst-ptr%2Fptr_to_usize_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff315e34e8cfb9766b10f7740c8720e56f6d3475/src%2Ftest%2Fui%2Fconst-ptr%2Fptr_to_usize_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-ptr%2Fptr_to_usize_cast.stderr?ref=ff315e34e8cfb9766b10f7740c8720e56f6d3475", "patch": "@@ -0,0 +1,14 @@\n+error: any use of this value will cause an error\n+  --> $DIR/ptr_to_usize_cast.rs:6:36\n+   |\n+LL |     const _ERROR: usize = unsafe { &0 as *const i32 as usize };\n+   |     -------------------------------^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   |                                    |\n+   |                                    cannot cast pointer to integer because it was not created by cast from integer\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: aborting due to previous error\n+"}]}