{"sha": "162b5a347590a7dbc77d3281595b1bfaba98e3b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MmI1YTM0NzU5MGE3ZGJjNzdkMzI4MTU5NWIxYmZhYmE5OGUzYjE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-06-29T19:03:19Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-06-30T20:43:35Z"}, "message": "Fix error codes mixup", "tree": {"sha": "7893294c6ebbc9797cdf5ed12087e831c21df588", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7893294c6ebbc9797cdf5ed12087e831c21df588"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/162b5a347590a7dbc77d3281595b1bfaba98e3b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/162b5a347590a7dbc77d3281595b1bfaba98e3b1", "html_url": "https://github.com/rust-lang/rust/commit/162b5a347590a7dbc77d3281595b1bfaba98e3b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/162b5a347590a7dbc77d3281595b1bfaba98e3b1/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa3fa254768f1cfe51fc013a24383153fa2b924a", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa3fa254768f1cfe51fc013a24383153fa2b924a", "html_url": "https://github.com/rust-lang/rust/commit/aa3fa254768f1cfe51fc013a24383153fa2b924a"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "96643ae72abadc5c7beaade2ff465137743c0a17", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/162b5a347590a7dbc77d3281595b1bfaba98e3b1/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/162b5a347590a7dbc77d3281595b1bfaba98e3b1/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=162b5a347590a7dbc77d3281595b1bfaba98e3b1", "patch": "@@ -37,7 +37,7 @@ fn equate_intrinsic_type<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     match it.node {\n         hir::ForeignItemFn(..) => {}\n         _ => {\n-            struct_span_err!(tcx.sess, it.span, E0619,\n+            struct_span_err!(tcx.sess, it.span, E0622,\n                              \"intrinsic must be a function\")\n                 .span_label(it.span, \"expected a function\")\n                 .emit();"}, {"sha": "37f6f3753d7b4fea373fba03fb68c68b3323b797", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/162b5a347590a7dbc77d3281595b1bfaba98e3b1/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/162b5a347590a7dbc77d3281595b1bfaba98e3b1/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=162b5a347590a7dbc77d3281595b1bfaba98e3b1", "patch": "@@ -4666,7 +4666,6 @@ i_am_a_function();\n \"##,\n \n E0619: r##\"\n-<<<<<<< HEAD\n The type-checker needed to know the type of an expression, but that type had not\n yet been inferred.\n \n@@ -4727,12 +4726,12 @@ let x = &[1_usize, 2] as &[usize]; // ok!\n ```\n \"##,\n \n-E0621: r##\"\n+E0622: r##\"\n An intrinsic was declared without being a function.\n \n Erroneous code example:\n \n-```compile_fail,E0621\n+```compile_fail,E0622\n #![feature(intrinsics)]\n extern \"rust-intrinsic\" {\n     pub static breakpoint : unsafe extern \"rust-intrinsic\" fn();"}, {"sha": "a5a5ff7218dcfe26150499924ba76594dfe2fded", "filename": "src/test/compile-fail/E0619.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/162b5a347590a7dbc77d3281595b1bfaba98e3b1/src%2Ftest%2Fcompile-fail%2FE0619.rs", "raw_url": "https://github.com/rust-lang/rust/raw/162b5a347590a7dbc77d3281595b1bfaba98e3b1/src%2Ftest%2Fcompile-fail%2FE0619.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0619.rs?ref=162b5a347590a7dbc77d3281595b1bfaba98e3b1", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,9 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(intrinsics)]\n-extern \"rust-intrinsic\" {\n-    pub static breakpoint : unsafe extern \"rust-intrinsic\" fn();\n-    //~^ ERROR intrinsic must be a function [E0619]\n+fn main() {\n+    let x;\n+\n+    match x {\n+        (..) => {} //~ ERROR E0619\n+        _ => {}\n+    }\n }\n-fn main() { unsafe { breakpoint(); } }\n+"}, {"sha": "f2bde5b03648be1db5d6f97e97103f7a17911150", "filename": "src/test/compile-fail/E0622.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/162b5a347590a7dbc77d3281595b1bfaba98e3b1/src%2Ftest%2Fcompile-fail%2FE0622.rs", "raw_url": "https://github.com/rust-lang/rust/raw/162b5a347590a7dbc77d3281595b1bfaba98e3b1/src%2Ftest%2Fcompile-fail%2FE0622.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0622.rs?ref=162b5a347590a7dbc77d3281595b1bfaba98e3b1", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(intrinsics)]\n+extern \"rust-intrinsic\" {\n+    pub static breakpoint : unsafe extern \"rust-intrinsic\" fn();\n+    //~^ ERROR intrinsic must be a function [E0622]\n+}\n+fn main() { unsafe { breakpoint(); } }"}]}