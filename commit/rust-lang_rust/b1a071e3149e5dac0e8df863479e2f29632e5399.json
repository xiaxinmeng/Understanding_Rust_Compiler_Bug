{"sha": "b1a071e3149e5dac0e8df863479e2f29632e5399", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYTA3MWUzMTQ5ZTVkYWMwZThkZjg2MzQ3OWUyZjI5NjMyZTUzOTk=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-21T19:05:48Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-21T19:05:48Z"}, "message": "dlist: Remove bench tests for vec\n\nThese tests for ~[] performance don't really belong here, they were for\ncomparison.", "tree": {"sha": "9263b84711b0fdcbaf176756c6d74a1cd3f48376", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9263b84711b0fdcbaf176756c6d74a1cd3f48376"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1a071e3149e5dac0e8df863479e2f29632e5399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1a071e3149e5dac0e8df863479e2f29632e5399", "html_url": "https://github.com/rust-lang/rust/commit/b1a071e3149e5dac0e8df863479e2f29632e5399", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1a071e3149e5dac0e8df863479e2f29632e5399/comments", "author": null, "committer": null, "parents": [{"sha": "bfa9b43b711c4d5db78d46cb70a6f8951b177a8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfa9b43b711c4d5db78d46cb70a6f8951b177a8f", "html_url": "https://github.com/rust-lang/rust/commit/bfa9b43b711c4d5db78d46cb70a6f8951b177a8f"}], "stats": {"total": 38, "additions": 1, "deletions": 37}, "files": [{"sha": "a2436c9a42deb78eec295599c6960c29f871eb48", "filename": "src/libextra/dlist.rs", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/b1a071e3149e5dac0e8df863479e2f29632e5399/src%2Flibextra%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1a071e3149e5dac0e8df863479e2f29632e5399/src%2Flibextra%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdlist.rs?ref=b1a071e3149e5dac0e8df863479e2f29632e5399", "patch": "@@ -975,13 +975,6 @@ mod tests {\n             let _: DList<int> = v.iter().transform(|x| *x).collect();\n         }\n     }\n-    #[bench]\n-    fn bench_collect_into_vec(b: &mut test::BenchHarness) {\n-        let v = &[0, ..64];\n-        do b.iter {\n-            let _: ~[int] = v.iter().transform(|&x|x).collect();\n-        }\n-    }\n \n     #[bench]\n     fn bench_push_front(b: &mut test::BenchHarness) {\n@@ -990,14 +983,6 @@ mod tests {\n             m.push_front(0);\n         }\n     }\n-    #[bench]\n-    fn bench_push_front_vec_size10(b: &mut test::BenchHarness) {\n-        let mut m = ~[0, ..10];\n-        do b.iter {\n-            m.unshift(0);\n-            m.pop(); // to keep it fair, dont' grow the vec\n-        }\n-    }\n \n     #[bench]\n     fn bench_push_back(b: &mut test::BenchHarness) {\n@@ -1006,13 +991,7 @@ mod tests {\n             m.push_back(0);\n         }\n     }\n-    #[bench]\n-    fn bench_push_back_vec(b: &mut test::BenchHarness) {\n-        let mut m = ~[];\n-        do b.iter {\n-            m.push(0);\n-        }\n-    }\n+\n     #[bench]\n     fn bench_push_back_pop_back(b: &mut test::BenchHarness) {\n         let mut m = DList::new::<int>();\n@@ -1021,14 +1000,6 @@ mod tests {\n             m.pop_back();\n         }\n     }\n-    #[bench]\n-    fn bench_push_back_pop_back_vec(b: &mut test::BenchHarness) {\n-        let mut m = ~[];\n-        do b.iter {\n-            m.push(0);\n-            m.pop();\n-        }\n-    }\n \n     #[bench]\n     fn bench_push_front_pop_front(b: &mut test::BenchHarness) {\n@@ -1091,12 +1062,5 @@ mod tests {\n             assert!(m.mut_rev_iter().len_() == 128);\n         }\n     }\n-    #[bench]\n-    fn bench_iter_vec(b: &mut test::BenchHarness) {\n-        let v = &[0, ..128];\n-        do b.iter {\n-            for v.iter().advance |_| {}\n-        }\n-    }\n }\n "}]}