{"sha": "5fe0851548357bae39b01a5e3224bdc8da7f7aae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZTA4NTE1NDgzNTdiYWUzOWIwMWE1ZTMyMjRiZGM4ZGE3ZjdhYWU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-04T12:33:34Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-06T11:00:26Z"}, "message": "Allow more lints, mainly overflowing_literals for cases that only arose on 32-bit.", "tree": {"sha": "ce8ab35926319c7600955ef461e951f1d3db34d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce8ab35926319c7600955ef461e951f1d3db34d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fe0851548357bae39b01a5e3224bdc8da7f7aae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fe0851548357bae39b01a5e3224bdc8da7f7aae", "html_url": "https://github.com/rust-lang/rust/commit/5fe0851548357bae39b01a5e3224bdc8da7f7aae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fe0851548357bae39b01a5e3224bdc8da7f7aae/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc124e4d0b794c42eca355723c61422f59ecd4c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc124e4d0b794c42eca355723c61422f59ecd4c8", "html_url": "https://github.com/rust-lang/rust/commit/dc124e4d0b794c42eca355723c61422f59ecd4c8"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "5d6cc5f686e7fbfefab0aad3437f6c4d20be7bea", "filename": "src/test/ui/run-pass/array-slice-vec/box-of-array-of-drop-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fbox-of-array-of-drop-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fbox-of-array-of-drop-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fbox-of-array-of-drop-1.rs?ref=5fe0851548357bae39b01a5e3224bdc8da7f7aae", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(overflowing_literals)]\n \n // Test that we cleanup a fixed size Box<[D; k]> properly when D has a\n // destructor."}, {"sha": "d2dedc4602aaea020b8ec165c431ded13cdbeacd", "filename": "src/test/ui/run-pass/array-slice-vec/box-of-array-of-drop-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fbox-of-array-of-drop-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fbox-of-array-of-drop-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fbox-of-array-of-drop-2.rs?ref=5fe0851548357bae39b01a5e3224bdc8da7f7aae", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(overflowing_literals)]\n \n // Test that we cleanup dynamic sized Box<[D]> properly when D has a\n // destructor."}, {"sha": "dc3146a2b351760c5b9ed4ca849f8698066b3f7b", "filename": "src/test/ui/run-pass/array-slice-vec/nested-vec-3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fnested-vec-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fnested-vec-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fnested-vec-3.rs?ref=5fe0851548357bae39b01a5e3224bdc8da7f7aae", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(overflowing_literals)]\n \n // ignore-emscripten no threads support\n "}, {"sha": "4b6b529617fe265a81a66b2d182ce29b4682d0f5", "filename": "src/test/ui/run-pass/consts/const-fn-val.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-fn-val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-fn-val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-fn-val.rs?ref=5fe0851548357bae39b01a5e3224bdc8da7f7aae", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n #![allow(non_upper_case_globals)]\n+#![allow(overflowing_literals)]\n \n fn foo() -> isize {\n     return 0xca7f000d;"}, {"sha": "aec8a7075a51a5d5602d583159be3ea8d582f9f7", "filename": "src/test/ui/run-pass/deriving/deriving-hash.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-hash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-hash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-hash.rs?ref=5fe0851548357bae39b01a5e3224bdc8da7f7aae", "patch": "@@ -12,6 +12,7 @@\n #![allow(deprecated)]\n #![allow(non_camel_case_types)]\n #![allow(non_snake_case)]\n+#![allow(overflowing_literals)]\n \n use std::hash::{Hash, SipHasher, Hasher};\n use std::mem::size_of;"}, {"sha": "7ac91592d81d9511b6e45f3963f74381382b0f31", "filename": "src/test/ui/run-pass/simd/simd-target-feature-mixup.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-target-feature-mixup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-target-feature-mixup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-target-feature-mixup.rs?ref=5fe0851548357bae39b01a5e3224bdc8da7f7aae", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n #![allow(stable_features)]\n+#![allow(overflowing_literals)]\n \n // ignore-emscripten\n "}, {"sha": "55bf80138b979f144dcaf60ffa01123fa020d739", "filename": "src/test/ui/run-pass/structs-enums/enum-discrim-autosizing.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-discrim-autosizing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-discrim-autosizing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-discrim-autosizing.rs?ref=5fe0851548357bae39b01a5e3224bdc8da7f7aae", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(overflowing_literals)]\n+\n use std::mem::size_of;\n \n enum Ei8 {"}, {"sha": "6b38de6f6b38bd1540c65b49a1fe87685a8c805e", "filename": "src/test/ui/run-pass/structs-enums/enum-discrim-width-stuff.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-discrim-width-stuff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fe0851548357bae39b01a5e3224bdc8da7f7aae/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-discrim-width-stuff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-discrim-width-stuff.rs?ref=5fe0851548357bae39b01a5e3224bdc8da7f7aae", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(overflowing_literals)]\n+#![allow(dead_code)]\n+\n macro_rules! check {\n     ($m:ident, $t:ty, $v:expr) => {{\n         mod $m {"}]}