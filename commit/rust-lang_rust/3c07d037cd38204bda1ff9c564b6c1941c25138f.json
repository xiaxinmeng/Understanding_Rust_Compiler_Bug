{"sha": "3c07d037cd38204bda1ff9c564b6c1941c25138f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMDdkMDM3Y2QzODIwNGJkYTFmZjljNTY0YjZjMTk0MWMyNTEzOGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-14T23:37:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-14T23:37:48Z"}, "message": "auto merge of #4934 : nickdesaulniers/rust/issue4524cleanup, r=brson\n\nreview? @brson\r\nIssue #4524", "tree": {"sha": "ed3c158690080b922ec4d34836b7e15b76f118c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed3c158690080b922ec4d34836b7e15b76f118c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c07d037cd38204bda1ff9c564b6c1941c25138f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c07d037cd38204bda1ff9c564b6c1941c25138f", "html_url": "https://github.com/rust-lang/rust/commit/3c07d037cd38204bda1ff9c564b6c1941c25138f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c07d037cd38204bda1ff9c564b6c1941c25138f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03743ee449afb423d4a84f16976589bfd49acbf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/03743ee449afb423d4a84f16976589bfd49acbf6", "html_url": "https://github.com/rust-lang/rust/commit/03743ee449afb423d4a84f16976589bfd49acbf6"}, {"sha": "4699ac67c6b48331852f3960430a3c8cfcaf7b90", "url": "https://api.github.com/repos/rust-lang/rust/commits/4699ac67c6b48331852f3960430a3c8cfcaf7b90", "html_url": "https://github.com/rust-lang/rust/commit/4699ac67c6b48331852f3960430a3c8cfcaf7b90"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "9ec91d38515044109e9df2187b0d9dd22e6f4080", "filename": "src/libcore/hashmap.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3c07d037cd38204bda1ff9c564b6c1941c25138f/src%2Flibcore%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c07d037cd38204bda1ff9c564b6c1941c25138f/src%2Flibcore%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhashmap.rs?ref=3c07d037cd38204bda1ff9c564b6c1941c25138f", "patch": "@@ -159,7 +159,7 @@ pub mod linear {\n         pure fn value_for_bucket(&self, idx: uint) -> &self/V {\n             match self.buckets[idx] {\n                 Some(ref bkt) => &bkt.value,\n-                None => die!(~\"LinearMap::find: internal logic error\"),\n+                None => fail!(~\"LinearMap::find: internal logic error\"),\n             }\n         }\n \n@@ -373,7 +373,7 @@ pub mod linear {\n \n             let hash = k.hash_keyed(self.k0, self.k1) as uint;\n             let idx = match self.bucket_for_key_with_hash(hash, &k) {\n-                TableFull => die!(~\"Internal logic error\"),\n+                TableFull => fail!(~\"Internal logic error\"),\n                 FoundEntry(idx) => idx,\n                 FoundHole(idx) => {\n                     self.buckets[idx] = Some(Bucket{hash: hash, key: k,\n@@ -403,7 +403,7 @@ pub mod linear {\n \n             let hash = k.hash_keyed(self.k0, self.k1) as uint;\n             let idx = match self.bucket_for_key_with_hash(hash, &k) {\n-                TableFull => die!(~\"Internal logic error\"),\n+                TableFull => fail!(~\"Internal logic error\"),\n                 FoundEntry(idx) => idx,\n                 FoundHole(idx) => {\n                     let v = f(&k);"}, {"sha": "8a6a241d8706769d690511736d93c7f06aef382e", "filename": "src/libcore/os.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c07d037cd38204bda1ff9c564b6c1941c25138f/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c07d037cd38204bda1ff9c564b6c1941c25138f/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=3c07d037cd38204bda1ff9c564b6c1941c25138f", "patch": "@@ -849,7 +849,7 @@ pub fn last_os_error() -> ~str {\n             let err = strerror_r(errno() as c_int, &buf[0],\n                                  TMPBUF_SZ as size_t);\n             if err < 0 {\n-                die!(~\"strerror_r failure\");\n+                fail!(~\"strerror_r failure\");\n             }\n \n             str::raw::from_c_str(&buf[0])\n@@ -887,7 +887,7 @@ pub fn last_os_error() -> ~str {\n                                      &mut buf[0], TMPBUF_SZ as DWORD,\n                                      ptr::null());\n             if res == 0 {\n-                die!(fmt!(\"[%?] FormatMessage failure\", errno()));\n+                fail!(fmt!(\"[%?] FormatMessage failure\", errno()));\n             }\n \n             str::raw::from_c_str(&buf[0])"}, {"sha": "088afe4778e1687f092758df498f66f9a4b1f743", "filename": "src/libstd/json.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c07d037cd38204bda1ff9c564b6c1941c25138f/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c07d037cd38204bda1ff9c564b6c1941c25138f/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=3c07d037cd38204bda1ff9c564b6c1941c25138f", "patch": "@@ -1284,13 +1284,13 @@ mod tests {\n     // Should they be in their own crate?\n     pub pure fn check_equal_ptr<T : cmp::Eq> (given : &T, expected: &T) {\n         if !((given == expected) && (expected == given )) {\n-            die!(fmt!(\"given %?, expected %?\",given,expected));\n+            fail!(fmt!(\"given %?, expected %?\",given,expected));\n         }\n     }\n \n     pub pure fn check_equal<T : cmp::Eq> (given : T, expected: T) {\n         if !((given == expected) && (expected == given )) {\n-            die!(fmt!(\"given %?, expected %?\",given,expected));\n+            fail!(fmt!(\"given %?, expected %?\",given,expected));\n         }\n     }\n "}, {"sha": "2eae377b91af554698a47a14e0e94c7ef1ac687c", "filename": "src/libstd/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c07d037cd38204bda1ff9c564b6c1941c25138f/src%2Flibstd%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c07d037cd38204bda1ff9c564b6c1941c25138f/src%2Flibstd%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftest.rs?ref=3c07d037cd38204bda1ff9c564b6c1941c25138f", "patch": "@@ -143,7 +143,7 @@ pub fn test_main_static(args: &[~str], tests: &[TestDescAndFn]) {\n             TestDescAndFn { testfn: StaticBenchFn(f), desc: copy t.desc },\n \n             _ => {\n-                die! (~\"non-static tests passed to test::test_main_static\");\n+                fail!(~\"non-static tests passed to test::test_main_static\");\n             }\n         }\n     };"}, {"sha": "005908f86d87d269d791a8ac916c1b47b1245534", "filename": "src/test/compile-fail/borrowck-borrow-from-owned-ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c07d037cd38204bda1ff9c564b6c1941c25138f/src%2Ftest%2Fcompile-fail%2Fborrowck-borrow-from-owned-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c07d037cd38204bda1ff9c564b6c1941c25138f/src%2Ftest%2Fcompile-fail%2Fborrowck-borrow-from-owned-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-borrow-from-owned-ptr.rs?ref=3c07d037cd38204bda1ff9c564b6c1941c25138f", "patch": "@@ -18,7 +18,7 @@ struct Bar {\n   int2: int,\n }\n \n-fn make_foo() -> ~Foo { die!() }\n+fn make_foo() -> ~Foo { fail!() }\n \n fn borrow_same_field_twice_mut_mut() {\n     let mut foo = make_foo();"}, {"sha": "035e293bc36b6c141fa0037f1f982f1f191d0d50", "filename": "src/test/compile-fail/borrowck-borrow-from-stack-variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c07d037cd38204bda1ff9c564b6c1941c25138f/src%2Ftest%2Fcompile-fail%2Fborrowck-borrow-from-stack-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c07d037cd38204bda1ff9c564b6c1941c25138f/src%2Ftest%2Fcompile-fail%2Fborrowck-borrow-from-stack-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-borrow-from-stack-variable.rs?ref=3c07d037cd38204bda1ff9c564b6c1941c25138f", "patch": "@@ -18,7 +18,7 @@ struct Bar {\n   int2: int,\n }\n \n-fn make_foo() -> Foo { die!() }\n+fn make_foo() -> Foo { fail!() }\n \n fn borrow_same_field_twice_mut_mut() {\n     let mut foo = make_foo();"}]}