{"sha": "f4b9fdace5a85d14f0ff978ce08cef386d2d7da2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0YjlmZGFjZTVhODVkMTRmMGZmOTc4Y2UwOGNlZjM4NmQyZDdkYTI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-04-11T11:56:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-11T11:56:46Z"}, "message": "Rollup merge of #49781 - Robbepop:master, r=nikomatsakis\n\nadd regression test for #16223 (NLL): use of collaterally moved value\n\nAdds regression test for https://github.com/rust-lang/rust/issues/16223 which NLL fixes.\n\nThe current downside of this test is that it uses the `#![feature(box_patterns)]` and I haven't come up with a proper test that only uses the `#![feature(nll)]` - however, I don't know if this is even possible to test without `#![feature(box_syntax)]` or `#![feature(box_patterns)]`.", "tree": {"sha": "22b4ce87f9f086dbc8cb2512b5dcbb5c9e6678e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22b4ce87f9f086dbc8cb2512b5dcbb5c9e6678e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4b9fdace5a85d14f0ff978ce08cef386d2d7da2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJazff+CRBK7hj4Ov3rIwAAdHIIAJ3qBUDJKRk3mWruYCb0/BVl\n782d2vt3KcJixAdTZLmJ/Z2H3E6k4wVlU09n8fh61NbRl/gZaCrwZG4htogPfHoX\nqFLjgLz5LVfgMn+fAC13dFB4DOjJI2SwIj8X+WwK4VDbaig9hm6KpopijrIsuwXJ\n1LVvyLn49PXzJvmkbBfjuEHxDnPlz1pVhZfKdgYbR7nbJh/NIH52K8mUbwJks9ll\nlVyVIsGHV5DW1N5QqMAyrbosCtHGagtQEaL9svyBo9JzFLY9qllX4mkqO9m3KhP8\naRo9eFeyvWBpS5BI9TwWRyneqvTHqsXXUXTFLMrJA3VJ+KjeueAayRRQvRe/wc4=\n=MRLf\n-----END PGP SIGNATURE-----\n", "payload": "tree 22b4ce87f9f086dbc8cb2512b5dcbb5c9e6678e1\nparent 1bdb9a5cfaf5a70a48a08c195f64c09742cfb78c\nparent f62c210d9012f45343bbe6148f897f77fbe50aa1\nauthor kennytm <kennytm@gmail.com> 1523447806 +0800\ncommitter GitHub <noreply@github.com> 1523447806 +0800\n\nRollup merge of #49781 - Robbepop:master, r=nikomatsakis\n\nadd regression test for #16223 (NLL): use of collaterally moved value\n\nAdds regression test for https://github.com/rust-lang/rust/issues/16223 which NLL fixes.\n\nThe current downside of this test is that it uses the `#![feature(box_patterns)]` and I haven't come up with a proper test that only uses the `#![feature(nll)]` - however, I don't know if this is even possible to test without `#![feature(box_syntax)]` or `#![feature(box_patterns)]`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4b9fdace5a85d14f0ff978ce08cef386d2d7da2", "html_url": "https://github.com/rust-lang/rust/commit/f4b9fdace5a85d14f0ff978ce08cef386d2d7da2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4b9fdace5a85d14f0ff978ce08cef386d2d7da2/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bdb9a5cfaf5a70a48a08c195f64c09742cfb78c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bdb9a5cfaf5a70a48a08c195f64c09742cfb78c", "html_url": "https://github.com/rust-lang/rust/commit/1bdb9a5cfaf5a70a48a08c195f64c09742cfb78c"}, {"sha": "f62c210d9012f45343bbe6148f897f77fbe50aa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f62c210d9012f45343bbe6148f897f77fbe50aa1", "html_url": "https://github.com/rust-lang/rust/commit/f62c210d9012f45343bbe6148f897f77fbe50aa1"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "64fc3df30b98c3e787a6698889dc968262eb7ccb", "filename": "src/test/ui/nll/issue-16223.rs", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/f4b9fdace5a85d14f0ff978ce08cef386d2d7da2/src%2Ftest%2Fui%2Fnll%2Fissue-16223.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4b9fdace5a85d14f0ff978ce08cef386d2d7da2/src%2Ftest%2Fui%2Fnll%2Fissue-16223.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-16223.rs?ref=f4b9fdace5a85d14f0ff978ce08cef386d2d7da2", "patch": "@@ -0,0 +1,63 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for #16223: without NLL the `if let` construct together with\n+// the nested box-structure of `Root` causes an unwanted collateral move.\n+\n+// The exact error prevented here is:\n+//\n+// error[E0382]: use of collaterally moved value: `(root.boxed.rhs as SomeVariant::B).0`\n+//   --> src/main.rs:55:29\n+//    |\n+// 56 |         lhs: SomeVariant::A(a),\n+//    |                             - value moved here\n+// 57 |         rhs: SomeVariant::B(b),\n+//    |                             ^ value used here after move\n+//    |\n+//    = note: move occurs because the value has type `A`, which does not implement the `Copy` trait\n+\n+// must-compile-successfully\n+\n+#![feature(nll)]\n+#![feature(box_patterns)]\n+\n+struct Root {\n+    boxed: Box<SetOfVariants>,\n+}\n+\n+struct SetOfVariants {\n+    lhs: SomeVariant,\n+    rhs: SomeVariant,\n+}\n+\n+enum SomeVariant {\n+    A(A),\n+    B(B),\n+}\n+\n+struct A(String);\n+struct B(String);\n+\n+fn main() {\n+    let root = Root {\n+        boxed: Box::new(SetOfVariants {\n+            lhs: SomeVariant::A(A(String::from(\"This is A\"))),\n+            rhs: SomeVariant::B(B(String::from(\"This is B\"))),\n+        }),\n+    };\n+    if let box SetOfVariants {\n+        lhs: SomeVariant::A(a),\n+        rhs: SomeVariant::B(b),\n+    } = root.boxed\n+    {\n+        println!(\"a = {}\", a.0);\n+        println!(\"b = {}\", b.0);\n+    }\n+}"}]}