{"sha": "d5b69d4670dc5c1e3a095b1112f9496cd84462ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1YjY5ZDQ2NzBkYzVjMWUzYTA5NWIxMTEyZjk0OTZjZDg0NDYyYWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-02T00:06:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-02T00:06:16Z"}, "message": "Auto merge of #45306 - whitequark:ref_slice, r=alexcrichton\n\nBring back slice::ref_slice as slice::from_ref.\n\nThese functions were deprecated and removed in 1.5, but such simple\nfunctionality shouldn't require using unsafe code, and it isn't\ncluttering libstd too much.\n\nThe original removal was quite contentious (see #27774), since then\nwe've had precedent for including such nuggets of functionality (see rust-lang/rfcs#1789),\nand @nikomatsakis has provided a lot of use cases in https://github.com/rust-lang/rfcs/pull/1789#issuecomment-314640034.\nHence this PR.\n\nI'm not too sure what to do with stability, feel free to correct me.\nIt seems pointless to go through stabilization for these functions though.\n\ncc @aturon", "tree": {"sha": "14b237e8b87e303d7d08b9bff996804db3ce4aa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14b237e8b87e303d7d08b9bff996804db3ce4aa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5b69d4670dc5c1e3a095b1112f9496cd84462ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5b69d4670dc5c1e3a095b1112f9496cd84462ab", "html_url": "https://github.com/rust-lang/rust/commit/d5b69d4670dc5c1e3a095b1112f9496cd84462ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5b69d4670dc5c1e3a095b1112f9496cd84462ab/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2be4cc040211a85b17f21e813ff62351ae4de642", "url": "https://api.github.com/repos/rust-lang/rust/commits/2be4cc040211a85b17f21e813ff62351ae4de642", "html_url": "https://github.com/rust-lang/rust/commit/2be4cc040211a85b17f21e813ff62351ae4de642"}, {"sha": "1cc88be2ebc67e1f0e7ff57c12dec45ef9abc2ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cc88be2ebc67e1f0e7ff57c12dec45ef9abc2ae", "html_url": "https://github.com/rust-lang/rust/commit/1cc88be2ebc67e1f0e7ff57c12dec45ef9abc2ae"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "f654a6b5ba4713f0ac01637b99f21cc3499180ef", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d5b69d4670dc5c1e3a095b1112f9496cd84462ab/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b69d4670dc5c1e3a095b1112f9496cd84462ab/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=d5b69d4670dc5c1e3a095b1112f9496cd84462ab", "patch": "@@ -93,6 +93,7 @@\n #![feature(dropck_eyepatch)]\n #![feature(exact_size_is_empty)]\n #![feature(fmt_internals)]\n+#![feature(from_ref)]\n #![feature(fundamental)]\n #![feature(fused)]\n #![feature(generic_param_attrs)]"}, {"sha": "0c5fec2cf74994379e343a3ac649725b89a257ed", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d5b69d4670dc5c1e3a095b1112f9496cd84462ab/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b69d4670dc5c1e3a095b1112f9496cd84462ab/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=d5b69d4670dc5c1e3a095b1112f9496cd84462ab", "patch": "@@ -119,6 +119,8 @@ pub use core::slice::{SplitN, RSplitN, SplitNMut, RSplitNMut};\n pub use core::slice::{RSplit, RSplitMut};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::slice::{from_raw_parts, from_raw_parts_mut};\n+#[unstable(feature = \"from_ref\", issue = \"45703\")]\n+pub use core::slice::{from_ref, from_ref_mut};\n #[unstable(feature = \"slice_get_slice\", issue = \"35729\")]\n pub use core::slice::SliceIndex;\n "}, {"sha": "57e5ae28664e0ff2aa0841f9f29516cd41effcbe", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d5b69d4670dc5c1e3a095b1112f9496cd84462ab/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b69d4670dc5c1e3a095b1112f9496cd84462ab/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=d5b69d4670dc5c1e3a095b1112f9496cd84462ab", "patch": "@@ -2450,6 +2450,22 @@ pub unsafe fn from_raw_parts_mut<'a, T>(p: *mut T, len: usize) -> &'a mut [T] {\n     mem::transmute(Repr { data: p, len: len })\n }\n \n+/// Converts a reference to T into a slice of length 1 (without copying).\n+#[unstable(feature = \"from_ref\", issue = \"45703\")]\n+pub fn from_ref<T>(s: &T) -> &[T] {\n+    unsafe {\n+        from_raw_parts(s, 1)\n+    }\n+}\n+\n+/// Converts a reference to T into a slice of length 1 (without copying).\n+#[unstable(feature = \"from_ref\", issue = \"45703\")]\n+pub fn from_ref_mut<T>(s: &mut T) -> &mut [T] {\n+    unsafe {\n+        from_raw_parts_mut(s, 1)\n+    }\n+}\n+\n // This function is public only because there is no other way to unit test heapsort.\n #[unstable(feature = \"sort_internals\", reason = \"internal to sort module\", issue = \"0\")]\n #[doc(hidden)]"}]}