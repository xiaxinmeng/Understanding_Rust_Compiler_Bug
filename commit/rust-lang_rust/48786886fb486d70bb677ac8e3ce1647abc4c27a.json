{"sha": "48786886fb486d70bb677ac8e3ce1647abc4c27a", "node_id": "C_kwDOAAsO6NoAKDQ4Nzg2ODg2ZmI0ODZkNzBiYjY3N2FjOGUzY2UxNjQ3YWJjNGMyN2E", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-28T13:58:14Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-29T10:31:01Z"}, "message": "Visit bodies in RPO for const-prop.", "tree": {"sha": "fc9cabd5aa6188a048c67dd6e3bc56dcb1351866", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc9cabd5aa6188a048c67dd6e3bc56dcb1351866"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48786886fb486d70bb677ac8e3ce1647abc4c27a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48786886fb486d70bb677ac8e3ce1647abc4c27a", "html_url": "https://github.com/rust-lang/rust/commit/48786886fb486d70bb677ac8e3ce1647abc4c27a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48786886fb486d70bb677ac8e3ce1647abc4c27a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc4d1e581e33c5563126bfc5b5eec57e479e0a9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc4d1e581e33c5563126bfc5b5eec57e479e0a9c", "html_url": "https://github.com/rust-lang/rust/commit/cc4d1e581e33c5563126bfc5b5eec57e479e0a9c"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "39e26e4a8e44f87919dfc2a33c067c1a1d960010", "filename": "compiler/rustc_mir_transform/src/const_prop.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/48786886fb486d70bb677ac8e3ce1647abc4c27a/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48786886fb486d70bb677ac8e3ce1647abc4c27a/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs?ref=48786886fb486d70bb677ac8e3ce1647abc4c27a", "patch": "@@ -103,7 +103,14 @@ impl<'tcx> MirPass<'tcx> for ConstProp {\n         // That would require a uniform one-def no-mutation analysis\n         // and RPO (or recursing when needing the value of a local).\n         let mut optimization_finder = ConstPropagator::new(body, dummy_body, tcx);\n-        optimization_finder.visit_body(body);\n+\n+        // Traverse the body in reverse post-order, to ensure that `FullConstProp` locals are\n+        // assigned before being read.\n+        let postorder = body.basic_blocks.postorder().to_vec();\n+        for bb in postorder.into_iter().rev() {\n+            let data = &mut body.basic_blocks.as_mut_preserves_cfg()[bb];\n+            optimization_finder.visit_basic_block_data(bb, data);\n+        }\n \n         trace!(\"ConstProp done for {:?}\", def_id);\n     }\n@@ -790,12 +797,6 @@ impl<'tcx> MutVisitor<'tcx> for ConstPropagator<'_, 'tcx> {\n         self.tcx\n     }\n \n-    fn visit_body(&mut self, body: &mut Body<'tcx>) {\n-        for (bb, data) in body.basic_blocks.as_mut_preserves_cfg().iter_enumerated_mut() {\n-            self.visit_basic_block_data(bb, data);\n-        }\n-    }\n-\n     fn visit_operand(&mut self, operand: &mut Operand<'tcx>, location: Location) {\n         self.super_operand(operand, location);\n "}]}