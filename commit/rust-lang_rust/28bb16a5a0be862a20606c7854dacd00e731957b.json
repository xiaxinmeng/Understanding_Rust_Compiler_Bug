{"sha": "28bb16a5a0be862a20606c7854dacd00e731957b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YmIxNmE1YTBiZTg2MmEyMDYwNmM3ODU0ZGFjZDAwZTczMTk1N2I=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-01-30T14:14:33Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-01-30T14:14:33Z"}, "message": "add a support for immovable generators", "tree": {"sha": "1157b01033ea6277e3ff907bac0e987d0fb57406", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1157b01033ea6277e3ff907bac0e987d0fb57406"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28bb16a5a0be862a20606c7854dacd00e731957b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28bb16a5a0be862a20606c7854dacd00e731957b", "html_url": "https://github.com/rust-lang/rust/commit/28bb16a5a0be862a20606c7854dacd00e731957b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28bb16a5a0be862a20606c7854dacd00e731957b/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d63490d8573eca400260f836ae6a75555620b4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d63490d8573eca400260f836ae6a75555620b4f", "html_url": "https://github.com/rust-lang/rust/commit/7d63490d8573eca400260f836ae6a75555620b4f"}], "stats": {"total": 55, "additions": 47, "deletions": 8}, "files": [{"sha": "1d8641339f033a814b5e6a1f36db9ccc5b37b725", "filename": "src/closures.rs", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/28bb16a5a0be862a20606c7854dacd00e731957b/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28bb16a5a0be862a20606c7854dacd00e731957b/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=28bb16a5a0be862a20606c7854dacd00e731957b", "patch": "@@ -33,6 +33,7 @@ use utils::{last_line_width, left_most_sub_expr, stmt_expr};\n \n pub fn rewrite_closure(\n     capture: ast::CaptureBy,\n+    movability: ast::Movability,\n     fn_decl: &ast::FnDecl,\n     body: &ast::Expr,\n     span: Span,\n@@ -42,7 +43,7 @@ pub fn rewrite_closure(\n     debug!(\"rewrite_closure {:?}\", body);\n \n     let (prefix, extra_offset) =\n-        rewrite_closure_fn_decl(capture, fn_decl, body, span, context, shape)?;\n+        rewrite_closure_fn_decl(capture, movability, fn_decl, body, span, context, shape)?;\n     // 1 = space between `|...|` and body.\n     let body_shape = shape.offset_left(extra_offset)?;\n \n@@ -194,6 +195,7 @@ fn rewrite_closure_block(\n // Return type is (prefix, extra_offset)\n fn rewrite_closure_fn_decl(\n     capture: ast::CaptureBy,\n+    movability: ast::Movability,\n     fn_decl: &ast::FnDecl,\n     body: &ast::Expr,\n     span: Span,\n@@ -205,9 +207,17 @@ fn rewrite_closure_fn_decl(\n     } else {\n         \"\"\n     };\n+\n+    let immovable = if movability == ast::Movability::Static {\n+        \"static \"\n+    } else {\n+        \"\"\n+    };\n     // 4 = \"|| {\".len(), which is overconservative when the closure consists of\n     // a single expression.\n-    let nested_shape = shape.shrink_left(mover.len())?.sub_width(4)?;\n+    let nested_shape = shape\n+        .shrink_left(mover.len() + immovable.len())?\n+        .sub_width(4)?;\n \n     // 1 = |\n     let argument_offset = nested_shape.indent + 1;\n@@ -254,7 +264,7 @@ fn rewrite_closure_fn_decl(\n         config: context.config,\n     };\n     let list_str = write_list(&item_vec, &fmt)?;\n-    let mut prefix = format!(\"{}|{}|\", mover, list_str);\n+    let mut prefix = format!(\"{}{}|{}|\", immovable, mover, list_str);\n \n     if !ret_str.is_empty() {\n         if prefix.contains('\\n') {\n@@ -278,7 +288,7 @@ pub fn rewrite_last_closure(\n     expr: &ast::Expr,\n     shape: Shape,\n ) -> Option<String> {\n-    if let ast::ExprKind::Closure(capture, _, ref fn_decl, ref body, _) = expr.node {\n+    if let ast::ExprKind::Closure(capture, movability, ref fn_decl, ref body, _) = expr.node {\n         let body = match body.node {\n             ast::ExprKind::Block(ref block)\n                 if !is_unsafe_block(block) && is_simple_block(block, context.codemap) =>\n@@ -287,8 +297,15 @@ pub fn rewrite_last_closure(\n             }\n             _ => body,\n         };\n-        let (prefix, extra_offset) =\n-            rewrite_closure_fn_decl(capture, fn_decl, body, expr.span, context, shape)?;\n+        let (prefix, extra_offset) = rewrite_closure_fn_decl(\n+            capture,\n+            movability,\n+            fn_decl,\n+            body,\n+            expr.span,\n+            context,\n+            shape,\n+        )?;\n         // If the closure goes multi line before its body, do not overflow the closure.\n         if prefix.contains('\\n') {\n             return None;"}, {"sha": "e5c29e1c5106134bcef65f3c4327b2abb21c49e4", "filename": "src/expr.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/28bb16a5a0be862a20606c7854dacd00e731957b/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28bb16a5a0be862a20606c7854dacd00e731957b/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=28bb16a5a0be862a20606c7854dacd00e731957b", "patch": "@@ -159,8 +159,16 @@ pub fn format_expr(\n         } else {\n             Some(\"yield\".to_string())\n         },\n-        ast::ExprKind::Closure(capture, _, ref fn_decl, ref body, _) => {\n-            closures::rewrite_closure(capture, fn_decl, body, expr.span, context, shape)\n+        ast::ExprKind::Closure(capture, movability, ref fn_decl, ref body, _) => {\n+            closures::rewrite_closure(\n+                capture,\n+                movability,\n+                fn_decl,\n+                body,\n+                expr.span,\n+                context,\n+                shape,\n+            )\n         }\n         ast::ExprKind::Try(..)\n         | ast::ExprKind::Field(..)"}, {"sha": "c57a1e14483492ea7326bec1500d0cdc11d1d4f1", "filename": "tests/source/immovable_generators.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/28bb16a5a0be862a20606c7854dacd00e731957b/tests%2Fsource%2Fimmovable_generators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28bb16a5a0be862a20606c7854dacd00e731957b/tests%2Fsource%2Fimmovable_generators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimmovable_generators.rs?ref=28bb16a5a0be862a20606c7854dacd00e731957b", "patch": "@@ -0,0 +1,7 @@\n+#![feature(generators)]\n+\n+unsafe fn foo() {\n+    let mut ga = static || { \n+        yield 1;\n+    };\n+}"}, {"sha": "0bf7a2d91ba153f2c3dca842467cfee491e8dd61", "filename": "tests/target/immovable_generators.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/28bb16a5a0be862a20606c7854dacd00e731957b/tests%2Ftarget%2Fimmovable_generators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28bb16a5a0be862a20606c7854dacd00e731957b/tests%2Ftarget%2Fimmovable_generators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimmovable_generators.rs?ref=28bb16a5a0be862a20606c7854dacd00e731957b", "patch": "@@ -0,0 +1,7 @@\n+#![feature(generators)]\n+\n+unsafe fn foo() {\n+    let mut ga = static || {\n+        yield 1;\n+    };\n+}"}]}