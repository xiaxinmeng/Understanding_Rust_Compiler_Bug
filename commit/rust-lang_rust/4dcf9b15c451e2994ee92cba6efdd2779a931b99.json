{"sha": "4dcf9b15c451e2994ee92cba6efdd2779a931b99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkY2Y5YjE1YzQ1MWUyOTk0ZWU5MmNiYTZlZmRkMjc3OWE5MzFiOTk=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-06-30T11:57:34Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-10T21:12:08Z"}, "message": "hygiene: Remove some unused impls", "tree": {"sha": "07a55c65e486dfa2b27732968a1f3f7b59ab9c82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07a55c65e486dfa2b27732968a1f3f7b59ab9c82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dcf9b15c451e2994ee92cba6efdd2779a931b99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dcf9b15c451e2994ee92cba6efdd2779a931b99", "html_url": "https://github.com/rust-lang/rust/commit/4dcf9b15c451e2994ee92cba6efdd2779a931b99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dcf9b15c451e2994ee92cba6efdd2779a931b99/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eafaae510a71a76eedcc2909e7c908bd49d5c46", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eafaae510a71a76eedcc2909e7c908bd49d5c46", "html_url": "https://github.com/rust-lang/rust/commit/3eafaae510a71a76eedcc2909e7c908bd49d5c46"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "67dcdabe701682ab0dac1e4caa87cce6da4b0585", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4dcf9b15c451e2994ee92cba6efdd2779a931b99/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dcf9b15c451e2994ee92cba6efdd2779a931b99/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=4dcf9b15c451e2994ee92cba6efdd2779a931b99", "patch": "@@ -36,10 +36,10 @@ use rustc_data_structures::sync::Lrc;\n use std::fmt;\n \n /// A SyntaxContext represents a chain of macro expansions (represented by marks).\n-#[derive(Clone, Copy, PartialEq, Eq, Default, PartialOrd, Ord, Hash)]\n+#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct SyntaxContext(u32);\n \n-#[derive(Copy, Clone, Debug)]\n+#[derive(Debug)]\n struct SyntaxContextData {\n     outer_mark: Mark,\n     transparency: Transparency,\n@@ -53,10 +53,10 @@ struct SyntaxContextData {\n }\n \n /// A mark is a unique ID associated with a macro expansion.\n-#[derive(Copy, Clone, PartialEq, Eq, Hash, Debug, RustcEncodable, RustcDecodable)]\n+#[derive(Clone, Copy, PartialEq, Eq, Hash, Debug)]\n pub struct Mark(u32);\n \n-#[derive(Clone, Debug)]\n+#[derive(Debug)]\n struct MarkData {\n     parent: Mark,\n     expn_info: Option<ExpnInfo>,\n@@ -614,7 +614,7 @@ impl fmt::Debug for SyntaxContext {\n }\n \n /// Extra information for tracking spans of macro and syntax sugar expansion\n-#[derive(Clone, Hash, Debug, RustcEncodable, RustcDecodable)]\n+#[derive(Clone, Debug, RustcEncodable, RustcDecodable)]\n pub struct ExpnInfo {\n     // --- The part unique to each expansion.\n     /// The location of the actual macro invocation or syntax sugar , e.g.\n@@ -676,7 +676,7 @@ impl ExpnInfo {\n }\n \n /// The source of expansion.\n-#[derive(Clone, Hash, Debug, PartialEq, Eq, RustcEncodable, RustcDecodable)]\n+#[derive(Clone, Debug, RustcEncodable, RustcDecodable)]\n pub enum ExpnKind {\n     /// e.g., #[derive(...)] <item>\n     MacroAttribute(Symbol),\n@@ -724,7 +724,7 @@ impl MacroKind {\n }\n \n /// The kind of compiler desugaring.\n-#[derive(Clone, Copy, Hash, Debug, PartialEq, Eq, RustcEncodable, RustcDecodable)]\n+#[derive(Clone, Copy, PartialEq, Debug, RustcEncodable, RustcDecodable)]\n pub enum DesugaringKind {\n     /// We desugar `if c { i } else { e }` to `match $ExprKind::Use(c) { true => i, _ => e }`.\n     /// However, we do not want to blame `c` for unreachability but rather say that `i`"}]}