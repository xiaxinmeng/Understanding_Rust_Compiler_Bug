{"sha": "a1478b760431c8327181cd481ae2c100c4d7e2f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNDc4Yjc2MDQzMWM4MzI3MTgxY2Q0ODFhZTJjMTAwYzRkN2UyZjE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-06T14:37:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-06T14:37:38Z"}, "message": "Rollup merge of #68691 - nnethercote:rm-RefCell-from-ObligationForest, r=nikomatsakis\n\nRemove `RefCell` usage from `ObligationForest`.\n\nIt's not needed.\n\nThis doesn't affect performance, it just simplifies the code a little.\n\nr? @nikomatsakis", "tree": {"sha": "ba2e3bb44637ec0b8625ef721d7b8d8eafbd1746", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba2e3bb44637ec0b8625ef721d7b8d8eafbd1746"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1478b760431c8327181cd481ae2c100c4d7e2f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJePCSyCRBK7hj4Ov3rIwAAdHIIALLBVQdLBID0yEz0ynNECeBo\nxwTLdk5FEVUMNUliodYCVITdDPxWeZ0OjfYbJnkPFX0S8muiZk3WLD0pO8CByAIH\nOcxBl7SmeYkMlk1SoqPPA2WtRECIlGoELskiduA4tAt3ECIy1ompAoQX7/9odVwo\neuM2c/d5UESUEcFdsAM+MaxOCz5XDkOsU8T58U7ege2GOZ4CSL10/xf/8PzbeCmB\nvswOM/KoxiijTL9Jqoiw4v/Okv8Ob0O1MdqkgJ8jjJO13zsCFapvfLfpGx0t+HUD\nvVUSxTKCLrZh6AwiEDu8q5fKbqNpK2DWFbQQY/sQGkl0Tlg1EoE3+xa4Q2w2Jqg=\n=F2Z2\n-----END PGP SIGNATURE-----\n", "payload": "tree ba2e3bb44637ec0b8625ef721d7b8d8eafbd1746\nparent 1f8df2508f2772d83011f0f651de86181123e519\nparent 6ad725e9f09f8ac1e577460ce31bc2928fe3531f\nauthor Dylan DPC <dylan.dpc@gmail.com> 1580999858 +0100\ncommitter GitHub <noreply@github.com> 1580999858 +0100\n\nRollup merge of #68691 - nnethercote:rm-RefCell-from-ObligationForest, r=nikomatsakis\n\nRemove `RefCell` usage from `ObligationForest`.\n\nIt's not needed.\n\nThis doesn't affect performance, it just simplifies the code a little.\n\nr? @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1478b760431c8327181cd481ae2c100c4d7e2f1", "html_url": "https://github.com/rust-lang/rust/commit/a1478b760431c8327181cd481ae2c100c4d7e2f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1478b760431c8327181cd481ae2c100c4d7e2f1/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f8df2508f2772d83011f0f651de86181123e519", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f8df2508f2772d83011f0f651de86181123e519", "html_url": "https://github.com/rust-lang/rust/commit/1f8df2508f2772d83011f0f651de86181123e519"}, {"sha": "6ad725e9f09f8ac1e577460ce31bc2928fe3531f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ad725e9f09f8ac1e577460ce31bc2928fe3531f", "html_url": "https://github.com/rust-lang/rust/commit/6ad725e9f09f8ac1e577460ce31bc2928fe3531f"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "0384776e9fbc9740fb3c55c664f0690d502b77de", "filename": "src/librustc_data_structures/obligation_forest/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a1478b760431c8327181cd481ae2c100c4d7e2f1/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1478b760431c8327181cd481ae2c100c4d7e2f1/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs?ref=a1478b760431c8327181cd481ae2c100c4d7e2f1", "patch": "@@ -74,7 +74,7 @@\n \n use crate::fx::{FxHashMap, FxHashSet};\n \n-use std::cell::{Cell, RefCell};\n+use std::cell::Cell;\n use std::collections::hash_map::Entry;\n use std::fmt::Debug;\n use std::hash;\n@@ -146,7 +146,7 @@ pub struct ObligationForest<O: ForestObligation> {\n     active_cache: FxHashMap<O::Predicate, usize>,\n \n     /// A vector reused in compress(), to avoid allocating new vectors.\n-    node_rewrites: RefCell<Vec<usize>>,\n+    node_rewrites: Vec<usize>,\n \n     obligation_tree_id_generator: ObligationTreeIdGenerator,\n \n@@ -285,7 +285,7 @@ impl<O: ForestObligation> ObligationForest<O> {\n             nodes: vec![],\n             done_cache: Default::default(),\n             active_cache: Default::default(),\n-            node_rewrites: RefCell::new(vec![]),\n+            node_rewrites: vec![],\n             obligation_tree_id_generator: (0..).map(ObligationTreeId),\n             error_cache: Default::default(),\n         }\n@@ -590,7 +590,7 @@ impl<O: ForestObligation> ObligationForest<O> {\n     #[inline(never)]\n     fn compress(&mut self, do_completed: DoCompleted) -> Option<Vec<O>> {\n         let orig_nodes_len = self.nodes.len();\n-        let mut node_rewrites: Vec<_> = self.node_rewrites.replace(vec![]);\n+        let mut node_rewrites: Vec<_> = std::mem::take(&mut self.node_rewrites);\n         debug_assert!(node_rewrites.is_empty());\n         node_rewrites.extend(0..orig_nodes_len);\n         let mut dead_nodes = 0;\n@@ -651,7 +651,7 @@ impl<O: ForestObligation> ObligationForest<O> {\n         }\n \n         node_rewrites.truncate(0);\n-        self.node_rewrites.replace(node_rewrites);\n+        self.node_rewrites = node_rewrites;\n \n         if do_completed == DoCompleted::Yes { Some(removed_done_obligations) } else { None }\n     }"}]}