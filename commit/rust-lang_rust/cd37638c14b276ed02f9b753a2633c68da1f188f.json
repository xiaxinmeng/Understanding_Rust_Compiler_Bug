{"sha": "cd37638c14b276ed02f9b753a2633c68da1f188f", "node_id": "C_kwDOAAsO6NoAKGNkMzc2MzhjMTRiMjc2ZWQwMmY5Yjc1M2EyNjMzYzY4ZGExZjE4OGY", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-02-10T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-02-15T18:07:06Z"}, "message": "Inline UnifyKey::index and UnifyKey::from_index", "tree": {"sha": "f3d629df2be9eb4bf14ad551ca9c09f9ab6c6ba4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3d629df2be9eb4bf14ad551ca9c09f9ab6c6ba4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd37638c14b276ed02f9b753a2633c68da1f188f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd37638c14b276ed02f9b753a2633c68da1f188f", "html_url": "https://github.com/rust-lang/rust/commit/cd37638c14b276ed02f9b753a2633c68da1f188f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd37638c14b276ed02f9b753a2633c68da1f188f/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55697574915ca58c3fcd7b1c854c1c93e002dc85", "url": "https://api.github.com/repos/rust-lang/rust/commits/55697574915ca58c3fcd7b1c854c1c93e002dc85", "html_url": "https://github.com/rust-lang/rust/commit/55697574915ca58c3fcd7b1c854c1c93e002dc85"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "0864edf44510ad5c227155bb8029d797a4e19eb5", "filename": "compiler/rustc_infer/src/infer/type_variable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd37638c14b276ed02f9b753a2633c68da1f188f/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd37638c14b276ed02f9b753a2633c68da1f188f/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ftype_variable.rs?ref=cd37638c14b276ed02f9b753a2633c68da1f188f", "patch": "@@ -416,6 +416,7 @@ impl<'tcx> ut::UnifyKey for TyVidEqKey<'tcx> {\n     fn index(&self) -> u32 {\n         self.vid.as_u32()\n     }\n+    #[inline]\n     fn from_index(i: u32) -> Self {\n         TyVidEqKey::from(ty::TyVid::from_u32(i))\n     }"}, {"sha": "dd303aaada9005626e49cf330e3fb0e9eab4418c", "filename": "compiler/rustc_middle/src/infer/unify_key.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd37638c14b276ed02f9b753a2633c68da1f188f/compiler%2Frustc_middle%2Fsrc%2Finfer%2Funify_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd37638c14b276ed02f9b753a2633c68da1f188f/compiler%2Frustc_middle%2Fsrc%2Finfer%2Funify_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Finfer%2Funify_key.rs?ref=cd37638c14b276ed02f9b753a2633c68da1f188f", "patch": "@@ -32,9 +32,11 @@ impl<'tcx> From<ty::RegionVid> for RegionVidKey<'tcx> {\n \n impl<'tcx> UnifyKey for RegionVidKey<'tcx> {\n     type Value = UnifiedRegion<'tcx>;\n+    #[inline]\n     fn index(&self) -> u32 {\n         self.vid.as_u32()\n     }\n+    #[inline]\n     fn from_index(i: u32) -> Self {\n         RegionVidKey::from(ty::RegionVid::from_u32(i))\n     }\n@@ -118,9 +120,11 @@ pub struct ConstVarValue<'tcx> {\n \n impl<'tcx> UnifyKey for ty::ConstVid<'tcx> {\n     type Value = ConstVarValue<'tcx>;\n+    #[inline]\n     fn index(&self) -> u32 {\n         self.index\n     }\n+    #[inline]\n     fn from_index(i: u32) -> Self {\n         ty::ConstVid { index: i, phantom: PhantomData }\n     }"}, {"sha": "237ead591a585913db1f26fdb2b8ccf0c171a10d", "filename": "compiler/rustc_mir_transform/src/dest_prop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd37638c14b276ed02f9b753a2633c68da1f188f/compiler%2Frustc_mir_transform%2Fsrc%2Fdest_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd37638c14b276ed02f9b753a2633c68da1f188f/compiler%2Frustc_mir_transform%2Fsrc%2Fdest_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdest_prop.rs?ref=cd37638c14b276ed02f9b753a2633c68da1f188f", "patch": "@@ -222,9 +222,11 @@ impl From<Local> for UnifyLocal {\n \n impl UnifyKey for UnifyLocal {\n     type Value = ();\n+    #[inline]\n     fn index(&self) -> u32 {\n         self.0.as_u32()\n     }\n+    #[inline]\n     fn from_index(u: u32) -> Self {\n         Self(Local::from_u32(u))\n     }"}, {"sha": "e26f0033156bcb2e46358bd96e0931c709f228cc", "filename": "compiler/rustc_type_ir/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cd37638c14b276ed02f9b753a2633c68da1f188f/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd37638c14b276ed02f9b753a2633c68da1f188f/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs?ref=cd37638c14b276ed02f9b753a2633c68da1f188f", "patch": "@@ -400,9 +400,11 @@ pub enum InferTy {\n /// they carry no values.\n impl UnifyKey for TyVid {\n     type Value = ();\n+    #[inline]\n     fn index(&self) -> u32 {\n         self.as_u32()\n     }\n+    #[inline]\n     fn from_index(i: u32) -> TyVid {\n         TyVid::from_u32(i)\n     }\n@@ -419,6 +421,7 @@ impl UnifyKey for IntVid {\n     fn index(&self) -> u32 {\n         self.index\n     }\n+    #[inline]\n     fn from_index(i: u32) -> IntVid {\n         IntVid { index: i }\n     }\n@@ -431,9 +434,11 @@ impl EqUnifyValue for FloatVarValue {}\n \n impl UnifyKey for FloatVid {\n     type Value = Option<FloatVarValue>;\n+    #[inline]\n     fn index(&self) -> u32 {\n         self.index\n     }\n+    #[inline]\n     fn from_index(i: u32) -> FloatVid {\n         FloatVid { index: i }\n     }"}]}