{"sha": "45964368f4a2e31c94e9bcf1cef933c087d21544", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1OTY0MzY4ZjRhMmUzMWM5NGU5YmNmMWNlZjkzM2MwODdkMjE1NDQ=", "commit": {"author": {"name": "Fran\u00e7ois Mockers", "email": "mockersf@gmail.com", "date": "2021-03-11T02:32:30Z"}, "committer": {"name": "Fran\u00e7ois Mockers", "email": "mockersf@gmail.com", "date": "2021-04-13T20:10:19Z"}, "message": "add anchors links on hover to items from trait impl", "tree": {"sha": "afdd3196820f9dc6c434a47900e913a7d5afc637", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afdd3196820f9dc6c434a47900e913a7d5afc637"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45964368f4a2e31c94e9bcf1cef933c087d21544", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45964368f4a2e31c94e9bcf1cef933c087d21544", "html_url": "https://github.com/rust-lang/rust/commit/45964368f4a2e31c94e9bcf1cef933c087d21544", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45964368f4a2e31c94e9bcf1cef933c087d21544/comments", "author": {"login": "mockersf", "id": 8672791, "node_id": "MDQ6VXNlcjg2NzI3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/8672791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mockersf", "html_url": "https://github.com/mockersf", "followers_url": "https://api.github.com/users/mockersf/followers", "following_url": "https://api.github.com/users/mockersf/following{/other_user}", "gists_url": "https://api.github.com/users/mockersf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mockersf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mockersf/subscriptions", "organizations_url": "https://api.github.com/users/mockersf/orgs", "repos_url": "https://api.github.com/users/mockersf/repos", "events_url": "https://api.github.com/users/mockersf/events{/privacy}", "received_events_url": "https://api.github.com/users/mockersf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mockersf", "id": 8672791, "node_id": "MDQ6VXNlcjg2NzI3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/8672791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mockersf", "html_url": "https://github.com/mockersf", "followers_url": "https://api.github.com/users/mockersf/followers", "following_url": "https://api.github.com/users/mockersf/following{/other_user}", "gists_url": "https://api.github.com/users/mockersf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mockersf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mockersf/subscriptions", "organizations_url": "https://api.github.com/users/mockersf/orgs", "repos_url": "https://api.github.com/users/mockersf/repos", "events_url": "https://api.github.com/users/mockersf/events{/privacy}", "received_events_url": "https://api.github.com/users/mockersf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1b6bb214fbc9d2a9af5c029679822e90dfd9660", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b6bb214fbc9d2a9af5c029679822e90dfd9660", "html_url": "https://github.com/rust-lang/rust/commit/e1b6bb214fbc9d2a9af5c029679822e90dfd9660"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "9f9a3acd8523b3f365d52dd65fb42c50869335d1", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/45964368f4a2e31c94e9bcf1cef933c087d21544/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45964368f4a2e31c94e9bcf1cef933c087d21544/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=45964368f4a2e31c94e9bcf1cef933c087d21544", "patch": "@@ -1453,12 +1453,13 @@ fn render_impl(\n             } else {\n                 (true, \" hidden\")\n             };\n+        let in_trait_class = if trait_.is_some() { \" trait-impl\" } else { \"\" };\n         match *item.kind {\n             clean::MethodItem(..) | clean::TyMethodItem(_) => {\n                 // Only render when the method is not static or we allow static methods\n                 if render_method_item {\n                     let id = cx.derive_id(format!(\"{}.{}\", item_type, name));\n-                    write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}\\\">\", id, item_type, extra_class);\n+                    write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}{}\\\">\", id, item_type, extra_class, in_trait_class);\n                     w.write_str(\"<code>\");\n                     render_assoc_item(w, item, link.anchor(&id), ItemType::Impl, cx);\n                     w.write_str(\"</code>\");\n@@ -1469,13 +1470,14 @@ fn render_impl(\n                         outer_version,\n                         outer_const_version,\n                     );\n+                    write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n                     write_srclink(cx, item, w);\n                     w.write_str(\"</h4>\");\n                 }\n             }\n             clean::TypedefItem(ref tydef, _) => {\n                 let id = cx.derive_id(format!(\"{}.{}\", ItemType::AssocType, name));\n-                write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}\\\"><code>\", id, item_type, extra_class);\n+                write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}{}\\\"><code>\", id, item_type, extra_class, in_trait_class);\n                 assoc_type(\n                     w,\n                     item,\n@@ -1486,11 +1488,13 @@ fn render_impl(\n                     cx.cache(),\n                     tcx,\n                 );\n-                w.write_str(\"</code></h4>\");\n+                w.write_str(\"</code>\");\n+                write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                w.write_str(\"</h4>\");\n             }\n             clean::AssocConstItem(ref ty, ref default) => {\n                 let id = cx.derive_id(format!(\"{}.{}\", item_type, name));\n-                write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}\\\"><code>\", id, item_type, extra_class);\n+                write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}{}\\\"><code>\", id, item_type, extra_class, in_trait_class);\n                 assoc_const(w, item, ty, default.as_ref(), link.anchor(&id), \"\", cx);\n                 w.write_str(\"</code>\");\n                 render_stability_since_raw(\n@@ -1500,12 +1504,13 @@ fn render_impl(\n                     outer_version,\n                     outer_const_version,\n                 );\n+                write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n                 write_srclink(cx, item, w);\n                 w.write_str(\"</h4>\");\n             }\n             clean::AssocTypeItem(ref bounds, ref default) => {\n                 let id = cx.derive_id(format!(\"{}.{}\", item_type, name));\n-                write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}\\\"><code>\", id, item_type, extra_class);\n+                write!(w, \"<h4 id=\\\"{}\\\" class=\\\"{}{}{}\\\"><code>\", id, item_type, extra_class, in_trait_class);\n                 assoc_type(\n                     w,\n                     item,\n@@ -1516,7 +1521,9 @@ fn render_impl(\n                     cx.cache(),\n                     tcx,\n                 );\n-                w.write_str(\"</code></h4>\");\n+                w.write_str(\"</code>\");\n+                write!(w, \"<a href=\\\"#{}\\\" class=\\\"anchor\\\"></a>\", id);\n+                w.write_str(\"</h4>\");\n             }\n             clean::StrippedItem(..) => return,\n             _ => panic!(\"can't make docs for trait item with name {:?}\", item.name),"}, {"sha": "2f9f8fb7335084f850955d0a277055dc96b624b6", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/45964368f4a2e31c94e9bcf1cef933c087d21544/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/45964368f4a2e31c94e9bcf1cef933c087d21544/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=45964368f4a2e31c94e9bcf1cef933c087d21544", "patch": "@@ -133,7 +133,7 @@ h3.impl, h3.method, h4.method, h3.type, h4.type, h4.associatedconstant {\n \tmargin-bottom: 10px;\n \tposition: relative;\n }\n-h3.impl, h3.method, h3.type {\n+h3.impl, h3.method, h4.method.trait-impl, h3.type, h4.type.trait-impl, h4.associatedconstant.trait-impl {\n \tpadding-left: 15px;\n }\n \n@@ -655,7 +655,8 @@ a {\n \tdisplay: initial;\n }\n \n-.in-band:hover > .anchor, .impl:hover > .anchor {\n+.in-band:hover > .anchor, .impl:hover > .anchor, .method.trait-impl:hover > .anchor,\n+.type.trait-impl:hover > .anchor, .associatedconstant.trait-impl:hover > .anchor {\n \tdisplay: inline-block;\n \tposition: absolute;\n }"}]}