{"sha": "f1eda09ea135c06e32ab34332ad25155e314731b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZWRhMDllYTEzNWMwNmUzMmFiMzQzMzJhZDI1MTU1ZTMxNDczMWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-29T07:03:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-29T07:03:54Z"}, "message": "Auto merge of #4032 - phansch:add_tests, r=phansch\n\nAdd two more tests for redundant_closure\n\nThese two cases were fixed by #4008.\n\nCloses #1439\n\nchangelog: none", "tree": {"sha": "356445ce5becdd1dd9099602daa28a239d88cb2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/356445ce5becdd1dd9099602daa28a239d88cb2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1eda09ea135c06e32ab34332ad25155e314731b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1eda09ea135c06e32ab34332ad25155e314731b", "html_url": "https://github.com/rust-lang/rust/commit/f1eda09ea135c06e32ab34332ad25155e314731b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1eda09ea135c06e32ab34332ad25155e314731b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a6f9416abd284a4cecda9c1475f0cf4acfd9982", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a6f9416abd284a4cecda9c1475f0cf4acfd9982", "html_url": "https://github.com/rust-lang/rust/commit/0a6f9416abd284a4cecda9c1475f0cf4acfd9982"}, {"sha": "3f637cb369bb29338f3c6e313981f006d8509039", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f637cb369bb29338f3c6e313981f006d8509039", "html_url": "https://github.com/rust-lang/rust/commit/3f637cb369bb29338f3c6e313981f006d8509039"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "cef4bda24b6a205c251e0521955f81a3b2375dc0", "filename": "tests/ui/eta.fixed", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f1eda09ea135c06e32ab34332ad25155e314731b/tests%2Fui%2Feta.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f1eda09ea135c06e32ab34332ad25155e314731b/tests%2Fui%2Feta.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.fixed?ref=f1eda09ea135c06e32ab34332ad25155e314731b", "patch": "@@ -98,6 +98,30 @@ fn test_redundant_closures_containing_method_calls() {\n         t.iter().filter(|x| x.trait_foo_ref());\n         t.iter().map(|x| x.trait_foo_ref());\n     }\n+\n+    let mut some = Some(|x| x * x);\n+    let arr = [Ok(1), Err(2)];\n+    let _: Vec<_> = arr.iter().map(|x| x.map_err(some.take().unwrap())).collect();\n+}\n+\n+struct Thunk<T>(Box<FnMut() -> T>);\n+\n+impl<T> Thunk<T> {\n+    fn new<F: 'static + FnOnce() -> T>(f: F) -> Thunk<T> {\n+        let mut option = Some(f);\n+        // This should not trigger redundant_closure (#1439)\n+        Thunk(Box::new(move || option.take().unwrap()()))\n+    }\n+\n+    fn unwrap(self) -> T {\n+        let Thunk(mut f) = self;\n+        f()\n+    }\n+}\n+\n+fn foobar() {\n+    let thunk = Thunk::new(|| println!(\"Hello, world!\"));\n+    thunk.unwrap()\n }\n \n fn meta<F>(f: F)"}, {"sha": "5f029eac4c1d7073acf1e0cbc6e66753e3c5eb6c", "filename": "tests/ui/eta.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f1eda09ea135c06e32ab34332ad25155e314731b/tests%2Fui%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1eda09ea135c06e32ab34332ad25155e314731b/tests%2Fui%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.rs?ref=f1eda09ea135c06e32ab34332ad25155e314731b", "patch": "@@ -98,6 +98,30 @@ fn test_redundant_closures_containing_method_calls() {\n         t.iter().filter(|x| x.trait_foo_ref());\n         t.iter().map(|x| x.trait_foo_ref());\n     }\n+\n+    let mut some = Some(|x| x * x);\n+    let arr = [Ok(1), Err(2)];\n+    let _: Vec<_> = arr.iter().map(|x| x.map_err(|e| some.take().unwrap()(e))).collect();\n+}\n+\n+struct Thunk<T>(Box<FnMut() -> T>);\n+\n+impl<T> Thunk<T> {\n+    fn new<F: 'static + FnOnce() -> T>(f: F) -> Thunk<T> {\n+        let mut option = Some(f);\n+        // This should not trigger redundant_closure (#1439)\n+        Thunk(Box::new(move || option.take().unwrap()()))\n+    }\n+\n+    fn unwrap(self) -> T {\n+        let Thunk(mut f) = self;\n+        f()\n+    }\n+}\n+\n+fn foobar() {\n+    let thunk = Thunk::new(|| println!(\"Hello, world!\"));\n+    thunk.unwrap()\n }\n \n fn meta<F>(f: F)"}, {"sha": "afcafc46b3e0f695aea5b35aa52e1c87c59b0f7e", "filename": "tests/ui/eta.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f1eda09ea135c06e32ab34332ad25155e314731b/tests%2Fui%2Feta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1eda09ea135c06e32ab34332ad25155e314731b/tests%2Fui%2Feta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.stderr?ref=f1eda09ea135c06e32ab34332ad25155e314731b", "patch": "@@ -69,16 +69,22 @@ LL |     let e: std::vec::Vec<char> = vec!['a', 'b', 'c'].iter().map(|c| c.to_as\n    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove closure as shown: `char::to_ascii_uppercase`\n \n error: redundant closure found\n-  --> $DIR/eta.rs:145:27\n+  --> $DIR/eta.rs:104:50\n+   |\n+LL |     let _: Vec<_> = arr.iter().map(|x| x.map_err(|e| some.take().unwrap()(e))).collect();\n+   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove closure as shown: `some.take().unwrap()`\n+\n+error: redundant closure found\n+  --> $DIR/eta.rs:169:27\n    |\n LL |     let a = Some(1u8).map(|a| foo_ptr(a));\n    |                           ^^^^^^^^^^^^^^ help: remove closure as shown: `foo_ptr`\n \n error: redundant closure found\n-  --> $DIR/eta.rs:150:27\n+  --> $DIR/eta.rs:174:27\n    |\n LL |     let a = Some(1u8).map(|a| closure(a));\n    |                           ^^^^^^^^^^^^^^ help: remove closure as shown: `closure`\n \n-error: aborting due to 13 previous errors\n+error: aborting due to 14 previous errors\n "}]}