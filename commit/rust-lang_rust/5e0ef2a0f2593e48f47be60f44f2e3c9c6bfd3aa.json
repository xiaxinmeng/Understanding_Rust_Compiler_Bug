{"sha": "5e0ef2a0f2593e48f47be60f44f2e3c9c6bfd3aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMGVmMmEwZjI1OTNlNDhmNDdiZTYwZjQ0ZjJlM2M5YzZiZmQzYWE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-21T20:42:14Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-21T20:42:37Z"}, "message": "Port tidy and remainder of pkg/dist rules.", "tree": {"sha": "dcdb82fc71300e8a624c1c46000d8af67e93c1c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcdb82fc71300e8a624c1c46000d8af67e93c1c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e0ef2a0f2593e48f47be60f44f2e3c9c6bfd3aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e0ef2a0f2593e48f47be60f44f2e3c9c6bfd3aa", "html_url": "https://github.com/rust-lang/rust/commit/5e0ef2a0f2593e48f47be60f44f2e3c9c6bfd3aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e0ef2a0f2593e48f47be60f44f2e3c9c6bfd3aa/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68d76c21c540afba3e76b177100c1d0787c9311c", "url": "https://api.github.com/repos/rust-lang/rust/commits/68d76c21c540afba3e76b177100c1d0787c9311c", "html_url": "https://github.com/rust-lang/rust/commit/68d76c21c540afba3e76b177100c1d0787c9311c"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "0f4bb816896c82d64abc0f564827b8fd50e54071", "filename": "Makefile.in", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/5e0ef2a0f2593e48f47be60f44f2e3c9c6bfd3aa/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/5e0ef2a0f2593e48f47be60f44f2e3c9c6bfd3aa/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=5e0ef2a0f2593e48f47be60f44f2e3c9c6bfd3aa", "patch": "@@ -927,13 +927,66 @@ PKG_VER  = $(shell date +\"%Y-%m-%d\")-snap\n PKG_DIR = $(PKG_NAME)-$(PKG_VER)\n PKG_TAR = $(PKG_DIR).tar.gz\n \n+PKG_3RDPARTY := rt/valgrind.h rt/memcheck.h \\\n+                rt/isaac/rand.h rt/isaac/standard.h \\\n+                rt/uthash/uthash.h rt/uthash/utlist.h \\\n+                rt/bigint/bigint.h rt/bigint/bigint_int.cpp \\\n+                rt/bigint/bigint_ext.cpp rt/bigint/low_primes.h\n+\n+PKG_FILES :=\\\n+    $(wildcard $(S)src/etc/*.*)                \\\n+    $(S)LICENSE.txt $(S)README                 \\\n+    $(S)configure $(S)Makefile.in              \\\n+    $(addprefix $(S)src/,                      \\\n+      README boot/README comp/README           \\\n+      $(filter-out $(GENERATED), $(BOOT_MLS))  \\\n+      $(RUNTIME_CS) $(RUNTIME_HDR)             \\\n+      $(LLVMEXT_CS) $(LLVMEXT_HDR)             \\\n+      $(PKG_3RDPARTY))                         \\\n+    $(COMPILER_INPUTS)                         \\\n+    $(STDLIB_INPUTS)                           \\\n+    $(ALL_TEST_INPUTS)                         \\\n+    $(GENERATED)\n+\n+dist: $(PKG_TAR)\n+\n+$(PKG_TAR):\n+\t@$(call E, making dist dir)\n+\t$(Q)rm -Rf dist\n+\t$(Q)mkdir -p dist/$(PKG_DIR)\n+\t$(Q)tar -c $(PKG_FILES) | tar -x -C dist/$(PKG_DIR)\n+\t$(Q)tar -czf $(PKG_TAR) -C dist $(PKG_DIR)\n+\t$(Q)rm -Rf dist\n+\n+distcheck: $(PKG_TAR)\n+\t$(Q)tar -c $(PKG_FILES) | tar -x -C dist/$(PKG_DIR)\n+\t@$(call E, configuring in dist/$(PKG_DIR)-build)\n+\t$(Q)mkdir -p dist/build\n+\t$(Q)cd dist/$(PKG_DIR)-build && ../$(PKG_DIR)/configure\n+\t@$(call E, making 'check' in dist/$(PKG_DIR)-build)\n+\t$(Q)make -C dist/$(PKG_DIR)-build check\n+\t@$(call E, making 'clean' in dist/$(PKG_DIR)-build)\n+\t$(Q)make -C dist/$(PKG_DIR)-build clean\n+\t$(Q)rm -Rf dist\n+\t@echo\n+\t@echo -----------------------------------------------\n+\t@echo $(PKG_TAR) ready for distribution\n+\t@echo -----------------------------------------------\n+\n \n ######################################################################\n # Cleanup\n ######################################################################\n \n .PHONY: clean\n \n+tidy:\n+\t@$(call E, check: formatting)\n+\t$(Q)python $(S)src/etc/tidy.py \\\n+      $(filter-out $(GENERATED) \\\n+        $(addprefix $(S)src/, $(LLVMEXT_CS) $(LLVMEXT_HDR) $(PKG_3RDPARTY)) \\\n+        $(S)src/etc/%, $(PKG_FILES))\n+\n clean:\n \t@$(call E, cleaning)\n \t$(Q)rm -f $(RUNTIME_OBJS)"}]}