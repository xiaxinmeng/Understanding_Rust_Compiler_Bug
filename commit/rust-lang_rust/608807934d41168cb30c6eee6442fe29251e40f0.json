{"sha": "608807934d41168cb30c6eee6442fe29251e40f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwODgwNzkzNGQ0MTE2OGNiMzBjNmVlZTY0NDJmZTI5MjUxZTQwZjA=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2020-06-28T17:06:33Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2020-06-28T17:06:33Z"}, "message": "use outermost invocation span for doctest names\n\nFixes #70090.", "tree": {"sha": "a80c6fea6ede10040dc8c2fe78a4fe1a7e39fede", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a80c6fea6ede10040dc8c2fe78a4fe1a7e39fede"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/608807934d41168cb30c6eee6442fe29251e40f0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAl74zjwWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdP1rB/oD0Jx1Kfw9Wq2E7U//MUeRW4kw\nmcPklvKUm2rk+Vb+64XDWg/Lmpayx7Mje8SI3T7fnVbeykOAdom6IKt42vbOtmaA\nQYwsiVY6yWLSVGcp6vsF6squa+PqfD7fkVWbEfKR1+ri+orHbeKNyKjDZpAQlump\n6bRzZuMsyiiZJ+3PY29BxlFhPr+SJyd7wCEmasKFTy2X7K+G00fAPn95OT3GFPEF\nqB8NkJyYiH3MUSlIw3RnQQNJQ/hGmcEdldDRdvCkQ7O8OZenohceyNqlSrZ5kPLV\nOy9PHTtWhcxw0zh385VNhaN+7ycV8rzoVpXn7Z5j5bu5FTlu1WU5rkRLl2nI\n=NFZQ\n-----END PGP SIGNATURE-----", "payload": "tree a80c6fea6ede10040dc8c2fe78a4fe1a7e39fede\nparent af88ce5eb34b0ecdfd2f8dfcc837c353688d6c75\nauthor Andy Russell <arussell123@gmail.com> 1593363993 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1593363993 -0400\n\nuse outermost invocation span for doctest names\n\nFixes #70090.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/608807934d41168cb30c6eee6442fe29251e40f0", "html_url": "https://github.com/rust-lang/rust/commit/608807934d41168cb30c6eee6442fe29251e40f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/608807934d41168cb30c6eee6442fe29251e40f0/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af88ce5eb34b0ecdfd2f8dfcc837c353688d6c75", "url": "https://api.github.com/repos/rust-lang/rust/commits/af88ce5eb34b0ecdfd2f8dfcc837c353688d6c75", "html_url": "https://github.com/rust-lang/rust/commit/af88ce5eb34b0ecdfd2f8dfcc837c353688d6c75"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "e0c0a352fbadb3140f1b3f12367a70dacd064774", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/608807934d41168cb30c6eee6442fe29251e40f0/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/608807934d41168cb30c6eee6442fe29251e40f0/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=608807934d41168cb30c6eee6442fe29251e40f0", "patch": "@@ -944,7 +944,12 @@ impl<'a, 'hir, 'tcx> HirCollector<'a, 'hir, 'tcx> {\n         // The collapse-docs pass won't combine sugared/raw doc attributes, or included files with\n         // anything else, this will combine them for us.\n         if let Some(doc) = attrs.collapsed_doc_value() {\n-            self.collector.set_position(attrs.span.unwrap_or(DUMMY_SP));\n+            // Use the outermost invocation, so that doctest names come from where the docs were written.\n+            let span = attrs\n+                .span\n+                .map(|span| span.ctxt().outer_expn().expansion_cause().unwrap_or(span))\n+                .unwrap_or(DUMMY_SP);\n+            self.collector.set_position(span);\n             markdown::find_testable_code(\n                 &doc,\n                 self.collector,"}, {"sha": "ee1fec4c5c2191e7fdcefe9290176fb03454e737", "filename": "src/test/rustdoc-ui/auxiliary/extern_macros.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/608807934d41168cb30c6eee6442fe29251e40f0/src%2Ftest%2Frustdoc-ui%2Fauxiliary%2Fextern_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/608807934d41168cb30c6eee6442fe29251e40f0/src%2Ftest%2Frustdoc-ui%2Fauxiliary%2Fextern_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fauxiliary%2Fextern_macros.rs?ref=608807934d41168cb30c6eee6442fe29251e40f0", "patch": "@@ -0,0 +1,7 @@\n+#[macro_export]\n+macro_rules! attrs_on_struct {\n+    ( $( #[$attr:meta] )* ) => {\n+        $( #[$attr] )*\n+        pub struct ExpandedStruct;\n+    }\n+}"}, {"sha": "e0e1e061ac7dc43454f566b5ee5559d609123a84", "filename": "src/test/rustdoc-ui/doctest-output.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/608807934d41168cb30c6eee6442fe29251e40f0/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/608807934d41168cb30c6eee6442fe29251e40f0/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.rs?ref=608807934d41168cb30c6eee6442fe29251e40f0", "patch": "@@ -1,3 +1,5 @@\n+// edition:2018\n+// aux-build:extern_macros.rs\n // compile-flags:--test --test-args=--test-threads=1\n // normalize-stdout-test: \"src/test/rustdoc-ui\" -> \"$$DIR\"\n // check-pass\n@@ -6,10 +8,20 @@\n //! assert_eq!(1 + 1, 2);\n //! ```\n \n+extern crate extern_macros as macros;\n+\n+use macros::attrs_on_struct;\n+\n pub mod foo {\n \n     /// ```\n     /// assert_eq!(1 + 1, 2);\n     /// ```\n     pub fn bar() {}\n }\n+\n+attrs_on_struct! {\n+    /// ```\n+    /// assert!(true);\n+    /// ```\n+}"}, {"sha": "c72bd91d1dd13b5225909d02a591ea3c798257b4", "filename": "src/test/rustdoc-ui/doctest-output.stdout", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/608807934d41168cb30c6eee6442fe29251e40f0/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/608807934d41168cb30c6eee6442fe29251e40f0/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.stdout?ref=608807934d41168cb30c6eee6442fe29251e40f0", "patch": "@@ -1,7 +1,8 @@\n \n-running 2 tests\n-test $DIR/doctest-output.rs - (line 5) ... ok\n-test $DIR/doctest-output.rs - foo::bar (line 11) ... ok\n+running 3 tests\n+test $DIR/doctest-output.rs - (line 7) ... ok\n+test $DIR/doctest-output.rs - ExpandedStruct (line 23) ... ok\n+test $DIR/doctest-output.rs - foo::bar (line 17) ... ok\n \n-test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n+test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n "}]}