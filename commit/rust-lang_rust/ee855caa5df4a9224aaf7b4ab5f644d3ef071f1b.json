{"sha": "ee855caa5df4a9224aaf7b4ab5f644d3ef071f1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlODU1Y2FhNWRmNGE5MjI0YWFmN2I0YWI1ZjY0NGQzZWYwNzFmMWI=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-17T19:51:24Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-18T00:46:31Z"}, "message": "Don't ICE when protocol steps to invalid mesasge.", "tree": {"sha": "ca59a5f57fa16f2ebb55fd0ac60ea445001ee393", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca59a5f57fa16f2ebb55fd0ac60ea445001ee393"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee855caa5df4a9224aaf7b4ab5f644d3ef071f1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee855caa5df4a9224aaf7b4ab5f644d3ef071f1b", "html_url": "https://github.com/rust-lang/rust/commit/ee855caa5df4a9224aaf7b4ab5f644d3ef071f1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee855caa5df4a9224aaf7b4ab5f644d3ef071f1b/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cf6b4d3b4ea5cd231ab96d82f5f8cd794e0b2c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cf6b4d3b4ea5cd231ab96d82f5f8cd794e0b2c3", "html_url": "https://github.com/rust-lang/rust/commit/4cf6b4d3b4ea5cd231ab96d82f5f8cd794e0b2c3"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "492cb255805e9bb9f61049c0cf54dcf79f04e1c5", "filename": "src/libsyntax/ext/pipes/check.rs", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/ee855caa5df4a9224aaf7b4ab5f644d3ef071f1b/src%2Flibsyntax%2Fext%2Fpipes%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee855caa5df4a9224aaf7b4ab5f644d3ef071f1b/src%2Flibsyntax%2Fext%2Fpipes%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fcheck.rs?ref=ee855caa5df4a9224aaf7b4ab5f644d3ef071f1b", "patch": "@@ -44,28 +44,29 @@ impl proto_check of proto::visitor<(), (), ()>  for ext_ctxt {\n \n     fn visit_message(name: ident, _tys: &[@ast::ty],\n                      this: state, next: next_state) {\n-         alt next {\n-           some({state: next, tys: next_tys}) {\n-             let proto = this.proto;\n-             if !proto.has_state(next) {\n-                 // This should be a span fatal, but then we need to\n-                 // track span information.\n-                 self.span_err(\n-                     empty_span(),\n-                     #fmt(\"message %s steps to undefined state, %s\",\n-                          *name, *next));\n-            }\n-\n-            let next = proto.get_state(next);\n-\n-            if next.ty_params.len() != next_tys.len() {\n+        alt next {\n+          some({state: next, tys: next_tys}) {\n+            let proto = this.proto;\n+            if !proto.has_state(next) {\n+                // This should be a span fatal, but then we need to\n+                // track span information.\n                 self.span_err(\n-                    empty_span(), // use a real span\n-                    #fmt(\"message %s target (%s) \\\n-                          needs %u type parameters, but got %u\",\n-                         *name, *next.name,\n-                         next.ty_params.len(),\n-                         next_tys.len()));\n+                    empty_span(),\n+                    #fmt(\"message %s steps to undefined state, %s\",\n+                         *name, *next));\n+            }\n+            else {\n+                let next = proto.get_state(next);\n+\n+                if next.ty_params.len() != next_tys.len() {\n+                    self.span_err(\n+                        empty_span(), // use a real span\n+                        #fmt(\"message %s target (%s) \\\n+                              needs %u type parameters, but got %u\",\n+                             *name, *next.name,\n+                             next.ty_params.len(),\n+                             next_tys.len()));\n+                }\n             }\n           }\n           none { }"}]}