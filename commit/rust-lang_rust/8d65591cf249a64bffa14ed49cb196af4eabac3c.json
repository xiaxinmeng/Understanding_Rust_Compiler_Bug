{"sha": "8d65591cf249a64bffa14ed49cb196af4eabac3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkNjU1OTFjZjI0OWE2NGJmZmExNGVkNDljYjE5NmFmNGVhYmFjM2M=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-04-29T17:39:28Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-05-11T06:41:19Z"}, "message": "rustbuild: Tighten dependencies of build scripts\n\nEnsure that `rerun-if-changed` is printed for all build scripts to ensure that\nthey've all got the right list of dependencies.", "tree": {"sha": "45a17a4c8bc538307cd7072ddfd7537146ed4bd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45a17a4c8bc538307cd7072ddfd7537146ed4bd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d65591cf249a64bffa14ed49cb196af4eabac3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d65591cf249a64bffa14ed49cb196af4eabac3c", "html_url": "https://github.com/rust-lang/rust/commit/8d65591cf249a64bffa14ed49cb196af4eabac3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d65591cf249a64bffa14ed49cb196af4eabac3c/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80ec1b9f1040fba67846924234167feeb24d1f68", "url": "https://api.github.com/repos/rust-lang/rust/commits/80ec1b9f1040fba67846924234167feeb24d1f68", "html_url": "https://github.com/rust-lang/rust/commit/80ec1b9f1040fba67846924234167feeb24d1f68"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "33a675331ab9dbb91e471e2a9b9d2ffde3e223fc", "filename": "src/liballoc_jemalloc/build.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8d65591cf249a64bffa14ed49cb196af4eabac3c/src%2Fliballoc_jemalloc%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d65591cf249a64bffa14ed49cb196af4eabac3c/src%2Fliballoc_jemalloc%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Fbuild.rs?ref=8d65591cf249a64bffa14ed49cb196af4eabac3c", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![deny(warnings)]\n+\n extern crate build_helper;\n extern crate gcc;\n \n@@ -18,6 +20,7 @@ use build_helper::run;\n \n fn main() {\n     println!(\"cargo:rustc-cfg=cargobuild\");\n+    println!(\"cargo:rerun-if-changed=build.rs\");\n \n     let target = env::var(\"TARGET\").unwrap();\n     let host = env::var(\"HOST\").unwrap();\n@@ -40,6 +43,19 @@ fn main() {\n     let cflags = compiler.args().iter().map(|s| s.to_str().unwrap())\n                          .collect::<Vec<_>>().join(\" \");\n \n+    let mut stack = src_dir.join(\"../jemalloc\")\n+                           .read_dir().unwrap()\n+                           .map(|e| e.unwrap())\n+                           .collect::<Vec<_>>();\n+    while let Some(entry) = stack.pop() {\n+        let path = entry.path();\n+        if entry.file_type().unwrap().is_dir() {\n+            stack.extend(path.read_dir().unwrap().map(|e| e.unwrap()));\n+        } else {\n+            println!(\"cargo:rerun-if-changed={}\", path.display());\n+        }\n+    }\n+\n     let mut cmd = Command::new(\"sh\");\n     cmd.arg(src_dir.join(\"../jemalloc/configure\").to_str().unwrap()\n                    .replace(\"C:\\\\\", \"/c/\")"}, {"sha": "255a367e58b45a8280d2346c8f7c200dd2244283", "filename": "src/libcore/build.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8d65591cf249a64bffa14ed49cb196af4eabac3c/src%2Flibcore%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d65591cf249a64bffa14ed49cb196af4eabac3c/src%2Flibcore%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbuild.rs?ref=8d65591cf249a64bffa14ed49cb196af4eabac3c", "patch": "@@ -8,7 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![deny(warnings)]\n+\n fn main() {\n     // Remove this whenever snapshots and rustbuild nightlies are synced.\n     println!(\"cargo:rustc-cfg=cargobuild\");\n+    println!(\"cargo:rerun-if-changed=build.rs\")\n }"}, {"sha": "ff9dacbb6799b7192e1874267307a25ad6b156ea", "filename": "src/libstd/build.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8d65591cf249a64bffa14ed49cb196af4eabac3c/src%2Flibstd%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d65591cf249a64bffa14ed49cb196af4eabac3c/src%2Flibstd%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbuild.rs?ref=8d65591cf249a64bffa14ed49cb196af4eabac3c", "patch": "@@ -8,18 +8,20 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![deny(warnings)]\n+\n extern crate gcc;\n extern crate build_helper;\n \n use std::env;\n-use std::fs;\n use std::path::PathBuf;\n use std::process::Command;\n \n use build_helper::run;\n \n fn main() {\n     println!(\"cargo:rustc-cfg=cargobuild\");\n+    println!(\"cargo:rerun-if-changed=build.rs\");\n \n     let target = env::var(\"TARGET\").unwrap();\n     let host = env::var(\"HOST\").unwrap();\n@@ -65,8 +67,16 @@ fn build_libbacktrace(host: &str, target: &str) {\n     println!(\"cargo:rustc-link-lib=static=backtrace\");\n     println!(\"cargo:rustc-link-search=native={}/.libs\", build_dir.display());\n \n-    if fs::metadata(&build_dir.join(\".libs/libbacktrace.a\")).is_ok() {\n-        return\n+    let mut stack = src_dir.read_dir().unwrap()\n+                           .map(|e| e.unwrap())\n+                           .collect::<Vec<_>>();\n+    while let Some(entry) = stack.pop() {\n+        let path = entry.path();\n+        if entry.file_type().unwrap().is_dir() {\n+            stack.extend(path.read_dir().unwrap().map(|e| e.unwrap()));\n+        } else {\n+            println!(\"cargo:rerun-if-changed={}\", path.display());\n+        }\n     }\n \n     let compiler = gcc::Config::new().get_compiler();"}, {"sha": "546f60482e7bcd21561227ecff7ed2b496baf2af", "filename": "src/rustc/libc_shim/build.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8d65591cf249a64bffa14ed49cb196af4eabac3c/src%2Frustc%2Flibc_shim%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d65591cf249a64bffa14ed49cb196af4eabac3c/src%2Frustc%2Flibc_shim%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Flibc_shim%2Fbuild.rs?ref=8d65591cf249a64bffa14ed49cb196af4eabac3c", "patch": "@@ -8,8 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![deny(warnings)]\n+\n // See comments in Cargo.toml for why this exists\n \n fn main() {\n     println!(\"cargo:rustc-cfg=stdbuild\");\n+    println!(\"cargo:rerun-if-changed=build.rs\");\n }"}]}