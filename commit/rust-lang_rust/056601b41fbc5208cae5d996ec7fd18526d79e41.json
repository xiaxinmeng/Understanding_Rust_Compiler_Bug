{"sha": "056601b41fbc5208cae5d996ec7fd18526d79e41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1NjYwMWI0MWZiYzUyMDhjYWU1ZDk5NmVjN2ZkMTg1MjZkNzllNDE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-17T13:17:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-17T13:17:15Z"}, "message": "Merge #7705\n\n7705: Show hover info of the definition of ConstReference patterns instead of its type r=Veykril a=Veykril\n\nCloses #7671\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "74ac5ee88df768a9b3011ac43a8bd26b074f35c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74ac5ee88df768a9b3011ac43a8bd26b074f35c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/056601b41fbc5208cae5d996ec7fd18526d79e41", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgLRdbCRBK7hj4Ov3rIwAAdHIIAIOlgkux+Jf+l0p+1hpCcBoV\nOu7+SJIBWGPGEOH3T3K14zJGacny1IClIBVPpNyTbl8CAbgTTwJ0o/ylIyVE25OE\ntRWrf3TjVYfe67nJxNNWjJYq9HGhcpoV02SMyBhJ1k3mJyVMkojjkUBRhg/QodFS\nA9Lu9mzKApVEJdUytmlNhXR2HUX2MRW/Wo0IBbb6MeeVeKQtiTNe2dJemzzTpQgy\nBl8oBp4N6Q6KX2iR1653M3s2/boEOjlQ5weRbv7JQwbTYGLEoG1qf6t6K04TTv1Q\nWTV9DJetQ+TLD++V39cQhDndsNC2MBAH+Vx/EYDmX3FA93rvrCrxwp4eOhwP6T4=\n=ThwS\n-----END PGP SIGNATURE-----\n", "payload": "tree 74ac5ee88df768a9b3011ac43a8bd26b074f35c0\nparent 5cd7a0f2c5a7948dcd6b1838e1497c560d5c65a1\nparent 51dda8ea8e4e64b3ee5ed6971d3182f6b3df987f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1613567835 +0000\ncommitter GitHub <noreply@github.com> 1613567835 +0000\n\nMerge #7705\n\n7705: Show hover info of the definition of ConstReference patterns instead of its type r=Veykril a=Veykril\n\nCloses #7671\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/056601b41fbc5208cae5d996ec7fd18526d79e41", "html_url": "https://github.com/rust-lang/rust/commit/056601b41fbc5208cae5d996ec7fd18526d79e41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/056601b41fbc5208cae5d996ec7fd18526d79e41/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cd7a0f2c5a7948dcd6b1838e1497c560d5c65a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cd7a0f2c5a7948dcd6b1838e1497c560d5c65a1", "html_url": "https://github.com/rust-lang/rust/commit/5cd7a0f2c5a7948dcd6b1838e1497c560d5c65a1"}, {"sha": "51dda8ea8e4e64b3ee5ed6971d3182f6b3df987f", "url": "https://api.github.com/repos/rust-lang/rust/commits/51dda8ea8e4e64b3ee5ed6971d3182f6b3df987f", "html_url": "https://github.com/rust-lang/rust/commit/51dda8ea8e4e64b3ee5ed6971d3182f6b3df987f"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "69b828f477fda1bf7a3efd5db90987569c4a71f8", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/056601b41fbc5208cae5d996ec7fd18526d79e41/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/056601b41fbc5208cae5d996ec7fd18526d79e41/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=056601b41fbc5208cae5d996ec7fd18526d79e41", "patch": "@@ -2,8 +2,8 @@ use hir::{\n     Adt, AsAssocItem, AssocItemContainer, FieldSource, GenericParam, HasAttrs, HasSource,\n     HirDisplay, Module, ModuleDef, ModuleSource, Semantics,\n };\n-use ide_db::base_db::SourceDatabase;\n use ide_db::{\n+    base_db::SourceDatabase,\n     defs::{Definition, NameClass, NameRefClass},\n     RootDatabase,\n };\n@@ -94,7 +94,12 @@ pub(crate) fn hover(\n     let node = token.parent();\n     let definition = match_ast! {\n         match node {\n-            ast::Name(name) => NameClass::classify(&sema, &name).and_then(|d| d.defined(sema.db)),\n+            // we don't use NameClass::referenced_or_defined here as we do not want to resolve\n+            // field pattern shorthands to their definition\n+            ast::Name(name) => NameClass::classify(&sema, &name).and_then(|class| match class {\n+                NameClass::ConstReference(def) => Some(def),\n+                def => def.defined(sema.db),\n+            }),\n             ast::NameRef(name_ref) => NameRefClass::classify(&sema, &name_ref).map(|d| d.referenced(sema.db)),\n             ast::Lifetime(lifetime) => NameClass::classify_lifetime(&sema, &lifetime)\n                 .map_or_else(|| NameRefClass::classify_lifetime(&sema, &lifetime).map(|d| d.referenced(sema.db)), |d| d.defined(sema.db)),\n@@ -3445,6 +3450,37 @@ impl<const LEN: usize> Foo<LEN$0> {}\n         );\n     }\n \n+    #[test]\n+    fn hover_const_pat() {\n+        check(\n+            r#\"\n+/// This is a doc\n+const FOO: usize = 3;\n+fn foo() {\n+    match 5 {\n+        FOO$0 => (),\n+        _ => ()\n+    }\n+}\n+\"#,\n+            expect![[r#\"\n+                *FOO*\n+\n+                ```rust\n+                test\n+                ```\n+\n+                ```rust\n+                const FOO: usize = 3\n+                ```\n+\n+                ---\n+\n+                This is a doc\n+            \"#]],\n+        );\n+    }\n+\n     #[test]\n     fn hover_mod_def() {\n         check("}]}