{"sha": "a2735a3e0dd58e4b41b933731928678b7a2da700", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNzM1YTNlMGRkNThlNGI0MWI5MzM3MzE5Mjg2NzhiN2EyZGE3MDA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-02T22:09:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-02T22:09:04Z"}, "message": "Rollup merge of #63107 - adrian-budau:master, r=alexcrichton\n\nAdded support for armv7-unknown-linux-gnueabi/musleabi\n\nFixes #63101\n\nSome things that are not done and I hope someone can help me with:\n\n* During the ci build of `armv7-unknown-linux-gnueabi` `openssl` must be built (to build cargo) but `openssl` does not yet support this target. This feels slightly like a chicken-and-egg problem, any feedback is welcome.\n* Should I add any tests for any of these targets?", "tree": {"sha": "1ca04796e27afe95746e6a2cd88138337902f77a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ca04796e27afe95746e6a2cd88138337902f77a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2735a3e0dd58e4b41b933731928678b7a2da700", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdRLSACRBK7hj4Ov3rIwAAdHIIABdJCxp1MInK/w/6IEYYrjkj\nQbcd/kB09eoZy+x/lu/JOHqurDtLySQbV15JgWly129S4RmSD6rsGesxYSA6Hva0\nQKLClz2hfR0T5PvGj7m7LoxaJ8QcXSroYLoFFwda3kPX7CZUMjay5M1ALX0pygyd\nBrnFoJXa0UAmleQgVeHXKZhoTITv/7pkbZUZvRgtUUDgg6NxNAC6jZOavdu7WJsM\nJjbgUhI4q6vGyssRLbjW5NkTsMDKngz+MoNp/jTA7/8iic2que9sjffGuxmpG7Dq\neaJnXw8BOeaGeCbm51KnD/cL2V/6Wige1faxpuWsB3A8Eo+3e93tTObmylk+HvY=\n=nGuG\n-----END PGP SIGNATURE-----\n", "payload": "tree 1ca04796e27afe95746e6a2cd88138337902f77a\nparent cf048cc115860cc110865f460f3f2b9b4308ad92\nparent 2b0f4483d2f16e6c51a276665bff750fc40c9da9\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564783744 +0200\ncommitter GitHub <noreply@github.com> 1564783744 +0200\n\nRollup merge of #63107 - adrian-budau:master, r=alexcrichton\n\nAdded support for armv7-unknown-linux-gnueabi/musleabi\n\nFixes #63101\n\nSome things that are not done and I hope someone can help me with:\n\n* During the ci build of `armv7-unknown-linux-gnueabi` `openssl` must be built (to build cargo) but `openssl` does not yet support this target. This feels slightly like a chicken-and-egg problem, any feedback is welcome.\n* Should I add any tests for any of these targets?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2735a3e0dd58e4b41b933731928678b7a2da700", "html_url": "https://github.com/rust-lang/rust/commit/a2735a3e0dd58e4b41b933731928678b7a2da700", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2735a3e0dd58e4b41b933731928678b7a2da700/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf048cc115860cc110865f460f3f2b9b4308ad92", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf048cc115860cc110865f460f3f2b9b4308ad92", "html_url": "https://github.com/rust-lang/rust/commit/cf048cc115860cc110865f460f3f2b9b4308ad92"}, {"sha": "2b0f4483d2f16e6c51a276665bff750fc40c9da9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b0f4483d2f16e6c51a276665bff750fc40c9da9", "html_url": "https://github.com/rust-lang/rust/commit/2b0f4483d2f16e6c51a276665bff750fc40c9da9"}], "stats": {"total": 107, "additions": 100, "deletions": 7}, "files": [{"sha": "298330869b6847ad21181b2978afdb3db7a5fbb6", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=a2735a3e0dd58e4b41b933731928678b7a2da700", "patch": "@@ -125,7 +125,9 @@ def v(*args):\n   \"arm-unknown-linux-musleabihf install directory\")\n v(\"musl-root-armv5te\", \"target.armv5te-unknown-linux-musleabi.musl-root\",\n   \"armv5te-unknown-linux-musleabi install directory\")\n-v(\"musl-root-armv7\", \"target.armv7-unknown-linux-musleabihf.musl-root\",\n+v(\"musl-root-armv7\", \"target.armv7-unknown-linux-musleabi.musl-root\",\n+  \"armv7-unknown-linux-musleabi install directory\")\n+v(\"musl-root-armv7hf\", \"target.armv7-unknown-linux-musleabihf.musl-root\",\n   \"armv7-unknown-linux-musleabihf install directory\")\n v(\"musl-root-aarch64\", \"target.aarch64-unknown-linux-musl.musl-root\",\n   \"aarch64-unknown-linux-musl install directory\")"}, {"sha": "ae2ea8ef95a6a18fe0661595f8e3f8cd893fffd0", "filename": "src/ci/docker/dist-various-1/Dockerfile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile?ref=a2735a3e0dd58e4b41b933731928678b7a2da700", "patch": "@@ -64,7 +64,7 @@ RUN env \\\n     env \\\n     CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv7-a\" \\\n     CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv7-a\" \\\n-    bash musl.sh armv7 && \\\n+    bash musl.sh armv7hf && \\\n     env \\\n     CC=aarch64-linux-gnu-gcc \\\n     CXX=aarch64-linux-gnu-g++ \\\n@@ -137,7 +137,7 @@ ENV RUST_CONFIGURE_ARGS \\\n       --musl-root-armv5te=/musl-armv5te \\\n       --musl-root-arm=/musl-arm \\\n       --musl-root-armhf=/musl-armhf \\\n-      --musl-root-armv7=/musl-armv7 \\\n+      --musl-root-armv7hf=/musl-armv7hf \\\n       --musl-root-aarch64=/musl-aarch64 \\\n       --musl-root-mips=/musl-mips \\\n       --musl-root-mipsel=/musl-mipsel \\"}, {"sha": "2ae6c58941e4c62e781600772640c701582f7e3d", "filename": "src/ci/docker/dist-various-2/Dockerfile", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Fci%2Fdocker%2Fdist-various-2%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Fci%2Fdocker%2Fdist-various-2%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-2%2FDockerfile?ref=a2735a3e0dd58e4b41b933731928678b7a2da700", "patch": "@@ -8,7 +8,8 @@ RUN sed -i 's/^# deb-src/deb-src/' /etc/apt/sources.list\n \n RUN apt-get update && apt-get build-dep -y clang llvm && apt-get install -y --no-install-recommends \\\n   build-essential \\\n-  gcc-multilib \\\n+# gcc-multilib can not be installed together with gcc-arm-linux-gnueabi\n+  gcc-7-multilib \\\n   libedit-dev \\\n   libgmp-dev \\\n   libisl-dev \\\n@@ -21,11 +22,20 @@ RUN apt-get update && apt-get build-dep -y clang llvm && apt-get install -y --no\n   unzip \\\n   # Needed for apt-key to work:\n   dirmngr \\\n-  gpg-agent\n+  gpg-agent \\\n+  g++-7-arm-linux-gnueabi\n \n RUN apt-key adv --batch --yes --keyserver keyserver.ubuntu.com --recv-keys 74DA7924C5513486\n RUN add-apt-repository -y 'deb http://apt.dilos.org/dilos dilos2 main'\n \n+WORKDIR /build\n+COPY scripts/musl.sh /build\n+RUN env \\\n+    CC=arm-linux-gnueabi-gcc-7 CFLAGS=\"-march=armv7-a\" \\\n+    CXX=arm-linux-gnueabi-g++-7 CXXFLAGS=\"-march=armv7-a\" \\\n+    bash musl.sh armv7 && \\\n+    rm -rf /build/*\n+\n WORKDIR /tmp\n COPY dist-various-2/shared.sh /tmp/\n COPY dist-various-2/build-cloudabi-toolchain.sh /tmp/\n@@ -58,7 +68,11 @@ ENV \\\n     CXX_sparcv9_sun_solaris=sparcv9-sun-solaris2.10-g++ \\\n     AR_x86_64_sun_solaris=x86_64-sun-solaris2.10-ar \\\n     CC_x86_64_sun_solaris=x86_64-sun-solaris2.10-gcc \\\n-    CXX_x86_64_sun_solaris=x86_64-sun-solaris2.10-g++\n+    CXX_x86_64_sun_solaris=x86_64-sun-solaris2.10-g++ \\\n+    CC_armv7_unknown_linux_gnueabi=arm-linux-gnueabi-gcc-7 \\\n+    CXX_armv7_unknown_linux_gnueabi=arm-linux-gnueabi-g++-7 \\\n+    CC=gcc-7 \\\n+    CXX=g++-7\n \n ENV CARGO_TARGET_X86_64_FUCHSIA_AR /usr/local/bin/llvm-ar\n ENV CARGO_TARGET_X86_64_FUCHSIA_RUSTFLAGS \\\n@@ -81,9 +95,19 @@ ENV TARGETS=$TARGETS,x86_64-unknown-linux-gnux32\n ENV TARGETS=$TARGETS,x86_64-unknown-cloudabi\n ENV TARGETS=$TARGETS,x86_64-fortanix-unknown-sgx\n ENV TARGETS=$TARGETS,nvptx64-nvidia-cuda\n+ENV TARGETS=$TARGETS,armv7-unknown-linux-gnueabi\n+ENV TARGETS=$TARGETS,armv7-unknown-linux-musleabi\n \n ENV X86_FORTANIX_SGX_LIBS=\"/x86_64-fortanix-unknown-sgx/lib/\"\n \n+# As per https://bugs.launchpad.net/ubuntu/+source/gcc-defaults/+bug/1300211\n+# we need asm in the search path for gcc-7 (for gnux32) but not in the search path of the\n+# cross compilers.\n+# Luckily one of the folders is /usr/local/include so symlink /usr/include/asm-generic there\n+RUN ln -s /usr/include/asm-generic /usr/local/include/asm\n+\n ENV RUST_CONFIGURE_ARGS --enable-extended --enable-lld --disable-docs \\\n-  --set target.wasm32-wasi.wasi-root=/wasm32-wasi\n+  --set target.wasm32-wasi.wasi-root=/wasm32-wasi \\\n+  --musl-root-armv7=/musl-armv7\n+\n ENV SCRIPT python2.7 ../x.py dist --target $TARGETS"}, {"sha": "441cb9bfff3eb85372c68afbc910837c6a24ff61", "filename": "src/librustc_target/spec/armv7_unknown_linux_gnueabi.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabi.rs?ref=a2735a3e0dd58e4b41b933731928678b7a2da700", "patch": "@@ -0,0 +1,29 @@\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+\n+// This target is for glibc Linux on ARMv7 without thumb-mode, NEON or\n+// hardfloat.\n+\n+pub fn target() -> TargetResult {\n+    let base = super::linux_base::opts();\n+    Ok(Target {\n+        llvm_target: \"armv7-unknown-linux-gnueabi\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"linux\".to_string(),\n+        target_env: \"gnu\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+\n+        options: TargetOptions {\n+            features: \"+v7,+thumb2,+soft-float,-neon\".to_string(),\n+            cpu: \"generic\".to_string(),\n+            max_atomic_width: Some(64),\n+            abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}__gnu_mcount_nc\".to_string(),\n+            .. base\n+        }\n+    })\n+}"}, {"sha": "c0368e5f0768a6a1cbe93a8cf279a47eaabda0f2", "filename": "src/librustc_target/spec/armv7_unknown_linux_musleabi.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabi.rs?ref=a2735a3e0dd58e4b41b933731928678b7a2da700", "patch": "@@ -0,0 +1,34 @@\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+\n+// This target is for musl Linux on ARMv7 without thumb-mode, NEON or\n+// hardfloat.\n+\n+pub fn target() -> TargetResult {\n+    let base = super::linux_musl_base::opts();\n+    // Most of these settings are copied from the armv7_unknown_linux_gnueabi\n+    // target.\n+    Ok(Target {\n+        // It's important we use \"gnueabi\" and not \"musleabi\" here. LLVM uses it\n+        // to determine the calling convention and float ABI, and it doesn't\n+        // support the \"musleabi\" value.\n+        llvm_target: \"armv7-unknown-linux-gnueabi\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"linux\".to_string(),\n+        target_env: \"musl\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+\n+        options: TargetOptions {\n+            features: \"+v7,+thumb2,+soft-float,-neon\".to_string(),\n+            cpu: \"generic\".to_string(),\n+            max_atomic_width: Some(64),\n+            abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}mcount\".to_string(),\n+            .. base\n+        }\n+    })\n+}"}, {"sha": "b7b6627bbd8ab19224c988888e54403f5015a499", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=a2735a3e0dd58e4b41b933731928678b7a2da700", "patch": "@@ -359,8 +359,10 @@ supported_targets! {\n     (\"armv4t-unknown-linux-gnueabi\", armv4t_unknown_linux_gnueabi),\n     (\"armv5te-unknown-linux-gnueabi\", armv5te_unknown_linux_gnueabi),\n     (\"armv5te-unknown-linux-musleabi\", armv5te_unknown_linux_musleabi),\n+    (\"armv7-unknown-linux-gnueabi\", armv7_unknown_linux_gnueabi),\n     (\"armv7-unknown-linux-gnueabihf\", armv7_unknown_linux_gnueabihf),\n     (\"thumbv7neon-unknown-linux-gnueabihf\", thumbv7neon_unknown_linux_gnueabihf),\n+    (\"armv7-unknown-linux-musleabi\", armv7_unknown_linux_musleabi),\n     (\"armv7-unknown-linux-musleabihf\", armv7_unknown_linux_musleabihf),\n     (\"aarch64-unknown-linux-gnu\", aarch64_unknown_linux_gnu),\n     (\"aarch64-unknown-linux-musl\", aarch64_unknown_linux_musl),"}, {"sha": "2d1a52c920baec262a5ca7510f3cb39357512c78", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2735a3e0dd58e4b41b933731928678b7a2da700/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=a2735a3e0dd58e4b41b933731928678b7a2da700", "patch": "@@ -56,8 +56,10 @@ static TARGETS: &[&str] = &[\n     \"armv7-apple-ios\",\n     \"armv7-linux-androideabi\",\n     \"thumbv7neon-linux-androideabi\",\n+    \"armv7-unknown-linux-gnueabi\",\n     \"armv7-unknown-linux-gnueabihf\",\n     \"thumbv7neon-unknown-linux-gnueabihf\",\n+    \"armv7-unknown-linux-musleabi\",\n     \"armv7-unknown-linux-musleabihf\",\n     \"armebv7r-none-eabi\",\n     \"armebv7r-none-eabihf\","}]}