{"sha": "8a5ce1d615bd2495308da0d36ebd95e00f16eced", "node_id": "C_kwDOAAsO6NoAKDhhNWNlMWQ2MTViZDI0OTUzMDhkYTBkMzZlYmQ5NWUwMGYxNmVjZWQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-10-25T09:13:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-25T09:13:14Z"}, "message": "Rollup merge of #102587 - Enselic:rustc-unix_sigpipe, r=jackh726\n\nrustc: Use `unix_sigpipe` instead of `rustc_driver::set_sigpipe_handler`\n\nThis is the first (known) step towards starting to use `unix_sigpipe` in the wild. Eventually, `rustc_driver::set_sigpipe_handler` can be removed and all clients can use `unix_sigpipe` instead.\n\nFor now we just start using `unix_sigpipe` in one place: `rustc` itself.\n\nIt is easy to manually verify this change. If you remove `#[unix_sigpipe = \"sig_dfl\"]` and run `./x.py build` you will get an ICE when you do `./build/x86_64-unknown-linux-gnu/stage1/bin/rustc --help | false`. Add back `#[unix_sigpipe = \"sig_dfl\"]` and the ICE disappears again.\n\nPR that added `set_sigpipe_handler`: https://github.com/rust-lang/rust/pull/49606\n\nTracking issue for `unix_sigpipe`: #97889\n\nNot sure exactly how to label this PR. Going with T-libs for now since this is a T-libs feature.\n\n````@rustdoc```` labels +T-libs", "tree": {"sha": "82f536e3aa71f490db4a74804c1c7f81dfd5b1f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82f536e3aa71f490db4a74804c1c7f81dfd5b1f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a5ce1d615bd2495308da0d36ebd95e00f16eced", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjV6iqCRBK7hj4Ov3rIwAAs9EIAEesrWhnjlg5sx6RzQR5dshg\ndSgJOx+LrlmuWP1eB32H19Fz6Skis2Lohm1ft9xqOL187HxU5MpB+k+oQH+mGMNv\n1+fCWpD9CTokuDm1UBBHcfEi73zI+z5eBoL2fyh2OYrj5YpAd2jkzv9jFhiJu587\nk1Ti64VInFxNJw/YmE9lAY51ed5jMrLRZswNAHLUmbJMFSsztyjkB+lziJWEdTVz\nScqLOL7E6eiRAMPPk/uuEAHWItyE5mYI8PUpP7xHHqd6LW01iBDPIA56hP9vysUk\nPFQBHlK6/ODtIg8eVZbkGYGlwyuNGHTntOgxjzzxO0paHEhFdDZcm5FdkBm45mU=\n=fbk2\n-----END PGP SIGNATURE-----\n", "payload": "tree 82f536e3aa71f490db4a74804c1c7f81dfd5b1f4\nparent d2d44f619f98383a26c1f8e4da15862d98467d4e\nparent 093b075d327d1c7c7e0730e46f1d5c2d4aa47f5a\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1666689194 +0530\ncommitter GitHub <noreply@github.com> 1666689194 +0530\n\nRollup merge of #102587 - Enselic:rustc-unix_sigpipe, r=jackh726\n\nrustc: Use `unix_sigpipe` instead of `rustc_driver::set_sigpipe_handler`\n\nThis is the first (known) step towards starting to use `unix_sigpipe` in the wild. Eventually, `rustc_driver::set_sigpipe_handler` can be removed and all clients can use `unix_sigpipe` instead.\n\nFor now we just start using `unix_sigpipe` in one place: `rustc` itself.\n\nIt is easy to manually verify this change. If you remove `#[unix_sigpipe = \"sig_dfl\"]` and run `./x.py build` you will get an ICE when you do `./build/x86_64-unknown-linux-gnu/stage1/bin/rustc --help | false`. Add back `#[unix_sigpipe = \"sig_dfl\"]` and the ICE disappears again.\n\nPR that added `set_sigpipe_handler`: https://github.com/rust-lang/rust/pull/49606\n\nTracking issue for `unix_sigpipe`: #97889\n\nNot sure exactly how to label this PR. Going with T-libs for now since this is a T-libs feature.\n\n````@rustdoc```` labels +T-libs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a5ce1d615bd2495308da0d36ebd95e00f16eced", "html_url": "https://github.com/rust-lang/rust/commit/8a5ce1d615bd2495308da0d36ebd95e00f16eced", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a5ce1d615bd2495308da0d36ebd95e00f16eced/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2d44f619f98383a26c1f8e4da15862d98467d4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2d44f619f98383a26c1f8e4da15862d98467d4e", "html_url": "https://github.com/rust-lang/rust/commit/d2d44f619f98383a26c1f8e4da15862d98467d4e"}, {"sha": "093b075d327d1c7c7e0730e46f1d5c2d4aa47f5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/093b075d327d1c7c7e0730e46f1d5c2d4aa47f5a", "html_url": "https://github.com/rust-lang/rust/commit/093b075d327d1c7c7e0730e46f1d5c2d4aa47f5a"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "e21c9b660444083c001c5ca26c6087d956157a36", "filename": "compiler/rustc/src/main.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a5ce1d615bd2495308da0d36ebd95e00f16eced/compiler%2Frustc%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5ce1d615bd2495308da0d36ebd95e00f16eced/compiler%2Frustc%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc%2Fsrc%2Fmain.rs?ref=8a5ce1d615bd2495308da0d36ebd95e00f16eced", "patch": "@@ -1,3 +1,5 @@\n+#![feature(unix_sigpipe)]\n+\n // A note about jemalloc: rustc uses jemalloc when built for CI and\n // distribution. The obvious way to do this is with the `#[global_allocator]`\n // mechanism. However, for complicated reasons (see\n@@ -23,6 +25,7 @@\n // libraries. So we must reference jemalloc symbols one way or another, because\n // this file is the only object code in the rustc executable.\n \n+#[unix_sigpipe = \"sig_dfl\"]\n fn main() {\n     // See the comment at the top of this file for an explanation of this.\n     #[cfg(feature = \"jemalloc-sys\")]\n@@ -58,6 +61,5 @@ fn main() {\n         }\n     }\n \n-    rustc_driver::set_sigpipe_handler();\n     rustc_driver::main()\n }"}]}