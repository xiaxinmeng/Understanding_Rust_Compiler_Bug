{"sha": "c19e4e1c2987383ef686ca831f8115a1179ecb40", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxOWU0ZTFjMjk4NzM4M2VmNjg2Y2E4MzFmODExNWExMTc5ZWNiNDA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-03T00:13:33Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-03T00:15:20Z"}, "message": "rustc: Don't have type_of_arg() rely on the particular lie told by type_of()", "tree": {"sha": "43ca1da490cfc9ec874129a5decef70a05ab3fd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43ca1da490cfc9ec874129a5decef70a05ab3fd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c19e4e1c2987383ef686ca831f8115a1179ecb40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c19e4e1c2987383ef686ca831f8115a1179ecb40", "html_url": "https://github.com/rust-lang/rust/commit/c19e4e1c2987383ef686ca831f8115a1179ecb40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c19e4e1c2987383ef686ca831f8115a1179ecb40/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc722b17c92a91853f75c31e05b9a50d45fbe5e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc722b17c92a91853f75c31e05b9a50d45fbe5e9", "html_url": "https://github.com/rust-lang/rust/commit/fc722b17c92a91853f75c31e05b9a50d45fbe5e9"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "45f59841a96aa193ec81c0e824683117aa9afd90", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c19e4e1c2987383ef686ca831f8115a1179ecb40/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c19e4e1c2987383ef686ca831f8115a1179ecb40/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=c19e4e1c2987383ef686ca831f8115a1179ecb40", "patch": "@@ -621,11 +621,22 @@ fn type_of_inner(@crate_ctxt cx, @ty.t t) -> TypeRef {\n }\n \n fn type_of_arg(@crate_ctxt cx, &ty.arg arg) -> TypeRef {\n-    auto ty = type_of_inner(cx, arg.ty);\n+    alt (arg.ty.struct) {\n+        case (ty.ty_param(_)) {\n+            if (arg.mode == ast.alias) {\n+                ret T_typaram_ptr(cx.tn);\n+            }\n+        }\n+        case (_) {\n+            // fall through\n+        }\n+    }\n+\n+    auto typ = type_of_inner(cx, arg.ty);\n     if (arg.mode == ast.alias) {\n-        ty = T_ptr(ty);\n+        typ = T_ptr(typ);\n     }\n-    ret ty;\n+    ret typ;\n }\n \n // Name sanitation. LLVM will happily accept identifiers with weird names, but"}]}