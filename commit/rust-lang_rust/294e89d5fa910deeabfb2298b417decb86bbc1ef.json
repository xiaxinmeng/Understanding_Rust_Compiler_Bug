{"sha": "294e89d5fa910deeabfb2298b417decb86bbc1ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NGU4OWQ1ZmE5MTBkZWVhYmZiMjI5OGI0MTdkZWNiODZiYmMxZWY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-26T01:50:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-26T01:50:11Z"}, "message": "Rollup merge of #59734 - GuillaumeGomez:improve-rustdoc-failure, r=ollie27\n\nPrevent failure in case no space left on device in rustdoc\n\nFixes #59703.\n\nr? @QuietMisdreavus", "tree": {"sha": "f2f9ff8998cebbc6526d387de457750cb66d2866", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2f9ff8998cebbc6526d387de457750cb66d2866"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/294e89d5fa910deeabfb2298b417decb86bbc1ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcwmPUCRBK7hj4Ov3rIwAAdHIIAFQKDl/dDkP46CIDqdO9Uen0\nwjKDqBGLzg/+Be6lYmzlHHu0CSOgHUE9Tv9MPk/RzY6ygIXUK9P2OCEaUhMf+xp6\nxnEutwfpNsXD9h+4sC2i/+KSOM3IV4Qz+OoRMR783jCIk6AjtVxOQrUVeOuwqQuV\naADtHPeKGSA+Y46lzTfm+bRwM0cu+9AW3TqrNrlY40UOyAaQnrbhFwnzv+fQVlQy\nwav0fen0iMZl2L4OGtBHOy8mJ0UJ7jBTrwQeR+MgF+ObTMHPaGCY3gtXGqyPgj9Z\nx1zOmXvAXLSdxbjx7TIDc2u9mOS9FcY/PJwUEaSg2cmMT2jzBAEcx8PS92DpQaE=\n=mhU7\n-----END PGP SIGNATURE-----\n", "payload": "tree f2f9ff8998cebbc6526d387de457750cb66d2866\nparent 3991285f55a4b7cd92b7ffcdc396a3023076f5cb\nparent feb5a53266902d9c66bf9e5ef5e28fe1534a01a9\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1556243411 +0200\ncommitter GitHub <noreply@github.com> 1556243411 +0200\n\nRollup merge of #59734 - GuillaumeGomez:improve-rustdoc-failure, r=ollie27\n\nPrevent failure in case no space left on device in rustdoc\n\nFixes #59703.\n\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/294e89d5fa910deeabfb2298b417decb86bbc1ef", "html_url": "https://github.com/rust-lang/rust/commit/294e89d5fa910deeabfb2298b417decb86bbc1ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/294e89d5fa910deeabfb2298b417decb86bbc1ef/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3991285f55a4b7cd92b7ffcdc396a3023076f5cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/3991285f55a4b7cd92b7ffcdc396a3023076f5cb", "html_url": "https://github.com/rust-lang/rust/commit/3991285f55a4b7cd92b7ffcdc396a3023076f5cb"}, {"sha": "feb5a53266902d9c66bf9e5ef5e28fe1534a01a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/feb5a53266902d9c66bf9e5ef5e28fe1534a01a9", "html_url": "https://github.com/rust-lang/rust/commit/feb5a53266902d9c66bf9e5ef5e28fe1534a01a9"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "0bc06ea8b3be37f7969ae588df48a4529d691c70", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/294e89d5fa910deeabfb2298b417decb86bbc1ef/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/294e89d5fa910deeabfb2298b417decb86bbc1ef/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=294e89d5fa910deeabfb2298b417decb86bbc1ef", "patch": "@@ -1358,7 +1358,8 @@ fn write_minify_replacer<W: Write>(\n /// static HTML tree. Each component in the cleaned path will be passed as an\n /// argument to `f`. The very last component of the path (ie the file name) will\n /// be passed to `f` if `keep_filename` is true, and ignored otherwise.\n-fn clean_srcpath<F>(src_root: &Path, p: &Path, keep_filename: bool, mut f: F) where\n+fn clean_srcpath<F>(src_root: &Path, p: &Path, keep_filename: bool, mut f: F)\n+where\n     F: FnMut(&OsStr),\n {\n     // make it relative, if possible\n@@ -1470,11 +1471,11 @@ impl<'a> SourceCollector<'a> {\n         let mut href = String::new();\n         clean_srcpath(&self.scx.src_root, &p, false, |component| {\n             cur.push(component);\n-            fs::create_dir_all(&cur).unwrap();\n             root_path.push_str(\"../\");\n             href.push_str(&component.to_string_lossy());\n             href.push('/');\n         });\n+        fs::create_dir_all(&cur)?;\n         let mut fname = p.file_name()\n                          .expect(\"source has no filename\")\n                          .to_os_string();\n@@ -1483,7 +1484,7 @@ impl<'a> SourceCollector<'a> {\n         href.push_str(&fname.to_string_lossy());\n \n         let mut w = BufWriter::new(File::create(&cur)?);\n-        let title = format!(\"{} -- source\", cur.file_name().unwrap()\n+        let title = format!(\"{} -- source\", cur.file_name().expect(\"failed to get file name\")\n                                                .to_string_lossy());\n         let desc = format!(\"Source to the Rust file `{}`.\", filename);\n         let page = layout::Page {"}]}