{"sha": "bc1579060981b5e95a18409e876c92bf0c9307e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMTU3OTA2MDk4MWI1ZTk1YTE4NDA5ZTg3NmM5MmJmMGM5MzA3ZTY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-05-30T16:54:05Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-06-15T16:06:57Z"}, "message": "Tweak output for overlapping required/captured spans", "tree": {"sha": "31709514a8f1ecfa6e1293da12f6894d05095f64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31709514a8f1ecfa6e1293da12f6894d05095f64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc1579060981b5e95a18409e876c92bf0c9307e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc1579060981b5e95a18409e876c92bf0c9307e6", "html_url": "https://github.com/rust-lang/rust/commit/bc1579060981b5e95a18409e876c92bf0c9307e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc1579060981b5e95a18409e876c92bf0c9307e6/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e75588934c01d6bc9abb02979eb61168a7b5c598", "url": "https://api.github.com/repos/rust-lang/rust/commits/e75588934c01d6bc9abb02979eb61168a7b5c598", "html_url": "https://github.com/rust-lang/rust/commit/e75588934c01d6bc9abb02979eb61168a7b5c598"}], "stats": {"total": 87, "additions": 15, "deletions": 72}, "files": [{"sha": "253057536f133aad842329232e435b1177a1caa5", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=bc1579060981b5e95a18409e876c92bf0c9307e6", "patch": "@@ -76,12 +76,10 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n                             //    |           |\n                             //    |           this data with the anonymous lifetime `'_`...\n                             //    |\n-                            // note: ...is required to be `'static` by this\n-                            //    |\n-                            // LL | fn elided3(x: &i32) -> Box<dyn Debug> { Box::new(x) }\n-                            //    |                                         ^^^^^^^^^^^\n-                            err.span_label(sup_origin.span(), \"...is captured here...\");\n-                            err.span_note(return_sp, \"...and required to be `'static` by this\");\n+                            err.span_label(\n+                                sup_origin.span(),\n+                                \"...is captured here with a `'static` requirement\",\n+                            );\n                         } else if sup_origin.span() <= return_sp {\n                             err.span_label(sup_origin.span(), \"...is captured here...\");\n                             err.span_label(return_sp, \"...and required to be `'static` by this\");"}, {"sha": "82e44cff9cc445e2a12fb21801e376b160bae1ed", "filename": "src/test/ui/impl-trait/must_outlive_least_region_or_bound.stderr", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.stderr?ref=bc1579060981b5e95a18409e876c92bf0c9307e6", "patch": "@@ -109,15 +109,10 @@ error: cannot infer an appropriate lifetime\n   --> $DIR/must_outlive_least_region_or_bound.rs:18:50\n    |\n LL | fn elided3(x: &i32) -> Box<dyn Debug> { Box::new(x) }\n-   |               ----                               ^ ...is captured here...\n+   |               ----                               ^ ...is captured here with a `'static` requirement\n    |               |\n    |               this data with the anonymous lifetime `'_`...\n    |\n-note: ...and required to be `'static` by this\n-  --> $DIR/must_outlive_least_region_or_bound.rs:18:41\n-   |\n-LL | fn elided3(x: &i32) -> Box<dyn Debug> { Box::new(x) }\n-   |                                         ^^^^^^^^^^^\n help: to permit non-static references in a trait object value, you can add an explicit bound for the anonymous lifetime `'_`\n    |\n LL | fn elided3(x: &i32) -> Box<dyn Debug + '_> { Box::new(x) }\n@@ -127,15 +122,10 @@ error: cannot infer an appropriate lifetime\n   --> $DIR/must_outlive_least_region_or_bound.rs:21:59\n    |\n LL | fn explicit3<'a>(x: &'a i32) -> Box<dyn Debug> { Box::new(x) }\n-   |                     -------                               ^ ...is captured here...\n+   |                     -------                               ^ ...is captured here with a `'static` requirement\n    |                     |\n    |                     this data with lifetime `'a`...\n    |\n-note: ...and required to be `'static` by this\n-  --> $DIR/must_outlive_least_region_or_bound.rs:21:50\n-   |\n-LL | fn explicit3<'a>(x: &'a i32) -> Box<dyn Debug> { Box::new(x) }\n-   |                                                  ^^^^^^^^^^^\n help: to permit non-static references in a trait object value, you can add an explicit bound for lifetime `'a`\n    |\n LL | fn explicit3<'a>(x: &'a i32) -> Box<dyn Debug + 'a> { Box::new(x) }\n@@ -145,15 +135,10 @@ error: cannot infer an appropriate lifetime\n   --> $DIR/must_outlive_least_region_or_bound.rs:24:60\n    |\n LL | fn elided4(x: &i32) -> Box<dyn Debug + 'static> { Box::new(x) }\n-   |               ----                                         ^ ...is captured here...\n+   |               ----                                         ^ ...is captured here with a `'static` requirement\n    |               |\n    |               this data with the anonymous lifetime `'_`...\n    |\n-note: ...and required to be `'static` by this\n-  --> $DIR/must_outlive_least_region_or_bound.rs:24:51\n-   |\n-LL | fn elided4(x: &i32) -> Box<dyn Debug + 'static> { Box::new(x) }\n-   |                                                   ^^^^^^^^^^^\n help: consider changing the trait object's explicit `'static` bound to the anonymous lifetime `'_`\n    |\n LL | fn elided4(x: &i32) -> Box<dyn Debug + '_> { Box::new(x) }\n@@ -167,13 +152,8 @@ error: cannot infer an appropriate lifetime\n   --> $DIR/must_outlive_least_region_or_bound.rs:27:69\n    |\n LL | fn explicit4<'a>(x: &'a i32) -> Box<dyn Debug + 'static> { Box::new(x) }\n-   |                     ------- this data with lifetime `'a`...         ^ ...is captured here...\n+   |                     ------- this data with lifetime `'a`...         ^ ...is captured here with a `'static` requirement\n    |\n-note: ...and required to be `'static` by this\n-  --> $DIR/must_outlive_least_region_or_bound.rs:27:60\n-   |\n-LL | fn explicit4<'a>(x: &'a i32) -> Box<dyn Debug + 'static> { Box::new(x) }\n-   |                                                            ^^^^^^^^^^^\n help: consider changing the trait object's explicit `'static` bound to lifetime `'a`\n    |\n LL | fn explicit4<'a>(x: &'a i32) -> Box<dyn Debug + 'a> { Box::new(x) }"}, {"sha": "a254343cd1bb75b57d6b9fd755d487552cb645b7", "filename": "src/test/ui/issues/issue-16922.stderr", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Ftest%2Fui%2Fissues%2Fissue-16922.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Ftest%2Fui%2Fissues%2Fissue-16922.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16922.stderr?ref=bc1579060981b5e95a18409e876c92bf0c9307e6", "patch": "@@ -4,13 +4,8 @@ error: cannot infer an appropriate lifetime\n LL | fn foo<T: Any>(value: &T) -> Box<dyn Any> {\n    |                       -- this data with the anonymous lifetime `'_`...\n LL |     Box::new(value) as Box<dyn Any>\n-   |              ^^^^^ ...is captured here...\n+   |              ^^^^^ ...is captured here with a `'static` requirement\n    |\n-note: ...and required to be `'static` by this\n-  --> $DIR/issue-16922.rs:4:5\n-   |\n-LL |     Box::new(value) as Box<dyn Any>\n-   |     ^^^^^^^^^^^^^^^\n help: to permit non-static references in a trait object value, you can add an explicit bound for the anonymous lifetime `'_`\n    |\n LL | fn foo<T: Any>(value: &T) -> Box<dyn Any + '_> {"}, {"sha": "97d1f3579fcd8fac7177a7efa4a95312bda60916", "filename": "src/test/ui/regions/region-object-lifetime-in-coercion.stderr", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.stderr?ref=bc1579060981b5e95a18409e876c92bf0c9307e6", "patch": "@@ -4,13 +4,8 @@ error: cannot infer an appropriate lifetime\n LL | fn a(v: &[u8]) -> Box<dyn Foo + 'static> {\n    |         ----- this data with the anonymous lifetime `'_`...\n LL |     let x: Box<dyn Foo + 'static> = Box::new(v);\n-   |                                              ^ ...is captured here...\n+   |                                              ^ ...is captured here with a `'static` requirement\n    |\n-note: ...and required to be `'static` by this\n-  --> $DIR/region-object-lifetime-in-coercion.rs:8:37\n-   |\n-LL |     let x: Box<dyn Foo + 'static> = Box::new(v);\n-   |                                     ^^^^^^^^^^^\n help: consider changing the trait object's explicit `'static` bound to the anonymous lifetime `'_`\n    |\n LL | fn a(v: &[u8]) -> Box<dyn Foo + '_> {\n@@ -26,13 +21,8 @@ error: cannot infer an appropriate lifetime\n LL | fn b(v: &[u8]) -> Box<dyn Foo + 'static> {\n    |         ----- this data with the anonymous lifetime `'_`...\n LL |     Box::new(v)\n-   |              ^ ...is captured here...\n+   |              ^ ...is captured here with a `'static` requirement\n    |\n-note: ...and required to be `'static` by this\n-  --> $DIR/region-object-lifetime-in-coercion.rs:13:5\n-   |\n-LL |     Box::new(v)\n-   |     ^^^^^^^^^^^\n help: consider changing the trait object's explicit `'static` bound to the anonymous lifetime `'_`\n    |\n LL | fn b(v: &[u8]) -> Box<dyn Foo + '_> {\n@@ -49,13 +39,8 @@ LL | fn c(v: &[u8]) -> Box<dyn Foo> {\n    |         ----- this data with the anonymous lifetime `'_`...\n ...\n LL |     Box::new(v)\n-   |              ^ ...is captured here...\n-   |\n-note: ...and required to be `'static` by this\n-  --> $DIR/region-object-lifetime-in-coercion.rs:19:5\n+   |              ^ ...is captured here with a `'static` requirement\n    |\n-LL |     Box::new(v)\n-   |     ^^^^^^^^^^^\n help: to permit non-static references in a trait object value, you can add an explicit bound for the anonymous lifetime `'_`\n    |\n LL | fn c(v: &[u8]) -> Box<dyn Foo + '_> {"}, {"sha": "3d707f2d999418ac9c34e23ce6aedae039f68d42", "filename": "src/test/ui/regions/regions-close-object-into-object-2.stderr", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.stderr?ref=bc1579060981b5e95a18409e876c92bf0c9307e6", "patch": "@@ -4,13 +4,8 @@ error: cannot infer an appropriate lifetime\n LL | fn g<'a, T: 'static>(v: Box<dyn A<T> + 'a>) -> Box<dyn X + 'static> {\n    |                         ------------------ this data with lifetime `'a`...\n LL |     box B(&*v) as Box<dyn X>\n-   |           ^^^ ...is captured here...\n+   |           ^^^ ...is captured here with a `'static` requirement\n    |\n-note: ...and required to be `'static` by this\n-  --> $DIR/regions-close-object-into-object-2.rs:10:5\n-   |\n-LL |     box B(&*v) as Box<dyn X>\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider changing the trait object's explicit `'static` bound to lifetime `'a`\n    |\n LL | fn g<'a, T: 'static>(v: Box<dyn A<T> + 'a>) -> Box<dyn X + 'a> {"}, {"sha": "70282c8cbdb30b57bdd032c8bd606000b44c28c1", "filename": "src/test/ui/regions/regions-close-object-into-object-4.stderr", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.stderr?ref=bc1579060981b5e95a18409e876c92bf0c9307e6", "patch": "@@ -4,13 +4,8 @@ error: cannot infer an appropriate lifetime\n LL | fn i<'a, T, U>(v: Box<dyn A<U>+'a>) -> Box<dyn X + 'static> {\n    |                   ---------------- this data with lifetime `'a`...\n LL |     box B(&*v) as Box<dyn X>\n-   |           ^^^ ...is captured here...\n+   |           ^^^ ...is captured here with a `'static` requirement\n    |\n-note: ...and required to be `'static` by this\n-  --> $DIR/regions-close-object-into-object-4.rs:10:5\n-   |\n-LL |     box B(&*v) as Box<dyn X>\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider changing the trait object's explicit `'static` bound to lifetime `'a`\n    |\n LL | fn i<'a, T, U>(v: Box<dyn A<U>+'a>) -> Box<dyn X + 'a> {"}, {"sha": "8f93fad7fe9d8aa99981f774dd6a20d4f4246789", "filename": "src/test/ui/regions/regions-proc-bound-capture.stderr", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Ftest%2Fui%2Fregions%2Fregions-proc-bound-capture.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc1579060981b5e95a18409e876c92bf0c9307e6/src%2Ftest%2Fui%2Fregions%2Fregions-proc-bound-capture.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-proc-bound-capture.stderr?ref=bc1579060981b5e95a18409e876c92bf0c9307e6", "patch": "@@ -5,13 +5,8 @@ LL | fn static_proc(x: &isize) -> Box<dyn FnMut() -> (isize) + 'static> {\n    |                   ------ this data with the anonymous lifetime `'_`...\n LL |     // This is illegal, because the region bound on `proc` is 'static.\n LL |     Box::new(move || { *x })\n-   |              ^^^^^^^^^^^^^^ ...is captured here...\n+   |              ^^^^^^^^^^^^^^ ...is captured here with a `'static` requirement\n    |\n-note: ...and required to be `'static` by this\n-  --> $DIR/regions-proc-bound-capture.rs:9:5\n-   |\n-LL |     Box::new(move || { *x })\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider changing the trait object's explicit `'static` bound to the anonymous lifetime `'_`\n    |\n LL | fn static_proc(x: &isize) -> Box<dyn FnMut() -> (isize) + '_> {"}]}