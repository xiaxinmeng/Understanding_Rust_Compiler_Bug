{"sha": "fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94", "node_id": "C_kwDOAAsO6NoAKGZkMDA1YjA2YmIzYTk1MTdlNzI3NWM5OWRmYmJmN2QyOWI2YTNmOTQ", "commit": {"author": {"name": "James Dietz", "email": "jamesthespeedy@gmail.com", "date": "2023-05-03T17:37:37Z"}, "committer": {"name": "James Dietz", "email": "jamesthespeedy@gmail.com", "date": "2023-05-06T22:31:50Z"}, "message": "delete whitelist and add checks to check_item() for missing_docs\nadd test and bless", "tree": {"sha": "c0b1095d9dde2d54cfdce2cc93aea70c23c58725", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0b1095d9dde2d54cfdce2cc93aea70c23c58725"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94", "html_url": "https://github.com/rust-lang/rust/commit/fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94/comments", "author": {"login": "mj10021", "id": 5280405, "node_id": "MDQ6VXNlcjUyODA0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5280405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mj10021", "html_url": "https://github.com/mj10021", "followers_url": "https://api.github.com/users/mj10021/followers", "following_url": "https://api.github.com/users/mj10021/following{/other_user}", "gists_url": "https://api.github.com/users/mj10021/gists{/gist_id}", "starred_url": "https://api.github.com/users/mj10021/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mj10021/subscriptions", "organizations_url": "https://api.github.com/users/mj10021/orgs", "repos_url": "https://api.github.com/users/mj10021/repos", "events_url": "https://api.github.com/users/mj10021/events{/privacy}", "received_events_url": "https://api.github.com/users/mj10021/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mj10021", "id": 5280405, "node_id": "MDQ6VXNlcjUyODA0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5280405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mj10021", "html_url": "https://github.com/mj10021", "followers_url": "https://api.github.com/users/mj10021/followers", "following_url": "https://api.github.com/users/mj10021/following{/other_user}", "gists_url": "https://api.github.com/users/mj10021/gists{/gist_id}", "starred_url": "https://api.github.com/users/mj10021/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mj10021/subscriptions", "organizations_url": "https://api.github.com/users/mj10021/orgs", "repos_url": "https://api.github.com/users/mj10021/repos", "events_url": "https://api.github.com/users/mj10021/events{/privacy}", "received_events_url": "https://api.github.com/users/mj10021/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31a4f2da575f5e335bdbbe7f12a694f9e74ad0a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/31a4f2da575f5e335bdbbe7f12a694f9e74ad0a1", "html_url": "https://github.com/rust-lang/rust/commit/31a4f2da575f5e335bdbbe7f12a694f9e74ad0a1"}], "stats": {"total": 88, "additions": 39, "deletions": 49}, "files": [{"sha": "95dfec14fd749153850cd3308003066e6d713053", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94", "patch": "@@ -547,32 +547,13 @@ impl<'tcx> LateLintPass<'tcx> for MissingDoc {\n     }\n \n     fn check_item(&mut self, cx: &LateContext<'_>, it: &hir::Item<'_>) {\n-        match it.kind {\n-            hir::ItemKind::Trait(..) => {\n-                // Issue #11592: traits are always considered exported, even when private.\n-                if cx.tcx.visibility(it.owner_id)\n-                    == ty::Visibility::Restricted(\n-                        cx.tcx.parent_module_from_def_id(it.owner_id.def_id).to_def_id(),\n-                    )\n-                {\n-                    return;\n-                }\n-            }\n-            hir::ItemKind::TyAlias(..)\n-            | hir::ItemKind::Fn(..)\n-            | hir::ItemKind::Macro(..)\n-            | hir::ItemKind::Mod(..)\n-            | hir::ItemKind::Enum(..)\n-            | hir::ItemKind::Struct(..)\n-            | hir::ItemKind::Union(..)\n-            | hir::ItemKind::Const(..)\n-            | hir::ItemKind::Static(..) => {}\n-\n-            _ => return,\n-        };\n+        // Previously the Impl and Use types have been excluded from missing docs,\n+        // so we will continue to exclude them for compatibility\n+        if let hir::ItemKind::Impl(..) | hir::ItemKind::Use(..) = it.kind {\n+            return;\n+        }\n \n         let (article, desc) = cx.tcx.article_and_description(it.owner_id.to_def_id());\n-\n         self.check_missing_docs_attrs(cx, it.owner_id.def_id, article, desc);\n     }\n "}, {"sha": "e4c9f8f559b18219a14e094284c8e4cb20782ff5", "filename": "tests/ui/lint/lint-missing-doc.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94/tests%2Fui%2Flint%2Flint-missing-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94/tests%2Fui%2Flint%2Flint-missing-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Flint-missing-doc.rs?ref=fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94", "patch": "@@ -3,6 +3,7 @@\n #![deny(missing_docs)]\n #![allow(dead_code)]\n #![feature(associated_type_defaults, extern_types)]\n+#![feature(trait_alias)]\n \n //! Some garbage docs for the crate here\n #![doc=\"More garbage\"]\n@@ -202,4 +203,6 @@ extern \"C\" {\n     //~^ ERROR: missing documentation for a foreign type\n }\n \n+pub trait T = Sync; //~ ERROR: missing documentation for a trait alias\n+\n fn main() {}"}, {"sha": "c94bd3b8dfb3fd686bf3d65fbc38bb4f483f1589", "filename": "tests/ui/lint/lint-missing-doc.stderr", "status": "modified", "additions": 31, "deletions": 25, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94/tests%2Fui%2Flint%2Flint-missing-doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94/tests%2Fui%2Flint%2Flint-missing-doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Flint-missing-doc.stderr?ref=fd005b06bb3a9517e7275c99dfbbf7d29b6a3f94", "patch": "@@ -1,5 +1,5 @@\n error: missing documentation for a type alias\n-  --> $DIR/lint-missing-doc.rs:11:1\n+  --> $DIR/lint-missing-doc.rs:12:1\n    |\n LL | pub type PubTypedef = String;\n    | ^^^^^^^^^^^^^^^^^^^\n@@ -11,142 +11,148 @@ LL | #![deny(missing_docs)]\n    |         ^^^^^^^^^^^^\n \n error: missing documentation for a struct\n-  --> $DIR/lint-missing-doc.rs:18:1\n+  --> $DIR/lint-missing-doc.rs:19:1\n    |\n LL | pub struct PubFoo {\n    | ^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/lint-missing-doc.rs:19:5\n+  --> $DIR/lint-missing-doc.rs:20:5\n    |\n LL |     pub a: isize,\n    |     ^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/lint-missing-doc.rs:30:1\n+  --> $DIR/lint-missing-doc.rs:31:1\n    |\n LL | pub mod pub_module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/lint-missing-doc.rs:34:1\n+  --> $DIR/lint-missing-doc.rs:35:1\n    |\n LL | pub fn foo2() {}\n    | ^^^^^^^^^^^^^\n \n error: missing documentation for a trait\n-  --> $DIR/lint-missing-doc.rs:52:1\n+  --> $DIR/lint-missing-doc.rs:53:1\n    |\n LL | pub trait C {\n    | ^^^^^^^^^^^\n \n error: missing documentation for a method\n-  --> $DIR/lint-missing-doc.rs:53:5\n+  --> $DIR/lint-missing-doc.rs:54:5\n    |\n LL |     fn foo(&self);\n    |     ^^^^^^^^^^^^^^\n \n error: missing documentation for a method\n-  --> $DIR/lint-missing-doc.rs:54:5\n+  --> $DIR/lint-missing-doc.rs:55:5\n    |\n LL |     fn foo_with_impl(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for an associated function\n-  --> $DIR/lint-missing-doc.rs:55:5\n+  --> $DIR/lint-missing-doc.rs:56:5\n    |\n LL |     fn foo_no_self();\n    |     ^^^^^^^^^^^^^^^^^\n \n error: missing documentation for an associated function\n-  --> $DIR/lint-missing-doc.rs:56:5\n+  --> $DIR/lint-missing-doc.rs:57:5\n    |\n LL |     fn foo_no_self_with_impl() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for an associated type\n-  --> $DIR/lint-missing-doc.rs:66:5\n+  --> $DIR/lint-missing-doc.rs:67:5\n    |\n LL |     type AssociatedType;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for an associated type\n-  --> $DIR/lint-missing-doc.rs:67:5\n+  --> $DIR/lint-missing-doc.rs:68:5\n    |\n LL |     type AssociatedTypeDef = Self;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for an associated function\n-  --> $DIR/lint-missing-doc.rs:83:5\n+  --> $DIR/lint-missing-doc.rs:84:5\n    |\n LL |     pub fn foo() {}\n    |     ^^^^^^^^^^^^\n \n error: missing documentation for an enum\n-  --> $DIR/lint-missing-doc.rs:120:1\n+  --> $DIR/lint-missing-doc.rs:121:1\n    |\n LL | pub enum PubBaz {\n    | ^^^^^^^^^^^^^^^\n \n error: missing documentation for a variant\n-  --> $DIR/lint-missing-doc.rs:121:5\n+  --> $DIR/lint-missing-doc.rs:122:5\n    |\n LL |     PubBazA {\n    |     ^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/lint-missing-doc.rs:122:9\n+  --> $DIR/lint-missing-doc.rs:123:9\n    |\n LL |         a: isize,\n    |         ^^^^^^^^\n \n error: missing documentation for a constant\n-  --> $DIR/lint-missing-doc.rs:153:1\n+  --> $DIR/lint-missing-doc.rs:154:1\n    |\n LL | pub const FOO4: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-  --> $DIR/lint-missing-doc.rs:163:1\n+  --> $DIR/lint-missing-doc.rs:164:1\n    |\n LL | pub static BAR4: u32 = 0;\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/lint-missing-doc.rs:169:5\n+  --> $DIR/lint-missing-doc.rs:170:5\n    |\n LL |     pub fn undocumented1() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/lint-missing-doc.rs:170:5\n+  --> $DIR/lint-missing-doc.rs:171:5\n    |\n LL |     pub fn undocumented2() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/lint-missing-doc.rs:176:9\n+  --> $DIR/lint-missing-doc.rs:177:9\n    |\n LL |         pub fn also_undocumented1() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/lint-missing-doc.rs:191:5\n+  --> $DIR/lint-missing-doc.rs:192:5\n    |\n LL |     pub fn extern_fn_undocumented(f: f32) -> f32;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-  --> $DIR/lint-missing-doc.rs:196:5\n+  --> $DIR/lint-missing-doc.rs:197:5\n    |\n LL |     pub static EXTERN_STATIC_UNDOCUMENTED: u8;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a foreign type\n-  --> $DIR/lint-missing-doc.rs:201:5\n+  --> $DIR/lint-missing-doc.rs:202:5\n    |\n LL |     pub type ExternTyUndocumented;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 24 previous errors\n+error: missing documentation for a trait alias\n+  --> $DIR/lint-missing-doc.rs:206:1\n+   |\n+LL | pub trait T = Sync;\n+   | ^^^^^^^^^^^\n+\n+error: aborting due to 25 previous errors\n "}]}