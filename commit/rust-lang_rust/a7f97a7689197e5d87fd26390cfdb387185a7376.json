{"sha": "a7f97a7689197e5d87fd26390cfdb387185a7376", "node_id": "C_kwDOAAsO6NoAKGE3Zjk3YTc2ODkxOTdlNWQ4N2ZkMjYzOTBjZmRiMzg3MTg1YTczNzY", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-02-01T10:44:59Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-02-02T08:17:18Z"}, "message": "Use `rust_2018` instead of `!is_rust_2015`", "tree": {"sha": "890fc9d8dd0c2a344e5296df044f40a94ece18aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/890fc9d8dd0c2a344e5296df044f40a94ece18aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7f97a7689197e5d87fd26390cfdb387185a7376", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7f97a7689197e5d87fd26390cfdb387185a7376", "html_url": "https://github.com/rust-lang/rust/commit/a7f97a7689197e5d87fd26390cfdb387185a7376", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7f97a7689197e5d87fd26390cfdb387185a7376/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fe8ae792e4efd59ea37116a44391b4abdd2d7be", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fe8ae792e4efd59ea37116a44391b4abdd2d7be", "html_url": "https://github.com/rust-lang/rust/commit/9fe8ae792e4efd59ea37116a44391b4abdd2d7be"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "18aa20cee421fbeefea627bde759237e1b1e7047", "filename": "compiler/rustc_parse/src/parser/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7f97a7689197e5d87fd26390cfdb387185a7376/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7f97a7689197e5d87fd26390cfdb387185a7376/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs?ref=a7f97a7689197e5d87fd26390cfdb387185a7376", "patch": "@@ -673,7 +673,7 @@ impl<'a> Parser<'a> {\n     /// Is a `dyn B0 + ... + Bn` type allowed here?\n     fn is_explicit_dyn_type(&mut self) -> bool {\n         self.check_keyword(kw::Dyn)\n-            && (!self.token.uninterpolated_span().is_rust_2015()\n+            && (self.token.uninterpolated_span().rust_2018()\n                 || self.look_ahead(1, |t| {\n                     (t.can_begin_bound() || t.kind == TokenKind::BinOp(token::Star))\n                         && !can_continue_type_after_non_fn_ident(t)"}]}