{"sha": "dfe95d735bf9bb0d49d2ab90438577089207c8a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmZTk1ZDczNWJmOWJiMGQ0OWQyYWI5MDQzODU3NzA4OTIwN2M4YTA=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-12-26T15:42:57Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-12-26T15:42:57Z"}, "message": "Remove Arc from RawVisibility\n\nNow that it's not used as a direct query return value anymore, it doesn't need\nto be cheaply cloneable anymore.", "tree": {"sha": "443773efb235615480781e56b199d6f4b94b9654", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/443773efb235615480781e56b199d6f4b94b9654"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfe95d735bf9bb0d49d2ab90438577089207c8a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfe95d735bf9bb0d49d2ab90438577089207c8a0", "html_url": "https://github.com/rust-lang/rust/commit/dfe95d735bf9bb0d49d2ab90438577089207c8a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfe95d735bf9bb0d49d2ab90438577089207c8a0/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04cf98f8a6a67c899dd290d4b66c37794b24a568", "url": "https://api.github.com/repos/rust-lang/rust/commits/04cf98f8a6a67c899dd290d4b66c37794b24a568", "html_url": "https://github.com/rust-lang/rust/commit/04cf98f8a6a67c899dd290d4b66c37794b24a568"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "ad3f099810d1ddac316c31c6de79482dbb0a6b65", "filename": "crates/ra_hir_def/src/visibility.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/dfe95d735bf9bb0d49d2ab90438577089207c8a0/crates%2Fra_hir_def%2Fsrc%2Fvisibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfe95d735bf9bb0d49d2ab90438577089207c8a0/crates%2Fra_hir_def%2Fsrc%2Fvisibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fvisibility.rs?ref=dfe95d735bf9bb0d49d2ab90438577089207c8a0", "patch": "@@ -1,7 +1,5 @@\n //! Defines hir-level representation of visibility (e.g. `pub` and `pub(crate)`).\n \n-use std::sync::Arc;\n-\n use hir_expand::{hygiene::Hygiene, InFile};\n use ra_syntax::ast;\n \n@@ -14,20 +12,17 @@ use crate::{\n /// Visibility of an item, not yet resolved.\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub enum RawVisibility {\n-    // FIXME: We could avoid the allocation in many cases by special-casing\n-    // pub(crate), pub(super) and private. Alternatively, `ModPath` could be\n-    // made to contain an Arc<[Segment]> instead of a Vec?\n     /// `pub(in module)`, `pub(crate)` or `pub(super)`. Also private, which is\n     /// equivalent to `pub(self)`.\n-    Module(Arc<ModPath>),\n+    Module(ModPath),\n     /// `pub`.\n     Public,\n }\n \n impl RawVisibility {\n-    fn private() -> RawVisibility {\n+    const fn private() -> RawVisibility {\n         let path = ModPath { kind: PathKind::Super(0), segments: Vec::new() };\n-        RawVisibility::Module(Arc::new(path))\n+        RawVisibility::Module(path)\n     }\n \n     pub(crate) fn from_ast(\n@@ -52,15 +47,15 @@ impl RawVisibility {\n                     None => return RawVisibility::private(),\n                     Some(path) => path,\n                 };\n-                RawVisibility::Module(Arc::new(path))\n+                RawVisibility::Module(path)\n             }\n             ast::VisibilityKind::PubCrate => {\n                 let path = ModPath { kind: PathKind::Crate, segments: Vec::new() };\n-                RawVisibility::Module(Arc::new(path))\n+                RawVisibility::Module(path)\n             }\n             ast::VisibilityKind::PubSuper => {\n                 let path = ModPath { kind: PathKind::Super(1), segments: Vec::new() };\n-                RawVisibility::Module(Arc::new(path))\n+                RawVisibility::Module(path)\n             }\n             ast::VisibilityKind::Pub => RawVisibility::Public,\n         }"}]}