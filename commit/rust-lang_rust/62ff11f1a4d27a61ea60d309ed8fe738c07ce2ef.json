{"sha": "62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZmYxMWYxYTRkMjdhNjFlYTYwZDMwOWVkOGZlNzM4YzA3Y2UyZWY=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-03T20:21:27Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-19T03:27:58Z"}, "message": "Add `is_const_impl_raw` query", "tree": {"sha": "e7fe97acae5f9f0630d68a8d2a224b769039fea7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7fe97acae5f9f0630d68a8d2a224b769039fea7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef", "html_url": "https://github.com/rust-lang/rust/commit/62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0e5d82e1677c82d209b214bbfc2cc5705c2336a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0e5d82e1677c82d209b214bbfc2cc5705c2336a", "html_url": "https://github.com/rust-lang/rust/commit/e0e5d82e1677c82d209b214bbfc2cc5705c2336a"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "3cee10f1356bf5d17de7d5b775a6148d46835099", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef", "patch": "@@ -279,6 +279,14 @@ rustc_queries! {\n             desc { |tcx| \"checking if item is const fn: `{}`\", tcx.def_path_str(key) }\n         }\n \n+        /// Returns `true` if this is a const `impl`. **Do not call this function manually.**\n+        ///\n+        /// This query caches the base data for the `is_const_impl` helper function, which also\n+        /// takes into account stability attributes (e.g., `#[rustc_const_unstable]`).\n+        query is_const_impl_raw(key: DefId) -> bool {\n+            desc { |tcx| \"checking if item is const impl: `{}`\", tcx.def_path_str(key) }\n+        }\n+\n         query asyncness(key: DefId) -> hir::IsAsync {\n             desc { |tcx| \"checking if the function is async: `{}`\", tcx.def_path_str(key) }\n         }"}, {"sha": "5706d435f7e9263077de478b6589e5541d1408fb", "filename": "src/librustc_mir/const_eval/fn_queries.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Ffn_queries.rs?ref=62ff11f1a4d27a61ea60d309ed8fe738c07ce2ef", "patch": "@@ -3,7 +3,7 @@ use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc_attr as attr;\n use rustc_hir as hir;\n-use rustc_hir::def_id::DefId;\n+use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_span::symbol::Symbol;\n use rustc_target::spec::abi::Abi;\n \n@@ -119,6 +119,19 @@ pub fn provide(providers: &mut Providers<'_>) {\n         }\n     }\n \n+    /// Checks whether the given item is an `impl` that has a `const` modifier.\n+    fn is_const_impl_raw(tcx: TyCtxt<'_>, def_id: LocalDefId) -> bool {\n+        let hir_id = tcx.hir().local_def_id_to_hir_id(def_id);\n+        let node = tcx.hir().get(hir_id);\n+        matches!(\n+            node,\n+            hir::Node::Item(hir::Item {\n+                kind: hir::ItemKind::Impl { constness: hir::Constness::Const, .. },\n+                ..\n+            })\n+        )\n+    }\n+\n     fn is_promotable_const_fn(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n         is_const_fn(tcx, def_id)\n             && match tcx.lookup_const_stability(def_id) {\n@@ -148,6 +161,7 @@ pub fn provide(providers: &mut Providers<'_>) {\n \n     *providers = Providers {\n         is_const_fn_raw,\n+        is_const_impl_raw: |tcx, def_id| is_const_impl_raw(tcx, LocalDefId::from_def_id(def_id)),\n         is_promotable_const_fn,\n         const_fn_is_allowed_fn_ptr,\n         ..*providers"}]}