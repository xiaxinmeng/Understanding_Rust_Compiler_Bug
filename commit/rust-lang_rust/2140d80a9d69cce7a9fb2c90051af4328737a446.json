{"sha": "2140d80a9d69cce7a9fb2c90051af4328737a446", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNDBkODBhOWQ2OWNjZTdhOWZiMmM5MDA1MWFmNDMyODczN2E0NDY=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-01T15:32:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-01T15:32:23Z"}, "message": "Add note about possible future improvement\n\nCo-authored-by: David Tolnay <dtolnay@gmail.com>", "tree": {"sha": "a480aaacbacfabe38783426bfc069f75ee14fd63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a480aaacbacfabe38783426bfc069f75ee14fd63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2140d80a9d69cce7a9fb2c90051af4328737a446", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfdfaHCRBK7hj4Ov3rIwAAdHIIAA229fotD8o3/hmWcNFtqP0K\nOswGHgOL0dD9NNlZ2v7TSD0CpMlBbagsGW3n8GX8LN8lEb9NQU9njfAXnHP1UkYD\nE6APNtCf/klBHL3AVuUFPmFgBCIONpFtqWDxWxCGI9qdEKITBHFngmLzArisS+zV\n8LL+4YFxP1HZlrlOsvH9LnExfiowWQvQq0Bxg3nJ2TiOftD2rIpBf5HKmeI+qMOm\njxJbMjZaspmUPgQ5M2cimf+Y2FINuitjyW4WVb/qK05+xtNfsTgn8DfnRGHiO39S\ngZgG2NIpGJm78I1GG1xosJ1k6JX0q4Y+J0nyTdoNbK9lWzsWbKwQXpb8zSJI4aY=\n=qxND\n-----END PGP SIGNATURE-----\n", "payload": "tree a480aaacbacfabe38783426bfc069f75ee14fd63\nparent 84ef603c8400db203fefd714de963c88e5523424\nauthor Mara Bos <m-ou.se@m-ou.se> 1601566343 +0200\ncommitter GitHub <noreply@github.com> 1601566343 +0200\n\nAdd note about possible future improvement\n\nCo-authored-by: David Tolnay <dtolnay@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2140d80a9d69cce7a9fb2c90051af4328737a446", "html_url": "https://github.com/rust-lang/rust/commit/2140d80a9d69cce7a9fb2c90051af4328737a446", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2140d80a9d69cce7a9fb2c90051af4328737a446/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84ef603c8400db203fefd714de963c88e5523424", "url": "https://api.github.com/repos/rust-lang/rust/commits/84ef603c8400db203fefd714de963c88e5523424", "html_url": "https://github.com/rust-lang/rust/commit/84ef603c8400db203fefd714de963c88e5523424"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "68ac2841fed70a62fafbcc9ae6ea04363c2b6b7b", "filename": "compiler/rustc_feature/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2140d80a9d69cce7a9fb2c90051af4328737a446/compiler%2Frustc_feature%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2140d80a9d69cce7a9fb2c90051af4328737a446/compiler%2Frustc_feature%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Flib.rs?ref=2140d80a9d69cce7a9fb2c90051af4328737a446", "patch": "@@ -113,6 +113,8 @@ fn find_lang_feature_issue(feature: Symbol) -> Option<NonZeroU32> {\n }\n \n const fn to_nonzero(n: Option<u32>) -> Option<NonZeroU32> {\n+    // Can be replaced with `n.and_then(NonZeroU32::new)` if that is ever usable\n+    // in const context. Requires https://github.com/rust-lang/rfcs/pull/2632.\n     match n {\n         None => None,\n         Some(n) => NonZeroU32::new(n),"}]}