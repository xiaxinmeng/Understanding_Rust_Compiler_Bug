{"sha": "153df0f6ef0f3ff00b12122774825507fd88169f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1M2RmMGY2ZWYwZjNmZjAwYjEyMTIyNzc0ODI1NTA3ZmQ4ODE2OWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-17T07:54:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-17T07:54:03Z"}, "message": "Auto merge of #86062 - nagisa:nagisa/what-a-lie, r=estebank\n\nDo not allow JSON targets to set is-builtin: true\n\nNote that this will affect (and make builds fail for) all of the projects out there that have target files invalid in this way. Crater, however, does not really cover these kinds of the codebases, so it is quite difficult to measure the impact. That said, the target files invalid in this way can start causing build failures each time LLVM is upgraded, anyway, so it is probably a good opportunity to disallow this property, entirely.\n\nAnother approach considered was to simply not parse this field anymore, which would avoid making the builds explicitly fail, but it wasn't clear to me if `is-builtin` was always set unintentionally\u2026 In case this was the case, I'd expect people to file a feature request stating specifically for what purpose they were using `is-builtin`.\n\nFixes #86017", "tree": {"sha": "1bbda7e1097247acf8af15c872f25458c6a15417", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bbda7e1097247acf8af15c872f25458c6a15417"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/153df0f6ef0f3ff00b12122774825507fd88169f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/153df0f6ef0f3ff00b12122774825507fd88169f", "html_url": "https://github.com/rust-lang/rust/commit/153df0f6ef0f3ff00b12122774825507fd88169f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/153df0f6ef0f3ff00b12122774825507fd88169f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cd12d649ea966648cc2c7c5dec8f4933d6fa355", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cd12d649ea966648cc2c7c5dec8f4933d6fa355", "html_url": "https://github.com/rust-lang/rust/commit/0cd12d649ea966648cc2c7c5dec8f4933d6fa355"}, {"sha": "f4701cd65cf6b3f9707b2bd20865d462f758a7f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4701cd65cf6b3f9707b2bd20865d462f758a7f5", "html_url": "https://github.com/rust-lang/rust/commit/f4701cd65cf6b3f9707b2bd20865d462f758a7f5"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "d6a60956555956c1e04c37abe1ce5244015faf71", "filename": "compiler/rustc_codegen_llvm/src/context.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/153df0f6ef0f3ff00b12122774825507fd88169f/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/153df0f6ef0f3ff00b12122774825507fd88169f/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs?ref=153df0f6ef0f3ff00b12122774825507fd88169f", "patch": "@@ -149,11 +149,12 @@ pub unsafe fn create_module(\n \n         if !custom_llvm_used && target_data_layout != llvm_data_layout {\n             bug!(\n-                \"data-layout for builtin `{}` target, `{}`, \\\n-                  differs from LLVM default, `{}`\",\n-                sess.target.llvm_target,\n-                target_data_layout,\n-                llvm_data_layout\n+                \"data-layout for target `{rustc_target}`, `{rustc_layout}`, \\\n+                  differs from LLVM target's `{llvm_target}` default layout, `{llvm_layout}`\",\n+                rustc_target = sess.opts.target_triple,\n+                rustc_layout = target_data_layout,\n+                llvm_target = sess.target.llvm_target,\n+                llvm_layout = llvm_data_layout\n             );\n         }\n     }"}, {"sha": "0185132ee3698efe85428487c0412ddef311ffe1", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/153df0f6ef0f3ff00b12122774825507fd88169f/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/153df0f6ef0f3ff00b12122774825507fd88169f/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=153df0f6ef0f3ff00b12122774825507fd88169f", "patch": "@@ -2015,6 +2015,10 @@ impl Target {\n         key!(supported_sanitizers, SanitizerSet)?;\n         key!(default_adjusted_cabi, Option<Abi>)?;\n \n+        if base.is_builtin {\n+            // This can cause unfortunate ICEs later down the line.\n+            return Err(format!(\"may not set is_builtin for targets not built-in\"));\n+        }\n         // Each field should have been read using `Json::remove_key` so any keys remaining are unused.\n         let remaining_keys = obj.as_object().ok_or(\"Expected JSON object for target\")?.keys();\n         Ok(("}, {"sha": "34357182c205e39e9294ce0ec782bc1c4f9ac8d3", "filename": "src/test/run-make-fulldeps/rustdoc-target-spec-json-path/target.json", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/153df0f6ef0f3ff00b12122774825507fd88169f/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2Ftarget.json", "raw_url": "https://github.com/rust-lang/rust/raw/153df0f6ef0f3ff00b12122774825507fd88169f/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2Ftarget.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-target-spec-json-path%2Ftarget.json?ref=153df0f6ef0f3ff00b12122774825507fd88169f", "patch": "@@ -8,7 +8,6 @@\n   \"executables\": true,\n   \"has-elf-tls\": true,\n   \"has-rpath\": true,\n-  \"is-builtin\": true,\n   \"linker-is-gnu\": true,\n   \"llvm-target\": \"x86_64-unknown-linux-gnu\",\n   \"max-atomic-width\": 64,"}, {"sha": "dff7a966c9678fe5f44eb405e6c6e56e1c779646", "filename": "src/test/run-make-fulldeps/target-specs/Makefile", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/153df0f6ef0f3ff00b12122774825507fd88169f/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/153df0f6ef0f3ff00b12122774825507fd88169f/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2FMakefile?ref=153df0f6ef0f3ff00b12122774825507fd88169f", "patch": "@@ -7,3 +7,5 @@ all:\n \tRUST_TARGET_PATH=. $(RUSTC) foo.rs --target=my-awesome-platform --crate-type=lib --emit=asm\n \tRUST_TARGET_PATH=. $(RUSTC) foo.rs --target=my-x86_64-unknown-linux-gnu-platform --crate-type=lib --emit=asm\n \t$(RUSTC) -Z unstable-options --target=my-awesome-platform.json --print target-spec-json > $(TMPDIR)/test-platform.json && $(RUSTC) -Z unstable-options --target=$(TMPDIR)/test-platform.json --print target-spec-json | diff -q $(TMPDIR)/test-platform.json -\n+\t$(RUSTC) foo.rs --target=definitely-not-builtin-target 2>&1 | $(CGREP) 'may not set is_builtin'\n+\t$(RUSTC) foo.rs --target=mismatching-data-layout"}, {"sha": "b36fa993d9783f49353108c2ea3a14d81f75b589", "filename": "src/test/run-make-fulldeps/target-specs/definitely-not-builtin-target.json", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/153df0f6ef0f3ff00b12122774825507fd88169f/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fdefinitely-not-builtin-target.json", "raw_url": "https://github.com/rust-lang/rust/raw/153df0f6ef0f3ff00b12122774825507fd88169f/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fdefinitely-not-builtin-target.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fdefinitely-not-builtin-target.json?ref=153df0f6ef0f3ff00b12122774825507fd88169f", "patch": "@@ -0,0 +1,7 @@\n+{\n+  \"arch\": \"x86_64\",\n+  \"is-builtin\": true,\n+  \"data-layout\": \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\",\n+  \"llvm-target\": \"x86_64-unknown-unknown-gnu\",\n+  \"target-pointer-width\": \"64\"\n+}"}, {"sha": "d12caaad14a031b044329156610d076eac6d00fc", "filename": "src/test/run-make-fulldeps/target-specs/mismatching-data-layout.json", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/153df0f6ef0f3ff00b12122774825507fd88169f/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fmismatching-data-layout.json", "raw_url": "https://github.com/rust-lang/rust/raw/153df0f6ef0f3ff00b12122774825507fd88169f/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fmismatching-data-layout.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fmismatching-data-layout.json?ref=153df0f6ef0f3ff00b12122774825507fd88169f", "patch": "@@ -0,0 +1,6 @@\n+{\n+  \"arch\": \"x86_64\",\n+  \"data-layout\": \"e-m:e-i64:16:32:64\",\n+  \"llvm-target\": \"x86_64-unknown-unknown-gnu\",\n+  \"target-pointer-width\": \"64\"\n+}"}]}