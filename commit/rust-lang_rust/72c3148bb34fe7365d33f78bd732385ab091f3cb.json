{"sha": "72c3148bb34fe7365d33f78bd732385ab091f3cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyYzMxNDhiYjM0ZmU3MzY1ZDMzZjc4YmQ3MzIzODVhYjA5MWYzY2I=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-01-20T01:18:12Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-01-20T21:49:16Z"}, "message": "More test fixes from rollup", "tree": {"sha": "5d71b9723dfe3c6b6e9bfe20737b0d7f59b321b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d71b9723dfe3c6b6e9bfe20737b0d7f59b321b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72c3148bb34fe7365d33f78bd732385ab091f3cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72c3148bb34fe7365d33f78bd732385ab091f3cb", "html_url": "https://github.com/rust-lang/rust/commit/72c3148bb34fe7365d33f78bd732385ab091f3cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72c3148bb34fe7365d33f78bd732385ab091f3cb/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e8d7a4b7c2bfa3c278b93c0a81e151357f9b819", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e8d7a4b7c2bfa3c278b93c0a81e151357f9b819", "html_url": "https://github.com/rust-lang/rust/commit/5e8d7a4b7c2bfa3c278b93c0a81e151357f9b819"}], "stats": {"total": 215, "additions": 162, "deletions": 53}, "files": [{"sha": "0546f6827a6f59fa98c9209416400f0ba5affc9a", "filename": ".travis.yml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -9,6 +9,7 @@ git:\n   submodules: false\n \n matrix:\n+  fast_finish: true\n   include:\n     # Linux builders, all docker images\n     - env: IMAGE=android DEPLOY=1\n@@ -23,6 +24,7 @@ matrix:\n     - env: IMAGE=dist-powerpc64-linux DEPLOY=1\n     - env: IMAGE=dist-s390x-linux-netbsd DEPLOY=1\n     - env: IMAGE=dist-x86-linux DEPLOY=1\n+    - env: IMAGE=emscripten\n     - env: IMAGE=i686-gnu\n     - env: IMAGE=i686-gnu-nopt\n     - env: IMAGE=x86_64-gnu"}, {"sha": "b0eb26474548ec51af6e911132a3899882ae97b7", "filename": "appveyor.yml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -73,6 +73,9 @@ environment:\n     MINGW_DIR: mingw64\n     DEPLOY: 1\n \n+matrix:\n+  fast_finish: true\n+\n clone_depth: 1\n build: false\n "}, {"sha": "079f93e7331f1db0763acc442ce417d86b440a10", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -213,7 +213,11 @@ pub fn rustc(build: &Build, target: &str, compiler: &Compiler) {\n     if let Some(s) = target_config.and_then(|c| c.llvm_config.as_ref()) {\n         cargo.env(\"CFG_LLVM_ROOT\", s);\n     }\n-    if build.config.llvm_static_stdcpp {\n+    // Building with a static libstdc++ is only supported on linux right now,\n+    // not for MSVC or OSX\n+    if build.config.llvm_static_stdcpp &&\n+       !target.contains(\"windows\") &&\n+       !target.contains(\"apple\") {\n         cargo.env(\"LLVM_STATIC_STDCPP\",\n                   compiler_file(build.cxx(target), \"libstdc++.a\"));\n     }"}, {"sha": "938e69834e434f95641db3aaa588186d579578f4", "filename": "src/ci/docker/cross/build-arm-musl.sh", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Fcross%2Fbuild-arm-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Fcross%2Fbuild-arm-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fcross%2Fbuild-arm-musl.sh?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/sh\n+#!/bin/bash\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT.\n@@ -13,48 +13,64 @@ set -ex\n \n MUSL=1.1.16\n \n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  rm /tmp/build.log\n+  set -x\n+}\n+\n curl -O https://www.musl-libc.org/releases/musl-$MUSL.tar.gz\n tar xf musl-$MUSL.tar.gz\n cd musl-$MUSL\n CC=arm-linux-gnueabi-gcc \\\n CFLAGS=\"-march=armv6 -marm\" \\\n-    ./configure \\\n+    hide_output ./configure \\\n         --prefix=/usr/local/arm-linux-musleabi \\\n         --enable-wrapper=gcc\n-make -j$(nproc)\n-make install\n+hide_output make -j$(nproc)\n+hide_output make install\n cd ..\n rm -rf musl-$MUSL\n \n tar xf musl-$MUSL.tar.gz\n cd musl-$MUSL\n CC=arm-linux-gnueabihf-gcc \\\n CFLAGS=\"-march=armv6 -marm\" \\\n-    ./configure \\\n+    hide_output ./configure \\\n         --prefix=/usr/local/arm-linux-musleabihf \\\n         --enable-wrapper=gcc\n-make -j$(nproc)\n-make install\n+hide_output make -j$(nproc)\n+hide_output make install\n cd ..\n rm -rf musl-$MUSL\n \n tar xf musl-$MUSL.tar.gz\n cd musl-$MUSL\n CC=arm-linux-gnueabihf-gcc \\\n CFLAGS=\"-march=armv7-a\" \\\n-    ./configure \\\n+    hide_output ./configure \\\n         --prefix=/usr/local/armv7-linux-musleabihf \\\n         --enable-wrapper=gcc\n-make -j$(nproc)\n-make install\n+hide_output make -j$(nproc)\n+hide_output make install\n cd ..\n rm -rf musl-$MUSL*\n \n ln -nsf ../arm-linux-musleabi/bin/musl-gcc /usr/local/bin/arm-linux-musleabi-gcc\n ln -nsf ../arm-linux-musleabihf/bin/musl-gcc /usr/local/bin/arm-linux-musleabihf-gcc\n ln -nsf ../armv7-linux-musleabihf/bin/musl-gcc /usr/local/bin/armv7-linux-musleabihf-gcc\n \n-\n curl -L https://github.com/llvm-mirror/llvm/archive/release_39.tar.gz | tar xzf -\n curl -L https://github.com/llvm-mirror/libunwind/archive/release_39.tar.gz | tar xzf -\n "}, {"sha": "59b1c9b641535f3b1106331bed41352bb93ca7df", "filename": "src/ci/docker/cross/build-rumprun.sh", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Fcross%2Fbuild-rumprun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Fcross%2Fbuild-rumprun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fcross%2Fbuild-rumprun.sh?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -28,7 +28,6 @@ exit 1\n   set -x\n }\n \n-\n git clone https://github.com/rumpkernel/rumprun\n cd rumprun\n git reset --hard 39a97f37a85e44c69b662f6b97b688fbe892603b"}, {"sha": "03ca4c28078b61fa0697940ff4024a2781d9d109", "filename": "src/ci/docker/dist-arm-linux/Dockerfile", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -58,22 +58,8 @@ RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n USER rustbuild\n WORKDIR /tmp\n \n-COPY arm-linux-gnueabi.config /tmp/\n-RUN mkdir build && \\\n-      cd build && \\\n-      cp ../arm-linux-gnueabi.config .config && \\\n-      ct-ng oldconfig && \\\n-      ct-ng build && \\\n-      cd .. && \\\n-      rm -rf build\n-COPY arm-linux-gnueabihf.config /tmp/\n-RUN mkdir build && \\\n-      cd build && \\\n-      cp ../arm-linux-gnueabihf.config .config && \\\n-      ct-ng oldconfig && \\\n-      ct-ng build && \\\n-      cd .. && \\\n-      rm -rf build\n+COPY arm-linux-gnueabihf.config arm-linux-gnueabi.config build-toolchains.sh /tmp/\n+RUN ./build-toolchains.sh\n \n USER root\n "}, {"sha": "ed1406bd7cfa7cf4891d074191e87916cff9a408", "filename": "src/ci/docker/dist-arm-linux/build-toolchains.sh", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fbuild-toolchains.sh?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -0,0 +1,45 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  rm /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  set -x\n+}\n+\n+mkdir build\n+cd build\n+cp ../arm-linux-gnueabi.config .config\n+ct-ng oldconfig\n+hide_output ct-ng build\n+cd ..\n+rm -rf build\n+\n+mkdir build\n+cd build\n+cp ../arm-linux-gnueabihf.config .config\n+ct-ng oldconfig\n+hide_output ct-ng build\n+cd ..\n+rm -rf build"}, {"sha": "93d9e004c8c2d4edb3d726ef51b76361a891a867", "filename": "src/ci/docker/dist-armv7-aarch64-linux/Dockerfile", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Fdist-armv7-aarch64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Fdist-armv7-aarch64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-aarch64-linux%2FDockerfile?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -59,21 +59,8 @@ USER rustbuild\n WORKDIR /tmp\n \n COPY armv7-linux-gnueabihf.config /tmp/\n-RUN mkdir build && \\\n-      cd build && \\\n-      cp ../armv7-linux-gnueabihf.config .config && \\\n-      ct-ng oldconfig && \\\n-      ct-ng build && \\\n-      cd .. && \\\n-      rm -rf build\n-COPY aarch64-linux-gnu.config /tmp/\n-RUN mkdir build && \\\n-      cd build && \\\n-      cp ../aarch64-linux-gnu.config .config && \\\n-      ct-ng oldconfig && \\\n-      ct-ng build && \\\n-      cd .. && \\\n-      rm -rf build\n+COPY armv7-linux-gnueabihf.config aarch64-linux-gnu.config build-toolchains.sh /tmp/\n+RUN ./build-toolchains.sh\n \n USER root\n "}, {"sha": "ebd5ef4cfc492096f8713ec0897a586348e3f641", "filename": "src/ci/docker/dist-armv7-aarch64-linux/build-toolchains.sh", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Fdist-armv7-aarch64-linux%2Fbuild-toolchains.sh", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Fdist-armv7-aarch64-linux%2Fbuild-toolchains.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-aarch64-linux%2Fbuild-toolchains.sh?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -0,0 +1,45 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  rm /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  set -x\n+}\n+\n+mkdir build\n+cd build\n+cp ../armv7-linux-gnueabihf.config .config\n+ct-ng oldconfig\n+hide_output ct-ng build\n+cd ..\n+rm -rf build\n+\n+mkdir build\n+cd build\n+cp ../aarch64-linux-gnu.config .config\n+ct-ng oldconfig\n+hide_output ct-ng build\n+cd ..\n+rm -rf build"}, {"sha": "88bf583007ce53f296b5a2405dac1174025d94a9", "filename": "src/ci/docker/emscripten/build-emscripten.sh", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Femscripten%2Fbuild-emscripten.sh", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Femscripten%2Fbuild-emscripten.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Femscripten%2Fbuild-emscripten.sh?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -11,9 +11,26 @@\n \n set -ex\n \n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  rm /tmp/build.log\n+  set -x\n+}\n+\n curl https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz | \\\n       tar xzf -\n source emsdk_portable/emsdk_env.sh\n-emsdk update\n-emsdk install --build=Release sdk-tag-1.37.1-32bit\n-emsdk activate --build=Release sdk-tag-1.37.1-32bit\n+hide_output emsdk update\n+hide_output emsdk install --build=Release sdk-tag-1.37.1-32bit\n+hide_output emsdk activate --build=Release sdk-tag-1.37.1-32bit"}, {"sha": "7f95e17c7097acc4ebc93ab1b87a6eda7e2af291", "filename": "src/ci/docker/linux-tested-targets/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Flinux-tested-targets%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Fci%2Fdocker%2Flinux-tested-targets%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Flinux-tested-targets%2FDockerfile?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -32,10 +32,10 @@ ENV RUST_CONFIGURE_ARGS \\\n       --musl-root-x86_64=/musl-x86_64 \\\n       --musl-root-i686=/musl-i686\n \n+# FIXME should also test i686-unknown-linux-musl\n ENV SCRIPT \\\n       python2.7 ../x.py test \\\n           --target x86_64-unknown-linux-musl \\\n-          --target i686-unknown-linux-musl \\\n           --target i586-unknown-linux-gnu \\\n           && \\\n       python2.7 ../x.py dist \\"}, {"sha": "b3a2d66a07c112ef779128a1c5321e691a50e236", "filename": "src/librustc_trans/back/write.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fwrite.rs?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -668,7 +668,8 @@ pub fn run_passes(sess: &Session,\n     // Sanity check\n     assert!(trans.modules.len() == sess.opts.cg.codegen_units ||\n             sess.opts.debugging_opts.incremental.is_some() ||\n-            !sess.opts.output_types.should_trans());\n+            !sess.opts.output_types.should_trans() ||\n+            sess.opts.debugging_opts.no_trans);\n \n     let tm = create_target_machine(sess);\n "}, {"sha": "8d88c17af79b3f1c7abc5040b326ec35b4488d33", "filename": "src/test/run-pass/sse2.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Ftest%2Frun-pass%2Fsse2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72c3148bb34fe7365d33f78bd732385ab091f3cb/src%2Ftest%2Frun-pass%2Fsse2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsse2.rs?ref=72c3148bb34fe7365d33f78bd732385ab091f3cb", "patch": "@@ -13,10 +13,14 @@\n use std::env;\n \n fn main() {\n-    // Skip this tests on i586-unknown-linux-gnu where sse2 is disabled\n-    let real_target = env::var(\"TARGET\").unwrap();\n-    if real_target.contains(\"i586\") {\n-        return\n+    match env::var(\"TARGET\") {\n+        Ok(s) => {\n+            // Skip this tests on i586-unknown-linux-gnu where sse2 is disabled\n+            if s.contains(\"i586\") {\n+                return\n+            }\n+        }\n+        Err(_) => return,\n     }\n     if cfg!(any(target_arch = \"x86\", target_arch = \"x86_64\")) {\n         assert!(cfg!(target_feature = \"sse2\"),"}]}