{"sha": "ea08bdf30cdeed72973235b17715b552d322da5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMDhiZGYzMGNkZWVkNzI5NzMyMzViMTc3MTViNTUyZDMyMmRhNWU=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-04-06T13:40:43Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-04-06T13:47:57Z"}, "message": "add emit_debug_gdb_scripts target option and ..\n\nset it to false for no-std targets like ARM Cortex-M and MSP430. For the rationale of this change\nsee the comment in thumb_base.rs", "tree": {"sha": "5f3b87347b4c1a2a51459c6856a59adf4d7d55ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f3b87347b4c1a2a51459c6856a59adf4d7d55ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea08bdf30cdeed72973235b17715b552d322da5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea08bdf30cdeed72973235b17715b552d322da5e", "html_url": "https://github.com/rust-lang/rust/commit/ea08bdf30cdeed72973235b17715b552d322da5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea08bdf30cdeed72973235b17715b552d322da5e/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db4235c4fd20b18fcda7f331913cfe30a13f216c", "url": "https://api.github.com/repos/rust-lang/rust/commits/db4235c4fd20b18fcda7f331913cfe30a13f216c", "html_url": "https://github.com/rust-lang/rust/commit/db4235c4fd20b18fcda7f331913cfe30a13f216c"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "592b27ac641b5204d2af6ec4a16cce4d625e938c", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea08bdf30cdeed72973235b17715b552d322da5e/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea08bdf30cdeed72973235b17715b552d322da5e/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=ea08bdf30cdeed72973235b17715b552d322da5e", "patch": "@@ -478,6 +478,9 @@ pub struct TargetOptions {\n \n     /// Whether or not bitcode is embedded in object files\n     pub embed_bitcode: bool,\n+\n+    /// Whether a .debug_gdb_scripts section will be added to the output object file\n+    pub emit_debug_gdb_scripts: bool,\n }\n \n impl Default for TargetOptions {\n@@ -550,6 +553,7 @@ impl Default for TargetOptions {\n             codegen_backend: \"llvm\".to_string(),\n             default_hidden_visibility: false,\n             embed_bitcode: false,\n+            emit_debug_gdb_scripts: true,\n         }\n     }\n }\n@@ -799,6 +803,7 @@ impl Target {\n         key!(codegen_backend);\n         key!(default_hidden_visibility, bool);\n         key!(embed_bitcode, bool);\n+        key!(emit_debug_gdb_scripts, bool);\n \n         if let Some(array) = obj.find(\"abi-blacklist\").and_then(Json::as_array) {\n             for name in array.iter().filter_map(|abi| abi.as_string()) {\n@@ -1002,6 +1007,7 @@ impl ToJson for Target {\n         target_option_val!(codegen_backend);\n         target_option_val!(default_hidden_visibility);\n         target_option_val!(embed_bitcode);\n+        target_option_val!(emit_debug_gdb_scripts);\n \n         if default.abi_blacklist != self.options.abi_blacklist {\n             d.insert(\"abi-blacklist\".to_string(), self.options.abi_blacklist.iter()"}, {"sha": "31df9be0bc3f81e7b92f677a5bffa0e6d53f4538", "filename": "src/librustc_back/target/msp430_none_elf.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ea08bdf30cdeed72973235b17715b552d322da5e/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea08bdf30cdeed72973235b17715b552d322da5e/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs?ref=ea08bdf30cdeed72973235b17715b552d322da5e", "patch": "@@ -59,6 +59,9 @@ pub fn target() -> TargetResult {\n             // too much overhead for such small target.\n             trap_unreachable: false,\n \n+            // See the thumb_base.rs file for an explanation of this value\n+            emit_debug_gdb_scripts: false,\n+\n             .. Default::default( )\n         }\n     })"}, {"sha": "bb1fbfad2618f17291ce9fe694b86d7faa3b9699", "filename": "src/librustc_back/target/thumb_base.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ea08bdf30cdeed72973235b17715b552d322da5e/src%2Flibrustc_back%2Ftarget%2Fthumb_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea08bdf30cdeed72973235b17715b552d322da5e/src%2Flibrustc_back%2Ftarget%2Fthumb_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fthumb_base.rs?ref=ea08bdf30cdeed72973235b17715b552d322da5e", "patch": "@@ -53,6 +53,13 @@ pub fn opts() -> TargetOptions {\n         // costs it involves.\n         relocation_model: \"static\".to_string(),\n         abi_blacklist: super::arm_base::abi_blacklist(),\n+        // When this section is added a volatile load to its start address is also generated. This\n+        // volatile load is a footgun as it can end up loading an invalid memory address, depending\n+        // on how the user set up their linker scripts. This section adds pretty printer for stuff\n+        // like std::Vec, which is not that used in no-std context, so it's best to left it out\n+        // until we figure a way to add the pretty printers without requiring a volatile load cf.\n+        // rust-lang/rust#44993.\n+        emit_debug_gdb_scripts: false,\n         .. Default::default()\n     }\n }"}, {"sha": "036e0589e85f5f29cbaf5212a0e8984c47ecc6a6", "filename": "src/librustc_trans/debuginfo/gdb.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ea08bdf30cdeed72973235b17715b552d322da5e/src%2Flibrustc_trans%2Fdebuginfo%2Fgdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea08bdf30cdeed72973235b17715b552d322da5e/src%2Flibrustc_trans%2Fdebuginfo%2Fgdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fgdb.rs?ref=ea08bdf30cdeed72973235b17715b552d322da5e", "patch": "@@ -85,5 +85,6 @@ pub fn needs_gdb_debug_scripts_section(cx: &CodegenCx) -> bool {\n     !omit_gdb_pretty_printer_section &&\n     !cx.sess().target.target.options.is_like_osx &&\n     !cx.sess().target.target.options.is_like_windows &&\n-    cx.sess().opts.debuginfo != NoDebugInfo\n+    cx.sess().opts.debuginfo != NoDebugInfo &&\n+    cx.sess().target.target.options.emit_debug_gdb_scripts\n }"}]}