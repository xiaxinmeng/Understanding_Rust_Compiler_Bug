{"sha": "bb3549fce26355c79437d516b7afa4d4ddad924f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiMzU0OWZjZTI2MzU1Yzc5NDM3ZDUxNmI3YWZhNGQ0ZGRhZDkyNGY=", "commit": {"author": {"name": "Yuki OKUSHI", "email": "huyuumi.dev@gmail.com", "date": "2019-04-30T11:43:10Z"}, "committer": {"name": "Yuki OKUSHI", "email": "huyuumi.dev@gmail.com", "date": "2019-04-30T11:43:10Z"}, "message": "Fix tests", "tree": {"sha": "8a93ef62cb155e1413b43911769bbf354d1da059", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a93ef62cb155e1413b43911769bbf354d1da059"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb3549fce26355c79437d516b7afa4d4ddad924f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb3549fce26355c79437d516b7afa4d4ddad924f", "html_url": "https://github.com/rust-lang/rust/commit/bb3549fce26355c79437d516b7afa4d4ddad924f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb3549fce26355c79437d516b7afa4d4ddad924f/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da46eeac88ea24c8c7b5d78c5ac4e0fe681ef13e", "url": "https://api.github.com/repos/rust-lang/rust/commits/da46eeac88ea24c8c7b5d78c5ac4e0fe681ef13e", "html_url": "https://github.com/rust-lang/rust/commit/da46eeac88ea24c8c7b5d78c5ac4e0fe681ef13e"}], "stats": {"total": 106, "additions": 95, "deletions": 11}, "files": [{"sha": "46339c73b1f1d39b00a769e24bcf024af334604c", "filename": "src/test/ui/existential_types/existential-types-with-no-traits.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fexistential-types-with-no-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fexistential-types-with-no-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fexistential-types-with-no-traits.rs?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -0,0 +1,14 @@\n+#![feature(existential_type)]\n+\n+existential type Foo: 'static;\n+//~^ ERROR: at least one trait must be specified\n+\n+fn foo() -> Foo {\n+    \"foo\"\n+}\n+\n+fn bar() -> impl 'static { //~ ERROR: at least one trait must be specified\n+    \"foo\"\n+}\n+\n+fn main() {}"}, {"sha": "1464e8b48ebdafa47db9173df034fab4171dd12d", "filename": "src/test/ui/existential_types/existential-types-with-no-traits.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fexistential-types-with-no-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fexistential-types-with-no-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fexistential-types-with-no-traits.stderr?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -0,0 +1,14 @@\n+error: at least one trait must be specified\n+  --> $DIR/existential-types-with-no-traits.rs:3:1\n+   |\n+LL | existential type Foo: 'static;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: at least one trait must be specified\n+  --> $DIR/existential-types-with-no-traits.rs:10:13\n+   |\n+LL | fn bar() -> impl 'static {\n+   |             ^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "ffc965aca47c92eab9f8661243324b21d9fc51eb", "filename": "src/test/ui/existential_types/generic_nondefining_use.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_nondefining_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_nondefining_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_nondefining_use.rs?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -4,6 +4,8 @@ fn main() {}\n \n existential type Cmp<T>: 'static;\n //~^ ERROR could not find defining uses\n+//~^^ ERROR: at least one trait must be specified\n+\n \n // not a defining use, because it doesn't define *all* possible generics\n fn cmp() -> Cmp<u32> { //~ ERROR defining existential type use does not fully define"}, {"sha": "7bde5f3ee5e6947576138acc1fdb7dde3ab74db5", "filename": "src/test/ui/existential_types/generic_nondefining_use.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_nondefining_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_nondefining_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_nondefining_use.stderr?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -1,5 +1,11 @@\n+error: at least one trait must be specified\n+  --> $DIR/generic_nondefining_use.rs:5:1\n+   |\n+LL | existential type Cmp<T>: 'static;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error: defining existential type use does not fully define existential type\n-  --> $DIR/generic_nondefining_use.rs:9:1\n+  --> $DIR/generic_nondefining_use.rs:11:1\n    |\n LL | / fn cmp() -> Cmp<u32> {\n LL | |     5u32\n@@ -12,5 +18,5 @@ error: could not find defining uses\n LL | existential type Cmp<T>: 'static;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n "}, {"sha": "054e6f5f2ade99fda0bd2ed82ce68ee6acbc7946", "filename": "src/test/ui/existential_types/generic_not_used.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_not_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_not_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_not_used.rs?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -3,6 +3,7 @@\n fn main() {}\n \n existential type WrongGeneric<T: 'static>: 'static;\n+//~^ ERROR: at least one trait must be specified\n \n fn wrong_generic<U: 'static, V: 'static>(_: U, v: V) -> WrongGeneric<U> {\n //~^ ERROR type parameter `V` is part of concrete type but not used in parameter list"}, {"sha": "4bce35ea09dc3903948b13b705087daf1438761a", "filename": "src/test/ui/existential_types/generic_not_used.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_not_used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_not_used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_not_used.stderr?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -1,5 +1,11 @@\n+error: at least one trait must be specified\n+  --> $DIR/generic_not_used.rs:5:1\n+   |\n+LL | existential type WrongGeneric<T: 'static>: 'static;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error: type parameter `V` is part of concrete type but not used in parameter list for existential type\n-  --> $DIR/generic_not_used.rs:7:73\n+  --> $DIR/generic_not_used.rs:8:73\n    |\n LL |   fn wrong_generic<U: 'static, V: 'static>(_: U, v: V) -> WrongGeneric<U> {\n    |  _________________________________________________________________________^\n@@ -8,5 +14,5 @@ LL | |     v\n LL | | }\n    | |_^\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n "}, {"sha": "d9eedd6dca7c1d8621d3578fa178da6da9099c33", "filename": "src/test/ui/existential_types/generic_type_does_not_live_long_enough.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.rs?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -8,6 +8,7 @@ fn main() {\n \n existential type WrongGeneric<T>: 'static;\n //~^ ERROR the parameter type `T` may not live long enough\n+//~^^ ERROR: at least one trait must be specified\n \n fn wrong_generic<T>(t: T) -> WrongGeneric<T> {\n     t"}, {"sha": "1e4c49f3f316b123653232eb0c994b69f14f43c8", "filename": "src/test/ui/existential_types/generic_type_does_not_live_long_enough.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.stderr?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -1,3 +1,9 @@\n+error: at least one trait must be specified\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:9:1\n+   |\n+LL | existential type WrongGeneric<T>: 'static;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error[E0308]: mismatched types\n   --> $DIR/generic_type_does_not_live_long_enough.rs:6:18\n    |\n@@ -22,7 +28,7 @@ note: ...so that the type `T` will meet its required lifetime bounds\n LL | existential type WrongGeneric<T>: 'static;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0308, E0310.\n For more information about an error, try `rustc --explain E0308`."}, {"sha": "cc0db893c6aa703ef1f6d0d72326cb9030dfad35", "filename": "src/test/ui/existential_types/generic_underconstrained.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_underconstrained.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_underconstrained.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_underconstrained.rs?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -4,6 +4,7 @@ fn main() {}\n \n trait Trait {}\n existential type Underconstrained<T: Trait>: 'static; //~ ERROR the trait bound `T: Trait`\n+//~^ ERROR: at least one trait must be specified\n \n // no `Trait` bound\n fn underconstrain<T>(_: T) -> Underconstrained<T> {"}, {"sha": "d5e9ecc1abe772ddcffa8567aa048acf2af84f1e", "filename": "src/test/ui/existential_types/generic_underconstrained.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_underconstrained.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_underconstrained.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_underconstrained.stderr?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -1,3 +1,9 @@\n+error: at least one trait must be specified\n+  --> $DIR/generic_underconstrained.rs:6:1\n+   |\n+LL | existential type Underconstrained<T: Trait>: 'static;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error[E0277]: the trait bound `T: Trait` is not satisfied\n   --> $DIR/generic_underconstrained.rs:6:1\n    |\n@@ -7,6 +13,6 @@ LL | existential type Underconstrained<T: Trait>: 'static;\n    = help: consider adding a `where T: Trait` bound\n    = note: the return type of a function must have a statically known size\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "c6263eacd53e3c4d75df015b90133f79115bcb4f", "filename": "src/test/ui/existential_types/generic_underconstrained2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_underconstrained2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_underconstrained2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_underconstrained2.rs?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -4,6 +4,7 @@ fn main() {}\n \n existential type Underconstrained<T: std::fmt::Debug>: 'static;\n //~^ ERROR `U` doesn't implement `std::fmt::Debug`\n+//~^^ ERROR: at least one trait must be specified\n \n // not a defining use, because it doesn't define *all* possible generics\n fn underconstrained<U>(_: U) -> Underconstrained<U> {\n@@ -12,6 +13,7 @@ fn underconstrained<U>(_: U) -> Underconstrained<U> {\n \n existential type Underconstrained2<T: std::fmt::Debug>: 'static;\n //~^ ERROR `V` doesn't implement `std::fmt::Debug`\n+//~^^ ERROR: at least one trait must be specified\n \n // not a defining use, because it doesn't define *all* possible generics\n fn underconstrained2<U, V>(_: U, _: V) -> Underconstrained2<V> {"}, {"sha": "df726dde42966c6d14cdd3fee095e46de3d3b651", "filename": "src/test/ui/existential_types/generic_underconstrained2.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_underconstrained2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_underconstrained2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_underconstrained2.stderr?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -1,3 +1,15 @@\n+error: at least one trait must be specified\n+  --> $DIR/generic_underconstrained2.rs:5:1\n+   |\n+LL | existential type Underconstrained<T: std::fmt::Debug>: 'static;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: at least one trait must be specified\n+  --> $DIR/generic_underconstrained2.rs:14:1\n+   |\n+LL | existential type Underconstrained2<T: std::fmt::Debug>: 'static;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error[E0277]: `U` doesn't implement `std::fmt::Debug`\n   --> $DIR/generic_underconstrained2.rs:5:1\n    |\n@@ -9,7 +21,7 @@ LL | existential type Underconstrained<T: std::fmt::Debug>: 'static;\n    = note: the return type of a function must have a statically known size\n \n error[E0277]: `V` doesn't implement `std::fmt::Debug`\n-  --> $DIR/generic_underconstrained2.rs:13:1\n+  --> $DIR/generic_underconstrained2.rs:14:1\n    |\n LL | existential type Underconstrained2<T: std::fmt::Debug>: 'static;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `V` cannot be formatted using `{:?}` because it doesn't implement `std::fmt::Debug`\n@@ -18,6 +30,6 @@ LL | existential type Underconstrained2<T: std::fmt::Debug>: 'static;\n    = help: consider adding a `where V: std::fmt::Debug` bound\n    = note: the return type of a function must have a statically known size\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "5455b39f4cbe220b0255826a29d2a34ac9a992cc", "filename": "src/test/ui/existential_types/unused_generic_param.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Funused_generic_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Funused_generic_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Funused_generic_param.rs?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -1,18 +1,17 @@\n-// compile-pass\n #![feature(existential_type)]\n \n fn main() {\n }\n \n-// test that unused generic parameters are ok\n existential type PartiallyDefined<T>: 'static;\n+//~^ ERROR: at least one trait must be specified\n \n fn partially_defined<T: std::fmt::Debug>(_: T) -> PartiallyDefined<T> {\n     4u32\n }\n \n-// test that unused generic parameters are ok\n existential type PartiallyDefined2<T>: 'static;\n+//~^ ERROR: at least one trait must be specified\n \n fn partially_defined2<T: std::fmt::Debug>(_: T) -> PartiallyDefined2<T> {\n     4u32"}, {"sha": "8c563e93ae55cb2c34e6193b309b82ca80f12093", "filename": "src/test/ui/existential_types/unused_generic_param.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Funused_generic_param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb3549fce26355c79437d516b7afa4d4ddad924f/src%2Ftest%2Fui%2Fexistential_types%2Funused_generic_param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Funused_generic_param.stderr?ref=bb3549fce26355c79437d516b7afa4d4ddad924f", "patch": "@@ -0,0 +1,14 @@\n+error: at least one trait must be specified\n+  --> $DIR/unused_generic_param.rs:6:1\n+   |\n+LL | existential type PartiallyDefined<T>: 'static;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: at least one trait must be specified\n+  --> $DIR/unused_generic_param.rs:13:1\n+   |\n+LL | existential type PartiallyDefined2<T>: 'static;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}