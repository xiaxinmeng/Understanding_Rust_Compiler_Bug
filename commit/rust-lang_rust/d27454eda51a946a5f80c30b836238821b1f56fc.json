{"sha": "d27454eda51a946a5f80c30b836238821b1f56fc", "node_id": "C_kwDOAAsO6NoAKGQyNzQ1NGVkYTUxYTk0NmE1ZjgwYzMwYjgzNjIzODgyMWIxZjU2ZmM", "commit": {"author": {"name": "gilescope", "email": "gilescope@gmail.com", "date": "2022-03-26T14:53:56Z"}, "committer": {"name": "gilescope", "email": "gilescope@gmail.com", "date": "2022-03-26T14:53:56Z"}, "message": "Using macro to avoid performance hit (thanks LingMan)", "tree": {"sha": "cdb1419eb5b95819784272da29da3f5bf82e9c16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdb1419eb5b95819784272da29da3f5bf82e9c16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d27454eda51a946a5f80c30b836238821b1f56fc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEh0hoVRXRPubZAqGkYx9jUtSpSe8FAmI/KUYACgkQYx9jUtSp\nSe8cAQ//Rw1IugdINpkS7cRirY6S2JN/FSVrRxEhZvbK70x+JNEbih8kB/BAFJ58\nEg+Y0d40Tl8/xzYQNAb36YpFJJIMTdtGblZvBX7yQZh5YLGnWGv3M7wyYN8iImOT\nzUvzOY7pkY7hwBqqMLPr0shINIE22myp7MAxkWszXL+miE7aj+gJRGfw8h6t/o3p\naJ+Ryfh3bzd1yfll21W8o+T/koIJgo2WHg1wa+MRMoMwBXUQ+CDqApRztHmA3MvT\nS9JRhp/DpehDPmcbvPtuCr10FHWaxRzzc9rJO4szbIGOBiBxMh25c4vO2WF7U1Uz\nYxFzK0SnboQfnpWlU6uP6pfWy48JSFssnl1Utcyo1BNX2hsdzbF90TDML5ep9ZLR\nfafis7oc0k7lsvxLdSIs8M6u7NdqIw70SMDoJjnM/P7p/u4phpfkAMRS7FibgRFz\nrNo/Lw1x8TwISSrmxYKl1lRPHIirNs6S11gbxdHpNweIrPcLPNvtC8Ro595nTKhb\nK9N41AmjoMl4cxPGiEnoAg6pRjwwBLx7sOOT94fBpYneCP7IKE1AooYaWfZdCl20\nSWcT3WDXa4ZJUmkelSvflo5eM2aLrUOsZ4SJ1xG1mDxnJC4LPGe8nt05tPTxAIlT\nD/md/L7O8QQNgVsdpVaPalE2CEz77gqr/lksbOp1vvzH47N4RkU=\n=gsFR\n-----END PGP SIGNATURE-----", "payload": "tree cdb1419eb5b95819784272da29da3f5bf82e9c16\nparent e93d03b28a99d1b460269bb6263c0ecd38a47bd4\nauthor gilescope <gilescope@gmail.com> 1648306436 +0000\ncommitter gilescope <gilescope@gmail.com> 1648306436 +0000\n\nUsing macro to avoid performance hit (thanks LingMan)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d27454eda51a946a5f80c30b836238821b1f56fc", "html_url": "https://github.com/rust-lang/rust/commit/d27454eda51a946a5f80c30b836238821b1f56fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d27454eda51a946a5f80c30b836238821b1f56fc/comments", "author": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e93d03b28a99d1b460269bb6263c0ecd38a47bd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e93d03b28a99d1b460269bb6263c0ecd38a47bd4", "html_url": "https://github.com/rust-lang/rust/commit/e93d03b28a99d1b460269bb6263c0ecd38a47bd4"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "4a73329e7b9b605fca60c60382eac9de5bc3f64d", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d27454eda51a946a5f80c30b836238821b1f56fc/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d27454eda51a946a5f80c30b836238821b1f56fc/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=d27454eda51a946a5f80c30b836238821b1f56fc", "patch": "@@ -1078,14 +1078,20 @@ fn from_str_radix<T: FromStrRadixHelper>(src: &str, radix: u32) -> Result<T, Par\n         // `u8::MAX` is `ff` - any str of len 2 is guaranteed to not overflow.\n         // `i8::MAX` is `7f` - only a str of len 1 is guaranteed to not overflow.\n         unsafe {\n-            let unchecked_additive_op =\n-                if is_positive { T::unchecked_add } else { T::unchecked_sub };\n-\n-            for &c in digits {\n-                result = result.unchecked_mul(radix);\n-                let x = (c as char).to_digit(radix).ok_or(PIE { kind: InvalidDigit })?;\n-                result = unchecked_additive_op(&result, x);\n+            macro_rules! run_loop {\n+                ($unchecked_additive_op:ident) => {\n+                    for &c in digits {\n+                        result = result.unchecked_mul(radix);\n+                        let x = (c as char).to_digit(radix).ok_or(PIE { kind: InvalidDigit })?;\n+                        result = T::$unchecked_additive_op(&result, x);\n+                    }\n+                };\n             }\n+            if is_positive {\n+                run_loop!(unchecked_add)\n+            } else {\n+                run_loop!(unchecked_sub)\n+            };\n         }\n     } else {\n         let additive_op = if is_positive { T::checked_add } else { T::checked_sub };"}]}