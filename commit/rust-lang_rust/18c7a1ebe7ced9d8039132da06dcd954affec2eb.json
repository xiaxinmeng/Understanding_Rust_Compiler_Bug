{"sha": "18c7a1ebe7ced9d8039132da06dcd954affec2eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4YzdhMWViZTdjZWQ5ZDgwMzkxMzJkYTA2ZGNkOTU0YWZmZWMyZWI=", "commit": {"author": {"name": "Bastian K\u00f6cher", "email": "git@kchr.de", "date": "2019-08-22T19:08:34Z"}, "committer": {"name": "Bastian K\u00f6cher", "email": "git@kchr.de", "date": "2019-08-22T19:59:23Z"}, "message": "Make sysroot use `RUST_SRC_PATH` if set", "tree": {"sha": "a854609466bb15d923bc117b7d5204c91cad66c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a854609466bb15d923bc117b7d5204c91cad66c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18c7a1ebe7ced9d8039132da06dcd954affec2eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18c7a1ebe7ced9d8039132da06dcd954affec2eb", "html_url": "https://github.com/rust-lang/rust/commit/18c7a1ebe7ced9d8039132da06dcd954affec2eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18c7a1ebe7ced9d8039132da06dcd954affec2eb/comments", "author": {"login": "bkchr", "id": 5718007, "node_id": "MDQ6VXNlcjU3MTgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5718007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkchr", "html_url": "https://github.com/bkchr", "followers_url": "https://api.github.com/users/bkchr/followers", "following_url": "https://api.github.com/users/bkchr/following{/other_user}", "gists_url": "https://api.github.com/users/bkchr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkchr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkchr/subscriptions", "organizations_url": "https://api.github.com/users/bkchr/orgs", "repos_url": "https://api.github.com/users/bkchr/repos", "events_url": "https://api.github.com/users/bkchr/events{/privacy}", "received_events_url": "https://api.github.com/users/bkchr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkchr", "id": 5718007, "node_id": "MDQ6VXNlcjU3MTgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5718007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkchr", "html_url": "https://github.com/bkchr", "followers_url": "https://api.github.com/users/bkchr/followers", "following_url": "https://api.github.com/users/bkchr/following{/other_user}", "gists_url": "https://api.github.com/users/bkchr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkchr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkchr/subscriptions", "organizations_url": "https://api.github.com/users/bkchr/orgs", "repos_url": "https://api.github.com/users/bkchr/repos", "events_url": "https://api.github.com/users/bkchr/events{/privacy}", "received_events_url": "https://api.github.com/users/bkchr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08e5d394dfbca28b15ed5dc772d55d48f87c3f54", "url": "https://api.github.com/repos/rust-lang/rust/commits/08e5d394dfbca28b15ed5dc772d55d48f87c3f54", "html_url": "https://github.com/rust-lang/rust/commit/08e5d394dfbca28b15ed5dc772d55d48f87c3f54"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "0c27d4f4b312ae9e5bfdcd75ad812e16e025a4d8", "filename": "crates/ra_project_model/src/sysroot.rs", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/18c7a1ebe7ced9d8039132da06dcd954affec2eb/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18c7a1ebe7ced9d8039132da06dcd954affec2eb/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs?ref=18c7a1ebe7ced9d8039132da06dcd954affec2eb", "patch": "@@ -1,4 +1,5 @@\n use std::{\n+    env,\n     path::{Path, PathBuf},\n     process::Command,\n };\n@@ -33,21 +34,13 @@ impl Sysroot {\n     }\n \n     pub fn discover(cargo_toml: &Path) -> Result<Sysroot> {\n-        let rustc_output = Command::new(\"rustc\")\n-            .current_dir(cargo_toml.parent().unwrap())\n-            .args(&[\"--print\", \"sysroot\"])\n-            .output()?;\n-        if !rustc_output.status.success() {\n-            Err(\"failed to locate sysroot\")?\n-        }\n-        let stdout = String::from_utf8(rustc_output.stdout)?;\n-        let sysroot_path = Path::new(stdout.trim());\n-        let src = sysroot_path.join(\"lib/rustlib/src/rust/src\");\n+        let src = try_find_src_path(cargo_toml)?;\n+\n         if !src.exists() {\n             Err(format!(\n                 \"can't load standard library from sysroot\\n\\\n                  {:?}\\n\\\n-                 try running `rustup component add rust-src`\",\n+                 try running `rustup component add rust-src` or set `RUST_SRC_PATH`\",\n                 src,\n             ))?;\n         }\n@@ -83,6 +76,23 @@ impl Sysroot {\n     }\n }\n \n+fn try_find_src_path(cargo_toml: &Path) -> Result<PathBuf> {\n+    if let Ok(path) = env::var(\"RUST_SRC_PATH\") {\n+        return Ok(path.into());\n+    }\n+\n+    let rustc_output = Command::new(\"rustc\")\n+        .current_dir(cargo_toml.parent().unwrap())\n+        .args(&[\"--print\", \"sysroot\"])\n+        .output()?;\n+    if !rustc_output.status.success() {\n+        Err(\"failed to locate sysroot\")?;\n+    }\n+    let stdout = String::from_utf8(rustc_output.stdout)?;\n+    let sysroot_path = Path::new(stdout.trim());\n+    Ok(sysroot_path.join(\"lib/rustlib/src/rust/src\"))\n+}\n+\n impl SysrootCrate {\n     pub fn name(self, sysroot: &Sysroot) -> &str {\n         &sysroot.crates[self].name"}, {"sha": "453e8e273f82eb4c982374fbdf0be2acc3b4d10a", "filename": "docs/user/README.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/18c7a1ebe7ced9d8039132da06dcd954affec2eb/docs%2Fuser%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/18c7a1ebe7ced9d8039132da06dcd954affec2eb/docs%2Fuser%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2FREADME.md?ref=18c7a1ebe7ced9d8039132da06dcd954affec2eb", "patch": "@@ -78,6 +78,7 @@ See https://github.com/microsoft/vscode/issues/72308[microsoft/vscode#72308] for\n   (e.g: `--features=\"shumway,pdf\"` will run as `cargo watch -x \"check --features=\"shumway,pdf\"\"` )\n * `rust-analyzer.trace.server`: enables internal logging\n * `rust-analyzer.trace.cargo-watch`: enables cargo-watch logging\n+* `RUST_SRC_PATH`: environment variable that overwrites the sysroot\n \n \n ## Emacs"}]}