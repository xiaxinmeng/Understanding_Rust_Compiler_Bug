{"sha": "d6390625dcca846221f42b5cb726bf2a4bc36b1e", "node_id": "C_kwDOAAsO6NoAKGQ2MzkwNjI1ZGNjYTg0NjIyMWY0MmI1Y2I3MjZiZjJhNGJjMzZiMWU", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2023-04-15T19:05:46Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2023-04-15T19:05:46Z"}, "message": "Address comments", "tree": {"sha": "b38309071724448d7a76addc0647bbdf09210327", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b38309071724448d7a76addc0647bbdf09210327"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6390625dcca846221f42b5cb726bf2a4bc36b1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6390625dcca846221f42b5cb726bf2a4bc36b1e", "html_url": "https://github.com/rust-lang/rust/commit/d6390625dcca846221f42b5cb726bf2a4bc36b1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6390625dcca846221f42b5cb726bf2a4bc36b1e/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd0009eb3085c975ecaff6f40af7d1e99714feda", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd0009eb3085c975ecaff6f40af7d1e99714feda", "html_url": "https://github.com/rust-lang/rust/commit/cd0009eb3085c975ecaff6f40af7d1e99714feda"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "77fd45b199a11aaaf48a772fcf917977a2acde27", "filename": "clippy_lints/src/operators/numeric_arithmetic.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6390625dcca846221f42b5cb726bf2a4bc36b1e/clippy_lints%2Fsrc%2Foperators%2Fnumeric_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6390625dcca846221f42b5cb726bf2a4bc36b1e/clippy_lints%2Fsrc%2Foperators%2Fnumeric_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foperators%2Fnumeric_arithmetic.rs?ref=d6390625dcca846221f42b5cb726bf2a4bc36b1e", "patch": "@@ -19,10 +19,6 @@ impl Context {\n         self.expr_id.is_some() || self.const_span.map_or(false, |span| span.contains(e.span))\n     }\n \n-    fn skip_expr_involving_integers<'tcx>(cx: &LateContext<'tcx>, e: &hir::Expr<'tcx>) -> bool {\n-        is_from_proc_macro(cx, e)\n-    }\n-\n     pub fn check_binary<'tcx>(\n         &mut self,\n         cx: &LateContext<'tcx>,\n@@ -51,7 +47,7 @@ impl Context {\n \n         let (l_ty, r_ty) = (cx.typeck_results().expr_ty(l), cx.typeck_results().expr_ty(r));\n         if l_ty.peel_refs().is_integral() && r_ty.peel_refs().is_integral() {\n-            if Self::skip_expr_involving_integers(cx, expr) {\n+            if is_from_proc_macro(cx, expr) {\n                 return;\n             }\n             match op {\n@@ -86,7 +82,7 @@ impl Context {\n         let ty = cx.typeck_results().expr_ty(arg);\n         if constant_simple(cx, cx.typeck_results(), expr).is_none() {\n             if ty.is_integral() {\n-                if Self::skip_expr_involving_integers(cx, expr) {\n+                if is_from_proc_macro(cx, expr) {\n                     return;\n                 }\n                 span_lint(cx, INTEGER_ARITHMETIC, expr.span, \"integer arithmetic detected\");"}]}