{"sha": "173d5b339f5d17dd9a6e7796d307fe97e2fdde8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3M2Q1YjMzOWY1ZDE3ZGQ5YTZlNzc5NmQzMDdmZTk3ZTJmZGRlOGE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-20T00:42:47Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-22T21:14:05Z"}, "message": "Split up `DefCollector::root()`.", "tree": {"sha": "e9f93f8078fbaffdeb41bbefcf4bb27ff466dfd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9f93f8078fbaffdeb41bbefcf4bb27ff466dfd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/173d5b339f5d17dd9a6e7796d307fe97e2fdde8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/173d5b339f5d17dd9a6e7796d307fe97e2fdde8a", "html_url": "https://github.com/rust-lang/rust/commit/173d5b339f5d17dd9a6e7796d307fe97e2fdde8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/173d5b339f5d17dd9a6e7796d307fe97e2fdde8a/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ee64e44a9ecf2968b214cd9b90e1c96f40dcee8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ee64e44a9ecf2968b214cd9b90e1c96f40dcee8", "html_url": "https://github.com/rust-lang/rust/commit/1ee64e44a9ecf2968b214cd9b90e1c96f40dcee8"}], "stats": {"total": 36, "additions": 15, "deletions": 21}, "files": [{"sha": "b0a717e18f98d79796d0a19297e04e3f106e457f", "filename": "src/librustc/hir/map/def_collector.rs", "status": "modified", "additions": 13, "deletions": 20, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/173d5b339f5d17dd9a6e7796d307fe97e2fdde8a/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/173d5b339f5d17dd9a6e7796d307fe97e2fdde8a/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs?ref=173d5b339f5d17dd9a6e7796d307fe97e2fdde8a", "patch": "@@ -30,31 +30,20 @@ pub struct DefCollector<'ast> {\n }\n \n impl<'ast> DefCollector<'ast> {\n-    pub fn root(definitions: &'ast mut Definitions) -> DefCollector<'ast> {\n-        let mut collector = DefCollector {\n+    pub fn new(definitions: &'ast mut Definitions) -> DefCollector<'ast> {\n+        DefCollector {\n             hir_crate: None,\n             definitions: definitions,\n             parent_def: None,\n-        };\n-        let root = collector.create_def_with_parent(None, CRATE_NODE_ID, DefPathData::CrateRoot);\n-        assert_eq!(root, CRATE_DEF_INDEX);\n-        collector.parent_def = Some(root);\n-\n-        collector.create_def_with_parent(Some(CRATE_DEF_INDEX), DUMMY_NODE_ID, DefPathData::Misc);\n-\n-        collector\n+        }\n     }\n \n     pub fn extend(parent_node: NodeId,\n                   parent_def_path: DefPath,\n                   parent_def_id: DefId,\n                   definitions: &'ast mut Definitions)\n                   -> DefCollector<'ast> {\n-        let mut collector = DefCollector {\n-            hir_crate: None,\n-            parent_def: None,\n-            definitions: definitions,\n-        };\n+        let mut collector = DefCollector::new(definitions);\n \n         assert_eq!(parent_def_path.krate, parent_def_id.krate);\n         let root_path = Box::new(InlinedRootPath {\n@@ -68,17 +57,21 @@ impl<'ast> DefCollector<'ast> {\n         collector\n     }\n \n+    pub fn collect_root(&mut self) {\n+        let root = self.create_def_with_parent(None, CRATE_NODE_ID, DefPathData::CrateRoot);\n+        assert_eq!(root, CRATE_DEF_INDEX);\n+        self.parent_def = Some(root);\n+\n+        self.create_def_with_parent(Some(CRATE_DEF_INDEX), DUMMY_NODE_ID, DefPathData::Misc);\n+    }\n+\n     pub fn walk_item(&mut self, ii: &'ast InlinedItem, krate: &'ast hir::Crate) {\n         self.hir_crate = Some(krate);\n         ii.visit(self);\n     }\n \n-    fn parent_def(&self) -> Option<DefIndex> {\n-        self.parent_def\n-    }\n-\n     fn create_def(&mut self, node_id: NodeId, data: DefPathData) -> DefIndex {\n-        let parent_def = self.parent_def();\n+        let parent_def = self.parent_def;\n         debug!(\"create_def(node_id={:?}, data={:?}, parent_def={:?})\", node_id, data, parent_def);\n         self.definitions.create_def_with_parent(parent_def, node_id, data)\n     }"}, {"sha": "5cfb71f4fc877f81b5011eb2538296cb24bc4bb0", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/173d5b339f5d17dd9a6e7796d307fe97e2fdde8a/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/173d5b339f5d17dd9a6e7796d307fe97e2fdde8a/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=173d5b339f5d17dd9a6e7796d307fe97e2fdde8a", "patch": "@@ -225,7 +225,8 @@ impl Definitions {\n     }\n \n     pub fn collect(&mut self, krate: &ast::Crate) {\n-        let mut def_collector = DefCollector::root(self);\n+        let mut def_collector = DefCollector::new(self);\n+        def_collector.collect_root();\n         visit::walk_crate(&mut def_collector, krate);\n     }\n "}]}