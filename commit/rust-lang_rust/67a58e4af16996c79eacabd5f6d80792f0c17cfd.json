{"sha": "67a58e4af16996c79eacabd5f6d80792f0c17cfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3YTU4ZTRhZjE2OTk2Yzc5ZWFjYWJkNWY2ZDgwNzkyZjBjMTdjZmQ=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-21T18:35:30Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-21T18:38:14Z"}, "message": "Add test for match_ast", "tree": {"sha": "bf23abfc9094b0622af560fc9290815bc3b0324b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf23abfc9094b0622af560fc9290815bc3b0324b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67a58e4af16996c79eacabd5f6d80792f0c17cfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67a58e4af16996c79eacabd5f6d80792f0c17cfd", "html_url": "https://github.com/rust-lang/rust/commit/67a58e4af16996c79eacabd5f6d80792f0c17cfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67a58e4af16996c79eacabd5f6d80792f0c17cfd/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59e7234546590d9fe639ecebab4a768c02ca6389", "url": "https://api.github.com/repos/rust-lang/rust/commits/59e7234546590d9fe639ecebab4a768c02ca6389", "html_url": "https://github.com/rust-lang/rust/commit/59e7234546590d9fe639ecebab4a768c02ca6389"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "789d6cbde9cbd0f992efaf4e3939f98ed1630e01", "filename": "crates/ra_ide_api/src/expand_macro.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/67a58e4af16996c79eacabd5f6d80792f0c17cfd/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a58e4af16996c79eacabd5f6d80792f0c17cfd/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs?ref=67a58e4af16996c79eacabd5f6d80792f0c17cfd", "patch": "@@ -173,6 +173,49 @@ fn some_thing() -> u32 {\n   let a = 0;\n   a+10\n }\n+\"###);\n+    }\n+\n+    #[test]\n+    fn macro_expand_match_ast() {\n+        let res = check_expand_macro(\n+            r#\"\n+        //- /lib.rs\n+        macro_rules! match_ast {\n+            (match $node:ident { $($tt:tt)* }) => { match_ast!(match ($node) { $($tt)* }) };\n+        \n+            (match ($node:expr) {\n+                $( ast::$ast:ident($it:ident) => $res:block, )*\n+                _ => $catch_all:expr $(,)?\n+            }) => {{\n+                $( if let Some($it) = ast::$ast::cast($node.clone()) $res else )*\n+                { $catch_all }\n+            }};\n+        }        \n+\n+        fn main() {\n+            mat<|>ch_ast! {\n+                match container {\n+                    ast::TraitDef(it) => {},\n+                    ast::ImplBlock(it) => {},\n+                    _ => { continue },\n+                }\n+            }\n+        }\n+        \"#,\n+        );\n+\n+        assert_eq!(res.name, \"match_ast\");\n+        assert_snapshot!(res.expansion, @r###\"\n+{\n+  if let Some(it) = ast::TraitDef::cast(container.clone()){}\n+  else if let Some(it) = ast::ImplBlock::cast(container.clone()){}\n+  else {\n+    {\n+      continue\n+    }\n+  }\n+}\n \"###);\n     }\n }"}]}