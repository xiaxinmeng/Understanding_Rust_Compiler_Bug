{"sha": "fb6d780dbeb78c88e1cc6668d29f0892cf7da5ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNmQ3ODBkYmViNzhjODhlMWNjNjY2OGQyOWYwODkyY2Y3ZGE1ZWY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-10T13:35:19Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-10T13:35:19Z"}, "message": "Regression test for Issue 21486.\n\nFix #21486", "tree": {"sha": "6f51c9a464c90e0a7aa48c8a6742c4b5889d176d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f51c9a464c90e0a7aa48c8a6742c4b5889d176d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb6d780dbeb78c88e1cc6668d29f0892cf7da5ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb6d780dbeb78c88e1cc6668d29f0892cf7da5ef", "html_url": "https://github.com/rust-lang/rust/commit/fb6d780dbeb78c88e1cc6668d29f0892cf7da5ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb6d780dbeb78c88e1cc6668d29f0892cf7da5ef/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c2a9910c7a65f86799192e919cf8c61f60c06f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2a9910c7a65f86799192e919cf8c61f60c06f2", "html_url": "https://github.com/rust-lang/rust/commit/6c2a9910c7a65f86799192e919cf8c61f60c06f2"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "7f8bd7a95f7a7e5e48f5aaaf9e8c43c06d62b462", "filename": "src/test/run-pass/issue-21486.rs", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/fb6d780dbeb78c88e1cc6668d29f0892cf7da5ef/src%2Ftest%2Frun-pass%2Fissue-21486.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb6d780dbeb78c88e1cc6668d29f0892cf7da5ef/src%2Ftest%2Frun-pass%2Fissue-21486.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-21486.rs?ref=fb6d780dbeb78c88e1cc6668d29f0892cf7da5ef", "patch": "@@ -0,0 +1,86 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Issue #21486: Make sure that all structures are dropped, even when\n+// created via FRU and control-flow breaks in the middle of\n+// construction.\n+\n+\n+use std::sync::atomic::{Ordering, AtomicUsize, ATOMIC_USIZE_INIT};\n+\n+#[derive(Debug)]\n+struct Noisy(u8);\n+impl Drop for Noisy {\n+    fn drop(&mut self) {\n+        // println!(\"splat #{}\", self.0);\n+        event(self.0);\n+    }\n+}\n+\n+#[allow(dead_code)]\n+#[derive(Debug)]\n+struct Foo { n0: Noisy, n1: Noisy }\n+impl Foo {\n+    fn vals(&self) -> (u8, u8) { (self.n0.0, self.n1.0) }\n+}\n+\n+fn leak_1_ret() -> Foo {\n+    let _old_foo = Foo { n0: Noisy(1), n1: Noisy(2) };\n+    Foo { n0: { return Foo { n0: Noisy(3), n1: Noisy(4) } },\n+          .._old_foo\n+    };\n+}\n+\n+fn leak_2_ret() -> Foo {\n+    let _old_foo = Foo { n0: Noisy(1), n1: Noisy(2) };\n+    Foo { n1: { return Foo { n0: Noisy(3), n1: Noisy(4) } },\n+          .._old_foo\n+    };\n+}\n+\n+// In this case, the control flow break happens *before* we construct\n+// `Foo(Noisy(1),Noisy(2))`, so there should be no record of it in the\n+// event log.\n+fn leak_3_ret() -> Foo {\n+    let _old_foo = || Foo { n0: Noisy(1), n1: Noisy(2) };\n+    Foo { n1: { return Foo { n0: Noisy(3), n1: Noisy(4) } },\n+          .._old_foo()\n+    };\n+}\n+\n+pub fn main() {\n+    reset_log();\n+    assert_eq!(leak_1_ret().vals(), (3,4));\n+    assert_eq!(0x01_02_03_04, event_log());\n+\n+    reset_log();\n+    assert_eq!(leak_2_ret().vals(), (3,4));\n+    assert_eq!(0x01_02_03_04, event_log());\n+\n+    reset_log();\n+    assert_eq!(leak_3_ret().vals(), (3,4));\n+    assert_eq!(0x03_04, event_log());\n+}\n+\n+static LOG: AtomicUsize = ATOMIC_USIZE_INIT;\n+\n+fn reset_log() {\n+    LOG.store(0, Ordering::SeqCst);\n+}\n+\n+fn event_log() -> usize {\n+    LOG.load(Ordering::SeqCst)\n+}\n+\n+fn event(tag: u8) {\n+    let old_log = LOG.load(Ordering::SeqCst);\n+    let new_log = (old_log << 8) + tag as usize;\n+    LOG.store(new_log, Ordering::SeqCst);\n+}"}]}