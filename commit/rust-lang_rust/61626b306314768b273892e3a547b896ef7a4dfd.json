{"sha": "61626b306314768b273892e3a547b896ef7a4dfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNjI2YjMwNjMxNDc2OGIyNzM4OTJlM2E1NDdiODk2ZWY3YTRkZmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-07T18:20:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-07T18:20:55Z"}, "message": "Auto merge of #21984 - pnkfelix:make-for-loops-a-terminating-scope, r=nikomatsakis\n\nmake `for PAT in ITER_EXPR { ... }` a terminating-scope for ITER_EXPR.\r\n\r\nIn effect, temporary anonymous values created during the evaluation of ITER_EXPR no longer not live for the entirety of the block surrounding the for-loop; instead they only live for the extent of the for-loop itself, and no longer.\r\n\r\n----\r\n\r\nThere is one case I know of that this breaks, demonstrated to me by @nikomatsakis  (but it is also a corner-case that is useless in practice).  Here is that case:\r\n\r\n```\r\nfn main() {\r\n    let mut foo: Vec<&i8> = Vec::new();\r\n    for i in &[1, 2, 3] { foo.push(i) }\r\n}\r\n```\r\n\r\nNote that if you add any code following the for-loop above, or even a semicolon to the end of it, then the code will stop compiling (i.e., it gathers a vector of references but the gathered vector cannot actually be used.)\r\n\r\n(The above code, despite being useless, did occur in one run-pass test by accident; that test is updated here to accommodate the new striction.)\r\n\r\n----\r\n\r\nSo, technically this is a:\r\n\r\n[breaking-change]", "tree": {"sha": "fccabe06769bf28388471d950fa4cd55da128a53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fccabe06769bf28388471d950fa4cd55da128a53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61626b306314768b273892e3a547b896ef7a4dfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61626b306314768b273892e3a547b896ef7a4dfd", "html_url": "https://github.com/rust-lang/rust/commit/61626b306314768b273892e3a547b896ef7a4dfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61626b306314768b273892e3a547b896ef7a4dfd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce5aad2f107e79c5f1baab40aff35b7899322d94", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce5aad2f107e79c5f1baab40aff35b7899322d94", "html_url": "https://github.com/rust-lang/rust/commit/ce5aad2f107e79c5f1baab40aff35b7899322d94"}, {"sha": "b445bf2bd1139236fd815bf93610ddaf17726111", "url": "https://api.github.com/repos/rust-lang/rust/commits/b445bf2bd1139236fd815bf93610ddaf17726111", "html_url": "https://github.com/rust-lang/rust/commit/b445bf2bd1139236fd815bf93610ddaf17726111"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "f9d8406b8459f276931990dbb85962f1cc24a640", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/61626b306314768b273892e3a547b896ef7a4dfd/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61626b306314768b273892e3a547b896ef7a4dfd/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=61626b306314768b273892e3a547b896ef7a4dfd", "patch": "@@ -230,15 +230,18 @@ pub fn expand_expr(e: P<ast::Expr>, fld: &mut MacroExpander) -> P<ast::Expr> {\n         ast::ExprForLoop(pat, head, body, opt_ident) => {\n             // to:\n             //\n-            //   match ::std::iter::IntoIterator::into_iter(<head>) {\n-            //     mut iter => {\n-            //       [opt_ident]: loop {\n-            //         match ::std::iter::Iterator::next(&mut iter) {\n-            //           ::std::option::Option::Some(<pat>) => <body>,\n-            //           ::std::option::Option::None => break\n+            //   {\n+            //     let result = match ::std::iter::IntoIterator::into_iter(<head>) {\n+            //       mut iter => {\n+            //         [opt_ident]: loop {\n+            //           match ::std::iter::Iterator::next(&mut iter) {\n+            //             ::std::option::Option::Some(<pat>) => <body>,\n+            //             ::std::option::Option::None => break\n+            //           }\n             //         }\n             //       }\n-            //     }\n+            //     };\n+            //     result\n             //   }\n \n             // expand <head>\n@@ -319,7 +322,16 @@ pub fn expand_expr(e: P<ast::Expr>, fld: &mut MacroExpander) -> P<ast::Expr> {\n \n                 fld.cx.expr_call(span, fld.cx.expr_path(into_iter_path), vec![head])\n             };\n-            fld.cx.expr_match(span, into_iter_expr, vec![iter_arm])\n+\n+            let match_expr = fld.cx.expr_match(span, into_iter_expr, vec![iter_arm]);\n+\n+            // `{ let result = ...; result }`\n+            let result_ident = token::gensym_ident(\"result\");\n+            fld.cx.expr_block(\n+                fld.cx.block_all(\n+                    span,\n+                    vec![fld.cx.stmt_let(span, false, result_ident, match_expr)],\n+                    Some(fld.cx.expr_ident(span, result_ident))))\n         }\n \n         ast::ExprClosure(capture_clause, fn_decl, block) => {"}, {"sha": "d96ff869fa0ab06567d81b4d1a1f8b4c263cb99e", "filename": "src/test/run-pass/loop-label-shadowing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61626b306314768b273892e3a547b896ef7a4dfd/src%2Ftest%2Frun-pass%2Floop-label-shadowing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61626b306314768b273892e3a547b896ef7a4dfd/src%2Ftest%2Frun-pass%2Floop-label-shadowing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Floop-label-shadowing.rs?ref=61626b306314768b273892e3a547b896ef7a4dfd", "patch": "@@ -13,7 +13,7 @@\n fn main() {\n     let mut foo = Vec::new();\n     'foo: for i in &[1, 2, 3] {\n-        foo.push(i);\n+        foo.push(*i);\n     }\n }\n "}]}