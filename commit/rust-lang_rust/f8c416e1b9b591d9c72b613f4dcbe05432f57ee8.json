{"sha": "f8c416e1b9b591d9c72b613f4dcbe05432f57ee8", "node_id": "C_kwDOAAsO6NoAKGY4YzQxNmUxYjliNTkxZDljNzJiNjEzZjRkY2JlMDU0MzJmNTdlZTg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-01T08:32:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-01T08:32:04Z"}, "message": "Auto merge of #12650 - lowr:fix/12591, r=lnicola\n\nfix: improve whitespace insertion in pretty printer\n\nFixes #12591\n\nThe `=>` token in the macro_rules! should be parsed as one fat arrow, but it [\"requires a lot of changes in r-a\"](https://github.com/rust-analyzer/ungrammar/commit/143cc528b11290bf2463de1fb5a97a15f9b2ed44), so I left it for the larger refactoring in the future and put a FIXME note.", "tree": {"sha": "484d49e033cb1ab608965f812a79745e9bbcd2bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/484d49e033cb1ab608965f812a79745e9bbcd2bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8c416e1b9b591d9c72b613f4dcbe05432f57ee8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8c416e1b9b591d9c72b613f4dcbe05432f57ee8", "html_url": "https://github.com/rust-lang/rust/commit/f8c416e1b9b591d9c72b613f4dcbe05432f57ee8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8c416e1b9b591d9c72b613f4dcbe05432f57ee8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d0e5aea902b7f8d8fba6d64d9209c1f45a268b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d0e5aea902b7f8d8fba6d64d9209c1f45a268b4", "html_url": "https://github.com/rust-lang/rust/commit/7d0e5aea902b7f8d8fba6d64d9209c1f45a268b4"}, {"sha": "36d2b43dfd6b7eb6d5549d04405c8d3323da29b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/36d2b43dfd6b7eb6d5549d04405c8d3323da29b5", "html_url": "https://github.com/rust-lang/rust/commit/36d2b43dfd6b7eb6d5549d04405c8d3323da29b5"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "f54ae6c9202294fa9a4a93aabccb1faecbbc1f11", "filename": "crates/ide-db/src/syntax_helpers/insert_whitespace_into_node.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f8c416e1b9b591d9c72b613f4dcbe05432f57ee8/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Finsert_whitespace_into_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8c416e1b9b591d9c72b613f4dcbe05432f57ee8/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Finsert_whitespace_into_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Finsert_whitespace_into_node.rs?ref=f8c416e1b9b591d9c72b613f4dcbe05432f57ee8", "patch": "@@ -33,7 +33,10 @@ pub fn insert_ws_into(syn: SyntaxNode) -> SyntaxNode {\n         let token = match event {\n             WalkEvent::Enter(NodeOrToken::Token(token)) => token,\n             WalkEvent::Leave(NodeOrToken::Node(node))\n-                if matches!(node.kind(), ATTR | MATCH_ARM | STRUCT | ENUM | UNION | FN | IMPL) =>\n+                if matches!(\n+                    node.kind(),\n+                    ATTR | MATCH_ARM | STRUCT | ENUM | UNION | FN | IMPL | MACRO_RULES\n+                ) =>\n             {\n                 if indent > 0 {\n                     mods.push((\n@@ -66,9 +69,7 @@ pub fn insert_ws_into(syn: SyntaxNode) -> SyntaxNode {\n                     mods.push(do_ws(before, tok));\n                 }\n \n-                if indent > 0 {\n-                    mods.push(do_indent(after, tok, indent));\n-                }\n+                mods.push(do_indent(after, tok, indent));\n                 mods.push(do_nl(after, tok));\n             }\n             R_CURLY if is_last(|it| it != L_CURLY, true) => {\n@@ -100,10 +101,19 @@ pub fn insert_ws_into(syn: SyntaxNode) -> SyntaxNode {\n                 }\n                 mods.push(do_nl(after, tok));\n             }\n+            T![=] if is_next(|it| it == T![>], false) => {\n+                // FIXME: this branch is for `=>` in macro_rules!, which is currently parsed as\n+                // two separate symbols.\n+                mods.push(do_ws(before, tok));\n+                mods.push(do_ws(after, &tok.next_token().unwrap()));\n+            }\n             T![->] | T![=] | T![=>] => {\n                 mods.push(do_ws(before, tok));\n                 mods.push(do_ws(after, tok));\n             }\n+            T![!] if is_last(|it| it == MACRO_RULES_KW, false) && is_next(is_text, false) => {\n+                mods.push(do_ws(after, tok));\n+            }\n             _ => (),\n         }\n "}, {"sha": "fd0a29f64f67cc3ffa3e17b7c414767029556342", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f8c416e1b9b591d9c72b613f4dcbe05432f57ee8/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8c416e1b9b591d9c72b613f4dcbe05432f57ee8/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=f8c416e1b9b591d9c72b613f4dcbe05432f57ee8", "patch": "@@ -360,6 +360,38 @@ fn main() {\n         );\n     }\n \n+    #[test]\n+    fn macro_expand_inner_macro_rules() {\n+        check(\n+            r#\"\n+macro_rules! foo {\n+    ($t:tt) => {{\n+        macro_rules! bar {\n+            () => {\n+                $t\n+            }\n+        }\n+        bar!()\n+    }};\n+}\n+\n+fn main() {\n+    foo$0!(42);\n+}\n+            \"#,\n+            expect![[r#\"\n+                foo\n+                {\n+                  macro_rules! bar {\n+                    () => {\n+                      42\n+                    }\n+                  }\n+                  42\n+                }\"#]],\n+        );\n+    }\n+\n     #[test]\n     fn macro_expand_inner_macro_fail_to_expand() {\n         check("}]}