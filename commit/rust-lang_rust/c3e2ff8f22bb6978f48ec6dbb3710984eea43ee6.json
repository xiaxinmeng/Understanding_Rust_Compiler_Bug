{"sha": "c3e2ff8f22bb6978f48ec6dbb3710984eea43ee6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZTJmZjhmMjJiYjY5NzhmNDhlYzZkYmIzNzEwOTg0ZWVhNDNlZTY=", "commit": {"author": {"name": "Hideki Sekine", "email": "sekineh@me.com", "date": "2018-06-24T01:09:25Z"}, "committer": {"name": "Hideki Sekine", "email": "sekineh@me.com", "date": "2018-07-08T14:30:34Z"}, "message": "Create Dockerfile based on dist-various-1.", "tree": {"sha": "568cfa72adf13e53b8a67eb5936c823ba4bf2348", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/568cfa72adf13e53b8a67eb5936c823ba4bf2348"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3e2ff8f22bb6978f48ec6dbb3710984eea43ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3e2ff8f22bb6978f48ec6dbb3710984eea43ee6", "html_url": "https://github.com/rust-lang/rust/commit/c3e2ff8f22bb6978f48ec6dbb3710984eea43ee6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3e2ff8f22bb6978f48ec6dbb3710984eea43ee6/comments", "author": {"login": "sekineh", "id": 3956266, "node_id": "MDQ6VXNlcjM5NTYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/3956266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sekineh", "html_url": "https://github.com/sekineh", "followers_url": "https://api.github.com/users/sekineh/followers", "following_url": "https://api.github.com/users/sekineh/following{/other_user}", "gists_url": "https://api.github.com/users/sekineh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sekineh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sekineh/subscriptions", "organizations_url": "https://api.github.com/users/sekineh/orgs", "repos_url": "https://api.github.com/users/sekineh/repos", "events_url": "https://api.github.com/users/sekineh/events{/privacy}", "received_events_url": "https://api.github.com/users/sekineh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sekineh", "id": 3956266, "node_id": "MDQ6VXNlcjM5NTYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/3956266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sekineh", "html_url": "https://github.com/sekineh", "followers_url": "https://api.github.com/users/sekineh/followers", "following_url": "https://api.github.com/users/sekineh/following{/other_user}", "gists_url": "https://api.github.com/users/sekineh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sekineh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sekineh/subscriptions", "organizations_url": "https://api.github.com/users/sekineh/orgs", "repos_url": "https://api.github.com/users/sekineh/repos", "events_url": "https://api.github.com/users/sekineh/events{/privacy}", "received_events_url": "https://api.github.com/users/sekineh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c0315cfd9750db7793b83bc59dfd353c5dd1624", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c0315cfd9750db7793b83bc59dfd353c5dd1624", "html_url": "https://github.com/rust-lang/rust/commit/0c0315cfd9750db7793b83bc59dfd353c5dd1624"}], "stats": {"total": 127, "additions": 127, "deletions": 0}, "files": [{"sha": "b195decfcf57421f4df8e22bc938c15db52199a0", "filename": "src/ci/docker/thumb-none/Dockerfile", "status": "added", "additions": 127, "deletions": 0, "changes": 127, "blob_url": "https://github.com/rust-lang/rust/blob/c3e2ff8f22bb6978f48ec6dbb3710984eea43ee6/src%2Fci%2Fdocker%2Fthumb-none%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/c3e2ff8f22bb6978f48ec6dbb3710984eea43ee6/src%2Fci%2Fdocker%2Fthumb-none%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fthumb-none%2FDockerfile?ref=c3e2ff8f22bb6978f48ec6dbb3710984eea43ee6", "patch": "@@ -0,0 +1,127 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  sudo \\\n+  xz-utils \\\n+  zlib1g-dev \\\n+  g++-arm-linux-gnueabi \\\n+  g++-arm-linux-gnueabihf \\\n+  g++-aarch64-linux-gnu \\\n+  gcc-sparc64-linux-gnu \\\n+  libc6-dev-sparc64-cross \\\n+  bzip2 \\\n+  patch \\\n+  libssl-dev \\\n+  pkg-config \\\n+  gcc-arm-none-eabi \\\n+  libnewlib-arm-none-eabi\n+\n+WORKDIR /build\n+\n+COPY dist-various-1/build-rumprun.sh /build\n+RUN ./build-rumprun.sh\n+\n+COPY dist-various-1/install-x86_64-redox.sh /build\n+RUN ./install-x86_64-redox.sh\n+\n+COPY dist-various-1/install-mips-musl.sh /build\n+RUN ./install-mips-musl.sh\n+\n+COPY dist-various-1/install-mipsel-musl.sh /build\n+RUN ./install-mipsel-musl.sh\n+\n+# Suppress some warnings in the openwrt toolchains we downloaded\n+ENV STAGING_DIR=/tmp\n+\n+COPY scripts/musl.sh /build\n+RUN env \\\n+    CC=arm-linux-gnueabi-gcc CFLAGS=\"-march=armv5te -marm -mfloat-abi=soft\" \\\n+    CXX=arm-linux-gnueabi-g++ CXXFLAGS=\"-march=armv5te -marm -mfloat-abi=soft\" \\\n+    bash musl.sh armv5te && \\\n+    env \\\n+    CC=arm-linux-gnueabi-gcc CFLAGS=\"-march=armv6 -marm\" \\\n+    CXX=arm-linux-gnueabi-g++ CXXFLAGS=\"-march=armv6 -marm\" \\\n+    bash musl.sh arm && \\\n+    env \\\n+    CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv6 -marm\" \\\n+    CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv6 -marm\" \\\n+    bash musl.sh armhf && \\\n+    env \\\n+    CC=arm-linux-gnueabihf-gcc CFLAGS=\"-march=armv7-a\" \\\n+    CXX=arm-linux-gnueabihf-g++ CXXFLAGS=\"-march=armv7-a\" \\\n+    bash musl.sh armv7 && \\\n+    env \\\n+    CC=aarch64-linux-gnu-gcc \\\n+    CXX=aarch64-linux-gnu-g++ \\\n+    bash musl.sh aarch64 && \\\n+    env \\\n+    CC=mips-openwrt-linux-gcc \\\n+    CXX=mips-openwrt-linux-g++ \\\n+    bash musl.sh mips && \\\n+    env \\\n+    CC=mipsel-openwrt-linux-gcc \\\n+    CXX=mipsel-openwrt-linux-g++ \\\n+    bash musl.sh mipsel && \\\n+    rm -rf /build/*\n+\n+# FIXME(mozilla/sccache#235) this shouldn't be necessary but is currently\n+# necessary to disambiguate the mips compiler with the mipsel compiler. We want\n+# to give these two wrapper scripts (currently identical ones) different hashes\n+# to ensure that sccache understands that they're different compilers.\n+RUN \\\n+  echo \"# a\" >> /usr/local/mips-linux-musl/bin/mips-openwrt-linux-musl-wrapper.sh && \\\n+  echo \"# b\" >> /usr/local/mipsel-linux-musl/bin/mipsel-openwrt-linux-musl-wrapper.sh\n+\n+ENV TARGETS=asmjs-unknown-emscripten\n+ENV TARGETS=$TARGETS,wasm32-unknown-emscripten\n+ENV TARGETS=$TARGETS,x86_64-rumprun-netbsd\n+ENV TARGETS=$TARGETS,mips-unknown-linux-musl\n+ENV TARGETS=$TARGETS,mipsel-unknown-linux-musl\n+ENV TARGETS=$TARGETS,arm-unknown-linux-musleabi\n+ENV TARGETS=$TARGETS,arm-unknown-linux-musleabihf\n+ENV TARGETS=$TARGETS,armv5te-unknown-linux-gnueabi\n+ENV TARGETS=$TARGETS,armv5te-unknown-linux-musleabi\n+ENV TARGETS=$TARGETS,armv7-unknown-linux-musleabihf\n+ENV TARGETS=$TARGETS,aarch64-unknown-linux-musl\n+ENV TARGETS=$TARGETS,sparc64-unknown-linux-gnu\n+ENV TARGETS=$TARGETS,x86_64-unknown-redox\n+ENV TARGETS=$TARGETS,thumbv6m-none-eabi\n+ENV TARGETS=$TARGETS,thumbv7m-none-eabi\n+ENV TARGETS=$TARGETS,thumbv7em-none-eabi\n+ENV TARGETS=$TARGETS,thumbv7em-none-eabihf\n+\n+# FIXME: remove armv5te vars after https://github.com/alexcrichton/cc-rs/issues/271\n+#        get fixed and cc update\n+ENV CC_mipsel_unknown_linux_musl=mipsel-openwrt-linux-gcc \\\n+    CC_mips_unknown_linux_musl=mips-openwrt-linux-gcc \\\n+    CC_sparc64_unknown_linux_gnu=sparc64-linux-gnu-gcc \\\n+    CC_x86_64_unknown_redox=x86_64-unknown-redox-gcc \\\n+    CC_armv5te_unknown_linux_gnueabi=arm-linux-gnueabi-gcc \\\n+    CFLAGS_armv5te_unknown_linux_gnueabi=\"-march=armv5te -marm -mfloat-abi=soft\" \\\n+    CC_armv5te_unknown_linux_musleabi=arm-linux-gnueabi-gcc \\\n+    CFLAGS_armv5te_unknown_linux_musleabi=\"-march=armv5te -marm -mfloat-abi=soft\"\n+\n+ENV RUST_CONFIGURE_ARGS \\\n+      --musl-root-armv5te=/musl-armv5te \\\n+      --musl-root-arm=/musl-arm \\\n+      --musl-root-armhf=/musl-armhf \\\n+      --musl-root-armv7=/musl-armv7 \\\n+      --musl-root-aarch64=/musl-aarch64 \\\n+      --musl-root-mips=/musl-mips \\\n+      --musl-root-mipsel=/musl-mipsel \\\n+      --enable-emscripten \\\n+      --disable-docs\n+\n+ENV SCRIPT python2.7 ../x.py dist --target $TARGETS\n+\n+# sccache\n+COPY scripts/sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh"}]}