{"sha": "27d5ff6c9cafe87411b067b9ef21c50e7590171a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3ZDVmZjZjOWNhZmU4NzQxMWIwNjdiOWVmMjFjNTBlNzU5MDE3MWE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-08-30T16:47:28Z"}, "committer": {"name": "Laura Peskin", "email": "laura.peskin@gmail.com", "date": "2017-09-24T19:40:16Z"}, "message": "Rustup", "tree": {"sha": "f288bd862de8040b8fd56d789736da914a625a1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f288bd862de8040b8fd56d789736da914a625a1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27d5ff6c9cafe87411b067b9ef21c50e7590171a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27d5ff6c9cafe87411b067b9ef21c50e7590171a", "html_url": "https://github.com/rust-lang/rust/commit/27d5ff6c9cafe87411b067b9ef21c50e7590171a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27d5ff6c9cafe87411b067b9ef21c50e7590171a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lpesk", "id": 7589231, "node_id": "MDQ6VXNlcjc1ODkyMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/7589231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lpesk", "html_url": "https://github.com/lpesk", "followers_url": "https://api.github.com/users/lpesk/followers", "following_url": "https://api.github.com/users/lpesk/following{/other_user}", "gists_url": "https://api.github.com/users/lpesk/gists{/gist_id}", "starred_url": "https://api.github.com/users/lpesk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lpesk/subscriptions", "organizations_url": "https://api.github.com/users/lpesk/orgs", "repos_url": "https://api.github.com/users/lpesk/repos", "events_url": "https://api.github.com/users/lpesk/events{/privacy}", "received_events_url": "https://api.github.com/users/lpesk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74f4fd32e98f59414758f3b156e417742ef59e29", "url": "https://api.github.com/repos/rust-lang/rust/commits/74f4fd32e98f59414758f3b156e417742ef59e29", "html_url": "https://github.com/rust-lang/rust/commit/74f4fd32e98f59414758f3b156e417742ef59e29"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "bcae2868db27d391b8b924500226cdceb982ddf5", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/27d5ff6c9cafe87411b067b9ef21c50e7590171a/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27d5ff6c9cafe87411b067b9ef21c50e7590171a/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=27d5ff6c9cafe87411b067b9ef21c50e7590171a", "patch": "@@ -1363,15 +1363,15 @@ fn check_for_mutation(cx: &LateContext, body: &Expr, bound: &Expr) -> bool {\n         let ExprPath(ref qpath) = bound.node,\n         let QPath::Resolved(None, ref path) = *qpath,\n     ], {\n-        let def = cx.tables.qpath_def(qpath, bound.id);\n+        let def = cx.tables.qpath_def(qpath, bound.hir_id);\n         match def {\n             Def::Local(..) | Def::Upvar(..) => {\n                 let def_id = def.def_id();\n                 let node_id = cx.tcx.hir.as_local_node_id(def_id).expect(\"local/upvar are local nodes\");\n                 let node_str = cx.tcx.hir.get(node_id);\n                 if_let_chain! {[ // prob redundant now, remove\n-                    let map::Node::NodeLocal(pat) = node_str,\n-                    let PatKind::Binding(bind_ann, _, _, _) = pat.node,\n+                    let map::Node::NodeLocal(local) = node_str,\n+                    let PatKind::Binding(bind_ann, _, _, _) = local.pat.node,\n                     let BindingAnnotation::Mutable = bind_ann,\n                     \n                 ], {"}]}