{"sha": "3e5956339482e06dfcb8690dee9211b77aa6e218", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNTk1NjMzOTQ4MmUwNmRmY2I4NjkwZGVlOTIxMWI3N2FhNmUyMTg=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-26T12:50:42Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-26T12:50:42Z"}, "message": "Don't use exact definition of std's ErrorKind in test.\n\nEvery time we add something to this enum in std, this test breaks.", "tree": {"sha": "5193f113f6454f34704891d055c3f98bbf4f2b43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5193f113f6454f34704891d055c3f98bbf4f2b43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e5956339482e06dfcb8690dee9211b77aa6e218", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e5956339482e06dfcb8690dee9211b77aa6e218", "html_url": "https://github.com/rust-lang/rust/commit/3e5956339482e06dfcb8690dee9211b77aa6e218", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e5956339482e06dfcb8690dee9211b77aa6e218/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d427b624f15a5c782c97021c3717451d86b8576", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d427b624f15a5c782c97021c3717451d86b8576", "html_url": "https://github.com/rust-lang/rust/commit/8d427b624f15a5c782c97021c3717451d86b8576"}], "stats": {"total": 45, "additions": 37, "deletions": 8}, "files": [{"sha": "67d4d255701c387e8a9a550c0dc75b24bf4c6577", "filename": "tests/ui/auxiliary/non-exhaustive-enum.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3e5956339482e06dfcb8690dee9211b77aa6e218/tests%2Fui%2Fauxiliary%2Fnon-exhaustive-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e5956339482e06dfcb8690dee9211b77aa6e218/tests%2Fui%2Fauxiliary%2Fnon-exhaustive-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fnon-exhaustive-enum.rs?ref=3e5956339482e06dfcb8690dee9211b77aa6e218", "patch": "@@ -0,0 +1,23 @@\n+#[non_exhaustive]\n+pub enum ErrorKind {\n+    NotFound,\n+    PermissionDenied,\n+    ConnectionRefused,\n+    ConnectionReset,\n+    ConnectionAborted,\n+    NotConnected,\n+    AddrInUse,\n+    AddrNotAvailable,\n+    BrokenPipe,\n+    AlreadyExists,\n+    WouldBlock,\n+    InvalidInput,\n+    InvalidData,\n+    TimedOut,\n+    WriteZero,\n+    Interrupted,\n+    Other,\n+    UnexpectedEof,\n+    Unsupported,\n+    OutOfMemory,\n+}"}, {"sha": "2b8f260397c11730fdf83238467ba82168e54bd2", "filename": "tests/ui/wildcard_enum_match_arm.fixed", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3e5956339482e06dfcb8690dee9211b77aa6e218/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3e5956339482e06dfcb8690dee9211b77aa6e218/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.fixed?ref=3e5956339482e06dfcb8690dee9211b77aa6e218", "patch": "@@ -1,4 +1,5 @@\n // run-rustfix\n+// aux-build:non-exhaustive-enum.rs\n \n #![deny(clippy::wildcard_enum_match_arm)]\n #![allow(\n@@ -11,7 +12,9 @@\n     clippy::diverging_sub_expression\n )]\n \n-use std::io::ErrorKind;\n+extern crate non_exhaustive_enum;\n+\n+use non_exhaustive_enum::ErrorKind;\n \n #[derive(Clone, Copy, Debug, Eq, PartialEq)]\n enum Color {"}, {"sha": "1f7bcffd5f5a4855c6f3605b1e6fa39330bc5471", "filename": "tests/ui/wildcard_enum_match_arm.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3e5956339482e06dfcb8690dee9211b77aa6e218/tests%2Fui%2Fwildcard_enum_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e5956339482e06dfcb8690dee9211b77aa6e218/tests%2Fui%2Fwildcard_enum_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.rs?ref=3e5956339482e06dfcb8690dee9211b77aa6e218", "patch": "@@ -1,4 +1,5 @@\n // run-rustfix\n+// aux-build:non-exhaustive-enum.rs\n \n #![deny(clippy::wildcard_enum_match_arm)]\n #![allow(\n@@ -11,7 +12,9 @@\n     clippy::diverging_sub_expression\n )]\n \n-use std::io::ErrorKind;\n+extern crate non_exhaustive_enum;\n+\n+use non_exhaustive_enum::ErrorKind;\n \n #[derive(Clone, Copy, Debug, Eq, PartialEq)]\n enum Color {"}, {"sha": "80ba5ee4f04599bc0e6f83a7e6c5eccd0b65a337", "filename": "tests/ui/wildcard_enum_match_arm.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3e5956339482e06dfcb8690dee9211b77aa6e218/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e5956339482e06dfcb8690dee9211b77aa6e218/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.stderr?ref=3e5956339482e06dfcb8690dee9211b77aa6e218", "patch": "@@ -1,35 +1,35 @@\n error: wildcard match will also match any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:39:9\n+  --> $DIR/wildcard_enum_match_arm.rs:42:9\n    |\n LL |         _ => eprintln!(\"Not red\"),\n    |         ^ help: try this: `Color::Green | Color::Blue | Color::Rgb(..) | Color::Cyan`\n    |\n note: the lint level is defined here\n-  --> $DIR/wildcard_enum_match_arm.rs:3:9\n+  --> $DIR/wildcard_enum_match_arm.rs:4:9\n    |\n LL | #![deny(clippy::wildcard_enum_match_arm)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: wildcard match will also match any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:43:9\n+  --> $DIR/wildcard_enum_match_arm.rs:46:9\n    |\n LL |         _not_red => eprintln!(\"Not red\"),\n    |         ^^^^^^^^ help: try this: `_not_red @ Color::Green | _not_red @ Color::Blue | _not_red @ Color::Rgb(..) | _not_red @ Color::Cyan`\n \n error: wildcard match will also match any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:47:9\n+  --> $DIR/wildcard_enum_match_arm.rs:50:9\n    |\n LL |         not_red => format!(\"{:?}\", not_red),\n    |         ^^^^^^^ help: try this: `not_red @ Color::Green | not_red @ Color::Blue | not_red @ Color::Rgb(..) | not_red @ Color::Cyan`\n \n error: wildcard match will also match any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:63:9\n+  --> $DIR/wildcard_enum_match_arm.rs:66:9\n    |\n LL |         _ => \"No red\",\n    |         ^ help: try this: `Color::Red | Color::Green | Color::Blue | Color::Rgb(..) | Color::Cyan`\n \n error: wildcard matches known variants and will also match future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:80:9\n+  --> $DIR/wildcard_enum_match_arm.rs:83:9\n    |\n LL |         _ => {},\n    |         ^ help: try this: `ErrorKind::PermissionDenied | ErrorKind::ConnectionRefused | ErrorKind::ConnectionReset | ErrorKind::ConnectionAborted | ErrorKind::NotConnected | ErrorKind::AddrInUse | ErrorKind::AddrNotAvailable | ErrorKind::BrokenPipe | ErrorKind::AlreadyExists | ErrorKind::WouldBlock | ErrorKind::InvalidInput | ErrorKind::InvalidData | ErrorKind::TimedOut | ErrorKind::WriteZero | ErrorKind::Interrupted | ErrorKind::Other | ErrorKind::UnexpectedEof | ErrorKind::Unsupported | ErrorKind::OutOfMemory | _`"}]}