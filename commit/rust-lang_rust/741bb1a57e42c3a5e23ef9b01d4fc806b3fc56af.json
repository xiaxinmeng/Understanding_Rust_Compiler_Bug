{"sha": "741bb1a57e42c3a5e23ef9b01d4fc806b3fc56af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0MWJiMWE1N2U0MmMzYTVlMjNlZjliMDFkNGZjODA2YjNmYzU2YWY=", "commit": {"author": {"name": "Ben Gamari", "email": "bgamari.foss@gmail.com", "date": "2014-07-08T23:45:36Z"}, "committer": {"name": "Ben Gamari", "email": "bgamari.foss@gmail.com", "date": "2014-07-15T23:34:41Z"}, "message": "typeck::check::_match: Better error handling\n\nPreviously this was an Option::unwrap() which failed for me.\nUnfortunately I've since inadvertently worked around the bug and have\nbeen unable to reproduce it. With this patch hopefully the next person\nto encounter this will be in a slightly better position to debug it.", "tree": {"sha": "9944687bc938b08bf2dacec00e352af920911820", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9944687bc938b08bf2dacec00e352af920911820"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/741bb1a57e42c3a5e23ef9b01d4fc806b3fc56af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/741bb1a57e42c3a5e23ef9b01d4fc806b3fc56af", "html_url": "https://github.com/rust-lang/rust/commit/741bb1a57e42c3a5e23ef9b01d4fc806b3fc56af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/741bb1a57e42c3a5e23ef9b01d4fc806b3fc56af/comments", "author": {"login": "bgamari", "id": 1010174, "node_id": "MDQ6VXNlcjEwMTAxNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1010174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgamari", "html_url": "https://github.com/bgamari", "followers_url": "https://api.github.com/users/bgamari/followers", "following_url": "https://api.github.com/users/bgamari/following{/other_user}", "gists_url": "https://api.github.com/users/bgamari/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgamari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgamari/subscriptions", "organizations_url": "https://api.github.com/users/bgamari/orgs", "repos_url": "https://api.github.com/users/bgamari/repos", "events_url": "https://api.github.com/users/bgamari/events{/privacy}", "received_events_url": "https://api.github.com/users/bgamari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bgamari", "id": 1010174, "node_id": "MDQ6VXNlcjEwMTAxNzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1010174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgamari", "html_url": "https://github.com/bgamari", "followers_url": "https://api.github.com/users/bgamari/followers", "following_url": "https://api.github.com/users/bgamari/following{/other_user}", "gists_url": "https://api.github.com/users/bgamari/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgamari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgamari/subscriptions", "organizations_url": "https://api.github.com/users/bgamari/orgs", "repos_url": "https://api.github.com/users/bgamari/repos", "events_url": "https://api.github.com/users/bgamari/events{/privacy}", "received_events_url": "https://api.github.com/users/bgamari/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdf5b6c3daa2797c704f1f1b335b1280b8d8fbdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdf5b6c3daa2797c704f1f1b335b1280b8d8fbdb", "html_url": "https://github.com/rust-lang/rust/commit/bdf5b6c3daa2797c704f1f1b335b1280b8d8fbdb"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "be01643e22a583e6a547a267d6e0451077f3a033", "filename": "src/librustc/middle/typeck/check/_match.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/741bb1a57e42c3a5e23ef9b01d4fc806b3fc56af/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/741bb1a57e42c3a5e23ef9b01d4fc806b3fc56af/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs?ref=741bb1a57e42c3a5e23ef9b01d4fc806b3fc56af", "patch": "@@ -507,14 +507,20 @@ pub fn check_pat(pcx: &pat_ctxt, pat: &ast::Pat, expected: ty::t) {\n             ty::ty_struct(cid, ref substs) => {\n                 // Verify that the pattern named the right structure.\n                 let item_did = tcx.def_map.borrow().get(&pat.id).def_id();\n-                let struct_did =\n-                    ty::ty_to_def_id(\n-                        ty::lookup_item_type(tcx, item_did).ty).unwrap();\n-                if struct_did != cid {\n-                    span_err!(tcx.sess, pat.span, E0032,\n-                        \"`{}` does not name the structure `{}`\",\n-                        pprust::path_to_string(path),\n-                        fcx.infcx().ty_to_string(expected));\n+                match ty::ty_to_def_id(ty::lookup_item_type(tcx, item_did).ty) {\n+                    Some(struct_did) if struct_did != cid => {\n+                        span_err!(tcx.sess, path.span, E0032,\n+                                  \"`{}` does not name the structure `{}`\",\n+                                  pprust::path_to_string(path),\n+                                  fcx.infcx().ty_to_string(expected));\n+                    },\n+                    Some(_) => {},\n+                    None => {\n+                        tcx.sess.span_bug(\n+                            path.span,\n+                            format!(\"This shouldn't happen: failed to lookup structure. \\\n+                                item_did = {}\", item_did).as_slice())\n+                    },\n                 }\n \n                 check_struct_pat(pcx, pat.id, pat.span, expected, path,"}]}