{"sha": "64fe4e32db8c593d625a44063fca1755bba493ee", "node_id": "C_kwDOAAsO6NoAKDY0ZmU0ZTMyZGI4YzU5M2Q2MjVhNDQwNjNmY2ExNzU1YmJhNDkzZWU", "commit": {"author": {"name": "DevAccentor", "email": "dev.accentor@gmail.com", "date": "2022-06-03T13:59:26Z"}, "committer": {"name": "DevAccentor", "email": "dev.accentor@gmail.com", "date": "2022-06-03T16:11:23Z"}, "message": "add as_underscore lint", "tree": {"sha": "4f21162bede70fb72c2a9ecf8ad012e09ca0bd84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f21162bede70fb72c2a9ecf8ad012e09ca0bd84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64fe4e32db8c593d625a44063fca1755bba493ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64fe4e32db8c593d625a44063fca1755bba493ee", "html_url": "https://github.com/rust-lang/rust/commit/64fe4e32db8c593d625a44063fca1755bba493ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64fe4e32db8c593d625a44063fca1755bba493ee/comments", "author": {"login": "DevAccentor", "id": 106545343, "node_id": "U_kgDOBlnAvw", "avatar_url": "https://avatars.githubusercontent.com/u/106545343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevAccentor", "html_url": "https://github.com/DevAccentor", "followers_url": "https://api.github.com/users/DevAccentor/followers", "following_url": "https://api.github.com/users/DevAccentor/following{/other_user}", "gists_url": "https://api.github.com/users/DevAccentor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevAccentor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevAccentor/subscriptions", "organizations_url": "https://api.github.com/users/DevAccentor/orgs", "repos_url": "https://api.github.com/users/DevAccentor/repos", "events_url": "https://api.github.com/users/DevAccentor/events{/privacy}", "received_events_url": "https://api.github.com/users/DevAccentor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DevAccentor", "id": 106545343, "node_id": "U_kgDOBlnAvw", "avatar_url": "https://avatars.githubusercontent.com/u/106545343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevAccentor", "html_url": "https://github.com/DevAccentor", "followers_url": "https://api.github.com/users/DevAccentor/followers", "following_url": "https://api.github.com/users/DevAccentor/following{/other_user}", "gists_url": "https://api.github.com/users/DevAccentor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevAccentor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevAccentor/subscriptions", "organizations_url": "https://api.github.com/users/DevAccentor/orgs", "repos_url": "https://api.github.com/users/DevAccentor/repos", "events_url": "https://api.github.com/users/DevAccentor/events{/privacy}", "received_events_url": "https://api.github.com/users/DevAccentor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c0d649db2a538fd0c63c846ecaa671a277e23f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c0d649db2a538fd0c63c846ecaa671a277e23f5", "html_url": "https://github.com/rust-lang/rust/commit/7c0d649db2a538fd0c63c846ecaa671a277e23f5"}], "stats": {"total": 125, "additions": 125, "deletions": 0}, "files": [{"sha": "6ef338b819d4dfac1cae7808eaf237a238ed1482", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/64fe4e32db8c593d625a44063fca1755bba493ee/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/64fe4e32db8c593d625a44063fca1755bba493ee/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=64fe4e32db8c593d625a44063fca1755bba493ee", "patch": "@@ -3280,6 +3280,7 @@ Released 2018-09-13\n [`almost_swapped`]: https://rust-lang.github.io/rust-clippy/master/index.html#almost_swapped\n [`approx_constant`]: https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant\n [`as_conversions`]: https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions\n+[`as_underscore`]: https://rust-lang.github.io/rust-clippy/master/index.html#as_underscore\n [`assertions_on_constants`]: https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n [`assign_op_pattern`]: https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n [`assign_ops`]: https://rust-lang.github.io/rust-clippy/master/index.html#assign_ops"}, {"sha": "464be4218dd4d519ec7ab3dfb8880f0b5af7ed04", "filename": "clippy_lints/src/as_underscore.rs", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/64fe4e32db8c593d625a44063fca1755bba493ee/clippy_lints%2Fsrc%2Fas_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64fe4e32db8c593d625a44063fca1755bba493ee/clippy_lints%2Fsrc%2Fas_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fas_underscore.rs?ref=64fe4e32db8c593d625a44063fca1755bba493ee", "patch": "@@ -0,0 +1,74 @@\n+use clippy_utils::diagnostics::{span_lint_and_help, span_lint_and_then};\n+use rustc_errors::Applicability;\n+use rustc_hir::{Expr, ExprKind, TyKind};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Check for the usage of `as _` conversion using inferred type.\n+    ///\n+    /// ### Why is this bad?\n+    /// The conversion might include lossy conversion and dangerous cast that might go\n+    /// undetected du to the type being inferred.\n+    ///\n+    /// The lint is allowed by default as using `_` is less wordy than always specifying the type.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// fn foo(n: usize) {}\n+    /// let n: u16 = 256;\n+    /// foo(n as _);\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// fn foo(n: usize) {}\n+    /// let n: u16 = 256;\n+    /// foo(n as usize);\n+    /// ```\n+    #[clippy::version = \"1.63.0\"]\n+    pub AS_UNDERSCORE,\n+    restriction,\n+    \"detects `as _` conversion\"\n+}\n+declare_lint_pass!(AsUnderscore => [AS_UNDERSCORE]);\n+\n+impl<'tcx> LateLintPass<'tcx> for AsUnderscore {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &Expr<'tcx>) {\n+        if in_external_macro(cx.sess(), expr.span) {\n+            return;\n+        }\n+\n+        if let ExprKind::Cast(_, ty) = expr.kind && let TyKind::Infer = ty.kind {\n+\n+            let ty_resolved = cx.typeck_results().expr_ty(expr);\n+            if let ty::Error(_) = ty_resolved.kind() {\n+                span_lint_and_help(\n+                    cx,\n+                AS_UNDERSCORE,\n+                expr.span,\n+                \"using `as _` conversion\",\n+                None,\n+                \"consider giving the type explicitly\",\n+                );\n+            } else {\n+            span_lint_and_then(\n+                cx,\n+                AS_UNDERSCORE,\n+                expr.span,\n+                \"using `as _` conversion\",\n+                |diag| {\n+                    diag.span_suggestion(\n+                        ty.span,\n+                        \"consider giving the type explicitly\",\n+                        format!(\"{}\", ty_resolved),\n+                        Applicability::MachineApplicable,\n+                    );\n+            }\n+            );\n+        }\n+        }\n+    }\n+}"}, {"sha": "f2e0083dea69943463eb06c03ddd757f0fa374e3", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/64fe4e32db8c593d625a44063fca1755bba493ee/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64fe4e32db8c593d625a44063fca1755bba493ee/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=64fe4e32db8c593d625a44063fca1755bba493ee", "patch": "@@ -37,6 +37,7 @@ store.register_lints(&[\n     almost_complete_letter_range::ALMOST_COMPLETE_LETTER_RANGE,\n     approx_const::APPROX_CONSTANT,\n     as_conversions::AS_CONVERSIONS,\n+    as_underscore::AS_UNDERSCORE,\n     asm_syntax::INLINE_ASM_X86_ATT_SYNTAX,\n     asm_syntax::INLINE_ASM_X86_INTEL_SYNTAX,\n     assertions_on_constants::ASSERTIONS_ON_CONSTANTS,"}, {"sha": "aaa83402ccc12ea2b669c06ca31a92816656684c", "filename": "clippy_lints/src/lib.register_restriction.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/64fe4e32db8c593d625a44063fca1755bba493ee/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64fe4e32db8c593d625a44063fca1755bba493ee/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_restriction.rs?ref=64fe4e32db8c593d625a44063fca1755bba493ee", "patch": "@@ -4,6 +4,7 @@\n \n store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n     LintId::of(as_conversions::AS_CONVERSIONS),\n+    LintId::of(as_underscore::AS_UNDERSCORE),\n     LintId::of(asm_syntax::INLINE_ASM_X86_ATT_SYNTAX),\n     LintId::of(asm_syntax::INLINE_ASM_X86_INTEL_SYNTAX),\n     LintId::of(attrs::ALLOW_ATTRIBUTES_WITHOUT_REASON),"}, {"sha": "235a998f75315e0e9eafdc458afbe38eb642156b", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64fe4e32db8c593d625a44063fca1755bba493ee/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64fe4e32db8c593d625a44063fca1755bba493ee/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=64fe4e32db8c593d625a44063fca1755bba493ee", "patch": "@@ -171,6 +171,7 @@ mod absurd_extreme_comparisons;\n mod almost_complete_letter_range;\n mod approx_const;\n mod as_conversions;\n+mod as_underscore;\n mod asm_syntax;\n mod assertions_on_constants;\n mod assign_ops;\n@@ -919,6 +920,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(move || Box::new(almost_complete_letter_range::AlmostCompleteLetterRange::new(msrv)));\n     store.register_late_pass(|| Box::new(swap_ptr_to_ref::SwapPtrToRef));\n     store.register_late_pass(|| Box::new(mismatching_type_param_order::TypeParamMismatch));\n+    store.register_late_pass(|| Box::new(as_underscore::AsUnderscore));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "948f6d8e6b10b15266fb0b7fb49b0dc523d8ebf5", "filename": "tests/ui/as_underscore.fixed", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/64fe4e32db8c593d625a44063fca1755bba493ee/tests%2Fui%2Fas_underscore.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/64fe4e32db8c593d625a44063fca1755bba493ee/tests%2Fui%2Fas_underscore.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fas_underscore.fixed?ref=64fe4e32db8c593d625a44063fca1755bba493ee", "patch": "@@ -0,0 +1,13 @@\n+// run-rustfix\n+\n+#![warn(clippy::as_underscore)]\n+\n+fn foo(_n: usize) {}\n+\n+fn main() {\n+    let n: u16 = 256;\n+    foo(n as usize);\n+\n+    let n = 0_u128;\n+    let _n: u8 = n as u8;\n+}"}, {"sha": "97785ed08a8d0a53a9aa5b3949e49faf5f723103", "filename": "tests/ui/as_underscore.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/64fe4e32db8c593d625a44063fca1755bba493ee/tests%2Fui%2Fas_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64fe4e32db8c593d625a44063fca1755bba493ee/tests%2Fui%2Fas_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fas_underscore.rs?ref=64fe4e32db8c593d625a44063fca1755bba493ee", "patch": "@@ -0,0 +1,13 @@\n+// run-rustfix\n+\n+#![warn(clippy::as_underscore)]\n+\n+fn foo(_n: usize) {}\n+\n+fn main() {\n+    let n: u16 = 256;\n+    foo(n as _);\n+\n+    let n = 0_u128;\n+    let _n: u8 = n as _;\n+}"}, {"sha": "d7cd58d965acb8a334eca05a675304b395b9af9f", "filename": "tests/ui/as_underscore.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/64fe4e32db8c593d625a44063fca1755bba493ee/tests%2Fui%2Fas_underscore.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64fe4e32db8c593d625a44063fca1755bba493ee/tests%2Fui%2Fas_underscore.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fas_underscore.stderr?ref=64fe4e32db8c593d625a44063fca1755bba493ee", "patch": "@@ -0,0 +1,20 @@\n+error: using `as _` conversion\n+  --> $DIR/as_underscore.rs:9:9\n+   |\n+LL |     foo(n as _);\n+   |         ^^^^^-\n+   |              |\n+   |              help: consider giving the type explicitly: `usize`\n+   |\n+   = note: `-D clippy::as-underscore` implied by `-D warnings`\n+\n+error: using `as _` conversion\n+  --> $DIR/as_underscore.rs:12:18\n+   |\n+LL |     let _n: u8 = n as _;\n+   |                  ^^^^^-\n+   |                       |\n+   |                       help: consider giving the type explicitly: `u8`\n+\n+error: aborting due to 2 previous errors\n+"}]}