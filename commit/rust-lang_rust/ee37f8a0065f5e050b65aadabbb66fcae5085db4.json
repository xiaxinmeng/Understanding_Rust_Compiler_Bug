{"sha": "ee37f8a0065f5e050b65aadabbb66fcae5085db4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMzdmOGEwMDY1ZjVlMDUwYjY1YWFkYWJiYjY2ZmNhZTUwODVkYjQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-31T18:39:05Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-31T18:40:17Z"}, "message": "Fix up the tutorial doc-tests.", "tree": {"sha": "40ebffa343bf9a5c4ec4ae1c142c6b4b8ca0dee6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40ebffa343bf9a5c4ec4ae1c142c6b4b8ca0dee6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee37f8a0065f5e050b65aadabbb66fcae5085db4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee37f8a0065f5e050b65aadabbb66fcae5085db4", "html_url": "https://github.com/rust-lang/rust/commit/ee37f8a0065f5e050b65aadabbb66fcae5085db4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee37f8a0065f5e050b65aadabbb66fcae5085db4/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e7d5e1cbddeee95a1a7c996b99d78dec0da2954", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e7d5e1cbddeee95a1a7c996b99d78dec0da2954", "html_url": "https://github.com/rust-lang/rust/commit/6e7d5e1cbddeee95a1a7c996b99d78dec0da2954"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "133258e17bbb2bf7c83b8d6520d461b35773ab7a", "filename": "doc/tutorial.md", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ee37f8a0065f5e050b65aadabbb66fcae5085db4/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/ee37f8a0065f5e050b65aadabbb66fcae5085db4/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=ee37f8a0065f5e050b65aadabbb66fcae5085db4", "patch": "@@ -1019,6 +1019,12 @@ To create a new record based on the value of an existing record\n you construct it using the `with` keyword:\n \n ~~~~\n+# impl {x:float, y:float} : core::cmp::Eq {\n+#   pure fn eq(&&other: {x:float, y:float}) -> bool {\n+#       self.x == other.x && self.y == other.y\n+#   }\n+# }\n+\n let oldpoint = {x: 10f, y: 20f};\n let newpoint = {x: 0f with oldpoint};\n assert newpoint == {x: 0f, y: 20f};\n@@ -1437,7 +1443,10 @@ also done with square brackets (zero-based):\n # fn draw_scene(c: crayon) { }\n \n let crayons = ~[banana_mania, beaver, bittersweet];\n-if crayons[0] == bittersweet { draw_scene(crayons[0]); }\n+match crayons[0] {\n+\t   bittersweet => draw_scene(crayons[0]),\n+       _ => ()\n+}\n ~~~~\n \n By default, vectors are immutable\u2014you can not replace their elements."}]}