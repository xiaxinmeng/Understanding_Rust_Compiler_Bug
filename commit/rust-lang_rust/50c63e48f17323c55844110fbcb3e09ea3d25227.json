{"sha": "50c63e48f17323c55844110fbcb3e09ea3d25227", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYzYzZTQ4ZjE3MzIzYzU1ODQ0MTEwZmJjYjNlMDllYTNkMjUyMjc=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-04-05T21:12:58Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-05-02T15:58:39Z"}, "message": "ty: use `delay_span_bug` in `ty::AdtDef::eval_explicit_discr`.", "tree": {"sha": "0cd1395df9155a45561a98cb4b11cda58fb70339", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cd1395df9155a45561a98cb4b11cda58fb70339"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50c63e48f17323c55844110fbcb3e09ea3d25227", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50c63e48f17323c55844110fbcb3e09ea3d25227", "html_url": "https://github.com/rust-lang/rust/commit/50c63e48f17323c55844110fbcb3e09ea3d25227", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50c63e48f17323c55844110fbcb3e09ea3d25227/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7184d137f65bb8d143ce8b5b664e50d33c4b5fbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7184d137f65bb8d143ce8b5b664e50d33c4b5fbd", "html_url": "https://github.com/rust-lang/rust/commit/7184d137f65bb8d143ce8b5b664e50d33c4b5fbd"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "a8a885c587e67a03046a36f22f73812fe3a64a3c", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/50c63e48f17323c55844110fbcb3e09ea3d25227/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c63e48f17323c55844110fbcb3e09ea3d25227/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=50c63e48f17323c55844110fbcb3e09ea3d25227", "patch": "@@ -2388,21 +2388,14 @@ impl<'tcx> AdtDef {\n                     None\n                 }\n             }\n-            Err(ErrorHandled::Reported(ErrorReported) | ErrorHandled::Linted) => {\n-                if !expr_did.is_local() {\n-                    span_bug!(\n-                        tcx.def_span(expr_did),\n-                        \"variant discriminant evaluation succeeded \\\n-                         in its crate but failed locally\"\n-                    );\n-                }\n-                None\n-            }\n-            Err(ErrorHandled::TooGeneric) => {\n-                tcx.sess.delay_span_bug(\n-                    tcx.def_span(expr_did),\n-                    \"enum discriminant depends on generic arguments\",\n-                );\n+            Err(err) => {\n+                let msg = match err {\n+                    ErrorHandled::Reported(ErrorReported) | ErrorHandled::Linted => {\n+                        \"enum discriminant evaluation failed\"\n+                    }\n+                    ErrorHandled::TooGeneric => \"enum discriminant depends on generics\",\n+                };\n+                tcx.sess.delay_span_bug(tcx.def_span(expr_did), msg);\n                 None\n             }\n         }"}]}