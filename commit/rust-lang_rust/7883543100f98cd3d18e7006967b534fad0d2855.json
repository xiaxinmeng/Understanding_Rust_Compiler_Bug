{"sha": "7883543100f98cd3d18e7006967b534fad0d2855", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ODM1NDMxMDBmOThjZDNkMThlNzAwNjk2N2I1MzRmYWQwZDI4NTU=", "commit": {"author": {"name": "comex", "email": "comexk@gmail.com", "date": "2017-01-03T19:24:53Z"}, "committer": {"name": "comex", "email": "comexk@gmail.com", "date": "2017-01-03T19:24:53Z"}, "message": "Print attributes on expressions when pretty printing.", "tree": {"sha": "993c15149e4cee978b94201c20d5c98c756810b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/993c15149e4cee978b94201c20d5c98c756810b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7883543100f98cd3d18e7006967b534fad0d2855", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7883543100f98cd3d18e7006967b534fad0d2855", "html_url": "https://github.com/rust-lang/rust/commit/7883543100f98cd3d18e7006967b534fad0d2855", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7883543100f98cd3d18e7006967b534fad0d2855/comments", "author": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "comex", "id": 47517, "node_id": "MDQ6VXNlcjQ3NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/47517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comex", "html_url": "https://github.com/comex", "followers_url": "https://api.github.com/users/comex/followers", "following_url": "https://api.github.com/users/comex/following{/other_user}", "gists_url": "https://api.github.com/users/comex/gists{/gist_id}", "starred_url": "https://api.github.com/users/comex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comex/subscriptions", "organizations_url": "https://api.github.com/users/comex/orgs", "repos_url": "https://api.github.com/users/comex/repos", "events_url": "https://api.github.com/users/comex/events{/privacy}", "received_events_url": "https://api.github.com/users/comex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f62c2920077eb5cb81323142fc5dbe6ae8813c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f62c2920077eb5cb81323142fc5dbe6ae8813c0", "html_url": "https://github.com/rust-lang/rust/commit/8f62c2920077eb5cb81323142fc5dbe6ae8813c0"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "c06c53810d7536eabcf5cf19e214b018e5940965", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7883543100f98cd3d18e7006967b534fad0d2855/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7883543100f98cd3d18e7006967b534fad0d2855/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=7883543100f98cd3d18e7006967b534fad0d2855", "patch": "@@ -1210,6 +1210,7 @@ impl<'a> State<'a> {\n \n     pub fn print_expr(&mut self, expr: &hir::Expr) -> io::Result<()> {\n         self.maybe_print_comment(expr.span.lo)?;\n+        self.print_outer_attributes(&expr.attrs)?;\n         self.ibox(indent_unit)?;\n         self.ann.pre(self, NodeExpr(expr))?;\n         match expr.node {"}]}