{"sha": "7d0e5bbb67f5c1d30b8c23bbfdaa6ed3cc281786", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMGU1YmJiNjdmNWMxZDMwYjhjMjNiYmZkYWE2ZWQzY2MyODE3ODY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-09T09:35:35Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-18T14:08:25Z"}, "message": "parser/expand: minor cleanup", "tree": {"sha": "4498015944c59d3b1e0d03772bdcdbeb46f2e253", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4498015944c59d3b1e0d03772bdcdbeb46f2e253"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d0e5bbb67f5c1d30b8c23bbfdaa6ed3cc281786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d0e5bbb67f5c1d30b8c23bbfdaa6ed3cc281786", "html_url": "https://github.com/rust-lang/rust/commit/7d0e5bbb67f5c1d30b8c23bbfdaa6ed3cc281786", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d0e5bbb67f5c1d30b8c23bbfdaa6ed3cc281786/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6cb04ff2303bcebf15583097ffb05e865eea7f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6cb04ff2303bcebf15583097ffb05e865eea7f4", "html_url": "https://github.com/rust-lang/rust/commit/a6cb04ff2303bcebf15583097ffb05e865eea7f4"}], "stats": {"total": 19, "additions": 2, "deletions": 17}, "files": [{"sha": "3de2169f1142e41560a76cdee472263724fbd08a", "filename": "src/librustc_expand/mbe/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d0e5bbb67f5c1d30b8c23bbfdaa6ed3cc281786/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0e5bbb67f5c1d30b8c23bbfdaa6ed3cc281786/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs?ref=7d0e5bbb67f5c1d30b8c23bbfdaa6ed3cc281786", "patch": "@@ -258,7 +258,7 @@ fn generic_extension<'cx>(\n                     trace_macros_note(&mut cx.expansions, sp, msg);\n                 }\n \n-                let mut p = Parser::new(cx.parse_sess(), tts, false, None);\n+                let mut p = Parser::new(sess, tts, false, None);\n                 p.root_module_name =\n                     cx.current_expansion.module.mod_path.last().map(|id| id.to_string());\n                 p.last_type_ascription = cx.current_expansion.prior_type_ascription;\n@@ -1204,7 +1204,7 @@ fn quoted_tt_to_string(tt: &mbe::TokenTree) -> String {\n     }\n }\n \n-fn parser_from_cx<'cx>(sess: &'cx ParseSess, tts: TokenStream) -> Parser<'cx> {\n+fn parser_from_cx(sess: &ParseSess, tts: TokenStream) -> Parser<'_> {\n     Parser::new(sess, tts, true, rustc_parse::MACRO_ARGUMENTS)\n }\n "}, {"sha": "c31cc1b4c9f00b4d0263a091a0c5fb21dce439cf", "filename": "src/librustc_parse/lib.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7d0e5bbb67f5c1d30b8c23bbfdaa6ed3cc281786/src%2Flibrustc_parse%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0e5bbb67f5c1d30b8c23bbfdaa6ed3cc281786/src%2Flibrustc_parse%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flib.rs?ref=7d0e5bbb67f5c1d30b8c23bbfdaa6ed3cc281786", "patch": "@@ -238,21 +238,6 @@ pub fn stream_to_parser<'a>(\n     Parser::new(sess, stream, false, subparser_name)\n }\n \n-/// Given a stream, the `ParseSess` and the base directory, produces a parser.\n-///\n-/// Use this function when you are creating a parser from the token stream\n-/// and also care about the current working directory of the parser (e.g.,\n-/// you are trying to resolve modules defined inside a macro invocation).\n-///\n-/// # Note\n-///\n-/// The main usage of this function is outside of rustc, for those who uses\n-/// librustc_ast as a library. Please do not remove this function while refactoring\n-/// just because it is not used in rustc codebase!\n-pub fn stream_to_parser_with_base_dir(sess: &ParseSess, stream: TokenStream) -> Parser<'_> {\n-    Parser::new(sess, stream, false, None)\n-}\n-\n /// Runs the given subparser `f` on the tokens of the given `attr`'s item.\n pub fn parse_in<'a, T>(\n     sess: &'a ParseSess,"}]}