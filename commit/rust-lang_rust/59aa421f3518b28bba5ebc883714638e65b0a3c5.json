{"sha": "59aa421f3518b28bba5ebc883714638e65b0a3c5", "node_id": "C_kwDOAAsO6NoAKDU5YWE0MjFmMzUxOGIyOGJiYTVlYmM4ODM3MTQ2MzhlNjViMGEzYzU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-08T19:45:23Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-08T20:04:40Z"}, "message": "Suppress type errors that come from private fields", "tree": {"sha": "490ad0538696730db71d6a7f4e5fc88b04734f03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/490ad0538696730db71d6a7f4e5fc88b04734f03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59aa421f3518b28bba5ebc883714638e65b0a3c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59aa421f3518b28bba5ebc883714638e65b0a3c5", "html_url": "https://github.com/rust-lang/rust/commit/59aa421f3518b28bba5ebc883714638e65b0a3c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59aa421f3518b28bba5ebc883714638e65b0a3c5/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa51fc01ca3d654d08d627b1d1482d1b77e5ed8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa51fc01ca3d654d08d627b1d1482d1b77e5ed8b", "html_url": "https://github.com/rust-lang/rust/commit/fa51fc01ca3d654d08d627b1d1482d1b77e5ed8b"}], "stats": {"total": 49, "additions": 38, "deletions": 11}, "files": [{"sha": "b08b22108c8ce899ac43859a95caf83919bbec6b", "filename": "compiler/rustc_hir_typeck/src/expr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/59aa421f3518b28bba5ebc883714638e65b0a3c5/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59aa421f3518b28bba5ebc883714638e65b0a3c5/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs?ref=59aa421f3518b28bba5ebc883714638e65b0a3c5", "patch": "@@ -2217,7 +2217,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             self.tcx.check_stability(field.did, Some(expr.hir_id), expr.span, None);\n                             return field_ty;\n                         }\n-                        private_candidate = Some((adjustments, base_def.did(), field_ty));\n+                        private_candidate = Some((adjustments, base_def.did()));\n                     }\n                 }\n                 ty::Tuple(tys) => {\n@@ -2240,12 +2240,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n         self.structurally_resolved_type(autoderef.span(), autoderef.final_ty(false));\n \n-        if let Some((adjustments, did, field_ty)) = private_candidate {\n+        if let Some((adjustments, did)) = private_candidate {\n             // (#90483) apply adjustments to avoid ExprUseVisitor from\n             // creating erroneous projection.\n             self.apply_adjustments(base, adjustments);\n             self.ban_private_field_access(expr, base_ty, field, did);\n-            return field_ty;\n+            return self.tcx().ty_error();\n         }\n \n         if field.name == kw::Empty {"}, {"sha": "b26cc77680daa2181d847e26edc30596ed22c286", "filename": "src/test/ui/issues/issue-25386.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/59aa421f3518b28bba5ebc883714638e65b0a3c5/src%2Ftest%2Fui%2Fissues%2Fissue-25386.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59aa421f3518b28bba5ebc883714638e65b0a3c5/src%2Ftest%2Fui%2Fissues%2Fissue-25386.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25386.rs?ref=59aa421f3518b28bba5ebc883714638e65b0a3c5", "patch": "@@ -24,5 +24,4 @@ macro_rules! check_ptr_exist {\n fn main() {\n     let item = stuff::Item::new();\n     println!(\"{}\", check_ptr_exist!(item, name));\n-    //~^ ERROR field `name` of struct `CObj` is private\n }"}, {"sha": "727b96908291e589eeb493fe0cc1bd02ae88a307", "filename": "src/test/ui/issues/issue-25386.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/59aa421f3518b28bba5ebc883714638e65b0a3c5/src%2Ftest%2Fui%2Fissues%2Fissue-25386.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59aa421f3518b28bba5ebc883714638e65b0a3c5/src%2Ftest%2Fui%2Fissues%2Fissue-25386.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25386.stderr?ref=59aa421f3518b28bba5ebc883714638e65b0a3c5", "patch": "@@ -9,12 +9,6 @@ LL |     println!(\"{}\", check_ptr_exist!(item, name));\n    |\n    = note: this error originates in the macro `check_ptr_exist` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0616]: field `name` of struct `CObj` is private\n-  --> $DIR/issue-25386.rs:26:43\n-   |\n-LL |     println!(\"{}\", check_ptr_exist!(item, name));\n-   |                                           ^^^^ private field\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0616`."}, {"sha": "10db606956722b35413f9ca04e563d60dc10a35d", "filename": "src/test/ui/privacy/private-field-ty-err.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/59aa421f3518b28bba5ebc883714638e65b0a3c5/src%2Ftest%2Fui%2Fprivacy%2Fprivate-field-ty-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59aa421f3518b28bba5ebc883714638e65b0a3c5/src%2Ftest%2Fui%2Fprivacy%2Fprivate-field-ty-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-field-ty-err.rs?ref=59aa421f3518b28bba5ebc883714638e65b0a3c5", "patch": "@@ -0,0 +1,20 @@\n+fn main() {\n+    let x = foo::Foo::default();\n+    if x.len {\n+        //~^ ERROR field `len` of struct `Foo` is private\n+        println!(\"foo\");\n+    }\n+}\n+\n+mod foo {\n+    #[derive(Default)]\n+    pub struct Foo {\n+        len: String,\n+    }\n+\n+    impl Foo {\n+        pub fn len(&self) -> usize {\n+            42\n+        }\n+    }\n+}"}, {"sha": "e583a25fd8fdeb98dff906c7e6d76451cadecf36", "filename": "src/test/ui/privacy/private-field-ty-err.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/59aa421f3518b28bba5ebc883714638e65b0a3c5/src%2Ftest%2Fui%2Fprivacy%2Fprivate-field-ty-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59aa421f3518b28bba5ebc883714638e65b0a3c5/src%2Ftest%2Fui%2Fprivacy%2Fprivate-field-ty-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-field-ty-err.stderr?ref=59aa421f3518b28bba5ebc883714638e65b0a3c5", "patch": "@@ -0,0 +1,14 @@\n+error[E0616]: field `len` of struct `Foo` is private\n+  --> $DIR/private-field-ty-err.rs:3:10\n+   |\n+LL |     if x.len {\n+   |          ^^^ private field\n+   |\n+help: a method `len` also exists, call it with parentheses\n+   |\n+LL |     if x.len() {\n+   |             ++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0616`."}]}