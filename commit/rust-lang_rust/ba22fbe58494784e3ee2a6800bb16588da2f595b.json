{"sha": "ba22fbe58494784e3ee2a6800bb16588da2f595b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMjJmYmU1ODQ5NDc4NGUzZWUyYTY4MDBiYjE2NTg4ZGEyZjU5NWI=", "commit": {"author": {"name": "khyperia", "email": "github@khyperia.com", "date": "2020-10-05T07:46:03Z"}, "committer": {"name": "khyperia", "email": "github@khyperia.com", "date": "2020-10-05T07:46:03Z"}, "message": "Add -Z codegen-backend dylib to deps\n\nWhen the codegen-backend dylib changes, the program should be rebuilt.", "tree": {"sha": "1222f9120b15b5d0307ac79a9433c1ffd2ec5b9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1222f9120b15b5d0307ac79a9433c1ffd2ec5b9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba22fbe58494784e3ee2a6800bb16588da2f595b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba22fbe58494784e3ee2a6800bb16588da2f595b", "html_url": "https://github.com/rust-lang/rust/commit/ba22fbe58494784e3ee2a6800bb16588da2f595b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba22fbe58494784e3ee2a6800bb16588da2f595b/comments", "author": {"login": "khyperia", "id": 953151, "node_id": "MDQ6VXNlcjk1MzE1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/953151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khyperia", "html_url": "https://github.com/khyperia", "followers_url": "https://api.github.com/users/khyperia/followers", "following_url": "https://api.github.com/users/khyperia/following{/other_user}", "gists_url": "https://api.github.com/users/khyperia/gists{/gist_id}", "starred_url": "https://api.github.com/users/khyperia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khyperia/subscriptions", "organizations_url": "https://api.github.com/users/khyperia/orgs", "repos_url": "https://api.github.com/users/khyperia/repos", "events_url": "https://api.github.com/users/khyperia/events{/privacy}", "received_events_url": "https://api.github.com/users/khyperia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "khyperia", "id": 953151, "node_id": "MDQ6VXNlcjk1MzE1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/953151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khyperia", "html_url": "https://github.com/khyperia", "followers_url": "https://api.github.com/users/khyperia/followers", "following_url": "https://api.github.com/users/khyperia/following{/other_user}", "gists_url": "https://api.github.com/users/khyperia/gists{/gist_id}", "starred_url": "https://api.github.com/users/khyperia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khyperia/subscriptions", "organizations_url": "https://api.github.com/users/khyperia/orgs", "repos_url": "https://api.github.com/users/khyperia/repos", "events_url": "https://api.github.com/users/khyperia/events{/privacy}", "received_events_url": "https://api.github.com/users/khyperia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efbaa413061c2a6e52f06f00a60ee7830fcf3ea5", "url": "https://api.github.com/repos/rust-lang/rust/commits/efbaa413061c2a6e52f06f00a60ee7830fcf3ea5", "html_url": "https://github.com/rust-lang/rust/commit/efbaa413061c2a6e52f06f00a60ee7830fcf3ea5"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "d9c24cc3994824fd48a0220ebca5ed6a028b9020", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba22fbe58494784e3ee2a6800bb16588da2f595b/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba22fbe58494784e3ee2a6800bb16588da2f595b/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=ba22fbe58494784e3ee2a6800bb16588da2f595b", "patch": "@@ -551,6 +551,10 @@ fn write_out_deps(\n             .map(|fmap| escape_dep_filename(&fmap.unmapped_path.as_ref().unwrap_or(&fmap.name)))\n             .collect();\n \n+        if let Some(ref backend) = sess.opts.debugging_opts.codegen_backend {\n+            files.push(backend.to_string());\n+        }\n+\n         if sess.binary_dep_depinfo() {\n             boxed_resolver.borrow().borrow_mut().access(|resolver| {\n                 for cnum in resolver.cstore().crates_untracked() {"}]}