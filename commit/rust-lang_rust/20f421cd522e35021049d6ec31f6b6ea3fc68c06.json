{"sha": "20f421cd522e35021049d6ec31f6b6ea3fc68c06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwZjQyMWNkNTIyZTM1MDIxMDQ5ZDZlYzMxZjZiNmVhM2ZjNjhjMDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-06T16:22:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-06T16:22:47Z"}, "message": "Auto merge of #26822 - tamird:llvm-config, r=alexcrichton\n\nMinor stuff.", "tree": {"sha": "be8e35fece79c3e67555d0a982ed0d8c3bbdf269", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be8e35fece79c3e67555d0a982ed0d8c3bbdf269"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20f421cd522e35021049d6ec31f6b6ea3fc68c06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20f421cd522e35021049d6ec31f6b6ea3fc68c06", "html_url": "https://github.com/rust-lang/rust/commit/20f421cd522e35021049d6ec31f6b6ea3fc68c06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20f421cd522e35021049d6ec31f6b6ea3fc68c06/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b7853897ba1469d7bb47fb6e4b877b6741fbb4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b7853897ba1469d7bb47fb6e4b877b6741fbb4b", "html_url": "https://github.com/rust-lang/rust/commit/7b7853897ba1469d7bb47fb6e4b877b6741fbb4b"}, {"sha": "1491a8fa01f174a05e16c874fe717b99d103567d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1491a8fa01f174a05e16c874fe717b99d103567d", "html_url": "https://github.com/rust-lang/rust/commit/1491a8fa01f174a05e16c874fe717b99d103567d"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "964ae626d0c8d1c8d288d78c1ae8c88a2232efee", "filename": "mk/main.mk", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/20f421cd522e35021049d6ec31f6b6ea3fc68c06/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/20f421cd522e35021049d6ec31f6b6ea3fc68c06/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=20f421cd522e35021049d6ec31f6b6ea3fc68c06", "patch": "@@ -295,7 +295,6 @@ LLVM_BINDIR_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --bindir)\n LLVM_INCDIR_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --includedir)\n LLVM_LIBDIR_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --libdir)\n LLVM_LIBDIR_RUSTFLAGS_$(1)=-L \"$$(LLVM_LIBDIR_$(1))\"\n-LLVM_LIBS_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --libs $$(LLVM_COMPONENTS))\n LLVM_LDFLAGS_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --ldflags)\n ifeq ($$(findstring freebsd,$(1)),freebsd)\n # On FreeBSD, it may search wrong headers (that are for pre-installed LLVM),"}, {"sha": "1cc65406b2c005076292a8255f5b59db96a22cc3", "filename": "src/etc/mklldeps.py", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/20f421cd522e35021049d6ec31f6b6ea3fc68c06/src%2Fetc%2Fmklldeps.py", "raw_url": "https://github.com/rust-lang/rust/raw/20f421cd522e35021049d6ec31f6b6ea3fc68c06/src%2Fetc%2Fmklldeps.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmklldeps.py?ref=20f421cd522e35021049d6ec31f6b6ea3fc68c06", "patch": "@@ -14,10 +14,9 @@\n \n f = open(sys.argv[1], 'wb')\n \n-components = sys.argv[2].split(' ')\n-components = [i for i in components if i]  # ignore extra whitespaces\n+components = sys.argv[2].split() # splits on whitespace\n enable_static = sys.argv[3]\n-llconfig = sys.argv[4]\n+llvm_config = sys.argv[4]\n \n f.write(\"\"\"// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n@@ -39,15 +38,15 @@ def run(args):\n     out, err = proc.communicate()\n \n     if err:\n-        print(\"failed to run llconfig: args = `{}`\".format(args))\n+        print(\"failed to run llvm_config: args = `{}`\".format(args))\n         print(err)\n         sys.exit(1)\n     return out\n \n f.write(\"\\n\")\n \n # LLVM libs\n-args = [llconfig, '--libs', '--system-libs']\n+args = [llvm_config, '--libs', '--system-libs']\n \n args.extend(components)\n out = run(args)\n@@ -69,13 +68,13 @@ def run(args):\n     f.write(\")]\\n\")\n \n # LLVM ldflags\n-out = run([llconfig, '--ldflags'])\n+out = run([llvm_config, '--ldflags'])\n for lib in out.strip().split(' '):\n     if lib[:2] == \"-l\":\n         f.write(\"#[link(name = \\\"\" + lib[2:] + \"\\\")]\\n\")\n \n # C++ runtime library\n-out = run([llconfig, '--cxxflags'])\n+out = run([llvm_config, '--cxxflags'])\n if enable_static == '1':\n     assert('stdlib=libc++' not in out)\n     f.write(\"#[link(name = \\\"stdc++\\\", kind = \\\"static\\\")]\\n\")"}]}