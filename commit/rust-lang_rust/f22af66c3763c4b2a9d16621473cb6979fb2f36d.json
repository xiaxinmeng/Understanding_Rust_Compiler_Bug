{"sha": "f22af66c3763c4b2a9d16621473cb6979fb2f36d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyMmFmNjZjMzc2M2M0YjJhOWQxNjYyMTQ3M2NiNjk3OWZiMmYzNmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-30T08:43:47Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-30T08:43:47Z"}, "message": "Fixes", "tree": {"sha": "4b35f683a6bfb70fa9e1db3b22371ebcde0e7d99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b35f683a6bfb70fa9e1db3b22371ebcde0e7d99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f22af66c3763c4b2a9d16621473cb6979fb2f36d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f22af66c3763c4b2a9d16621473cb6979fb2f36d", "html_url": "https://github.com/rust-lang/rust/commit/f22af66c3763c4b2a9d16621473cb6979fb2f36d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f22af66c3763c4b2a9d16621473cb6979fb2f36d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e498546e8275c86e0b3f711b069b2787c6385f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e498546e8275c86e0b3f711b069b2787c6385f2", "html_url": "https://github.com/rust-lang/rust/commit/5e498546e8275c86e0b3f711b069b2787c6385f2"}], "stats": {"total": 12, "additions": 1, "deletions": 11}, "files": [{"sha": "8b8ec25a5fe0f4f15a1c8d5d38cb76fc721b2ab4", "filename": "crates/ra_prof/src/stop_watch.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f22af66c3763c4b2a9d16621473cb6979fb2f36d/crates%2Fra_prof%2Fsrc%2Fstop_watch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f22af66c3763c4b2a9d16621473cb6979fb2f36d/crates%2Fra_prof%2Fsrc%2Fstop_watch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Fstop_watch.rs?ref=f22af66c3763c4b2a9d16621473cb6979fb2f36d", "patch": "@@ -1,3 +1,4 @@\n+//! Like `std::time::Instant`, but also measures memory & CPU cycles.\n use std::{\n     fmt,\n     time::{Duration, Instant},\n@@ -76,14 +77,3 @@ impl fmt::Display for StopWatchSpan {\n         Ok(())\n     }\n }\n-\n-// Unclear if we need this:\n-// https://github.com/jimblandy/perf-event/issues/8\n-impl Drop for StopWatch {\n-    fn drop(&mut self) {\n-        #[cfg(target_os = \"linux\")]\n-        if let Some(mut counter) = self.counter.take() {\n-            let _ = counter.disable();\n-        }\n-    }\n-}"}]}