{"sha": "a5f5f6b6892ffe5364e25345c6f5a0113ae33a98", "node_id": "C_kwDOAAsO6NoAKGE1ZjVmNmI2ODkyZmZlNTM2NGUyNTM0NWM2ZjVhMDExM2FlMzNhOTg", "commit": {"author": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2021-12-12T19:24:56Z"}, "committer": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2021-12-12T19:57:24Z"}, "message": "Avoid sorting in hash map stable hashing", "tree": {"sha": "4a7459a03847e442f253f35f768867c29c8dcfa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a7459a03847e442f253f35f768867c29c8dcfa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5f5f6b6892ffe5364e25345c6f5a0113ae33a98", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEg8FrwI85f934CWFa28VT5UDC9hkFAmG2VCQACgkQ28VT5UDC\n9hkZLgwArToMQfwio8J/uozY/L9ev4leSX50Ck/PCY8/vO31hDlzHWqdGACPnWSu\nGXycs+8Vn/FhV/qy2Vgy1W9pJaHo6/bd3Iy99VmZSLzfHAhIJoPjm2YJA+T1kzM4\nCQF/r2NRiwdyCjTZfQRbGBg0rDB1EpxuRS2O3TJHSi3PVnKUnXpjZ2nyJC4VSghV\nAe9il97RHz2O1RKIrbVBx78keTAtw9Z+caxKltA7vI2FM8cMGPdCb9qz+m2Ys7Tx\nS9Ee44gGMiVZG0UEX5hJRT8zaE6VxtZ3/Yl/2aiEHVCNn9rsUjsQ913JO3cE6jcp\nN+ipBhcjAmrEVAmT1Q8zK7ln0mwfyHipHSQW7HrLTOC8sOKmfm3lOXSThs/Z5u2y\nBx2D76nBx+HS6PoMnIf2rRAtu+yjvUGq/6RssQZf6EJ725rFiU+qhHpQkWHAEP+u\nskzh2viOnlWOTSdliT63Wx0Vh4Zz8AlzbTe1/ht5sC3FKqQFrFpB4YgZ6weNjLTB\nVPD9JLvU\n=jFkV\n-----END PGP SIGNATURE-----", "payload": "tree 4a7459a03847e442f253f35f768867c29c8dcfa8\nparent 58457bbfd3b08e015bdb03862a1d3cf2d48a800a\nauthor Jakub Ber\u00e1nek <berykubik@gmail.com> 1639337096 +0100\ncommitter Jakub Ber\u00e1nek <berykubik@gmail.com> 1639339044 +0100\n\nAvoid sorting in hash map stable hashing\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5f5f6b6892ffe5364e25345c6f5a0113ae33a98", "html_url": "https://github.com/rust-lang/rust/commit/a5f5f6b6892ffe5364e25345c6f5a0113ae33a98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5f5f6b6892ffe5364e25345c6f5a0113ae33a98/comments", "author": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58457bbfd3b08e015bdb03862a1d3cf2d48a800a", "url": "https://api.github.com/repos/rust-lang/rust/commits/58457bbfd3b08e015bdb03862a1d3cf2d48a800a", "html_url": "https://github.com/rust-lang/rust/commit/58457bbfd3b08e015bdb03862a1d3cf2d48a800a"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "c2218b92a44593a9f1198f91f383c3032b421c54", "filename": "compiler/rustc_data_structures/src/stable_hasher.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a5f5f6b6892ffe5364e25345c6f5a0113ae33a98/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5f5f6b6892ffe5364e25345c6f5a0113ae33a98/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs?ref=a5f5f6b6892ffe5364e25345c6f5a0113ae33a98", "patch": "@@ -42,13 +42,15 @@ impl StableHasher {\n }\n \n impl StableHasherResult for u128 {\n+    #[inline]\n     fn finish(hasher: StableHasher) -> Self {\n         let (_0, _1) = hasher.finalize();\n         u128::from(_0) | (u128::from(_1) << 64)\n     }\n }\n \n impl StableHasherResult for u64 {\n+    #[inline]\n     fn finish(hasher: StableHasher) -> Self {\n         hasher.finalize().0\n     }\n@@ -559,8 +561,16 @@ pub fn hash_stable_hashmap<HCX, K, V, R, SK, F>(\n     SK: HashStable<HCX> + Ord,\n     F: Fn(&K, &HCX) -> SK,\n {\n-    let mut entries: SmallVec<[_; 3]> =\n-        map.iter().map(|(k, v)| (to_stable_hash_key(k, hcx), v)).collect();\n-    entries.sort_unstable_by(|&(ref sk1, _), &(ref sk2, _)| sk1.cmp(sk2));\n-    entries.hash_stable(hcx, hasher);\n+    let hash = map\n+        .iter()\n+        .map(|(key, value)| {\n+            let key = to_stable_hash_key(key, hcx);\n+            let mut hasher = StableHasher::new();\n+            key.hash_stable(hcx, &mut hasher);\n+            value.hash_stable(hcx, &mut hasher);\n+            hasher.finish::<u128>()\n+        })\n+        .reduce(|accum, value| accum.wrapping_mul(value));\n+    map.len().hash_stable(hcx, hasher);\n+    hash.hash_stable(hcx, hasher);\n }"}]}