{"sha": "75ee4633ebff7ce6f1669fc81a1c75dcd24b2c15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZWU0NjMzZWJmZjdjZTZmMTY2OWZjODFhMWM3NWRjZDI0YjJjMTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-21T23:10:39Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-21T23:10:39Z"}, "message": "rustc: Long lines", "tree": {"sha": "1dd9deb15b15300ab021b86fce32702b48873112", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dd9deb15b15300ab021b86fce32702b48873112"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75ee4633ebff7ce6f1669fc81a1c75dcd24b2c15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75ee4633ebff7ce6f1669fc81a1c75dcd24b2c15", "html_url": "https://github.com/rust-lang/rust/commit/75ee4633ebff7ce6f1669fc81a1c75dcd24b2c15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75ee4633ebff7ce6f1669fc81a1c75dcd24b2c15/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5835a4cc8ed075f048c089350002f515383b7df4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5835a4cc8ed075f048c089350002f515383b7df4", "html_url": "https://github.com/rust-lang/rust/commit/5835a4cc8ed075f048c089350002f515383b7df4"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "8fd9ae4ef750a235b33a7c291006c23521060cbd", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/75ee4633ebff7ce6f1669fc81a1c75dcd24b2c15/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75ee4633ebff7ce6f1669fc81a1c75dcd24b2c15/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=75ee4633ebff7ce6f1669fc81a1c75dcd24b2c15", "patch": "@@ -402,7 +402,8 @@ fn declare_tydesc(ccx: @crate_ctxt, t: ty::t) -> @tydesc_info {\n     llsize = llsize_of(ccx, llty);\n     llalign = llalign_of(ccx, llty);\n     let name;\n-    if false /*ccx.sess.opts.debuginfo*/ { //XXX this triggers duplicate LLVM symbols\n+    //XXX this triggers duplicate LLVM symbols\n+    if false /*ccx.sess.opts.debuginfo*/ {\n         name = mangle_internal_name_by_type_only(ccx, t, \"tydesc\");\n     } else { name = mangle_internal_name_by_seq(ccx, \"tydesc\"); }\n     note_unique_llvm_symbol(ccx, name);\n@@ -427,7 +428,8 @@ fn declare_generic_glue(ccx: @crate_ctxt, t: ty::t, llfnty: TypeRef,\n                         name: str) -> ValueRef {\n     let name = name;\n     let fn_nm;\n-    if false /*ccx.sess.opts.debuginfo*/ { //XXX this triggers duplicate LLVM symbols\n+    //XXX this triggers duplicate LLVM symbols\n+    if false /*ccx.sess.opts.debuginfo*/ {\n         fn_nm = mangle_internal_name_by_type_only(ccx, t, \"glue_\" + name);\n     } else {\n         fn_nm = mangle_internal_name_by_seq(ccx, \"glue_\" + name);"}]}