{"sha": "157edad6205fdd6a4f5932fba2675c6190746358", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1N2VkYWQ2MjA1ZmRkNmE0ZjU5MzJmYmEyNjc1YzYxOTA3NDYzNTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-22T11:40:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-22T11:40:35Z"}, "message": "Auto merge of #4518 - imp:4517_license-file, r=phansch\n\nclippy::cargo_common_metadata: check for license-file\n\nWhen license property is missing in Cargo.toml check for license-file\nas it may be used instead of the former. The check implemented here is\nvery naive as it only verifies that the field is present and is not\nempty. More scrutiny can be applied by verifying the file is actually\npresent.\n\nFixes #4517\n\nchangelog: clippy::cargo_common_metadata now checks for license-file when license is missing", "tree": {"sha": "6f4cce6cbdac79715fae4e0d134a6aaa23a9172e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f4cce6cbdac79715fae4e0d134a6aaa23a9172e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/157edad6205fdd6a4f5932fba2675c6190746358", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/157edad6205fdd6a4f5932fba2675c6190746358", "html_url": "https://github.com/rust-lang/rust/commit/157edad6205fdd6a4f5932fba2675c6190746358", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/157edad6205fdd6a4f5932fba2675c6190746358/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbb1bdea87e1a68b0d7922d17d96f302841b7df7", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbb1bdea87e1a68b0d7922d17d96f302841b7df7", "html_url": "https://github.com/rust-lang/rust/commit/dbb1bdea87e1a68b0d7922d17d96f302841b7df7"}, {"sha": "4c881d108a6964030dacfa7de3ae6445ab790b49", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c881d108a6964030dacfa7de3ae6445ab790b49", "html_url": "https://github.com/rust-lang/rust/commit/4c881d108a6964030dacfa7de3ae6445ab790b49"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "cfc70de8f21dd35426b8af88f941939fdf8cf2be", "filename": "clippy_lints/src/cargo_common_metadata.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/157edad6205fdd6a4f5932fba2675c6190746358/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/157edad6205fdd6a4f5932fba2675c6190746358/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs?ref=157edad6205fdd6a4f5932fba2675c6190746358", "patch": "@@ -1,5 +1,7 @@\n //! lint on missing cargo common metadata\n \n+use std::path::PathBuf;\n+\n use crate::utils::span_lint;\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, declare_tool_lint};\n@@ -47,6 +49,10 @@ fn is_empty_str(value: &Option<String>) -> bool {\n     value.as_ref().map_or(true, String::is_empty)\n }\n \n+fn is_empty_path(value: &Option<PathBuf>) -> bool {\n+    value.as_ref().and_then(|x| x.to_str()).map_or(true, str::is_empty)\n+}\n+\n fn is_empty_vec(value: &[String]) -> bool {\n     // This works because empty iterators return true\n     value.iter().all(std::string::String::is_empty)\n@@ -72,8 +78,8 @@ impl EarlyLintPass for CargoCommonMetadata {\n                 missing_warning(cx, &package, \"package.description\");\n             }\n \n-            if is_empty_str(&package.license) {\n-                missing_warning(cx, &package, \"package.license\");\n+            if is_empty_str(&package.license) && is_empty_path(&package.license_file) {\n+                missing_warning(cx, &package, \"either package.license or package.license_file\");\n             }\n \n             if is_empty_str(&package.repository) {"}]}