{"sha": "2f24923ab3f38e33a2ad98618852e0089d63ba7d", "node_id": "C_kwDOAAsO6NoAKDJmMjQ5MjNhYjNmMzhlMzNhMmFkOTg2MTg4NTJlMDA4OWQ2M2JhN2Q", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-23T02:05:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-23T02:05:34Z"}, "message": "Rollup merge of #95222 - RalfJung:validity, r=Dylan-DPC\n\ninterpret/validity: improve clarity\n\nI was confused by my own (ancient) comment in `validity.rs` so I figured I'd clarify. (And I don't think ZST-ness is relevant at all inside that branch, no idea where that comment comes from.)\n\nAlso `extend` seems more clear than `clone_from`.", "tree": {"sha": "052b5e1141316603d482e0cdf8a9537305d41ca4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/052b5e1141316603d482e0cdf8a9537305d41ca4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f24923ab3f38e33a2ad98618852e0089d63ba7d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiOoBuCRBK7hj4Ov3rIwAAJoMIAJH+VvYkbLoibFStQYly7nPr\n0bOrrIb6fygT9P2GyTc9dp0Tx1vM2mOCrxJQDDzQqJfjKnxG8dEwk+AscEWOLCDj\njswRFYrRlpfOMKK3Zdr+gmz5wmDHXJ6j5Id5khqoiR68bPTcZbaaXw/M+xA9Io90\nBWOsLwXoLz+s+3tSQcu6gnDW3/3P7Uww8xIsA8jl5TV8oHEytc9AWDvVOo6FVe9d\nLiDHNtkituOYrSEdYjofLf15DinD5NPEp+ZxXEUte2NkhhO+SkLMXamu0dvEv/z3\n+Ey4WJ2VAfT+fA4+9g0GjzHkaxC8MfVC4re/S4PR0ISQC9tL0BlXRnIfuv/80/k=\n=DudP\n-----END PGP SIGNATURE-----\n", "payload": "tree 052b5e1141316603d482e0cdf8a9537305d41ca4\nparent e1f2d354a7d6987e50719c24473ed9ae33f59392\nparent 8a1f928b8e1969b88de614602bd5d73f6a2b358e\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1648001134 +0100\ncommitter GitHub <noreply@github.com> 1648001134 +0100\n\nRollup merge of #95222 - RalfJung:validity, r=Dylan-DPC\n\ninterpret/validity: improve clarity\n\nI was confused by my own (ancient) comment in `validity.rs` so I figured I'd clarify. (And I don't think ZST-ness is relevant at all inside that branch, no idea where that comment comes from.)\n\nAlso `extend` seems more clear than `clone_from`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f24923ab3f38e33a2ad98618852e0089d63ba7d", "html_url": "https://github.com/rust-lang/rust/commit/2f24923ab3f38e33a2ad98618852e0089d63ba7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f24923ab3f38e33a2ad98618852e0089d63ba7d/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1f2d354a7d6987e50719c24473ed9ae33f59392", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1f2d354a7d6987e50719c24473ed9ae33f59392", "html_url": "https://github.com/rust-lang/rust/commit/e1f2d354a7d6987e50719c24473ed9ae33f59392"}, {"sha": "8a1f928b8e1969b88de614602bd5d73f6a2b358e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a1f928b8e1969b88de614602bd5d73f6a2b358e", "html_url": "https://github.com/rust-lang/rust/commit/8a1f928b8e1969b88de614602bd5d73f6a2b358e"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "8bdafa876238601cb511ebd34bbb7ae81a1fec65", "filename": "compiler/rustc_const_eval/src/interpret/validity.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2f24923ab3f38e33a2ad98618852e0089d63ba7d/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f24923ab3f38e33a2ad98618852e0089d63ba7d/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs?ref=2f24923ab3f38e33a2ad98618852e0089d63ba7d", "patch": "@@ -432,9 +432,8 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n         if let Some(ref mut ref_tracking) = self.ref_tracking {\n             // Proceed recursively even for ZST, no reason to skip them!\n             // `!` is a ZST and we want to validate it.\n-            // Skip validation entirely for some external statics\n             if let Ok((alloc_id, _offset, _ptr)) = self.ecx.memory.ptr_try_get_alloc(place.ptr) {\n-                // not a ZST\n+                // Special handling for pointers to statics (irrespective of their type).\n                 let alloc_kind = self.ecx.tcx.get_global_alloc(alloc_id);\n                 if let Some(GlobalAlloc::Static(did)) = alloc_kind {\n                     assert!(!self.ecx.tcx.is_thread_local_static(did));\n@@ -469,7 +468,7 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n                 // We need to clone the path anyway, make sure it gets created\n                 // with enough space for the additional `Deref`.\n                 let mut new_path = Vec::with_capacity(path.len() + 1);\n-                new_path.clone_from(path);\n+                new_path.extend(path);\n                 new_path.push(PathElem::Deref);\n                 new_path\n             });"}]}