{"sha": "7eda7232797c6a92b39f5058e6e1840e5aa08d8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlZGE3MjMyNzk3YzZhOTJiMzlmNTA1OGU2ZTE4NDBlNWFhMDhkOGI=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-02-27T20:32:12Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-04-04T17:47:10Z"}, "message": "Fix cases of conflicting two-phase borrows", "tree": {"sha": "8196a1c5a923bae577282804ef166495544f73da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8196a1c5a923bae577282804ef166495544f73da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7eda7232797c6a92b39f5058e6e1840e5aa08d8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7eda7232797c6a92b39f5058e6e1840e5aa08d8b", "html_url": "https://github.com/rust-lang/rust/commit/7eda7232797c6a92b39f5058e6e1840e5aa08d8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7eda7232797c6a92b39f5058e6e1840e5aa08d8b/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d065712cf96328093400fd0a1a0c4e0f3b1d51c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d065712cf96328093400fd0a1a0c4e0f3b1d51c", "html_url": "https://github.com/rust-lang/rust/commit/2d065712cf96328093400fd0a1a0c4e0f3b1d51c"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "348616790b0bc7c57ecab9240c5d9b94e2ec916c", "filename": "src/librustc_codegen_llvm/abi.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7eda7232797c6a92b39f5058e6e1840e5aa08d8b/src%2Flibrustc_codegen_llvm%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7eda7232797c6a92b39f5058e6e1840e5aa08d8b/src%2Flibrustc_codegen_llvm%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fabi.rs?ref=7eda7232797c6a92b39f5058e6e1840e5aa08d8b", "patch": "@@ -266,7 +266,8 @@ impl ArgTypeExt<'ll, 'tcx> for ArgType<'tcx, Ty<'tcx>> {\n                 OperandValue::Ref(next(), Some(next()), self.layout.align.abi).store(bx, dst);\n             }\n             PassMode::Direct(_) | PassMode::Indirect(_, None) | PassMode::Cast(_) => {\n-                self.store(bx, next(), dst);\n+                let next_arg = next();\n+                self.store(bx, next_arg, dst);\n             }\n         }\n     }"}, {"sha": "a393847fd4922a546a4c1c52f935cead07755254", "filename": "src/librustc_mir/transform/add_retag.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7eda7232797c6a92b39f5058e6e1840e5aa08d8b/src%2Flibrustc_mir%2Ftransform%2Fadd_retag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7eda7232797c6a92b39f5058e6e1840e5aa08d8b/src%2Flibrustc_mir%2Ftransform%2Fadd_retag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fadd_retag.rs?ref=7eda7232797c6a92b39f5058e6e1840e5aa08d8b", "patch": "@@ -164,7 +164,7 @@ impl MirPass for AddRetag {\n                         if src_ty.is_region_ptr() {\n                             // The only `Misc` casts on references are those creating raw pointers.\n                             assert!(dest_ty.is_unsafe_ptr());\n-                            (RetagKind::Raw, place)\n+                            (RetagKind::Raw, place.clone())\n                         } else {\n                             // Some other cast, no retag\n                             continue\n@@ -182,7 +182,7 @@ impl MirPass for AddRetag {\n                             _ =>\n                                 RetagKind::Default,\n                         };\n-                        (kind, place)\n+                        (kind, place.clone())\n                     }\n                     // Do nothing for the rest\n                     _ => continue,\n@@ -191,7 +191,7 @@ impl MirPass for AddRetag {\n                 let source_info = block_data.statements[i].source_info;\n                 block_data.statements.insert(i+1, Statement {\n                     source_info,\n-                    kind: StatementKind::Retag(retag_kind, place.clone()),\n+                    kind: StatementKind::Retag(retag_kind, place),\n                 });\n             }\n         }"}, {"sha": "24fbc9b6caf3fd8ddb4c9a14eb47d197bed2c852", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7eda7232797c6a92b39f5058e6e1840e5aa08d8b/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7eda7232797c6a92b39f5058e6e1840e5aa08d8b/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=7eda7232797c6a92b39f5058e6e1840e5aa08d8b", "patch": "@@ -347,9 +347,9 @@ impl<'a, 'b> Context<'a, 'b> {\n \n             Named(name) => {\n                 match self.names.get(&name) {\n-                    Some(idx) => {\n+                    Some(&idx) => {\n                         // Treat as positional arg.\n-                        self.verify_arg_type(Exact(*idx), ty)\n+                        self.verify_arg_type(Exact(idx), ty)\n                     }\n                     None => {\n                         let msg = format!(\"there is no argument named `{}`\", name);"}]}