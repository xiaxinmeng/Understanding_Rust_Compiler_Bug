{"sha": "8172166f34fe5077b3873a6254d379b2282e1530", "node_id": "C_kwDOAAsO6NoAKDgxNzIxNjZmMzRmZTUwNzdiMzg3M2E2MjU0ZDM3OWIyMjgyZTE1MzA", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-04-25T19:08:45Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-05-01T22:56:50Z"}, "message": "rustc: Panic by default in `DefIdTree::parent`\n\nOnly crate root def-ids don't have a parent, and in majority of cases the argument of `DefIdTree::parent` cannot be a crate root.\nSo we now panic by default in `parent` and introduce a new non-panicing function `opt_parent` for cases where the argument can be a crate root.\n\nSame applies to `local_parent`/`opt_local_parent`.", "tree": {"sha": "d680f644e95a59b809bed4fb51d5b58ad55c0284", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d680f644e95a59b809bed4fb51d5b58ad55c0284"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8172166f34fe5077b3873a6254d379b2282e1530", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8172166f34fe5077b3873a6254d379b2282e1530", "html_url": "https://github.com/rust-lang/rust/commit/8172166f34fe5077b3873a6254d379b2282e1530", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8172166f34fe5077b3873a6254d379b2282e1530/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "defc537a2e7dc469d6fc1429854a24ca2914469f", "url": "https://api.github.com/repos/rust-lang/rust/commits/defc537a2e7dc469d6fc1429854a24ca2914469f", "html_url": "https://github.com/rust-lang/rust/commit/defc537a2e7dc469d6fc1429854a24ca2914469f"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "aa3552001f469e4aa6ba2720117baa72c3e2bd32", "filename": "clippy_lints/src/matches/redundant_pattern_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8172166f34fe5077b3873a6254d379b2282e1530/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8172166f34fe5077b3873a6254d379b2282e1530/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs?ref=8172166f34fe5077b3873a6254d379b2282e1530", "patch": "@@ -193,7 +193,7 @@ fn find_sugg_for_if_let<'tcx>(\n         PatKind::TupleStruct(ref qpath, [sub_pat], _) => {\n             if let PatKind::Wild = sub_pat.kind {\n                 let res = cx.typeck_results().qpath_res(qpath, check_pat.hir_id);\n-                let Some(id) = res.opt_def_id().and_then(|ctor_id| cx.tcx.parent(ctor_id)) else { return };\n+                let Some(id) = res.opt_def_id().map(|ctor_id| cx.tcx.parent(ctor_id)) else { return };\n                 let lang_items = cx.tcx.lang_items();\n                 if Some(id) == lang_items.result_ok_variant() {\n                     (\"is_ok()\", try_get_generic_ty(op_ty, 0).unwrap_or(op_ty))"}, {"sha": "b88ec0963f2b55da8cd2f4567e8b91d9f3f58e45", "filename": "clippy_lints/src/methods/bind_instead_of_map.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8172166f34fe5077b3873a6254d379b2282e1530/clippy_lints%2Fsrc%2Fmethods%2Fbind_instead_of_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8172166f34fe5077b3873a6254d379b2282e1530/clippy_lints%2Fsrc%2Fmethods%2Fbind_instead_of_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fbind_instead_of_map.rs?ref=8172166f34fe5077b3873a6254d379b2282e1530", "patch": "@@ -42,7 +42,7 @@ pub(crate) trait BindInsteadOfMap {\n \n     fn no_op_msg(cx: &LateContext<'_>) -> Option<String> {\n         let variant_id = cx.tcx.lang_items().require(Self::VARIANT_LANG_ITEM).ok()?;\n-        let item_id = cx.tcx.parent(variant_id)?;\n+        let item_id = cx.tcx.parent(variant_id);\n         Some(format!(\n             \"using `{}.{}({})`, which is a no-op\",\n             cx.tcx.item_name(item_id),\n@@ -53,7 +53,7 @@ pub(crate) trait BindInsteadOfMap {\n \n     fn lint_msg(cx: &LateContext<'_>) -> Option<String> {\n         let variant_id = cx.tcx.lang_items().require(Self::VARIANT_LANG_ITEM).ok()?;\n-        let item_id = cx.tcx.parent(variant_id)?;\n+        let item_id = cx.tcx.parent(variant_id);\n         Some(format!(\n             \"using `{}.{}(|x| {}(y))`, which is more succinctly expressed as `{}(|x| y)`\",\n             cx.tcx.item_name(item_id),\n@@ -145,7 +145,7 @@ pub(crate) trait BindInsteadOfMap {\n         if_chain! {\n             if let Some(adt) = cx.typeck_results().expr_ty(recv).ty_adt_def();\n             if let Ok(vid) = cx.tcx.lang_items().require(Self::VARIANT_LANG_ITEM);\n-            if Some(adt.did()) == cx.tcx.parent(vid);\n+            if adt.did() == cx.tcx.parent(vid);\n             then {} else { return false; }\n         }\n \n@@ -182,7 +182,7 @@ pub(crate) trait BindInsteadOfMap {\n     fn is_variant(cx: &LateContext<'_>, res: Res) -> bool {\n         if let Res::Def(DefKind::Ctor(CtorOf::Variant, CtorKind::Fn), id) = res {\n             if let Ok(variant_id) = cx.tcx.lang_items().require(Self::VARIANT_LANG_ITEM) {\n-                return cx.tcx.parent(id) == Some(variant_id);\n+                return cx.tcx.parent(id) == variant_id;\n             }\n         }\n         false"}, {"sha": "f7b79f0839ba8c17ffbfd08172c16df143491df8", "filename": "clippy_lints/src/methods/chars_cmp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8172166f34fe5077b3873a6254d379b2282e1530/clippy_lints%2Fsrc%2Fmethods%2Fchars_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8172166f34fe5077b3873a6254d379b2282e1530/clippy_lints%2Fsrc%2Fmethods%2Fchars_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fchars_cmp.rs?ref=8172166f34fe5077b3873a6254d379b2282e1530", "patch": "@@ -19,7 +19,7 @@ pub(super) fn check(\n     if_chain! {\n         if let Some(args) = method_chain_args(info.chain, chain_methods);\n         if let hir::ExprKind::Call(fun, [arg_char]) = info.other.kind;\n-        if let Some(id) = path_def_id(cx, fun).and_then(|ctor_id| cx.tcx.parent(ctor_id));\n+        if let Some(id) = path_def_id(cx, fun).map(|ctor_id| cx.tcx.parent(ctor_id));\n         if Some(id) == cx.tcx.lang_items().option_some_variant();\n         then {\n             let mut applicability = Applicability::MachineApplicable;"}, {"sha": "76bc9466ed81800e23cdf94f4f8b771a2cc1a895", "filename": "clippy_lints/src/methods/option_map_or_none.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8172166f34fe5077b3873a6254d379b2282e1530/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8172166f34fe5077b3873a6254d379b2282e1530/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs?ref=8172166f34fe5077b3873a6254d379b2282e1530", "patch": "@@ -75,7 +75,7 @@ pub(super) fn check<'tcx>(\n             let arg_snippet = snippet(cx, span, \"..\");\n             let body = cx.tcx.hir().body(id);\n                 if let Some((func, [arg_char])) = reduce_unit_expression(&body.value);\n-                if let Some(id) = path_def_id(cx, func).and_then(|ctor_id| cx.tcx.parent(ctor_id));\n+                if let Some(id) = path_def_id(cx, func).map(|ctor_id| cx.tcx.parent(ctor_id));\n                 if Some(id) == cx.tcx.lang_items().option_some_variant();\n                 then {\n                     let func_snippet = snippet(cx, arg_char.span, \"..\");"}, {"sha": "a20377f320b23b2dca9b7c2e30f48b249956876f", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8172166f34fe5077b3873a6254d379b2282e1530/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8172166f34fe5077b3873a6254d379b2282e1530/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=8172166f34fe5077b3873a6254d379b2282e1530", "patch": "@@ -114,7 +114,7 @@ impl<'tcx> LateLintPass<'tcx> for MissingDoc {\n             hir::ItemKind::Fn(..) => {\n                 // ignore main()\n                 if it.ident.name == sym::main {\n-                    let at_root = cx.tcx.local_parent(it.def_id) == Some(CRATE_DEF_ID);\n+                    let at_root = cx.tcx.local_parent(it.def_id) == CRATE_DEF_ID;\n                     if at_root {\n                         return;\n                     }"}, {"sha": "7d46952d9718b5cbcdf149de40a1a9206d1afa25", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8172166f34fe5077b3873a6254d379b2282e1530/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8172166f34fe5077b3873a6254d379b2282e1530/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=8172166f34fe5077b3873a6254d379b2282e1530", "patch": "@@ -235,7 +235,7 @@ pub fn is_lang_ctor(cx: &LateContext<'_>, qpath: &QPath<'_>, lang_item: LangItem\n     if let QPath::Resolved(_, path) = qpath {\n         if let Res::Def(DefKind::Ctor(..), ctor_id) = path.res {\n             if let Ok(item_id) = cx.tcx.lang_items().require(lang_item) {\n-                return cx.tcx.parent(ctor_id) == Some(item_id);\n+                return cx.tcx.parent(ctor_id) == item_id;\n             }\n         }\n     }"}]}