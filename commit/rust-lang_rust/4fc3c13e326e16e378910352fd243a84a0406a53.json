{"sha": "4fc3c13e326e16e378910352fd243a84a0406a53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYzNjMTNlMzI2ZTE2ZTM3ODkxMDM1MmZkMjQzYTg0YTA0MDZhNTM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-13T23:52:26Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-18T10:58:36Z"}, "message": "resolve: Avoid sentence breaks in diagnostics", "tree": {"sha": "bd42236197229d1d09bf76de5f971f6ed5329d89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd42236197229d1d09bf76de5f971f6ed5329d89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fc3c13e326e16e378910352fd243a84a0406a53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fc3c13e326e16e378910352fd243a84a0406a53", "html_url": "https://github.com/rust-lang/rust/commit/4fc3c13e326e16e378910352fd243a84a0406a53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fc3c13e326e16e378910352fd243a84a0406a53/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f492e9421fdec42b448aeeb54fa9aff0177ba442", "url": "https://api.github.com/repos/rust-lang/rust/commits/f492e9421fdec42b448aeeb54fa9aff0177ba442", "html_url": "https://github.com/rust-lang/rust/commit/f492e9421fdec42b448aeeb54fa9aff0177ba442"}], "stats": {"total": 374, "additions": 187, "deletions": 187}, "files": [{"sha": "2681295cf9bf17b181b42fbf11b3becb701dbbb3", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1253,7 +1253,7 @@ Erroneous code example:\n \n ```compile_fail,E0433\n let map = HashMap::new();\n-// error: failed to resolve. Use of undeclared type or module `HashMap`\n+// error: failed to resolve: use of undeclared type or module `HashMap`\n ```\n \n Please verify you didn't misspell the type/module's name or that you didn't"}, {"sha": "509040ff267dec0436edf99a4160b7b80f9d379f", "filename": "src/librustc_resolve/error_reporting.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Flibrustc_resolve%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Flibrustc_resolve%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Ferror_reporting.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -52,7 +52,7 @@ impl<'a, 'b:'a, 'c: 'b> ImportResolver<'a, 'b, 'c> {\n     /// ```\n     ///    |\n     /// LL | use foo::Bar;\n-    ///    |     ^^^ Did you mean `self::foo`?\n+    ///    |     ^^^ did you mean `self::foo`?\n     /// ```\n     fn make_missing_self_suggestion(\n         &mut self,\n@@ -76,7 +76,7 @@ impl<'a, 'b:'a, 'c: 'b> ImportResolver<'a, 'b, 'c> {\n     /// ```\n     ///    |\n     /// LL | use foo::Bar;\n-    ///    |     ^^^ Did you mean `crate::foo`?\n+    ///    |     ^^^ did you mean `crate::foo`?\n     /// ```\n     fn make_missing_crate_suggestion(\n         &mut self,\n@@ -107,7 +107,7 @@ impl<'a, 'b:'a, 'c: 'b> ImportResolver<'a, 'b, 'c> {\n     /// ```\n     ///    |\n     /// LL | use foo::Bar;\n-    ///    |     ^^^ Did you mean `super::foo`?\n+    ///    |     ^^^ did you mean `super::foo`?\n     /// ```\n     fn make_missing_super_suggestion(\n         &mut self,\n@@ -131,7 +131,7 @@ impl<'a, 'b:'a, 'c: 'b> ImportResolver<'a, 'b, 'c> {\n     /// ```\n     ///    |\n     /// LL | use foobar::Baz;\n-    ///    |     ^^^^^^ Did you mean `baz::foobar`?\n+    ///    |     ^^^^^^ did you mean `baz::foobar`?\n     /// ```\n     ///\n     /// Used when importing a submodule of an external crate but missing that crate's"}, {"sha": "a33bd7aa732d74be5960e653706953d5497fca36", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -386,7 +386,7 @@ fn resolve_struct_error<'sess, 'a>(resolver: &'sess Resolver,\n         }\n         ResolutionError::FailedToResolve(msg) => {\n             let mut err = struct_span_err!(resolver.session, span, E0433,\n-                                           \"failed to resolve. {}\", msg);\n+                                           \"failed to resolve: {}\", msg);\n             err.span_label(span, msg);\n             err\n         }\n@@ -3738,7 +3738,7 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n                             continue;\n                         }\n                     }\n-                    let msg = \"There are too many initial `super`s.\".to_string();\n+                    let msg = \"there are too many initial `super`s.\".to_string();\n                     return PathResult::Failed(ident.span, msg, false);\n                 }\n                 if i == 0 {\n@@ -3832,7 +3832,7 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n                         ));\n                     } else {\n                         return PathResult::Failed(ident.span,\n-                                                  format!(\"Not a module `{}`\", ident),\n+                                                  format!(\"not a module `{}`\", ident),\n                                                   is_last);\n                     }\n                 }\n@@ -3857,14 +3857,14 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n                             (c.path.segments.len(), c.path.to_string())\n                         });\n                         if let Some(candidate) = candidates.get(0) {\n-                            format!(\"Did you mean `{}`?\", candidate.path)\n+                            format!(\"did you mean `{}`?\", candidate.path)\n                         } else {\n-                            format!(\"Maybe a missing `extern crate {};`?\", ident)\n+                            format!(\"maybe a missing `extern crate {};`?\", ident)\n                         }\n                     } else if i == 0 {\n-                        format!(\"Use of undeclared type or module `{}`\", ident)\n+                        format!(\"use of undeclared type or module `{}`\", ident)\n                     } else {\n-                        format!(\"Could not find `{}` in `{}`\", ident, path[i - 1].ident)\n+                        format!(\"could not find `{}` in `{}`\", ident, path[i - 1].ident)\n                     };\n                     return PathResult::Failed(ident.span, msg, is_last);\n                 }"}, {"sha": "b7ec62fee853249db5694f48bffb63fac858b5cb", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -857,7 +857,7 @@ impl<'a, 'b:'a, 'c: 'b> ImportResolver<'a, 'b, 'c> {\n                 ) {\n                     Some((\n                         span,\n-                        format!(\"Did you mean `{}`?\", Segment::names_to_string(&suggested_path)),\n+                        format!(\"did you mean `{}`?\", Segment::names_to_string(&suggested_path)),\n                         note,\n                     ))\n                 } else {"}, {"sha": "2bbd7b0ad3ad7bf05ffc2d6c7f1353ca041c49f9", "filename": "src/test/ui/absolute-paths-in-nested-use-groups.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fabsolute-paths-in-nested-use-groups.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fabsolute-paths-in-nested-use-groups.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabsolute-paths-in-nested-use-groups.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,16 +1,16 @@\n-error[E0433]: failed to resolve. crate root in paths can only be used in start position\n+error[E0433]: failed to resolve: crate root in paths can only be used in start position\n   --> $DIR/absolute-paths-in-nested-use-groups.rs:16:5\n    |\n LL |     ::bar,       //~ ERROR crate root in paths can only be used in start position\n    |     ^ crate root in paths can only be used in start position\n \n-error[E0433]: failed to resolve. `super` in paths can only be used in start position\n+error[E0433]: failed to resolve: `super` in paths can only be used in start position\n   --> $DIR/absolute-paths-in-nested-use-groups.rs:17:5\n    |\n LL |     super::bar,  //~ ERROR `super` in paths can only be used in start position\n    |     ^^^^^ `super` in paths can only be used in start position\n \n-error[E0433]: failed to resolve. `self` in paths can only be used in start position\n+error[E0433]: failed to resolve: `self` in paths can only be used in start position\n   --> $DIR/absolute-paths-in-nested-use-groups.rs:18:5\n    |\n LL |     self::bar,   //~ ERROR `self` in paths can only be used in start position"}, {"sha": "4f38d4ce45e819105fd8fdc870caf765c2de7827", "filename": "src/test/ui/bad/bad-module.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fbad%2Fbad-module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fbad%2Fbad-module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-module.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -10,8 +10,8 @@\n \n fn main() {\n     let foo = thing::len(Vec::new());\n-    //~^ ERROR failed to resolve. Use of undeclared type or module `thing`\n+    //~^ ERROR failed to resolve: use of undeclared type or module `thing`\n \n     let foo = foo::bar::baz();\n-    //~^ ERROR failed to resolve. Use of undeclared type or module `foo`\n+    //~^ ERROR failed to resolve: use of undeclared type or module `foo`\n }"}, {"sha": "8bdcceaa1918c0fa40e19494e150be3ef9c44380", "filename": "src/test/ui/bad/bad-module.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fbad%2Fbad-module.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fbad%2Fbad-module.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-module.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,14 +1,14 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `thing`\n+error[E0433]: failed to resolve: use of undeclared type or module `thing`\n   --> $DIR/bad-module.rs:12:15\n    |\n LL |     let foo = thing::len(Vec::new());\n-   |               ^^^^^ Use of undeclared type or module `thing`\n+   |               ^^^^^ use of undeclared type or module `thing`\n \n-error[E0433]: failed to resolve. Use of undeclared type or module `foo`\n+error[E0433]: failed to resolve: use of undeclared type or module `foo`\n   --> $DIR/bad-module.rs:15:15\n    |\n LL |     let foo = foo::bar::baz();\n-   |               ^^^ Use of undeclared type or module `foo`\n+   |               ^^^ use of undeclared type or module `foo`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "354f7173872e68725ee41c6fe74e559b9ab03011", "filename": "src/test/ui/custom-attribute-multisegment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fcustom-attribute-multisegment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fcustom-attribute-multisegment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcustom-attribute-multisegment.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -14,5 +14,5 @@\n \n mod existent {}\n \n-#[existent::nonexistent] //~ ERROR failed to resolve. Could not find `nonexistent` in `existent`\n+#[existent::nonexistent] //~ ERROR failed to resolve: could not find `nonexistent` in `existent`\n fn main() {}"}, {"sha": "690ba4982ab74388677de7e4f080e2fd0a5883d7", "filename": "src/test/ui/custom-attribute-multisegment.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fcustom-attribute-multisegment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fcustom-attribute-multisegment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcustom-attribute-multisegment.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Could not find `nonexistent` in `existent`\n+error[E0433]: failed to resolve: could not find `nonexistent` in `existent`\n   --> $DIR/custom-attribute-multisegment.rs:17:13\n    |\n-LL | #[existent::nonexistent] //~ ERROR failed to resolve. Could not find `nonexistent` in `existent`\n-   |             ^^^^^^^^^^^ Could not find `nonexistent` in `existent`\n+LL | #[existent::nonexistent] //~ ERROR failed to resolve: could not find `nonexistent` in `existent`\n+   |             ^^^^^^^^^^^ could not find `nonexistent` in `existent`\n \n error: aborting due to previous error\n "}, {"sha": "5c5422f091ba00c5290328cf12bdd8ef426fb2b5", "filename": "src/test/ui/derived-errors/issue-31997-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fderived-errors%2Fissue-31997-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fderived-errors%2Fissue-31997-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderived-errors%2Fissue-31997-1.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `HashMap`\n+error[E0433]: failed to resolve: use of undeclared type or module `HashMap`\n   --> $DIR/issue-31997-1.rs:30:19\n    |\n LL |     let mut map = HashMap::new();\n-   |                   ^^^^^^^ Use of undeclared type or module `HashMap`\n+   |                   ^^^^^^^ use of undeclared type or module `HashMap`\n \n error: aborting due to previous error\n "}, {"sha": "fe9af74c01d9e0ac45304dc940f60ab9e77dd800", "filename": "src/test/ui/dollar-crate/dollar-crate-is-keyword-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fdollar-crate%2Fdollar-crate-is-keyword-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fdollar-crate%2Fdollar-crate-is-keyword-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdollar-crate%2Fdollar-crate-is-keyword-2.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,4 +1,4 @@\n-error[E0433]: failed to resolve. `$crate` in paths can only be used in start position\n+error[E0433]: failed to resolve: `$crate` in paths can only be used in start position\n   --> $DIR/dollar-crate-is-keyword-2.rs:16:16\n    |\n LL |         use a::$crate::b; //~ ERROR `$crate` in paths can only be used in start position\n@@ -16,7 +16,7 @@ LL |         use a::$crate; //~ ERROR unresolved import `a::$crate`\n LL | m!();\n    | ----- in this macro invocation\n \n-error[E0433]: failed to resolve. `$crate` in paths can only be used in start position\n+error[E0433]: failed to resolve: `$crate` in paths can only be used in start position\n   --> $DIR/dollar-crate-is-keyword-2.rs:17:21\n    |\n LL |         type A = a::$crate; //~ ERROR `$crate` in paths can only be used in start position"}, {"sha": "4297e1b43d3d1ee8a3c1526470928a469ee4bd23", "filename": "src/test/ui/dyn-trait-compatibility.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fdyn-trait-compatibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fdyn-trait-compatibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-trait-compatibility.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -11,14 +11,14 @@\n type A0 = dyn;\n //~^ ERROR cannot find type `dyn` in this scope\n type A1 = dyn::dyn;\n-//~^ ERROR Use of undeclared type or module `dyn`\n+//~^ ERROR use of undeclared type or module `dyn`\n type A2 = dyn<dyn, dyn>;\n //~^ ERROR cannot find type `dyn` in this scope\n //~| ERROR cannot find type `dyn` in this scope\n //~| ERROR cannot find type `dyn` in this scope\n type A3 = dyn<<dyn as dyn>::dyn>;\n //~^ ERROR cannot find type `dyn` in this scope\n //~| ERROR cannot find type `dyn` in this scope\n-//~| ERROR Use of undeclared type or module `dyn`\n+//~| ERROR use of undeclared type or module `dyn`\n \n fn main() {}"}, {"sha": "93048ccad6fa4233b55d0517db93c17c374bfbf6", "filename": "src/test/ui/dyn-trait-compatibility.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fdyn-trait-compatibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fdyn-trait-compatibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-trait-compatibility.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,14 +1,14 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `dyn`\n+error[E0433]: failed to resolve: use of undeclared type or module `dyn`\n   --> $DIR/dyn-trait-compatibility.rs:13:11\n    |\n LL | type A1 = dyn::dyn;\n-   |           ^^^ Use of undeclared type or module `dyn`\n+   |           ^^^ use of undeclared type or module `dyn`\n \n-error[E0433]: failed to resolve. Use of undeclared type or module `dyn`\n+error[E0433]: failed to resolve: use of undeclared type or module `dyn`\n   --> $DIR/dyn-trait-compatibility.rs:19:23\n    |\n LL | type A3 = dyn<<dyn as dyn>::dyn>;\n-   |                       ^^^ Use of undeclared type or module `dyn`\n+   |                       ^^^ use of undeclared type or module `dyn`\n \n error[E0412]: cannot find type `dyn` in this scope\n   --> $DIR/dyn-trait-compatibility.rs:11:11"}, {"sha": "d288cd086e77767b9ed07890983d3f94f6ca0134", "filename": "src/test/ui/error-codes/E0432.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Ferror-codes%2FE0432.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Ferror-codes%2FE0432.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0432.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `something`\n   --> $DIR/E0432.rs:11:5\n    |\n LL | use something::Foo; //~ ERROR E0432\n-   |     ^^^^^^^^^ Maybe a missing `extern crate something;`?\n+   |     ^^^^^^^^^ maybe a missing `extern crate something;`?\n \n error: aborting due to previous error\n "}, {"sha": "8a66e749ba8cfa54d4a72d34913bc90c1427a036", "filename": "src/test/ui/error-codes/E0433.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Ferror-codes%2FE0433.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Ferror-codes%2FE0433.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0433.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `HashMap`\n+error[E0433]: failed to resolve: use of undeclared type or module `HashMap`\n   --> $DIR/E0433.rs:12:15\n    |\n LL |     let map = HashMap::new(); //~ ERROR E0433\n-   |               ^^^^^^^ Use of undeclared type or module `HashMap`\n+   |               ^^^^^^^ use of undeclared type or module `HashMap`\n \n error: aborting due to previous error\n "}, {"sha": "422cd251de420f1eb9b5b2a7ecf53de77ecd6934", "filename": "src/test/ui/export-fully-qualified.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fexport-fully-qualified.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fexport-fully-qualified.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport-fully-qualified.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -13,7 +13,7 @@\n // want to change eventually.\n \n mod foo {\n-    pub fn bar() { foo::baz(); } //~ ERROR failed to resolve. Use of undeclared type or module `foo`\n+    pub fn bar() { foo::baz(); } //~ ERROR failed to resolve: use of undeclared type or module `foo`\n \n     fn baz() { }\n }"}, {"sha": "477cb4b1dd1898e75fe69c665b6ee246a36be11e", "filename": "src/test/ui/export-fully-qualified.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fexport-fully-qualified.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fexport-fully-qualified.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport-fully-qualified.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `foo`\n+error[E0433]: failed to resolve: use of undeclared type or module `foo`\n   --> $DIR/export-fully-qualified.rs:16:20\n    |\n-LL |     pub fn bar() { foo::baz(); } //~ ERROR failed to resolve. Use of undeclared type or module `foo`\n-   |                    ^^^ Use of undeclared type or module `foo`\n+LL |     pub fn bar() { foo::baz(); } //~ ERROR failed to resolve: use of undeclared type or module `foo`\n+   |                    ^^^ use of undeclared type or module `foo`\n \n error: aborting due to previous error\n "}, {"sha": "4cc9762d975d9db48e9dd562c67ddc282b217830", "filename": "src/test/ui/export2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fexport2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fexport2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport2.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n mod foo {\n-    pub fn x() { bar::x(); } //~ ERROR failed to resolve. Use of undeclared type or module `bar`\n+    pub fn x() { bar::x(); } //~ ERROR failed to resolve: use of undeclared type or module `bar`\n }\n \n mod bar {"}, {"sha": "7659183c8e02f59fb219eda7c313926a1564f664", "filename": "src/test/ui/export2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fexport2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fexport2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport2.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `bar`\n+error[E0433]: failed to resolve: use of undeclared type or module `bar`\n   --> $DIR/export2.rs:12:18\n    |\n-LL |     pub fn x() { bar::x(); } //~ ERROR failed to resolve. Use of undeclared type or module `bar`\n-   |                  ^^^ Use of undeclared type or module `bar`\n+LL |     pub fn x() { bar::x(); } //~ ERROR failed to resolve: use of undeclared type or module `bar`\n+   |                  ^^^ use of undeclared type or module `bar`\n \n error: aborting due to previous error\n "}, {"sha": "88a72778a85c6eae8922ee19a7732be12adc3860", "filename": "src/test/ui/extern/extern-macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fextern%2Fextern-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fextern%2Fextern-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-macro.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -12,5 +12,5 @@\n \n fn main() {\n     enum Foo {}\n-    let _ = Foo::bar!(); //~ ERROR failed to resolve. partially resolved path in a macro\n+    let _ = Foo::bar!(); //~ ERROR failed to resolve: partially resolved path in a macro\n }"}, {"sha": "6123d970166072f9f5b298ee3dc36f3f5494f403", "filename": "src/test/ui/extern/extern-macro.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fextern%2Fextern-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fextern%2Fextern-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-macro.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,7 +1,7 @@\n-error[E0433]: failed to resolve. partially resolved path in a macro\n+error[E0433]: failed to resolve: partially resolved path in a macro\n   --> $DIR/extern-macro.rs:15:13\n    |\n-LL |     let _ = Foo::bar!(); //~ ERROR failed to resolve. partially resolved path in a macro\n+LL |     let _ = Foo::bar!(); //~ ERROR failed to resolve: partially resolved path in a macro\n    |             ^^^^^^^^ partially resolved path in a macro\n \n error: aborting due to previous error"}, {"sha": "7c94200f00f4fc99559dc5829fc05597029c66fb", "filename": "src/test/ui/feature-gates/feature-gate-extern_absolute_paths.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_absolute_paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_absolute_paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_absolute_paths.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,13 +2,13 @@ error[E0432]: unresolved import `core`\n   --> $DIR/feature-gate-extern_absolute_paths.rs:11:5\n    |\n LL | use core::default; //~ ERROR unresolved import `core`\n-   |     ^^^^ Maybe a missing `extern crate core;`?\n+   |     ^^^^ maybe a missing `extern crate core;`?\n \n-error[E0433]: failed to resolve. Maybe a missing `extern crate core;`?\n+error[E0433]: failed to resolve: maybe a missing `extern crate core;`?\n   --> $DIR/feature-gate-extern_absolute_paths.rs:14:19\n    |\n LL |     let _: u8 = ::core::default::Default(); //~ ERROR failed to resolve\n-   |                   ^^^^ Maybe a missing `extern crate core;`?\n+   |                   ^^^^ maybe a missing `extern crate core;`?\n \n error: aborting due to 2 previous errors\n "}, {"sha": "73a63a2c7f59370cfe2eeccf60c82994570d2700", "filename": "src/test/ui/hygiene/no_implicit_prelude.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,11 +1,11 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `Vec`\n+error[E0433]: failed to resolve: use of undeclared type or module `Vec`\n   --> $DIR/no_implicit_prelude.rs:21:9\n    |\n LL |     fn f() { ::bar::m!(); }\n    |              ------------ in this macro invocation\n ...\n LL |         Vec::new(); //~ ERROR failed to resolve\n-   |         ^^^ Use of undeclared type or module `Vec`\n+   |         ^^^ use of undeclared type or module `Vec`\n \n error[E0599]: no method named `clone` found for type `()` in the current scope\n   --> $DIR/no_implicit_prelude.rs:22:12"}, {"sha": "d3bbdf15cd005c5b45884a8acb523a4180767805", "filename": "src/test/ui/import2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fimport2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fimport2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimport2.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use baz::zed::bar; //~ ERROR unresolved import `baz::zed` [E0432]\n-                   //~^ Could not find `zed` in `baz`\n+                   //~^ could not find `zed` in `baz`\n \n mod baz {}\n mod zed {"}, {"sha": "b19739377015d5181d7ca4f3965224c865f6c339", "filename": "src/test/ui/import2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fimport2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fimport2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimport2.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `baz::zed`\n   --> $DIR/import2.rs:11:10\n    |\n LL | use baz::zed::bar; //~ ERROR unresolved import `baz::zed` [E0432]\n-   |          ^^^ Could not find `zed` in `baz`\n+   |          ^^^ could not find `zed` in `baz`\n \n error: aborting due to previous error\n "}, {"sha": "a4c367fb0736eee7eca6415d4ad3a80005fdd4ae", "filename": "src/test/ui/import3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fimport3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fimport3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimport3.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `main`\n   --> $DIR/import3.rs:12:5\n    |\n LL | use main::bar;\n-   |     ^^^^ Maybe a missing `extern crate main;`?\n+   |     ^^^^ maybe a missing `extern crate main;`?\n \n error: aborting due to previous error\n "}, {"sha": "6b70efe0c44866ad951b60b0afabb515fef0c2a0", "filename": "src/test/ui/imports/extern-prelude-extern-crate-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -7,7 +7,7 @@ mod n {\n \n mod m {\n     fn check() {\n-        two_macros::m!(); //~ ERROR failed to resolve. Use of undeclared type or module `two_macros`\n+        two_macros::m!(); //~ ERROR failed to resolve: use of undeclared type or module `two_macros`\n     }\n }\n "}, {"sha": "baeed02517d1860b9c58e061783d9f0eb91cf9cd", "filename": "src/test/ui/imports/extern-prelude-extern-crate-fail.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -7,11 +7,11 @@ LL |         extern crate std as non_existent;\n LL | define_std_as_non_existent!();\n    | ------------------------------ in this macro invocation\n \n-error[E0433]: failed to resolve. Use of undeclared type or module `two_macros`\n+error[E0433]: failed to resolve: use of undeclared type or module `two_macros`\n   --> $DIR/extern-prelude-extern-crate-fail.rs:10:9\n    |\n-LL |         two_macros::m!(); //~ ERROR failed to resolve. Use of undeclared type or module `two_macros`\n-   |         ^^^^^^^^^^ Use of undeclared type or module `two_macros`\n+LL |         two_macros::m!(); //~ ERROR failed to resolve: use of undeclared type or module `two_macros`\n+   |         ^^^^^^^^^^ use of undeclared type or module `two_macros`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "0ed26ea6fe64220d0b06bd9f982c729692d2311b", "filename": "src/test/ui/imports/issue-53269.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `nonexistent_module`\n   --> $DIR/issue-53269.rs:16:9\n    |\n LL |     use nonexistent_module::mac; //~ ERROR unresolved import `nonexistent_module`\n-   |         ^^^^^^^^^^^^^^^^^^ Maybe a missing `extern crate nonexistent_module;`?\n+   |         ^^^^^^^^^^^^^^^^^^ maybe a missing `extern crate nonexistent_module;`?\n \n error[E0659]: `mac` is ambiguous (`macro_rules` vs non-`macro_rules` from other module)\n   --> $DIR/issue-53269.rs:18:5"}, {"sha": "43f92d8c3deed8937159160411028ab24ecaa49b", "filename": "src/test/ui/issues/issue-1697.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-1697.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-1697.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-1697.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -11,6 +11,6 @@\n // Testing that we don't fail abnormally after hitting the errors\n \n use unresolved::*; //~ ERROR unresolved import `unresolved` [E0432]\n-                   //~^ Maybe a missing `extern crate unresolved;`?\n+                   //~^ maybe a missing `extern crate unresolved;`?\n \n fn main() {}"}, {"sha": "b588c88326438c979ac4a693dbb5914aed8006f8", "filename": "src/test/ui/issues/issue-1697.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-1697.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-1697.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-1697.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `unresolved`\n   --> $DIR/issue-1697.rs:13:5\n    |\n LL | use unresolved::*; //~ ERROR unresolved import `unresolved` [E0432]\n-   |     ^^^^^^^^^^ Maybe a missing `extern crate unresolved;`?\n+   |     ^^^^^^^^^^ maybe a missing `extern crate unresolved;`?\n \n error: aborting due to previous error\n "}, {"sha": "f033666220d9152c16046ceaccca6d8748341bda", "filename": "src/test/ui/issues/issue-30560.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-30560.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-30560.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30560.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -11,10 +11,10 @@\n type Alias = ();\n use Alias::*;\n //~^ ERROR unresolved import `Alias` [E0432]\n-//~| Not a module `Alias`\n+//~| not a module `Alias`\n use std::io::Result::*;\n //~^ ERROR unresolved import `std::io::Result` [E0432]\n-//~| Not a module `Result`\n+//~| not a module `Result`\n \n trait T {}\n use T::*; //~ ERROR items in traits are not importable"}, {"sha": "880c565cf9f6900607d40b8af5cc2e3d9fefedea", "filename": "src/test/ui/issues/issue-30560.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-30560.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-30560.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30560.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -8,13 +8,13 @@ error[E0432]: unresolved import `Alias`\n   --> $DIR/issue-30560.rs:12:5\n    |\n LL | use Alias::*;\n-   |     ^^^^^ Not a module `Alias`\n+   |     ^^^^^ not a module `Alias`\n \n error[E0432]: unresolved import `std::io::Result`\n   --> $DIR/issue-30560.rs:15:14\n    |\n LL | use std::io::Result::*;\n-   |              ^^^^^^ Not a module `Result`\n+   |              ^^^^^^ not a module `Result`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "801ba7afcd600f15be8f759b0e8080fdab363990", "filename": "src/test/ui/issues/issue-33293.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-33293.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-33293.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-33293.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -11,6 +11,6 @@\n fn main() {\n     match 0 {\n         aaa::bbb(_) => ()\n-        //~^ ERROR failed to resolve. Use of undeclared type or module `aaa`\n+        //~^ ERROR failed to resolve: use of undeclared type or module `aaa`\n     };\n }"}, {"sha": "dc288fa71ce8a3d48d61550569615ff94a765f25", "filename": "src/test/ui/issues/issue-33293.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-33293.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-33293.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-33293.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `aaa`\n+error[E0433]: failed to resolve: use of undeclared type or module `aaa`\n   --> $DIR/issue-33293.rs:13:9\n    |\n LL |         aaa::bbb(_) => ()\n-   |         ^^^ Use of undeclared type or module `aaa`\n+   |         ^^^ use of undeclared type or module `aaa`\n \n error: aborting due to previous error\n "}, {"sha": "f41a3973625504c8f336368683a084a3707031e4", "filename": "src/test/ui/issues/issue-33464.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-33464.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-33464.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-33464.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,19 +2,19 @@ error[E0432]: unresolved import `abc`\n   --> $DIR/issue-33464.rs:13:5\n    |\n LL | use abc::one_el;\n-   |     ^^^ Maybe a missing `extern crate abc;`?\n+   |     ^^^ maybe a missing `extern crate abc;`?\n \n error[E0432]: unresolved import `abc`\n   --> $DIR/issue-33464.rs:15:5\n    |\n LL | use abc::{a, bbb, cccccc};\n-   |     ^^^ Maybe a missing `extern crate abc;`?\n+   |     ^^^ maybe a missing `extern crate abc;`?\n \n error[E0432]: unresolved import `a_very_long_name`\n   --> $DIR/issue-33464.rs:17:5\n    |\n LL | use a_very_long_name::{el, el2};\n-   |     ^^^^^^^^^^^^^^^^ Maybe a missing `extern crate a_very_long_name;`?\n+   |     ^^^^^^^^^^^^^^^^ maybe a missing `extern crate a_very_long_name;`?\n \n error: aborting due to 3 previous errors\n "}, {"sha": "27effe9e342e03c8f7eebd7e13196a37929a3337", "filename": "src/test/ui/issues/issue-36881.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-36881.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-36881.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36881.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `issue_36881_aux`\n   --> $DIR/issue-36881.rs:16:9\n    |\n LL |     use issue_36881_aux::Foo; //~ ERROR unresolved import\n-   |         ^^^^^^^^^^^^^^^ Maybe a missing `extern crate issue_36881_aux;`?\n+   |         ^^^^^^^^^^^^^^^ maybe a missing `extern crate issue_36881_aux;`?\n \n error: aborting due to previous error\n "}, {"sha": "48fb6c2e6faa7404328f0d58077a17aaebf3f00f", "filename": "src/test/ui/issues/issue-37887.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-37887.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-37887.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37887.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `libc`\n   --> $DIR/issue-37887.rs:13:9\n    |\n LL |     use libc::*; //~ ERROR unresolved import\n-   |         ^^^^ Maybe a missing `extern crate libc;`?\n+   |         ^^^^ maybe a missing `extern crate libc;`?\n \n error[E0658]: use of unstable library feature 'libc': use `libc` from crates.io (see issue #27783)\n   --> $DIR/issue-37887.rs:12:5"}, {"sha": "5217ddb9acb7d741bb455ea669ac8f52b3eaebba", "filename": "src/test/ui/issues/issue-38857.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-38857.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-38857.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-38857.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -10,6 +10,6 @@\n \n fn main() {\n     let a = std::sys::imp::process::process_common::StdioPipes { ..panic!() };\n-    //~^ ERROR failed to resolve. Could not find `imp` in `sys` [E0433]\n+    //~^ ERROR failed to resolve: could not find `imp` in `sys` [E0433]\n     //~^^ ERROR module `sys` is private [E0603]\n }"}, {"sha": "65026344febeff45111b893a2ddbc0c015eb1fba", "filename": "src/test/ui/issues/issue-38857.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-38857.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fissues%2Fissue-38857.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-38857.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Could not find `imp` in `sys`\n+error[E0433]: failed to resolve: could not find `imp` in `sys`\n   --> $DIR/issue-38857.rs:12:23\n    |\n LL |     let a = std::sys::imp::process::process_common::StdioPipes { ..panic!() };\n-   |                       ^^^ Could not find `imp` in `sys`\n+   |                       ^^^ could not find `imp` in `sys`\n \n error[E0603]: module `sys` is private\n   --> $DIR/issue-38857.rs:12:18"}, {"sha": "d8941f3e532dddd77604e1087b240bbe06bea654", "filename": "src/test/ui/keyword/keyword-super-as-identifier.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fkeyword%2Fkeyword-super-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fkeyword%2Fkeyword-super-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkeyword%2Fkeyword-super-as-identifier.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n fn main() {\n-    let super = 22; //~ ERROR failed to resolve. There are too many initial `super`s\n+    let super = 22; //~ ERROR failed to resolve: there are too many initial `super`s\n }"}, {"sha": "9b665748794c58ec8595c5df0b3ad14355013bdd", "filename": "src/test/ui/keyword/keyword-super-as-identifier.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fkeyword%2Fkeyword-super-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fkeyword%2Fkeyword-super-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkeyword%2Fkeyword-super-as-identifier.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. There are too many initial `super`s.\n+error[E0433]: failed to resolve: there are too many initial `super`s.\n   --> $DIR/keyword-super-as-identifier.rs:12:9\n    |\n-LL |     let super = 22; //~ ERROR failed to resolve. There are too many initial `super`s\n-   |         ^^^^^ There are too many initial `super`s.\n+LL |     let super = 22; //~ ERROR failed to resolve: there are too many initial `super`s\n+   |         ^^^^^ there are too many initial `super`s.\n \n error: aborting due to previous error\n "}, {"sha": "8764063081874a60f484eb2ad35e40246f73d8eb", "filename": "src/test/ui/keyword/keyword-super.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fkeyword%2Fkeyword-super.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fkeyword%2Fkeyword-super.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkeyword%2Fkeyword-super.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n fn main() {\n-    let super: isize; //~ ERROR failed to resolve. There are too many initial `super`s\n+    let super: isize; //~ ERROR failed to resolve: there are too many initial `super`s\n }"}, {"sha": "690b684c133721a91393c901a7e245c8fa507504", "filename": "src/test/ui/keyword/keyword-super.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fkeyword%2Fkeyword-super.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fkeyword%2Fkeyword-super.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkeyword%2Fkeyword-super.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. There are too many initial `super`s.\n+error[E0433]: failed to resolve: there are too many initial `super`s.\n   --> $DIR/keyword-super.rs:12:9\n    |\n-LL |     let super: isize; //~ ERROR failed to resolve. There are too many initial `super`s\n-   |         ^^^^^ There are too many initial `super`s.\n+LL |     let super: isize; //~ ERROR failed to resolve: there are too many initial `super`s\n+   |         ^^^^^ there are too many initial `super`s.\n \n error: aborting due to previous error\n "}, {"sha": "2a58fd55453beb63194acbdda7f413c1bd4d0e21", "filename": "src/test/ui/macros/macro-inner-attributes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro-inner-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro-inner-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-inner-attributes.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -25,6 +25,6 @@ test!(b,\n #[qux]\n fn main() {\n     a::bar();\n-    //~^ ERROR failed to resolve. Use of undeclared type or module `a`\n+    //~^ ERROR failed to resolve: use of undeclared type or module `a`\n     b::bar();\n }"}, {"sha": "47d9469779bb0b392008c4d6533c1608c57d64ba", "filename": "src/test/ui/macros/macro-inner-attributes.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro-inner-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro-inner-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-inner-attributes.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `a`\n+error[E0433]: failed to resolve: use of undeclared type or module `a`\n   --> $DIR/macro-inner-attributes.rs:27:5\n    |\n LL |     a::bar();\n-   |     ^ Use of undeclared type or module `a`\n+   |     ^ use of undeclared type or module `a`\n \n error: aborting due to previous error\n "}, {"sha": "bdf3ac0f69f40aac1224ce337d16c3423098c229", "filename": "src/test/ui/macros/macro-path-prelude-fail-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-1.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -12,8 +12,8 @@\n \n mod m {\n     fn check() {\n-        Vec::clone!(); //~ ERROR failed to resolve. Not a module `Vec`\n-        u8::clone!(); //~ ERROR failed to resolve. Not a module `u8`\n+        Vec::clone!(); //~ ERROR failed to resolve: not a module `Vec`\n+        u8::clone!(); //~ ERROR failed to resolve: not a module `u8`\n     }\n }\n "}, {"sha": "590e4f0fd062ef93ac3fd13cd4c55391d1d43a29", "filename": "src/test/ui/macros/macro-path-prelude-fail-1.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-1.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,14 +1,14 @@\n-error[E0433]: failed to resolve. Not a module `Vec`\n+error[E0433]: failed to resolve: not a module `Vec`\n   --> $DIR/macro-path-prelude-fail-1.rs:15:9\n    |\n-LL |         Vec::clone!(); //~ ERROR failed to resolve. Not a module `Vec`\n-   |         ^^^ Not a module `Vec`\n+LL |         Vec::clone!(); //~ ERROR failed to resolve: not a module `Vec`\n+   |         ^^^ not a module `Vec`\n \n-error[E0433]: failed to resolve. Not a module `u8`\n+error[E0433]: failed to resolve: not a module `u8`\n   --> $DIR/macro-path-prelude-fail-1.rs:16:9\n    |\n-LL |         u8::clone!(); //~ ERROR failed to resolve. Not a module `u8`\n-   |         ^^ Not a module `u8`\n+LL |         u8::clone!(); //~ ERROR failed to resolve: not a module `u8`\n+   |         ^^ not a module `u8`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "e27c061e19502ee9bcf22a9400557bffa63c87b4", "filename": "src/test/ui/macros/macro-path-prelude-fail-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-2.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -10,7 +10,7 @@\n \n mod m {\n     fn check() {\n-        Result::Ok!(); //~ ERROR failed to resolve. partially resolved path in a macro\n+        Result::Ok!(); //~ ERROR failed to resolve: partially resolved path in a macro\n     }\n }\n "}, {"sha": "cf123f43fea3dd2f899beb8c59702b3e900bfe60", "filename": "src/test/ui/macros/macro-path-prelude-fail-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-2.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,7 +1,7 @@\n-error[E0433]: failed to resolve. partially resolved path in a macro\n+error[E0433]: failed to resolve: partially resolved path in a macro\n   --> $DIR/macro-path-prelude-fail-2.rs:13:9\n    |\n-LL |         Result::Ok!(); //~ ERROR failed to resolve. partially resolved path in a macro\n+LL |         Result::Ok!(); //~ ERROR failed to resolve: partially resolved path in a macro\n    |         ^^^^^^^^^^ partially resolved path in a macro\n \n error: aborting due to previous error"}, {"sha": "8b4fe9f200dce160b274f3ca53398a7df9b7baf8", "filename": "src/test/ui/macros/macro_path_as_generic_bound.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro_path_as_generic_bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fmacros%2Fmacro_path_as_generic_bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro_path_as_generic_bound.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `m`\n+error[E0433]: failed to resolve: use of undeclared type or module `m`\n   --> $DIR/macro_path_as_generic_bound.rs:17:6\n    |\n LL | foo!(m::m2::A); //~ ERROR failed to resolve\n-   |      ^ Use of undeclared type or module `m`\n+   |      ^ use of undeclared type or module `m`\n \n error: aborting due to previous error\n "}, {"sha": "c544ca4e304f09ef356a539021060b8eab35acc4", "filename": "src/test/ui/pattern/pattern-error-continue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -42,6 +42,6 @@ fn main() {\n     //~| expected char, found bool\n \n     match () {\n-        E::V => {} //~ ERROR failed to resolve. Use of undeclared type or module `E`\n+        E::V => {} //~ ERROR failed to resolve: use of undeclared type or module `E`\n     }\n }"}, {"sha": "f2c35ef872d36a21acf9d0602b55d1e53c624d6d", "filename": "src/test/ui/pattern/pattern-error-continue.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `E`\n+error[E0433]: failed to resolve: use of undeclared type or module `E`\n   --> $DIR/pattern-error-continue.rs:45:9\n    |\n-LL |         E::V => {} //~ ERROR failed to resolve. Use of undeclared type or module `E`\n-   |         ^ Use of undeclared type or module `E`\n+LL |         E::V => {} //~ ERROR failed to resolve: use of undeclared type or module `E`\n+   |         ^ use of undeclared type or module `E`\n \n error[E0532]: expected tuple struct/variant, found unit variant `A::D`\n   --> $DIR/pattern-error-continue.rs:28:9"}, {"sha": "2b2d9b76bddad7bc4b157ee812b8e13524a2400b", "filename": "src/test/ui/privacy/restricted/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -57,6 +57,6 @@ fn main() {\n }\n \n mod pathological {\n-    pub(in bad::path) mod m1 {} //~ ERROR failed to resolve. Maybe a missing `extern crate bad;`?\n+    pub(in bad::path) mod m1 {} //~ ERROR failed to resolve: maybe a missing `extern crate bad;`?\n     pub(in foo) mod m2 {} //~ ERROR visibilities can only be restricted to ancestor modules\n }"}, {"sha": "01e224910a5eb776ae9a90b4798b59c898d63571", "filename": "src/test/ui/privacy/restricted/test.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Maybe a missing `extern crate bad;`?\n+error[E0433]: failed to resolve: maybe a missing `extern crate bad;`?\n   --> $DIR/test.rs:60:12\n    |\n-LL |     pub(in bad::path) mod m1 {} //~ ERROR failed to resolve. Maybe a missing `extern crate bad;`?\n-   |            ^^^ Maybe a missing `extern crate bad;`?\n+LL |     pub(in bad::path) mod m1 {} //~ ERROR failed to resolve: maybe a missing `extern crate bad;`?\n+   |            ^^^ maybe a missing `extern crate bad;`?\n \n error: visibilities can only be restricted to ancestor modules\n   --> $DIR/test.rs:61:12"}, {"sha": "01f493e954b13570eaac596cb5cab08f1faf357e", "filename": "src/test/ui/resolve/resolve-variant-assoc-item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fresolve%2Fresolve-variant-assoc-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fresolve%2Fresolve-variant-assoc-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-variant-assoc-item.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -12,6 +12,6 @@ enum E { V }\n use E::V;\n \n fn main() {\n-    E::V::associated_item; //~ ERROR failed to resolve. Not a module `V`\n-    V::associated_item; //~ ERROR failed to resolve. Not a module `V`\n+    E::V::associated_item; //~ ERROR failed to resolve: not a module `V`\n+    V::associated_item; //~ ERROR failed to resolve: not a module `V`\n }"}, {"sha": "ef2d0a71b5b8509916e5c01192b47a6b4d49507c", "filename": "src/test/ui/resolve/resolve-variant-assoc-item.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fresolve%2Fresolve-variant-assoc-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fresolve%2Fresolve-variant-assoc-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-variant-assoc-item.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,14 +1,14 @@\n-error[E0433]: failed to resolve. Not a module `V`\n+error[E0433]: failed to resolve: not a module `V`\n   --> $DIR/resolve-variant-assoc-item.rs:15:8\n    |\n-LL |     E::V::associated_item; //~ ERROR failed to resolve. Not a module `V`\n-   |        ^ Not a module `V`\n+LL |     E::V::associated_item; //~ ERROR failed to resolve: not a module `V`\n+   |        ^ not a module `V`\n \n-error[E0433]: failed to resolve. Not a module `V`\n+error[E0433]: failed to resolve: not a module `V`\n   --> $DIR/resolve-variant-assoc-item.rs:16:5\n    |\n-LL |     V::associated_item; //~ ERROR failed to resolve. Not a module `V`\n-   |     ^ Not a module `V`\n+LL |     V::associated_item; //~ ERROR failed to resolve: not a module `V`\n+   |     ^ not a module `V`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "2ce2d76583232ccfa26ffc7c8e9416715837ae4e", "filename": "src/test/ui/resolve_self_super_hint.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fresolve_self_super_hint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fresolve_self_super_hint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve_self_super_hint.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -15,19 +15,19 @@ mod a {\n     extern crate alloc;\n     use alloc::HashMap;\n     //~^ ERROR unresolved import `alloc` [E0432]\n-    //~| Did you mean `self::alloc`?\n+    //~| did you mean `self::alloc`?\n     mod b {\n         use alloc::HashMap;\n         //~^ ERROR unresolved import `alloc` [E0432]\n-        //~| Did you mean `super::alloc`?\n+        //~| did you mean `super::alloc`?\n         mod c {\n             use alloc::HashMap;\n             //~^ ERROR unresolved import `alloc` [E0432]\n-            //~| Did you mean `a::alloc`?\n+            //~| did you mean `a::alloc`?\n             mod d {\n                 use alloc::HashMap;\n                 //~^ ERROR unresolved import `alloc` [E0432]\n-                //~| Did you mean `a::alloc`?\n+                //~| did you mean `a::alloc`?\n             }\n         }\n     }"}, {"sha": "613107712b2143a23749882a246bf437947e43bf", "filename": "src/test/ui/resolve_self_super_hint.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fresolve_self_super_hint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fresolve_self_super_hint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve_self_super_hint.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,25 +2,25 @@ error[E0432]: unresolved import `alloc`\n   --> $DIR/resolve_self_super_hint.rs:16:9\n    |\n LL |     use alloc::HashMap;\n-   |         ^^^^^ Did you mean `self::alloc`?\n+   |         ^^^^^ did you mean `self::alloc`?\n \n error[E0432]: unresolved import `alloc`\n   --> $DIR/resolve_self_super_hint.rs:20:13\n    |\n LL |         use alloc::HashMap;\n-   |             ^^^^^ Did you mean `super::alloc`?\n+   |             ^^^^^ did you mean `super::alloc`?\n \n error[E0432]: unresolved import `alloc`\n   --> $DIR/resolve_self_super_hint.rs:24:17\n    |\n LL |             use alloc::HashMap;\n-   |                 ^^^^^ Did you mean `a::alloc`?\n+   |                 ^^^^^ did you mean `a::alloc`?\n \n error[E0432]: unresolved import `alloc`\n   --> $DIR/resolve_self_super_hint.rs:28:21\n    |\n LL |                 use alloc::HashMap;\n-   |                     ^^^^^ Did you mean `a::alloc`?\n+   |                     ^^^^^ did you mean `a::alloc`?\n \n error: aborting due to 4 previous errors\n "}, {"sha": "2751d8cb285a3d7dee26b6565adf2e01ef73b8bd", "filename": "src/test/ui/rfc-2126-crate-paths/crate-path-non-absolute.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-crate-paths%2Fcrate-path-non-absolute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-crate-paths%2Fcrate-path-non-absolute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-crate-paths%2Fcrate-path-non-absolute.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,10 +1,10 @@\n-error[E0433]: failed to resolve. `crate` in paths can only be used in start position\n+error[E0433]: failed to resolve: `crate` in paths can only be used in start position\n   --> $DIR/crate-path-non-absolute.rs:17:22\n    |\n LL |         let s = ::m::crate::S; //~ ERROR failed to resolve\n    |                      ^^^^^ `crate` in paths can only be used in start position\n \n-error[E0433]: failed to resolve. global paths cannot start with `crate`\n+error[E0433]: failed to resolve: global paths cannot start with `crate`\n   --> $DIR/crate-path-non-absolute.rs:18:20\n    |\n LL |         let s1 = ::crate::S; //~ ERROR failed to resolve"}, {"sha": "39b2db7a19f7073fabed717193c40734887a2754", "filename": "src/test/ui/rfc-2126-extern-absolute-paths/non-existent-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-1.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `xcrate`\n   --> $DIR/non-existent-1.rs:13:5\n    |\n LL | use xcrate::S; //~ ERROR unresolved import `xcrate`\n-   |     ^^^^^^ Use of undeclared type or module `xcrate`\n+   |     ^^^^^^ use of undeclared type or module `xcrate`\n \n error: aborting due to previous error\n "}, {"sha": "a07c3f17d6f7bd6d4171185e0c476dfa8a0a9e75", "filename": "src/test/ui/rfc-2126-extern-absolute-paths/non-existent-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -12,5 +12,5 @@\n \n fn main() {\n     let s = ::xcrate::S;\n-    //~^ ERROR failed to resolve. Could not find `xcrate` in `{{root}}`\n+    //~^ ERROR failed to resolve: could not find `xcrate` in `{{root}}`\n }"}, {"sha": "30e5b0ad1dfb7fc7fa88327d95685198f83c1ddc", "filename": "src/test/ui/rfc-2126-extern-absolute-paths/non-existent-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Could not find `xcrate` in `{{root}}`\n+error[E0433]: failed to resolve: could not find `xcrate` in `{{root}}`\n   --> $DIR/non-existent-2.rs:14:15\n    |\n LL |     let s = ::xcrate::S;\n-   |               ^^^^^^ Could not find `xcrate` in `{{root}}`\n+   |               ^^^^^^ could not find `xcrate` in `{{root}}`\n \n error: aborting due to previous error\n "}, {"sha": "47ea4b8dfcb8a4beba82ee6a1021dee68b25c7dc", "filename": "src/test/ui/rfc-2126-extern-in-paths/non-existent-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-extern-in-paths%2Fnon-existent-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-extern-in-paths%2Fnon-existent-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-extern-in-paths%2Fnon-existent-1.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `extern::xcrate`\n   --> $DIR/non-existent-1.rs:13:13\n    |\n LL | use extern::xcrate::S; //~ ERROR unresolved import `extern::xcrate`\n-   |             ^^^^^^ Could not find `xcrate` in `extern`\n+   |             ^^^^^^ could not find `xcrate` in `extern`\n \n error: aborting due to previous error\n "}, {"sha": "8d7c3993c6273e7ba38451fd0508fafa844cb8b1", "filename": "src/test/ui/rfc-2126-extern-in-paths/non-existent-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-extern-in-paths%2Fnon-existent-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-extern-in-paths%2Fnon-existent-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-extern-in-paths%2Fnon-existent-2.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -12,5 +12,5 @@\n \n fn main() {\n     let s = extern::xcrate::S;\n-    //~^ ERROR failed to resolve. Could not find `xcrate` in `extern`\n+    //~^ ERROR failed to resolve: could not find `xcrate` in `extern`\n }"}, {"sha": "89630adb5a8249e1c041e0aca3eb394388a0fe9a", "filename": "src/test/ui/rfc-2126-extern-in-paths/non-existent-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-extern-in-paths%2Fnon-existent-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frfc-2126-extern-in-paths%2Fnon-existent-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-extern-in-paths%2Fnon-existent-2.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Could not find `xcrate` in `extern`\n+error[E0433]: failed to resolve: could not find `xcrate` in `extern`\n   --> $DIR/non-existent-2.rs:14:21\n    |\n LL |     let s = extern::xcrate::S;\n-   |                     ^^^^^^ Could not find `xcrate` in `extern`\n+   |                     ^^^^^^ could not find `xcrate` in `extern`\n \n error: aborting due to previous error\n "}, {"sha": "5f92574c23ffef1485bbc9d7ec857430965c9b0a", "filename": "src/test/ui/rust-2018/issue-54006.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frust-2018%2Fissue-54006.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frust-2018%2Fissue-54006.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fissue-54006.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `alloc`\n   --> $DIR/issue-54006.rs:16:5\n    |\n LL | use alloc::vec;\n-   |     ^^^^^ Did you mean `core::alloc`?\n+   |     ^^^^^ did you mean `core::alloc`?\n \n error: cannot determine resolution for the macro `vec`\n   --> $DIR/issue-54006.rs:20:18"}, {"sha": "741b2ca0826ce7d58d9bbd1e76b800637dfbf780", "filename": "src/test/ui/rust-2018/local-path-suggestions-2015.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frust-2018%2Flocal-path-suggestions-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frust-2018%2Flocal-path-suggestions-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Flocal-path-suggestions-2015.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `foobar`\n   --> $DIR/local-path-suggestions-2015.rs:34:5\n    |\n LL | use foobar::Baz;\n-   |     ^^^^^^ Did you mean `aux_baz::foobar`?\n+   |     ^^^^^^ did you mean `aux_baz::foobar`?\n \n error: aborting due to previous error\n "}, {"sha": "27ea6642eb01e6197c7a2c6985f9183338818bea", "filename": "src/test/ui/rust-2018/local-path-suggestions-2018.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frust-2018%2Flocal-path-suggestions-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frust-2018%2Flocal-path-suggestions-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Flocal-path-suggestions-2018.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,15 +2,15 @@ error[E0432]: unresolved import `foo`\n   --> $DIR/local-path-suggestions-2018.rs:22:9\n    |\n LL |     use foo::Bar;\n-   |         ^^^ Did you mean `crate::foo`?\n+   |         ^^^ did you mean `crate::foo`?\n    |\n    = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n \n error[E0432]: unresolved import `foobar`\n   --> $DIR/local-path-suggestions-2018.rs:31:5\n    |\n LL | use foobar::Baz;\n-   |     ^^^^^^ Did you mean `baz::foobar`?\n+   |     ^^^^^^ did you mean `baz::foobar`?\n \n error: aborting due to 2 previous errors\n "}, {"sha": "794d986b82ef181e76baf4c8c78a4731d13664bf", "filename": "src/test/ui/rust-2018/uniform-paths/prelude-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fprelude-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fprelude-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fprelude-fail.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -8,7 +8,7 @@ error[E0432]: unresolved import `rustfmt`\n   --> $DIR/prelude-fail.rs:9:5\n    |\n LL | use rustfmt::skip as imported_rustfmt_skip; //~ ERROR unresolved import `rustfmt`\n-   |     ^^^^^^^ Not a module `rustfmt`\n+   |     ^^^^^^^ not a module `rustfmt`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "1f001530f364c4e27427fdfc144081f4461ccf5d", "filename": "src/test/ui/span/non-existing-module-import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fspan%2Fnon-existing-module-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fspan%2Fnon-existing-module-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fnon-existing-module-import.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `std::bar`\n   --> $DIR/non-existing-module-import.rs:11:10\n    |\n LL | use std::bar::{foo1, foo2}; //~ ERROR unresolved import\n-   |          ^^^ Could not find `bar` in `std`\n+   |          ^^^ could not find `bar` in `std`\n \n error: aborting due to previous error\n "}, {"sha": "96d099c765557b79250141d10150fb150e4ec911", "filename": "src/test/ui/super-at-top-level.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fsuper-at-top-level.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fsuper-at-top-level.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuper-at-top-level.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use super::f; //~ ERROR There are too many initial `super`s\n+use super::f; //~ ERROR there are too many initial `super`s\n \n fn main() {\n }"}, {"sha": "8402daad19e0b54bacb875b48bd23ef8c392ec30", "filename": "src/test/ui/super-at-top-level.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fsuper-at-top-level.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fsuper-at-top-level.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuper-at-top-level.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. There are too many initial `super`s.\n+error[E0433]: failed to resolve: there are too many initial `super`s.\n   --> $DIR/super-at-top-level.rs:11:5\n    |\n-LL | use super::f; //~ ERROR There are too many initial `super`s\n-   |     ^^^^^ There are too many initial `super`s.\n+LL | use super::f; //~ ERROR there are too many initial `super`s\n+   |     ^^^^^ there are too many initial `super`s.\n \n error: aborting due to previous error\n "}, {"sha": "11e28857afe036132532b28d7b80f04ef93d5fb1", "filename": "src/test/ui/tool-attributes/tool-attributes-shadowing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-shadowing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-shadowing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-shadowing.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -10,5 +10,5 @@\n \n mod rustfmt {}\n \n-#[rustfmt::skip] //~ ERROR failed to resolve. Could not find `skip` in `rustfmt`\n+#[rustfmt::skip] //~ ERROR failed to resolve: could not find `skip` in `rustfmt`\n fn main() {}"}, {"sha": "0839e363c36f96834b935ee2dc5dfc7d621a7f61", "filename": "src/test/ui/tool-attributes/tool-attributes-shadowing.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-shadowing.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Could not find `skip` in `rustfmt`\n+error[E0433]: failed to resolve: could not find `skip` in `rustfmt`\n   --> $DIR/tool-attributes-shadowing.rs:13:12\n    |\n-LL | #[rustfmt::skip] //~ ERROR failed to resolve. Could not find `skip` in `rustfmt`\n-   |            ^^^^ Could not find `skip` in `rustfmt`\n+LL | #[rustfmt::skip] //~ ERROR failed to resolve: could not find `skip` in `rustfmt`\n+   |            ^^^^ could not find `skip` in `rustfmt`\n \n error: aborting due to previous error\n "}, {"sha": "df7d442239b397521162a1ff75c3af7e4fa5d8af", "filename": "src/test/ui/type/type-path-err-node-types.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Ftype%2Ftype-path-err-node-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Ftype%2Ftype-path-err-node-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-path-err-node-types.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `NonExistent`\n+error[E0433]: failed to resolve: use of undeclared type or module `NonExistent`\n   --> $DIR/type-path-err-node-types.rs:25:5\n    |\n LL |     NonExistent::Assoc::<u8>; //~ ERROR undeclared type or module `NonExistent`\n-   |     ^^^^^^^^^^^ Use of undeclared type or module `NonExistent`\n+   |     ^^^^^^^^^^^ use of undeclared type or module `NonExistent`\n \n error[E0412]: cannot find type `Nonexistent` in this scope\n   --> $DIR/type-path-err-node-types.rs:17:12"}, {"sha": "db10197ded1a7ee872449951f60dc45c62ae6024", "filename": "src/test/ui/ufcs/ufcs-partially-resolved.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fufcs%2Fufcs-partially-resolved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fufcs%2Fufcs-partially-resolved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fufcs%2Fufcs-partially-resolved.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -55,9 +55,9 @@ fn main() {\n     <u8 as E::N>::NN; //~ ERROR cannot find method or associated constant `NN` in `E::N`\n     <u8 as A::N>::NN; //~ ERROR cannot find method or associated constant `NN` in `A::N`\n     let _: <u8 as Tr::Y>::NN; //~ ERROR cannot find associated type `NN` in `Tr::Y`\n-    let _: <u8 as E::Y>::NN; //~ ERROR failed to resolve. Not a module `Y`\n+    let _: <u8 as E::Y>::NN; //~ ERROR failed to resolve: not a module `Y`\n     <u8 as Tr::Y>::NN; //~ ERROR cannot find method or associated constant `NN` in `Tr::Y`\n-    <u8 as E::Y>::NN; //~ ERROR failed to resolve. Not a module `Y`\n+    <u8 as E::Y>::NN; //~ ERROR failed to resolve: not a module `Y`\n \n     let _: <u8 as Dr>::Z; //~ ERROR expected associated type, found method `Dr::Z`\n     <u8 as Dr>::X; //~ ERROR expected method or associated constant, found associated type `Dr::X`"}, {"sha": "cb571be661d6ae0aa5e7d6c2e0bd7b619d4ac3fe", "filename": "src/test/ui/ufcs/ufcs-partially-resolved.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fufcs%2Fufcs-partially-resolved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fufcs%2Fufcs-partially-resolved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fufcs%2Fufcs-partially-resolved.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,14 +1,14 @@\n-error[E0433]: failed to resolve. Not a module `Y`\n+error[E0433]: failed to resolve: not a module `Y`\n   --> $DIR/ufcs-partially-resolved.rs:58:22\n    |\n-LL |     let _: <u8 as E::Y>::NN; //~ ERROR failed to resolve. Not a module `Y`\n-   |                      ^ Not a module `Y`\n+LL |     let _: <u8 as E::Y>::NN; //~ ERROR failed to resolve: not a module `Y`\n+   |                      ^ not a module `Y`\n \n-error[E0433]: failed to resolve. Not a module `Y`\n+error[E0433]: failed to resolve: not a module `Y`\n   --> $DIR/ufcs-partially-resolved.rs:60:15\n    |\n-LL |     <u8 as E::Y>::NN; //~ ERROR failed to resolve. Not a module `Y`\n-   |               ^ Not a module `Y`\n+LL |     <u8 as E::Y>::NN; //~ ERROR failed to resolve: not a module `Y`\n+   |               ^ not a module `Y`\n \n error[E0576]: cannot find associated type `N` in trait `Tr`\n   --> $DIR/ufcs-partially-resolved.rs:29:24"}, {"sha": "8d7a62255299cd295d45822368b99ada61f85d91", "filename": "src/test/ui/unknown-tool-name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Funknown-tool-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Funknown-tool-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funknown-tool-name.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -8,5 +8,5 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[foo::bar] //~ ERROR failed to resolve. Use of undeclared type or module `foo`\n+#[foo::bar] //~ ERROR failed to resolve: use of undeclared type or module `foo`\n fn main() {}"}, {"sha": "55096614fcd3246d4465815691c84453d7acfb93", "filename": "src/test/ui/unknown-tool-name.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Funknown-tool-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Funknown-tool-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funknown-tool-name.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `foo`\n+error[E0433]: failed to resolve: use of undeclared type or module `foo`\n   --> $DIR/unknown-tool-name.rs:11:3\n    |\n-LL | #[foo::bar] //~ ERROR failed to resolve. Use of undeclared type or module `foo`\n-   |   ^^^ Use of undeclared type or module `foo`\n+LL | #[foo::bar] //~ ERROR failed to resolve: use of undeclared type or module `foo`\n+   |   ^^^ use of undeclared type or module `foo`\n \n error: aborting due to previous error\n "}, {"sha": "4592289beeb8778ad83b80c5459dc8520eb9e086", "filename": "src/test/ui/unresolved/unresolved-import.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Funresolved%2Funresolved-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Funresolved%2Funresolved-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funresolved%2Funresolved-import.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -11,7 +11,7 @@\n // ignore-tidy-linelength\n \n use foo::bar; //~ ERROR unresolved import `foo` [E0432]\n-              //~^ Maybe a missing `extern crate foo;`?\n+              //~^ maybe a missing `extern crate foo;`?\n \n use bar::Baz as x; //~ ERROR unresolved import `bar::Baz` [E0432]\n                    //~^ no `Baz` in `bar`. Did you mean to use `Bar`?\n@@ -42,7 +42,7 @@ mod m {\n     }\n \n     use MyEnum::*; //~ ERROR unresolved import `MyEnum` [E0432]\n-                   //~^ Did you mean `self::MyEnum`?\n+                   //~^ did you mean `self::MyEnum`?\n }\n \n mod items {\n@@ -51,7 +51,7 @@ mod items {\n     }\n \n     use Enum::*; //~ ERROR unresolved import `Enum` [E0432]\n-                 //~^ Did you mean `self::Enum`?\n+                 //~^ did you mean `self::Enum`?\n \n     fn item() {}\n }"}, {"sha": "7e98a41af10bd874448697507f9453f36708dbb8", "filename": "src/test/ui/unresolved/unresolved-import.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Funresolved%2Funresolved-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Funresolved%2Funresolved-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funresolved%2Funresolved-import.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `foo`\n   --> $DIR/unresolved-import.rs:13:5\n    |\n LL | use foo::bar; //~ ERROR unresolved import `foo` [E0432]\n-   |     ^^^ Maybe a missing `extern crate foo;`?\n+   |     ^^^ maybe a missing `extern crate foo;`?\n \n error[E0432]: unresolved import `bar::Baz`\n   --> $DIR/unresolved-import.rs:16:5\n@@ -26,13 +26,13 @@ error[E0432]: unresolved import `MyEnum`\n   --> $DIR/unresolved-import.rs:44:9\n    |\n LL |     use MyEnum::*; //~ ERROR unresolved import `MyEnum` [E0432]\n-   |         ^^^^^^ Did you mean `self::MyEnum`?\n+   |         ^^^^^^ did you mean `self::MyEnum`?\n \n error[E0432]: unresolved import `Enum`\n   --> $DIR/unresolved-import.rs:53:9\n    |\n LL |     use Enum::*; //~ ERROR unresolved import `Enum` [E0432]\n-   |         ^^^^ Did you mean `self::Enum`?\n+   |         ^^^^ did you mean `self::Enum`?\n \n error: aborting due to 6 previous errors\n "}, {"sha": "6c643dff79602ba0987a1724d616f521c1c0d2a0", "filename": "src/test/ui/use/use-from-trait-xc.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -20,19 +20,19 @@ error[E0432]: unresolved import `use_from_trait_xc::Foo`\n   --> $DIR/use-from-trait-xc.rs:24:24\n    |\n LL | use use_from_trait_xc::Foo::new; //~ ERROR struct `Foo` is private\n-   |                        ^^^ Not a module `Foo`\n+   |                        ^^^ not a module `Foo`\n \n error[E0432]: unresolved import `use_from_trait_xc::Foo`\n   --> $DIR/use-from-trait-xc.rs:27:24\n    |\n LL | use use_from_trait_xc::Foo::C; //~ ERROR struct `Foo` is private\n-   |                        ^^^ Not a module `Foo`\n+   |                        ^^^ not a module `Foo`\n \n error[E0432]: unresolved import `use_from_trait_xc::Bar`\n   --> $DIR/use-from-trait-xc.rs:30:24\n    |\n LL | use use_from_trait_xc::Bar::new as bnew;\n-   |                        ^^^ Not a module `Bar`\n+   |                        ^^^ not a module `Bar`\n \n error[E0432]: unresolved import `use_from_trait_xc::Baz::new`\n   --> $DIR/use-from-trait-xc.rs:33:5"}, {"sha": "afa7632058257b2f0bf16aa9776595fc62a0162f", "filename": "src/test/ui/use/use-from-trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -18,11 +18,11 @@ use Trait::C;\n \n use Foo::new;\n //~^ ERROR unresolved import `Foo` [E0432]\n-//~| Not a module `Foo`\n+//~| not a module `Foo`\n \n use Foo::C2;\n //~^ ERROR unresolved import `Foo` [E0432]\n-//~| Not a module `Foo`\n+//~| not a module `Foo`\n \n pub trait Trait {\n     fn foo();"}, {"sha": "cb0fd94fa6e395144de3dd17ee6409699126b2e5", "filename": "src/test/ui/use/use-from-trait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -20,13 +20,13 @@ error[E0432]: unresolved import `Foo`\n   --> $DIR/use-from-trait.rs:19:5\n    |\n LL | use Foo::new;\n-   |     ^^^ Not a module `Foo`\n+   |     ^^^ not a module `Foo`\n \n error[E0432]: unresolved import `Foo`\n   --> $DIR/use-from-trait.rs:23:5\n    |\n LL | use Foo::C2;\n-   |     ^^^ Not a module `Foo`\n+   |     ^^^ not a module `Foo`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "33366b2457b54809defdaf6da4e2bcc6884cd208", "filename": "src/test/ui/use/use-mod/use-mod-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-4.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -14,7 +14,7 @@ error[E0432]: unresolved import `foo`\n   --> $DIR/use-mod-4.rs:11:5\n    |\n LL | use foo::self; //~ ERROR unresolved import `foo`\n-   |     ^^^ Maybe a missing `extern crate foo;`?\n+   |     ^^^ maybe a missing `extern crate foo;`?\n \n error: aborting due to 3 previous errors\n "}, {"sha": "1b49d358261df3e39ff37c71318e599d6c1f67bb", "filename": "src/test/ui/use/use-self-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-self-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-self-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-self-type.rs?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -14,7 +14,7 @@ impl S {\n     fn f() {}\n     fn g() {\n         use Self::f; //~ ERROR unresolved import\n-        pub(in Self::f) struct Z; //~ ERROR Use of undeclared type or module `Self`\n+        pub(in Self::f) struct Z; //~ ERROR use of undeclared type or module `Self`\n     }\n }\n "}, {"sha": "e4cb0f9f3d8351e935f594b5732fd0c70f029824", "filename": "src/test/ui/use/use-self-type.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-self-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-self-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-self-type.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,14 +1,14 @@\n-error[E0433]: failed to resolve. Use of undeclared type or module `Self`\n+error[E0433]: failed to resolve: use of undeclared type or module `Self`\n   --> $DIR/use-self-type.rs:17:16\n    |\n-LL |         pub(in Self::f) struct Z; //~ ERROR Use of undeclared type or module `Self`\n-   |                ^^^^ Use of undeclared type or module `Self`\n+LL |         pub(in Self::f) struct Z; //~ ERROR use of undeclared type or module `Self`\n+   |                ^^^^ use of undeclared type or module `Self`\n \n error[E0432]: unresolved import `Self`\n   --> $DIR/use-self-type.rs:16:13\n    |\n LL |         use Self::f; //~ ERROR unresolved import\n-   |             ^^^^ Use of undeclared type or module `Self`\n+   |             ^^^^ use of undeclared type or module `Self`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "fc4455c7d6e4eb44b0fec59e12baa66e90ca3814", "filename": "src/test/ui/use/use-super-global-path.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-super-global-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3c13e326e16e378910352fd243a84a0406a53/src%2Ftest%2Fui%2Fuse%2Fuse-super-global-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-super-global-path.stderr?ref=4fc3c13e326e16e378910352fd243a84a0406a53", "patch": "@@ -1,10 +1,10 @@\n-error[E0433]: failed to resolve. global paths cannot start with `super`\n+error[E0433]: failed to resolve: global paths cannot start with `super`\n   --> $DIR/use-super-global-path.rs:17:11\n    |\n LL |     use ::super::{S, Z}; //~ ERROR global paths cannot start with `super`\n    |           ^^^^^ global paths cannot start with `super`\n \n-error[E0433]: failed to resolve. global paths cannot start with `super`\n+error[E0433]: failed to resolve: global paths cannot start with `super`\n   --> $DIR/use-super-global-path.rs:20:15\n    |\n LL |         use ::super::main; //~ ERROR global paths cannot start with `super`"}]}