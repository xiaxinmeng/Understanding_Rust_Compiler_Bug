{"sha": "6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMDc4ZGI5NTJjZjc2YjM1YmJkODU3N2ZlNmE5ZjVkOWUxMmM1NjY=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-13T00:53:25Z"}, "committer": {"name": "Luqman Aden", "email": "laden@mozilla.com", "date": "2013-03-16T01:55:43Z"}, "message": "Actually pass inline asm operands around.", "tree": {"sha": "2682c9a4aaf0ede8ae49cc5294429176f830cb4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2682c9a4aaf0ede8ae49cc5294429176f830cb4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "html_url": "https://github.com/rust-lang/rust/commit/6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "471d2b17657bdaea357faeaa3e857f8a758bfbe3", "url": "https://api.github.com/repos/rust-lang/rust/commits/471d2b17657bdaea357faeaa3e857f8a758bfbe3", "html_url": "https://github.com/rust-lang/rust/commit/471d2b17657bdaea357faeaa3e857f8a758bfbe3"}], "stats": {"total": 124, "additions": 100, "deletions": 24}, "files": [{"sha": "2afe9564b207dc432e599e24e2fb423edf792975", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "patch": "@@ -1347,7 +1347,15 @@ pub impl Liveness {\n             self.propagate_through_expr(e, succ)\n           }\n \n-          expr_inline_asm(*) |\n+          expr_inline_asm(_, ins, outs, _, _, _) =>{\n+            let succ = do ins.foldr(succ) |&(_, expr), succ| {\n+                self.propagate_through_expr(expr, succ)\n+            };\n+            do outs.foldr(succ) |&(_, expr), succ| {\n+                self.propagate_through_expr(expr, succ)\n+            }\n+          }\n+\n           expr_lit(*) => {\n             succ\n           }\n@@ -1613,6 +1621,20 @@ fn check_expr(expr: @expr, &&self: @Liveness, vt: vt<@Liveness>) {\n         visit::visit_expr(expr, self, vt);\n       }\n \n+      expr_inline_asm(_, ins, outs, _, _, _) => {\n+        for ins.each |&(_, in)| {\n+          (vt.visit_expr)(in, self, vt);\n+        }\n+\n+        // Output operands must be lvalues\n+        for outs.each |&(_, out)| {\n+          self.check_lvalue(out, vt);\n+          (vt.visit_expr)(out, self, vt);\n+        }\n+\n+        visit::visit_expr(expr, self, vt);\n+      }\n+\n       // no correctness conditions related to liveness\n       expr_call(*) | expr_method_call(*) | expr_if(*) | expr_match(*) |\n       expr_while(*) | expr_loop(*) | expr_index(*) | expr_field(*) |\n@@ -1621,7 +1643,7 @@ fn check_expr(expr: @expr, &&self: @Liveness, vt: vt<@Liveness>) {\n       expr_cast(*) | expr_unary(*) | expr_ret(*) | expr_break(*) |\n       expr_again(*) | expr_lit(_) | expr_block(*) | expr_swap(*) |\n       expr_mac(*) | expr_addr_of(*) | expr_struct(*) | expr_repeat(*) |\n-      expr_paren(*) | expr_inline_asm(*) => {\n+      expr_paren(*) => {\n         visit::visit_expr(expr, self, vt);\n       }\n     }"}, {"sha": "372c54f2b09f92b758cd13f934e8daa3cd477620", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "patch": "@@ -558,10 +558,18 @@ pub impl VisitContext {\n                 self.use_expr(base, Read, visitor);\n             }\n \n+            expr_inline_asm(_, ref ins, ref outs, _, _, _) => {\n+                for ins.each |&(c, in)| {\n+                    // XXX: Do something?\n+                }\n+                for outs.each |&(c, out)| {\n+                    // XXX: Do something?\n+                }\n+            }\n+\n             expr_break(*) |\n             expr_again(*) |\n-            expr_lit(*)   |\n-            expr_inline_asm(*) => {}\n+            expr_lit(*) => {}\n \n             expr_loop(ref blk, _) => {\n                 self.consume_block(blk, visitor);"}, {"sha": "e634dfcbe65c099467afe4f03fca7c688284636f", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "patch": "@@ -557,6 +557,18 @@ fn trans_rvalue_stmt_unadjusted(bcx: block, expr: @ast::expr) -> block {\n         ast::expr_paren(a) => {\n             return trans_rvalue_stmt_unadjusted(bcx, a);\n         }\n+        ast::expr_inline_asm(asm, ref ins, ref outs,\n+                             cons, volatile, alignstack) => {\n+            // XXX: cons doesn't actual contain ALL the stuff we should\n+            // be passing since the constraints for in/outputs aren't included\n+            do str::as_c_str(*asm) |a| {\n+                do str::as_c_str(*cons) |c| {\n+                    InlineAsmCall(bcx, a, c, volatile, alignstack,\n+                                  lib::llvm::AD_ATT);\n+                }\n+            }\n+            return bcx;\n+        }\n         _ => {\n             bcx.tcx().sess.span_bug(\n                 expr.span,\n@@ -691,17 +703,6 @@ fn trans_rvalue_dps_unadjusted(bcx: block, expr: @ast::expr,\n         ast::expr_assign_op(op, dst, src) => {\n             return trans_assign_op(bcx, expr, op, dst, src);\n         }\n-        ast::expr_inline_asm(asm, cons, volatile, alignstack) => {\n-            // XXX: cons doesn't actual contain ALL the stuff we should\n-            // be passing since the constraints for in/outputs aren't included\n-            do str::as_c_str(*asm) |a| {\n-                do str::as_c_str(*cons) |c| {\n-                    InlineAsmCall(bcx, a, c, volatile, alignstack,\n-                                  lib::llvm::AD_ATT);\n-                }\n-            }\n-            return bcx;\n-        }\n         _ => {\n             bcx.tcx().sess.span_bug(\n                 expr.span,"}, {"sha": "8439d941c90a67507b49e1e15bf8b62c18458f8f", "filename": "src/librustc/middle/trans/type_use.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs?ref=6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "patch": "@@ -348,12 +348,17 @@ pub fn mark_for_expr(cx: Context, e: @expr) {\n         }\n         mark_for_method_call(cx, e.id, e.callee_id);\n       }\n+\n+      expr_inline_asm(_, ref ins, ref outs, _, _, _) => {\n+          // XXX Do something, maybe?\n+      }\n+\n       expr_paren(e) => mark_for_expr(cx, e),\n \n       expr_match(*) | expr_block(_) | expr_if(*) | expr_while(*) |\n       expr_break(_) | expr_again(_) | expr_unary(_, _) | expr_lit(_) |\n       expr_mac(_) | expr_addr_of(_, _) | expr_ret(_) | expr_loop(_, _) |\n-      expr_loop_body(_) | expr_do_body(_) | expr_inline_asm(*) => ()\n+      expr_loop_body(_) | expr_do_body(_) => ()\n     }\n }\n "}, {"sha": "f3fff416c5591219f447212f56161ac88a4cb8a9", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "patch": "@@ -2317,8 +2317,15 @@ pub fn check_expr_with_unifier(fcx: @mut FnCtxt,\n         let region_lb = ty::re_scope(expr.id);\n         instantiate_path(fcx, pth, tpt, expr.span, expr.id, region_lb);\n       }\n-      ast::expr_inline_asm(*) => {\n+      ast::expr_inline_asm(_, ins, outs, _, _, _) => {\n           fcx.require_unsafe(expr.span, ~\"use of inline assembly\");\n+\n+          for ins.each |&(_, in)| {\n+              check_expr(fcx, in);\n+          }\n+          for outs.each |&(_, out)| {\n+              check_expr(fcx, out);\n+          }\n           fcx.write_nil(id);\n       }\n       ast::expr_mac(_) => tcx.sess.bug(~\"unexpanded macro\"),"}, {"sha": "e5fb2ad153cf12c9974febba41b847107a4b9920", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "patch": "@@ -601,8 +601,10 @@ pub enum expr_ {\n     expr_ret(Option<@expr>),\n     expr_log(log_level, @expr, @expr),\n \n-    /* asm, clobbers + constraints, volatile, align stack */\n-    expr_inline_asm(@~str, @~str, bool, bool),\n+    expr_inline_asm(@~str,              // asm\n+                    ~[(@~str, @expr)],  // inputs\n+                    ~[(@~str, @expr)],  // outputs\n+                    @~str, bool, bool), // clobbers, volatile, align stack\n \n     expr_mac(mac),\n "}, {"sha": "0110c186cfa575b924c8f0f7024795f5a2eee886", "filename": "src/libsyntax/ext/asm.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibsyntax%2Fext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibsyntax%2Fext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fasm.rs?ref=6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "patch": "@@ -156,7 +156,8 @@ pub fn expand_asm(cx: @ext_ctxt, sp: span, tts: &[ast::token_tree])\n     MRExpr(@ast::expr {\n         id: cx.next_id(),\n         callee_id: cx.next_id(),\n-        node: ast::expr_inline_asm(@asm, @cons, volatile, alignstack),\n+        node: ast::expr_inline_asm(@asm, inputs, outputs, \n+                                   @cons, volatile, alignstack),\n         span: sp\n     })\n }"}, {"sha": "a8952f313a5b1048dddb7237a10efec7d67340c2", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "patch": "@@ -560,7 +560,14 @@ pub fn noop_fold_expr(e: &expr_, fld: @ast_fold) -> expr_ {\n                 fld.fold_expr(e)\n             )\n         }\n-        expr_inline_asm(*) => copy *e,\n+        expr_inline_asm(asm, ins, outs, c, v, a) => {\n+            expr_inline_asm(\n+                asm,\n+                ins.map(|&(c, in)| (c, fld.fold_expr(in))),\n+                outs.map(|&(c, out)| (c, fld.fold_expr(out))),\n+                c, v, a\n+            )\n+        }\n         expr_mac(ref mac) => expr_mac(fold_mac((*mac))),\n         expr_struct(path, ref fields, maybe_expr) => {\n             expr_struct("}, {"sha": "370434010b2c637d5e89096f46ad3f1922b8e213", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "patch": "@@ -1403,15 +1403,31 @@ pub fn print_expr(s: @ps, &&expr: @ast::expr) {\n           }\n         }\n       }\n-      ast::expr_inline_asm(a, c, v, _) => {\n+      ast::expr_inline_asm(a, in, out, c, v, _) => {\n         if v {\n             word(s.s, ~\"__volatile__ asm!\");\n         } else {\n             word(s.s, ~\"asm!\");\n         }\n         popen(s);\n         print_string(s, *a);\n-        word_space(s, ~\",\");\n+        word_space(s, ~\":\");\n+        for out.each |&(co, o)| {\n+            print_string(s, *co);\n+            popen(s);\n+            print_expr(s, o);\n+            pclose(s);\n+            word_space(s, ~\",\");\n+        }\n+        word_space(s, ~\":\");\n+        for in.each |&(co, o)| {\n+            print_string(s, *co);\n+            popen(s);\n+            print_expr(s, o);\n+            pclose(s);\n+            word_space(s, ~\",\");\n+        }\n+        word_space(s, ~\":\");\n         print_string(s, *c);\n         pclose(s);\n       }"}, {"sha": "1fb81b5c70270f55f6db9bc24c08a50344ece600", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d078db952cf76b35bbd8577fe6a9f5d9e12c566/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=6d078db952cf76b35bbd8577fe6a9f5d9e12c566", "patch": "@@ -562,7 +562,14 @@ pub fn visit_expr<E>(ex: @expr, e: E, v: vt<E>) {\n         }\n         expr_mac(ref mac) => visit_mac((*mac), e, v),\n         expr_paren(x) => (v.visit_expr)(x, e, v),\n-        expr_inline_asm(*) => (),\n+        expr_inline_asm(_, ins, outs, _, _, _) => {\n+            for ins.each |&(c, in)| {\n+                (v.visit_expr)(in, e, v);\n+            }\n+            for outs.each |&(c, out)| {\n+                (v.visit_expr)(out, e, v);\n+            }\n+        }\n     }\n     (v.visit_expr_post)(ex, e, v);\n }"}]}