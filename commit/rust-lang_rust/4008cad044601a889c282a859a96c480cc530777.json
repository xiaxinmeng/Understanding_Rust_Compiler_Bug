{"sha": "4008cad044601a889c282a859a96c480cc530777", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMDhjYWQwNDQ2MDFhODg5YzI4MmE4NTlhOTZjNDgwY2M1MzA3Nzc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-10T20:22:29Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-10T20:22:29Z"}, "message": "stdlib: Remove the cast from ioivec", "tree": {"sha": "3355e89859965d47f32201ddd28a2d35319c3844", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3355e89859965d47f32201ddd28a2d35319c3844"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4008cad044601a889c282a859a96c480cc530777", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4008cad044601a889c282a859a96c480cc530777", "html_url": "https://github.com/rust-lang/rust/commit/4008cad044601a889c282a859a96c480cc530777", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4008cad044601a889c282a859a96c480cc530777/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7871b55597b368bd647b94187a805f29d512b6e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7871b55597b368bd647b94187a805f29d512b6e5", "html_url": "https://github.com/rust-lang/rust/commit/7871b55597b368bd647b94187a805f29d512b6e5"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "2db223b4ea9838875b88adeae960a62bd7868e5a", "filename": "src/lib/ioivec.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4008cad044601a889c282a859a96c480cc530777/src%2Flib%2Fioivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4008cad044601a889c282a859a96c480cc530777/src%2Flib%2Fioivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fioivec.rs?ref=4008cad044601a889c282a859a96c480cc530777", "patch": "@@ -398,8 +398,7 @@ obj byte_buf_writer(mutable_byte_buf buf) {\n             // FIXME: Fix our type system. There's no reason you shouldn't be\n             // able to add a mutable vector to an immutable one.\n \n-            let u8[mutable] mv = unsafe::reinterpret_cast(v);\n-            buf.buf += mv;\n+            for (u8 b in v) { buf.buf += ~[mutable b]; }\n             buf.pos += ivec::len[u8](v);\n             ret;\n         }"}]}