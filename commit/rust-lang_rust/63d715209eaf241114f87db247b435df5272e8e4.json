{"sha": "63d715209eaf241114f87db247b435df5272e8e4", "node_id": "C_kwDOAAsO6NoAKDYzZDcxNTIwOWVhZjI0MTExNGY4N2RiMjQ3YjQzNWRmNTI3MmU4ZTQ", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2021-10-18T06:46:11Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2021-10-18T06:46:11Z"}, "message": "Remove unneeded allow", "tree": {"sha": "5a56bda1ee3bb6123443b1fcdb6dc2b95bd8282d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a56bda1ee3bb6123443b1fcdb6dc2b95bd8282d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63d715209eaf241114f87db247b435df5272e8e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63d715209eaf241114f87db247b435df5272e8e4", "html_url": "https://github.com/rust-lang/rust/commit/63d715209eaf241114f87db247b435df5272e8e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63d715209eaf241114f87db247b435df5272e8e4/comments", "author": null, "committer": null, "parents": [{"sha": "af8524004951bc978681b1aa4e7a0778b112c937", "url": "https://api.github.com/repos/rust-lang/rust/commits/af8524004951bc978681b1aa4e7a0778b112c937", "html_url": "https://github.com/rust-lang/rust/commit/af8524004951bc978681b1aa4e7a0778b112c937"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "414f465c49414088113b36ee2eb09f45c72b9964", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/63d715209eaf241114f87db247b435df5272e8e4/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63d715209eaf241114f87db247b435df5272e8e4/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=63d715209eaf241114f87db247b435df5272e8e4", "patch": "@@ -66,7 +66,6 @@ fn is_allowed(cx: &LateContext<'_>, cmp: BinOp, left: &Expr<'_>, right: &Expr<'_\n         && constant_simple(cx, cx.typeck_results(), left) == Some(Constant::Int(1))\n }\n \n-#[allow(clippy::cast_possible_wrap)]\n fn check(cx: &LateContext<'_>, e: &Expr<'_>, m: i8, span: Span, arg: Span) {\n     if let Some(Constant::Int(v)) = constant_simple(cx, cx.typeck_results(), e) {\n         let check = match *cx.typeck_results().expr_ty(e).kind() {"}]}